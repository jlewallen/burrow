<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="1222"><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1637%" y="565" width="0.0818%" height="15" fill="rgb(247,99,32)" fg:x="2" fg:w="1"/><text x="0.4137%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1637%" y="549" width="0.0818%" height="15" fill="rgb(240,74,50)" fg:x="2" fg:w="1"/><text x="0.4137%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.1637%" y="597" width="0.1637%" height="15" fill="rgb(218,54,8)" fg:x="2" fg:w="2"/><text x="0.4137%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.1637%" y="581" width="0.1637%" height="15" fill="rgb(227,132,20)" fg:x="2" fg:w="2"/><text x="0.4137%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="0.2455%" y="565" width="0.0818%" height="15" fill="rgb(232,134,12)" fg:x="3" fg:w="1"/><text x="0.4955%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.2455%" y="549" width="0.0818%" height="15" fill="rgb(250,129,18)" fg:x="3" fg:w="1"/><text x="0.4955%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.3273%" y="581" width="0.0818%" height="15" fill="rgb(232,129,47)" fg:x="4" fg:w="1"/><text x="0.5773%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4092%" y="501" width="0.1637%" height="15" fill="rgb(230,31,40)" fg:x="5" fg:w="2"/><text x="0.6592%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.5728%" y="501" width="0.1637%" height="15" fill="rgb(232,126,10)" fg:x="7" fg:w="2"/><text x="0.8228%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6547%" y="485" width="0.0818%" height="15" fill="rgb(205,46,31)" fg:x="8" fg:w="1"/><text x="0.9047%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8183%" y="469" width="0.0818%" height="15" fill="rgb(232,37,37)" fg:x="10" fg:w="1"/><text x="1.0683%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.8183%" y="485" width="0.1637%" height="15" fill="rgb(240,91,16)" fg:x="10" fg:w="2"/><text x="1.0683%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9002%" y="469" width="0.0818%" height="15" fill="rgb(224,160,9)" fg:x="11" fg:w="1"/><text x="1.1502%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9002%" y="453" width="0.0818%" height="15" fill="rgb(215,116,14)" fg:x="11" fg:w="1"/><text x="1.1502%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9820%" y="485" width="0.0818%" height="15" fill="rgb(235,46,36)" fg:x="12" fg:w="1"/><text x="1.2320%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.0638%" y="469" width="0.0818%" height="15" fill="rgb(238,39,28)" fg:x="13" fg:w="1"/><text x="1.3138%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.2275%" y="453" width="0.1637%" height="15" fill="rgb(242,125,29)" fg:x="15" fg:w="2"/><text x="1.4775%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.3912%" y="453" width="0.0818%" height="15" fill="rgb(238,211,30)" fg:x="17" fg:w="1"/><text x="1.6412%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.23%)</title><rect x="0.4092%" y="517" width="1.2275%" height="15" fill="rgb(227,201,28)" fg:x="5" fg:w="15"/><text x="0.6592%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="0.7365%" y="501" width="0.9002%" height="15" fill="rgb(238,77,29)" fg:x="9" fg:w="11"/><text x="0.9865%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="1.0638%" y="485" width="0.5728%" height="15" fill="rgb(213,221,40)" fg:x="13" fg:w="7"/><text x="1.3138%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="1.1457%" y="469" width="0.4910%" height="15" fill="rgb(226,220,44)" fg:x="14" fg:w="6"/><text x="1.3957%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.4730%" y="453" width="0.1637%" height="15" fill="rgb(228,90,23)" fg:x="18" fg:w="2"/><text x="1.7230%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5548%" y="437" width="0.0818%" height="15" fill="rgb(235,72,29)" fg:x="19" fg:w="1"/><text x="1.8048%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (17 samples, 1.39%)</title><rect x="0.3273%" y="597" width="1.3912%" height="15" fill="rgb(248,117,39)" fg:x="4" fg:w="17"/><text x="0.5773%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.31%)</title><rect x="0.4092%" y="581" width="1.3093%" height="15" fill="rgb(225,43,28)" fg:x="5" fg:w="16"/><text x="0.6592%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (16 samples, 1.31%)</title><rect x="0.4092%" y="565" width="1.3093%" height="15" fill="rgb(240,93,4)" fg:x="5" fg:w="16"/><text x="0.6592%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.31%)</title><rect x="0.4092%" y="549" width="1.3093%" height="15" fill="rgb(234,178,27)" fg:x="5" fg:w="16"/><text x="0.6592%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.31%)</title><rect x="0.4092%" y="533" width="1.3093%" height="15" fill="rgb(254,88,22)" fg:x="5" fg:w="16"/><text x="0.6592%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="1.6367%" y="517" width="0.0818%" height="15" fill="rgb(240,206,50)" fg:x="20" fg:w="1"/><text x="1.8867%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.72%)</title><rect x="0.0818%" y="613" width="1.7185%" height="15" fill="rgb(249,103,8)" fg:x="1" fg:w="21"/><text x="0.3318%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="1.7185%" y="597" width="0.0818%" height="15" fill="rgb(241,178,36)" fg:x="21" fg:w="1"/><text x="1.9685%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="1.7185%" y="581" width="0.0818%" height="15" fill="rgb(246,110,15)" fg:x="21" fg:w="1"/><text x="1.9685%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.8003%" y="565" width="0.0818%" height="15" fill="rgb(207,14,43)" fg:x="22" fg:w="1"/><text x="2.0503%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="1.8822%" y="549" width="0.0818%" height="15" fill="rgb(253,219,19)" fg:x="23" fg:w="1"/><text x="2.1322%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1277%" y="517" width="0.0818%" height="15" fill="rgb(216,126,5)" fg:x="26" fg:w="1"/><text x="2.3777%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.2095%" y="517" width="0.0818%" height="15" fill="rgb(218,78,42)" fg:x="27" fg:w="1"/><text x="2.4595%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.2095%" y="501" width="0.0818%" height="15" fill="rgb(215,154,40)" fg:x="27" fg:w="1"/><text x="2.4595%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.2095%" y="485" width="0.0818%" height="15" fill="rgb(235,129,32)" fg:x="27" fg:w="1"/><text x="2.4595%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.2095%" y="469" width="0.0818%" height="15" fill="rgb(218,51,8)" fg:x="27" fg:w="1"/><text x="2.4595%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.2095%" y="453" width="0.0818%" height="15" fill="rgb(245,48,4)" fg:x="27" fg:w="1"/><text x="2.4595%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.2095%" y="437" width="0.0818%" height="15" fill="rgb(250,175,12)" fg:x="27" fg:w="1"/><text x="2.4595%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.2095%" y="421" width="0.0818%" height="15" fill="rgb(237,95,40)" fg:x="27" fg:w="1"/><text x="2.4595%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.2095%" y="405" width="0.0818%" height="15" fill="rgb(244,120,0)" fg:x="27" fg:w="1"/><text x="2.4595%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.2095%" y="389" width="0.0818%" height="15" fill="rgb(241,19,42)" fg:x="27" fg:w="1"/><text x="2.4595%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.2095%" y="373" width="0.0818%" height="15" fill="rgb(217,174,48)" fg:x="27" fg:w="1"/><text x="2.4595%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.2095%" y="357" width="0.0818%" height="15" fill="rgb(239,36,38)" fg:x="27" fg:w="1"/><text x="2.4595%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.2095%" y="341" width="0.0818%" height="15" fill="rgb(220,63,49)" fg:x="27" fg:w="1"/><text x="2.4595%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.2095%" y="325" width="0.0818%" height="15" fill="rgb(240,101,13)" fg:x="27" fg:w="1"/><text x="2.4595%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="2.2095%" y="309" width="0.0818%" height="15" fill="rgb(209,184,51)" fg:x="27" fg:w="1"/><text x="2.4595%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.2095%" y="293" width="0.0818%" height="15" fill="rgb(206,136,39)" fg:x="27" fg:w="1"/><text x="2.4595%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="2.2095%" y="277" width="0.0818%" height="15" fill="rgb(254,47,45)" fg:x="27" fg:w="1"/><text x="2.4595%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="2.2095%" y="261" width="0.0818%" height="15" fill="rgb(252,103,20)" fg:x="27" fg:w="1"/><text x="2.4595%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="2.2095%" y="245" width="0.0818%" height="15" fill="rgb(230,69,12)" fg:x="27" fg:w="1"/><text x="2.4595%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.2095%" y="229" width="0.0818%" height="15" fill="rgb(219,2,28)" fg:x="27" fg:w="1"/><text x="2.4595%" y="239.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="2.2913%" y="517" width="0.0818%" height="15" fill="rgb(210,9,12)" fg:x="28" fg:w="1"/><text x="2.5413%" y="527.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="2.2913%" y="501" width="0.0818%" height="15" fill="rgb(235,99,33)" fg:x="28" fg:w="1"/><text x="2.5413%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.2913%" y="485" width="0.0818%" height="15" fill="rgb(230,11,38)" fg:x="28" fg:w="1"/><text x="2.5413%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.2913%" y="469" width="0.0818%" height="15" fill="rgb(217,129,0)" fg:x="28" fg:w="1"/><text x="2.5413%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.2913%" y="453" width="0.0818%" height="15" fill="rgb(222,198,4)" fg:x="28" fg:w="1"/><text x="2.5413%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="2.2913%" y="437" width="0.0818%" height="15" fill="rgb(246,170,27)" fg:x="28" fg:w="1"/><text x="2.5413%" y="447.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="2.3732%" y="501" width="0.0818%" height="15" fill="rgb(229,17,28)" fg:x="29" fg:w="1"/><text x="2.6232%" y="511.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="2.3732%" y="485" width="0.0818%" height="15" fill="rgb(233,198,48)" fg:x="29" fg:w="1"/><text x="2.6232%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="2.3732%" y="469" width="0.0818%" height="15" fill="rgb(238,103,23)" fg:x="29" fg:w="1"/><text x="2.6232%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="2.3732%" y="453" width="0.0818%" height="15" fill="rgb(206,91,41)" fg:x="29" fg:w="1"/><text x="2.6232%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="2.3732%" y="437" width="0.0818%" height="15" fill="rgb(227,34,25)" fg:x="29" fg:w="1"/><text x="2.6232%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="2.3732%" y="421" width="0.0818%" height="15" fill="rgb(210,110,44)" fg:x="29" fg:w="1"/><text x="2.6232%" y="431.50"></text></g><g><title>dlerror (5 samples, 0.41%)</title><rect x="2.4550%" y="501" width="0.4092%" height="15" fill="rgb(216,189,8)" fg:x="30" fg:w="5"/><text x="2.7050%" y="511.50"></text></g><g><title>__asprintf (5 samples, 0.41%)</title><rect x="2.4550%" y="485" width="0.4092%" height="15" fill="rgb(234,9,46)" fg:x="30" fg:w="5"/><text x="2.7050%" y="495.50"></text></g><g><title>_IO_setb (1 samples, 0.08%)</title><rect x="2.7823%" y="469" width="0.0818%" height="15" fill="rgb(251,200,5)" fg:x="34" fg:w="1"/><text x="3.0323%" y="479.50"></text></g><g><title>dlopen (30 samples, 2.45%)</title><rect x="2.8642%" y="501" width="2.4550%" height="15" fill="rgb(238,165,37)" fg:x="35" fg:w="30"/><text x="3.1142%" y="511.50">dl..</text></g><g><title>_dl_catch_error (29 samples, 2.37%)</title><rect x="2.9460%" y="485" width="2.3732%" height="15" fill="rgb(232,77,38)" fg:x="36" fg:w="29"/><text x="3.1960%" y="495.50">_d..</text></g><g><title>_dl_catch_exception (29 samples, 2.37%)</title><rect x="2.9460%" y="469" width="2.3732%" height="15" fill="rgb(253,179,33)" fg:x="36" fg:w="29"/><text x="3.1960%" y="479.50">_d..</text></g><g><title>_dl_catch_exception (28 samples, 2.29%)</title><rect x="3.0278%" y="453" width="2.2913%" height="15" fill="rgb(240,13,35)" fg:x="37" fg:w="28"/><text x="3.2778%" y="463.50">_..</text></g><g><title>_dl_catch_exception (26 samples, 2.13%)</title><rect x="3.1915%" y="437" width="2.1277%" height="15" fill="rgb(242,150,49)" fg:x="39" fg:w="26"/><text x="3.4415%" y="447.50">_..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (42 samples, 3.44%)</title><rect x="1.9640%" y="533" width="3.4370%" height="15" fill="rgb(237,176,28)" fg:x="24" fg:w="42"/><text x="2.2140%" y="543.50">&lt;pl..</text></g><g><title>libloading::safe::Library::new (37 samples, 3.03%)</title><rect x="2.3732%" y="517" width="3.0278%" height="15" fill="rgb(214,176,33)" fg:x="29" fg:w="37"/><text x="2.6232%" y="527.50">lib..</text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="5.3191%" y="501" width="0.0818%" height="15" fill="rgb(214,25,12)" fg:x="65" fg:w="1"/><text x="5.5691%" y="511.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="5.3191%" y="485" width="0.0818%" height="15" fill="rgb(238,190,20)" fg:x="65" fg:w="1"/><text x="5.5691%" y="495.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="5.3191%" y="469" width="0.0818%" height="15" fill="rgb(208,11,19)" fg:x="65" fg:w="1"/><text x="5.5691%" y="479.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="5.3191%" y="453" width="0.0818%" height="15" fill="rgb(239,90,4)" fg:x="65" fg:w="1"/><text x="5.5691%" y="463.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="5.3191%" y="437" width="0.0818%" height="15" fill="rgb(248,110,3)" fg:x="65" fg:w="1"/><text x="5.5691%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="5.4010%" y="533" width="0.0818%" height="15" fill="rgb(210,41,30)" fg:x="66" fg:w="1"/><text x="5.6510%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="5.4010%" y="517" width="0.0818%" height="15" fill="rgb(239,36,8)" fg:x="66" fg:w="1"/><text x="5.6510%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (44 samples, 3.60%)</title><rect x="1.9640%" y="549" width="3.6007%" height="15" fill="rgb(237,201,47)" fg:x="24" fg:w="44"/><text x="2.2140%" y="559.50">kern..</text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="5.4828%" y="533" width="0.0818%" height="15" fill="rgb(224,140,29)" fg:x="67" fg:w="1"/><text x="5.7328%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="5.4828%" y="517" width="0.0818%" height="15" fill="rgb(231,209,17)" fg:x="67" fg:w="1"/><text x="5.7328%" y="527.50"></text></g><g><title>engine::session::Session::initialize (49 samples, 4.01%)</title><rect x="1.8822%" y="565" width="4.0098%" height="15" fill="rgb(249,196,1)" fg:x="23" fg:w="49"/><text x="2.1322%" y="575.50">engi..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.33%)</title><rect x="5.5646%" y="549" width="0.3273%" height="15" fill="rgb(223,207,51)" fg:x="68" fg:w="4"/><text x="5.8146%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.7283%" y="533" width="0.1637%" height="15" fill="rgb(210,14,40)" fg:x="70" fg:w="2"/><text x="5.9783%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.8101%" y="517" width="0.0818%" height="15" fill="rgb(250,20,52)" fg:x="71" fg:w="1"/><text x="6.0601%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.8101%" y="501" width="0.0818%" height="15" fill="rgb(241,46,11)" fg:x="71" fg:w="1"/><text x="6.0601%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.8101%" y="485" width="0.0818%" height="15" fill="rgb(219,105,5)" fg:x="71" fg:w="1"/><text x="6.0601%" y="495.50"></text></g><g><title>&lt;plugins_core::chat::ChatPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="6.0556%" y="533" width="0.0818%" height="15" fill="rgb(252,77,35)" fg:x="74" fg:w="1"/><text x="6.3056%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (54 samples, 4.42%)</title><rect x="1.8003%" y="613" width="4.4190%" height="15" fill="rgb(243,119,2)" fg:x="22" fg:w="54"/><text x="2.0503%" y="623.50">&lt;engi..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (54 samples, 4.42%)</title><rect x="1.8003%" y="597" width="4.4190%" height="15" fill="rgb(206,82,28)" fg:x="22" fg:w="54"/><text x="2.0503%" y="607.50">engin..</text></g><g><title>engine::session::Session::new (54 samples, 4.42%)</title><rect x="1.8003%" y="581" width="4.4190%" height="15" fill="rgb(227,120,12)" fg:x="22" fg:w="54"/><text x="2.0503%" y="591.50">engin..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (4 samples, 0.33%)</title><rect x="5.8920%" y="565" width="0.3273%" height="15" fill="rgb(229,134,41)" fg:x="72" fg:w="4"/><text x="6.1420%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="5.8920%" y="549" width="0.3273%" height="15" fill="rgb(239,96,32)" fg:x="72" fg:w="4"/><text x="6.1420%" y="559.50"></text></g><g><title>&lt;plugins_core::memory::MemoryPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="6.1375%" y="533" width="0.0818%" height="15" fill="rgb(225,46,27)" fg:x="75" fg:w="1"/><text x="6.3875%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.3011%" y="597" width="0.0818%" height="15" fill="rgb(215,168,2)" fg:x="77" fg:w="1"/><text x="6.5511%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.3011%" y="581" width="0.0818%" height="15" fill="rgb(207,170,52)" fg:x="77" fg:w="1"/><text x="6.5511%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.3830%" y="581" width="0.0818%" height="15" fill="rgb(237,198,36)" fg:x="78" fg:w="1"/><text x="6.6330%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.16%)</title><rect x="6.3830%" y="597" width="0.1637%" height="15" fill="rgb(213,27,14)" fg:x="78" fg:w="2"/><text x="6.6330%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="6.4648%" y="581" width="0.0818%" height="15" fill="rgb(218,77,5)" fg:x="79" fg:w="1"/><text x="6.7148%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="6.4648%" y="565" width="0.0818%" height="15" fill="rgb(230,219,39)" fg:x="79" fg:w="1"/><text x="6.7148%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.4648%" y="549" width="0.0818%" height="15" fill="rgb(245,177,7)" fg:x="79" fg:w="1"/><text x="6.7148%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="6.5466%" y="581" width="0.0818%" height="15" fill="rgb(246,44,46)" fg:x="80" fg:w="1"/><text x="6.7966%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.5466%" y="565" width="0.0818%" height="15" fill="rgb(207,173,15)" fg:x="80" fg:w="1"/><text x="6.7966%" y="575.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="6.6285%" y="581" width="0.0818%" height="15" fill="rgb(245,170,50)" fg:x="81" fg:w="1"/><text x="6.8785%" y="591.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="6.6285%" y="565" width="0.0818%" height="15" fill="rgb(233,156,21)" fg:x="81" fg:w="1"/><text x="6.8785%" y="575.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="6.6285%" y="549" width="0.0818%" height="15" fill="rgb(253,146,27)" fg:x="81" fg:w="1"/><text x="6.8785%" y="559.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="6.6285%" y="533" width="0.0818%" height="15" fill="rgb(247,66,29)" fg:x="81" fg:w="1"/><text x="6.8785%" y="543.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="6.6285%" y="517" width="0.0818%" height="15" fill="rgb(218,207,26)" fg:x="81" fg:w="1"/><text x="6.8785%" y="527.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="6.6285%" y="501" width="0.0818%" height="15" fill="rgb(234,93,26)" fg:x="81" fg:w="1"/><text x="6.8785%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="6.6285%" y="485" width="0.0818%" height="15" fill="rgb(214,75,48)" fg:x="81" fg:w="1"/><text x="6.8785%" y="495.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="6.6285%" y="469" width="0.0818%" height="15" fill="rgb(229,119,22)" fg:x="81" fg:w="1"/><text x="6.8785%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="6.7921%" y="549" width="0.2455%" height="15" fill="rgb(226,153,19)" fg:x="83" fg:w="3"/><text x="7.0421%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="6.7921%" y="533" width="0.2455%" height="15" fill="rgb(220,204,36)" fg:x="83" fg:w="3"/><text x="7.0421%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.25%)</title><rect x="6.7921%" y="517" width="0.2455%" height="15" fill="rgb(253,181,43)" fg:x="83" fg:w="3"/><text x="7.0421%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.8740%" y="501" width="0.1637%" height="15" fill="rgb(211,41,51)" fg:x="84" fg:w="2"/><text x="7.1240%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.9558%" y="485" width="0.0818%" height="15" fill="rgb(207,215,0)" fg:x="85" fg:w="1"/><text x="7.2058%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.9558%" y="469" width="0.0818%" height="15" fill="rgb(212,153,10)" fg:x="85" fg:w="1"/><text x="7.2058%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.9558%" y="453" width="0.0818%" height="15" fill="rgb(251,171,36)" fg:x="85" fg:w="1"/><text x="7.2058%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.9558%" y="437" width="0.0818%" height="15" fill="rgb(225,219,41)" fg:x="85" fg:w="1"/><text x="7.2058%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.9558%" y="421" width="0.0818%" height="15" fill="rgb(208,200,1)" fg:x="85" fg:w="1"/><text x="7.2058%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.9558%" y="405" width="0.0818%" height="15" fill="rgb(206,75,47)" fg:x="85" fg:w="1"/><text x="7.2058%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="6.9558%" y="389" width="0.0818%" height="15" fill="rgb(248,3,16)" fg:x="85" fg:w="1"/><text x="7.2058%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="6.9558%" y="373" width="0.0818%" height="15" fill="rgb(242,157,36)" fg:x="85" fg:w="1"/><text x="7.2058%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="6.9558%" y="357" width="0.0818%" height="15" fill="rgb(215,175,11)" fg:x="85" fg:w="1"/><text x="7.2058%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="6.9558%" y="341" width="0.0818%" height="15" fill="rgb(252,222,22)" fg:x="85" fg:w="1"/><text x="7.2058%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.9558%" y="325" width="0.0818%" height="15" fill="rgb(250,121,35)" fg:x="85" fg:w="1"/><text x="7.2058%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="7.0376%" y="485" width="0.4092%" height="15" fill="rgb(233,120,49)" fg:x="86" fg:w="5"/><text x="7.2876%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="7.2013%" y="469" width="0.2455%" height="15" fill="rgb(205,201,14)" fg:x="88" fg:w="3"/><text x="7.4513%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.2831%" y="453" width="0.1637%" height="15" fill="rgb(219,58,45)" fg:x="89" fg:w="2"/><text x="7.5331%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3650%" y="437" width="0.0818%" height="15" fill="rgb(251,65,12)" fg:x="90" fg:w="1"/><text x="7.6150%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.49%)</title><rect x="7.0376%" y="501" width="0.4910%" height="15" fill="rgb(224,47,31)" fg:x="86" fg:w="6"/><text x="7.2876%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.4468%" y="485" width="0.0818%" height="15" fill="rgb(233,74,26)" fg:x="91" fg:w="1"/><text x="7.6968%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="7.5286%" y="485" width="0.0818%" height="15" fill="rgb(231,211,31)" fg:x="92" fg:w="1"/><text x="7.7786%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.5286%" y="469" width="0.0818%" height="15" fill="rgb(239,167,5)" fg:x="92" fg:w="1"/><text x="7.7786%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.5286%" y="453" width="0.0818%" height="15" fill="rgb(241,85,0)" fg:x="92" fg:w="1"/><text x="7.7786%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.5286%" y="437" width="0.0818%" height="15" fill="rgb(229,130,21)" fg:x="92" fg:w="1"/><text x="7.7786%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.57%)</title><rect x="7.6105%" y="485" width="0.5728%" height="15" fill="rgb(254,84,49)" fg:x="93" fg:w="7"/><text x="7.8605%" y="495.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.57%)</title><rect x="7.6105%" y="469" width="0.5728%" height="15" fill="rgb(235,85,21)" fg:x="93" fg:w="7"/><text x="7.8605%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="7.8560%" y="453" width="0.3273%" height="15" fill="rgb(246,128,52)" fg:x="96" fg:w="4"/><text x="8.1060%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="7.9378%" y="437" width="0.2455%" height="15" fill="rgb(243,114,49)" fg:x="97" fg:w="3"/><text x="8.1878%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="8.0196%" y="421" width="0.1637%" height="15" fill="rgb(240,224,22)" fg:x="98" fg:w="2"/><text x="8.2696%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="8.0196%" y="405" width="0.1637%" height="15" fill="rgb(247,201,52)" fg:x="98" fg:w="2"/><text x="8.2696%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="8.0196%" y="389" width="0.1637%" height="15" fill="rgb(231,70,45)" fg:x="98" fg:w="2"/><text x="8.2696%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.1833%" y="437" width="0.0818%" height="15" fill="rgb(217,215,20)" fg:x="100" fg:w="1"/><text x="8.4333%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="8.1833%" y="469" width="0.2455%" height="15" fill="rgb(226,170,30)" fg:x="100" fg:w="3"/><text x="8.4333%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="8.1833%" y="453" width="0.2455%" height="15" fill="rgb(220,190,43)" fg:x="100" fg:w="3"/><text x="8.4333%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="8.2651%" y="437" width="0.1637%" height="15" fill="rgb(218,20,18)" fg:x="101" fg:w="2"/><text x="8.5151%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.2651%" y="421" width="0.1637%" height="15" fill="rgb(245,37,26)" fg:x="101" fg:w="2"/><text x="8.5151%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.3470%" y="405" width="0.0818%" height="15" fill="rgb(241,127,29)" fg:x="102" fg:w="1"/><text x="8.5970%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.3470%" y="389" width="0.0818%" height="15" fill="rgb(241,33,26)" fg:x="102" fg:w="1"/><text x="8.5970%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="8.4288%" y="469" width="0.3273%" height="15" fill="rgb(220,106,21)" fg:x="103" fg:w="4"/><text x="8.6788%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="8.5106%" y="453" width="0.2455%" height="15" fill="rgb(225,125,35)" fg:x="104" fg:w="3"/><text x="8.7606%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.5925%" y="437" width="0.1637%" height="15" fill="rgb(248,80,22)" fg:x="105" fg:w="2"/><text x="8.8425%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.5925%" y="421" width="0.1637%" height="15" fill="rgb(231,117,39)" fg:x="105" fg:w="2"/><text x="8.8425%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.6743%" y="405" width="0.0818%" height="15" fill="rgb(239,183,16)" fg:x="106" fg:w="1"/><text x="8.9243%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.6743%" y="389" width="0.0818%" height="15" fill="rgb(221,61,19)" fg:x="106" fg:w="1"/><text x="8.9243%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.6743%" y="373" width="0.0818%" height="15" fill="rgb(239,196,44)" fg:x="106" fg:w="1"/><text x="8.9243%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.7561%" y="453" width="0.1637%" height="15" fill="rgb(206,113,19)" fg:x="107" fg:w="2"/><text x="9.0061%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.8380%" y="437" width="0.0818%" height="15" fill="rgb(245,114,12)" fg:x="108" fg:w="1"/><text x="9.0880%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.0016%" y="437" width="0.1637%" height="15" fill="rgb(247,89,39)" fg:x="110" fg:w="2"/><text x="9.2516%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.0016%" y="421" width="0.1637%" height="15" fill="rgb(213,85,14)" fg:x="110" fg:w="2"/><text x="9.2516%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.0835%" y="405" width="0.0818%" height="15" fill="rgb(249,206,33)" fg:x="111" fg:w="1"/><text x="9.3335%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.0835%" y="389" width="0.0818%" height="15" fill="rgb(235,167,47)" fg:x="111" fg:w="1"/><text x="9.3335%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.1653%" y="421" width="0.0818%" height="15" fill="rgb(217,177,16)" fg:x="112" fg:w="1"/><text x="9.4153%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="9.4108%" y="405" width="0.2455%" height="15" fill="rgb(250,228,29)" fg:x="115" fg:w="3"/><text x="9.6608%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.4926%" y="389" width="0.1637%" height="15" fill="rgb(216,195,42)" fg:x="116" fg:w="2"/><text x="9.7426%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.4926%" y="373" width="0.1637%" height="15" fill="rgb(232,192,32)" fg:x="116" fg:w="2"/><text x="9.7426%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.4926%" y="357" width="0.1637%" height="15" fill="rgb(211,8,47)" fg:x="116" fg:w="2"/><text x="9.7426%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="9.2471%" y="421" width="0.5728%" height="15" fill="rgb(251,201,9)" fg:x="113" fg:w="7"/><text x="9.4971%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.6563%" y="405" width="0.1637%" height="15" fill="rgb(206,185,47)" fg:x="118" fg:w="2"/><text x="9.9063%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.6563%" y="389" width="0.1637%" height="15" fill="rgb(245,54,32)" fg:x="118" fg:w="2"/><text x="9.9063%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.6563%" y="373" width="0.1637%" height="15" fill="rgb(208,1,8)" fg:x="118" fg:w="2"/><text x="9.9063%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.6563%" y="357" width="0.1637%" height="15" fill="rgb(228,57,24)" fg:x="118" fg:w="2"/><text x="9.9063%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.7381%" y="341" width="0.0818%" height="15" fill="rgb(251,24,8)" fg:x="119" fg:w="1"/><text x="9.9881%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.7381%" y="325" width="0.0818%" height="15" fill="rgb(236,196,50)" fg:x="119" fg:w="1"/><text x="9.9881%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.7381%" y="309" width="0.0818%" height="15" fill="rgb(246,222,29)" fg:x="119" fg:w="1"/><text x="9.9881%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.06%)</title><rect x="9.1653%" y="437" width="1.0638%" height="15" fill="rgb(211,34,40)" fg:x="112" fg:w="13"/><text x="9.4153%" y="447.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="9.8200%" y="421" width="0.4092%" height="15" fill="rgb(210,66,51)" fg:x="120" fg:w="5"/><text x="10.0700%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.0655%" y="405" width="0.1637%" height="15" fill="rgb(250,56,43)" fg:x="123" fg:w="2"/><text x="10.3155%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.0655%" y="389" width="0.1637%" height="15" fill="rgb(240,111,50)" fg:x="123" fg:w="2"/><text x="10.3155%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.39%)</title><rect x="8.9198%" y="453" width="1.3912%" height="15" fill="rgb(209,117,13)" fg:x="109" fg:w="17"/><text x="9.1698%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.2291%" y="437" width="0.0818%" height="15" fill="rgb(232,164,45)" fg:x="125" fg:w="1"/><text x="10.4791%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.2291%" y="421" width="0.0818%" height="15" fill="rgb(205,69,32)" fg:x="125" fg:w="1"/><text x="10.4791%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.2291%" y="405" width="0.0818%" height="15" fill="rgb(240,147,45)" fg:x="125" fg:w="1"/><text x="10.4791%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.72%)</title><rect x="8.7561%" y="469" width="1.7185%" height="15" fill="rgb(221,94,48)" fg:x="107" fg:w="21"/><text x="9.0061%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.3110%" y="453" width="0.1637%" height="15" fill="rgb(249,209,17)" fg:x="126" fg:w="2"/><text x="10.5610%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.3110%" y="437" width="0.1637%" height="15" fill="rgb(228,57,28)" fg:x="126" fg:w="2"/><text x="10.5610%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.3110%" y="421" width="0.1637%" height="15" fill="rgb(250,133,26)" fg:x="126" fg:w="2"/><text x="10.5610%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.45%)</title><rect x="8.1833%" y="485" width="2.4550%" height="15" fill="rgb(254,15,16)" fg:x="100" fg:w="30"/><text x="8.4333%" y="495.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.4746%" y="469" width="0.1637%" height="15" fill="rgb(209,147,42)" fg:x="128" fg:w="2"/><text x="10.7246%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (48 samples, 3.93%)</title><rect x="7.0376%" y="517" width="3.9280%" height="15" fill="rgb(208,5,29)" fg:x="86" fg:w="48"/><text x="7.2876%" y="527.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (42 samples, 3.44%)</title><rect x="7.5286%" y="501" width="3.4370%" height="15" fill="rgb(250,73,31)" fg:x="92" fg:w="42"/><text x="7.7786%" y="511.50">ser..</text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="10.6383%" y="485" width="0.3273%" height="15" fill="rgb(238,45,10)" fg:x="130" fg:w="4"/><text x="10.8883%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="10.6383%" y="469" width="0.3273%" height="15" fill="rgb(214,104,5)" fg:x="130" fg:w="4"/><text x="10.8883%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="10.7201%" y="453" width="0.2455%" height="15" fill="rgb(242,217,19)" fg:x="131" fg:w="3"/><text x="10.9701%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.8838%" y="437" width="0.0818%" height="15" fill="rgb(246,113,27)" fg:x="133" fg:w="1"/><text x="11.1338%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9656%" y="485" width="0.0818%" height="15" fill="rgb(221,34,27)" fg:x="134" fg:w="1"/><text x="11.2156%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.0475%" y="485" width="0.0818%" height="15" fill="rgb(246,109,6)" fg:x="135" fg:w="1"/><text x="11.2975%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0475%" y="469" width="0.0818%" height="15" fill="rgb(217,12,25)" fg:x="135" fg:w="1"/><text x="11.2975%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2111%" y="469" width="0.0818%" height="15" fill="rgb(250,195,5)" fg:x="137" fg:w="1"/><text x="11.4611%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.2930%" y="469" width="0.0818%" height="15" fill="rgb(244,140,45)" fg:x="138" fg:w="1"/><text x="11.5430%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.3748%" y="453" width="0.0818%" height="15" fill="rgb(230,64,14)" fg:x="139" fg:w="1"/><text x="11.6248%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="10.9656%" y="517" width="0.6547%" height="15" fill="rgb(206,27,27)" fg:x="134" fg:w="8"/><text x="11.2156%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.65%)</title><rect x="10.9656%" y="501" width="0.6547%" height="15" fill="rgb(230,14,50)" fg:x="134" fg:w="8"/><text x="11.2156%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="11.1293%" y="485" width="0.4910%" height="15" fill="rgb(237,172,14)" fg:x="136" fg:w="6"/><text x="11.3793%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="11.3748%" y="469" width="0.2455%" height="15" fill="rgb(209,25,21)" fg:x="139" fg:w="3"/><text x="11.6248%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.4566%" y="453" width="0.1637%" height="15" fill="rgb(248,148,22)" fg:x="140" fg:w="2"/><text x="11.7066%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.4566%" y="437" width="0.1637%" height="15" fill="rgb(234,100,22)" fg:x="140" fg:w="2"/><text x="11.7066%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.4566%" y="421" width="0.1637%" height="15" fill="rgb(210,20,30)" fg:x="140" fg:w="2"/><text x="11.7066%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="11.4566%" y="405" width="0.1637%" height="15" fill="rgb(232,58,0)" fg:x="140" fg:w="2"/><text x="11.7066%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5385%" y="389" width="0.0818%" height="15" fill="rgb(221,68,13)" fg:x="141" fg:w="1"/><text x="11.7885%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="11.7840%" y="469" width="0.1637%" height="15" fill="rgb(231,194,11)" fg:x="144" fg:w="2"/><text x="12.0340%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.49%)</title><rect x="11.9476%" y="469" width="0.4910%" height="15" fill="rgb(235,51,41)" fg:x="146" fg:w="6"/><text x="12.1976%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="12.1113%" y="453" width="0.3273%" height="15" fill="rgb(240,50,32)" fg:x="148" fg:w="4"/><text x="12.3613%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="12.2750%" y="437" width="0.1637%" height="15" fill="rgb(240,185,36)" fg:x="150" fg:w="2"/><text x="12.5250%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4386%" y="469" width="0.0818%" height="15" fill="rgb(211,168,15)" fg:x="152" fg:w="1"/><text x="12.6886%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.4386%" y="453" width="0.0818%" height="15" fill="rgb(221,70,0)" fg:x="152" fg:w="1"/><text x="12.6886%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="12.4386%" y="437" width="0.0818%" height="15" fill="rgb(205,21,33)" fg:x="152" fg:w="1"/><text x="12.6886%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="12.5205%" y="469" width="0.1637%" height="15" fill="rgb(225,106,10)" fg:x="153" fg:w="2"/><text x="12.7705%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.6023%" y="453" width="0.0818%" height="15" fill="rgb(236,200,50)" fg:x="154" fg:w="1"/><text x="12.8523%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6023%" y="437" width="0.0818%" height="15" fill="rgb(249,93,23)" fg:x="154" fg:w="1"/><text x="12.8523%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="12.7660%" y="437" width="0.0818%" height="15" fill="rgb(244,115,35)" fg:x="156" fg:w="1"/><text x="13.0160%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.9296%" y="389" width="0.0818%" height="15" fill="rgb(231,129,47)" fg:x="158" fg:w="1"/><text x="13.1796%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="12.9296%" y="421" width="0.1637%" height="15" fill="rgb(225,160,50)" fg:x="158" fg:w="2"/><text x="13.1796%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.9296%" y="405" width="0.1637%" height="15" fill="rgb(218,135,23)" fg:x="158" fg:w="2"/><text x="13.1796%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.0115%" y="389" width="0.0818%" height="15" fill="rgb(227,119,14)" fg:x="159" fg:w="1"/><text x="13.2615%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.0933%" y="389" width="0.0818%" height="15" fill="rgb(242,138,13)" fg:x="160" fg:w="1"/><text x="13.3433%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="13.0933%" y="373" width="0.0818%" height="15" fill="rgb(215,11,16)" fg:x="160" fg:w="1"/><text x="13.3433%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="13.1751%" y="373" width="0.0818%" height="15" fill="rgb(234,170,50)" fg:x="161" fg:w="1"/><text x="13.4251%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.2570%" y="325" width="0.0818%" height="15" fill="rgb(233,34,20)" fg:x="162" fg:w="1"/><text x="13.5070%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="13.3388%" y="309" width="0.0818%" height="15" fill="rgb(237,100,45)" fg:x="163" fg:w="1"/><text x="13.5888%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="13.4206%" y="293" width="0.2455%" height="15" fill="rgb(231,184,36)" fg:x="164" fg:w="3"/><text x="13.6706%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="13.4206%" y="277" width="0.2455%" height="15" fill="rgb(252,93,2)" fg:x="164" fg:w="3"/><text x="13.6706%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="13.5025%" y="261" width="0.1637%" height="15" fill="rgb(248,176,47)" fg:x="165" fg:w="2"/><text x="13.7525%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="13.4206%" y="309" width="0.3273%" height="15" fill="rgb(249,125,23)" fg:x="164" fg:w="4"/><text x="13.6706%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.6661%" y="293" width="0.0818%" height="15" fill="rgb(239,67,42)" fg:x="167" fg:w="1"/><text x="13.9161%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.74%)</title><rect x="13.0933%" y="405" width="0.7365%" height="15" fill="rgb(244,162,4)" fg:x="160" fg:w="9"/><text x="13.3433%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="13.1751%" y="389" width="0.6547%" height="15" fill="rgb(214,150,38)" fg:x="161" fg:w="8"/><text x="13.4251%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="13.2570%" y="373" width="0.5728%" height="15" fill="rgb(228,211,28)" fg:x="162" fg:w="7"/><text x="13.5070%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="13.2570%" y="357" width="0.5728%" height="15" fill="rgb(212,98,48)" fg:x="162" fg:w="7"/><text x="13.5070%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="13.2570%" y="341" width="0.5728%" height="15" fill="rgb(213,45,13)" fg:x="162" fg:w="7"/><text x="13.5070%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="13.3388%" y="325" width="0.4910%" height="15" fill="rgb(218,35,29)" fg:x="163" fg:w="6"/><text x="13.5888%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7480%" y="309" width="0.0818%" height="15" fill="rgb(244,13,3)" fg:x="168" fg:w="1"/><text x="13.9980%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.06%)</title><rect x="12.8478%" y="437" width="1.0638%" height="15" fill="rgb(235,170,19)" fg:x="157" fg:w="13"/><text x="13.0978%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.82%)</title><rect x="13.0933%" y="421" width="0.8183%" height="15" fill="rgb(233,193,43)" fg:x="160" fg:w="10"/><text x="13.3433%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8298%" y="405" width="0.0818%" height="15" fill="rgb(228,223,20)" fg:x="169" fg:w="1"/><text x="14.0798%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.31%)</title><rect x="12.7660%" y="453" width="1.3093%" height="15" fill="rgb(208,85,54)" fg:x="156" fg:w="16"/><text x="13.0160%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="13.9116%" y="437" width="0.1637%" height="15" fill="rgb(254,14,45)" fg:x="170" fg:w="2"/><text x="14.1616%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="13.9116%" y="421" width="0.1637%" height="15" fill="rgb(247,99,29)" fg:x="170" fg:w="2"/><text x="14.1616%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0753%" y="453" width="0.0818%" height="15" fill="rgb(225,180,54)" fg:x="172" fg:w="1"/><text x="14.3253%" y="463.50"></text></g><g><title>engine::session::Session::flush (94 samples, 7.69%)</title><rect x="6.5466%" y="597" width="7.6923%" height="15" fill="rgb(239,88,43)" fg:x="80" fg:w="94"/><text x="6.7966%" y="607.50">engine::ses..</text></g><g><title>engine::session::state::State::close (92 samples, 7.53%)</title><rect x="6.7103%" y="581" width="7.5286%" height="15" fill="rgb(209,47,11)" fg:x="82" fg:w="92"/><text x="6.9603%" y="591.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (92 samples, 7.53%)</title><rect x="6.7103%" y="565" width="7.5286%" height="15" fill="rgb(219,179,23)" fg:x="82" fg:w="92"/><text x="6.9603%" y="575.50">engine::se..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (88 samples, 7.20%)</title><rect x="7.0376%" y="549" width="7.2013%" height="15" fill="rgb(213,183,19)" fg:x="86" fg:w="88"/><text x="7.2876%" y="559.50">engine::se..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (88 samples, 7.20%)</title><rect x="7.0376%" y="533" width="7.2013%" height="15" fill="rgb(210,11,9)" fg:x="86" fg:w="88"/><text x="7.2876%" y="543.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (32 samples, 2.62%)</title><rect x="11.6203%" y="517" width="2.6187%" height="15" fill="rgb(239,194,16)" fg:x="142" fg:w="32"/><text x="11.8703%" y="527.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (32 samples, 2.62%)</title><rect x="11.6203%" y="501" width="2.6187%" height="15" fill="rgb(246,23,50)" fg:x="142" fg:w="32"/><text x="11.8703%" y="511.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 2.62%)</title><rect x="11.6203%" y="485" width="2.6187%" height="15" fill="rgb(245,10,41)" fg:x="142" fg:w="32"/><text x="11.8703%" y="495.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.55%)</title><rect x="12.6841%" y="469" width="1.5548%" height="15" fill="rgb(228,43,24)" fg:x="155" fg:w="19"/><text x="12.9341%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1571%" y="453" width="0.0818%" height="15" fill="rgb(220,151,0)" fg:x="173" fg:w="1"/><text x="14.4071%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1571%" y="437" width="0.0818%" height="15" fill="rgb(232,219,10)" fg:x="173" fg:w="1"/><text x="14.4071%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="14.1571%" y="421" width="0.0818%" height="15" fill="rgb(227,217,48)" fg:x="173" fg:w="1"/><text x="14.4071%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="14.2390%" y="565" width="0.0818%" height="15" fill="rgb(210,66,35)" fg:x="174" fg:w="1"/><text x="14.4890%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.2390%" y="549" width="0.0818%" height="15" fill="rgb(254,6,7)" fg:x="174" fg:w="1"/><text x="14.4890%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.2390%" y="533" width="0.0818%" height="15" fill="rgb(235,222,42)" fg:x="174" fg:w="1"/><text x="14.4890%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.2390%" y="517" width="0.0818%" height="15" fill="rgb(245,126,5)" fg:x="174" fg:w="1"/><text x="14.4890%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.2390%" y="501" width="0.0818%" height="15" fill="rgb(215,73,17)" fg:x="174" fg:w="1"/><text x="14.4890%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.2390%" y="485" width="0.0818%" height="15" fill="rgb(219,198,52)" fg:x="174" fg:w="1"/><text x="14.4890%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="14.2390%" y="469" width="0.0818%" height="15" fill="rgb(217,159,18)" fg:x="174" fg:w="1"/><text x="14.4890%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.2390%" y="453" width="0.0818%" height="15" fill="rgb(212,177,18)" fg:x="174" fg:w="1"/><text x="14.4890%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.2390%" y="437" width="0.0818%" height="15" fill="rgb(241,10,11)" fg:x="174" fg:w="1"/><text x="14.4890%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.2390%" y="421" width="0.0818%" height="15" fill="rgb(232,114,35)" fg:x="174" fg:w="1"/><text x="14.4890%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="14.2390%" y="405" width="0.0818%" height="15" fill="rgb(238,222,8)" fg:x="174" fg:w="1"/><text x="14.4890%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.2390%" y="389" width="0.0818%" height="15" fill="rgb(251,153,44)" fg:x="174" fg:w="1"/><text x="14.4890%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.2390%" y="373" width="0.0818%" height="15" fill="rgb(210,140,51)" fg:x="174" fg:w="1"/><text x="14.4890%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.2390%" y="357" width="0.0818%" height="15" fill="rgb(222,63,0)" fg:x="174" fg:w="1"/><text x="14.4890%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.2390%" y="341" width="0.0818%" height="15" fill="rgb(240,18,40)" fg:x="174" fg:w="1"/><text x="14.4890%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="14.2390%" y="325" width="0.0818%" height="15" fill="rgb(237,88,16)" fg:x="174" fg:w="1"/><text x="14.4890%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="14.2390%" y="309" width="0.0818%" height="15" fill="rgb(251,117,13)" fg:x="174" fg:w="1"/><text x="14.4890%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="14.2390%" y="293" width="0.0818%" height="15" fill="rgb(251,228,8)" fg:x="174" fg:w="1"/><text x="14.4890%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="14.2390%" y="277" width="0.0818%" height="15" fill="rgb(205,107,49)" fg:x="174" fg:w="1"/><text x="14.4890%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.2390%" y="261" width="0.0818%" height="15" fill="rgb(238,72,41)" fg:x="174" fg:w="1"/><text x="14.4890%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3208%" y="517" width="0.0818%" height="15" fill="rgb(248,183,52)" fg:x="175" fg:w="1"/><text x="14.5708%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3208%" y="501" width="0.0818%" height="15" fill="rgb(215,58,20)" fg:x="175" fg:w="1"/><text x="14.5708%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3208%" y="485" width="0.0818%" height="15" fill="rgb(209,49,13)" fg:x="175" fg:w="1"/><text x="14.5708%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3208%" y="469" width="0.0818%" height="15" fill="rgb(208,113,17)" fg:x="175" fg:w="1"/><text x="14.5708%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3208%" y="453" width="0.0818%" height="15" fill="rgb(208,14,22)" fg:x="175" fg:w="1"/><text x="14.5708%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.3208%" y="437" width="0.0818%" height="15" fill="rgb(222,95,2)" fg:x="175" fg:w="1"/><text x="14.5708%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.3208%" y="421" width="0.0818%" height="15" fill="rgb(253,180,37)" fg:x="175" fg:w="1"/><text x="14.5708%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.3208%" y="405" width="0.0818%" height="15" fill="rgb(250,81,33)" fg:x="175" fg:w="1"/><text x="14.5708%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.3208%" y="389" width="0.0818%" height="15" fill="rgb(251,151,41)" fg:x="175" fg:w="1"/><text x="14.5708%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.3208%" y="373" width="0.0818%" height="15" fill="rgb(210,135,17)" fg:x="175" fg:w="1"/><text x="14.5708%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.3208%" y="357" width="0.0818%" height="15" fill="rgb(239,21,29)" fg:x="175" fg:w="1"/><text x="14.5708%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.3208%" y="341" width="0.0818%" height="15" fill="rgb(231,215,16)" fg:x="175" fg:w="1"/><text x="14.5708%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.3208%" y="325" width="0.0818%" height="15" fill="rgb(239,151,54)" fg:x="175" fg:w="1"/><text x="14.5708%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.3208%" y="309" width="0.0818%" height="15" fill="rgb(222,122,38)" fg:x="175" fg:w="1"/><text x="14.5708%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3208%" y="293" width="0.0818%" height="15" fill="rgb(243,128,1)" fg:x="175" fg:w="1"/><text x="14.5708%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="14.3208%" y="549" width="0.1637%" height="15" fill="rgb(225,74,21)" fg:x="175" fg:w="2"/><text x="14.5708%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.3208%" y="533" width="0.1637%" height="15" fill="rgb(216,210,10)" fg:x="175" fg:w="2"/><text x="14.5708%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.4026%" y="517" width="0.0818%" height="15" fill="rgb(228,76,19)" fg:x="176" fg:w="1"/><text x="14.6526%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.4026%" y="501" width="0.0818%" height="15" fill="rgb(236,80,34)" fg:x="176" fg:w="1"/><text x="14.6526%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.4026%" y="485" width="0.0818%" height="15" fill="rgb(225,173,23)" fg:x="176" fg:w="1"/><text x="14.6526%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.25%)</title><rect x="14.3208%" y="565" width="0.2455%" height="15" fill="rgb(253,38,1)" fg:x="175" fg:w="3"/><text x="14.5708%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.4845%" y="549" width="0.0818%" height="15" fill="rgb(206,155,35)" fg:x="177" fg:w="1"/><text x="14.7345%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.4845%" y="533" width="0.0818%" height="15" fill="rgb(254,27,53)" fg:x="177" fg:w="1"/><text x="14.7345%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.4845%" y="517" width="0.0818%" height="15" fill="rgb(225,52,41)" fg:x="177" fg:w="1"/><text x="14.7345%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.4845%" y="501" width="0.0818%" height="15" fill="rgb(244,53,18)" fg:x="177" fg:w="1"/><text x="14.7345%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.5663%" y="517" width="0.0818%" height="15" fill="rgb(254,206,48)" fg:x="178" fg:w="1"/><text x="14.8163%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.5663%" y="501" width="0.0818%" height="15" fill="rgb(236,182,23)" fg:x="178" fg:w="1"/><text x="14.8163%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.5663%" y="485" width="0.0818%" height="15" fill="rgb(236,191,37)" fg:x="178" fg:w="1"/><text x="14.8163%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.5663%" y="469" width="0.0818%" height="15" fill="rgb(245,53,8)" fg:x="178" fg:w="1"/><text x="14.8163%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6481%" y="485" width="0.0818%" height="15" fill="rgb(245,147,9)" fg:x="179" fg:w="1"/><text x="14.8981%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6481%" y="469" width="0.0818%" height="15" fill="rgb(218,24,48)" fg:x="179" fg:w="1"/><text x="14.8981%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6481%" y="453" width="0.0818%" height="15" fill="rgb(254,23,9)" fg:x="179" fg:w="1"/><text x="14.8981%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.8936%" y="373" width="0.0818%" height="15" fill="rgb(244,105,9)" fg:x="182" fg:w="1"/><text x="15.1436%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.49%)</title><rect x="14.5663%" y="549" width="0.4910%" height="15" fill="rgb(212,142,22)" fg:x="178" fg:w="6"/><text x="14.8163%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.49%)</title><rect x="14.5663%" y="533" width="0.4910%" height="15" fill="rgb(221,114,49)" fg:x="178" fg:w="6"/><text x="14.8163%" y="543.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.41%)</title><rect x="14.6481%" y="517" width="0.4092%" height="15" fill="rgb(223,210,25)" fg:x="179" fg:w="5"/><text x="14.8981%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.41%)</title><rect x="14.6481%" y="501" width="0.4092%" height="15" fill="rgb(235,162,44)" fg:x="179" fg:w="5"/><text x="14.8981%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (4 samples, 0.33%)</title><rect x="14.7300%" y="485" width="0.3273%" height="15" fill="rgb(237,65,45)" fg:x="180" fg:w="4"/><text x="14.9800%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="14.7300%" y="469" width="0.3273%" height="15" fill="rgb(208,79,9)" fg:x="180" fg:w="4"/><text x="14.9800%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.25%)</title><rect x="14.8118%" y="453" width="0.2455%" height="15" fill="rgb(215,228,8)" fg:x="181" fg:w="3"/><text x="15.0618%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.8936%" y="437" width="0.1637%" height="15" fill="rgb(205,185,17)" fg:x="182" fg:w="2"/><text x="15.1436%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="14.8936%" y="421" width="0.1637%" height="15" fill="rgb(213,62,36)" fg:x="182" fg:w="2"/><text x="15.1436%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="14.8936%" y="405" width="0.1637%" height="15" fill="rgb(209,34,9)" fg:x="182" fg:w="2"/><text x="15.1436%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="14.8936%" y="389" width="0.1637%" height="15" fill="rgb(246,151,27)" fg:x="182" fg:w="2"/><text x="15.1436%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="14.9755%" y="373" width="0.0818%" height="15" fill="rgb(218,206,3)" fg:x="183" fg:w="1"/><text x="15.2255%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.9755%" y="357" width="0.0818%" height="15" fill="rgb(242,202,1)" fg:x="183" fg:w="1"/><text x="15.2255%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (24 samples, 1.96%)</title><rect x="14.2390%" y="581" width="1.9640%" height="15" fill="rgb(227,185,16)" fg:x="174" fg:w="24"/><text x="14.4890%" y="591.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (20 samples, 1.64%)</title><rect x="14.5663%" y="565" width="1.6367%" height="15" fill="rgb(241,1,14)" fg:x="178" fg:w="20"/><text x="14.8163%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (14 samples, 1.15%)</title><rect x="15.0573%" y="549" width="1.1457%" height="15" fill="rgb(212,113,25)" fg:x="184" fg:w="14"/><text x="15.3073%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 1.15%)</title><rect x="15.0573%" y="533" width="1.1457%" height="15" fill="rgb(247,37,43)" fg:x="184" fg:w="14"/><text x="15.3073%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 1.15%)</title><rect x="15.0573%" y="517" width="1.1457%" height="15" fill="rgb(226,54,8)" fg:x="184" fg:w="14"/><text x="15.3073%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 1.15%)</title><rect x="15.0573%" y="501" width="1.1457%" height="15" fill="rgb(251,205,25)" fg:x="184" fg:w="14"/><text x="15.3073%" y="511.50"></text></g><g><title>__libc_malloc (14 samples, 1.15%)</title><rect x="15.0573%" y="485" width="1.1457%" height="15" fill="rgb(246,87,35)" fg:x="184" fg:w="14"/><text x="15.3073%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2029%" y="485" width="0.0818%" height="15" fill="rgb(251,145,46)" fg:x="198" fg:w="1"/><text x="16.4529%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2029%" y="469" width="0.0818%" height="15" fill="rgb(210,210,33)" fg:x="198" fg:w="1"/><text x="16.4529%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2029%" y="453" width="0.0818%" height="15" fill="rgb(221,151,11)" fg:x="198" fg:w="1"/><text x="16.4529%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2029%" y="437" width="0.0818%" height="15" fill="rgb(208,160,28)" fg:x="198" fg:w="1"/><text x="16.4529%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2029%" y="421" width="0.0818%" height="15" fill="rgb(243,69,29)" fg:x="198" fg:w="1"/><text x="16.4529%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.2029%" y="533" width="0.1637%" height="15" fill="rgb(224,144,4)" fg:x="198" fg:w="2"/><text x="16.4529%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.2029%" y="517" width="0.1637%" height="15" fill="rgb(211,140,38)" fg:x="198" fg:w="2"/><text x="16.4529%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.2029%" y="501" width="0.1637%" height="15" fill="rgb(252,189,15)" fg:x="198" fg:w="2"/><text x="16.4529%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2848%" y="485" width="0.0818%" height="15" fill="rgb(251,175,23)" fg:x="199" fg:w="1"/><text x="16.5348%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.2848%" y="469" width="0.0818%" height="15" fill="rgb(212,184,11)" fg:x="199" fg:w="1"/><text x="16.5348%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2848%" y="453" width="0.0818%" height="15" fill="rgb(217,205,6)" fg:x="199" fg:w="1"/><text x="16.5348%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2848%" y="437" width="0.0818%" height="15" fill="rgb(235,45,45)" fg:x="199" fg:w="1"/><text x="16.5348%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2848%" y="421" width="0.0818%" height="15" fill="rgb(211,157,53)" fg:x="199" fg:w="1"/><text x="16.5348%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3666%" y="485" width="0.0818%" height="15" fill="rgb(212,13,8)" fg:x="200" fg:w="1"/><text x="16.6166%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3666%" y="469" width="0.0818%" height="15" fill="rgb(218,80,36)" fg:x="200" fg:w="1"/><text x="16.6166%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3666%" y="453" width="0.0818%" height="15" fill="rgb(211,123,43)" fg:x="200" fg:w="1"/><text x="16.6166%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.4484%" y="421" width="0.0818%" height="15" fill="rgb(206,165,2)" fg:x="201" fg:w="1"/><text x="16.6984%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.4484%" y="405" width="0.0818%" height="15" fill="rgb(248,63,35)" fg:x="201" fg:w="1"/><text x="16.6984%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.6121%" y="357" width="0.0818%" height="15" fill="rgb(219,133,41)" fg:x="203" fg:w="1"/><text x="16.8621%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.6121%" y="341" width="0.0818%" height="15" fill="rgb(206,175,46)" fg:x="203" fg:w="1"/><text x="16.8621%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.65%)</title><rect x="16.2029%" y="565" width="0.6547%" height="15" fill="rgb(224,41,35)" fg:x="198" fg:w="8"/><text x="16.4529%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.65%)</title><rect x="16.2029%" y="549" width="0.6547%" height="15" fill="rgb(226,113,24)" fg:x="198" fg:w="8"/><text x="16.4529%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.49%)</title><rect x="16.3666%" y="533" width="0.4910%" height="15" fill="rgb(219,51,41)" fg:x="200" fg:w="6"/><text x="16.6166%" y="543.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="16.3666%" y="517" width="0.4910%" height="15" fill="rgb(220,145,47)" fg:x="200" fg:w="6"/><text x="16.6166%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="16.3666%" y="501" width="0.4910%" height="15" fill="rgb(239,121,47)" fg:x="200" fg:w="6"/><text x="16.6166%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="16.4484%" y="485" width="0.4092%" height="15" fill="rgb(207,60,40)" fg:x="201" fg:w="5"/><text x="16.6984%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="16.4484%" y="469" width="0.4092%" height="15" fill="rgb(224,229,11)" fg:x="201" fg:w="5"/><text x="16.6984%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="16.4484%" y="453" width="0.4092%" height="15" fill="rgb(252,28,32)" fg:x="201" fg:w="5"/><text x="16.6984%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="16.4484%" y="437" width="0.4092%" height="15" fill="rgb(207,52,49)" fg:x="201" fg:w="5"/><text x="16.6984%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="16.5303%" y="421" width="0.3273%" height="15" fill="rgb(243,51,50)" fg:x="202" fg:w="4"/><text x="16.7803%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="16.5303%" y="405" width="0.3273%" height="15" fill="rgb(212,92,21)" fg:x="202" fg:w="4"/><text x="16.7803%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="16.6121%" y="389" width="0.2455%" height="15" fill="rgb(230,183,50)" fg:x="203" fg:w="3"/><text x="16.8621%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="16.6121%" y="373" width="0.2455%" height="15" fill="rgb(225,48,9)" fg:x="203" fg:w="3"/><text x="16.8621%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.6939%" y="357" width="0.1637%" height="15" fill="rgb(254,44,4)" fg:x="204" fg:w="2"/><text x="16.9439%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.7758%" y="341" width="0.0818%" height="15" fill="rgb(252,128,37)" fg:x="205" fg:w="1"/><text x="17.0258%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="16.7758%" y="325" width="0.0818%" height="15" fill="rgb(227,178,8)" fg:x="205" fg:w="1"/><text x="17.0258%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="16.7758%" y="309" width="0.0818%" height="15" fill="rgb(205,206,32)" fg:x="205" fg:w="1"/><text x="17.0258%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.8576%" y="565" width="0.0818%" height="15" fill="rgb(220,218,22)" fg:x="206" fg:w="1"/><text x="17.1076%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.8576%" y="549" width="0.0818%" height="15" fill="rgb(236,41,28)" fg:x="206" fg:w="1"/><text x="17.1076%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9394%" y="549" width="0.0818%" height="15" fill="rgb(219,37,7)" fg:x="207" fg:w="1"/><text x="17.1894%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.9394%" y="533" width="0.0818%" height="15" fill="rgb(206,160,15)" fg:x="207" fg:w="1"/><text x="17.1894%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.9394%" y="517" width="0.0818%" height="15" fill="rgb(208,82,21)" fg:x="207" fg:w="1"/><text x="17.1894%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.9394%" y="565" width="0.1637%" height="15" fill="rgb(226,130,25)" fg:x="207" fg:w="2"/><text x="17.1894%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="17.0213%" y="549" width="0.0818%" height="15" fill="rgb(212,72,24)" fg:x="208" fg:w="1"/><text x="17.2713%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.0213%" y="533" width="0.0818%" height="15" fill="rgb(206,28,16)" fg:x="208" fg:w="1"/><text x="17.2713%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.0213%" y="517" width="0.0818%" height="15" fill="rgb(249,41,5)" fg:x="208" fg:w="1"/><text x="17.2713%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.1031%" y="549" width="0.0818%" height="15" fill="rgb(233,96,48)" fg:x="209" fg:w="1"/><text x="17.3531%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="17.1849%" y="549" width="0.0818%" height="15" fill="rgb(240,198,11)" fg:x="210" fg:w="1"/><text x="17.4349%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.1849%" y="533" width="0.0818%" height="15" fill="rgb(209,175,35)" fg:x="210" fg:w="1"/><text x="17.4349%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1849%" y="517" width="0.0818%" height="15" fill="rgb(214,40,51)" fg:x="210" fg:w="1"/><text x="17.4349%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="17.2668%" y="501" width="0.0818%" height="15" fill="rgb(252,56,4)" fg:x="211" fg:w="1"/><text x="17.5168%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2668%" y="485" width="0.0818%" height="15" fill="rgb(219,131,5)" fg:x="211" fg:w="1"/><text x="17.5168%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3486%" y="453" width="0.0818%" height="15" fill="rgb(223,67,53)" fg:x="212" fg:w="1"/><text x="17.5986%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3486%" y="437" width="0.0818%" height="15" fill="rgb(227,154,8)" fg:x="212" fg:w="1"/><text x="17.5986%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3486%" y="421" width="0.0818%" height="15" fill="rgb(216,174,51)" fg:x="212" fg:w="1"/><text x="17.5986%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.3486%" y="469" width="0.1637%" height="15" fill="rgb(239,60,34)" fg:x="212" fg:w="2"/><text x="17.5986%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4304%" y="453" width="0.0818%" height="15" fill="rgb(236,165,48)" fg:x="213" fg:w="1"/><text x="17.6804%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5123%" y="469" width="0.0818%" height="15" fill="rgb(210,37,26)" fg:x="214" fg:w="1"/><text x="17.7623%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5123%" y="453" width="0.0818%" height="15" fill="rgb(211,3,17)" fg:x="214" fg:w="1"/><text x="17.7623%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5123%" y="437" width="0.0818%" height="15" fill="rgb(234,88,49)" fg:x="214" fg:w="1"/><text x="17.7623%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5123%" y="421" width="0.0818%" height="15" fill="rgb(233,40,17)" fg:x="214" fg:w="1"/><text x="17.7623%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.5123%" y="405" width="0.0818%" height="15" fill="rgb(235,127,31)" fg:x="214" fg:w="1"/><text x="17.7623%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5123%" y="389" width="0.0818%" height="15" fill="rgb(248,167,17)" fg:x="214" fg:w="1"/><text x="17.7623%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5123%" y="373" width="0.0818%" height="15" fill="rgb(218,179,8)" fg:x="214" fg:w="1"/><text x="17.7623%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5123%" y="357" width="0.0818%" height="15" fill="rgb(216,92,14)" fg:x="214" fg:w="1"/><text x="17.7623%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.41%)</title><rect x="17.2668%" y="517" width="0.4092%" height="15" fill="rgb(221,198,46)" fg:x="211" fg:w="5"/><text x="17.5168%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="17.3486%" y="501" width="0.3273%" height="15" fill="rgb(244,7,25)" fg:x="212" fg:w="4"/><text x="17.5986%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="17.3486%" y="485" width="0.3273%" height="15" fill="rgb(233,75,6)" fg:x="212" fg:w="4"/><text x="17.5986%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="17.5941%" y="469" width="0.0818%" height="15" fill="rgb(240,189,41)" fg:x="215" fg:w="1"/><text x="17.8441%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.5941%" y="453" width="0.0818%" height="15" fill="rgb(237,157,21)" fg:x="215" fg:w="1"/><text x="17.8441%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="17.6759%" y="501" width="0.0818%" height="15" fill="rgb(210,136,49)" fg:x="216" fg:w="1"/><text x="17.9259%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7578%" y="469" width="0.0818%" height="15" fill="rgb(210,68,29)" fg:x="217" fg:w="1"/><text x="18.0078%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7578%" y="453" width="0.0818%" height="15" fill="rgb(247,207,20)" fg:x="217" fg:w="1"/><text x="18.0078%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7578%" y="437" width="0.0818%" height="15" fill="rgb(224,73,48)" fg:x="217" fg:w="1"/><text x="18.0078%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7578%" y="421" width="0.0818%" height="15" fill="rgb(215,136,47)" fg:x="217" fg:w="1"/><text x="18.0078%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8396%" y="405" width="0.0818%" height="15" fill="rgb(232,222,16)" fg:x="218" fg:w="1"/><text x="18.0896%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="17.8396%" y="469" width="0.1637%" height="15" fill="rgb(249,202,47)" fg:x="218" fg:w="2"/><text x="18.0896%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="17.8396%" y="453" width="0.1637%" height="15" fill="rgb(236,56,8)" fg:x="218" fg:w="2"/><text x="18.0896%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="17.8396%" y="437" width="0.1637%" height="15" fill="rgb(222,6,3)" fg:x="218" fg:w="2"/><text x="18.0896%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="17.8396%" y="421" width="0.1637%" height="15" fill="rgb(254,222,28)" fg:x="218" fg:w="2"/><text x="18.0896%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9214%" y="405" width="0.0818%" height="15" fill="rgb(219,57,23)" fg:x="219" fg:w="1"/><text x="18.1714%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (12 samples, 0.98%)</title><rect x="17.1031%" y="565" width="0.9820%" height="15" fill="rgb(251,106,48)" fg:x="209" fg:w="12"/><text x="17.3531%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.82%)</title><rect x="17.2668%" y="549" width="0.8183%" height="15" fill="rgb(242,2,23)" fg:x="211" fg:w="10"/><text x="17.5168%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.82%)</title><rect x="17.2668%" y="533" width="0.8183%" height="15" fill="rgb(212,109,31)" fg:x="211" fg:w="10"/><text x="17.5168%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="17.6759%" y="517" width="0.4092%" height="15" fill="rgb(241,9,22)" fg:x="216" fg:w="5"/><text x="17.9259%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="17.7578%" y="501" width="0.3273%" height="15" fill="rgb(209,64,27)" fg:x="217" fg:w="4"/><text x="18.0078%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="17.7578%" y="485" width="0.3273%" height="15" fill="rgb(248,13,44)" fg:x="217" fg:w="4"/><text x="18.0078%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.0033%" y="469" width="0.0818%" height="15" fill="rgb(213,86,6)" fg:x="220" fg:w="1"/><text x="18.2533%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0033%" y="453" width="0.0818%" height="15" fill="rgb(247,11,18)" fg:x="220" fg:w="1"/><text x="18.2533%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="18.0851%" y="549" width="0.0818%" height="15" fill="rgb(252,31,11)" fg:x="221" fg:w="1"/><text x="18.3351%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.0851%" y="533" width="0.0818%" height="15" fill="rgb(215,63,51)" fg:x="221" fg:w="1"/><text x="18.3351%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.1669%" y="517" width="0.0818%" height="15" fill="rgb(222,180,4)" fg:x="222" fg:w="1"/><text x="18.4169%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.1669%" y="501" width="0.0818%" height="15" fill="rgb(233,4,23)" fg:x="222" fg:w="1"/><text x="18.4169%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.1669%" y="485" width="0.0818%" height="15" fill="rgb(230,116,22)" fg:x="222" fg:w="1"/><text x="18.4169%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.1669%" y="469" width="0.0818%" height="15" fill="rgb(222,20,14)" fg:x="222" fg:w="1"/><text x="18.4169%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.1669%" y="453" width="0.0818%" height="15" fill="rgb(210,176,43)" fg:x="222" fg:w="1"/><text x="18.4169%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1669%" y="437" width="0.0818%" height="15" fill="rgb(219,67,32)" fg:x="222" fg:w="1"/><text x="18.4169%" y="447.50"></text></g><g><title>plugins_core::build::Build::holding (50 samples, 4.09%)</title><rect x="14.2390%" y="597" width="4.0917%" height="15" fill="rgb(228,91,39)" fg:x="174" fg:w="50"/><text x="14.4890%" y="607.50">plug..</text></g><g><title>plugins_core::tools::set_container (26 samples, 2.13%)</title><rect x="16.2029%" y="581" width="2.1277%" height="15" fill="rgb(254,63,14)" fg:x="198" fg:w="26"/><text x="16.4529%" y="591.50">p..</text></g><g><title>plugins_core::location::Location::set (3 samples, 0.25%)</title><rect x="18.0851%" y="565" width="0.2455%" height="15" fill="rgb(216,171,39)" fg:x="221" fg:w="3"/><text x="18.3351%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="18.1669%" y="549" width="0.1637%" height="15" fill="rgb(248,68,25)" fg:x="222" fg:w="2"/><text x="18.4169%" y="559.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="18.1669%" y="533" width="0.1637%" height="15" fill="rgb(239,63,16)" fg:x="222" fg:w="2"/><text x="18.4169%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="18.2488%" y="517" width="0.0818%" height="15" fill="rgb(225,111,43)" fg:x="223" fg:w="1"/><text x="18.4988%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4943%" y="533" width="0.0818%" height="15" fill="rgb(246,165,17)" fg:x="226" fg:w="1"/><text x="18.7443%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6579%" y="357" width="0.0818%" height="15" fill="rgb(208,124,1)" fg:x="228" fg:w="1"/><text x="18.9079%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6579%" y="341" width="0.0818%" height="15" fill="rgb(234,147,33)" fg:x="228" fg:w="1"/><text x="18.9079%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="18.6579%" y="325" width="0.0818%" height="15" fill="rgb(240,86,30)" fg:x="228" fg:w="1"/><text x="18.9079%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.6579%" y="309" width="0.0818%" height="15" fill="rgb(237,34,51)" fg:x="228" fg:w="1"/><text x="18.9079%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.6579%" y="293" width="0.0818%" height="15" fill="rgb(232,131,41)" fg:x="228" fg:w="1"/><text x="18.9079%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.6579%" y="277" width="0.0818%" height="15" fill="rgb(227,129,53)" fg:x="228" fg:w="1"/><text x="18.9079%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.6579%" y="261" width="0.0818%" height="15" fill="rgb(230,90,35)" fg:x="228" fg:w="1"/><text x="18.9079%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.6579%" y="245" width="0.0818%" height="15" fill="rgb(248,88,27)" fg:x="228" fg:w="1"/><text x="18.9079%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.6579%" y="229" width="0.0818%" height="15" fill="rgb(223,18,17)" fg:x="228" fg:w="1"/><text x="18.9079%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="18.6579%" y="213" width="0.0818%" height="15" fill="rgb(241,11,10)" fg:x="228" fg:w="1"/><text x="18.9079%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.6579%" y="197" width="0.0818%" height="15" fill="rgb(232,111,52)" fg:x="228" fg:w="1"/><text x="18.9079%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6579%" y="181" width="0.0818%" height="15" fill="rgb(228,67,8)" fg:x="228" fg:w="1"/><text x="18.9079%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.41%)</title><rect x="18.4124%" y="565" width="0.4092%" height="15" fill="rgb(251,168,31)" fg:x="225" fg:w="5"/><text x="18.6624%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.33%)</title><rect x="18.4943%" y="549" width="0.3273%" height="15" fill="rgb(249,164,11)" fg:x="226" fg:w="4"/><text x="18.7443%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.25%)</title><rect x="18.5761%" y="533" width="0.2455%" height="15" fill="rgb(239,81,9)" fg:x="227" fg:w="3"/><text x="18.8261%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.25%)</title><rect x="18.5761%" y="517" width="0.2455%" height="15" fill="rgb(222,145,38)" fg:x="227" fg:w="3"/><text x="18.8261%" y="527.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="18.5761%" y="501" width="0.2455%" height="15" fill="rgb(238,80,54)" fg:x="227" fg:w="3"/><text x="18.8261%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="18.5761%" y="485" width="0.2455%" height="15" fill="rgb(237,116,16)" fg:x="227" fg:w="3"/><text x="18.8261%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="18.5761%" y="469" width="0.2455%" height="15" fill="rgb(218,135,19)" fg:x="227" fg:w="3"/><text x="18.8261%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.25%)</title><rect x="18.5761%" y="453" width="0.2455%" height="15" fill="rgb(216,207,44)" fg:x="227" fg:w="3"/><text x="18.8261%" y="463.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="18.5761%" y="437" width="0.2455%" height="15" fill="rgb(226,152,40)" fg:x="227" fg:w="3"/><text x="18.8261%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="18.5761%" y="421" width="0.2455%" height="15" fill="rgb(219,98,35)" fg:x="227" fg:w="3"/><text x="18.8261%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="18.5761%" y="405" width="0.2455%" height="15" fill="rgb(222,136,46)" fg:x="227" fg:w="3"/><text x="18.8261%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="18.6579%" y="389" width="0.1637%" height="15" fill="rgb(222,71,8)" fg:x="228" fg:w="2"/><text x="18.9079%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="18.6579%" y="373" width="0.1637%" height="15" fill="rgb(209,89,53)" fg:x="228" fg:w="2"/><text x="18.9079%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.7398%" y="357" width="0.0818%" height="15" fill="rgb(210,97,51)" fg:x="229" fg:w="1"/><text x="18.9898%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="18.7398%" y="341" width="0.0818%" height="15" fill="rgb(248,65,21)" fg:x="229" fg:w="1"/><text x="18.9898%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.7398%" y="325" width="0.0818%" height="15" fill="rgb(222,5,31)" fg:x="229" fg:w="1"/><text x="18.9898%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.7398%" y="309" width="0.0818%" height="15" fill="rgb(241,16,30)" fg:x="229" fg:w="1"/><text x="18.9898%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.7398%" y="293" width="0.0818%" height="15" fill="rgb(215,86,30)" fg:x="229" fg:w="1"/><text x="18.9898%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.7398%" y="277" width="0.0818%" height="15" fill="rgb(235,26,44)" fg:x="229" fg:w="1"/><text x="18.9898%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.7398%" y="261" width="0.0818%" height="15" fill="rgb(228,147,14)" fg:x="229" fg:w="1"/><text x="18.9898%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="18.7398%" y="245" width="0.0818%" height="15" fill="rgb(253,38,50)" fg:x="229" fg:w="1"/><text x="18.9898%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.7398%" y="229" width="0.0818%" height="15" fill="rgb(251,151,16)" fg:x="229" fg:w="1"/><text x="18.9898%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.7398%" y="213" width="0.0818%" height="15" fill="rgb(224,64,19)" fg:x="229" fg:w="1"/><text x="18.9898%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.7398%" y="197" width="0.0818%" height="15" fill="rgb(235,214,47)" fg:x="229" fg:w="1"/><text x="18.9898%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.7398%" y="181" width="0.0818%" height="15" fill="rgb(218,15,19)" fg:x="229" fg:w="1"/><text x="18.9898%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.7398%" y="165" width="0.0818%" height="15" fill="rgb(247,209,3)" fg:x="229" fg:w="1"/><text x="18.9898%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.7398%" y="149" width="0.0818%" height="15" fill="rgb(217,29,2)" fg:x="229" fg:w="1"/><text x="18.9898%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="18.7398%" y="133" width="0.0818%" height="15" fill="rgb(234,9,9)" fg:x="229" fg:w="1"/><text x="18.9898%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.7398%" y="117" width="0.0818%" height="15" fill="rgb(207,43,14)" fg:x="229" fg:w="1"/><text x="18.9898%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="18.7398%" y="101" width="0.0818%" height="15" fill="rgb(216,219,36)" fg:x="229" fg:w="1"/><text x="18.9898%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="18.7398%" y="85" width="0.0818%" height="15" fill="rgb(238,12,26)" fg:x="229" fg:w="1"/><text x="18.9898%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="18.7398%" y="69" width="0.0818%" height="15" fill="rgb(226,67,30)" fg:x="229" fg:w="1"/><text x="18.9898%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.7398%" y="53" width="0.0818%" height="15" fill="rgb(229,154,7)" fg:x="229" fg:w="1"/><text x="18.9898%" y="63.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="18.8216%" y="549" width="0.0818%" height="15" fill="rgb(249,90,18)" fg:x="230" fg:w="1"/><text x="19.0716%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.8216%" y="533" width="0.0818%" height="15" fill="rgb(223,53,15)" fg:x="230" fg:w="1"/><text x="19.0716%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.9034%" y="517" width="0.0818%" height="15" fill="rgb(253,86,38)" fg:x="231" fg:w="1"/><text x="19.1534%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.9034%" y="501" width="0.0818%" height="15" fill="rgb(222,198,9)" fg:x="231" fg:w="1"/><text x="19.1534%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.9034%" y="485" width="0.0818%" height="15" fill="rgb(240,146,25)" fg:x="231" fg:w="1"/><text x="19.1534%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.9034%" y="469" width="0.0818%" height="15" fill="rgb(225,38,10)" fg:x="231" fg:w="1"/><text x="19.1534%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9034%" y="453" width="0.0818%" height="15" fill="rgb(246,93,4)" fg:x="231" fg:w="1"/><text x="19.1534%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.9853%" y="485" width="0.0818%" height="15" fill="rgb(222,55,18)" fg:x="232" fg:w="1"/><text x="19.2353%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.9853%" y="469" width="0.0818%" height="15" fill="rgb(233,137,48)" fg:x="232" fg:w="1"/><text x="19.2353%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="18.9853%" y="517" width="0.1637%" height="15" fill="rgb(214,8,54)" fg:x="232" fg:w="2"/><text x="19.2353%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="18.9853%" y="501" width="0.1637%" height="15" fill="rgb(206,75,4)" fg:x="232" fg:w="2"/><text x="19.2353%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.0671%" y="485" width="0.0818%" height="15" fill="rgb(238,171,14)" fg:x="233" fg:w="1"/><text x="19.3171%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.0671%" y="469" width="0.0818%" height="15" fill="rgb(233,70,41)" fg:x="233" fg:w="1"/><text x="19.3171%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.41%)</title><rect x="18.8216%" y="565" width="0.4092%" height="15" fill="rgb(214,68,36)" fg:x="230" fg:w="5"/><text x="19.0716%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="18.9034%" y="549" width="0.3273%" height="15" fill="rgb(223,29,5)" fg:x="231" fg:w="4"/><text x="19.1534%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="18.9034%" y="533" width="0.3273%" height="15" fill="rgb(251,22,40)" fg:x="231" fg:w="4"/><text x="19.1534%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1489%" y="517" width="0.0818%" height="15" fill="rgb(210,67,41)" fg:x="234" fg:w="1"/><text x="19.3989%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1489%" y="501" width="0.0818%" height="15" fill="rgb(225,177,31)" fg:x="234" fg:w="1"/><text x="19.3989%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1489%" y="485" width="0.0818%" height="15" fill="rgb(221,229,11)" fg:x="234" fg:w="1"/><text x="19.3989%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1489%" y="469" width="0.0818%" height="15" fill="rgb(247,172,52)" fg:x="234" fg:w="1"/><text x="19.3989%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.1489%" y="453" width="0.0818%" height="15" fill="rgb(212,73,19)" fg:x="234" fg:w="1"/><text x="19.3989%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1489%" y="437" width="0.0818%" height="15" fill="rgb(244,7,46)" fg:x="234" fg:w="1"/><text x="19.3989%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="19.1489%" y="421" width="0.0818%" height="15" fill="rgb(230,113,20)" fg:x="234" fg:w="1"/><text x="19.3989%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2308%" y="517" width="0.0818%" height="15" fill="rgb(209,97,30)" fg:x="235" fg:w="1"/><text x="19.4808%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.2308%" y="501" width="0.0818%" height="15" fill="rgb(243,89,12)" fg:x="235" fg:w="1"/><text x="19.4808%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2308%" y="485" width="0.0818%" height="15" fill="rgb(228,32,19)" fg:x="235" fg:w="1"/><text x="19.4808%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2308%" y="469" width="0.0818%" height="15" fill="rgb(248,25,17)" fg:x="235" fg:w="1"/><text x="19.4808%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.2308%" y="453" width="0.0818%" height="15" fill="rgb(232,161,29)" fg:x="235" fg:w="1"/><text x="19.4808%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.2308%" y="437" width="0.0818%" height="15" fill="rgb(251,192,11)" fg:x="235" fg:w="1"/><text x="19.4808%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.2308%" y="421" width="0.0818%" height="15" fill="rgb(240,47,32)" fg:x="235" fg:w="1"/><text x="19.4808%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.2308%" y="405" width="0.0818%" height="15" fill="rgb(250,16,45)" fg:x="235" fg:w="1"/><text x="19.4808%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.2308%" y="389" width="0.0818%" height="15" fill="rgb(227,217,42)" fg:x="235" fg:w="1"/><text x="19.4808%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.2308%" y="373" width="0.0818%" height="15" fill="rgb(206,82,54)" fg:x="235" fg:w="1"/><text x="19.4808%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.2308%" y="357" width="0.0818%" height="15" fill="rgb(243,145,25)" fg:x="235" fg:w="1"/><text x="19.4808%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.2308%" y="341" width="0.0818%" height="15" fill="rgb(207,166,24)" fg:x="235" fg:w="1"/><text x="19.4808%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.2308%" y="325" width="0.0818%" height="15" fill="rgb(215,191,44)" fg:x="235" fg:w="1"/><text x="19.4808%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2308%" y="309" width="0.0818%" height="15" fill="rgb(234,218,51)" fg:x="235" fg:w="1"/><text x="19.4808%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.25%)</title><rect x="19.2308%" y="549" width="0.2455%" height="15" fill="rgb(245,133,21)" fg:x="235" fg:w="3"/><text x="19.4808%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="19.2308%" y="533" width="0.2455%" height="15" fill="rgb(230,136,45)" fg:x="235" fg:w="3"/><text x="19.4808%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.3126%" y="517" width="0.1637%" height="15" fill="rgb(247,63,43)" fg:x="236" fg:w="2"/><text x="19.5626%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.3126%" y="501" width="0.1637%" height="15" fill="rgb(254,223,31)" fg:x="236" fg:w="2"/><text x="19.5626%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (15 samples, 1.23%)</title><rect x="18.3306%" y="597" width="1.2275%" height="15" fill="rgb(236,185,0)" fg:x="224" fg:w="15"/><text x="18.5806%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.15%)</title><rect x="18.4124%" y="581" width="1.1457%" height="15" fill="rgb(231,139,46)" fg:x="225" fg:w="14"/><text x="18.6624%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.33%)</title><rect x="19.2308%" y="565" width="0.3273%" height="15" fill="rgb(236,147,31)" fg:x="235" fg:w="4"/><text x="19.4808%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.4763%" y="549" width="0.0818%" height="15" fill="rgb(225,222,22)" fg:x="238" fg:w="1"/><text x="19.7263%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4763%" y="533" width="0.0818%" height="15" fill="rgb(225,193,14)" fg:x="238" fg:w="1"/><text x="19.7263%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="19.5581%" y="565" width="0.1637%" height="15" fill="rgb(253,193,46)" fg:x="239" fg:w="2"/><text x="19.8081%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.5581%" y="549" width="0.1637%" height="15" fill="rgb(218,187,39)" fg:x="239" fg:w="2"/><text x="19.8081%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.6399%" y="533" width="0.0818%" height="15" fill="rgb(227,162,48)" fg:x="240" fg:w="1"/><text x="19.8899%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6399%" y="517" width="0.0818%" height="15" fill="rgb(222,25,5)" fg:x="240" fg:w="1"/><text x="19.8899%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.6399%" y="501" width="0.0818%" height="15" fill="rgb(211,205,16)" fg:x="240" fg:w="1"/><text x="19.8899%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6399%" y="485" width="0.0818%" height="15" fill="rgb(244,191,2)" fg:x="240" fg:w="1"/><text x="19.8899%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.6399%" y="469" width="0.0818%" height="15" fill="rgb(248,159,12)" fg:x="240" fg:w="1"/><text x="19.8899%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.6399%" y="453" width="0.0818%" height="15" fill="rgb(235,204,17)" fg:x="240" fg:w="1"/><text x="19.8899%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8036%" y="533" width="0.0818%" height="15" fill="rgb(240,21,27)" fg:x="242" fg:w="1"/><text x="20.0536%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8036%" y="517" width="0.0818%" height="15" fill="rgb(224,170,31)" fg:x="242" fg:w="1"/><text x="20.0536%" y="527.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.41%)</title><rect x="19.5581%" y="597" width="0.4092%" height="15" fill="rgb(223,145,32)" fg:x="239" fg:w="5"/><text x="19.8081%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.41%)</title><rect x="19.5581%" y="581" width="0.4092%" height="15" fill="rgb(243,100,5)" fg:x="239" fg:w="5"/><text x="19.8081%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.25%)</title><rect x="19.7218%" y="565" width="0.2455%" height="15" fill="rgb(242,131,51)" fg:x="241" fg:w="3"/><text x="19.9718%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="19.8036%" y="549" width="0.1637%" height="15" fill="rgb(223,156,46)" fg:x="242" fg:w="2"/><text x="20.0536%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.8854%" y="533" width="0.0818%" height="15" fill="rgb(215,10,40)" fg:x="243" fg:w="1"/><text x="20.1354%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.1309%" y="437" width="0.0818%" height="15" fill="rgb(233,155,0)" fg:x="246" fg:w="1"/><text x="20.3809%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1309%" y="517" width="0.1637%" height="15" fill="rgb(247,78,6)" fg:x="246" fg:w="2"/><text x="20.3809%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1309%" y="501" width="0.1637%" height="15" fill="rgb(237,217,21)" fg:x="246" fg:w="2"/><text x="20.3809%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1309%" y="485" width="0.1637%" height="15" fill="rgb(212,1,21)" fg:x="246" fg:w="2"/><text x="20.3809%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1309%" y="469" width="0.1637%" height="15" fill="rgb(213,7,14)" fg:x="246" fg:w="2"/><text x="20.3809%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1309%" y="453" width="0.1637%" height="15" fill="rgb(225,84,14)" fg:x="246" fg:w="2"/><text x="20.3809%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.2128%" y="437" width="0.0818%" height="15" fill="rgb(239,216,39)" fg:x="247" fg:w="1"/><text x="20.4628%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.25%)</title><rect x="20.1309%" y="581" width="0.2455%" height="15" fill="rgb(253,29,23)" fg:x="246" fg:w="3"/><text x="20.3809%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="20.1309%" y="565" width="0.2455%" height="15" fill="rgb(220,167,50)" fg:x="246" fg:w="3"/><text x="20.3809%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="20.1309%" y="549" width="0.2455%" height="15" fill="rgb(232,141,1)" fg:x="246" fg:w="3"/><text x="20.3809%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="20.1309%" y="533" width="0.2455%" height="15" fill="rgb(222,210,1)" fg:x="246" fg:w="3"/><text x="20.3809%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.2946%" y="517" width="0.0818%" height="15" fill="rgb(219,84,10)" fg:x="248" fg:w="1"/><text x="20.5446%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.2946%" y="501" width="0.0818%" height="15" fill="rgb(245,188,6)" fg:x="248" fg:w="1"/><text x="20.5446%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.2946%" y="485" width="0.0818%" height="15" fill="rgb(252,139,39)" fg:x="248" fg:w="1"/><text x="20.5446%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.2946%" y="469" width="0.0818%" height="15" fill="rgb(218,42,26)" fg:x="248" fg:w="1"/><text x="20.5446%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.2946%" y="453" width="0.0818%" height="15" fill="rgb(237,226,51)" fg:x="248" fg:w="1"/><text x="20.5446%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.2946%" y="437" width="0.0818%" height="15" fill="rgb(246,15,17)" fg:x="248" fg:w="1"/><text x="20.5446%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.2946%" y="421" width="0.0818%" height="15" fill="rgb(228,170,42)" fg:x="248" fg:w="1"/><text x="20.5446%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.2946%" y="405" width="0.0818%" height="15" fill="rgb(248,118,53)" fg:x="248" fg:w="1"/><text x="20.5446%" y="415.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="20.3764%" y="581" width="0.0818%" height="15" fill="rgb(207,30,10)" fg:x="249" fg:w="1"/><text x="20.6264%" y="591.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="20.3764%" y="565" width="0.0818%" height="15" fill="rgb(217,104,38)" fg:x="249" fg:w="1"/><text x="20.6264%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.3764%" y="549" width="0.0818%" height="15" fill="rgb(211,165,26)" fg:x="249" fg:w="1"/><text x="20.6264%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.3764%" y="533" width="0.0818%" height="15" fill="rgb(247,38,9)" fg:x="249" fg:w="1"/><text x="20.6264%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="20.4583%" y="533" width="0.0818%" height="15" fill="rgb(218,187,8)" fg:x="250" fg:w="1"/><text x="20.7083%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="20.4583%" y="517" width="0.0818%" height="15" fill="rgb(247,94,28)" fg:x="250" fg:w="1"/><text x="20.7083%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.4583%" y="501" width="0.0818%" height="15" fill="rgb(218,173,30)" fg:x="250" fg:w="1"/><text x="20.7083%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="20.5401%" y="501" width="0.0818%" height="15" fill="rgb(245,45,36)" fg:x="251" fg:w="1"/><text x="20.7901%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="20.5401%" y="485" width="0.0818%" height="15" fill="rgb(221,172,44)" fg:x="251" fg:w="1"/><text x="20.7901%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="20.5401%" y="469" width="0.0818%" height="15" fill="rgb(222,45,12)" fg:x="251" fg:w="1"/><text x="20.7901%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5401%" y="453" width="0.0818%" height="15" fill="rgb(250,10,22)" fg:x="251" fg:w="1"/><text x="20.7901%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.33%)</title><rect x="20.5401%" y="533" width="0.3273%" height="15" fill="rgb(239,27,0)" fg:x="251" fg:w="4"/><text x="20.7901%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="20.5401%" y="517" width="0.3273%" height="15" fill="rgb(223,118,22)" fg:x="251" fg:w="4"/><text x="20.7901%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="20.6219%" y="501" width="0.2455%" height="15" fill="rgb(251,81,25)" fg:x="252" fg:w="3"/><text x="20.8719%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="20.6219%" y="485" width="0.2455%" height="15" fill="rgb(237,225,53)" fg:x="252" fg:w="3"/><text x="20.8719%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="20.6219%" y="469" width="0.2455%" height="15" fill="rgb(237,186,51)" fg:x="252" fg:w="3"/><text x="20.8719%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="20.6219%" y="453" width="0.2455%" height="15" fill="rgb(247,209,11)" fg:x="252" fg:w="3"/><text x="20.8719%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="20.6219%" y="437" width="0.2455%" height="15" fill="rgb(223,109,27)" fg:x="252" fg:w="3"/><text x="20.8719%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="20.6219%" y="421" width="0.2455%" height="15" fill="rgb(246,181,13)" fg:x="252" fg:w="3"/><text x="20.8719%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.7038%" y="405" width="0.1637%" height="15" fill="rgb(234,57,44)" fg:x="253" fg:w="2"/><text x="20.9538%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7856%" y="389" width="0.0818%" height="15" fill="rgb(211,227,50)" fg:x="254" fg:w="1"/><text x="21.0356%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7856%" y="373" width="0.0818%" height="15" fill="rgb(254,57,34)" fg:x="254" fg:w="1"/><text x="21.0356%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.7856%" y="357" width="0.0818%" height="15" fill="rgb(227,212,26)" fg:x="254" fg:w="1"/><text x="21.0356%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.7856%" y="341" width="0.0818%" height="15" fill="rgb(244,169,44)" fg:x="254" fg:w="1"/><text x="21.0356%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.7856%" y="325" width="0.0818%" height="15" fill="rgb(236,135,50)" fg:x="254" fg:w="1"/><text x="21.0356%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7856%" y="309" width="0.0818%" height="15" fill="rgb(241,89,30)" fg:x="254" fg:w="1"/><text x="21.0356%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7856%" y="293" width="0.0818%" height="15" fill="rgb(206,113,34)" fg:x="254" fg:w="1"/><text x="21.0356%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.7856%" y="277" width="0.0818%" height="15" fill="rgb(218,104,52)" fg:x="254" fg:w="1"/><text x="21.0356%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.7856%" y="261" width="0.0818%" height="15" fill="rgb(223,82,32)" fg:x="254" fg:w="1"/><text x="21.0356%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.7856%" y="245" width="0.0818%" height="15" fill="rgb(249,219,30)" fg:x="254" fg:w="1"/><text x="21.0356%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.7856%" y="229" width="0.0818%" height="15" fill="rgb(233,141,21)" fg:x="254" fg:w="1"/><text x="21.0356%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7856%" y="213" width="0.0818%" height="15" fill="rgb(252,87,44)" fg:x="254" fg:w="1"/><text x="21.0356%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="20.8674%" y="501" width="0.0818%" height="15" fill="rgb(229,48,33)" fg:x="255" fg:w="1"/><text x="21.1174%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="20.8674%" y="485" width="0.0818%" height="15" fill="rgb(229,23,22)" fg:x="255" fg:w="1"/><text x="21.1174%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="20.8674%" y="469" width="0.0818%" height="15" fill="rgb(244,116,16)" fg:x="255" fg:w="1"/><text x="21.1174%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="20.8674%" y="453" width="0.0818%" height="15" fill="rgb(247,45,10)" fg:x="255" fg:w="1"/><text x="21.1174%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.8674%" y="437" width="0.0818%" height="15" fill="rgb(228,60,29)" fg:x="255" fg:w="1"/><text x="21.1174%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.8674%" y="421" width="0.0818%" height="15" fill="rgb(205,129,15)" fg:x="255" fg:w="1"/><text x="21.1174%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="20.8674%" y="405" width="0.0818%" height="15" fill="rgb(206,229,4)" fg:x="255" fg:w="1"/><text x="21.1174%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="20.8674%" y="389" width="0.0818%" height="15" fill="rgb(249,191,30)" fg:x="255" fg:w="1"/><text x="21.1174%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.8674%" y="373" width="0.0818%" height="15" fill="rgb(250,84,54)" fg:x="255" fg:w="1"/><text x="21.1174%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.8674%" y="357" width="0.0818%" height="15" fill="rgb(207,25,53)" fg:x="255" fg:w="1"/><text x="21.1174%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="20.8674%" y="341" width="0.0818%" height="15" fill="rgb(235,40,8)" fg:x="255" fg:w="1"/><text x="21.1174%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="20.8674%" y="325" width="0.0818%" height="15" fill="rgb(226,169,33)" fg:x="255" fg:w="1"/><text x="21.1174%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.8674%" y="309" width="0.0818%" height="15" fill="rgb(238,110,8)" fg:x="255" fg:w="1"/><text x="21.1174%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.8674%" y="293" width="0.0818%" height="15" fill="rgb(251,206,12)" fg:x="255" fg:w="1"/><text x="21.1174%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.8674%" y="277" width="0.0818%" height="15" fill="rgb(248,171,18)" fg:x="255" fg:w="1"/><text x="21.1174%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.8674%" y="261" width="0.0818%" height="15" fill="rgb(213,65,46)" fg:x="255" fg:w="1"/><text x="21.1174%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="20.8674%" y="245" width="0.0818%" height="15" fill="rgb(211,154,15)" fg:x="255" fg:w="1"/><text x="21.1174%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="20.8674%" y="229" width="0.0818%" height="15" fill="rgb(217,75,43)" fg:x="255" fg:w="1"/><text x="21.1174%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="20.8674%" y="213" width="0.0818%" height="15" fill="rgb(230,32,33)" fg:x="255" fg:w="1"/><text x="21.1174%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="20.8674%" y="197" width="0.0818%" height="15" fill="rgb(221,100,16)" fg:x="255" fg:w="1"/><text x="21.1174%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="20.8674%" y="181" width="0.0818%" height="15" fill="rgb(212,129,47)" fg:x="255" fg:w="1"/><text x="21.1174%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="20.9493%" y="501" width="0.0818%" height="15" fill="rgb(239,217,47)" fg:x="256" fg:w="1"/><text x="21.1993%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="20.9493%" y="485" width="0.0818%" height="15" fill="rgb(230,84,24)" fg:x="256" fg:w="1"/><text x="21.1993%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.9493%" y="469" width="0.0818%" height="15" fill="rgb(214,153,51)" fg:x="256" fg:w="1"/><text x="21.1993%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9493%" y="453" width="0.0818%" height="15" fill="rgb(231,6,35)" fg:x="256" fg:w="1"/><text x="21.1993%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9493%" y="437" width="0.0818%" height="15" fill="rgb(229,122,30)" fg:x="256" fg:w="1"/><text x="21.1993%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9493%" y="421" width="0.0818%" height="15" fill="rgb(234,71,10)" fg:x="256" fg:w="1"/><text x="21.1993%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9493%" y="405" width="0.0818%" height="15" fill="rgb(215,173,26)" fg:x="256" fg:w="1"/><text x="21.1993%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="21.0311%" y="453" width="0.1637%" height="15" fill="rgb(248,118,52)" fg:x="257" fg:w="2"/><text x="21.2811%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.0311%" y="437" width="0.1637%" height="15" fill="rgb(237,55,46)" fg:x="257" fg:w="2"/><text x="21.2811%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.0311%" y="421" width="0.1637%" height="15" fill="rgb(243,214,43)" fg:x="257" fg:w="2"/><text x="21.2811%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.1129%" y="405" width="0.0818%" height="15" fill="rgb(252,123,30)" fg:x="258" fg:w="1"/><text x="21.3629%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.25%)</title><rect x="21.0311%" y="485" width="0.2455%" height="15" fill="rgb(215,73,39)" fg:x="257" fg:w="3"/><text x="21.2811%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="21.0311%" y="469" width="0.2455%" height="15" fill="rgb(251,194,29)" fg:x="257" fg:w="3"/><text x="21.2811%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="21.1948%" y="453" width="0.0818%" height="15" fill="rgb(224,58,52)" fg:x="259" fg:w="1"/><text x="21.4448%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.1948%" y="437" width="0.0818%" height="15" fill="rgb(248,106,46)" fg:x="259" fg:w="1"/><text x="21.4448%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1948%" y="421" width="0.0818%" height="15" fill="rgb(223,80,29)" fg:x="259" fg:w="1"/><text x="21.4448%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.2766%" y="437" width="0.0818%" height="15" fill="rgb(243,137,9)" fg:x="260" fg:w="1"/><text x="21.5266%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.3584%" y="437" width="0.0818%" height="15" fill="rgb(235,121,28)" fg:x="261" fg:w="1"/><text x="21.6084%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.49%)</title><rect x="21.0311%" y="501" width="0.4910%" height="15" fill="rgb(219,121,41)" fg:x="257" fg:w="6"/><text x="21.2811%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.25%)</title><rect x="21.2766%" y="485" width="0.2455%" height="15" fill="rgb(251,60,6)" fg:x="260" fg:w="3"/><text x="21.5266%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.25%)</title><rect x="21.2766%" y="469" width="0.2455%" height="15" fill="rgb(208,12,30)" fg:x="260" fg:w="3"/><text x="21.5266%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.25%)</title><rect x="21.2766%" y="453" width="0.2455%" height="15" fill="rgb(207,176,36)" fg:x="260" fg:w="3"/><text x="21.5266%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.4403%" y="437" width="0.0818%" height="15" fill="rgb(211,188,29)" fg:x="262" fg:w="1"/><text x="21.6903%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.4403%" y="421" width="0.0818%" height="15" fill="rgb(220,184,37)" fg:x="262" fg:w="1"/><text x="21.6903%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6039%" y="421" width="0.0818%" height="15" fill="rgb(239,87,37)" fg:x="264" fg:w="1"/><text x="21.8539%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6039%" y="405" width="0.0818%" height="15" fill="rgb(232,113,44)" fg:x="264" fg:w="1"/><text x="21.8539%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6039%" y="389" width="0.0818%" height="15" fill="rgb(246,25,39)" fg:x="264" fg:w="1"/><text x="21.8539%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6039%" y="373" width="0.0818%" height="15" fill="rgb(247,30,13)" fg:x="264" fg:w="1"/><text x="21.8539%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6039%" y="357" width="0.0818%" height="15" fill="rgb(230,176,35)" fg:x="264" fg:w="1"/><text x="21.8539%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.6039%" y="341" width="0.0818%" height="15" fill="rgb(222,23,18)" fg:x="264" fg:w="1"/><text x="21.8539%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.6039%" y="325" width="0.0818%" height="15" fill="rgb(234,86,8)" fg:x="264" fg:w="1"/><text x="21.8539%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.6039%" y="309" width="0.0818%" height="15" fill="rgb(206,218,47)" fg:x="264" fg:w="1"/><text x="21.8539%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="21.6039%" y="293" width="0.0818%" height="15" fill="rgb(229,35,31)" fg:x="264" fg:w="1"/><text x="21.8539%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.6039%" y="277" width="0.0818%" height="15" fill="rgb(242,81,7)" fg:x="264" fg:w="1"/><text x="21.8539%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.6858%" y="421" width="0.0818%" height="15" fill="rgb(231,11,35)" fg:x="265" fg:w="1"/><text x="21.9358%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.6858%" y="405" width="0.0818%" height="15" fill="rgb(219,218,17)" fg:x="265" fg:w="1"/><text x="21.9358%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.6858%" y="389" width="0.0818%" height="15" fill="rgb(221,83,32)" fg:x="265" fg:w="1"/><text x="21.9358%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.6858%" y="373" width="0.0818%" height="15" fill="rgb(233,49,54)" fg:x="265" fg:w="1"/><text x="21.9358%" y="383.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="21.5221%" y="453" width="0.4092%" height="15" fill="rgb(206,18,51)" fg:x="263" fg:w="5"/><text x="21.7721%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="21.5221%" y="437" width="0.4092%" height="15" fill="rgb(249,193,15)" fg:x="263" fg:w="5"/><text x="21.7721%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.7676%" y="421" width="0.1637%" height="15" fill="rgb(245,186,19)" fg:x="266" fg:w="2"/><text x="22.0176%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.7676%" y="405" width="0.1637%" height="15" fill="rgb(230,4,24)" fg:x="266" fg:w="2"/><text x="22.0176%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.7676%" y="389" width="0.1637%" height="15" fill="rgb(234,75,27)" fg:x="266" fg:w="2"/><text x="22.0176%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8494%" y="373" width="0.0818%" height="15" fill="rgb(244,187,35)" fg:x="267" fg:w="1"/><text x="22.0994%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.8494%" y="357" width="0.0818%" height="15" fill="rgb(241,97,43)" fg:x="267" fg:w="1"/><text x="22.0994%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8494%" y="341" width="0.0818%" height="15" fill="rgb(236,94,2)" fg:x="267" fg:w="1"/><text x="22.0994%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8494%" y="325" width="0.0818%" height="15" fill="rgb(231,175,7)" fg:x="267" fg:w="1"/><text x="22.0994%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.23%)</title><rect x="20.8674%" y="517" width="1.2275%" height="15" fill="rgb(236,89,47)" fg:x="255" fg:w="15"/><text x="21.1174%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="21.5221%" y="501" width="0.5728%" height="15" fill="rgb(213,191,37)" fg:x="263" fg:w="7"/><text x="21.7721%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.57%)</title><rect x="21.5221%" y="485" width="0.5728%" height="15" fill="rgb(252,0,34)" fg:x="263" fg:w="7"/><text x="21.7721%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.57%)</title><rect x="21.5221%" y="469" width="0.5728%" height="15" fill="rgb(208,145,44)" fg:x="263" fg:w="7"/><text x="21.7721%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="21.9313%" y="453" width="0.1637%" height="15" fill="rgb(227,95,50)" fg:x="268" fg:w="2"/><text x="22.1813%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.9313%" y="437" width="0.1637%" height="15" fill="rgb(222,136,24)" fg:x="268" fg:w="2"/><text x="22.1813%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.0131%" y="421" width="0.0818%" height="15" fill="rgb(218,105,10)" fg:x="269" fg:w="1"/><text x="22.2631%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.0131%" y="405" width="0.0818%" height="15" fill="rgb(216,65,28)" fg:x="269" fg:w="1"/><text x="22.2631%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="22.0131%" y="389" width="0.0818%" height="15" fill="rgb(229,6,28)" fg:x="269" fg:w="1"/><text x="22.2631%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.0131%" y="373" width="0.0818%" height="15" fill="rgb(222,160,42)" fg:x="269" fg:w="1"/><text x="22.2631%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.0131%" y="357" width="0.0818%" height="15" fill="rgb(235,83,49)" fg:x="269" fg:w="1"/><text x="22.2631%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="22.0131%" y="341" width="0.0818%" height="15" fill="rgb(236,86,36)" fg:x="269" fg:w="1"/><text x="22.2631%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.0131%" y="325" width="0.0818%" height="15" fill="rgb(236,19,41)" fg:x="269" fg:w="1"/><text x="22.2631%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.0131%" y="309" width="0.0818%" height="15" fill="rgb(217,71,31)" fg:x="269" fg:w="1"/><text x="22.2631%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.0131%" y="293" width="0.0818%" height="15" fill="rgb(236,209,25)" fg:x="269" fg:w="1"/><text x="22.2631%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="22.0949%" y="501" width="0.0818%" height="15" fill="rgb(247,104,21)" fg:x="270" fg:w="1"/><text x="22.3449%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="22.0949%" y="485" width="0.0818%" height="15" fill="rgb(243,80,38)" fg:x="270" fg:w="1"/><text x="22.3449%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.2586%" y="341" width="0.0818%" height="15" fill="rgb(232,109,38)" fg:x="272" fg:w="1"/><text x="22.5086%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.2586%" y="325" width="0.0818%" height="15" fill="rgb(212,177,53)" fg:x="272" fg:w="1"/><text x="22.5086%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.2586%" y="309" width="0.0818%" height="15" fill="rgb(227,30,34)" fg:x="272" fg:w="1"/><text x="22.5086%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.2586%" y="293" width="0.0818%" height="15" fill="rgb(205,175,25)" fg:x="272" fg:w="1"/><text x="22.5086%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.2586%" y="277" width="0.0818%" height="15" fill="rgb(249,39,54)" fg:x="272" fg:w="1"/><text x="22.5086%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.2586%" y="261" width="0.0818%" height="15" fill="rgb(215,54,37)" fg:x="272" fg:w="1"/><text x="22.5086%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.2586%" y="245" width="0.0818%" height="15" fill="rgb(205,60,46)" fg:x="272" fg:w="1"/><text x="22.5086%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.2586%" y="229" width="0.0818%" height="15" fill="rgb(238,89,29)" fg:x="272" fg:w="1"/><text x="22.5086%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.2586%" y="213" width="0.0818%" height="15" fill="rgb(212,48,10)" fg:x="272" fg:w="1"/><text x="22.5086%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.2586%" y="197" width="0.0818%" height="15" fill="rgb(237,186,28)" fg:x="272" fg:w="1"/><text x="22.5086%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.2586%" y="181" width="0.0818%" height="15" fill="rgb(237,204,4)" fg:x="272" fg:w="1"/><text x="22.5086%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.2586%" y="165" width="0.0818%" height="15" fill="rgb(237,15,47)" fg:x="272" fg:w="1"/><text x="22.5086%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.2586%" y="373" width="0.1637%" height="15" fill="rgb(244,110,25)" fg:x="272" fg:w="2"/><text x="22.5086%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.2586%" y="357" width="0.1637%" height="15" fill="rgb(241,12,16)" fg:x="272" fg:w="2"/><text x="22.5086%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3404%" y="341" width="0.0818%" height="15" fill="rgb(235,25,9)" fg:x="273" fg:w="1"/><text x="22.5904%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="22.2586%" y="421" width="0.2455%" height="15" fill="rgb(245,159,19)" fg:x="272" fg:w="3"/><text x="22.5086%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="22.2586%" y="405" width="0.2455%" height="15" fill="rgb(236,63,32)" fg:x="272" fg:w="3"/><text x="22.5086%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="22.2586%" y="389" width="0.2455%" height="15" fill="rgb(235,32,52)" fg:x="272" fg:w="3"/><text x="22.5086%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4223%" y="373" width="0.0818%" height="15" fill="rgb(209,176,21)" fg:x="274" fg:w="1"/><text x="22.6723%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4223%" y="357" width="0.0818%" height="15" fill="rgb(205,90,42)" fg:x="274" fg:w="1"/><text x="22.6723%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.4223%" y="341" width="0.0818%" height="15" fill="rgb(213,132,16)" fg:x="274" fg:w="1"/><text x="22.6723%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.4223%" y="325" width="0.0818%" height="15" fill="rgb(232,11,22)" fg:x="274" fg:w="1"/><text x="22.6723%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.4223%" y="309" width="0.0818%" height="15" fill="rgb(248,167,41)" fg:x="274" fg:w="1"/><text x="22.6723%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4223%" y="293" width="0.0818%" height="15" fill="rgb(209,127,6)" fg:x="274" fg:w="1"/><text x="22.6723%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4223%" y="277" width="0.0818%" height="15" fill="rgb(246,210,34)" fg:x="274" fg:w="1"/><text x="22.6723%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.4223%" y="261" width="0.0818%" height="15" fill="rgb(238,165,13)" fg:x="274" fg:w="1"/><text x="22.6723%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.4223%" y="245" width="0.0818%" height="15" fill="rgb(233,98,15)" fg:x="274" fg:w="1"/><text x="22.6723%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.4223%" y="229" width="0.0818%" height="15" fill="rgb(215,215,51)" fg:x="274" fg:w="1"/><text x="22.6723%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.4223%" y="213" width="0.0818%" height="15" fill="rgb(217,161,25)" fg:x="274" fg:w="1"/><text x="22.6723%" y="223.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="22.4223%" y="197" width="0.0818%" height="15" fill="rgb(217,167,48)" fg:x="274" fg:w="1"/><text x="22.6723%" y="207.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.4223%" y="181" width="0.0818%" height="15" fill="rgb(205,163,34)" fg:x="274" fg:w="1"/><text x="22.6723%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5041%" y="421" width="0.0818%" height="15" fill="rgb(241,197,31)" fg:x="275" fg:w="1"/><text x="22.7541%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.5041%" y="405" width="0.0818%" height="15" fill="rgb(225,123,11)" fg:x="275" fg:w="1"/><text x="22.7541%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5041%" y="389" width="0.0818%" height="15" fill="rgb(217,4,20)" fg:x="275" fg:w="1"/><text x="22.7541%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.5041%" y="373" width="0.0818%" height="15" fill="rgb(215,55,9)" fg:x="275" fg:w="1"/><text x="22.7541%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.57%)</title><rect x="22.1768%" y="469" width="0.5728%" height="15" fill="rgb(218,165,5)" fg:x="271" fg:w="7"/><text x="22.4268%" y="479.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.57%)</title><rect x="22.1768%" y="453" width="0.5728%" height="15" fill="rgb(222,175,15)" fg:x="271" fg:w="7"/><text x="22.4268%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.57%)</title><rect x="22.1768%" y="437" width="0.5728%" height="15" fill="rgb(223,85,34)" fg:x="271" fg:w="7"/><text x="22.4268%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.5859%" y="421" width="0.1637%" height="15" fill="rgb(234,228,29)" fg:x="276" fg:w="2"/><text x="22.8359%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.5859%" y="405" width="0.1637%" height="15" fill="rgb(239,7,28)" fg:x="276" fg:w="2"/><text x="22.8359%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.5859%" y="389" width="0.1637%" height="15" fill="rgb(252,222,53)" fg:x="276" fg:w="2"/><text x="22.8359%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6678%" y="373" width="0.0818%" height="15" fill="rgb(232,146,44)" fg:x="277" fg:w="1"/><text x="22.9178%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.6678%" y="357" width="0.0818%" height="15" fill="rgb(243,223,53)" fg:x="277" fg:w="1"/><text x="22.9178%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6678%" y="341" width="0.0818%" height="15" fill="rgb(219,128,25)" fg:x="277" fg:w="1"/><text x="22.9178%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.6678%" y="325" width="0.0818%" height="15" fill="rgb(223,56,32)" fg:x="277" fg:w="1"/><text x="22.9178%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6678%" y="309" width="0.0818%" height="15" fill="rgb(237,41,3)" fg:x="277" fg:w="1"/><text x="22.9178%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7496%" y="453" width="0.0818%" height="15" fill="rgb(235,138,9)" fg:x="278" fg:w="1"/><text x="22.9996%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7496%" y="437" width="0.0818%" height="15" fill="rgb(214,131,10)" fg:x="278" fg:w="1"/><text x="22.9996%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.7496%" y="421" width="0.0818%" height="15" fill="rgb(229,89,7)" fg:x="278" fg:w="1"/><text x="22.9996%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.7496%" y="405" width="0.0818%" height="15" fill="rgb(240,24,42)" fg:x="278" fg:w="1"/><text x="22.9996%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.7496%" y="389" width="0.0818%" height="15" fill="rgb(243,188,54)" fg:x="278" fg:w="1"/><text x="22.9996%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="22.7496%" y="373" width="0.0818%" height="15" fill="rgb(246,92,22)" fg:x="278" fg:w="1"/><text x="22.9996%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.7496%" y="357" width="0.0818%" height="15" fill="rgb(211,176,51)" fg:x="278" fg:w="1"/><text x="22.9996%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.0769%" y="421" width="0.0818%" height="15" fill="rgb(246,207,34)" fg:x="282" fg:w="1"/><text x="23.3269%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.0769%" y="405" width="0.0818%" height="15" fill="rgb(239,95,2)" fg:x="282" fg:w="1"/><text x="23.3269%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.0769%" y="389" width="0.0818%" height="15" fill="rgb(211,124,25)" fg:x="282" fg:w="1"/><text x="23.3269%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.0769%" y="373" width="0.0818%" height="15" fill="rgb(231,221,19)" fg:x="282" fg:w="1"/><text x="23.3269%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.0769%" y="357" width="0.0818%" height="15" fill="rgb(239,183,19)" fg:x="282" fg:w="1"/><text x="23.3269%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.1588%" y="421" width="0.0818%" height="15" fill="rgb(221,130,29)" fg:x="283" fg:w="1"/><text x="23.4088%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.1588%" y="405" width="0.0818%" height="15" fill="rgb(206,130,36)" fg:x="283" fg:w="1"/><text x="23.4088%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.1588%" y="389" width="0.0818%" height="15" fill="rgb(215,70,19)" fg:x="283" fg:w="1"/><text x="23.4088%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1588%" y="373" width="0.0818%" height="15" fill="rgb(244,16,43)" fg:x="283" fg:w="1"/><text x="23.4088%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.57%)</title><rect x="22.7496%" y="469" width="0.5728%" height="15" fill="rgb(222,115,32)" fg:x="278" fg:w="7"/><text x="22.9996%" y="479.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="22.8314%" y="453" width="0.4910%" height="15" fill="rgb(247,48,25)" fg:x="279" fg:w="6"/><text x="23.0814%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="22.8314%" y="437" width="0.4910%" height="15" fill="rgb(226,180,51)" fg:x="279" fg:w="6"/><text x="23.0814%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.2406%" y="421" width="0.0818%" height="15" fill="rgb(217,142,42)" fg:x="284" fg:w="1"/><text x="23.4906%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.2406%" y="405" width="0.0818%" height="15" fill="rgb(220,178,3)" fg:x="284" fg:w="1"/><text x="23.4906%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.2406%" y="389" width="0.0818%" height="15" fill="rgb(217,221,4)" fg:x="284" fg:w="1"/><text x="23.4906%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.2406%" y="373" width="0.0818%" height="15" fill="rgb(237,63,43)" fg:x="284" fg:w="1"/><text x="23.4906%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.2406%" y="357" width="0.0818%" height="15" fill="rgb(220,57,8)" fg:x="284" fg:w="1"/><text x="23.4906%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.2406%" y="341" width="0.0818%" height="15" fill="rgb(254,186,27)" fg:x="284" fg:w="1"/><text x="23.4906%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2406%" y="325" width="0.0818%" height="15" fill="rgb(251,57,28)" fg:x="284" fg:w="1"/><text x="23.4906%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2406%" y="309" width="0.0818%" height="15" fill="rgb(215,228,0)" fg:x="284" fg:w="1"/><text x="23.4906%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (15 samples, 1.23%)</title><rect x="22.1768%" y="501" width="1.2275%" height="15" fill="rgb(237,218,39)" fg:x="271" fg:w="15"/><text x="22.4268%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (15 samples, 1.23%)</title><rect x="22.1768%" y="485" width="1.2275%" height="15" fill="rgb(207,2,54)" fg:x="271" fg:w="15"/><text x="22.4268%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3224%" y="469" width="0.0818%" height="15" fill="rgb(232,76,50)" fg:x="285" fg:w="1"/><text x="23.5724%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="23.4043%" y="501" width="0.0818%" height="15" fill="rgb(211,85,31)" fg:x="286" fg:w="1"/><text x="23.6543%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.4043%" y="485" width="0.0818%" height="15" fill="rgb(223,210,27)" fg:x="286" fg:w="1"/><text x="23.6543%" y="495.50"></text></g><g><title>plugins_core::build::Build::leads_to (33 samples, 2.70%)</title><rect x="20.8674%" y="533" width="2.7005%" height="15" fill="rgb(254,36,8)" fg:x="255" fg:w="33"/><text x="21.1174%" y="543.50">pl..</text></g><g><title>plugins_core::tools::leads_to (18 samples, 1.47%)</title><rect x="22.0949%" y="517" width="1.4730%" height="15" fill="rgb(213,4,25)" fg:x="270" fg:w="18"/><text x="22.3449%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.4861%" y="501" width="0.0818%" height="15" fill="rgb(224,2,39)" fg:x="287" fg:w="1"/><text x="23.7361%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4861%" y="485" width="0.0818%" height="15" fill="rgb(208,8,39)" fg:x="287" fg:w="1"/><text x="23.7361%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.4861%" y="469" width="0.0818%" height="15" fill="rgb(216,226,3)" fg:x="287" fg:w="1"/><text x="23.7361%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4861%" y="453" width="0.0818%" height="15" fill="rgb(249,139,31)" fg:x="287" fg:w="1"/><text x="23.7361%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.4861%" y="437" width="0.0818%" height="15" fill="rgb(242,170,35)" fg:x="287" fg:w="1"/><text x="23.7361%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.4861%" y="421" width="0.0818%" height="15" fill="rgb(238,14,9)" fg:x="287" fg:w="1"/><text x="23.7361%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.4861%" y="405" width="0.0818%" height="15" fill="rgb(251,81,46)" fg:x="287" fg:w="1"/><text x="23.7361%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.5679%" y="501" width="0.0818%" height="15" fill="rgb(230,23,4)" fg:x="288" fg:w="1"/><text x="23.8179%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.5679%" y="485" width="0.0818%" height="15" fill="rgb(211,85,25)" fg:x="288" fg:w="1"/><text x="23.8179%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.5679%" y="469" width="0.0818%" height="15" fill="rgb(252,23,31)" fg:x="288" fg:w="1"/><text x="23.8179%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5679%" y="453" width="0.0818%" height="15" fill="rgb(234,163,38)" fg:x="288" fg:w="1"/><text x="23.8179%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.5679%" y="437" width="0.0818%" height="15" fill="rgb(210,190,50)" fg:x="288" fg:w="1"/><text x="23.8179%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5679%" y="421" width="0.0818%" height="15" fill="rgb(228,158,3)" fg:x="288" fg:w="1"/><text x="23.8179%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (40 samples, 3.27%)</title><rect x="20.4583%" y="581" width="3.2733%" height="15" fill="rgb(216,130,0)" fg:x="250" fg:w="40"/><text x="20.7083%" y="591.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40 samples, 3.27%)</title><rect x="20.4583%" y="565" width="3.2733%" height="15" fill="rgb(224,184,10)" fg:x="250" fg:w="40"/><text x="20.7083%" y="575.50">&lt;al..</text></g><g><title>plugins_core::build::QuickThing::make (40 samples, 3.27%)</title><rect x="20.4583%" y="549" width="3.2733%" height="15" fill="rgb(214,202,18)" fg:x="250" fg:w="40"/><text x="20.7083%" y="559.50">plu..</text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="23.5679%" y="533" width="0.1637%" height="15" fill="rgb(213,229,54)" fg:x="288" fg:w="2"/><text x="23.8179%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="23.5679%" y="517" width="0.1637%" height="15" fill="rgb(246,120,0)" fg:x="288" fg:w="2"/><text x="23.8179%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="23.6498%" y="501" width="0.0818%" height="15" fill="rgb(237,6,15)" fg:x="289" fg:w="1"/><text x="23.8998%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.6498%" y="485" width="0.0818%" height="15" fill="rgb(252,156,15)" fg:x="289" fg:w="1"/><text x="23.8998%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="23.6498%" y="469" width="0.0818%" height="15" fill="rgb(249,78,18)" fg:x="289" fg:w="1"/><text x="23.8998%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.6498%" y="453" width="0.0818%" height="15" fill="rgb(230,223,44)" fg:x="289" fg:w="1"/><text x="23.8998%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="23.6498%" y="437" width="0.0818%" height="15" fill="rgb(230,222,32)" fg:x="289" fg:w="1"/><text x="23.8998%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.6498%" y="421" width="0.0818%" height="15" fill="rgb(247,54,6)" fg:x="289" fg:w="1"/><text x="23.8998%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="23.6498%" y="405" width="0.0818%" height="15" fill="rgb(247,115,45)" fg:x="289" fg:w="1"/><text x="23.8998%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="23.6498%" y="389" width="0.0818%" height="15" fill="rgb(213,203,37)" fg:x="289" fg:w="1"/><text x="23.8998%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.6498%" y="373" width="0.0818%" height="15" fill="rgb(248,188,18)" fg:x="289" fg:w="1"/><text x="23.8998%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.8134%" y="469" width="0.0818%" height="15" fill="rgb(206,80,8)" fg:x="291" fg:w="1"/><text x="24.0634%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.8134%" y="453" width="0.0818%" height="15" fill="rgb(245,217,31)" fg:x="291" fg:w="1"/><text x="24.0634%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.8134%" y="437" width="0.0818%" height="15" fill="rgb(220,193,15)" fg:x="291" fg:w="1"/><text x="24.0634%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.8134%" y="421" width="0.0818%" height="15" fill="rgb(226,7,19)" fg:x="291" fg:w="1"/><text x="24.0634%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.8134%" y="405" width="0.0818%" height="15" fill="rgb(222,145,31)" fg:x="291" fg:w="1"/><text x="24.0634%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.8134%" y="389" width="0.0818%" height="15" fill="rgb(241,193,36)" fg:x="291" fg:w="1"/><text x="24.0634%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8134%" y="373" width="0.0818%" height="15" fill="rgb(225,123,33)" fg:x="291" fg:w="1"/><text x="24.0634%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="23.8134%" y="549" width="0.1637%" height="15" fill="rgb(246,136,38)" fg:x="291" fg:w="2"/><text x="24.0634%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="23.8134%" y="533" width="0.1637%" height="15" fill="rgb(243,56,24)" fg:x="291" fg:w="2"/><text x="24.0634%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="23.8134%" y="517" width="0.1637%" height="15" fill="rgb(215,147,2)" fg:x="291" fg:w="2"/><text x="24.0634%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="23.8134%" y="501" width="0.1637%" height="15" fill="rgb(209,155,27)" fg:x="291" fg:w="2"/><text x="24.0634%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="23.8134%" y="485" width="0.1637%" height="15" fill="rgb(222,177,11)" fg:x="291" fg:w="2"/><text x="24.0634%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.8953%" y="469" width="0.0818%" height="15" fill="rgb(212,227,15)" fg:x="292" fg:w="1"/><text x="24.1453%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.8953%" y="453" width="0.0818%" height="15" fill="rgb(214,138,20)" fg:x="292" fg:w="1"/><text x="24.1453%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9771%" y="549" width="0.0818%" height="15" fill="rgb(221,170,31)" fg:x="293" fg:w="1"/><text x="24.2271%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9771%" y="533" width="0.0818%" height="15" fill="rgb(253,207,5)" fg:x="293" fg:w="1"/><text x="24.2271%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="23.9771%" y="517" width="0.0818%" height="15" fill="rgb(212,64,37)" fg:x="293" fg:w="1"/><text x="24.2271%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (5 samples, 0.41%)</title><rect x="23.7316%" y="565" width="0.4092%" height="15" fill="rgb(208,113,51)" fg:x="290" fg:w="5"/><text x="23.9816%" y="575.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="24.0589%" y="549" width="0.0818%" height="15" fill="rgb(237,15,5)" fg:x="294" fg:w="1"/><text x="24.3089%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="24.2226%" y="517" width="0.3273%" height="15" fill="rgb(238,33,18)" fg:x="296" fg:w="4"/><text x="24.4726%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="24.3863%" y="501" width="0.1637%" height="15" fill="rgb(253,206,50)" fg:x="298" fg:w="2"/><text x="24.6363%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="24.3863%" y="485" width="0.1637%" height="15" fill="rgb(242,158,43)" fg:x="298" fg:w="2"/><text x="24.6363%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="24.3863%" y="469" width="0.1637%" height="15" fill="rgb(213,125,27)" fg:x="298" fg:w="2"/><text x="24.6363%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6318%" y="469" width="0.0818%" height="15" fill="rgb(233,161,31)" fg:x="301" fg:w="1"/><text x="24.8818%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6318%" y="453" width="0.0818%" height="15" fill="rgb(218,135,6)" fg:x="301" fg:w="1"/><text x="24.8818%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.6318%" y="437" width="0.0818%" height="15" fill="rgb(222,73,53)" fg:x="301" fg:w="1"/><text x="24.8818%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.6318%" y="421" width="0.0818%" height="15" fill="rgb(229,66,53)" fg:x="301" fg:w="1"/><text x="24.8818%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.6318%" y="405" width="0.0818%" height="15" fill="rgb(208,128,19)" fg:x="301" fg:w="1"/><text x="24.8818%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6318%" y="389" width="0.0818%" height="15" fill="rgb(235,70,27)" fg:x="301" fg:w="1"/><text x="24.8818%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6318%" y="373" width="0.0818%" height="15" fill="rgb(241,130,30)" fg:x="301" fg:w="1"/><text x="24.8818%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.6318%" y="357" width="0.0818%" height="15" fill="rgb(222,57,48)" fg:x="301" fg:w="1"/><text x="24.8818%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.6318%" y="341" width="0.0818%" height="15" fill="rgb(225,204,29)" fg:x="301" fg:w="1"/><text x="24.8818%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.6318%" y="325" width="0.0818%" height="15" fill="rgb(240,196,35)" fg:x="301" fg:w="1"/><text x="24.8818%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.6318%" y="309" width="0.0818%" height="15" fill="rgb(215,150,16)" fg:x="301" fg:w="1"/><text x="24.8818%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6318%" y="293" width="0.0818%" height="15" fill="rgb(209,170,13)" fg:x="301" fg:w="1"/><text x="24.8818%" y="303.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="24.5499%" y="517" width="0.2455%" height="15" fill="rgb(235,75,31)" fg:x="300" fg:w="3"/><text x="24.7999%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="24.5499%" y="501" width="0.2455%" height="15" fill="rgb(252,1,47)" fg:x="300" fg:w="3"/><text x="24.7999%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.25%)</title><rect x="24.5499%" y="485" width="0.2455%" height="15" fill="rgb(241,2,36)" fg:x="300" fg:w="3"/><text x="24.7999%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="24.7136%" y="469" width="0.0818%" height="15" fill="rgb(236,191,4)" fg:x="302" fg:w="1"/><text x="24.9636%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.7136%" y="453" width="0.0818%" height="15" fill="rgb(212,65,35)" fg:x="302" fg:w="1"/><text x="24.9636%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7136%" y="437" width="0.0818%" height="15" fill="rgb(209,49,33)" fg:x="302" fg:w="1"/><text x="24.9636%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="24.7954%" y="485" width="0.0818%" height="15" fill="rgb(208,36,46)" fg:x="303" fg:w="1"/><text x="25.0454%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.7954%" y="469" width="0.0818%" height="15" fill="rgb(210,125,2)" fg:x="303" fg:w="1"/><text x="25.0454%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.7954%" y="453" width="0.0818%" height="15" fill="rgb(225,62,6)" fg:x="303" fg:w="1"/><text x="25.0454%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.7954%" y="437" width="0.0818%" height="15" fill="rgb(210,54,27)" fg:x="303" fg:w="1"/><text x="25.0454%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.7954%" y="421" width="0.0818%" height="15" fill="rgb(249,189,52)" fg:x="303" fg:w="1"/><text x="25.0454%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="24.8773%" y="469" width="0.1637%" height="15" fill="rgb(225,134,40)" fg:x="304" fg:w="2"/><text x="25.1273%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="25.0409%" y="453" width="0.4910%" height="15" fill="rgb(206,13,37)" fg:x="306" fg:w="6"/><text x="25.2909%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="25.2046%" y="437" width="0.3273%" height="15" fill="rgb(232,114,28)" fg:x="308" fg:w="4"/><text x="25.4546%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="25.2864%" y="421" width="0.2455%" height="15" fill="rgb(253,215,8)" fg:x="309" fg:w="3"/><text x="25.5364%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.4501%" y="405" width="0.0818%" height="15" fill="rgb(254,64,19)" fg:x="311" fg:w="1"/><text x="25.7001%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.82%)</title><rect x="25.0409%" y="469" width="0.8183%" height="15" fill="rgb(242,18,46)" fg:x="306" fg:w="10"/><text x="25.2909%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="25.5319%" y="453" width="0.3273%" height="15" fill="rgb(239,192,30)" fg:x="312" fg:w="4"/><text x="25.7819%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="25.6137%" y="437" width="0.2455%" height="15" fill="rgb(232,73,14)" fg:x="313" fg:w="3"/><text x="25.8637%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="25.6137%" y="421" width="0.2455%" height="15" fill="rgb(225,51,9)" fg:x="313" fg:w="3"/><text x="25.8637%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.1047%" y="453" width="0.0818%" height="15" fill="rgb(242,217,54)" fg:x="319" fg:w="1"/><text x="26.3547%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.1047%" y="437" width="0.0818%" height="15" fill="rgb(216,93,3)" fg:x="319" fg:w="1"/><text x="26.3547%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.1047%" y="421" width="0.0818%" height="15" fill="rgb(230,119,33)" fg:x="319" fg:w="1"/><text x="26.3547%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.1047%" y="405" width="0.0818%" height="15" fill="rgb(238,170,27)" fg:x="319" fg:w="1"/><text x="26.3547%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.74%)</title><rect x="26.1866%" y="453" width="0.7365%" height="15" fill="rgb(229,8,2)" fg:x="320" fg:w="9"/><text x="26.4366%" y="463.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.57%)</title><rect x="26.3502%" y="437" width="0.5728%" height="15" fill="rgb(205,214,42)" fg:x="322" fg:w="7"/><text x="26.6002%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="26.5957%" y="421" width="0.3273%" height="15" fill="rgb(245,113,1)" fg:x="325" fg:w="4"/><text x="26.8457%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="26.6776%" y="405" width="0.2455%" height="15" fill="rgb(252,50,2)" fg:x="326" fg:w="3"/><text x="26.9276%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.8412%" y="389" width="0.0818%" height="15" fill="rgb(225,122,24)" fg:x="328" fg:w="1"/><text x="27.0912%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.8412%" y="373" width="0.0818%" height="15" fill="rgb(234,129,31)" fg:x="328" fg:w="1"/><text x="27.0912%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.8412%" y="357" width="0.0818%" height="15" fill="rgb(219,177,4)" fg:x="328" fg:w="1"/><text x="27.0912%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="27.0049%" y="437" width="0.2455%" height="15" fill="rgb(225,142,27)" fg:x="330" fg:w="3"/><text x="27.2549%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="27.0049%" y="421" width="0.2455%" height="15" fill="rgb(205,107,51)" fg:x="330" fg:w="3"/><text x="27.2549%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="27.0049%" y="405" width="0.2455%" height="15" fill="rgb(236,223,15)" fg:x="330" fg:w="3"/><text x="27.2549%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.0867%" y="389" width="0.1637%" height="15" fill="rgb(235,133,11)" fg:x="331" fg:w="2"/><text x="27.3367%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.1686%" y="373" width="0.0818%" height="15" fill="rgb(247,172,13)" fg:x="332" fg:w="1"/><text x="27.4186%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.1686%" y="357" width="0.0818%" height="15" fill="rgb(233,191,41)" fg:x="332" fg:w="1"/><text x="27.4186%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="27.2504%" y="437" width="0.4910%" height="15" fill="rgb(250,65,16)" fg:x="333" fg:w="6"/><text x="27.5004%" y="447.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="27.3322%" y="421" width="0.4092%" height="15" fill="rgb(206,10,27)" fg:x="334" fg:w="5"/><text x="27.5822%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.41%)</title><rect x="27.3322%" y="405" width="0.4092%" height="15" fill="rgb(212,96,22)" fg:x="334" fg:w="5"/><text x="27.5822%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.41%)</title><rect x="27.3322%" y="389" width="0.4092%" height="15" fill="rgb(206,50,0)" fg:x="334" fg:w="5"/><text x="27.5822%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.25%)</title><rect x="27.4959%" y="373" width="0.2455%" height="15" fill="rgb(249,105,52)" fg:x="336" fg:w="3"/><text x="27.7459%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.25%)</title><rect x="27.4959%" y="357" width="0.2455%" height="15" fill="rgb(216,93,51)" fg:x="336" fg:w="3"/><text x="27.7459%" y="367.50"></text></g><g><title>realloc (3 samples, 0.25%)</title><rect x="27.4959%" y="341" width="0.2455%" height="15" fill="rgb(217,172,13)" fg:x="336" fg:w="3"/><text x="27.7459%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="27.9869%" y="421" width="0.0818%" height="15" fill="rgb(235,199,38)" fg:x="342" fg:w="1"/><text x="28.2369%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.9869%" y="405" width="0.0818%" height="15" fill="rgb(221,97,33)" fg:x="342" fg:w="1"/><text x="28.2369%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.9869%" y="389" width="0.0818%" height="15" fill="rgb(205,156,50)" fg:x="342" fg:w="1"/><text x="28.2369%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.0687%" y="389" width="0.1637%" height="15" fill="rgb(215,142,19)" fg:x="343" fg:w="2"/><text x="28.3187%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.1506%" y="373" width="0.0818%" height="15" fill="rgb(232,170,7)" fg:x="344" fg:w="1"/><text x="28.4006%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.2324%" y="373" width="0.1637%" height="15" fill="rgb(223,50,17)" fg:x="345" fg:w="2"/><text x="28.4824%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.2324%" y="357" width="0.1637%" height="15" fill="rgb(230,103,46)" fg:x="345" fg:w="2"/><text x="28.4824%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.2324%" y="341" width="0.1637%" height="15" fill="rgb(254,30,34)" fg:x="345" fg:w="2"/><text x="28.4824%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.2324%" y="325" width="0.1637%" height="15" fill="rgb(235,198,1)" fg:x="345" fg:w="2"/><text x="28.4824%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.3142%" y="309" width="0.0818%" height="15" fill="rgb(217,105,47)" fg:x="346" fg:w="1"/><text x="28.5642%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.3142%" y="293" width="0.0818%" height="15" fill="rgb(231,18,12)" fg:x="346" fg:w="1"/><text x="28.5642%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.3142%" y="277" width="0.0818%" height="15" fill="rgb(218,196,1)" fg:x="346" fg:w="1"/><text x="28.5642%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="28.3961%" y="373" width="0.0818%" height="15" fill="rgb(210,32,3)" fg:x="347" fg:w="1"/><text x="28.6461%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="28.2324%" y="389" width="0.3273%" height="15" fill="rgb(227,178,30)" fg:x="345" fg:w="4"/><text x="28.4824%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.4779%" y="373" width="0.0818%" height="15" fill="rgb(231,140,27)" fg:x="348" fg:w="1"/><text x="28.7279%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.4779%" y="357" width="0.0818%" height="15" fill="rgb(206,66,35)" fg:x="348" fg:w="1"/><text x="28.7279%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.74%)</title><rect x="28.0687%" y="421" width="0.7365%" height="15" fill="rgb(212,34,2)" fg:x="343" fg:w="9"/><text x="28.3187%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.74%)</title><rect x="28.0687%" y="405" width="0.7365%" height="15" fill="rgb(207,201,33)" fg:x="343" fg:w="9"/><text x="28.3187%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="28.5597%" y="389" width="0.2455%" height="15" fill="rgb(221,135,32)" fg:x="349" fg:w="3"/><text x="28.8097%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.6416%" y="373" width="0.1637%" height="15" fill="rgb(206,77,31)" fg:x="350" fg:w="2"/><text x="28.8916%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.23%)</title><rect x="27.7414%" y="437" width="1.2275%" height="15" fill="rgb(252,198,50)" fg:x="339" fg:w="15"/><text x="27.9914%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.8052%" y="421" width="0.1637%" height="15" fill="rgb(206,79,27)" fg:x="352" fg:w="2"/><text x="29.0552%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.13%)</title><rect x="26.9231%" y="453" width="2.1277%" height="15" fill="rgb(228,108,9)" fg:x="329" fg:w="26"/><text x="27.1731%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.9689%" y="437" width="0.0818%" height="15" fill="rgb(213,9,39)" fg:x="354" fg:w="1"/><text x="29.2189%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.9689%" y="421" width="0.0818%" height="15" fill="rgb(252,51,13)" fg:x="354" fg:w="1"/><text x="29.2189%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.9689%" y="405" width="0.0818%" height="15" fill="rgb(218,202,39)" fg:x="354" fg:w="1"/><text x="29.2189%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (43 samples, 3.52%)</title><rect x="25.8592%" y="469" width="3.5188%" height="15" fill="rgb(214,122,21)" fg:x="316" fg:w="43"/><text x="26.1092%" y="479.50">ser..</text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="29.0507%" y="453" width="0.3273%" height="15" fill="rgb(217,205,48)" fg:x="355" fg:w="4"/><text x="29.3007%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="29.1326%" y="437" width="0.2455%" height="15" fill="rgb(230,216,13)" fg:x="356" fg:w="3"/><text x="29.3826%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.2144%" y="421" width="0.1637%" height="15" fill="rgb(249,118,4)" fg:x="357" fg:w="2"/><text x="29.4644%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.2962%" y="405" width="0.0818%" height="15" fill="rgb(212,207,40)" fg:x="358" fg:w="1"/><text x="29.5462%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.2962%" y="389" width="0.0818%" height="15" fill="rgb(217,156,26)" fg:x="358" fg:w="1"/><text x="29.5462%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.2962%" y="373" width="0.0818%" height="15" fill="rgb(226,86,34)" fg:x="358" fg:w="1"/><text x="29.5462%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (56 samples, 4.58%)</title><rect x="24.8773%" y="485" width="4.5827%" height="15" fill="rgb(217,111,30)" fg:x="304" fg:w="56"/><text x="25.1273%" y="495.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.3781%" y="469" width="0.0818%" height="15" fill="rgb(228,64,18)" fg:x="359" fg:w="1"/><text x="29.6281%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.3781%" y="453" width="0.0818%" height="15" fill="rgb(254,217,48)" fg:x="359" fg:w="1"/><text x="29.6281%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.3781%" y="437" width="0.0818%" height="15" fill="rgb(226,156,48)" fg:x="359" fg:w="1"/><text x="29.6281%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.3781%" y="421" width="0.0818%" height="15" fill="rgb(236,168,20)" fg:x="359" fg:w="1"/><text x="29.6281%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.3781%" y="405" width="0.0818%" height="15" fill="rgb(239,210,33)" fg:x="359" fg:w="1"/><text x="29.6281%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.3781%" y="389" width="0.0818%" height="15" fill="rgb(242,85,17)" fg:x="359" fg:w="1"/><text x="29.6281%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.6236%" y="437" width="0.0818%" height="15" fill="rgb(221,196,15)" fg:x="362" fg:w="1"/><text x="29.8736%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.6236%" y="421" width="0.0818%" height="15" fill="rgb(249,76,21)" fg:x="362" fg:w="1"/><text x="29.8736%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.25%)</title><rect x="29.7872%" y="421" width="0.2455%" height="15" fill="rgb(243,67,29)" fg:x="364" fg:w="3"/><text x="30.0372%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.9509%" y="405" width="0.0818%" height="15" fill="rgb(240,159,2)" fg:x="366" fg:w="1"/><text x="30.2009%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1146%" y="357" width="0.0818%" height="15" fill="rgb(244,64,3)" fg:x="368" fg:w="1"/><text x="30.3646%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.82%)</title><rect x="29.4599%" y="485" width="0.8183%" height="15" fill="rgb(220,86,40)" fg:x="360" fg:w="10"/><text x="29.7099%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.82%)</title><rect x="29.4599%" y="469" width="0.8183%" height="15" fill="rgb(222,194,51)" fg:x="360" fg:w="10"/><text x="29.7099%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.82%)</title><rect x="29.4599%" y="453" width="0.8183%" height="15" fill="rgb(207,154,19)" fg:x="360" fg:w="10"/><text x="29.7099%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="29.7054%" y="437" width="0.5728%" height="15" fill="rgb(206,178,36)" fg:x="363" fg:w="7"/><text x="29.9554%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="30.0327%" y="421" width="0.2455%" height="15" fill="rgb(218,8,24)" fg:x="367" fg:w="3"/><text x="30.2827%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="30.0327%" y="405" width="0.2455%" height="15" fill="rgb(226,83,41)" fg:x="367" fg:w="3"/><text x="30.2827%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="30.0327%" y="389" width="0.2455%" height="15" fill="rgb(224,23,22)" fg:x="367" fg:w="3"/><text x="30.2827%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="30.1146%" y="373" width="0.1637%" height="15" fill="rgb(218,198,45)" fg:x="368" fg:w="2"/><text x="30.3646%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.1964%" y="357" width="0.0818%" height="15" fill="rgb(249,147,41)" fg:x="369" fg:w="1"/><text x="30.4464%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2782%" y="453" width="0.0818%" height="15" fill="rgb(244,224,13)" fg:x="370" fg:w="1"/><text x="30.5282%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="30.2782%" y="469" width="0.1637%" height="15" fill="rgb(225,97,27)" fg:x="370" fg:w="2"/><text x="30.5282%" y="479.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="30.3601%" y="453" width="0.0818%" height="15" fill="rgb(254,64,0)" fg:x="371" fg:w="1"/><text x="30.6101%" y="463.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="30.3601%" y="437" width="0.0818%" height="15" fill="rgb(208,130,43)" fg:x="371" fg:w="1"/><text x="30.6101%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.49%)</title><rect x="30.6056%" y="437" width="0.4910%" height="15" fill="rgb(247,91,25)" fg:x="374" fg:w="6"/><text x="30.8556%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="30.6874%" y="421" width="0.4092%" height="15" fill="rgb(215,218,42)" fg:x="375" fg:w="5"/><text x="30.9374%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.25%)</title><rect x="30.8511%" y="405" width="0.2455%" height="15" fill="rgb(233,9,24)" fg:x="377" fg:w="3"/><text x="31.1011%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="31.0966%" y="437" width="0.0818%" height="15" fill="rgb(252,105,38)" fg:x="380" fg:w="1"/><text x="31.3466%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1784%" y="405" width="0.0818%" height="15" fill="rgb(225,40,49)" fg:x="381" fg:w="1"/><text x="31.4284%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="31.1784%" y="437" width="0.1637%" height="15" fill="rgb(232,196,19)" fg:x="381" fg:w="2"/><text x="31.4284%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.1784%" y="421" width="0.1637%" height="15" fill="rgb(207,35,15)" fg:x="381" fg:w="2"/><text x="31.4284%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2602%" y="405" width="0.0818%" height="15" fill="rgb(238,68,36)" fg:x="382" fg:w="1"/><text x="31.5102%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2602%" y="389" width="0.0818%" height="15" fill="rgb(205,158,20)" fg:x="382" fg:w="1"/><text x="31.5102%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2602%" y="373" width="0.0818%" height="15" fill="rgb(232,32,22)" fg:x="382" fg:w="1"/><text x="31.5102%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="31.3421%" y="405" width="0.0818%" height="15" fill="rgb(210,169,6)" fg:x="383" fg:w="1"/><text x="31.5921%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.5876%" y="389" width="0.0818%" height="15" fill="rgb(229,28,12)" fg:x="386" fg:w="1"/><text x="31.8376%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.5876%" y="373" width="0.0818%" height="15" fill="rgb(229,78,10)" fg:x="386" fg:w="1"/><text x="31.8376%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5876%" y="357" width="0.0818%" height="15" fill="rgb(223,139,54)" fg:x="386" fg:w="1"/><text x="31.8376%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.7512%" y="341" width="0.1637%" height="15" fill="rgb(207,110,4)" fg:x="388" fg:w="2"/><text x="32.0012%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="31.6694%" y="389" width="0.3273%" height="15" fill="rgb(248,30,41)" fg:x="387" fg:w="4"/><text x="31.9194%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="31.6694%" y="373" width="0.3273%" height="15" fill="rgb(235,54,25)" fg:x="387" fg:w="4"/><text x="31.9194%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="31.7512%" y="357" width="0.2455%" height="15" fill="rgb(213,107,41)" fg:x="388" fg:w="3"/><text x="32.0012%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.9149%" y="341" width="0.0818%" height="15" fill="rgb(237,102,9)" fg:x="390" fg:w="1"/><text x="32.1649%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="31.9967%" y="357" width="0.4092%" height="15" fill="rgb(252,137,49)" fg:x="391" fg:w="5"/><text x="32.2467%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.2422%" y="341" width="0.1637%" height="15" fill="rgb(233,202,33)" fg:x="394" fg:w="2"/><text x="32.4922%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="32.3241%" y="325" width="0.0818%" height="15" fill="rgb(223,14,51)" fg:x="395" fg:w="1"/><text x="32.5741%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="32.7332%" y="309" width="0.1637%" height="15" fill="rgb(248,70,23)" fg:x="400" fg:w="2"/><text x="32.9832%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="32.8969%" y="309" width="0.0818%" height="15" fill="rgb(209,207,47)" fg:x="402" fg:w="1"/><text x="33.1469%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.9787%" y="293" width="0.1637%" height="15" fill="rgb(245,124,2)" fg:x="403" fg:w="2"/><text x="33.2287%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.0606%" y="277" width="0.0818%" height="15" fill="rgb(249,208,11)" fg:x="404" fg:w="1"/><text x="33.3106%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0606%" y="261" width="0.0818%" height="15" fill="rgb(247,112,7)" fg:x="404" fg:w="1"/><text x="33.3106%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.2242%" y="261" width="0.0818%" height="15" fill="rgb(209,192,31)" fg:x="406" fg:w="1"/><text x="33.4742%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.2242%" y="245" width="0.0818%" height="15" fill="rgb(236,55,19)" fg:x="406" fg:w="1"/><text x="33.4742%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.2242%" y="229" width="0.0818%" height="15" fill="rgb(252,89,41)" fg:x="406" fg:w="1"/><text x="33.4742%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="33.2242%" y="277" width="0.2455%" height="15" fill="rgb(220,172,14)" fg:x="406" fg:w="3"/><text x="33.4742%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="33.3061%" y="261" width="0.1637%" height="15" fill="rgb(252,65,2)" fg:x="407" fg:w="2"/><text x="33.5561%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.06%)</title><rect x="32.4877%" y="341" width="1.0638%" height="15" fill="rgb(250,20,8)" fg:x="397" fg:w="13"/><text x="32.7377%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.06%)</title><rect x="32.4877%" y="325" width="1.0638%" height="15" fill="rgb(234,149,13)" fg:x="397" fg:w="13"/><text x="32.7377%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="32.9787%" y="309" width="0.5728%" height="15" fill="rgb(223,219,12)" fg:x="403" fg:w="7"/><text x="33.2287%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="33.1424%" y="293" width="0.4092%" height="15" fill="rgb(234,13,49)" fg:x="405" fg:w="5"/><text x="33.3924%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4697%" y="277" width="0.0818%" height="15" fill="rgb(214,41,25)" fg:x="409" fg:w="1"/><text x="33.7197%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.21%)</title><rect x="31.4239%" y="405" width="2.2095%" height="15" fill="rgb(232,198,52)" fg:x="384" fg:w="27"/><text x="31.6739%" y="415.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.64%)</title><rect x="31.9967%" y="389" width="1.6367%" height="15" fill="rgb(236,111,46)" fg:x="391" fg:w="20"/><text x="32.2467%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.64%)</title><rect x="31.9967%" y="373" width="1.6367%" height="15" fill="rgb(253,30,20)" fg:x="391" fg:w="20"/><text x="32.2467%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.23%)</title><rect x="32.4059%" y="357" width="1.2275%" height="15" fill="rgb(247,141,17)" fg:x="396" fg:w="15"/><text x="32.6559%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.5516%" y="341" width="0.0818%" height="15" fill="rgb(214,195,21)" fg:x="410" fg:w="1"/><text x="33.8016%" y="351.50"></text></g><g><title>engine::session::Session::flush (122 samples, 9.98%)</title><rect x="23.7316%" y="581" width="9.9836%" height="15" fill="rgb(214,98,12)" fg:x="290" fg:w="122"/><text x="23.9816%" y="591.50">engine::sessio..</text></g><g><title>engine::session::Session::save_changes (117 samples, 9.57%)</title><rect x="24.1408%" y="565" width="9.5745%" height="15" fill="rgb(239,4,26)" fg:x="295" fg:w="117"/><text x="24.3908%" y="575.50">engine::sessio..</text></g><g><title>engine::session::state::State::close (117 samples, 9.57%)</title><rect x="24.1408%" y="549" width="9.5745%" height="15" fill="rgb(234,210,35)" fg:x="295" fg:w="117"/><text x="24.3908%" y="559.50">engine::sessio..</text></g><g><title>engine::session::state::State::flush_entities (116 samples, 9.49%)</title><rect x="24.2226%" y="533" width="9.4926%" height="15" fill="rgb(252,178,27)" fg:x="296" fg:w="116"/><text x="24.4726%" y="543.50">engine::sessio..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (109 samples, 8.92%)</title><rect x="24.7954%" y="517" width="8.9198%" height="15" fill="rgb(217,50,1)" fg:x="303" fg:w="109"/><text x="25.0454%" y="527.50">engine::sessi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (109 samples, 8.92%)</title><rect x="24.7954%" y="501" width="8.9198%" height="15" fill="rgb(233,137,5)" fg:x="303" fg:w="109"/><text x="25.0454%" y="511.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (42 samples, 3.44%)</title><rect x="30.2782%" y="485" width="3.4370%" height="15" fill="rgb(217,227,25)" fg:x="370" fg:w="42"/><text x="30.5282%" y="495.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (40 samples, 3.27%)</title><rect x="30.4419%" y="469" width="3.2733%" height="15" fill="rgb(242,89,38)" fg:x="372" fg:w="40"/><text x="30.6919%" y="479.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (40 samples, 3.27%)</title><rect x="30.4419%" y="453" width="3.2733%" height="15" fill="rgb(212,190,30)" fg:x="372" fg:w="40"/><text x="30.6919%" y="463.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 2.37%)</title><rect x="31.3421%" y="437" width="2.3732%" height="15" fill="rgb(222,120,8)" fg:x="383" fg:w="29"/><text x="31.5921%" y="447.50">se..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 2.37%)</title><rect x="31.3421%" y="421" width="2.3732%" height="15" fill="rgb(227,181,9)" fg:x="383" fg:w="29"/><text x="31.5921%" y="431.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="33.6334%" y="405" width="0.0818%" height="15" fill="rgb(222,125,29)" fg:x="411" fg:w="1"/><text x="33.8834%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6334%" y="389" width="0.0818%" height="15" fill="rgb(215,153,31)" fg:x="411" fg:w="1"/><text x="33.8834%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="33.7152%" y="565" width="0.1637%" height="15" fill="rgb(228,77,30)" fg:x="412" fg:w="2"/><text x="33.9652%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="33.7152%" y="549" width="0.1637%" height="15" fill="rgb(226,110,9)" fg:x="412" fg:w="2"/><text x="33.9652%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7971%" y="533" width="0.0818%" height="15" fill="rgb(219,111,7)" fg:x="413" fg:w="1"/><text x="34.0471%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="33.8789%" y="517" width="0.0818%" height="15" fill="rgb(229,167,25)" fg:x="414" fg:w="1"/><text x="34.1289%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.33%)</title><rect x="33.7152%" y="581" width="0.3273%" height="15" fill="rgb(209,77,43)" fg:x="412" fg:w="4"/><text x="33.9652%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="33.8789%" y="565" width="0.1637%" height="15" fill="rgb(233,70,39)" fg:x="414" fg:w="2"/><text x="34.1289%" y="575.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="33.8789%" y="549" width="0.1637%" height="15" fill="rgb(207,171,44)" fg:x="414" fg:w="2"/><text x="34.1289%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="33.8789%" y="533" width="0.1637%" height="15" fill="rgb(244,91,6)" fg:x="414" fg:w="2"/><text x="34.1289%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.9607%" y="517" width="0.0818%" height="15" fill="rgb(234,136,12)" fg:x="415" fg:w="1"/><text x="34.2107%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="33.9607%" y="501" width="0.0818%" height="15" fill="rgb(216,210,38)" fg:x="415" fg:w="1"/><text x="34.2107%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.9607%" y="485" width="0.0818%" height="15" fill="rgb(241,227,7)" fg:x="415" fg:w="1"/><text x="34.2107%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="34.1244%" y="533" width="0.0818%" height="15" fill="rgb(241,222,11)" fg:x="417" fg:w="1"/><text x="34.3744%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="34.1244%" y="517" width="0.0818%" height="15" fill="rgb(246,86,18)" fg:x="417" fg:w="1"/><text x="34.3744%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.1244%" y="501" width="0.0818%" height="15" fill="rgb(224,151,49)" fg:x="417" fg:w="1"/><text x="34.3744%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="34.1244%" y="549" width="0.1637%" height="15" fill="rgb(235,4,41)" fg:x="417" fg:w="2"/><text x="34.3744%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="34.2062%" y="533" width="0.0818%" height="15" fill="rgb(218,30,52)" fg:x="418" fg:w="1"/><text x="34.4562%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.2062%" y="517" width="0.0818%" height="15" fill="rgb(205,124,51)" fg:x="418" fg:w="1"/><text x="34.4562%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.2881%" y="485" width="0.1637%" height="15" fill="rgb(237,126,51)" fg:x="419" fg:w="2"/><text x="34.5381%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.2881%" y="469" width="0.1637%" height="15" fill="rgb(225,32,46)" fg:x="419" fg:w="2"/><text x="34.5381%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.2881%" y="453" width="0.1637%" height="15" fill="rgb(251,60,49)" fg:x="419" fg:w="2"/><text x="34.5381%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.2881%" y="437" width="0.1637%" height="15" fill="rgb(234,18,23)" fg:x="419" fg:w="2"/><text x="34.5381%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.3699%" y="421" width="0.0818%" height="15" fill="rgb(234,25,23)" fg:x="420" fg:w="1"/><text x="34.6199%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.3699%" y="405" width="0.0818%" height="15" fill="rgb(210,43,52)" fg:x="420" fg:w="1"/><text x="34.6199%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.3699%" y="389" width="0.0818%" height="15" fill="rgb(237,198,21)" fg:x="420" fg:w="1"/><text x="34.6199%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.3699%" y="373" width="0.0818%" height="15" fill="rgb(211,20,34)" fg:x="420" fg:w="1"/><text x="34.6199%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.3699%" y="357" width="0.0818%" height="15" fill="rgb(221,155,50)" fg:x="420" fg:w="1"/><text x="34.6199%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.3699%" y="341" width="0.0818%" height="15" fill="rgb(213,214,53)" fg:x="420" fg:w="1"/><text x="34.6199%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.3699%" y="325" width="0.0818%" height="15" fill="rgb(215,229,48)" fg:x="420" fg:w="1"/><text x="34.6199%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="34.2881%" y="501" width="0.2455%" height="15" fill="rgb(243,88,5)" fg:x="419" fg:w="3"/><text x="34.5381%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4517%" y="485" width="0.0818%" height="15" fill="rgb(216,199,8)" fg:x="421" fg:w="1"/><text x="34.7017%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.5336%" y="501" width="0.0818%" height="15" fill="rgb(241,22,4)" fg:x="422" fg:w="1"/><text x="34.7836%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.5336%" y="485" width="0.0818%" height="15" fill="rgb(209,190,22)" fg:x="422" fg:w="1"/><text x="34.7836%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.5336%" y="469" width="0.0818%" height="15" fill="rgb(251,138,45)" fg:x="422" fg:w="1"/><text x="34.7836%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.5336%" y="453" width="0.0818%" height="15" fill="rgb(219,111,22)" fg:x="422" fg:w="1"/><text x="34.7836%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.5336%" y="437" width="0.0818%" height="15" fill="rgb(253,29,49)" fg:x="422" fg:w="1"/><text x="34.7836%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.6154%" y="469" width="0.0818%" height="15" fill="rgb(238,129,49)" fg:x="423" fg:w="1"/><text x="34.8654%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.6972%" y="437" width="0.0818%" height="15" fill="rgb(240,26,41)" fg:x="424" fg:w="1"/><text x="34.9472%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.57%)</title><rect x="34.2881%" y="549" width="0.5728%" height="15" fill="rgb(221,47,33)" fg:x="419" fg:w="7"/><text x="34.5381%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.57%)</title><rect x="34.2881%" y="533" width="0.5728%" height="15" fill="rgb(216,200,17)" fg:x="419" fg:w="7"/><text x="34.5381%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.57%)</title><rect x="34.2881%" y="517" width="0.5728%" height="15" fill="rgb(230,151,26)" fg:x="419" fg:w="7"/><text x="34.5381%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="34.6154%" y="501" width="0.2455%" height="15" fill="rgb(242,182,16)" fg:x="423" fg:w="3"/><text x="34.8654%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="34.6154%" y="485" width="0.2455%" height="15" fill="rgb(236,35,53)" fg:x="423" fg:w="3"/><text x="34.8654%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.6972%" y="469" width="0.1637%" height="15" fill="rgb(214,180,28)" fg:x="424" fg:w="2"/><text x="34.9472%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.6972%" y="453" width="0.1637%" height="15" fill="rgb(208,173,36)" fg:x="424" fg:w="2"/><text x="34.9472%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.7791%" y="437" width="0.0818%" height="15" fill="rgb(218,39,15)" fg:x="425" fg:w="1"/><text x="35.0291%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.7791%" y="421" width="0.0818%" height="15" fill="rgb(213,145,15)" fg:x="425" fg:w="1"/><text x="35.0291%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="34.7791%" y="405" width="0.0818%" height="15" fill="rgb(242,110,37)" fg:x="425" fg:w="1"/><text x="35.0291%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.7791%" y="389" width="0.0818%" height="15" fill="rgb(247,146,22)" fg:x="425" fg:w="1"/><text x="35.0291%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="34.8609%" y="549" width="0.0818%" height="15" fill="rgb(215,191,7)" fg:x="426" fg:w="1"/><text x="35.1109%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="34.8609%" y="533" width="0.0818%" height="15" fill="rgb(240,158,1)" fg:x="426" fg:w="1"/><text x="35.1109%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="34.9427%" y="501" width="0.0818%" height="15" fill="rgb(241,78,32)" fg:x="427" fg:w="1"/><text x="35.1927%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.9427%" y="485" width="0.0818%" height="15" fill="rgb(248,83,10)" fg:x="427" fg:w="1"/><text x="35.1927%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9427%" y="469" width="0.0818%" height="15" fill="rgb(241,52,0)" fg:x="427" fg:w="1"/><text x="35.1927%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9427%" y="453" width="0.0818%" height="15" fill="rgb(238,37,13)" fg:x="427" fg:w="1"/><text x="35.1927%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9427%" y="437" width="0.0818%" height="15" fill="rgb(242,194,17)" fg:x="427" fg:w="1"/><text x="35.1927%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9427%" y="421" width="0.0818%" height="15" fill="rgb(236,96,3)" fg:x="427" fg:w="1"/><text x="35.1927%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.9427%" y="405" width="0.0818%" height="15" fill="rgb(235,148,34)" fg:x="427" fg:w="1"/><text x="35.1927%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9427%" y="389" width="0.0818%" height="15" fill="rgb(254,12,11)" fg:x="427" fg:w="1"/><text x="35.1927%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9427%" y="373" width="0.0818%" height="15" fill="rgb(207,31,54)" fg:x="427" fg:w="1"/><text x="35.1927%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9427%" y="357" width="0.0818%" height="15" fill="rgb(252,14,28)" fg:x="427" fg:w="1"/><text x="35.1927%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.9427%" y="341" width="0.0818%" height="15" fill="rgb(252,108,36)" fg:x="427" fg:w="1"/><text x="35.1927%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.15%)</title><rect x="34.0426%" y="565" width="1.1457%" height="15" fill="rgb(214,149,7)" fg:x="416" fg:w="14"/><text x="34.2926%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.25%)</title><rect x="34.9427%" y="549" width="0.2455%" height="15" fill="rgb(243,94,12)" fg:x="427" fg:w="3"/><text x="35.1927%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.25%)</title><rect x="34.9427%" y="533" width="0.2455%" height="15" fill="rgb(208,36,10)" fg:x="427" fg:w="3"/><text x="35.1927%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.25%)</title><rect x="34.9427%" y="517" width="0.2455%" height="15" fill="rgb(233,185,52)" fg:x="427" fg:w="3"/><text x="35.1927%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="35.0245%" y="501" width="0.1637%" height="15" fill="rgb(234,50,45)" fg:x="428" fg:w="2"/><text x="35.2745%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="35.0245%" y="485" width="0.1637%" height="15" fill="rgb(228,92,54)" fg:x="428" fg:w="2"/><text x="35.2745%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.0245%" y="469" width="0.1637%" height="15" fill="rgb(224,85,25)" fg:x="428" fg:w="2"/><text x="35.2745%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="35.0245%" y="453" width="0.1637%" height="15" fill="rgb(246,1,45)" fg:x="428" fg:w="2"/><text x="35.2745%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.0245%" y="437" width="0.1637%" height="15" fill="rgb(240,66,23)" fg:x="428" fg:w="2"/><text x="35.2745%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.0245%" y="421" width="0.1637%" height="15" fill="rgb(222,96,27)" fg:x="428" fg:w="2"/><text x="35.2745%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.0245%" y="405" width="0.1637%" height="15" fill="rgb(212,136,10)" fg:x="428" fg:w="2"/><text x="35.2745%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.0245%" y="389" width="0.1637%" height="15" fill="rgb(226,192,50)" fg:x="428" fg:w="2"/><text x="35.2745%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.0245%" y="373" width="0.1637%" height="15" fill="rgb(241,182,31)" fg:x="428" fg:w="2"/><text x="35.2745%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="35.1064%" y="357" width="0.0818%" height="15" fill="rgb(219,205,47)" fg:x="429" fg:w="1"/><text x="35.3564%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.2700%" y="405" width="0.0818%" height="15" fill="rgb(207,96,14)" fg:x="431" fg:w="1"/><text x="35.5200%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3519%" y="405" width="0.0818%" height="15" fill="rgb(216,119,9)" fg:x="432" fg:w="1"/><text x="35.6019%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3519%" y="389" width="0.0818%" height="15" fill="rgb(235,62,36)" fg:x="432" fg:w="1"/><text x="35.6019%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.3519%" y="373" width="0.0818%" height="15" fill="rgb(214,41,27)" fg:x="432" fg:w="1"/><text x="35.6019%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.3519%" y="357" width="0.0818%" height="15" fill="rgb(214,174,37)" fg:x="432" fg:w="1"/><text x="35.6019%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.3519%" y="341" width="0.0818%" height="15" fill="rgb(212,11,25)" fg:x="432" fg:w="1"/><text x="35.6019%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3519%" y="325" width="0.0818%" height="15" fill="rgb(217,71,35)" fg:x="432" fg:w="1"/><text x="35.6019%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3519%" y="309" width="0.0818%" height="15" fill="rgb(234,152,9)" fg:x="432" fg:w="1"/><text x="35.6019%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.3519%" y="293" width="0.0818%" height="15" fill="rgb(228,32,51)" fg:x="432" fg:w="1"/><text x="35.6019%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.3519%" y="277" width="0.0818%" height="15" fill="rgb(209,14,47)" fg:x="432" fg:w="1"/><text x="35.6019%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.3519%" y="261" width="0.0818%" height="15" fill="rgb(218,201,17)" fg:x="432" fg:w="1"/><text x="35.6019%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.3519%" y="245" width="0.0818%" height="15" fill="rgb(218,98,15)" fg:x="432" fg:w="1"/><text x="35.6019%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.3519%" y="229" width="0.0818%" height="15" fill="rgb(233,202,29)" fg:x="432" fg:w="1"/><text x="35.6019%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="35.1882%" y="453" width="0.3273%" height="15" fill="rgb(207,196,44)" fg:x="430" fg:w="4"/><text x="35.4382%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="35.1882%" y="437" width="0.3273%" height="15" fill="rgb(218,63,34)" fg:x="430" fg:w="4"/><text x="35.4382%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="35.1882%" y="421" width="0.3273%" height="15" fill="rgb(209,10,5)" fg:x="430" fg:w="4"/><text x="35.4382%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.4337%" y="405" width="0.0818%" height="15" fill="rgb(224,36,28)" fg:x="433" fg:w="1"/><text x="35.6837%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="35.1882%" y="469" width="0.4092%" height="15" fill="rgb(249,178,7)" fg:x="430" fg:w="5"/><text x="35.4382%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5155%" y="453" width="0.0818%" height="15" fill="rgb(253,163,10)" fg:x="434" fg:w="1"/><text x="35.7655%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.5974%" y="469" width="0.0818%" height="15" fill="rgb(245,67,46)" fg:x="435" fg:w="1"/><text x="35.8474%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.5974%" y="453" width="0.0818%" height="15" fill="rgb(225,14,18)" fg:x="435" fg:w="1"/><text x="35.8474%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.5974%" y="437" width="0.0818%" height="15" fill="rgb(217,41,54)" fg:x="435" fg:w="1"/><text x="35.8474%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.5974%" y="421" width="0.0818%" height="15" fill="rgb(222,111,11)" fg:x="435" fg:w="1"/><text x="35.8474%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.5974%" y="405" width="0.0818%" height="15" fill="rgb(211,85,31)" fg:x="435" fg:w="1"/><text x="35.8474%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.5974%" y="389" width="0.0818%" height="15" fill="rgb(223,29,26)" fg:x="435" fg:w="1"/><text x="35.8474%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.8429%" y="341" width="0.0818%" height="15" fill="rgb(236,124,50)" fg:x="438" fg:w="1"/><text x="36.0929%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8429%" y="325" width="0.0818%" height="15" fill="rgb(219,148,15)" fg:x="438" fg:w="1"/><text x="36.0929%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.82%)</title><rect x="35.1882%" y="517" width="0.8183%" height="15" fill="rgb(248,159,33)" fg:x="430" fg:w="10"/><text x="35.4382%" y="527.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.82%)</title><rect x="35.1882%" y="501" width="0.8183%" height="15" fill="rgb(252,65,8)" fg:x="430" fg:w="10"/><text x="35.4382%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.82%)</title><rect x="35.1882%" y="485" width="0.8183%" height="15" fill="rgb(236,45,7)" fg:x="430" fg:w="10"/><text x="35.4382%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="35.6792%" y="469" width="0.3273%" height="15" fill="rgb(244,3,48)" fg:x="436" fg:w="4"/><text x="35.9292%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="35.6792%" y="453" width="0.3273%" height="15" fill="rgb(224,123,53)" fg:x="436" fg:w="4"/><text x="35.9292%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="35.6792%" y="437" width="0.3273%" height="15" fill="rgb(223,173,15)" fg:x="436" fg:w="4"/><text x="35.9292%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="35.6792%" y="421" width="0.3273%" height="15" fill="rgb(254,181,5)" fg:x="436" fg:w="4"/><text x="35.9292%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="35.6792%" y="405" width="0.3273%" height="15" fill="rgb(243,124,33)" fg:x="436" fg:w="4"/><text x="35.9292%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="35.6792%" y="389" width="0.3273%" height="15" fill="rgb(253,220,11)" fg:x="436" fg:w="4"/><text x="35.9292%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="35.6792%" y="373" width="0.3273%" height="15" fill="rgb(217,14,4)" fg:x="436" fg:w="4"/><text x="35.9292%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="35.7610%" y="357" width="0.2455%" height="15" fill="rgb(209,196,12)" fg:x="437" fg:w="3"/><text x="36.0110%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.9247%" y="341" width="0.0818%" height="15" fill="rgb(237,108,29)" fg:x="439" fg:w="1"/><text x="36.1747%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.9247%" y="325" width="0.0818%" height="15" fill="rgb(216,173,20)" fg:x="439" fg:w="1"/><text x="36.1747%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.9247%" y="309" width="0.0818%" height="15" fill="rgb(245,27,6)" fg:x="439" fg:w="1"/><text x="36.1747%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.0884%" y="405" width="0.0818%" height="15" fill="rgb(210,181,20)" fg:x="441" fg:w="1"/><text x="36.3384%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.0884%" y="469" width="0.1637%" height="15" fill="rgb(235,213,1)" fg:x="441" fg:w="2"/><text x="36.3384%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="36.0884%" y="453" width="0.1637%" height="15" fill="rgb(239,68,43)" fg:x="441" fg:w="2"/><text x="36.3384%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.0884%" y="437" width="0.1637%" height="15" fill="rgb(254,137,43)" fg:x="441" fg:w="2"/><text x="36.3384%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.0884%" y="421" width="0.1637%" height="15" fill="rgb(252,170,38)" fg:x="441" fg:w="2"/><text x="36.3384%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.1702%" y="405" width="0.0818%" height="15" fill="rgb(234,21,42)" fg:x="442" fg:w="1"/><text x="36.4202%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1702%" y="389" width="0.0818%" height="15" fill="rgb(216,145,40)" fg:x="442" fg:w="1"/><text x="36.4202%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.15%)</title><rect x="35.1882%" y="549" width="1.1457%" height="15" fill="rgb(251,73,9)" fg:x="430" fg:w="14"/><text x="35.4382%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.15%)</title><rect x="35.1882%" y="533" width="1.1457%" height="15" fill="rgb(242,54,6)" fg:x="430" fg:w="14"/><text x="35.4382%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="36.0065%" y="517" width="0.3273%" height="15" fill="rgb(239,70,7)" fg:x="440" fg:w="4"/><text x="36.2565%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="36.0884%" y="501" width="0.2455%" height="15" fill="rgb(216,159,35)" fg:x="441" fg:w="3"/><text x="36.3384%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="36.0884%" y="485" width="0.2455%" height="15" fill="rgb(224,50,39)" fg:x="441" fg:w="3"/><text x="36.3384%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2520%" y="469" width="0.0818%" height="15" fill="rgb(235,9,35)" fg:x="443" fg:w="1"/><text x="36.5020%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2520%" y="453" width="0.0818%" height="15" fill="rgb(239,34,21)" fg:x="443" fg:w="1"/><text x="36.5020%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2520%" y="437" width="0.0818%" height="15" fill="rgb(218,162,43)" fg:x="443" fg:w="1"/><text x="36.5020%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2520%" y="421" width="0.0818%" height="15" fill="rgb(219,89,33)" fg:x="443" fg:w="1"/><text x="36.5020%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.2520%" y="405" width="0.0818%" height="15" fill="rgb(226,125,37)" fg:x="443" fg:w="1"/><text x="36.5020%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2520%" y="389" width="0.0818%" height="15" fill="rgb(233,149,30)" fg:x="443" fg:w="1"/><text x="36.5020%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2520%" y="373" width="0.0818%" height="15" fill="rgb(236,8,18)" fg:x="443" fg:w="1"/><text x="36.5020%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2520%" y="357" width="0.0818%" height="15" fill="rgb(205,176,9)" fg:x="443" fg:w="1"/><text x="36.5020%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3339%" y="501" width="0.0818%" height="15" fill="rgb(252,103,44)" fg:x="444" fg:w="1"/><text x="36.5839%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="36.3339%" y="549" width="0.1637%" height="15" fill="rgb(207,68,53)" fg:x="444" fg:w="2"/><text x="36.5839%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="36.3339%" y="533" width="0.1637%" height="15" fill="rgb(218,193,48)" fg:x="444" fg:w="2"/><text x="36.5839%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="36.3339%" y="517" width="0.1637%" height="15" fill="rgb(234,121,52)" fg:x="444" fg:w="2"/><text x="36.5839%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="36.4157%" y="501" width="0.0818%" height="15" fill="rgb(227,218,49)" fg:x="445" fg:w="1"/><text x="36.6657%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="36.4157%" y="485" width="0.0818%" height="15" fill="rgb(221,8,7)" fg:x="445" fg:w="1"/><text x="36.6657%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.4157%" y="469" width="0.0818%" height="15" fill="rgb(217,151,36)" fg:x="445" fg:w="1"/><text x="36.6657%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="36.4157%" y="453" width="0.0818%" height="15" fill="rgb(213,71,5)" fg:x="445" fg:w="1"/><text x="36.6657%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="36.4157%" y="437" width="0.0818%" height="15" fill="rgb(225,145,43)" fg:x="445" fg:w="1"/><text x="36.6657%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5794%" y="453" width="0.0818%" height="15" fill="rgb(235,118,19)" fg:x="447" fg:w="1"/><text x="36.8294%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5794%" y="437" width="0.0818%" height="15" fill="rgb(214,102,36)" fg:x="447" fg:w="1"/><text x="36.8294%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5794%" y="421" width="0.0818%" height="15" fill="rgb(220,56,43)" fg:x="447" fg:w="1"/><text x="36.8294%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.5794%" y="405" width="0.0818%" height="15" fill="rgb(246,136,46)" fg:x="447" fg:w="1"/><text x="36.8294%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.5794%" y="389" width="0.0818%" height="15" fill="rgb(249,99,12)" fg:x="447" fg:w="1"/><text x="36.8294%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.5794%" y="373" width="0.0818%" height="15" fill="rgb(224,31,42)" fg:x="447" fg:w="1"/><text x="36.8294%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5794%" y="357" width="0.0818%" height="15" fill="rgb(208,96,21)" fg:x="447" fg:w="1"/><text x="36.8294%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5794%" y="341" width="0.0818%" height="15" fill="rgb(237,229,7)" fg:x="447" fg:w="1"/><text x="36.8294%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.5794%" y="325" width="0.0818%" height="15" fill="rgb(210,12,6)" fg:x="447" fg:w="1"/><text x="36.8294%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.5794%" y="309" width="0.0818%" height="15" fill="rgb(240,9,34)" fg:x="447" fg:w="1"/><text x="36.8294%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.5794%" y="293" width="0.0818%" height="15" fill="rgb(211,68,37)" fg:x="447" fg:w="1"/><text x="36.8294%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.5794%" y="277" width="0.0818%" height="15" fill="rgb(249,138,50)" fg:x="447" fg:w="1"/><text x="36.8294%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5794%" y="261" width="0.0818%" height="15" fill="rgb(243,185,40)" fg:x="447" fg:w="1"/><text x="36.8294%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.6612%" y="453" width="0.0818%" height="15" fill="rgb(242,92,35)" fg:x="448" fg:w="1"/><text x="36.9112%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.6612%" y="437" width="0.0818%" height="15" fill="rgb(244,98,5)" fg:x="448" fg:w="1"/><text x="36.9112%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.6612%" y="421" width="0.0818%" height="15" fill="rgb(228,186,29)" fg:x="448" fg:w="1"/><text x="36.9112%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="36.5794%" y="501" width="0.2455%" height="15" fill="rgb(253,7,44)" fg:x="447" fg:w="3"/><text x="36.8294%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="36.5794%" y="485" width="0.2455%" height="15" fill="rgb(216,11,45)" fg:x="447" fg:w="3"/><text x="36.8294%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="36.5794%" y="469" width="0.2455%" height="15" fill="rgb(205,67,3)" fg:x="447" fg:w="3"/><text x="36.8294%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.7430%" y="453" width="0.0818%" height="15" fill="rgb(250,18,3)" fg:x="449" fg:w="1"/><text x="36.9930%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7430%" y="437" width="0.0818%" height="15" fill="rgb(241,222,43)" fg:x="449" fg:w="1"/><text x="36.9930%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.7430%" y="421" width="0.0818%" height="15" fill="rgb(233,115,3)" fg:x="449" fg:w="1"/><text x="36.9930%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7430%" y="405" width="0.0818%" height="15" fill="rgb(215,165,25)" fg:x="449" fg:w="1"/><text x="36.9930%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.7430%" y="389" width="0.0818%" height="15" fill="rgb(234,179,6)" fg:x="449" fg:w="1"/><text x="36.9930%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7430%" y="373" width="0.0818%" height="15" fill="rgb(215,82,23)" fg:x="449" fg:w="1"/><text x="36.9930%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.7430%" y="357" width="0.0818%" height="15" fill="rgb(211,47,18)" fg:x="449" fg:w="1"/><text x="36.9930%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7430%" y="341" width="0.0818%" height="15" fill="rgb(248,17,9)" fg:x="449" fg:w="1"/><text x="36.9930%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.0704%" y="389" width="0.1637%" height="15" fill="rgb(210,212,12)" fg:x="453" fg:w="2"/><text x="37.3204%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1522%" y="373" width="0.0818%" height="15" fill="rgb(230,135,45)" fg:x="454" fg:w="1"/><text x="37.4022%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="36.9067%" y="437" width="0.4092%" height="15" fill="rgb(214,121,41)" fg:x="451" fg:w="5"/><text x="37.1567%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="36.9067%" y="421" width="0.4092%" height="15" fill="rgb(239,165,45)" fg:x="451" fg:w="5"/><text x="37.1567%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="36.9885%" y="405" width="0.3273%" height="15" fill="rgb(214,85,51)" fg:x="452" fg:w="4"/><text x="37.2385%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.2340%" y="389" width="0.0818%" height="15" fill="rgb(223,90,27)" fg:x="455" fg:w="1"/><text x="37.4840%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.2340%" y="373" width="0.0818%" height="15" fill="rgb(244,84,11)" fg:x="455" fg:w="1"/><text x="37.4840%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.2340%" y="357" width="0.0818%" height="15" fill="rgb(253,41,47)" fg:x="455" fg:w="1"/><text x="37.4840%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.2340%" y="341" width="0.0818%" height="15" fill="rgb(232,39,5)" fg:x="455" fg:w="1"/><text x="37.4840%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.2340%" y="325" width="0.0818%" height="15" fill="rgb(211,93,4)" fg:x="455" fg:w="1"/><text x="37.4840%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="37.2340%" y="309" width="0.0818%" height="15" fill="rgb(219,50,49)" fg:x="455" fg:w="1"/><text x="37.4840%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.2340%" y="293" width="0.0818%" height="15" fill="rgb(232,80,19)" fg:x="455" fg:w="1"/><text x="37.4840%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="36.9067%" y="453" width="0.4910%" height="15" fill="rgb(215,227,39)" fg:x="451" fg:w="6"/><text x="37.1567%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.3159%" y="437" width="0.0818%" height="15" fill="rgb(211,99,12)" fg:x="456" fg:w="1"/><text x="37.5659%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.3977%" y="453" width="0.0818%" height="15" fill="rgb(214,158,5)" fg:x="457" fg:w="1"/><text x="37.6477%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.3977%" y="437" width="0.0818%" height="15" fill="rgb(242,19,53)" fg:x="457" fg:w="1"/><text x="37.6477%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.3977%" y="421" width="0.0818%" height="15" fill="rgb(208,18,20)" fg:x="457" fg:w="1"/><text x="37.6477%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.3977%" y="405" width="0.0818%" height="15" fill="rgb(250,44,11)" fg:x="457" fg:w="1"/><text x="37.6477%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.3977%" y="389" width="0.0818%" height="15" fill="rgb(238,159,13)" fg:x="457" fg:w="1"/><text x="37.6477%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (13 samples, 1.06%)</title><rect x="36.4975%" y="549" width="1.0638%" height="15" fill="rgb(231,74,18)" fg:x="446" fg:w="13"/><text x="36.7475%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.06%)</title><rect x="36.4975%" y="533" width="1.0638%" height="15" fill="rgb(229,219,45)" fg:x="446" fg:w="13"/><text x="36.7475%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.98%)</title><rect x="36.5794%" y="517" width="0.9820%" height="15" fill="rgb(210,221,1)" fg:x="447" fg:w="12"/><text x="36.8294%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.74%)</title><rect x="36.8249%" y="501" width="0.7365%" height="15" fill="rgb(209,60,51)" fg:x="450" fg:w="9"/><text x="37.0749%" y="511.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.74%)</title><rect x="36.8249%" y="485" width="0.7365%" height="15" fill="rgb(252,97,34)" fg:x="450" fg:w="9"/><text x="37.0749%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.65%)</title><rect x="36.9067%" y="469" width="0.6547%" height="15" fill="rgb(243,211,37)" fg:x="451" fg:w="8"/><text x="37.1567%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.4795%" y="453" width="0.0818%" height="15" fill="rgb(210,229,37)" fg:x="458" fg:w="1"/><text x="37.7295%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4795%" y="437" width="0.0818%" height="15" fill="rgb(220,208,43)" fg:x="458" fg:w="1"/><text x="37.7295%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.4795%" y="421" width="0.0818%" height="15" fill="rgb(218,118,50)" fg:x="458" fg:w="1"/><text x="37.7295%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4795%" y="405" width="0.0818%" height="15" fill="rgb(254,169,52)" fg:x="458" fg:w="1"/><text x="37.7295%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.4795%" y="389" width="0.0818%" height="15" fill="rgb(221,214,37)" fg:x="458" fg:w="1"/><text x="37.7295%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4795%" y="373" width="0.0818%" height="15" fill="rgb(254,186,32)" fg:x="458" fg:w="1"/><text x="37.7295%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.4795%" y="357" width="0.0818%" height="15" fill="rgb(215,144,43)" fg:x="458" fg:w="1"/><text x="37.7295%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4795%" y="341" width="0.0818%" height="15" fill="rgb(252,21,46)" fg:x="458" fg:w="1"/><text x="37.7295%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.4795%" y="325" width="0.0818%" height="15" fill="rgb(207,166,46)" fg:x="458" fg:w="1"/><text x="37.7295%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4795%" y="309" width="0.0818%" height="15" fill="rgb(253,37,49)" fg:x="458" fg:w="1"/><text x="37.7295%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="37.4795%" y="293" width="0.0818%" height="15" fill="rgb(222,97,20)" fg:x="458" fg:w="1"/><text x="37.7295%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="37.4795%" y="277" width="0.0818%" height="15" fill="rgb(244,181,26)" fg:x="458" fg:w="1"/><text x="37.7295%" y="287.50"></text></g><g><title>plugins_core::build::Build::holding (44 samples, 3.60%)</title><rect x="34.0426%" y="581" width="3.6007%" height="15" fill="rgb(241,22,29)" fg:x="416" fg:w="44"/><text x="34.2926%" y="591.50">plug..</text></g><g><title>plugins_core::tools::set_container (30 samples, 2.45%)</title><rect x="35.1882%" y="565" width="2.4550%" height="15" fill="rgb(206,200,43)" fg:x="430" fg:w="30"/><text x="35.4382%" y="575.50">pl..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="37.5614%" y="549" width="0.0818%" height="15" fill="rgb(226,224,43)" fg:x="459" fg:w="1"/><text x="37.8114%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="37.5614%" y="533" width="0.0818%" height="15" fill="rgb(253,129,28)" fg:x="459" fg:w="1"/><text x="37.8114%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.5614%" y="517" width="0.0818%" height="15" fill="rgb(252,99,33)" fg:x="459" fg:w="1"/><text x="37.8114%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.5614%" y="501" width="0.0818%" height="15" fill="rgb(208,123,45)" fg:x="459" fg:w="1"/><text x="37.8114%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.5614%" y="485" width="0.0818%" height="15" fill="rgb(251,106,12)" fg:x="459" fg:w="1"/><text x="37.8114%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="37.6432%" y="533" width="0.0818%" height="15" fill="rgb(240,209,35)" fg:x="460" fg:w="1"/><text x="37.8932%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.6432%" y="517" width="0.0818%" height="15" fill="rgb(214,52,50)" fg:x="460" fg:w="1"/><text x="37.8932%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.6432%" y="501" width="0.0818%" height="15" fill="rgb(234,119,4)" fg:x="460" fg:w="1"/><text x="37.8932%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.6432%" y="485" width="0.0818%" height="15" fill="rgb(228,181,36)" fg:x="460" fg:w="1"/><text x="37.8932%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.25%)</title><rect x="37.6432%" y="549" width="0.2455%" height="15" fill="rgb(213,171,42)" fg:x="460" fg:w="3"/><text x="37.8932%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="37.7250%" y="533" width="0.1637%" height="15" fill="rgb(239,14,41)" fg:x="461" fg:w="2"/><text x="37.9750%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="37.7250%" y="517" width="0.1637%" height="15" fill="rgb(239,111,46)" fg:x="461" fg:w="2"/><text x="37.9750%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="37.7250%" y="501" width="0.1637%" height="15" fill="rgb(214,72,7)" fg:x="461" fg:w="2"/><text x="37.9750%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="37.7250%" y="485" width="0.1637%" height="15" fill="rgb(221,114,1)" fg:x="461" fg:w="2"/><text x="37.9750%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="37.7250%" y="469" width="0.1637%" height="15" fill="rgb(213,143,14)" fg:x="461" fg:w="2"/><text x="37.9750%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="37.7250%" y="453" width="0.1637%" height="15" fill="rgb(220,221,53)" fg:x="461" fg:w="2"/><text x="37.9750%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.8069%" y="437" width="0.0818%" height="15" fill="rgb(236,189,27)" fg:x="462" fg:w="1"/><text x="38.0569%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.8069%" y="421" width="0.0818%" height="15" fill="rgb(252,139,49)" fg:x="462" fg:w="1"/><text x="38.0569%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.8069%" y="405" width="0.0818%" height="15" fill="rgb(231,158,33)" fg:x="462" fg:w="1"/><text x="38.0569%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="37.8069%" y="389" width="0.0818%" height="15" fill="rgb(207,201,15)" fg:x="462" fg:w="1"/><text x="38.0569%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.8069%" y="373" width="0.0818%" height="15" fill="rgb(218,43,48)" fg:x="462" fg:w="1"/><text x="38.0569%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.8069%" y="357" width="0.0818%" height="15" fill="rgb(244,63,52)" fg:x="462" fg:w="1"/><text x="38.0569%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.8069%" y="341" width="0.0818%" height="15" fill="rgb(236,60,17)" fg:x="462" fg:w="1"/><text x="38.0569%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.8069%" y="325" width="0.0818%" height="15" fill="rgb(205,206,29)" fg:x="462" fg:w="1"/><text x="38.0569%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.8069%" y="309" width="0.0818%" height="15" fill="rgb(205,209,35)" fg:x="462" fg:w="1"/><text x="38.0569%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.8069%" y="293" width="0.0818%" height="15" fill="rgb(227,112,14)" fg:x="462" fg:w="1"/><text x="38.0569%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.8069%" y="277" width="0.0818%" height="15" fill="rgb(248,151,9)" fg:x="462" fg:w="1"/><text x="38.0569%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.8069%" y="261" width="0.0818%" height="15" fill="rgb(247,45,40)" fg:x="462" fg:w="1"/><text x="38.0569%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.8069%" y="245" width="0.0818%" height="15" fill="rgb(232,185,16)" fg:x="462" fg:w="1"/><text x="38.0569%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.8069%" y="229" width="0.0818%" height="15" fill="rgb(215,45,44)" fg:x="462" fg:w="1"/><text x="38.0569%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.8069%" y="213" width="0.0818%" height="15" fill="rgb(206,69,32)" fg:x="462" fg:w="1"/><text x="38.0569%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="37.8069%" y="197" width="0.0818%" height="15" fill="rgb(233,98,50)" fg:x="462" fg:w="1"/><text x="38.0569%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.8069%" y="181" width="0.0818%" height="15" fill="rgb(232,217,52)" fg:x="462" fg:w="1"/><text x="38.0569%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8069%" y="165" width="0.0818%" height="15" fill="rgb(250,42,51)" fg:x="462" fg:w="1"/><text x="38.0569%" y="175.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.33%)</title><rect x="37.6432%" y="581" width="0.3273%" height="15" fill="rgb(241,200,26)" fg:x="460" fg:w="4"/><text x="37.8932%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="37.6432%" y="565" width="0.3273%" height="15" fill="rgb(207,10,32)" fg:x="460" fg:w="4"/><text x="37.8932%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="37.8887%" y="549" width="0.0818%" height="15" fill="rgb(214,63,15)" fg:x="463" fg:w="1"/><text x="38.1387%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="37.8887%" y="533" width="0.0818%" height="15" fill="rgb(234,176,14)" fg:x="463" fg:w="1"/><text x="38.1387%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.8887%" y="517" width="0.0818%" height="15" fill="rgb(226,104,52)" fg:x="463" fg:w="1"/><text x="38.1387%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.8887%" y="501" width="0.0818%" height="15" fill="rgb(211,222,1)" fg:x="463" fg:w="1"/><text x="38.1387%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.8887%" y="485" width="0.0818%" height="15" fill="rgb(237,7,3)" fg:x="463" fg:w="1"/><text x="38.1387%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.8887%" y="469" width="0.0818%" height="15" fill="rgb(218,143,7)" fg:x="463" fg:w="1"/><text x="38.1387%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="37.9705%" y="549" width="0.0818%" height="15" fill="rgb(208,25,22)" fg:x="464" fg:w="1"/><text x="38.2205%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.9705%" y="533" width="0.0818%" height="15" fill="rgb(228,127,16)" fg:x="464" fg:w="1"/><text x="38.2205%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.9705%" y="517" width="0.0818%" height="15" fill="rgb(237,86,27)" fg:x="464" fg:w="1"/><text x="38.2205%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.9705%" y="501" width="0.0818%" height="15" fill="rgb(207,125,19)" fg:x="464" fg:w="1"/><text x="38.2205%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.9705%" y="485" width="0.0818%" height="15" fill="rgb(243,195,0)" fg:x="464" fg:w="1"/><text x="38.2205%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.9705%" y="469" width="0.0818%" height="15" fill="rgb(230,95,18)" fg:x="464" fg:w="1"/><text x="38.2205%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1342%" y="517" width="0.0818%" height="15" fill="rgb(232,157,21)" fg:x="466" fg:w="1"/><text x="38.3842%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.1342%" y="501" width="0.0818%" height="15" fill="rgb(212,120,50)" fg:x="466" fg:w="1"/><text x="38.3842%" y="511.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.25%)</title><rect x="38.0524%" y="549" width="0.2455%" height="15" fill="rgb(222,204,44)" fg:x="465" fg:w="3"/><text x="38.3024%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="38.1342%" y="533" width="0.1637%" height="15" fill="rgb(236,6,33)" fg:x="466" fg:w="2"/><text x="38.3842%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.2160%" y="517" width="0.0818%" height="15" fill="rgb(247,11,38)" fg:x="467" fg:w="1"/><text x="38.4660%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.2160%" y="501" width="0.0818%" height="15" fill="rgb(215,111,0)" fg:x="467" fg:w="1"/><text x="38.4660%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="38.2160%" y="485" width="0.0818%" height="15" fill="rgb(211,65,46)" fg:x="467" fg:w="1"/><text x="38.4660%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.2160%" y="469" width="0.0818%" height="15" fill="rgb(216,5,12)" fg:x="467" fg:w="1"/><text x="38.4660%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="38.2160%" y="453" width="0.0818%" height="15" fill="rgb(226,7,2)" fg:x="467" fg:w="1"/><text x="38.4660%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="38.2160%" y="437" width="0.0818%" height="15" fill="rgb(242,116,12)" fg:x="467" fg:w="1"/><text x="38.4660%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.2160%" y="421" width="0.0818%" height="15" fill="rgb(249,209,7)" fg:x="467" fg:w="1"/><text x="38.4660%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="38.2160%" y="405" width="0.0818%" height="15" fill="rgb(232,73,17)" fg:x="467" fg:w="1"/><text x="38.4660%" y="415.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.41%)</title><rect x="37.9705%" y="581" width="0.4092%" height="15" fill="rgb(214,13,32)" fg:x="464" fg:w="5"/><text x="38.2205%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.41%)</title><rect x="37.9705%" y="565" width="0.4092%" height="15" fill="rgb(221,125,10)" fg:x="464" fg:w="5"/><text x="38.2205%" y="575.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="38.2979%" y="549" width="0.0818%" height="15" fill="rgb(246,7,44)" fg:x="468" fg:w="1"/><text x="38.5479%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.25%)</title><rect x="38.3797%" y="549" width="0.2455%" height="15" fill="rgb(239,18,35)" fg:x="469" fg:w="3"/><text x="38.6297%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.25%)</title><rect x="38.3797%" y="533" width="0.2455%" height="15" fill="rgb(250,222,16)" fg:x="469" fg:w="3"/><text x="38.6297%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.25%)</title><rect x="38.3797%" y="517" width="0.2455%" height="15" fill="rgb(219,100,8)" fg:x="469" fg:w="3"/><text x="38.6297%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.25%)</title><rect x="38.3797%" y="501" width="0.2455%" height="15" fill="rgb(240,62,13)" fg:x="469" fg:w="3"/><text x="38.6297%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="38.3797%" y="485" width="0.2455%" height="15" fill="rgb(253,194,2)" fg:x="469" fg:w="3"/><text x="38.6297%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="38.3797%" y="469" width="0.2455%" height="15" fill="rgb(235,58,31)" fg:x="469" fg:w="3"/><text x="38.6297%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="38.3797%" y="453" width="0.2455%" height="15" fill="rgb(231,37,11)" fg:x="469" fg:w="3"/><text x="38.6297%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.25%)</title><rect x="38.3797%" y="437" width="0.2455%" height="15" fill="rgb(235,133,0)" fg:x="469" fg:w="3"/><text x="38.6297%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="38.3797%" y="421" width="0.2455%" height="15" fill="rgb(212,185,40)" fg:x="469" fg:w="3"/><text x="38.6297%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="38.3797%" y="405" width="0.2455%" height="15" fill="rgb(216,68,42)" fg:x="469" fg:w="3"/><text x="38.6297%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="38.3797%" y="389" width="0.2455%" height="15" fill="rgb(239,81,4)" fg:x="469" fg:w="3"/><text x="38.6297%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.25%)</title><rect x="38.3797%" y="373" width="0.2455%" height="15" fill="rgb(206,86,6)" fg:x="469" fg:w="3"/><text x="38.6297%" y="383.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="38.3797%" y="357" width="0.2455%" height="15" fill="rgb(249,95,27)" fg:x="469" fg:w="3"/><text x="38.6297%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="38.3797%" y="341" width="0.2455%" height="15" fill="rgb(205,155,45)" fg:x="469" fg:w="3"/><text x="38.6297%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.25%)</title><rect x="38.3797%" y="325" width="0.2455%" height="15" fill="rgb(213,55,42)" fg:x="469" fg:w="3"/><text x="38.6297%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="38.4615%" y="309" width="0.1637%" height="15" fill="rgb(249,197,4)" fg:x="470" fg:w="2"/><text x="38.7115%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="38.4615%" y="293" width="0.1637%" height="15" fill="rgb(212,128,32)" fg:x="470" fg:w="2"/><text x="38.7115%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="38.4615%" y="277" width="0.1637%" height="15" fill="rgb(252,47,30)" fg:x="470" fg:w="2"/><text x="38.7115%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="38.4615%" y="261" width="0.1637%" height="15" fill="rgb(209,79,18)" fg:x="470" fg:w="2"/><text x="38.7115%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="38.4615%" y="245" width="0.1637%" height="15" fill="rgb(225,81,38)" fg:x="470" fg:w="2"/><text x="38.7115%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="38.4615%" y="229" width="0.1637%" height="15" fill="rgb(205,95,16)" fg:x="470" fg:w="2"/><text x="38.7115%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="38.4615%" y="213" width="0.1637%" height="15" fill="rgb(214,30,4)" fg:x="470" fg:w="2"/><text x="38.7115%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="38.4615%" y="197" width="0.1637%" height="15" fill="rgb(232,137,22)" fg:x="470" fg:w="2"/><text x="38.7115%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="38.4615%" y="181" width="0.1637%" height="15" fill="rgb(232,156,19)" fg:x="470" fg:w="2"/><text x="38.7115%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="38.4615%" y="165" width="0.1637%" height="15" fill="rgb(248,157,26)" fg:x="470" fg:w="2"/><text x="38.7115%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="38.4615%" y="149" width="0.1637%" height="15" fill="rgb(242,24,3)" fg:x="470" fg:w="2"/><text x="38.7115%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="38.4615%" y="133" width="0.1637%" height="15" fill="rgb(218,195,48)" fg:x="470" fg:w="2"/><text x="38.7115%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="38.4615%" y="117" width="0.1637%" height="15" fill="rgb(214,193,36)" fg:x="470" fg:w="2"/><text x="38.7115%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="38.4615%" y="101" width="0.1637%" height="15" fill="rgb(242,110,40)" fg:x="470" fg:w="2"/><text x="38.7115%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="38.4615%" y="85" width="0.1637%" height="15" fill="rgb(233,150,26)" fg:x="470" fg:w="2"/><text x="38.7115%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="38.4615%" y="69" width="0.1637%" height="15" fill="rgb(239,200,30)" fg:x="470" fg:w="2"/><text x="38.7115%" y="79.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="38.4615%" y="53" width="0.1637%" height="15" fill="rgb(226,28,11)" fg:x="470" fg:w="2"/><text x="38.7115%" y="63.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="38.4615%" y="37" width="0.1637%" height="15" fill="rgb(220,26,48)" fg:x="470" fg:w="2"/><text x="38.7115%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.6252%" y="549" width="0.1637%" height="15" fill="rgb(232,10,11)" fg:x="472" fg:w="2"/><text x="38.8752%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="38.6252%" y="533" width="0.1637%" height="15" fill="rgb(252,143,50)" fg:x="472" fg:w="2"/><text x="38.8752%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.6252%" y="517" width="0.1637%" height="15" fill="rgb(206,58,22)" fg:x="472" fg:w="2"/><text x="38.8752%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.6252%" y="501" width="0.1637%" height="15" fill="rgb(250,9,45)" fg:x="472" fg:w="2"/><text x="38.8752%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.6252%" y="485" width="0.1637%" height="15" fill="rgb(225,148,14)" fg:x="472" fg:w="2"/><text x="38.8752%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.6252%" y="469" width="0.1637%" height="15" fill="rgb(205,178,40)" fg:x="472" fg:w="2"/><text x="38.8752%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.6252%" y="453" width="0.1637%" height="15" fill="rgb(215,201,4)" fg:x="472" fg:w="2"/><text x="38.8752%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.6252%" y="437" width="0.1637%" height="15" fill="rgb(219,223,24)" fg:x="472" fg:w="2"/><text x="38.8752%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.6252%" y="421" width="0.1637%" height="15" fill="rgb(217,19,31)" fg:x="472" fg:w="2"/><text x="38.8752%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.7889%" y="501" width="0.0818%" height="15" fill="rgb(235,33,3)" fg:x="474" fg:w="1"/><text x="39.0389%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.7889%" y="485" width="0.0818%" height="15" fill="rgb(221,39,18)" fg:x="474" fg:w="1"/><text x="39.0389%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.7889%" y="469" width="0.0818%" height="15" fill="rgb(242,162,33)" fg:x="474" fg:w="1"/><text x="39.0389%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.7889%" y="453" width="0.0818%" height="15" fill="rgb(233,215,28)" fg:x="474" fg:w="1"/><text x="39.0389%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.7889%" y="437" width="0.0818%" height="15" fill="rgb(212,117,9)" fg:x="474" fg:w="1"/><text x="39.0389%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.7889%" y="421" width="0.0818%" height="15" fill="rgb(237,70,47)" fg:x="474" fg:w="1"/><text x="39.0389%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.7889%" y="405" width="0.0818%" height="15" fill="rgb(206,177,13)" fg:x="474" fg:w="1"/><text x="39.0389%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.7889%" y="389" width="0.0818%" height="15" fill="rgb(209,174,33)" fg:x="474" fg:w="1"/><text x="39.0389%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.7889%" y="373" width="0.0818%" height="15" fill="rgb(226,6,11)" fg:x="474" fg:w="1"/><text x="39.0389%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.7889%" y="357" width="0.0818%" height="15" fill="rgb(240,214,6)" fg:x="474" fg:w="1"/><text x="39.0389%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="38.8707%" y="501" width="0.0818%" height="15" fill="rgb(254,214,40)" fg:x="475" fg:w="1"/><text x="39.1207%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.8707%" y="485" width="0.0818%" height="15" fill="rgb(230,187,15)" fg:x="475" fg:w="1"/><text x="39.1207%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.8707%" y="469" width="0.0818%" height="15" fill="rgb(250,11,27)" fg:x="475" fg:w="1"/><text x="39.1207%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.25%)</title><rect x="38.7889%" y="533" width="0.2455%" height="15" fill="rgb(243,107,19)" fg:x="474" fg:w="3"/><text x="39.0389%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="38.7889%" y="517" width="0.2455%" height="15" fill="rgb(253,66,26)" fg:x="474" fg:w="3"/><text x="39.0389%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.9525%" y="501" width="0.0818%" height="15" fill="rgb(228,43,8)" fg:x="476" fg:w="1"/><text x="39.2025%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.9525%" y="485" width="0.0818%" height="15" fill="rgb(232,197,36)" fg:x="476" fg:w="1"/><text x="39.2025%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.9525%" y="469" width="0.0818%" height="15" fill="rgb(221,182,31)" fg:x="476" fg:w="1"/><text x="39.2025%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.9525%" y="453" width="0.0818%" height="15" fill="rgb(244,25,36)" fg:x="476" fg:w="1"/><text x="39.2025%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="38.9525%" y="437" width="0.0818%" height="15" fill="rgb(247,101,19)" fg:x="476" fg:w="1"/><text x="39.2025%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="38.9525%" y="421" width="0.0818%" height="15" fill="rgb(223,117,19)" fg:x="476" fg:w="1"/><text x="39.2025%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.33%)</title><rect x="38.7889%" y="549" width="0.3273%" height="15" fill="rgb(249,63,38)" fg:x="474" fg:w="4"/><text x="39.0389%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="39.0344%" y="533" width="0.0818%" height="15" fill="rgb(220,143,23)" fg:x="477" fg:w="1"/><text x="39.2844%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="39.0344%" y="517" width="0.0818%" height="15" fill="rgb(252,183,22)" fg:x="477" fg:w="1"/><text x="39.2844%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.0344%" y="501" width="0.0818%" height="15" fill="rgb(243,176,15)" fg:x="477" fg:w="1"/><text x="39.2844%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.0344%" y="485" width="0.0818%" height="15" fill="rgb(244,204,46)" fg:x="477" fg:w="1"/><text x="39.2844%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.0344%" y="469" width="0.0818%" height="15" fill="rgb(227,28,54)" fg:x="477" fg:w="1"/><text x="39.2844%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="39.1162%" y="469" width="0.1637%" height="15" fill="rgb(231,10,15)" fg:x="478" fg:w="2"/><text x="39.3662%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="39.1162%" y="501" width="0.2455%" height="15" fill="rgb(210,200,17)" fg:x="478" fg:w="3"/><text x="39.3662%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="39.1162%" y="485" width="0.2455%" height="15" fill="rgb(251,106,46)" fg:x="478" fg:w="3"/><text x="39.3662%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.2799%" y="469" width="0.0818%" height="15" fill="rgb(218,211,15)" fg:x="480" fg:w="1"/><text x="39.5299%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2799%" y="453" width="0.0818%" height="15" fill="rgb(239,62,10)" fg:x="480" fg:w="1"/><text x="39.5299%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.2799%" y="437" width="0.0818%" height="15" fill="rgb(225,53,53)" fg:x="480" fg:w="1"/><text x="39.5299%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2799%" y="421" width="0.0818%" height="15" fill="rgb(207,16,24)" fg:x="480" fg:w="1"/><text x="39.5299%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.2799%" y="405" width="0.0818%" height="15" fill="rgb(217,52,28)" fg:x="480" fg:w="1"/><text x="39.5299%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2799%" y="389" width="0.0818%" height="15" fill="rgb(246,1,5)" fg:x="480" fg:w="1"/><text x="39.5299%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.23%)</title><rect x="38.3797%" y="565" width="1.2275%" height="15" fill="rgb(221,29,26)" fg:x="469" fg:w="15"/><text x="38.6297%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.49%)</title><rect x="39.1162%" y="549" width="0.4910%" height="15" fill="rgb(250,133,32)" fg:x="478" fg:w="6"/><text x="39.3662%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.49%)</title><rect x="39.1162%" y="533" width="0.4910%" height="15" fill="rgb(236,63,16)" fg:x="478" fg:w="6"/><text x="39.3662%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.49%)</title><rect x="39.1162%" y="517" width="0.4910%" height="15" fill="rgb(231,159,14)" fg:x="478" fg:w="6"/><text x="39.3662%" y="527.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.25%)</title><rect x="39.3617%" y="501" width="0.2455%" height="15" fill="rgb(207,102,36)" fg:x="481" fg:w="3"/><text x="39.6117%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.25%)</title><rect x="39.3617%" y="485" width="0.2455%" height="15" fill="rgb(230,224,31)" fg:x="481" fg:w="3"/><text x="39.6117%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.4435%" y="469" width="0.1637%" height="15" fill="rgb(215,182,16)" fg:x="482" fg:w="2"/><text x="39.6935%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.4435%" y="453" width="0.1637%" height="15" fill="rgb(226,113,2)" fg:x="482" fg:w="2"/><text x="39.6935%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.4435%" y="437" width="0.1637%" height="15" fill="rgb(241,18,35)" fg:x="482" fg:w="2"/><text x="39.6935%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.5254%" y="421" width="0.0818%" height="15" fill="rgb(240,165,44)" fg:x="483" fg:w="1"/><text x="39.7754%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.5254%" y="405" width="0.0818%" height="15" fill="rgb(229,130,47)" fg:x="483" fg:w="1"/><text x="39.7754%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7709%" y="405" width="0.0818%" height="15" fill="rgb(223,93,7)" fg:x="486" fg:w="1"/><text x="40.0209%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="39.6890%" y="517" width="0.3273%" height="15" fill="rgb(205,180,36)" fg:x="485" fg:w="4"/><text x="39.9390%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="39.6890%" y="501" width="0.3273%" height="15" fill="rgb(221,103,28)" fg:x="485" fg:w="4"/><text x="39.9390%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="39.6890%" y="485" width="0.3273%" height="15" fill="rgb(212,4,3)" fg:x="485" fg:w="4"/><text x="39.9390%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="39.6890%" y="469" width="0.3273%" height="15" fill="rgb(209,221,53)" fg:x="485" fg:w="4"/><text x="39.9390%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="39.6890%" y="453" width="0.3273%" height="15" fill="rgb(233,229,52)" fg:x="485" fg:w="4"/><text x="39.9390%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="39.7709%" y="437" width="0.2455%" height="15" fill="rgb(254,127,37)" fg:x="486" fg:w="3"/><text x="40.0209%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="39.7709%" y="421" width="0.2455%" height="15" fill="rgb(207,161,26)" fg:x="486" fg:w="3"/><text x="40.0209%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.8527%" y="405" width="0.1637%" height="15" fill="rgb(223,75,5)" fg:x="487" fg:w="2"/><text x="40.1027%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.8527%" y="389" width="0.1637%" height="15" fill="rgb(235,115,52)" fg:x="487" fg:w="2"/><text x="40.1027%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="39.8527%" y="373" width="0.1637%" height="15" fill="rgb(240,91,46)" fg:x="487" fg:w="2"/><text x="40.1027%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="39.8527%" y="357" width="0.1637%" height="15" fill="rgb(251,144,21)" fg:x="487" fg:w="2"/><text x="40.1027%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="39.8527%" y="341" width="0.1637%" height="15" fill="rgb(247,220,47)" fg:x="487" fg:w="2"/><text x="40.1027%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.8527%" y="325" width="0.1637%" height="15" fill="rgb(253,122,1)" fg:x="487" fg:w="2"/><text x="40.1027%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.8527%" y="309" width="0.1637%" height="15" fill="rgb(221,0,24)" fg:x="487" fg:w="2"/><text x="40.1027%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="39.8527%" y="293" width="0.1637%" height="15" fill="rgb(220,204,54)" fg:x="487" fg:w="2"/><text x="40.1027%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="39.8527%" y="277" width="0.1637%" height="15" fill="rgb(205,96,25)" fg:x="487" fg:w="2"/><text x="40.1027%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="39.8527%" y="261" width="0.1637%" height="15" fill="rgb(247,77,20)" fg:x="487" fg:w="2"/><text x="40.1027%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="39.8527%" y="245" width="0.1637%" height="15" fill="rgb(245,151,8)" fg:x="487" fg:w="2"/><text x="40.1027%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.8527%" y="229" width="0.1637%" height="15" fill="rgb(242,158,39)" fg:x="487" fg:w="2"/><text x="40.1027%" y="239.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.49%)</title><rect x="39.6072%" y="549" width="0.4910%" height="15" fill="rgb(222,214,50)" fg:x="484" fg:w="6"/><text x="39.8572%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.41%)</title><rect x="39.6890%" y="533" width="0.4092%" height="15" fill="rgb(229,60,39)" fg:x="485" fg:w="5"/><text x="39.9390%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="40.0164%" y="517" width="0.0818%" height="15" fill="rgb(240,148,18)" fg:x="489" fg:w="1"/><text x="40.2664%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="40.0164%" y="501" width="0.0818%" height="15" fill="rgb(215,96,11)" fg:x="489" fg:w="1"/><text x="40.2664%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="40.0164%" y="485" width="0.0818%" height="15" fill="rgb(238,162,53)" fg:x="489" fg:w="1"/><text x="40.2664%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0164%" y="469" width="0.0818%" height="15" fill="rgb(214,83,18)" fg:x="489" fg:w="1"/><text x="40.2664%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0164%" y="453" width="0.0818%" height="15" fill="rgb(248,117,24)" fg:x="489" fg:w="1"/><text x="40.2664%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0164%" y="437" width="0.0818%" height="15" fill="rgb(238,190,6)" fg:x="489" fg:w="1"/><text x="40.2664%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.0164%" y="421" width="0.0818%" height="15" fill="rgb(213,51,6)" fg:x="489" fg:w="1"/><text x="40.2664%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.1800%" y="469" width="0.0818%" height="15" fill="rgb(212,136,1)" fg:x="491" fg:w="1"/><text x="40.4300%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.25%)</title><rect x="40.0982%" y="549" width="0.2455%" height="15" fill="rgb(221,192,14)" fg:x="490" fg:w="3"/><text x="40.3482%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="40.1800%" y="533" width="0.1637%" height="15" fill="rgb(244,38,54)" fg:x="491" fg:w="2"/><text x="40.4300%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="40.1800%" y="517" width="0.1637%" height="15" fill="rgb(240,45,28)" fg:x="491" fg:w="2"/><text x="40.4300%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="40.1800%" y="501" width="0.1637%" height="15" fill="rgb(240,123,12)" fg:x="491" fg:w="2"/><text x="40.4300%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="40.1800%" y="485" width="0.1637%" height="15" fill="rgb(216,14,30)" fg:x="491" fg:w="2"/><text x="40.4300%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.2619%" y="469" width="0.0818%" height="15" fill="rgb(212,50,24)" fg:x="492" fg:w="1"/><text x="40.5119%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.4255%" y="453" width="0.0818%" height="15" fill="rgb(253,229,47)" fg:x="494" fg:w="1"/><text x="40.6755%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.4255%" y="437" width="0.0818%" height="15" fill="rgb(214,26,17)" fg:x="494" fg:w="1"/><text x="40.6755%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.5074%" y="421" width="0.0818%" height="15" fill="rgb(252,60,11)" fg:x="495" fg:w="1"/><text x="40.7574%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.5074%" y="405" width="0.0818%" height="15" fill="rgb(209,59,37)" fg:x="495" fg:w="1"/><text x="40.7574%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.5892%" y="373" width="0.0818%" height="15" fill="rgb(228,126,53)" fg:x="496" fg:w="1"/><text x="40.8392%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="40.5074%" y="453" width="0.2455%" height="15" fill="rgb(233,99,2)" fg:x="495" fg:w="3"/><text x="40.7574%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.25%)</title><rect x="40.5074%" y="437" width="0.2455%" height="15" fill="rgb(217,106,34)" fg:x="495" fg:w="3"/><text x="40.7574%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.5892%" y="421" width="0.1637%" height="15" fill="rgb(222,46,19)" fg:x="496" fg:w="2"/><text x="40.8392%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.5892%" y="405" width="0.1637%" height="15" fill="rgb(251,87,31)" fg:x="496" fg:w="2"/><text x="40.8392%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.5892%" y="389" width="0.1637%" height="15" fill="rgb(213,70,51)" fg:x="496" fg:w="2"/><text x="40.8392%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.6710%" y="373" width="0.0818%" height="15" fill="rgb(229,144,18)" fg:x="497" fg:w="1"/><text x="40.9210%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.6710%" y="357" width="0.0818%" height="15" fill="rgb(254,60,26)" fg:x="497" fg:w="1"/><text x="40.9210%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.49%)</title><rect x="40.3437%" y="501" width="0.4910%" height="15" fill="rgb(243,127,51)" fg:x="493" fg:w="6"/><text x="40.5937%" y="511.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="40.3437%" y="485" width="0.4910%" height="15" fill="rgb(221,51,25)" fg:x="493" fg:w="6"/><text x="40.5937%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="40.3437%" y="469" width="0.4910%" height="15" fill="rgb(205,42,7)" fg:x="493" fg:w="6"/><text x="40.5937%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.7529%" y="453" width="0.0818%" height="15" fill="rgb(236,177,48)" fg:x="498" fg:w="1"/><text x="41.0029%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7529%" y="437" width="0.0818%" height="15" fill="rgb(226,79,31)" fg:x="498" fg:w="1"/><text x="41.0029%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.7529%" y="421" width="0.0818%" height="15" fill="rgb(216,170,12)" fg:x="498" fg:w="1"/><text x="41.0029%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7529%" y="405" width="0.0818%" height="15" fill="rgb(208,62,51)" fg:x="498" fg:w="1"/><text x="41.0029%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.7529%" y="389" width="0.0818%" height="15" fill="rgb(254,129,9)" fg:x="498" fg:w="1"/><text x="41.0029%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7529%" y="373" width="0.0818%" height="15" fill="rgb(243,209,31)" fg:x="498" fg:w="1"/><text x="41.0029%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.8347%" y="453" width="0.0818%" height="15" fill="rgb(213,159,23)" fg:x="499" fg:w="1"/><text x="41.0847%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.8347%" y="437" width="0.0818%" height="15" fill="rgb(249,77,39)" fg:x="499" fg:w="1"/><text x="41.0847%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.8347%" y="421" width="0.0818%" height="15" fill="rgb(230,13,33)" fg:x="499" fg:w="1"/><text x="41.0847%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.8347%" y="405" width="0.0818%" height="15" fill="rgb(215,215,7)" fg:x="499" fg:w="1"/><text x="41.0847%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (257 samples, 21.03%)</title><rect x="19.9673%" y="597" width="21.0311%" height="15" fill="rgb(222,92,25)" fg:x="244" fg:w="257"/><text x="20.2173%" y="607.50">plugins_core::build::BuildSurroun..</text></g><g><title>plugins_core::build::Build::occupying (32 samples, 2.62%)</title><rect x="38.3797%" y="581" width="2.6187%" height="15" fill="rgb(215,173,22)" fg:x="469" fg:w="32"/><text x="38.6297%" y="591.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (17 samples, 1.39%)</title><rect x="39.6072%" y="565" width="1.3912%" height="15" fill="rgb(247,205,52)" fg:x="484" fg:w="17"/><text x="39.8572%" y="575.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (8 samples, 0.65%)</title><rect x="40.3437%" y="549" width="0.6547%" height="15" fill="rgb(240,210,37)" fg:x="493" fg:w="8"/><text x="40.5937%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.65%)</title><rect x="40.3437%" y="533" width="0.6547%" height="15" fill="rgb(224,13,10)" fg:x="493" fg:w="8"/><text x="40.5937%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.65%)</title><rect x="40.3437%" y="517" width="0.6547%" height="15" fill="rgb(209,48,33)" fg:x="493" fg:w="8"/><text x="40.5937%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="40.8347%" y="501" width="0.1637%" height="15" fill="rgb(228,219,23)" fg:x="499" fg:w="2"/><text x="41.0847%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="40.8347%" y="485" width="0.1637%" height="15" fill="rgb(239,46,49)" fg:x="499" fg:w="2"/><text x="41.0847%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.8347%" y="469" width="0.1637%" height="15" fill="rgb(206,172,51)" fg:x="499" fg:w="2"/><text x="41.0847%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.9165%" y="453" width="0.0818%" height="15" fill="rgb(213,212,35)" fg:x="500" fg:w="1"/><text x="41.1665%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9165%" y="437" width="0.0818%" height="15" fill="rgb(252,40,27)" fg:x="500" fg:w="1"/><text x="41.1665%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.9165%" y="421" width="0.0818%" height="15" fill="rgb(212,33,41)" fg:x="500" fg:w="1"/><text x="41.1665%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9165%" y="405" width="0.0818%" height="15" fill="rgb(232,160,27)" fg:x="500" fg:w="1"/><text x="41.1665%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.9165%" y="389" width="0.0818%" height="15" fill="rgb(244,160,20)" fg:x="500" fg:w="1"/><text x="41.1665%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9165%" y="373" width="0.0818%" height="15" fill="rgb(205,66,20)" fg:x="500" fg:w="1"/><text x="41.1665%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.9165%" y="357" width="0.0818%" height="15" fill="rgb(236,158,6)" fg:x="500" fg:w="1"/><text x="41.1665%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9165%" y="341" width="0.0818%" height="15" fill="rgb(232,25,36)" fg:x="500" fg:w="1"/><text x="41.1665%" y="351.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="40.9165%" y="325" width="0.0818%" height="15" fill="rgb(220,153,35)" fg:x="500" fg:w="1"/><text x="41.1665%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.9984%" y="501" width="0.0818%" height="15" fill="rgb(216,5,8)" fg:x="501" fg:w="1"/><text x="41.2484%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9984%" y="485" width="0.0818%" height="15" fill="rgb(240,97,3)" fg:x="501" fg:w="1"/><text x="41.2484%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9984%" y="469" width="0.0818%" height="15" fill="rgb(220,99,26)" fg:x="501" fg:w="1"/><text x="41.2484%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.9984%" y="453" width="0.0818%" height="15" fill="rgb(237,96,2)" fg:x="501" fg:w="1"/><text x="41.2484%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.9984%" y="437" width="0.0818%" height="15" fill="rgb(217,197,47)" fg:x="501" fg:w="1"/><text x="41.2484%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.9984%" y="421" width="0.0818%" height="15" fill="rgb(252,133,54)" fg:x="501" fg:w="1"/><text x="41.2484%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.9984%" y="405" width="0.0818%" height="15" fill="rgb(233,37,30)" fg:x="501" fg:w="1"/><text x="41.2484%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.9984%" y="389" width="0.0818%" height="15" fill="rgb(239,182,12)" fg:x="501" fg:w="1"/><text x="41.2484%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.9984%" y="373" width="0.0818%" height="15" fill="rgb(245,83,39)" fg:x="501" fg:w="1"/><text x="41.2484%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.9984%" y="357" width="0.0818%" height="15" fill="rgb(222,109,36)" fg:x="501" fg:w="1"/><text x="41.2484%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.9984%" y="341" width="0.0818%" height="15" fill="rgb(237,95,44)" fg:x="501" fg:w="1"/><text x="41.2484%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.9984%" y="325" width="0.0818%" height="15" fill="rgb(216,36,54)" fg:x="501" fg:w="1"/><text x="41.2484%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9984%" y="309" width="0.0818%" height="15" fill="rgb(236,164,3)" fg:x="501" fg:w="1"/><text x="41.2484%" y="319.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="40.9984%" y="597" width="0.1637%" height="15" fill="rgb(223,15,21)" fg:x="501" fg:w="2"/><text x="41.2484%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="40.9984%" y="581" width="0.1637%" height="15" fill="rgb(239,191,12)" fg:x="501" fg:w="2"/><text x="41.2484%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="40.9984%" y="565" width="0.1637%" height="15" fill="rgb(231,191,37)" fg:x="501" fg:w="2"/><text x="41.2484%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="40.9984%" y="549" width="0.1637%" height="15" fill="rgb(209,155,36)" fg:x="501" fg:w="2"/><text x="41.2484%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="40.9984%" y="533" width="0.1637%" height="15" fill="rgb(216,222,49)" fg:x="501" fg:w="2"/><text x="41.2484%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.9984%" y="517" width="0.1637%" height="15" fill="rgb(218,181,2)" fg:x="501" fg:w="2"/><text x="41.2484%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.0802%" y="501" width="0.0818%" height="15" fill="rgb(239,125,9)" fg:x="502" fg:w="1"/><text x="41.3302%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.0802%" y="485" width="0.0818%" height="15" fill="rgb(233,103,7)" fg:x="502" fg:w="1"/><text x="41.3302%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.1620%" y="341" width="0.0818%" height="15" fill="rgb(209,223,5)" fg:x="503" fg:w="1"/><text x="41.4120%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.1620%" y="325" width="0.0818%" height="15" fill="rgb(234,71,27)" fg:x="503" fg:w="1"/><text x="41.4120%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.1620%" y="309" width="0.0818%" height="15" fill="rgb(251,202,16)" fg:x="503" fg:w="1"/><text x="41.4120%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.1620%" y="293" width="0.0818%" height="15" fill="rgb(231,180,0)" fg:x="503" fg:w="1"/><text x="41.4120%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.1620%" y="277" width="0.0818%" height="15" fill="rgb(223,58,28)" fg:x="503" fg:w="1"/><text x="41.4120%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.1620%" y="261" width="0.0818%" height="15" fill="rgb(250,34,24)" fg:x="503" fg:w="1"/><text x="41.4120%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.1620%" y="245" width="0.0818%" height="15" fill="rgb(235,24,16)" fg:x="503" fg:w="1"/><text x="41.4120%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.1620%" y="229" width="0.0818%" height="15" fill="rgb(219,28,33)" fg:x="503" fg:w="1"/><text x="41.4120%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.1620%" y="213" width="0.0818%" height="15" fill="rgb(228,150,43)" fg:x="503" fg:w="1"/><text x="41.4120%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="41.1620%" y="197" width="0.0818%" height="15" fill="rgb(221,228,36)" fg:x="503" fg:w="1"/><text x="41.4120%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.1620%" y="181" width="0.0818%" height="15" fill="rgb(232,116,17)" fg:x="503" fg:w="1"/><text x="41.4120%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1620%" y="165" width="0.0818%" height="15" fill="rgb(220,110,51)" fg:x="503" fg:w="1"/><text x="41.4120%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="41.1620%" y="549" width="0.1637%" height="15" fill="rgb(207,26,25)" fg:x="503" fg:w="2"/><text x="41.4120%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="41.1620%" y="533" width="0.1637%" height="15" fill="rgb(223,58,19)" fg:x="503" fg:w="2"/><text x="41.4120%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="41.1620%" y="517" width="0.1637%" height="15" fill="rgb(234,125,39)" fg:x="503" fg:w="2"/><text x="41.4120%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="41.1620%" y="501" width="0.1637%" height="15" fill="rgb(241,48,36)" fg:x="503" fg:w="2"/><text x="41.4120%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="41.1620%" y="485" width="0.1637%" height="15" fill="rgb(217,148,51)" fg:x="503" fg:w="2"/><text x="41.4120%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="41.1620%" y="469" width="0.1637%" height="15" fill="rgb(247,17,25)" fg:x="503" fg:w="2"/><text x="41.4120%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="41.1620%" y="453" width="0.1637%" height="15" fill="rgb(219,89,38)" fg:x="503" fg:w="2"/><text x="41.4120%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="41.1620%" y="437" width="0.1637%" height="15" fill="rgb(220,145,2)" fg:x="503" fg:w="2"/><text x="41.4120%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="41.1620%" y="421" width="0.1637%" height="15" fill="rgb(244,66,47)" fg:x="503" fg:w="2"/><text x="41.4120%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="41.1620%" y="405" width="0.1637%" height="15" fill="rgb(226,182,5)" fg:x="503" fg:w="2"/><text x="41.4120%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="41.1620%" y="389" width="0.1637%" height="15" fill="rgb(211,98,20)" fg:x="503" fg:w="2"/><text x="41.4120%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="41.1620%" y="373" width="0.1637%" height="15" fill="rgb(217,103,52)" fg:x="503" fg:w="2"/><text x="41.4120%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="41.1620%" y="357" width="0.1637%" height="15" fill="rgb(208,125,52)" fg:x="503" fg:w="2"/><text x="41.4120%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.2439%" y="341" width="0.0818%" height="15" fill="rgb(244,70,13)" fg:x="504" fg:w="1"/><text x="41.4939%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.2439%" y="325" width="0.0818%" height="15" fill="rgb(253,124,3)" fg:x="504" fg:w="1"/><text x="41.4939%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.2439%" y="309" width="0.0818%" height="15" fill="rgb(222,145,32)" fg:x="504" fg:w="1"/><text x="41.4939%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.2439%" y="293" width="0.0818%" height="15" fill="rgb(232,183,47)" fg:x="504" fg:w="1"/><text x="41.4939%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.2439%" y="277" width="0.0818%" height="15" fill="rgb(246,226,4)" fg:x="504" fg:w="1"/><text x="41.4939%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.2439%" y="261" width="0.0818%" height="15" fill="rgb(228,185,46)" fg:x="504" fg:w="1"/><text x="41.4939%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.2439%" y="245" width="0.0818%" height="15" fill="rgb(213,196,4)" fg:x="504" fg:w="1"/><text x="41.4939%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.2439%" y="229" width="0.0818%" height="15" fill="rgb(212,2,45)" fg:x="504" fg:w="1"/><text x="41.4939%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.2439%" y="213" width="0.0818%" height="15" fill="rgb(217,145,50)" fg:x="504" fg:w="1"/><text x="41.4939%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.2439%" y="197" width="0.0818%" height="15" fill="rgb(242,10,46)" fg:x="504" fg:w="1"/><text x="41.4939%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="41.2439%" y="181" width="0.0818%" height="15" fill="rgb(252,91,48)" fg:x="504" fg:w="1"/><text x="41.4939%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.2439%" y="165" width="0.0818%" height="15" fill="rgb(216,72,13)" fg:x="504" fg:w="1"/><text x="41.4939%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="41.2439%" y="149" width="0.0818%" height="15" fill="rgb(219,6,37)" fg:x="504" fg:w="1"/><text x="41.4939%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="41.2439%" y="133" width="0.0818%" height="15" fill="rgb(236,185,40)" fg:x="504" fg:w="1"/><text x="41.4939%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="41.2439%" y="117" width="0.0818%" height="15" fill="rgb(208,81,48)" fg:x="504" fg:w="1"/><text x="41.4939%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.2439%" y="101" width="0.0818%" height="15" fill="rgb(211,42,33)" fg:x="504" fg:w="1"/><text x="41.4939%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.3257%" y="501" width="0.0818%" height="15" fill="rgb(211,90,39)" fg:x="505" fg:w="1"/><text x="41.5757%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.3257%" y="485" width="0.0818%" height="15" fill="rgb(218,136,12)" fg:x="505" fg:w="1"/><text x="41.5757%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.3257%" y="549" width="0.1637%" height="15" fill="rgb(234,12,32)" fg:x="505" fg:w="2"/><text x="41.5757%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="41.3257%" y="533" width="0.1637%" height="15" fill="rgb(221,164,18)" fg:x="505" fg:w="2"/><text x="41.5757%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.3257%" y="517" width="0.1637%" height="15" fill="rgb(239,135,14)" fg:x="505" fg:w="2"/><text x="41.5757%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.4075%" y="501" width="0.0818%" height="15" fill="rgb(226,198,47)" fg:x="506" fg:w="1"/><text x="41.6575%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4075%" y="485" width="0.0818%" height="15" fill="rgb(244,121,47)" fg:x="506" fg:w="1"/><text x="41.6575%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.4075%" y="469" width="0.0818%" height="15" fill="rgb(226,21,48)" fg:x="506" fg:w="1"/><text x="41.6575%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4075%" y="453" width="0.0818%" height="15" fill="rgb(215,178,47)" fg:x="506" fg:w="1"/><text x="41.6575%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.4075%" y="437" width="0.0818%" height="15" fill="rgb(206,212,19)" fg:x="506" fg:w="1"/><text x="41.6575%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4075%" y="421" width="0.0818%" height="15" fill="rgb(230,104,34)" fg:x="506" fg:w="1"/><text x="41.6575%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.4075%" y="405" width="0.0818%" height="15" fill="rgb(210,96,51)" fg:x="506" fg:w="1"/><text x="41.6575%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4075%" y="389" width="0.0818%" height="15" fill="rgb(229,111,47)" fg:x="506" fg:w="1"/><text x="41.6575%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.4075%" y="373" width="0.0818%" height="15" fill="rgb(218,174,45)" fg:x="506" fg:w="1"/><text x="41.6575%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4075%" y="357" width="0.0818%" height="15" fill="rgb(215,21,32)" fg:x="506" fg:w="1"/><text x="41.6575%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="41.4075%" y="341" width="0.0818%" height="15" fill="rgb(235,72,21)" fg:x="506" fg:w="1"/><text x="41.6575%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="41.4075%" y="325" width="0.0818%" height="15" fill="rgb(250,113,30)" fg:x="506" fg:w="1"/><text x="41.6575%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="41.4075%" y="309" width="0.0818%" height="15" fill="rgb(244,136,34)" fg:x="506" fg:w="1"/><text x="41.6575%" y="319.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="41.4894%" y="549" width="0.1637%" height="15" fill="rgb(213,226,47)" fg:x="507" fg:w="2"/><text x="41.7394%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="41.5712%" y="533" width="0.0818%" height="15" fill="rgb(224,136,40)" fg:x="508" fg:w="1"/><text x="41.8212%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="41.5712%" y="517" width="0.0818%" height="15" fill="rgb(253,124,12)" fg:x="508" fg:w="1"/><text x="41.8212%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.5712%" y="501" width="0.0818%" height="15" fill="rgb(210,67,8)" fg:x="508" fg:w="1"/><text x="41.8212%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5712%" y="485" width="0.0818%" height="15" fill="rgb(210,204,0)" fg:x="508" fg:w="1"/><text x="41.8212%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5712%" y="469" width="0.0818%" height="15" fill="rgb(217,179,22)" fg:x="508" fg:w="1"/><text x="41.8212%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.6530%" y="533" width="0.0818%" height="15" fill="rgb(237,192,33)" fg:x="509" fg:w="1"/><text x="41.9030%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.6530%" y="517" width="0.0818%" height="15" fill="rgb(211,104,28)" fg:x="509" fg:w="1"/><text x="41.9030%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.6530%" y="501" width="0.0818%" height="15" fill="rgb(214,75,30)" fg:x="509" fg:w="1"/><text x="41.9030%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.6530%" y="485" width="0.0818%" height="15" fill="rgb(220,227,12)" fg:x="509" fg:w="1"/><text x="41.9030%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.6530%" y="469" width="0.0818%" height="15" fill="rgb(233,134,28)" fg:x="509" fg:w="1"/><text x="41.9030%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.6530%" y="453" width="0.0818%" height="15" fill="rgb(215,146,24)" fg:x="509" fg:w="1"/><text x="41.9030%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.7349%" y="469" width="0.0818%" height="15" fill="rgb(248,227,20)" fg:x="510" fg:w="1"/><text x="41.9849%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.7349%" y="453" width="0.0818%" height="15" fill="rgb(250,44,42)" fg:x="510" fg:w="1"/><text x="41.9849%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.7349%" y="437" width="0.0818%" height="15" fill="rgb(219,5,35)" fg:x="510" fg:w="1"/><text x="41.9849%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.7349%" y="421" width="0.0818%" height="15" fill="rgb(241,132,32)" fg:x="510" fg:w="1"/><text x="41.9849%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="41.7349%" y="501" width="0.1637%" height="15" fill="rgb(234,212,51)" fg:x="510" fg:w="2"/><text x="41.9849%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.7349%" y="485" width="0.1637%" height="15" fill="rgb(242,173,29)" fg:x="510" fg:w="2"/><text x="41.9849%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.8167%" y="469" width="0.0818%" height="15" fill="rgb(212,159,2)" fg:x="511" fg:w="1"/><text x="42.0667%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.8167%" y="453" width="0.0818%" height="15" fill="rgb(238,165,31)" fg:x="511" fg:w="1"/><text x="42.0667%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.8167%" y="437" width="0.0818%" height="15" fill="rgb(241,57,36)" fg:x="511" fg:w="1"/><text x="42.0667%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.8167%" y="421" width="0.0818%" height="15" fill="rgb(249,7,4)" fg:x="511" fg:w="1"/><text x="42.0667%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.8167%" y="405" width="0.0818%" height="15" fill="rgb(250,137,44)" fg:x="511" fg:w="1"/><text x="42.0667%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.8167%" y="389" width="0.0818%" height="15" fill="rgb(244,185,1)" fg:x="511" fg:w="1"/><text x="42.0667%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.8167%" y="373" width="0.0818%" height="15" fill="rgb(216,5,53)" fg:x="511" fg:w="1"/><text x="42.0667%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.8167%" y="357" width="0.0818%" height="15" fill="rgb(234,89,21)" fg:x="511" fg:w="1"/><text x="42.0667%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.8167%" y="341" width="0.0818%" height="15" fill="rgb(250,81,43)" fg:x="511" fg:w="1"/><text x="42.0667%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.8985%" y="469" width="0.1637%" height="15" fill="rgb(243,132,11)" fg:x="512" fg:w="2"/><text x="42.1485%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9804%" y="453" width="0.0818%" height="15" fill="rgb(253,159,28)" fg:x="513" fg:w="1"/><text x="42.2304%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9804%" y="437" width="0.0818%" height="15" fill="rgb(237,167,34)" fg:x="513" fg:w="1"/><text x="42.2304%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.9804%" y="421" width="0.0818%" height="15" fill="rgb(237,16,50)" fg:x="513" fg:w="1"/><text x="42.2304%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.9804%" y="405" width="0.0818%" height="15" fill="rgb(247,125,2)" fg:x="513" fg:w="1"/><text x="42.2304%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.9804%" y="389" width="0.0818%" height="15" fill="rgb(254,35,3)" fg:x="513" fg:w="1"/><text x="42.2304%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9804%" y="373" width="0.0818%" height="15" fill="rgb(237,209,21)" fg:x="513" fg:w="1"/><text x="42.2304%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9804%" y="357" width="0.0818%" height="15" fill="rgb(224,122,20)" fg:x="513" fg:w="1"/><text x="42.2304%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.9804%" y="341" width="0.0818%" height="15" fill="rgb(224,11,46)" fg:x="513" fg:w="1"/><text x="42.2304%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.9804%" y="325" width="0.0818%" height="15" fill="rgb(248,21,33)" fg:x="513" fg:w="1"/><text x="42.2304%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.9804%" y="309" width="0.0818%" height="15" fill="rgb(222,144,7)" fg:x="513" fg:w="1"/><text x="42.2304%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.9804%" y="293" width="0.0818%" height="15" fill="rgb(205,141,37)" fg:x="513" fg:w="1"/><text x="42.2304%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.0622%" y="469" width="0.0818%" height="15" fill="rgb(237,130,8)" fg:x="514" fg:w="1"/><text x="42.3122%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.0622%" y="453" width="0.0818%" height="15" fill="rgb(209,179,39)" fg:x="514" fg:w="1"/><text x="42.3122%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.06%)</title><rect x="41.1620%" y="565" width="1.0638%" height="15" fill="rgb(207,52,17)" fg:x="503" fg:w="13"/><text x="41.4120%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="41.6530%" y="549" width="0.5728%" height="15" fill="rgb(253,158,17)" fg:x="509" fg:w="7"/><text x="41.9030%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.49%)</title><rect x="41.7349%" y="533" width="0.4910%" height="15" fill="rgb(208,19,53)" fg:x="510" fg:w="6"/><text x="41.9849%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.49%)</title><rect x="41.7349%" y="517" width="0.4910%" height="15" fill="rgb(233,152,13)" fg:x="510" fg:w="6"/><text x="41.9849%" y="527.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.33%)</title><rect x="41.8985%" y="501" width="0.3273%" height="15" fill="rgb(231,84,1)" fg:x="512" fg:w="4"/><text x="42.1485%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.33%)</title><rect x="41.8985%" y="485" width="0.3273%" height="15" fill="rgb(229,142,48)" fg:x="512" fg:w="4"/><text x="42.1485%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="42.1440%" y="469" width="0.0818%" height="15" fill="rgb(248,70,29)" fg:x="515" fg:w="1"/><text x="42.3940%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.1440%" y="453" width="0.0818%" height="15" fill="rgb(250,85,7)" fg:x="515" fg:w="1"/><text x="42.3940%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="42.1440%" y="437" width="0.0818%" height="15" fill="rgb(235,140,43)" fg:x="515" fg:w="1"/><text x="42.3940%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.1440%" y="421" width="0.0818%" height="15" fill="rgb(216,0,5)" fg:x="515" fg:w="1"/><text x="42.3940%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="42.1440%" y="405" width="0.0818%" height="15" fill="rgb(223,167,29)" fg:x="515" fg:w="1"/><text x="42.3940%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="42.1440%" y="389" width="0.0818%" height="15" fill="rgb(229,150,33)" fg:x="515" fg:w="1"/><text x="42.3940%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.1440%" y="373" width="0.0818%" height="15" fill="rgb(227,26,52)" fg:x="515" fg:w="1"/><text x="42.3940%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="42.1440%" y="357" width="0.0818%" height="15" fill="rgb(250,60,52)" fg:x="515" fg:w="1"/><text x="42.3940%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.1440%" y="341" width="0.0818%" height="15" fill="rgb(228,81,46)" fg:x="515" fg:w="1"/><text x="42.3940%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.2259%" y="533" width="0.0818%" height="15" fill="rgb(225,218,31)" fg:x="516" fg:w="1"/><text x="42.4759%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.2259%" y="517" width="0.0818%" height="15" fill="rgb(230,35,16)" fg:x="516" fg:w="1"/><text x="42.4759%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.2259%" y="501" width="0.0818%" height="15" fill="rgb(247,100,0)" fg:x="516" fg:w="1"/><text x="42.4759%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.2259%" y="485" width="0.0818%" height="15" fill="rgb(223,135,11)" fg:x="516" fg:w="1"/><text x="42.4759%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.2259%" y="469" width="0.0818%" height="15" fill="rgb(207,136,0)" fg:x="516" fg:w="1"/><text x="42.4759%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.2259%" y="453" width="0.0818%" height="15" fill="rgb(246,131,25)" fg:x="516" fg:w="1"/><text x="42.4759%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.2259%" y="437" width="0.0818%" height="15" fill="rgb(209,47,12)" fg:x="516" fg:w="1"/><text x="42.4759%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.2259%" y="421" width="0.0818%" height="15" fill="rgb(221,25,16)" fg:x="516" fg:w="1"/><text x="42.4759%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.2259%" y="405" width="0.0818%" height="15" fill="rgb(223,164,33)" fg:x="516" fg:w="1"/><text x="42.4759%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.2259%" y="389" width="0.0818%" height="15" fill="rgb(220,26,23)" fg:x="516" fg:w="1"/><text x="42.4759%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.2259%" y="373" width="0.0818%" height="15" fill="rgb(231,224,1)" fg:x="516" fg:w="1"/><text x="42.4759%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2259%" y="357" width="0.0818%" height="15" fill="rgb(229,221,24)" fg:x="516" fg:w="1"/><text x="42.4759%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="42.3077%" y="533" width="0.0818%" height="15" fill="rgb(213,34,10)" fg:x="517" fg:w="1"/><text x="42.5577%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="42.3077%" y="517" width="0.0818%" height="15" fill="rgb(215,33,11)" fg:x="517" fg:w="1"/><text x="42.5577%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="42.3077%" y="501" width="0.0818%" height="15" fill="rgb(216,20,41)" fg:x="517" fg:w="1"/><text x="42.5577%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.3077%" y="485" width="0.0818%" height="15" fill="rgb(228,43,31)" fg:x="517" fg:w="1"/><text x="42.5577%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.3077%" y="469" width="0.0818%" height="15" fill="rgb(227,83,26)" fg:x="517" fg:w="1"/><text x="42.5577%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.3077%" y="453" width="0.0818%" height="15" fill="rgb(217,168,19)" fg:x="517" fg:w="1"/><text x="42.5577%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.3077%" y="437" width="0.0818%" height="15" fill="rgb(231,34,33)" fg:x="517" fg:w="1"/><text x="42.5577%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.3077%" y="421" width="0.0818%" height="15" fill="rgb(230,120,51)" fg:x="517" fg:w="1"/><text x="42.5577%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.3077%" y="405" width="0.0818%" height="15" fill="rgb(215,138,27)" fg:x="517" fg:w="1"/><text x="42.5577%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.25%)</title><rect x="42.2259%" y="565" width="0.2455%" height="15" fill="rgb(246,80,47)" fg:x="516" fg:w="3"/><text x="42.4759%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.25%)</title><rect x="42.2259%" y="549" width="0.2455%" height="15" fill="rgb(215,57,53)" fg:x="516" fg:w="3"/><text x="42.4759%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="42.3895%" y="533" width="0.0818%" height="15" fill="rgb(229,137,5)" fg:x="518" fg:w="1"/><text x="42.6395%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="42.3895%" y="517" width="0.0818%" height="15" fill="rgb(210,86,2)" fg:x="518" fg:w="1"/><text x="42.6395%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="42.3895%" y="501" width="0.0818%" height="15" fill="rgb(231,226,51)" fg:x="518" fg:w="1"/><text x="42.6395%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.3895%" y="485" width="0.0818%" height="15" fill="rgb(216,62,29)" fg:x="518" fg:w="1"/><text x="42.6395%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3895%" y="469" width="0.0818%" height="15" fill="rgb(248,202,3)" fg:x="518" fg:w="1"/><text x="42.6395%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3895%" y="453" width="0.0818%" height="15" fill="rgb(225,181,7)" fg:x="518" fg:w="1"/><text x="42.6395%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.3895%" y="437" width="0.0818%" height="15" fill="rgb(247,170,54)" fg:x="518" fg:w="1"/><text x="42.6395%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.3895%" y="421" width="0.0818%" height="15" fill="rgb(236,204,33)" fg:x="518" fg:w="1"/><text x="42.6395%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.3895%" y="405" width="0.0818%" height="15" fill="rgb(216,45,30)" fg:x="518" fg:w="1"/><text x="42.6395%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.3895%" y="389" width="0.0818%" height="15" fill="rgb(213,203,16)" fg:x="518" fg:w="1"/><text x="42.6395%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.3895%" y="373" width="0.0818%" height="15" fill="rgb(215,46,16)" fg:x="518" fg:w="1"/><text x="42.6395%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.3895%" y="357" width="0.0818%" height="15" fill="rgb(217,162,46)" fg:x="518" fg:w="1"/><text x="42.6395%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.3895%" y="341" width="0.0818%" height="15" fill="rgb(224,189,20)" fg:x="518" fg:w="1"/><text x="42.6395%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.3895%" y="325" width="0.0818%" height="15" fill="rgb(232,35,51)" fg:x="518" fg:w="1"/><text x="42.6395%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.3895%" y="309" width="0.0818%" height="15" fill="rgb(243,221,46)" fg:x="518" fg:w="1"/><text x="42.6395%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.3895%" y="293" width="0.0818%" height="15" fill="rgb(248,16,16)" fg:x="518" fg:w="1"/><text x="42.6395%" y="303.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (18 samples, 1.47%)</title><rect x="41.1620%" y="597" width="1.4730%" height="15" fill="rgb(220,168,13)" fg:x="503" fg:w="18"/><text x="41.4120%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (18 samples, 1.47%)</title><rect x="41.1620%" y="581" width="1.4730%" height="15" fill="rgb(243,102,39)" fg:x="503" fg:w="18"/><text x="41.4120%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="42.4714%" y="565" width="0.1637%" height="15" fill="rgb(245,82,32)" fg:x="519" fg:w="2"/><text x="42.7214%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="42.4714%" y="549" width="0.1637%" height="15" fill="rgb(230,164,19)" fg:x="519" fg:w="2"/><text x="42.7214%" y="559.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="42.4714%" y="533" width="0.1637%" height="15" fill="rgb(221,9,41)" fg:x="519" fg:w="2"/><text x="42.7214%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="42.4714%" y="517" width="0.1637%" height="15" fill="rgb(216,93,0)" fg:x="519" fg:w="2"/><text x="42.7214%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.4714%" y="501" width="0.1637%" height="15" fill="rgb(235,113,9)" fg:x="519" fg:w="2"/><text x="42.7214%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="42.4714%" y="485" width="0.1637%" height="15" fill="rgb(209,224,10)" fg:x="519" fg:w="2"/><text x="42.7214%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="42.7169%" y="549" width="0.0818%" height="15" fill="rgb(226,54,34)" fg:x="522" fg:w="1"/><text x="42.9669%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="42.7169%" y="533" width="0.0818%" height="15" fill="rgb(222,60,8)" fg:x="522" fg:w="1"/><text x="42.9669%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="42.7169%" y="565" width="0.1637%" height="15" fill="rgb(248,228,41)" fg:x="522" fg:w="2"/><text x="42.9669%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="42.7987%" y="549" width="0.0818%" height="15" fill="rgb(226,31,32)" fg:x="523" fg:w="1"/><text x="43.0487%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.7987%" y="533" width="0.0818%" height="15" fill="rgb(242,132,49)" fg:x="523" fg:w="1"/><text x="43.0487%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.7987%" y="517" width="0.0818%" height="15" fill="rgb(224,194,19)" fg:x="523" fg:w="1"/><text x="43.0487%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.7987%" y="501" width="0.0818%" height="15" fill="rgb(232,200,51)" fg:x="523" fg:w="1"/><text x="43.0487%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.7987%" y="485" width="0.0818%" height="15" fill="rgb(235,60,46)" fg:x="523" fg:w="1"/><text x="43.0487%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="42.7987%" y="469" width="0.0818%" height="15" fill="rgb(240,109,52)" fg:x="523" fg:w="1"/><text x="43.0487%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="42.7987%" y="453" width="0.0818%" height="15" fill="rgb(215,78,37)" fg:x="523" fg:w="1"/><text x="43.0487%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.7987%" y="437" width="0.0818%" height="15" fill="rgb(225,141,7)" fg:x="523" fg:w="1"/><text x="43.0487%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.7987%" y="421" width="0.0818%" height="15" fill="rgb(216,102,54)" fg:x="523" fg:w="1"/><text x="43.0487%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="42.7987%" y="405" width="0.0818%" height="15" fill="rgb(238,143,13)" fg:x="523" fg:w="1"/><text x="43.0487%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="42.7987%" y="389" width="0.0818%" height="15" fill="rgb(219,45,51)" fg:x="523" fg:w="1"/><text x="43.0487%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.7987%" y="373" width="0.0818%" height="15" fill="rgb(242,105,46)" fg:x="523" fg:w="1"/><text x="43.0487%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="42.8805%" y="565" width="0.0818%" height="15" fill="rgb(206,154,49)" fg:x="524" fg:w="1"/><text x="43.1305%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="42.8805%" y="549" width="0.0818%" height="15" fill="rgb(239,215,4)" fg:x="524" fg:w="1"/><text x="43.1305%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="42.8805%" y="533" width="0.0818%" height="15" fill="rgb(238,82,17)" fg:x="524" fg:w="1"/><text x="43.1305%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8805%" y="517" width="0.0818%" height="15" fill="rgb(242,49,30)" fg:x="524" fg:w="1"/><text x="43.1305%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8805%" y="501" width="0.0818%" height="15" fill="rgb(248,5,16)" fg:x="524" fg:w="1"/><text x="43.1305%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8805%" y="485" width="0.0818%" height="15" fill="rgb(237,138,32)" fg:x="524" fg:w="1"/><text x="43.1305%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8805%" y="469" width="0.0818%" height="15" fill="rgb(235,79,45)" fg:x="524" fg:w="1"/><text x="43.1305%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.8805%" y="453" width="0.0818%" height="15" fill="rgb(213,105,25)" fg:x="524" fg:w="1"/><text x="43.1305%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8805%" y="437" width="0.0818%" height="15" fill="rgb(251,131,7)" fg:x="524" fg:w="1"/><text x="43.1305%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8805%" y="421" width="0.0818%" height="15" fill="rgb(211,155,7)" fg:x="524" fg:w="1"/><text x="43.1305%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8805%" y="405" width="0.0818%" height="15" fill="rgb(243,70,15)" fg:x="524" fg:w="1"/><text x="43.1305%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8805%" y="389" width="0.0818%" height="15" fill="rgb(215,171,2)" fg:x="524" fg:w="1"/><text x="43.1305%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8805%" y="373" width="0.0818%" height="15" fill="rgb(244,121,35)" fg:x="524" fg:w="1"/><text x="43.1305%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.8805%" y="357" width="0.0818%" height="15" fill="rgb(249,147,17)" fg:x="524" fg:w="1"/><text x="43.1305%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.8805%" y="341" width="0.0818%" height="15" fill="rgb(241,193,52)" fg:x="524" fg:w="1"/><text x="43.1305%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1260%" y="485" width="0.0818%" height="15" fill="rgb(217,159,39)" fg:x="527" fg:w="1"/><text x="43.3760%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1260%" y="469" width="0.0818%" height="15" fill="rgb(248,110,0)" fg:x="527" fg:w="1"/><text x="43.3760%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1260%" y="453" width="0.0818%" height="15" fill="rgb(233,227,0)" fg:x="527" fg:w="1"/><text x="43.3760%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1260%" y="437" width="0.0818%" height="15" fill="rgb(252,55,2)" fg:x="527" fg:w="1"/><text x="43.3760%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1260%" y="421" width="0.0818%" height="15" fill="rgb(224,194,24)" fg:x="527" fg:w="1"/><text x="43.3760%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1260%" y="405" width="0.0818%" height="15" fill="rgb(247,5,33)" fg:x="527" fg:w="1"/><text x="43.3760%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1260%" y="389" width="0.0818%" height="15" fill="rgb(242,66,47)" fg:x="527" fg:w="1"/><text x="43.3760%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.1260%" y="373" width="0.0818%" height="15" fill="rgb(213,107,12)" fg:x="527" fg:w="1"/><text x="43.3760%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.1260%" y="357" width="0.0818%" height="15" fill="rgb(206,131,1)" fg:x="527" fg:w="1"/><text x="43.3760%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.1260%" y="341" width="0.0818%" height="15" fill="rgb(214,9,36)" fg:x="527" fg:w="1"/><text x="43.3760%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1260%" y="325" width="0.0818%" height="15" fill="rgb(251,215,18)" fg:x="527" fg:w="1"/><text x="43.3760%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1260%" y="309" width="0.0818%" height="15" fill="rgb(251,64,9)" fg:x="527" fg:w="1"/><text x="43.3760%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.1260%" y="293" width="0.0818%" height="15" fill="rgb(235,68,21)" fg:x="527" fg:w="1"/><text x="43.3760%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.1260%" y="277" width="0.0818%" height="15" fill="rgb(240,69,38)" fg:x="527" fg:w="1"/><text x="43.3760%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.1260%" y="261" width="0.0818%" height="15" fill="rgb(231,18,27)" fg:x="527" fg:w="1"/><text x="43.3760%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.1260%" y="245" width="0.0818%" height="15" fill="rgb(215,154,25)" fg:x="527" fg:w="1"/><text x="43.3760%" y="255.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="43.1260%" y="229" width="0.0818%" height="15" fill="rgb(224,33,46)" fg:x="527" fg:w="1"/><text x="43.3760%" y="239.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.1260%" y="213" width="0.0818%" height="15" fill="rgb(248,191,53)" fg:x="527" fg:w="1"/><text x="43.3760%" y="223.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="42.9624%" y="517" width="0.3273%" height="15" fill="rgb(231,3,37)" fg:x="525" fg:w="4"/><text x="43.2124%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="42.9624%" y="501" width="0.3273%" height="15" fill="rgb(209,152,2)" fg:x="525" fg:w="4"/><text x="43.2124%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.2079%" y="485" width="0.0818%" height="15" fill="rgb(212,208,43)" fg:x="528" fg:w="1"/><text x="43.4579%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.2079%" y="469" width="0.0818%" height="15" fill="rgb(208,60,49)" fg:x="528" fg:w="1"/><text x="43.4579%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.2079%" y="453" width="0.0818%" height="15" fill="rgb(245,135,6)" fg:x="528" fg:w="1"/><text x="43.4579%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.2079%" y="437" width="0.0818%" height="15" fill="rgb(243,86,23)" fg:x="528" fg:w="1"/><text x="43.4579%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="43.2897%" y="485" width="0.1637%" height="15" fill="rgb(223,7,20)" fg:x="529" fg:w="2"/><text x="43.5397%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="43.2897%" y="469" width="0.1637%" height="15" fill="rgb(212,182,17)" fg:x="529" fg:w="2"/><text x="43.5397%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.3715%" y="453" width="0.0818%" height="15" fill="rgb(237,94,50)" fg:x="530" fg:w="1"/><text x="43.6215%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.3715%" y="437" width="0.0818%" height="15" fill="rgb(232,185,44)" fg:x="530" fg:w="1"/><text x="43.6215%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="42.9624%" y="565" width="0.5728%" height="15" fill="rgb(205,50,36)" fg:x="525" fg:w="7"/><text x="43.2124%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.57%)</title><rect x="42.9624%" y="549" width="0.5728%" height="15" fill="rgb(252,32,32)" fg:x="525" fg:w="7"/><text x="43.2124%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.57%)</title><rect x="42.9624%" y="533" width="0.5728%" height="15" fill="rgb(241,123,33)" fg:x="525" fg:w="7"/><text x="43.2124%" y="543.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.25%)</title><rect x="43.2897%" y="517" width="0.2455%" height="15" fill="rgb(212,140,16)" fg:x="529" fg:w="3"/><text x="43.5397%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.25%)</title><rect x="43.2897%" y="501" width="0.2455%" height="15" fill="rgb(247,132,5)" fg:x="529" fg:w="3"/><text x="43.5397%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="43.4534%" y="485" width="0.0818%" height="15" fill="rgb(209,137,38)" fg:x="531" fg:w="1"/><text x="43.7034%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.4534%" y="469" width="0.0818%" height="15" fill="rgb(248,32,42)" fg:x="531" fg:w="1"/><text x="43.7034%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="43.4534%" y="453" width="0.0818%" height="15" fill="rgb(216,188,40)" fg:x="531" fg:w="1"/><text x="43.7034%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.4534%" y="437" width="0.0818%" height="15" fill="rgb(209,127,53)" fg:x="531" fg:w="1"/><text x="43.7034%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="43.4534%" y="421" width="0.0818%" height="15" fill="rgb(254,162,9)" fg:x="531" fg:w="1"/><text x="43.7034%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.98%)</title><rect x="42.6350%" y="581" width="0.9820%" height="15" fill="rgb(219,183,10)" fg:x="521" fg:w="12"/><text x="42.8850%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="43.5352%" y="565" width="0.0818%" height="15" fill="rgb(217,192,21)" fg:x="532" fg:w="1"/><text x="43.7852%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5352%" y="549" width="0.0818%" height="15" fill="rgb(251,89,27)" fg:x="532" fg:w="1"/><text x="43.7852%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5352%" y="533" width="0.0818%" height="15" fill="rgb(253,55,28)" fg:x="532" fg:w="1"/><text x="43.7852%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.5352%" y="517" width="0.0818%" height="15" fill="rgb(216,159,8)" fg:x="532" fg:w="1"/><text x="43.7852%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.5352%" y="501" width="0.0818%" height="15" fill="rgb(231,228,44)" fg:x="532" fg:w="1"/><text x="43.7852%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.5352%" y="485" width="0.0818%" height="15" fill="rgb(247,34,48)" fg:x="532" fg:w="1"/><text x="43.7852%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.5352%" y="469" width="0.0818%" height="15" fill="rgb(247,222,18)" fg:x="532" fg:w="1"/><text x="43.7852%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.5352%" y="453" width="0.0818%" height="15" fill="rgb(227,49,4)" fg:x="532" fg:w="1"/><text x="43.7852%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.5352%" y="437" width="0.0818%" height="15" fill="rgb(219,189,53)" fg:x="532" fg:w="1"/><text x="43.7852%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.5352%" y="421" width="0.0818%" height="15" fill="rgb(241,160,53)" fg:x="532" fg:w="1"/><text x="43.7852%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.5352%" y="405" width="0.0818%" height="15" fill="rgb(227,115,4)" fg:x="532" fg:w="1"/><text x="43.7852%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.5352%" y="389" width="0.0818%" height="15" fill="rgb(215,28,28)" fg:x="532" fg:w="1"/><text x="43.7852%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.5352%" y="373" width="0.0818%" height="15" fill="rgb(237,143,40)" fg:x="532" fg:w="1"/><text x="43.7852%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.6989%" y="517" width="0.0818%" height="15" fill="rgb(205,107,24)" fg:x="534" fg:w="1"/><text x="43.9489%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7807%" y="453" width="0.0818%" height="15" fill="rgb(209,112,35)" fg:x="535" fg:w="1"/><text x="44.0307%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7807%" y="437" width="0.0818%" height="15" fill="rgb(206,135,5)" fg:x="535" fg:w="1"/><text x="44.0307%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.7807%" y="421" width="0.0818%" height="15" fill="rgb(227,217,38)" fg:x="535" fg:w="1"/><text x="44.0307%" y="431.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.33%)</title><rect x="43.6170%" y="581" width="0.3273%" height="15" fill="rgb(205,0,41)" fg:x="533" fg:w="4"/><text x="43.8670%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.33%)</title><rect x="43.6170%" y="565" width="0.3273%" height="15" fill="rgb(220,20,40)" fg:x="533" fg:w="4"/><text x="43.8670%" y="575.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.33%)</title><rect x="43.6170%" y="549" width="0.3273%" height="15" fill="rgb(216,145,3)" fg:x="533" fg:w="4"/><text x="43.8670%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.33%)</title><rect x="43.6170%" y="533" width="0.3273%" height="15" fill="rgb(207,130,51)" fg:x="533" fg:w="4"/><text x="43.8670%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="43.7807%" y="517" width="0.1637%" height="15" fill="rgb(252,93,13)" fg:x="535" fg:w="2"/><text x="44.0307%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.7807%" y="501" width="0.1637%" height="15" fill="rgb(210,105,15)" fg:x="535" fg:w="2"/><text x="44.0307%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="43.7807%" y="485" width="0.1637%" height="15" fill="rgb(212,126,31)" fg:x="535" fg:w="2"/><text x="44.0307%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.7807%" y="469" width="0.1637%" height="15" fill="rgb(241,167,46)" fg:x="535" fg:w="2"/><text x="44.0307%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="43.8625%" y="453" width="0.0818%" height="15" fill="rgb(217,143,19)" fg:x="536" fg:w="1"/><text x="44.1125%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="43.8625%" y="437" width="0.0818%" height="15" fill="rgb(235,117,33)" fg:x="536" fg:w="1"/><text x="44.1125%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="43.8625%" y="421" width="0.0818%" height="15" fill="rgb(247,95,6)" fg:x="536" fg:w="1"/><text x="44.1125%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.9444%" y="533" width="0.0818%" height="15" fill="rgb(243,206,43)" fg:x="537" fg:w="1"/><text x="44.1944%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0262%" y="517" width="0.0818%" height="15" fill="rgb(229,65,54)" fg:x="538" fg:w="1"/><text x="44.2762%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="44.0262%" y="533" width="0.1637%" height="15" fill="rgb(247,137,34)" fg:x="538" fg:w="2"/><text x="44.2762%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="44.1080%" y="517" width="0.0818%" height="15" fill="rgb(245,174,44)" fg:x="539" fg:w="1"/><text x="44.3580%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.1080%" y="501" width="0.0818%" height="15" fill="rgb(223,64,15)" fg:x="539" fg:w="1"/><text x="44.3580%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.1080%" y="485" width="0.0818%" height="15" fill="rgb(243,153,36)" fg:x="539" fg:w="1"/><text x="44.3580%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1080%" y="469" width="0.0818%" height="15" fill="rgb(252,23,4)" fg:x="539" fg:w="1"/><text x="44.3580%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.1080%" y="453" width="0.0818%" height="15" fill="rgb(209,132,13)" fg:x="539" fg:w="1"/><text x="44.3580%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1080%" y="437" width="0.0818%" height="15" fill="rgb(209,196,21)" fg:x="539" fg:w="1"/><text x="44.3580%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.1080%" y="421" width="0.0818%" height="15" fill="rgb(252,197,1)" fg:x="539" fg:w="1"/><text x="44.3580%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1080%" y="405" width="0.0818%" height="15" fill="rgb(229,42,46)" fg:x="539" fg:w="1"/><text x="44.3580%" y="415.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (465 samples, 38.05%)</title><rect x="6.2193%" y="613" width="38.0524%" height="15" fill="rgb(219,85,8)" fg:x="76" fg:w="465"/><text x="6.4693%" y="623.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (20 samples, 1.64%)</title><rect x="42.6350%" y="597" width="1.6367%" height="15" fill="rgb(223,185,14)" fg:x="521" fg:w="20"/><text x="42.8850%" y="607.50"></text></g><g><title>plugins_core::build::Build::new_world (4 samples, 0.33%)</title><rect x="43.9444%" y="581" width="0.3273%" height="15" fill="rgb(217,196,18)" fg:x="537" fg:w="4"/><text x="44.1944%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new (4 samples, 0.33%)</title><rect x="43.9444%" y="565" width="0.3273%" height="15" fill="rgb(220,122,37)" fg:x="537" fg:w="4"/><text x="44.1944%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="43.9444%" y="549" width="0.3273%" height="15" fill="rgb(236,135,33)" fg:x="537" fg:w="4"/><text x="44.1944%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.1899%" y="533" width="0.0818%" height="15" fill="rgb(222,86,54)" fg:x="540" fg:w="1"/><text x="44.4399%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.2717%" y="613" width="0.1637%" height="15" fill="rgb(227,42,22)" fg:x="541" fg:w="2"/><text x="44.5217%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.25%)</title><rect x="44.4354%" y="597" width="0.2455%" height="15" fill="rgb(243,101,27)" fg:x="543" fg:w="3"/><text x="44.6854%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.5172%" y="581" width="0.1637%" height="15" fill="rgb(229,100,8)" fg:x="544" fg:w="2"/><text x="44.7672%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.5990%" y="565" width="0.0818%" height="15" fill="rgb(252,68,10)" fg:x="545" fg:w="1"/><text x="44.8490%" y="575.50"></text></g><g><title>&lt;kernel::session::SetSession as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="44.6809%" y="597" width="0.0818%" height="15" fill="rgb(219,19,31)" fg:x="546" fg:w="1"/><text x="44.9309%" y="607.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="44.7627%" y="597" width="0.0818%" height="15" fill="rgb(246,150,44)" fg:x="547" fg:w="1"/><text x="45.0127%" y="607.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (2 samples, 0.16%)</title><rect x="44.9264%" y="501" width="0.1637%" height="15" fill="rgb(211,14,39)" fg:x="549" fg:w="2"/><text x="45.1764%" y="511.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.16%)</title><rect x="44.9264%" y="485" width="0.1637%" height="15" fill="rgb(221,98,29)" fg:x="549" fg:w="2"/><text x="45.1764%" y="495.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.16%)</title><rect x="44.9264%" y="469" width="0.1637%" height="15" fill="rgb(221,70,26)" fg:x="549" fg:w="2"/><text x="45.1764%" y="479.50"></text></g><g><title>engine::session::should_force_rollback (4 samples, 0.33%)</title><rect x="44.8445%" y="597" width="0.3273%" height="15" fill="rgb(236,146,30)" fg:x="548" fg:w="4"/><text x="45.0945%" y="607.50"></text></g><g><title>std::env::_var (3 samples, 0.25%)</title><rect x="44.9264%" y="581" width="0.2455%" height="15" fill="rgb(226,94,34)" fg:x="549" fg:w="3"/><text x="45.1764%" y="591.50"></text></g><g><title>std::env::var_os (3 samples, 0.25%)</title><rect x="44.9264%" y="565" width="0.2455%" height="15" fill="rgb(248,132,21)" fg:x="549" fg:w="3"/><text x="45.1764%" y="575.50"></text></g><g><title>std::env::_var_os (3 samples, 0.25%)</title><rect x="44.9264%" y="549" width="0.2455%" height="15" fill="rgb(245,43,50)" fg:x="549" fg:w="3"/><text x="45.1764%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv (3 samples, 0.25%)</title><rect x="44.9264%" y="533" width="0.2455%" height="15" fill="rgb(245,132,31)" fg:x="549" fg:w="3"/><text x="45.1764%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.25%)</title><rect x="44.9264%" y="517" width="0.2455%" height="15" fill="rgb(230,171,4)" fg:x="549" fg:w="3"/><text x="45.1764%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="45.0900%" y="501" width="0.0818%" height="15" fill="rgb(235,6,45)" fg:x="551" fg:w="1"/><text x="45.3400%" y="511.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="45.0900%" y="485" width="0.0818%" height="15" fill="rgb(220,80,28)" fg:x="551" fg:w="1"/><text x="45.3400%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="45.1718%" y="565" width="0.1637%" height="15" fill="rgb(242,171,9)" fg:x="552" fg:w="2"/><text x="45.4218%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::array::iter::IntoIter&lt;alloc::rc::Rc&lt;dyn kernel::plugins::mw::Middleware&gt;,1_usize&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="45.2537%" y="549" width="0.0818%" height="15" fill="rgb(214,135,29)" fg:x="553" fg:w="1"/><text x="45.5037%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.3355%" y="437" width="0.0818%" height="15" fill="rgb(221,229,16)" fg:x="554" fg:w="1"/><text x="45.5855%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.3355%" y="421" width="0.0818%" height="15" fill="rgb(253,59,46)" fg:x="554" fg:w="1"/><text x="45.5855%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.3355%" y="405" width="0.0818%" height="15" fill="rgb(250,147,20)" fg:x="554" fg:w="1"/><text x="45.5855%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.3355%" y="389" width="0.0818%" height="15" fill="rgb(236,64,48)" fg:x="554" fg:w="1"/><text x="45.5855%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.3355%" y="373" width="0.0818%" height="15" fill="rgb(240,37,42)" fg:x="554" fg:w="1"/><text x="45.5855%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.3355%" y="357" width="0.0818%" height="15" fill="rgb(220,41,50)" fg:x="554" fg:w="1"/><text x="45.5855%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3355%" y="341" width="0.0818%" height="15" fill="rgb(216,51,14)" fg:x="554" fg:w="1"/><text x="45.5855%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="45.3355%" y="565" width="0.1637%" height="15" fill="rgb(215,83,10)" fg:x="554" fg:w="2"/><text x="45.5855%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="45.3355%" y="549" width="0.1637%" height="15" fill="rgb(206,144,17)" fg:x="554" fg:w="2"/><text x="45.5855%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="45.3355%" y="533" width="0.1637%" height="15" fill="rgb(219,196,37)" fg:x="554" fg:w="2"/><text x="45.5855%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.3355%" y="517" width="0.1637%" height="15" fill="rgb(226,135,26)" fg:x="554" fg:w="2"/><text x="45.5855%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.3355%" y="501" width="0.1637%" height="15" fill="rgb(237,195,40)" fg:x="554" fg:w="2"/><text x="45.5855%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="45.3355%" y="485" width="0.1637%" height="15" fill="rgb(228,182,42)" fg:x="554" fg:w="2"/><text x="45.5855%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="45.3355%" y="469" width="0.1637%" height="15" fill="rgb(224,135,50)" fg:x="554" fg:w="2"/><text x="45.5855%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="45.3355%" y="453" width="0.1637%" height="15" fill="rgb(236,215,34)" fg:x="554" fg:w="2"/><text x="45.5855%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="45.4173%" y="437" width="0.0818%" height="15" fill="rgb(244,213,27)" fg:x="555" fg:w="1"/><text x="45.6673%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.4173%" y="421" width="0.0818%" height="15" fill="rgb(233,37,53)" fg:x="555" fg:w="1"/><text x="45.6673%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="45.4992%" y="549" width="0.0818%" height="15" fill="rgb(222,132,14)" fg:x="556" fg:w="1"/><text x="45.7492%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.4992%" y="533" width="0.0818%" height="15" fill="rgb(219,202,29)" fg:x="556" fg:w="1"/><text x="45.7492%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="45.4992%" y="517" width="0.0818%" height="15" fill="rgb(226,157,39)" fg:x="556" fg:w="1"/><text x="45.7492%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.8265%" y="533" width="0.0818%" height="15" fill="rgb(235,213,2)" fg:x="560" fg:w="1"/><text x="46.0765%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.8265%" y="517" width="0.0818%" height="15" fill="rgb(250,121,2)" fg:x="560" fg:w="1"/><text x="46.0765%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.8265%" y="501" width="0.0818%" height="15" fill="rgb(206,192,33)" fg:x="560" fg:w="1"/><text x="46.0765%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.8265%" y="485" width="0.0818%" height="15" fill="rgb(240,161,6)" fg:x="560" fg:w="1"/><text x="46.0765%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.8265%" y="469" width="0.0818%" height="15" fill="rgb(246,53,30)" fg:x="560" fg:w="1"/><text x="46.0765%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="45.8265%" y="453" width="0.0818%" height="15" fill="rgb(219,123,43)" fg:x="560" fg:w="1"/><text x="46.0765%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.8265%" y="437" width="0.0818%" height="15" fill="rgb(236,53,49)" fg:x="560" fg:w="1"/><text x="46.0765%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="45.9083%" y="469" width="0.0818%" height="15" fill="rgb(241,156,1)" fg:x="561" fg:w="1"/><text x="46.1583%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="45.9083%" y="533" width="0.1637%" height="15" fill="rgb(209,73,26)" fg:x="561" fg:w="2"/><text x="46.1583%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="45.9083%" y="517" width="0.1637%" height="15" fill="rgb(206,114,3)" fg:x="561" fg:w="2"/><text x="46.1583%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="45.9083%" y="501" width="0.1637%" height="15" fill="rgb(230,214,9)" fg:x="561" fg:w="2"/><text x="46.1583%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="45.9083%" y="485" width="0.1637%" height="15" fill="rgb(240,184,46)" fg:x="561" fg:w="2"/><text x="46.1583%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.9902%" y="469" width="0.0818%" height="15" fill="rgb(242,169,54)" fg:x="562" fg:w="1"/><text x="46.2402%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.0720%" y="517" width="0.0818%" height="15" fill="rgb(207,168,50)" fg:x="563" fg:w="1"/><text x="46.3220%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="46.3175%" y="501" width="0.0818%" height="15" fill="rgb(240,114,2)" fg:x="566" fg:w="1"/><text x="46.5675%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.3175%" y="485" width="0.0818%" height="15" fill="rgb(211,17,40)" fg:x="566" fg:w="1"/><text x="46.5675%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.3175%" y="469" width="0.0818%" height="15" fill="rgb(235,97,36)" fg:x="566" fg:w="1"/><text x="46.5675%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.3175%" y="453" width="0.0818%" height="15" fill="rgb(208,164,11)" fg:x="566" fg:w="1"/><text x="46.5675%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.49%)</title><rect x="46.1538%" y="517" width="0.4910%" height="15" fill="rgb(242,11,17)" fg:x="564" fg:w="6"/><text x="46.4038%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="46.3993%" y="501" width="0.2455%" height="15" fill="rgb(215,86,33)" fg:x="567" fg:w="3"/><text x="46.6493%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.5630%" y="485" width="0.0818%" height="15" fill="rgb(245,185,28)" fg:x="569" fg:w="1"/><text x="46.8130%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.5630%" y="469" width="0.0818%" height="15" fill="rgb(231,89,42)" fg:x="569" fg:w="1"/><text x="46.8130%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="46.8085%" y="501" width="0.1637%" height="15" fill="rgb(210,18,47)" fg:x="572" fg:w="2"/><text x="47.0585%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="46.8085%" y="485" width="0.1637%" height="15" fill="rgb(214,84,8)" fg:x="572" fg:w="2"/><text x="47.0585%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="46.8085%" y="469" width="0.1637%" height="15" fill="rgb(214,222,23)" fg:x="572" fg:w="2"/><text x="47.0585%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="46.8085%" y="453" width="0.1637%" height="15" fill="rgb(213,104,21)" fg:x="572" fg:w="2"/><text x="47.0585%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="46.8085%" y="437" width="0.1637%" height="15" fill="rgb(238,138,6)" fg:x="572" fg:w="2"/><text x="47.0585%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="46.8085%" y="421" width="0.1637%" height="15" fill="rgb(205,167,50)" fg:x="572" fg:w="2"/><text x="47.0585%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="46.8085%" y="405" width="0.1637%" height="15" fill="rgb(230,105,27)" fg:x="572" fg:w="2"/><text x="47.0585%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="47.1358%" y="453" width="0.0818%" height="15" fill="rgb(222,97,48)" fg:x="576" fg:w="1"/><text x="47.3858%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.1358%" y="437" width="0.0818%" height="15" fill="rgb(222,197,14)" fg:x="576" fg:w="1"/><text x="47.3858%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.1358%" y="421" width="0.0818%" height="15" fill="rgb(210,105,47)" fg:x="576" fg:w="1"/><text x="47.3858%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.1358%" y="405" width="0.0818%" height="15" fill="rgb(238,158,19)" fg:x="576" fg:w="1"/><text x="47.3858%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.1358%" y="389" width="0.0818%" height="15" fill="rgb(226,176,23)" fg:x="576" fg:w="1"/><text x="47.3858%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.1358%" y="373" width="0.0818%" height="15" fill="rgb(208,79,31)" fg:x="576" fg:w="1"/><text x="47.3858%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="47.1358%" y="357" width="0.0818%" height="15" fill="rgb(221,154,21)" fg:x="576" fg:w="1"/><text x="47.3858%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="47.2177%" y="453" width="0.0818%" height="15" fill="rgb(213,61,41)" fg:x="577" fg:w="1"/><text x="47.4677%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="47.2177%" y="437" width="0.0818%" height="15" fill="rgb(215,28,33)" fg:x="577" fg:w="1"/><text x="47.4677%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="47.0540%" y="485" width="0.4092%" height="15" fill="rgb(231,139,26)" fg:x="575" fg:w="5"/><text x="47.3040%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="47.0540%" y="469" width="0.4092%" height="15" fill="rgb(232,159,16)" fg:x="575" fg:w="5"/><text x="47.3040%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.2995%" y="453" width="0.1637%" height="15" fill="rgb(233,80,10)" fg:x="578" fg:w="2"/><text x="47.5495%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.2995%" y="437" width="0.1637%" height="15" fill="rgb(208,147,29)" fg:x="578" fg:w="2"/><text x="47.5495%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.2995%" y="421" width="0.1637%" height="15" fill="rgb(213,10,12)" fg:x="578" fg:w="2"/><text x="47.5495%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="47.4632%" y="485" width="0.4092%" height="15" fill="rgb(231,218,13)" fg:x="580" fg:w="5"/><text x="47.7132%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="47.5450%" y="469" width="0.3273%" height="15" fill="rgb(244,199,44)" fg:x="581" fg:w="4"/><text x="47.7950%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="47.6268%" y="453" width="0.2455%" height="15" fill="rgb(240,144,53)" fg:x="582" fg:w="3"/><text x="47.8768%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.7087%" y="437" width="0.1637%" height="15" fill="rgb(223,57,28)" fg:x="583" fg:w="2"/><text x="47.9587%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="47.9542%" y="469" width="0.2455%" height="15" fill="rgb(213,134,38)" fg:x="586" fg:w="3"/><text x="48.2042%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.0360%" y="453" width="0.1637%" height="15" fill="rgb(251,182,42)" fg:x="587" fg:w="2"/><text x="48.2860%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.1178%" y="437" width="0.0818%" height="15" fill="rgb(229,93,13)" fg:x="588" fg:w="1"/><text x="48.3678%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.1178%" y="421" width="0.0818%" height="15" fill="rgb(234,171,3)" fg:x="588" fg:w="1"/><text x="48.3678%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="48.1997%" y="453" width="0.2455%" height="15" fill="rgb(241,105,32)" fg:x="589" fg:w="3"/><text x="48.4497%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.2815%" y="437" width="0.1637%" height="15" fill="rgb(221,66,3)" fg:x="590" fg:w="2"/><text x="48.5315%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.3633%" y="421" width="0.0818%" height="15" fill="rgb(248,155,29)" fg:x="591" fg:w="1"/><text x="48.6133%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.3633%" y="405" width="0.0818%" height="15" fill="rgb(231,31,5)" fg:x="591" fg:w="1"/><text x="48.6133%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="48.4452%" y="437" width="0.0818%" height="15" fill="rgb(213,188,31)" fg:x="592" fg:w="1"/><text x="48.6952%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="48.4452%" y="421" width="0.0818%" height="15" fill="rgb(212,104,33)" fg:x="592" fg:w="1"/><text x="48.6952%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.4452%" y="405" width="0.0818%" height="15" fill="rgb(254,77,51)" fg:x="592" fg:w="1"/><text x="48.6952%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.4452%" y="389" width="0.0818%" height="15" fill="rgb(234,39,26)" fg:x="592" fg:w="1"/><text x="48.6952%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.5270%" y="421" width="0.0818%" height="15" fill="rgb(208,88,36)" fg:x="593" fg:w="1"/><text x="48.7770%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="48.6088%" y="421" width="0.2455%" height="15" fill="rgb(243,222,10)" fg:x="594" fg:w="3"/><text x="48.8588%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.6907%" y="405" width="0.1637%" height="15" fill="rgb(218,133,52)" fg:x="595" fg:w="2"/><text x="48.9407%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="48.6907%" y="389" width="0.1637%" height="15" fill="rgb(222,25,26)" fg:x="595" fg:w="2"/><text x="48.9407%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="48.6907%" y="373" width="0.1637%" height="15" fill="rgb(243,174,24)" fg:x="595" fg:w="2"/><text x="48.9407%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.7725%" y="357" width="0.0818%" height="15" fill="rgb(233,188,52)" fg:x="596" fg:w="1"/><text x="49.0225%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.7725%" y="341" width="0.0818%" height="15" fill="rgb(208,89,14)" fg:x="596" fg:w="1"/><text x="49.0225%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="48.7725%" y="325" width="0.0818%" height="15" fill="rgb(205,204,21)" fg:x="596" fg:w="1"/><text x="49.0225%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="48.4452%" y="453" width="0.4910%" height="15" fill="rgb(246,39,28)" fg:x="592" fg:w="6"/><text x="48.6952%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="48.5270%" y="437" width="0.4092%" height="15" fill="rgb(235,71,19)" fg:x="593" fg:w="5"/><text x="48.7770%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="48.8543%" y="421" width="0.0818%" height="15" fill="rgb(211,62,39)" fg:x="597" fg:w="1"/><text x="49.1043%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.82%)</title><rect x="48.1997%" y="469" width="0.8183%" height="15" fill="rgb(246,118,20)" fg:x="589" fg:w="10"/><text x="48.4497%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="48.9362%" y="453" width="0.0818%" height="15" fill="rgb(230,82,12)" fg:x="598" fg:w="1"/><text x="49.1862%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.13%)</title><rect x="46.9722%" y="501" width="2.1277%" height="15" fill="rgb(205,212,34)" fg:x="574" fg:w="26"/><text x="47.2222%" y="511.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.23%)</title><rect x="47.8723%" y="485" width="1.2275%" height="15" fill="rgb(239,90,1)" fg:x="585" fg:w="15"/><text x="48.1223%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.0180%" y="469" width="0.0818%" height="15" fill="rgb(225,198,50)" fg:x="599" fg:w="1"/><text x="49.2680%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.0180%" y="453" width="0.0818%" height="15" fill="rgb(227,208,48)" fg:x="599" fg:w="1"/><text x="49.2680%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.0180%" y="437" width="0.0818%" height="15" fill="rgb(238,134,41)" fg:x="599" fg:w="1"/><text x="49.2680%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (40 samples, 3.27%)</title><rect x="46.0720%" y="533" width="3.2733%" height="15" fill="rgb(241,58,39)" fg:x="563" fg:w="40"/><text x="46.3220%" y="543.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.70%)</title><rect x="46.6448%" y="517" width="2.7005%" height="15" fill="rgb(214,126,4)" fg:x="570" fg:w="33"/><text x="46.8948%" y="527.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="49.0998%" y="501" width="0.2455%" height="15" fill="rgb(235,149,4)" fg:x="600" fg:w="3"/><text x="49.3498%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="49.1817%" y="485" width="0.1637%" height="15" fill="rgb(236,59,29)" fg:x="601" fg:w="2"/><text x="49.4317%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="49.1817%" y="469" width="0.1637%" height="15" fill="rgb(246,11,33)" fg:x="601" fg:w="2"/><text x="49.4317%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.3453%" y="501" width="0.0818%" height="15" fill="rgb(232,180,35)" fg:x="603" fg:w="1"/><text x="49.5953%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="49.5090%" y="485" width="0.1637%" height="15" fill="rgb(220,35,37)" fg:x="605" fg:w="2"/><text x="49.7590%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="49.6727%" y="469" width="0.1637%" height="15" fill="rgb(238,107,48)" fg:x="607" fg:w="2"/><text x="49.9227%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.8363%" y="453" width="0.0818%" height="15" fill="rgb(205,65,21)" fg:x="609" fg:w="1"/><text x="50.0863%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="49.9182%" y="453" width="0.0818%" height="15" fill="rgb(246,138,48)" fg:x="610" fg:w="1"/><text x="50.1682%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="49.9182%" y="437" width="0.0818%" height="15" fill="rgb(209,220,47)" fg:x="610" fg:w="1"/><text x="50.1682%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.9182%" y="421" width="0.0818%" height="15" fill="rgb(222,162,49)" fg:x="610" fg:w="1"/><text x="50.1682%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.0000%" y="437" width="0.0818%" height="15" fill="rgb(243,123,11)" fg:x="611" fg:w="1"/><text x="50.2500%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.0000%" y="421" width="0.0818%" height="15" fill="rgb(221,229,41)" fg:x="611" fg:w="1"/><text x="50.2500%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.1637%" y="421" width="0.1637%" height="15" fill="rgb(216,68,4)" fg:x="613" fg:w="2"/><text x="50.4137%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.3273%" y="421" width="0.0818%" height="15" fill="rgb(207,88,35)" fg:x="615" fg:w="1"/><text x="50.5773%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.3273%" y="405" width="0.0818%" height="15" fill="rgb(252,2,5)" fg:x="615" fg:w="1"/><text x="50.5773%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.4092%" y="405" width="0.0818%" height="15" fill="rgb(209,173,7)" fg:x="616" fg:w="1"/><text x="50.6592%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.23%)</title><rect x="49.3453%" y="533" width="1.2275%" height="15" fill="rgb(210,198,52)" fg:x="603" fg:w="15"/><text x="49.5953%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.23%)</title><rect x="49.3453%" y="517" width="1.2275%" height="15" fill="rgb(228,152,32)" fg:x="603" fg:w="15"/><text x="49.5953%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.15%)</title><rect x="49.4272%" y="501" width="1.1457%" height="15" fill="rgb(249,98,29)" fg:x="604" fg:w="14"/><text x="49.6772%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="49.6727%" y="485" width="0.9002%" height="15" fill="rgb(205,148,48)" fg:x="607" fg:w="11"/><text x="49.9227%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.74%)</title><rect x="49.8363%" y="469" width="0.7365%" height="15" fill="rgb(236,69,34)" fg:x="609" fg:w="9"/><text x="50.0863%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="50.0000%" y="453" width="0.5728%" height="15" fill="rgb(220,151,41)" fg:x="611" fg:w="7"/><text x="50.2500%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="50.0818%" y="437" width="0.4910%" height="15" fill="rgb(254,106,24)" fg:x="612" fg:w="6"/><text x="50.3318%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="50.4092%" y="421" width="0.1637%" height="15" fill="rgb(210,37,48)" fg:x="616" fg:w="2"/><text x="50.6592%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.4910%" y="405" width="0.0818%" height="15" fill="rgb(254,131,5)" fg:x="617" fg:w="1"/><text x="50.7410%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.4910%" y="389" width="0.0818%" height="15" fill="rgb(216,55,41)" fg:x="617" fg:w="1"/><text x="50.7410%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.7365%" y="469" width="0.0818%" height="15" fill="rgb(250,35,31)" fg:x="620" fg:w="1"/><text x="50.9865%" y="479.50"></text></g><g><title>__libc_free (4 samples, 0.33%)</title><rect x="50.9002%" y="453" width="0.3273%" height="15" fill="rgb(207,124,33)" fg:x="622" fg:w="4"/><text x="51.1502%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="51.2275%" y="453" width="0.1637%" height="15" fill="rgb(249,175,17)" fg:x="626" fg:w="2"/><text x="51.4775%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.3093%" y="437" width="0.0818%" height="15" fill="rgb(224,175,39)" fg:x="627" fg:w="1"/><text x="51.5593%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.4730%" y="437" width="0.0818%" height="15" fill="rgb(208,67,49)" fg:x="629" fg:w="1"/><text x="51.7230%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.5548%" y="437" width="0.0818%" height="15" fill="rgb(222,188,41)" fg:x="630" fg:w="1"/><text x="51.8048%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.5548%" y="421" width="0.0818%" height="15" fill="rgb(243,213,30)" fg:x="630" fg:w="1"/><text x="51.8048%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.6367%" y="421" width="0.0818%" height="15" fill="rgb(253,100,45)" fg:x="631" fg:w="1"/><text x="51.8867%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5 samples, 0.41%)</title><rect x="51.7185%" y="421" width="0.4092%" height="15" fill="rgb(226,24,44)" fg:x="632" fg:w="5"/><text x="51.9685%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.41%)</title><rect x="51.7185%" y="405" width="0.4092%" height="15" fill="rgb(215,41,24)" fg:x="632" fg:w="5"/><text x="51.9685%" y="415.50"></text></g><g><title>__libc_free (5 samples, 0.41%)</title><rect x="51.7185%" y="389" width="0.4092%" height="15" fill="rgb(254,53,33)" fg:x="632" fg:w="5"/><text x="51.9685%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2095%" y="389" width="0.0818%" height="15" fill="rgb(242,103,10)" fg:x="638" fg:w="1"/><text x="52.4595%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="52.2913%" y="373" width="0.1637%" height="15" fill="rgb(246,29,21)" fg:x="639" fg:w="2"/><text x="52.5413%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 1.88%)</title><rect x="50.6547%" y="501" width="1.8822%" height="15" fill="rgb(251,154,1)" fg:x="619" fg:w="23"/><text x="50.9047%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (23 samples, 1.88%)</title><rect x="50.6547%" y="485" width="1.8822%" height="15" fill="rgb(254,212,26)" fg:x="619" fg:w="23"/><text x="50.9047%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.72%)</title><rect x="50.8183%" y="469" width="1.7185%" height="15" fill="rgb(251,187,46)" fg:x="621" fg:w="21"/><text x="51.0683%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.15%)</title><rect x="51.3912%" y="453" width="1.1457%" height="15" fill="rgb(224,208,14)" fg:x="628" fg:w="14"/><text x="51.6412%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="51.6367%" y="437" width="0.9002%" height="15" fill="rgb(222,176,26)" fg:x="631" fg:w="11"/><text x="51.8867%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="52.1277%" y="421" width="0.4092%" height="15" fill="rgb(241,219,52)" fg:x="637" fg:w="5"/><text x="52.3777%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="52.2095%" y="405" width="0.3273%" height="15" fill="rgb(252,198,21)" fg:x="638" fg:w="4"/><text x="52.4595%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="52.2913%" y="389" width="0.2455%" height="15" fill="rgb(244,196,23)" fg:x="639" fg:w="3"/><text x="52.5413%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.4550%" y="373" width="0.0818%" height="15" fill="rgb(239,121,44)" fg:x="641" fg:w="1"/><text x="52.7050%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="52.4550%" y="357" width="0.0818%" height="15" fill="rgb(249,203,23)" fg:x="641" fg:w="1"/><text x="52.7050%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.41%)</title><rect x="52.6187%" y="485" width="0.4092%" height="15" fill="rgb(238,219,10)" fg:x="643" fg:w="5"/><text x="52.8687%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="52.7005%" y="469" width="0.3273%" height="15" fill="rgb(241,35,46)" fg:x="644" fg:w="4"/><text x="52.9505%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.25%)</title><rect x="52.7823%" y="453" width="0.2455%" height="15" fill="rgb(218,28,6)" fg:x="645" fg:w="3"/><text x="53.0323%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="52.8642%" y="437" width="0.1637%" height="15" fill="rgb(233,151,50)" fg:x="646" fg:w="2"/><text x="53.1142%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="53.0278%" y="485" width="0.0818%" height="15" fill="rgb(208,57,8)" fg:x="648" fg:w="1"/><text x="53.2778%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.0278%" y="469" width="0.0818%" height="15" fill="rgb(253,99,10)" fg:x="648" fg:w="1"/><text x="53.2778%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.0278%" y="453" width="0.0818%" height="15" fill="rgb(237,196,49)" fg:x="648" fg:w="1"/><text x="53.2778%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (32 samples, 2.62%)</title><rect x="50.5728%" y="517" width="2.6187%" height="15" fill="rgb(209,51,3)" fg:x="618" fg:w="32"/><text x="50.8228%" y="527.50">&lt;k..</text></g><g><title>treediff::diff::diff (8 samples, 0.65%)</title><rect x="52.5368%" y="501" width="0.6547%" height="15" fill="rgb(238,129,10)" fg:x="642" fg:w="8"/><text x="52.7868%" y="511.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="53.1097%" y="485" width="0.0818%" height="15" fill="rgb(246,201,16)" fg:x="649" fg:w="1"/><text x="53.3597%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.3552%" y="485" width="0.1637%" height="15" fill="rgb(250,160,20)" fg:x="652" fg:w="2"/><text x="53.6052%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="53.5188%" y="485" width="0.3273%" height="15" fill="rgb(251,107,25)" fg:x="654" fg:w="4"/><text x="53.7688%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="53.6007%" y="469" width="0.2455%" height="15" fill="rgb(212,103,39)" fg:x="655" fg:w="3"/><text x="53.8507%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="53.6825%" y="453" width="0.1637%" height="15" fill="rgb(207,9,29)" fg:x="656" fg:w="2"/><text x="53.9325%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="53.8462%" y="485" width="0.0818%" height="15" fill="rgb(227,84,3)" fg:x="658" fg:w="1"/><text x="54.0962%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="53.8462%" y="469" width="0.0818%" height="15" fill="rgb(242,194,7)" fg:x="658" fg:w="1"/><text x="54.0962%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="53.9280%" y="485" width="0.1637%" height="15" fill="rgb(230,40,4)" fg:x="659" fg:w="2"/><text x="54.1780%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="53.9280%" y="469" width="0.1637%" height="15" fill="rgb(243,229,33)" fg:x="659" fg:w="2"/><text x="54.1780%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.0098%" y="453" width="0.0818%" height="15" fill="rgb(240,65,24)" fg:x="660" fg:w="1"/><text x="54.2598%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.4190%" y="453" width="0.0818%" height="15" fill="rgb(212,28,20)" fg:x="665" fg:w="1"/><text x="54.6690%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="54.5008%" y="437" width="0.2455%" height="15" fill="rgb(209,72,3)" fg:x="666" fg:w="3"/><text x="54.7508%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="54.5008%" y="421" width="0.2455%" height="15" fill="rgb(238,170,36)" fg:x="666" fg:w="3"/><text x="54.7508%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.6645%" y="405" width="0.0818%" height="15" fill="rgb(236,19,38)" fg:x="668" fg:w="1"/><text x="54.9145%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.9100%" y="421" width="0.0818%" height="15" fill="rgb(230,67,43)" fg:x="671" fg:w="1"/><text x="55.1600%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="54.9918%" y="421" width="0.0818%" height="15" fill="rgb(227,14,36)" fg:x="672" fg:w="1"/><text x="55.2418%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.0736%" y="405" width="0.1637%" height="15" fill="rgb(247,171,49)" fg:x="673" fg:w="2"/><text x="55.3236%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.1555%" y="389" width="0.0818%" height="15" fill="rgb(235,164,51)" fg:x="674" fg:w="1"/><text x="55.4055%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.1555%" y="373" width="0.0818%" height="15" fill="rgb(246,107,20)" fg:x="674" fg:w="1"/><text x="55.4055%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="55.2373%" y="389" width="0.0818%" height="15" fill="rgb(226,88,18)" fg:x="675" fg:w="1"/><text x="55.4873%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="55.3191%" y="389" width="0.0818%" height="15" fill="rgb(235,136,9)" fg:x="676" fg:w="1"/><text x="55.5691%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.4010%" y="373" width="0.0818%" height="15" fill="rgb(209,3,34)" fg:x="677" fg:w="1"/><text x="55.6510%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="55.4828%" y="341" width="0.3273%" height="15" fill="rgb(213,38,19)" fg:x="678" fg:w="4"/><text x="55.7328%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="55.4828%" y="325" width="0.3273%" height="15" fill="rgb(254,24,24)" fg:x="678" fg:w="4"/><text x="55.7328%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.7283%" y="309" width="0.0818%" height="15" fill="rgb(219,122,42)" fg:x="681" fg:w="1"/><text x="55.9783%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="55.8920%" y="309" width="0.2455%" height="15" fill="rgb(205,128,31)" fg:x="683" fg:w="3"/><text x="56.1420%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="55.8920%" y="293" width="0.2455%" height="15" fill="rgb(212,142,0)" fg:x="683" fg:w="3"/><text x="56.1420%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.9738%" y="277" width="0.1637%" height="15" fill="rgb(211,25,35)" fg:x="684" fg:w="2"/><text x="56.2238%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.74%)</title><rect x="55.4828%" y="357" width="0.7365%" height="15" fill="rgb(220,150,53)" fg:x="678" fg:w="9"/><text x="55.7328%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="55.8101%" y="341" width="0.4092%" height="15" fill="rgb(220,30,24)" fg:x="682" fg:w="5"/><text x="56.0601%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="55.8920%" y="325" width="0.3273%" height="15" fill="rgb(218,86,23)" fg:x="683" fg:w="4"/><text x="56.1420%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="56.1375%" y="309" width="0.0818%" height="15" fill="rgb(206,62,27)" fg:x="686" fg:w="1"/><text x="56.3875%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="56.1375%" y="293" width="0.0818%" height="15" fill="rgb(249,174,0)" fg:x="686" fg:w="1"/><text x="56.3875%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.23%)</title><rect x="55.0736%" y="421" width="1.2275%" height="15" fill="rgb(246,67,27)" fg:x="673" fg:w="15"/><text x="55.3236%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.06%)</title><rect x="55.2373%" y="405" width="1.0638%" height="15" fill="rgb(250,195,30)" fg:x="675" fg:w="13"/><text x="55.4873%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.90%)</title><rect x="55.4010%" y="389" width="0.9002%" height="15" fill="rgb(251,171,50)" fg:x="677" fg:w="11"/><text x="55.6510%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.82%)</title><rect x="55.4828%" y="373" width="0.8183%" height="15" fill="rgb(236,196,10)" fg:x="678" fg:w="10"/><text x="55.7328%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.2193%" y="357" width="0.0818%" height="15" fill="rgb(249,228,52)" fg:x="687" fg:w="1"/><text x="56.4693%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.96%)</title><rect x="54.5008%" y="453" width="1.9640%" height="15" fill="rgb(219,60,51)" fg:x="666" fg:w="24"/><text x="54.7508%" y="463.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (21 samples, 1.72%)</title><rect x="54.7463%" y="437" width="1.7185%" height="15" fill="rgb(240,198,24)" fg:x="669" fg:w="21"/><text x="54.9963%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.3011%" y="421" width="0.1637%" height="15" fill="rgb(240,192,40)" fg:x="688" fg:w="2"/><text x="56.5511%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.45%)</title><rect x="54.1735%" y="469" width="2.4550%" height="15" fill="rgb(219,118,5)" fg:x="662" fg:w="30"/><text x="54.4235%" y="479.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="56.4648%" y="453" width="0.1637%" height="15" fill="rgb(205,202,34)" fg:x="690" fg:w="2"/><text x="56.7148%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (44 samples, 3.60%)</title><rect x="53.1915%" y="517" width="3.6007%" height="15" fill="rgb(234,153,26)" fg:x="650" fg:w="44"/><text x="53.4415%" y="527.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (44 samples, 3.60%)</title><rect x="53.1915%" y="501" width="3.6007%" height="15" fill="rgb(229,26,29)" fg:x="650" fg:w="44"/><text x="53.4415%" y="511.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (33 samples, 2.70%)</title><rect x="54.0917%" y="485" width="2.7005%" height="15" fill="rgb(237,115,21)" fg:x="661" fg:w="33"/><text x="54.3417%" y="495.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.6285%" y="469" width="0.1637%" height="15" fill="rgb(252,144,15)" fg:x="692" fg:w="2"/><text x="56.8785%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.6285%" y="453" width="0.1637%" height="15" fill="rgb(232,26,13)" fg:x="692" fg:w="2"/><text x="56.8785%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.7103%" y="437" width="0.0818%" height="15" fill="rgb(206,44,19)" fg:x="693" fg:w="1"/><text x="56.9603%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="57.3650%" y="373" width="0.3273%" height="15" fill="rgb(249,159,2)" fg:x="701" fg:w="4"/><text x="57.6150%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="57.3650%" y="357" width="0.3273%" height="15" fill="rgb(231,5,32)" fg:x="701" fg:w="4"/><text x="57.6150%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="57.3650%" y="341" width="0.3273%" height="15" fill="rgb(249,210,18)" fg:x="701" fg:w="4"/><text x="57.6150%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.5286%" y="325" width="0.1637%" height="15" fill="rgb(215,223,36)" fg:x="703" fg:w="2"/><text x="57.7786%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.5286%" y="309" width="0.1637%" height="15" fill="rgb(245,185,20)" fg:x="703" fg:w="2"/><text x="57.7786%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.7741%" y="325" width="0.1637%" height="15" fill="rgb(206,224,11)" fg:x="706" fg:w="2"/><text x="58.0241%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.7741%" y="309" width="0.1637%" height="15" fill="rgb(248,73,42)" fg:x="706" fg:w="2"/><text x="58.0241%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.7741%" y="293" width="0.1637%" height="15" fill="rgb(219,149,31)" fg:x="706" fg:w="2"/><text x="58.0241%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.7741%" y="277" width="0.1637%" height="15" fill="rgb(243,104,17)" fg:x="706" fg:w="2"/><text x="58.0241%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8560%" y="261" width="0.0818%" height="15" fill="rgb(244,117,33)" fg:x="707" fg:w="1"/><text x="58.1060%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8560%" y="245" width="0.0818%" height="15" fill="rgb(251,25,47)" fg:x="707" fg:w="1"/><text x="58.1060%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8560%" y="229" width="0.0818%" height="15" fill="rgb(249,70,13)" fg:x="707" fg:w="1"/><text x="58.1060%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="57.6923%" y="357" width="0.3273%" height="15" fill="rgb(217,133,18)" fg:x="705" fg:w="4"/><text x="57.9423%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="57.7741%" y="341" width="0.2455%" height="15" fill="rgb(248,97,28)" fg:x="706" fg:w="3"/><text x="58.0241%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.9378%" y="325" width="0.0818%" height="15" fill="rgb(237,193,4)" fg:x="708" fg:w="1"/><text x="58.1878%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.9378%" y="309" width="0.0818%" height="15" fill="rgb(247,198,45)" fg:x="708" fg:w="1"/><text x="58.1878%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9378%" y="293" width="0.0818%" height="15" fill="rgb(245,2,20)" fg:x="708" fg:w="1"/><text x="58.1878%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="57.6923%" y="373" width="0.4092%" height="15" fill="rgb(210,71,36)" fg:x="705" fg:w="5"/><text x="57.9423%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.0196%" y="357" width="0.0818%" height="15" fill="rgb(238,114,30)" fg:x="709" fg:w="1"/><text x="58.2696%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.0196%" y="341" width="0.0818%" height="15" fill="rgb(241,200,2)" fg:x="709" fg:w="1"/><text x="58.2696%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.82%)</title><rect x="57.3650%" y="389" width="0.8183%" height="15" fill="rgb(232,106,18)" fg:x="701" fg:w="10"/><text x="57.6150%" y="399.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="58.1015%" y="373" width="0.0818%" height="15" fill="rgb(211,141,18)" fg:x="710" fg:w="1"/><text x="58.3515%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.1833%" y="357" width="0.1637%" height="15" fill="rgb(224,9,9)" fg:x="711" fg:w="2"/><text x="58.4333%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.15%)</title><rect x="57.2831%" y="421" width="1.1457%" height="15" fill="rgb(249,137,46)" fg:x="700" fg:w="14"/><text x="57.5331%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.06%)</title><rect x="57.3650%" y="405" width="1.0638%" height="15" fill="rgb(236,44,45)" fg:x="701" fg:w="13"/><text x="57.6150%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="58.1833%" y="389" width="0.2455%" height="15" fill="rgb(205,68,40)" fg:x="711" fg:w="3"/><text x="58.4333%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="58.1833%" y="373" width="0.2455%" height="15" fill="rgb(214,198,49)" fg:x="711" fg:w="3"/><text x="58.4333%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="58.3470%" y="357" width="0.0818%" height="15" fill="rgb(226,140,45)" fg:x="713" fg:w="1"/><text x="58.5970%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="58.5106%" y="405" width="0.1637%" height="15" fill="rgb(209,109,20)" fg:x="715" fg:w="2"/><text x="58.7606%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.41%)</title><rect x="58.4288%" y="421" width="0.4092%" height="15" fill="rgb(217,33,46)" fg:x="714" fg:w="5"/><text x="58.6788%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.6743%" y="405" width="0.1637%" height="15" fill="rgb(232,150,33)" fg:x="717" fg:w="2"/><text x="58.9243%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26 samples, 2.13%)</title><rect x="56.7921%" y="453" width="2.1277%" height="15" fill="rgb(233,76,25)" fg:x="694" fg:w="26"/><text x="57.0421%" y="463.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 2.05%)</title><rect x="56.8740%" y="437" width="2.0458%" height="15" fill="rgb(254,219,23)" fg:x="695" fg:w="25"/><text x="57.1240%" y="447.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.8380%" y="421" width="0.0818%" height="15" fill="rgb(233,108,4)" fg:x="719" fg:w="1"/><text x="59.0880%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.9198%" y="453" width="0.1637%" height="15" fill="rgb(229,98,6)" fg:x="720" fg:w="2"/><text x="59.1698%" y="463.50"></text></g><g><title>engine::session::state::State::close (171 samples, 13.99%)</title><rect x="45.1718%" y="597" width="13.9935%" height="15" fill="rgb(217,40,27)" fg:x="552" fg:w="171"/><text x="45.4218%" y="607.50">engine::session::stat..</text></g><g><title>engine::session::state::State::flush_entities (171 samples, 13.99%)</title><rect x="45.1718%" y="581" width="13.9935%" height="15" fill="rgb(221,35,43)" fg:x="552" fg:w="171"/><text x="45.4218%" y="591.50">engine::session::stat..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (167 samples, 13.67%)</title><rect x="45.4992%" y="565" width="13.6661%" height="15" fill="rgb(212,107,11)" fg:x="556" fg:w="167"/><text x="45.7492%" y="575.50">engine::session::inte..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (166 samples, 13.58%)</title><rect x="45.5810%" y="549" width="13.5843%" height="15" fill="rgb(245,42,44)" fg:x="557" fg:w="166"/><text x="45.8310%" y="559.50">engine::session::stat..</text></g><g><title>kernel::model::any_entity_changes (105 samples, 8.59%)</title><rect x="50.5728%" y="533" width="8.5925%" height="15" fill="rgb(209,31,12)" fg:x="618" fg:w="105"/><text x="50.8228%" y="543.50">kernel::mode..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (29 samples, 2.37%)</title><rect x="56.7921%" y="517" width="2.3732%" height="15" fill="rgb(210,228,54)" fg:x="694" fg:w="29"/><text x="57.0421%" y="527.50">se..</text></g><g><title>serde_json::de::from_trait (29 samples, 2.37%)</title><rect x="56.7921%" y="501" width="2.3732%" height="15" fill="rgb(241,19,33)" fg:x="694" fg:w="29"/><text x="57.0421%" y="511.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.37%)</title><rect x="56.7921%" y="485" width="2.3732%" height="15" fill="rgb(229,51,27)" fg:x="694" fg:w="29"/><text x="57.0421%" y="495.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.37%)</title><rect x="56.7921%" y="469" width="2.3732%" height="15" fill="rgb(214,167,49)" fg:x="694" fg:w="29"/><text x="57.0421%" y="479.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0835%" y="453" width="0.0818%" height="15" fill="rgb(248,140,47)" fg:x="722" fg:w="1"/><text x="59.3335%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0835%" y="437" width="0.0818%" height="15" fill="rgb(228,6,51)" fg:x="722" fg:w="1"/><text x="59.3335%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.0835%" y="421" width="0.0818%" height="15" fill="rgb(242,44,53)" fg:x="722" fg:w="1"/><text x="59.3335%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="59.1653%" y="597" width="0.0818%" height="15" fill="rgb(249,90,50)" fg:x="723" fg:w="1"/><text x="59.4153%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::deliver (1 samples, 0.08%)</title><rect x="59.1653%" y="581" width="0.0818%" height="15" fill="rgb(222,84,19)" fg:x="723" fg:w="1"/><text x="59.4153%" y="591.50"></text></g><g><title>engine::session::Session::close (182 samples, 14.89%)</title><rect x="44.4354%" y="613" width="14.8936%" height="15" fill="rgb(214,140,12)" fg:x="543" fg:w="182"/><text x="44.6854%" y="623.50">engine::session::Sessio..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="59.2471%" y="597" width="0.0818%" height="15" fill="rgb(210,20,43)" fg:x="724" fg:w="1"/><text x="59.4971%" y="607.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="59.2471%" y="581" width="0.0818%" height="15" fill="rgb(243,1,40)" fg:x="724" fg:w="1"/><text x="59.4971%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="59.2471%" y="565" width="0.0818%" height="15" fill="rgb(224,102,26)" fg:x="724" fg:w="1"/><text x="59.4971%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="59.2471%" y="549" width="0.0818%" height="15" fill="rgb(221,179,1)" fg:x="724" fg:w="1"/><text x="59.4971%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="59.2471%" y="533" width="0.0818%" height="15" fill="rgb(216,209,47)" fg:x="724" fg:w="1"/><text x="59.4971%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="59.7381%" y="501" width="0.0818%" height="15" fill="rgb(251,135,9)" fg:x="730" fg:w="1"/><text x="59.9881%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="59.7381%" y="485" width="0.0818%" height="15" fill="rgb(242,9,36)" fg:x="730" fg:w="1"/><text x="59.9881%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="59.7381%" y="469" width="0.0818%" height="15" fill="rgb(249,60,37)" fg:x="730" fg:w="1"/><text x="59.9881%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="59.7381%" y="453" width="0.0818%" height="15" fill="rgb(230,66,45)" fg:x="730" fg:w="1"/><text x="59.9881%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7381%" y="437" width="0.0818%" height="15" fill="rgb(216,1,47)" fg:x="730" fg:w="1"/><text x="59.9881%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7381%" y="421" width="0.0818%" height="15" fill="rgb(235,8,23)" fg:x="730" fg:w="1"/><text x="59.9881%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7381%" y="405" width="0.0818%" height="15" fill="rgb(225,136,11)" fg:x="730" fg:w="1"/><text x="59.9881%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.7381%" y="389" width="0.0818%" height="15" fill="rgb(228,63,44)" fg:x="730" fg:w="1"/><text x="59.9881%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.7381%" y="373" width="0.0818%" height="15" fill="rgb(240,43,52)" fg:x="730" fg:w="1"/><text x="59.9881%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.7381%" y="357" width="0.0818%" height="15" fill="rgb(217,167,36)" fg:x="730" fg:w="1"/><text x="59.9881%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.7381%" y="341" width="0.0818%" height="15" fill="rgb(250,19,6)" fg:x="730" fg:w="1"/><text x="59.9881%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.7381%" y="325" width="0.0818%" height="15" fill="rgb(236,60,51)" fg:x="730" fg:w="1"/><text x="59.9881%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.9836%" y="469" width="0.0818%" height="15" fill="rgb(222,217,20)" fg:x="733" fg:w="1"/><text x="60.2336%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0655%" y="341" width="0.0818%" height="15" fill="rgb(242,65,52)" fg:x="734" fg:w="1"/><text x="60.3155%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0655%" y="325" width="0.0818%" height="15" fill="rgb(217,5,41)" fg:x="734" fg:w="1"/><text x="60.3155%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0655%" y="309" width="0.0818%" height="15" fill="rgb(223,208,53)" fg:x="734" fg:w="1"/><text x="60.3155%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="60.0655%" y="421" width="0.1637%" height="15" fill="rgb(221,104,30)" fg:x="734" fg:w="2"/><text x="60.3155%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="60.0655%" y="405" width="0.1637%" height="15" fill="rgb(230,210,42)" fg:x="734" fg:w="2"/><text x="60.3155%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="60.0655%" y="389" width="0.1637%" height="15" fill="rgb(206,205,27)" fg:x="734" fg:w="2"/><text x="60.3155%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="60.0655%" y="373" width="0.1637%" height="15" fill="rgb(233,114,38)" fg:x="734" fg:w="2"/><text x="60.3155%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.0655%" y="357" width="0.1637%" height="15" fill="rgb(216,174,36)" fg:x="734" fg:w="2"/><text x="60.3155%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.1473%" y="341" width="0.0818%" height="15" fill="rgb(211,30,9)" fg:x="735" fg:w="1"/><text x="60.3973%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1473%" y="325" width="0.0818%" height="15" fill="rgb(216,8,21)" fg:x="735" fg:w="1"/><text x="60.3973%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.25%)</title><rect x="60.2291%" y="357" width="0.2455%" height="15" fill="rgb(237,209,39)" fg:x="736" fg:w="3"/><text x="60.4791%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.3928%" y="341" width="0.0818%" height="15" fill="rgb(235,111,47)" fg:x="738" fg:w="1"/><text x="60.6428%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4746%" y="357" width="0.0818%" height="15" fill="rgb(216,139,9)" fg:x="739" fg:w="1"/><text x="60.7246%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4746%" y="341" width="0.0818%" height="15" fill="rgb(248,185,4)" fg:x="739" fg:w="1"/><text x="60.7246%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.6383%" y="325" width="0.0818%" height="15" fill="rgb(239,185,25)" fg:x="741" fg:w="1"/><text x="60.8883%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6383%" y="309" width="0.0818%" height="15" fill="rgb(233,207,8)" fg:x="741" fg:w="1"/><text x="60.8883%" y="319.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.65%)</title><rect x="60.2291%" y="405" width="0.6547%" height="15" fill="rgb(249,220,24)" fg:x="736" fg:w="8"/><text x="60.4791%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.65%)</title><rect x="60.2291%" y="389" width="0.6547%" height="15" fill="rgb(221,50,14)" fg:x="736" fg:w="8"/><text x="60.4791%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="60.2291%" y="373" width="0.6547%" height="15" fill="rgb(227,79,42)" fg:x="736" fg:w="8"/><text x="60.4791%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="60.5565%" y="357" width="0.3273%" height="15" fill="rgb(228,218,49)" fg:x="740" fg:w="4"/><text x="60.8065%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="60.6383%" y="341" width="0.2455%" height="15" fill="rgb(249,18,15)" fg:x="741" fg:w="3"/><text x="60.8883%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="60.7201%" y="325" width="0.1637%" height="15" fill="rgb(212,84,27)" fg:x="742" fg:w="2"/><text x="60.9701%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.8020%" y="309" width="0.0818%" height="15" fill="rgb(207,83,24)" fg:x="743" fg:w="1"/><text x="61.0520%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="60.8020%" y="293" width="0.0818%" height="15" fill="rgb(219,61,7)" fg:x="743" fg:w="1"/><text x="61.0520%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.8020%" y="277" width="0.0818%" height="15" fill="rgb(211,43,29)" fg:x="743" fg:w="1"/><text x="61.0520%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="60.8838%" y="373" width="0.0818%" height="15" fill="rgb(243,15,23)" fg:x="744" fg:w="1"/><text x="61.1338%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.9656%" y="293" width="0.1637%" height="15" fill="rgb(217,52,28)" fg:x="745" fg:w="2"/><text x="61.2156%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.9656%" y="277" width="0.1637%" height="15" fill="rgb(210,35,6)" fg:x="745" fg:w="2"/><text x="61.2156%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0475%" y="261" width="0.0818%" height="15" fill="rgb(237,187,28)" fg:x="746" fg:w="1"/><text x="61.2975%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0475%" y="245" width="0.0818%" height="15" fill="rgb(231,136,24)" fg:x="746" fg:w="1"/><text x="61.2975%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.0475%" y="229" width="0.0818%" height="15" fill="rgb(205,176,52)" fg:x="746" fg:w="1"/><text x="61.2975%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.1293%" y="229" width="0.0818%" height="15" fill="rgb(218,65,12)" fg:x="747" fg:w="1"/><text x="61.3793%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.1293%" y="213" width="0.0818%" height="15" fill="rgb(234,101,21)" fg:x="747" fg:w="1"/><text x="61.3793%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="60.9656%" y="325" width="0.3273%" height="15" fill="rgb(206,13,20)" fg:x="745" fg:w="4"/><text x="61.2156%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="60.9656%" y="309" width="0.3273%" height="15" fill="rgb(236,89,44)" fg:x="745" fg:w="4"/><text x="61.2156%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="61.1293%" y="293" width="0.1637%" height="15" fill="rgb(225,52,17)" fg:x="747" fg:w="2"/><text x="61.3793%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.1293%" y="277" width="0.1637%" height="15" fill="rgb(214,27,25)" fg:x="747" fg:w="2"/><text x="61.3793%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.1293%" y="261" width="0.1637%" height="15" fill="rgb(240,141,35)" fg:x="747" fg:w="2"/><text x="61.3793%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.1293%" y="245" width="0.1637%" height="15" fill="rgb(216,126,3)" fg:x="747" fg:w="2"/><text x="61.3793%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.2111%" y="229" width="0.0818%" height="15" fill="rgb(249,196,23)" fg:x="748" fg:w="1"/><text x="61.4611%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.2111%" y="213" width="0.0818%" height="15" fill="rgb(215,185,43)" fg:x="748" fg:w="1"/><text x="61.4611%" y="223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="61.2111%" y="197" width="0.0818%" height="15" fill="rgb(208,194,36)" fg:x="748" fg:w="1"/><text x="61.4611%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.2930%" y="325" width="0.0818%" height="15" fill="rgb(245,182,12)" fg:x="749" fg:w="1"/><text x="61.5430%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.3748%" y="293" width="0.0818%" height="15" fill="rgb(244,222,52)" fg:x="750" fg:w="1"/><text x="61.6248%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.3748%" y="277" width="0.0818%" height="15" fill="rgb(236,222,51)" fg:x="750" fg:w="1"/><text x="61.6248%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.4566%" y="197" width="0.1637%" height="15" fill="rgb(254,71,22)" fg:x="751" fg:w="2"/><text x="61.7066%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.5385%" y="181" width="0.0818%" height="15" fill="rgb(250,104,15)" fg:x="752" fg:w="1"/><text x="61.7885%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.5385%" y="165" width="0.0818%" height="15" fill="rgb(229,223,46)" fg:x="752" fg:w="1"/><text x="61.7885%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.6203%" y="149" width="0.1637%" height="15" fill="rgb(209,129,18)" fg:x="753" fg:w="2"/><text x="61.8703%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="61.4566%" y="261" width="0.4092%" height="15" fill="rgb(224,160,1)" fg:x="751" fg:w="5"/><text x="61.7066%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.41%)</title><rect x="61.4566%" y="245" width="0.4092%" height="15" fill="rgb(237,112,21)" fg:x="751" fg:w="5"/><text x="61.7066%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="61.4566%" y="229" width="0.4092%" height="15" fill="rgb(215,198,53)" fg:x="751" fg:w="5"/><text x="61.7066%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="61.4566%" y="213" width="0.4092%" height="15" fill="rgb(218,227,35)" fg:x="751" fg:w="5"/><text x="61.7066%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.25%)</title><rect x="61.6203%" y="197" width="0.2455%" height="15" fill="rgb(232,121,22)" fg:x="753" fg:w="3"/><text x="61.8703%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="61.6203%" y="181" width="0.2455%" height="15" fill="rgb(235,52,54)" fg:x="753" fg:w="3"/><text x="61.8703%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="61.6203%" y="165" width="0.2455%" height="15" fill="rgb(219,21,44)" fg:x="753" fg:w="3"/><text x="61.8703%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.7840%" y="149" width="0.0818%" height="15" fill="rgb(221,51,43)" fg:x="755" fg:w="1"/><text x="62.0340%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.7840%" y="133" width="0.0818%" height="15" fill="rgb(225,77,42)" fg:x="755" fg:w="1"/><text x="62.0340%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.7840%" y="117" width="0.0818%" height="15" fill="rgb(214,117,53)" fg:x="755" fg:w="1"/><text x="62.0340%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.98%)</title><rect x="60.9656%" y="373" width="0.9820%" height="15" fill="rgb(218,227,27)" fg:x="745" fg:w="12"/><text x="61.2156%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.98%)</title><rect x="60.9656%" y="357" width="0.9820%" height="15" fill="rgb(223,214,36)" fg:x="745" fg:w="12"/><text x="61.2156%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.98%)</title><rect x="60.9656%" y="341" width="0.9820%" height="15" fill="rgb(235,21,7)" fg:x="745" fg:w="12"/><text x="61.2156%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="61.3748%" y="325" width="0.5728%" height="15" fill="rgb(244,216,4)" fg:x="750" fg:w="7"/><text x="61.6248%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="61.3748%" y="309" width="0.5728%" height="15" fill="rgb(249,197,24)" fg:x="750" fg:w="7"/><text x="61.6248%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (6 samples, 0.49%)</title><rect x="61.4566%" y="293" width="0.4910%" height="15" fill="rgb(222,169,49)" fg:x="751" fg:w="6"/><text x="61.7066%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="61.4566%" y="277" width="0.4910%" height="15" fill="rgb(207,137,33)" fg:x="751" fg:w="6"/><text x="61.7066%" y="287.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="61.8658%" y="261" width="0.0818%" height="15" fill="rgb(219,180,40)" fg:x="756" fg:w="1"/><text x="62.1158%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.9476%" y="341" width="0.0818%" height="15" fill="rgb(250,163,42)" fg:x="757" fg:w="1"/><text x="62.1976%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (23 samples, 1.88%)</title><rect x="60.2291%" y="421" width="1.8822%" height="15" fill="rgb(239,163,0)" fg:x="736" fg:w="23"/><text x="60.4791%" y="431.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.23%)</title><rect x="60.8838%" y="405" width="1.2275%" height="15" fill="rgb(252,38,28)" fg:x="744" fg:w="15"/><text x="61.1338%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.23%)</title><rect x="60.8838%" y="389" width="1.2275%" height="15" fill="rgb(254,203,26)" fg:x="744" fg:w="15"/><text x="61.1338%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.9476%" y="373" width="0.1637%" height="15" fill="rgb(209,129,32)" fg:x="757" fg:w="2"/><text x="62.1976%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.9476%" y="357" width="0.1637%" height="15" fill="rgb(207,177,52)" fg:x="757" fg:w="2"/><text x="62.1976%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="62.0295%" y="341" width="0.0818%" height="15" fill="rgb(230,209,36)" fg:x="758" fg:w="1"/><text x="62.2795%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.1113%" y="325" width="0.0818%" height="15" fill="rgb(238,131,0)" fg:x="759" fg:w="1"/><text x="62.3613%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.1113%" y="309" width="0.0818%" height="15" fill="rgb(218,61,31)" fg:x="759" fg:w="1"/><text x="62.3613%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1113%" y="373" width="0.1637%" height="15" fill="rgb(232,6,53)" fg:x="759" fg:w="2"/><text x="62.3613%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1113%" y="357" width="0.1637%" height="15" fill="rgb(254,100,32)" fg:x="759" fg:w="2"/><text x="62.3613%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1113%" y="341" width="0.1637%" height="15" fill="rgb(229,194,49)" fg:x="759" fg:w="2"/><text x="62.3613%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1931%" y="325" width="0.0818%" height="15" fill="rgb(206,208,39)" fg:x="760" fg:w="1"/><text x="62.4431%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (28 samples, 2.29%)</title><rect x="60.0655%" y="469" width="2.2913%" height="15" fill="rgb(246,226,14)" fg:x="734" fg:w="28"/><text x="60.3155%" y="479.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (28 samples, 2.29%)</title><rect x="60.0655%" y="453" width="2.2913%" height="15" fill="rgb(226,48,32)" fg:x="734" fg:w="28"/><text x="60.3155%" y="463.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (28 samples, 2.29%)</title><rect x="60.0655%" y="437" width="2.2913%" height="15" fill="rgb(252,43,54)" fg:x="734" fg:w="28"/><text x="60.3155%" y="447.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="62.1113%" y="421" width="0.2455%" height="15" fill="rgb(207,124,0)" fg:x="759" fg:w="3"/><text x="62.3613%" y="431.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="62.1113%" y="405" width="0.2455%" height="15" fill="rgb(248,188,30)" fg:x="759" fg:w="3"/><text x="62.3613%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="62.1113%" y="389" width="0.2455%" height="15" fill="rgb(232,14,43)" fg:x="759" fg:w="3"/><text x="62.3613%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2750%" y="373" width="0.0818%" height="15" fill="rgb(218,52,29)" fg:x="761" fg:w="1"/><text x="62.5250%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3568%" y="469" width="0.0818%" height="15" fill="rgb(218,176,50)" fg:x="762" fg:w="1"/><text x="62.6068%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3568%" y="453" width="0.0818%" height="15" fill="rgb(213,112,0)" fg:x="762" fg:w="1"/><text x="62.6068%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3568%" y="437" width="0.0818%" height="15" fill="rgb(244,216,8)" fg:x="762" fg:w="1"/><text x="62.6068%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3568%" y="421" width="0.0818%" height="15" fill="rgb(224,148,53)" fg:x="762" fg:w="1"/><text x="62.6068%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3568%" y="405" width="0.0818%" height="15" fill="rgb(241,133,40)" fg:x="762" fg:w="1"/><text x="62.6068%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.3568%" y="389" width="0.0818%" height="15" fill="rgb(232,17,44)" fg:x="762" fg:w="1"/><text x="62.6068%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.3568%" y="373" width="0.0818%" height="15" fill="rgb(213,32,25)" fg:x="762" fg:w="1"/><text x="62.6068%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.3568%" y="357" width="0.0818%" height="15" fill="rgb(249,115,27)" fg:x="762" fg:w="1"/><text x="62.6068%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3568%" y="341" width="0.0818%" height="15" fill="rgb(241,50,1)" fg:x="762" fg:w="1"/><text x="62.6068%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3568%" y="325" width="0.0818%" height="15" fill="rgb(244,175,40)" fg:x="762" fg:w="1"/><text x="62.6068%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.3568%" y="309" width="0.0818%" height="15" fill="rgb(230,94,34)" fg:x="762" fg:w="1"/><text x="62.6068%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.3568%" y="293" width="0.0818%" height="15" fill="rgb(223,185,29)" fg:x="762" fg:w="1"/><text x="62.6068%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.3568%" y="277" width="0.0818%" height="15" fill="rgb(225,193,15)" fg:x="762" fg:w="1"/><text x="62.6068%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.3568%" y="261" width="0.0818%" height="15" fill="rgb(252,121,38)" fg:x="762" fg:w="1"/><text x="62.6068%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.3568%" y="245" width="0.0818%" height="15" fill="rgb(232,44,12)" fg:x="762" fg:w="1"/><text x="62.6068%" y="255.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (35 samples, 2.86%)</title><rect x="59.7381%" y="517" width="2.8642%" height="15" fill="rgb(226,45,54)" fg:x="730" fg:w="35"/><text x="59.9881%" y="527.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (34 samples, 2.78%)</title><rect x="59.8200%" y="501" width="2.7823%" height="15" fill="rgb(209,67,17)" fg:x="731" fg:w="34"/><text x="60.0700%" y="511.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (34 samples, 2.78%)</title><rect x="59.8200%" y="485" width="2.7823%" height="15" fill="rgb(219,108,52)" fg:x="731" fg:w="34"/><text x="60.0700%" y="495.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.4386%" y="469" width="0.1637%" height="15" fill="rgb(216,118,19)" fg:x="763" fg:w="2"/><text x="62.6886%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.4386%" y="453" width="0.1637%" height="15" fill="rgb(228,120,40)" fg:x="763" fg:w="2"/><text x="62.6886%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.5205%" y="437" width="0.0818%" height="15" fill="rgb(221,218,34)" fg:x="764" fg:w="1"/><text x="62.7705%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.5205%" y="421" width="0.0818%" height="15" fill="rgb(235,89,14)" fg:x="764" fg:w="1"/><text x="62.7705%" y="431.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (37 samples, 3.03%)</title><rect x="59.7381%" y="533" width="3.0278%" height="15" fill="rgb(248,89,7)" fg:x="730" fg:w="37"/><text x="59.9881%" y="543.50">&lt;en..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="62.6023%" y="517" width="0.1637%" height="15" fill="rgb(212,114,34)" fg:x="765" fg:w="2"/><text x="62.8523%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="62.6023%" y="501" width="0.1637%" height="15" fill="rgb(246,88,32)" fg:x="765" fg:w="2"/><text x="62.8523%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.6841%" y="485" width="0.0818%" height="15" fill="rgb(237,135,0)" fg:x="766" fg:w="1"/><text x="62.9341%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7660%" y="533" width="0.0818%" height="15" fill="rgb(220,201,54)" fg:x="767" fg:w="1"/><text x="63.0160%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="62.8478%" y="533" width="0.0818%" height="15" fill="rgb(210,142,36)" fg:x="768" fg:w="1"/><text x="63.0978%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="62.8478%" y="517" width="0.0818%" height="15" fill="rgb(247,189,26)" fg:x="768" fg:w="1"/><text x="63.0978%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8478%" y="501" width="0.0818%" height="15" fill="rgb(223,89,24)" fg:x="768" fg:w="1"/><text x="63.0978%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="62.9296%" y="405" width="0.0818%" height="15" fill="rgb(205,90,19)" fg:x="769" fg:w="1"/><text x="63.1796%" y="415.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="62.9296%" y="389" width="0.0818%" height="15" fill="rgb(234,57,40)" fg:x="769" fg:w="1"/><text x="63.1796%" y="399.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9296%" y="373" width="0.0818%" height="15" fill="rgb(213,109,10)" fg:x="769" fg:w="1"/><text x="63.1796%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9296%" y="357" width="0.0818%" height="15" fill="rgb(214,189,23)" fg:x="769" fg:w="1"/><text x="63.1796%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9296%" y="341" width="0.0818%" height="15" fill="rgb(234,200,10)" fg:x="769" fg:w="1"/><text x="63.1796%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.9296%" y="325" width="0.0818%" height="15" fill="rgb(221,148,16)" fg:x="769" fg:w="1"/><text x="63.1796%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.9296%" y="309" width="0.0818%" height="15" fill="rgb(230,115,10)" fg:x="769" fg:w="1"/><text x="63.1796%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.9296%" y="293" width="0.0818%" height="15" fill="rgb(220,106,42)" fg:x="769" fg:w="1"/><text x="63.1796%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.9296%" y="277" width="0.0818%" height="15" fill="rgb(225,105,39)" fg:x="769" fg:w="1"/><text x="63.1796%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.9296%" y="261" width="0.0818%" height="15" fill="rgb(211,161,38)" fg:x="769" fg:w="1"/><text x="63.1796%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.9296%" y="245" width="0.0818%" height="15" fill="rgb(213,23,19)" fg:x="769" fg:w="1"/><text x="63.1796%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.9296%" y="229" width="0.0818%" height="15" fill="rgb(240,2,33)" fg:x="769" fg:w="1"/><text x="63.1796%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.9296%" y="213" width="0.0818%" height="15" fill="rgb(221,29,45)" fg:x="769" fg:w="1"/><text x="63.1796%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.9296%" y="197" width="0.0818%" height="15" fill="rgb(242,10,19)" fg:x="769" fg:w="1"/><text x="63.1796%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.9296%" y="181" width="0.0818%" height="15" fill="rgb(250,84,37)" fg:x="769" fg:w="1"/><text x="63.1796%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (43 samples, 3.52%)</title><rect x="59.5745%" y="597" width="3.5188%" height="15" fill="rgb(214,136,7)" fg:x="728" fg:w="43"/><text x="59.8245%" y="607.50">&lt;en..</text></g><g><title>kernel::plugins::mw::apply_middleware (43 samples, 3.52%)</title><rect x="59.5745%" y="581" width="3.5188%" height="15" fill="rgb(231,189,12)" fg:x="728" fg:w="43"/><text x="59.8245%" y="591.50">ker..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (43 samples, 3.52%)</title><rect x="59.5745%" y="565" width="3.5188%" height="15" fill="rgb(244,40,16)" fg:x="728" fg:w="43"/><text x="59.8245%" y="575.50">ker..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (43 samples, 3.52%)</title><rect x="59.5745%" y="549" width="3.5188%" height="15" fill="rgb(217,29,15)" fg:x="728" fg:w="43"/><text x="59.8245%" y="559.50">&lt;en..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="62.9296%" y="533" width="0.1637%" height="15" fill="rgb(235,172,33)" fg:x="769" fg:w="2"/><text x="63.1796%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="62.9296%" y="517" width="0.1637%" height="15" fill="rgb(206,148,28)" fg:x="769" fg:w="2"/><text x="63.1796%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="62.9296%" y="501" width="0.1637%" height="15" fill="rgb(251,167,37)" fg:x="769" fg:w="2"/><text x="63.1796%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="62.9296%" y="485" width="0.1637%" height="15" fill="rgb(229,94,52)" fg:x="769" fg:w="2"/><text x="63.1796%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="62.9296%" y="469" width="0.1637%" height="15" fill="rgb(216,132,9)" fg:x="769" fg:w="2"/><text x="63.1796%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="62.9296%" y="453" width="0.1637%" height="15" fill="rgb(208,110,29)" fg:x="769" fg:w="2"/><text x="63.1796%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="62.9296%" y="437" width="0.1637%" height="15" fill="rgb(241,23,8)" fg:x="769" fg:w="2"/><text x="63.1796%" y="447.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="62.9296%" y="421" width="0.1637%" height="15" fill="rgb(208,26,35)" fg:x="769" fg:w="2"/><text x="63.1796%" y="431.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="63.0115%" y="405" width="0.0818%" height="15" fill="rgb(242,165,34)" fg:x="770" fg:w="1"/><text x="63.2615%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (4 samples, 0.33%)</title><rect x="63.0933%" y="581" width="0.3273%" height="15" fill="rgb(222,222,33)" fg:x="771" fg:w="4"/><text x="63.3433%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3388%" y="565" width="0.0818%" height="15" fill="rgb(227,16,52)" fg:x="774" fg:w="1"/><text x="63.5888%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3388%" y="549" width="0.0818%" height="15" fill="rgb(213,93,12)" fg:x="774" fg:w="1"/><text x="63.5888%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.3388%" y="533" width="0.0818%" height="15" fill="rgb(238,41,5)" fg:x="774" fg:w="1"/><text x="63.5888%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.3388%" y="517" width="0.0818%" height="15" fill="rgb(211,60,15)" fg:x="774" fg:w="1"/><text x="63.5888%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.3388%" y="501" width="0.0818%" height="15" fill="rgb(209,11,34)" fg:x="774" fg:w="1"/><text x="63.5888%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.3388%" y="485" width="0.0818%" height="15" fill="rgb(254,155,53)" fg:x="774" fg:w="1"/><text x="63.5888%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.3388%" y="469" width="0.0818%" height="15" fill="rgb(236,174,8)" fg:x="774" fg:w="1"/><text x="63.5888%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.3388%" y="453" width="0.0818%" height="15" fill="rgb(229,31,27)" fg:x="774" fg:w="1"/><text x="63.5888%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.3388%" y="437" width="0.0818%" height="15" fill="rgb(242,226,26)" fg:x="774" fg:w="1"/><text x="63.5888%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.3388%" y="421" width="0.0818%" height="15" fill="rgb(234,32,40)" fg:x="774" fg:w="1"/><text x="63.5888%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.3388%" y="405" width="0.0818%" height="15" fill="rgb(249,226,47)" fg:x="774" fg:w="1"/><text x="63.5888%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.3388%" y="389" width="0.0818%" height="15" fill="rgb(212,6,26)" fg:x="774" fg:w="1"/><text x="63.5888%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.5025%" y="437" width="0.0818%" height="15" fill="rgb(249,202,29)" fg:x="776" fg:w="1"/><text x="63.7525%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.5025%" y="421" width="0.0818%" height="15" fill="rgb(226,106,4)" fg:x="776" fg:w="1"/><text x="63.7525%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.5025%" y="405" width="0.0818%" height="15" fill="rgb(251,2,27)" fg:x="776" fg:w="1"/><text x="63.7525%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.5025%" y="389" width="0.0818%" height="15" fill="rgb(236,208,0)" fg:x="776" fg:w="1"/><text x="63.7525%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.5025%" y="373" width="0.0818%" height="15" fill="rgb(211,66,17)" fg:x="776" fg:w="1"/><text x="63.7525%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.5025%" y="357" width="0.0818%" height="15" fill="rgb(216,129,9)" fg:x="776" fg:w="1"/><text x="63.7525%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.5025%" y="341" width="0.0818%" height="15" fill="rgb(215,130,23)" fg:x="776" fg:w="1"/><text x="63.7525%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.5025%" y="325" width="0.0818%" height="15" fill="rgb(253,157,11)" fg:x="776" fg:w="1"/><text x="63.7525%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.5025%" y="309" width="0.0818%" height="15" fill="rgb(224,25,14)" fg:x="776" fg:w="1"/><text x="63.7525%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.5025%" y="293" width="0.0818%" height="15" fill="rgb(238,16,7)" fg:x="776" fg:w="1"/><text x="63.7525%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.5025%" y="277" width="0.0818%" height="15" fill="rgb(228,74,11)" fg:x="776" fg:w="1"/><text x="63.7525%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.5025%" y="261" width="0.0818%" height="15" fill="rgb(239,221,27)" fg:x="776" fg:w="1"/><text x="63.7525%" y="271.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="63.5025%" y="245" width="0.0818%" height="15" fill="rgb(229,166,18)" fg:x="776" fg:w="1"/><text x="63.7525%" y="255.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="63.5025%" y="229" width="0.0818%" height="15" fill="rgb(254,94,46)" fg:x="776" fg:w="1"/><text x="63.7525%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="63.5025%" y="533" width="0.1637%" height="15" fill="rgb(241,79,19)" fg:x="776" fg:w="2"/><text x="63.7525%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="63.5025%" y="517" width="0.1637%" height="15" fill="rgb(228,99,51)" fg:x="776" fg:w="2"/><text x="63.7525%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="63.5025%" y="501" width="0.1637%" height="15" fill="rgb(211,15,6)" fg:x="776" fg:w="2"/><text x="63.7525%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.5025%" y="485" width="0.1637%" height="15" fill="rgb(245,107,54)" fg:x="776" fg:w="2"/><text x="63.7525%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.5025%" y="469" width="0.1637%" height="15" fill="rgb(243,3,2)" fg:x="776" fg:w="2"/><text x="63.7525%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.5025%" y="453" width="0.1637%" height="15" fill="rgb(206,122,10)" fg:x="776" fg:w="2"/><text x="63.7525%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.5843%" y="437" width="0.0818%" height="15" fill="rgb(224,88,4)" fg:x="777" fg:w="1"/><text x="63.8343%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.6661%" y="453" width="0.0818%" height="15" fill="rgb(230,1,41)" fg:x="778" fg:w="1"/><text x="63.9161%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.6661%" y="437" width="0.0818%" height="15" fill="rgb(230,1,31)" fg:x="778" fg:w="1"/><text x="63.9161%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6661%" y="421" width="0.0818%" height="15" fill="rgb(232,67,19)" fg:x="778" fg:w="1"/><text x="63.9161%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6661%" y="405" width="0.0818%" height="15" fill="rgb(222,206,20)" fg:x="778" fg:w="1"/><text x="63.9161%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.6661%" y="389" width="0.0818%" height="15" fill="rgb(217,225,19)" fg:x="778" fg:w="1"/><text x="63.9161%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.6661%" y="373" width="0.0818%" height="15" fill="rgb(234,13,33)" fg:x="778" fg:w="1"/><text x="63.9161%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.6661%" y="357" width="0.0818%" height="15" fill="rgb(254,5,1)" fg:x="778" fg:w="1"/><text x="63.9161%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6661%" y="341" width="0.0818%" height="15" fill="rgb(211,121,41)" fg:x="778" fg:w="1"/><text x="63.9161%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6661%" y="325" width="0.0818%" height="15" fill="rgb(213,199,35)" fg:x="778" fg:w="1"/><text x="63.9161%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.6661%" y="309" width="0.0818%" height="15" fill="rgb(240,118,22)" fg:x="778" fg:w="1"/><text x="63.9161%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.6661%" y="293" width="0.0818%" height="15" fill="rgb(238,184,25)" fg:x="778" fg:w="1"/><text x="63.9161%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.6661%" y="277" width="0.0818%" height="15" fill="rgb(210,165,6)" fg:x="778" fg:w="1"/><text x="63.9161%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.6661%" y="261" width="0.0818%" height="15" fill="rgb(235,149,5)" fg:x="778" fg:w="1"/><text x="63.9161%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.6661%" y="245" width="0.0818%" height="15" fill="rgb(221,63,5)" fg:x="778" fg:w="1"/><text x="63.9161%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.6661%" y="485" width="0.1637%" height="15" fill="rgb(250,44,41)" fg:x="778" fg:w="2"/><text x="63.9161%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.6661%" y="469" width="0.1637%" height="15" fill="rgb(235,112,47)" fg:x="778" fg:w="2"/><text x="63.9161%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7480%" y="453" width="0.0818%" height="15" fill="rgb(252,176,34)" fg:x="779" fg:w="1"/><text x="63.9980%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7480%" y="437" width="0.0818%" height="15" fill="rgb(234,50,19)" fg:x="779" fg:w="1"/><text x="63.9980%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.7480%" y="421" width="0.0818%" height="15" fill="rgb(241,195,31)" fg:x="779" fg:w="1"/><text x="63.9980%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.7480%" y="405" width="0.0818%" height="15" fill="rgb(212,93,11)" fg:x="779" fg:w="1"/><text x="63.9980%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.7480%" y="389" width="0.0818%" height="15" fill="rgb(254,98,51)" fg:x="779" fg:w="1"/><text x="63.9980%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.7480%" y="373" width="0.0818%" height="15" fill="rgb(246,18,45)" fg:x="779" fg:w="1"/><text x="63.9980%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.7480%" y="357" width="0.0818%" height="15" fill="rgb(215,148,23)" fg:x="779" fg:w="1"/><text x="63.9980%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.7480%" y="341" width="0.0818%" height="15" fill="rgb(227,22,7)" fg:x="779" fg:w="1"/><text x="63.9980%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.7480%" y="325" width="0.0818%" height="15" fill="rgb(207,210,37)" fg:x="779" fg:w="1"/><text x="63.9980%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.7480%" y="309" width="0.0818%" height="15" fill="rgb(247,147,42)" fg:x="779" fg:w="1"/><text x="63.9980%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.7480%" y="293" width="0.0818%" height="15" fill="rgb(226,213,14)" fg:x="779" fg:w="1"/><text x="63.9980%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.7480%" y="277" width="0.0818%" height="15" fill="rgb(223,18,10)" fg:x="779" fg:w="1"/><text x="63.9980%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="63.8298%" y="389" width="0.1637%" height="15" fill="rgb(253,34,22)" fg:x="780" fg:w="2"/><text x="64.0798%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.57%)</title><rect x="63.5025%" y="565" width="0.5728%" height="15" fill="rgb(222,90,31)" fg:x="776" fg:w="7"/><text x="63.7525%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.57%)</title><rect x="63.5025%" y="549" width="0.5728%" height="15" fill="rgb(220,182,30)" fg:x="776" fg:w="7"/><text x="63.7525%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="63.6661%" y="533" width="0.4092%" height="15" fill="rgb(229,170,12)" fg:x="778" fg:w="5"/><text x="63.9161%" y="543.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="63.6661%" y="517" width="0.4092%" height="15" fill="rgb(210,101,21)" fg:x="778" fg:w="5"/><text x="63.9161%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="63.6661%" y="501" width="0.4092%" height="15" fill="rgb(237,177,31)" fg:x="778" fg:w="5"/><text x="63.9161%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="63.8298%" y="485" width="0.2455%" height="15" fill="rgb(215,91,34)" fg:x="780" fg:w="3"/><text x="64.0798%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="63.8298%" y="469" width="0.2455%" height="15" fill="rgb(229,206,16)" fg:x="780" fg:w="3"/><text x="64.0798%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="63.8298%" y="453" width="0.2455%" height="15" fill="rgb(235,207,10)" fg:x="780" fg:w="3"/><text x="64.0798%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="63.8298%" y="437" width="0.2455%" height="15" fill="rgb(247,18,10)" fg:x="780" fg:w="3"/><text x="64.0798%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="63.8298%" y="421" width="0.2455%" height="15" fill="rgb(232,4,6)" fg:x="780" fg:w="3"/><text x="64.0798%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="63.8298%" y="405" width="0.2455%" height="15" fill="rgb(247,93,45)" fg:x="780" fg:w="3"/><text x="64.0798%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.9935%" y="389" width="0.0818%" height="15" fill="rgb(240,181,18)" fg:x="782" fg:w="1"/><text x="64.2435%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9935%" y="373" width="0.0818%" height="15" fill="rgb(208,224,0)" fg:x="782" fg:w="1"/><text x="64.2435%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.9935%" y="357" width="0.0818%" height="15" fill="rgb(224,207,54)" fg:x="782" fg:w="1"/><text x="64.2435%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9935%" y="341" width="0.0818%" height="15" fill="rgb(217,152,29)" fg:x="782" fg:w="1"/><text x="64.2435%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.0753%" y="501" width="0.0818%" height="15" fill="rgb(243,78,27)" fg:x="783" fg:w="1"/><text x="64.3253%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.0753%" y="485" width="0.0818%" height="15" fill="rgb(228,111,9)" fg:x="783" fg:w="1"/><text x="64.3253%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1571%" y="501" width="0.0818%" height="15" fill="rgb(230,213,21)" fg:x="784" fg:w="1"/><text x="64.4071%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="64.2390%" y="469" width="0.1637%" height="15" fill="rgb(248,50,36)" fg:x="785" fg:w="2"/><text x="64.4890%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3208%" y="453" width="0.0818%" height="15" fill="rgb(226,19,31)" fg:x="786" fg:w="1"/><text x="64.5708%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="64.4026%" y="405" width="0.1637%" height="15" fill="rgb(205,132,21)" fg:x="787" fg:w="2"/><text x="64.6526%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.4845%" y="389" width="0.0818%" height="15" fill="rgb(207,42,19)" fg:x="788" fg:w="1"/><text x="64.7345%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6481%" y="341" width="0.0818%" height="15" fill="rgb(229,69,35)" fg:x="790" fg:w="1"/><text x="64.8981%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6481%" y="325" width="0.0818%" height="15" fill="rgb(226,96,11)" fg:x="790" fg:w="1"/><text x="64.8981%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="64.6481%" y="309" width="0.0818%" height="15" fill="rgb(236,133,54)" fg:x="790" fg:w="1"/><text x="64.8981%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="64.5663%" y="389" width="0.2455%" height="15" fill="rgb(247,166,21)" fg:x="789" fg:w="3"/><text x="64.8163%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="64.5663%" y="373" width="0.2455%" height="15" fill="rgb(220,132,12)" fg:x="789" fg:w="3"/><text x="64.8163%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="64.5663%" y="357" width="0.2455%" height="15" fill="rgb(233,27,30)" fg:x="789" fg:w="3"/><text x="64.8163%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.7300%" y="341" width="0.0818%" height="15" fill="rgb(246,161,27)" fg:x="791" fg:w="1"/><text x="64.9800%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.7300%" y="325" width="0.0818%" height="15" fill="rgb(240,56,3)" fg:x="791" fg:w="1"/><text x="64.9800%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.7300%" y="309" width="0.0818%" height="15" fill="rgb(242,190,9)" fg:x="791" fg:w="1"/><text x="64.9800%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.7300%" y="293" width="0.0818%" height="15" fill="rgb(234,3,52)" fg:x="791" fg:w="1"/><text x="64.9800%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7300%" y="277" width="0.0818%" height="15" fill="rgb(220,221,19)" fg:x="791" fg:w="1"/><text x="64.9800%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="64.4026%" y="421" width="0.4910%" height="15" fill="rgb(247,178,30)" fg:x="787" fg:w="6"/><text x="64.6526%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="64.5663%" y="405" width="0.3273%" height="15" fill="rgb(234,212,27)" fg:x="789" fg:w="4"/><text x="64.8163%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8118%" y="389" width="0.0818%" height="15" fill="rgb(226,199,38)" fg:x="792" fg:w="1"/><text x="65.0618%" y="399.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.90%)</title><rect x="64.0753%" y="549" width="0.9002%" height="15" fill="rgb(248,114,22)" fg:x="783" fg:w="11"/><text x="64.3253%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.90%)</title><rect x="64.0753%" y="533" width="0.9002%" height="15" fill="rgb(221,180,4)" fg:x="783" fg:w="11"/><text x="64.3253%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.90%)</title><rect x="64.0753%" y="517" width="0.9002%" height="15" fill="rgb(220,229,24)" fg:x="783" fg:w="11"/><text x="64.3253%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.74%)</title><rect x="64.2390%" y="501" width="0.7365%" height="15" fill="rgb(226,184,27)" fg:x="785" fg:w="9"/><text x="64.4890%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.74%)</title><rect x="64.2390%" y="485" width="0.7365%" height="15" fill="rgb(232,99,15)" fg:x="785" fg:w="9"/><text x="64.4890%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="64.4026%" y="469" width="0.5728%" height="15" fill="rgb(250,167,16)" fg:x="787" fg:w="7"/><text x="64.6526%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="64.4026%" y="453" width="0.5728%" height="15" fill="rgb(243,113,6)" fg:x="787" fg:w="7"/><text x="64.6526%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="64.4026%" y="437" width="0.5728%" height="15" fill="rgb(244,147,52)" fg:x="787" fg:w="7"/><text x="64.6526%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.8936%" y="421" width="0.0818%" height="15" fill="rgb(235,59,50)" fg:x="793" fg:w="1"/><text x="65.1436%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.8936%" y="405" width="0.0818%" height="15" fill="rgb(250,188,6)" fg:x="793" fg:w="1"/><text x="65.1436%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.8936%" y="389" width="0.0818%" height="15" fill="rgb(236,173,11)" fg:x="793" fg:w="1"/><text x="65.1436%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.8936%" y="373" width="0.0818%" height="15" fill="rgb(233,64,3)" fg:x="793" fg:w="1"/><text x="65.1436%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9755%" y="485" width="0.0818%" height="15" fill="rgb(207,92,7)" fg:x="794" fg:w="1"/><text x="65.2255%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9755%" y="469" width="0.0818%" height="15" fill="rgb(221,30,19)" fg:x="794" fg:w="1"/><text x="65.2255%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.0573%" y="405" width="0.0818%" height="15" fill="rgb(245,22,49)" fg:x="795" fg:w="1"/><text x="65.3073%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.0573%" y="389" width="0.0818%" height="15" fill="rgb(218,39,20)" fg:x="795" fg:w="1"/><text x="65.3073%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.0573%" y="373" width="0.0818%" height="15" fill="rgb(222,144,21)" fg:x="795" fg:w="1"/><text x="65.3073%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.0573%" y="357" width="0.0818%" height="15" fill="rgb(222,78,51)" fg:x="795" fg:w="1"/><text x="65.3073%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.0573%" y="341" width="0.0818%" height="15" fill="rgb(248,213,53)" fg:x="795" fg:w="1"/><text x="65.3073%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.0573%" y="469" width="0.1637%" height="15" fill="rgb(245,28,34)" fg:x="795" fg:w="2"/><text x="65.3073%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.0573%" y="453" width="0.1637%" height="15" fill="rgb(229,186,26)" fg:x="795" fg:w="2"/><text x="65.3073%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.0573%" y="437" width="0.1637%" height="15" fill="rgb(224,0,41)" fg:x="795" fg:w="2"/><text x="65.3073%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.0573%" y="421" width="0.1637%" height="15" fill="rgb(223,136,51)" fg:x="795" fg:w="2"/><text x="65.3073%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.1391%" y="405" width="0.0818%" height="15" fill="rgb(234,50,9)" fg:x="796" fg:w="1"/><text x="65.3891%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.2209%" y="469" width="0.0818%" height="15" fill="rgb(242,164,20)" fg:x="797" fg:w="1"/><text x="65.4709%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.2209%" y="453" width="0.0818%" height="15" fill="rgb(230,169,22)" fg:x="797" fg:w="1"/><text x="65.4709%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.2209%" y="437" width="0.0818%" height="15" fill="rgb(228,82,26)" fg:x="797" fg:w="1"/><text x="65.4709%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.2209%" y="421" width="0.0818%" height="15" fill="rgb(244,220,31)" fg:x="797" fg:w="1"/><text x="65.4709%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (17 samples, 1.39%)</title><rect x="64.0753%" y="565" width="1.3912%" height="15" fill="rgb(214,35,25)" fg:x="783" fg:w="17"/><text x="64.3253%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="64.9755%" y="549" width="0.4910%" height="15" fill="rgb(245,162,54)" fg:x="794" fg:w="6"/><text x="65.2255%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="64.9755%" y="533" width="0.4910%" height="15" fill="rgb(210,43,24)" fg:x="794" fg:w="6"/><text x="65.2255%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.49%)</title><rect x="64.9755%" y="517" width="0.4910%" height="15" fill="rgb(226,145,51)" fg:x="794" fg:w="6"/><text x="65.2255%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="64.9755%" y="501" width="0.4910%" height="15" fill="rgb(237,52,53)" fg:x="794" fg:w="6"/><text x="65.2255%" y="511.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="65.0573%" y="485" width="0.4092%" height="15" fill="rgb(216,226,7)" fg:x="795" fg:w="5"/><text x="65.3073%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3028%" y="469" width="0.1637%" height="15" fill="rgb(206,223,18)" fg:x="798" fg:w="2"/><text x="65.5528%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.3028%" y="453" width="0.1637%" height="15" fill="rgb(221,1,10)" fg:x="798" fg:w="2"/><text x="65.5528%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.3846%" y="437" width="0.0818%" height="15" fill="rgb(221,151,42)" fg:x="799" fg:w="1"/><text x="65.6346%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3846%" y="421" width="0.0818%" height="15" fill="rgb(205,183,46)" fg:x="799" fg:w="1"/><text x="65.6346%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.3846%" y="405" width="0.0818%" height="15" fill="rgb(239,229,1)" fg:x="799" fg:w="1"/><text x="65.6346%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.3846%" y="389" width="0.0818%" height="15" fill="rgb(236,192,23)" fg:x="799" fg:w="1"/><text x="65.6346%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3846%" y="373" width="0.0818%" height="15" fill="rgb(215,146,3)" fg:x="799" fg:w="1"/><text x="65.6346%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.3846%" y="357" width="0.0818%" height="15" fill="rgb(235,52,27)" fg:x="799" fg:w="1"/><text x="65.6346%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.3846%" y="341" width="0.0818%" height="15" fill="rgb(236,45,20)" fg:x="799" fg:w="1"/><text x="65.6346%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3846%" y="325" width="0.0818%" height="15" fill="rgb(235,86,41)" fg:x="799" fg:w="1"/><text x="65.6346%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.3846%" y="309" width="0.0818%" height="15" fill="rgb(235,27,27)" fg:x="799" fg:w="1"/><text x="65.6346%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.3846%" y="293" width="0.0818%" height="15" fill="rgb(232,4,34)" fg:x="799" fg:w="1"/><text x="65.6346%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5483%" y="469" width="0.0818%" height="15" fill="rgb(215,22,10)" fg:x="801" fg:w="1"/><text x="65.7983%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5483%" y="453" width="0.0818%" height="15" fill="rgb(230,228,27)" fg:x="801" fg:w="1"/><text x="65.7983%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.5483%" y="437" width="0.0818%" height="15" fill="rgb(216,26,51)" fg:x="801" fg:w="1"/><text x="65.7983%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.5483%" y="421" width="0.0818%" height="15" fill="rgb(225,180,50)" fg:x="801" fg:w="1"/><text x="65.7983%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.5483%" y="405" width="0.0818%" height="15" fill="rgb(236,211,2)" fg:x="801" fg:w="1"/><text x="65.7983%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.5483%" y="389" width="0.0818%" height="15" fill="rgb(250,51,20)" fg:x="801" fg:w="1"/><text x="65.7983%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.5483%" y="373" width="0.0818%" height="15" fill="rgb(232,70,37)" fg:x="801" fg:w="1"/><text x="65.7983%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.5483%" y="357" width="0.0818%" height="15" fill="rgb(226,183,39)" fg:x="801" fg:w="1"/><text x="65.7983%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.5483%" y="341" width="0.0818%" height="15" fill="rgb(232,228,21)" fg:x="801" fg:w="1"/><text x="65.7983%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.5483%" y="325" width="0.0818%" height="15" fill="rgb(251,118,32)" fg:x="801" fg:w="1"/><text x="65.7983%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.5483%" y="309" width="0.0818%" height="15" fill="rgb(235,172,38)" fg:x="801" fg:w="1"/><text x="65.7983%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.5483%" y="293" width="0.0818%" height="15" fill="rgb(235,63,18)" fg:x="801" fg:w="1"/><text x="65.7983%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.5483%" y="277" width="0.0818%" height="15" fill="rgb(225,4,7)" fg:x="801" fg:w="1"/><text x="65.7983%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.5483%" y="261" width="0.0818%" height="15" fill="rgb(231,61,1)" fg:x="801" fg:w="1"/><text x="65.7983%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="65.4664%" y="501" width="0.2455%" height="15" fill="rgb(241,155,22)" fg:x="800" fg:w="3"/><text x="65.7164%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.5483%" y="485" width="0.1637%" height="15" fill="rgb(209,100,26)" fg:x="801" fg:w="2"/><text x="65.7983%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6301%" y="469" width="0.0818%" height="15" fill="rgb(248,181,15)" fg:x="802" fg:w="1"/><text x="65.8801%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (33 samples, 2.70%)</title><rect x="63.0933%" y="597" width="2.7005%" height="15" fill="rgb(214,94,31)" fg:x="771" fg:w="33"/><text x="63.3433%" y="607.50">&lt;e..</text></g><g><title>engine::session::internal::Entities::add_persisted (29 samples, 2.37%)</title><rect x="63.4206%" y="581" width="2.3732%" height="15" fill="rgb(207,16,42)" fg:x="775" fg:w="29"/><text x="63.6706%" y="591.50">en..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="65.4664%" y="565" width="0.3273%" height="15" fill="rgb(208,127,13)" fg:x="800" fg:w="4"/><text x="65.7164%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="65.4664%" y="549" width="0.3273%" height="15" fill="rgb(220,211,18)" fg:x="800" fg:w="4"/><text x="65.7164%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="65.4664%" y="533" width="0.3273%" height="15" fill="rgb(221,55,38)" fg:x="800" fg:w="4"/><text x="65.7164%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="65.4664%" y="517" width="0.3273%" height="15" fill="rgb(252,219,45)" fg:x="800" fg:w="4"/><text x="65.7164%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7119%" y="501" width="0.0818%" height="15" fill="rgb(248,53,35)" fg:x="803" fg:w="1"/><text x="65.9619%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7119%" y="485" width="0.0818%" height="15" fill="rgb(210,87,2)" fg:x="803" fg:w="1"/><text x="65.9619%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.7119%" y="469" width="0.0818%" height="15" fill="rgb(239,133,9)" fg:x="803" fg:w="1"/><text x="65.9619%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.7119%" y="453" width="0.0818%" height="15" fill="rgb(214,114,5)" fg:x="803" fg:w="1"/><text x="65.9619%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.7119%" y="437" width="0.0818%" height="15" fill="rgb(206,124,24)" fg:x="803" fg:w="1"/><text x="65.9619%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.7119%" y="421" width="0.0818%" height="15" fill="rgb(212,57,33)" fg:x="803" fg:w="1"/><text x="65.9619%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.7119%" y="405" width="0.0818%" height="15" fill="rgb(246,21,20)" fg:x="803" fg:w="1"/><text x="65.9619%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7938%" y="501" width="0.0818%" height="15" fill="rgb(253,210,39)" fg:x="804" fg:w="1"/><text x="66.0438%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7938%" y="485" width="0.0818%" height="15" fill="rgb(209,187,24)" fg:x="804" fg:w="1"/><text x="66.0438%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.7938%" y="469" width="0.0818%" height="15" fill="rgb(246,136,17)" fg:x="804" fg:w="1"/><text x="66.0438%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.7938%" y="453" width="0.0818%" height="15" fill="rgb(211,0,30)" fg:x="804" fg:w="1"/><text x="66.0438%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.7938%" y="437" width="0.0818%" height="15" fill="rgb(216,199,7)" fg:x="804" fg:w="1"/><text x="66.0438%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7938%" y="421" width="0.0818%" height="15" fill="rgb(207,210,19)" fg:x="804" fg:w="1"/><text x="66.0438%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7938%" y="405" width="0.0818%" height="15" fill="rgb(237,187,39)" fg:x="804" fg:w="1"/><text x="66.0438%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.7938%" y="389" width="0.0818%" height="15" fill="rgb(243,194,42)" fg:x="804" fg:w="1"/><text x="66.0438%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.7938%" y="373" width="0.0818%" height="15" fill="rgb(225,194,19)" fg:x="804" fg:w="1"/><text x="66.0438%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.7938%" y="357" width="0.0818%" height="15" fill="rgb(224,192,14)" fg:x="804" fg:w="1"/><text x="66.0438%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.7938%" y="341" width="0.0818%" height="15" fill="rgb(252,21,18)" fg:x="804" fg:w="1"/><text x="66.0438%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7938%" y="325" width="0.0818%" height="15" fill="rgb(229,69,19)" fg:x="804" fg:w="1"/><text x="66.0438%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.25%)</title><rect x="65.7938%" y="549" width="0.2455%" height="15" fill="rgb(251,31,53)" fg:x="804" fg:w="3"/><text x="66.0438%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.25%)</title><rect x="65.7938%" y="533" width="0.2455%" height="15" fill="rgb(218,39,50)" fg:x="804" fg:w="3"/><text x="66.0438%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.25%)</title><rect x="65.7938%" y="517" width="0.2455%" height="15" fill="rgb(231,50,17)" fg:x="804" fg:w="3"/><text x="66.0438%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="65.8756%" y="501" width="0.1637%" height="15" fill="rgb(223,217,31)" fg:x="805" fg:w="2"/><text x="66.1256%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="65.8756%" y="485" width="0.1637%" height="15" fill="rgb(225,91,12)" fg:x="805" fg:w="2"/><text x="66.1256%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.8756%" y="469" width="0.1637%" height="15" fill="rgb(242,58,43)" fg:x="805" fg:w="2"/><text x="66.1256%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.8756%" y="453" width="0.1637%" height="15" fill="rgb(242,32,21)" fg:x="805" fg:w="2"/><text x="66.1256%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.9574%" y="437" width="0.0818%" height="15" fill="rgb(211,127,1)" fg:x="806" fg:w="1"/><text x="66.2074%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.9574%" y="421" width="0.0818%" height="15" fill="rgb(231,93,13)" fg:x="806" fg:w="1"/><text x="66.2074%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.9574%" y="405" width="0.0818%" height="15" fill="rgb(218,83,4)" fg:x="806" fg:w="1"/><text x="66.2074%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.9574%" y="389" width="0.0818%" height="15" fill="rgb(230,218,10)" fg:x="806" fg:w="1"/><text x="66.2074%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.9574%" y="373" width="0.0818%" height="15" fill="rgb(235,127,18)" fg:x="806" fg:w="1"/><text x="66.2074%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.9574%" y="357" width="0.0818%" height="15" fill="rgb(213,137,46)" fg:x="806" fg:w="1"/><text x="66.2074%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.25%)</title><rect x="66.0393%" y="485" width="0.2455%" height="15" fill="rgb(235,179,24)" fg:x="807" fg:w="3"/><text x="66.2893%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="66.2029%" y="469" width="0.0818%" height="15" fill="rgb(247,58,49)" fg:x="809" fg:w="1"/><text x="66.4529%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="66.2029%" y="453" width="0.0818%" height="15" fill="rgb(242,222,5)" fg:x="809" fg:w="1"/><text x="66.4529%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.2848%" y="485" width="0.0818%" height="15" fill="rgb(230,16,48)" fg:x="810" fg:w="1"/><text x="66.5348%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.3666%" y="453" width="0.0818%" height="15" fill="rgb(241,192,16)" fg:x="811" fg:w="1"/><text x="66.6166%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.4484%" y="421" width="0.0818%" height="15" fill="rgb(209,25,37)" fg:x="812" fg:w="1"/><text x="66.6984%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.4484%" y="405" width="0.0818%" height="15" fill="rgb(229,215,13)" fg:x="812" fg:w="1"/><text x="66.6984%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.4484%" y="389" width="0.0818%" height="15" fill="rgb(213,199,8)" fg:x="812" fg:w="1"/><text x="66.6984%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="66.4484%" y="437" width="0.3273%" height="15" fill="rgb(226,151,19)" fg:x="812" fg:w="4"/><text x="66.6984%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="66.5303%" y="421" width="0.2455%" height="15" fill="rgb(254,183,12)" fg:x="813" fg:w="3"/><text x="66.7803%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="66.5303%" y="405" width="0.2455%" height="15" fill="rgb(245,8,3)" fg:x="813" fg:w="3"/><text x="66.7803%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="66.5303%" y="389" width="0.2455%" height="15" fill="rgb(229,159,35)" fg:x="813" fg:w="3"/><text x="66.7803%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="66.5303%" y="373" width="0.2455%" height="15" fill="rgb(209,145,1)" fg:x="813" fg:w="3"/><text x="66.7803%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="66.5303%" y="357" width="0.2455%" height="15" fill="rgb(228,183,16)" fg:x="813" fg:w="3"/><text x="66.7803%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="66.5303%" y="341" width="0.2455%" height="15" fill="rgb(222,68,0)" fg:x="813" fg:w="3"/><text x="66.7803%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="66.5303%" y="325" width="0.2455%" height="15" fill="rgb(209,130,50)" fg:x="813" fg:w="3"/><text x="66.7803%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="66.5303%" y="309" width="0.2455%" height="15" fill="rgb(228,176,44)" fg:x="813" fg:w="3"/><text x="66.7803%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.6121%" y="293" width="0.1637%" height="15" fill="rgb(221,164,2)" fg:x="814" fg:w="2"/><text x="66.8621%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.6121%" y="277" width="0.1637%" height="15" fill="rgb(249,199,49)" fg:x="814" fg:w="2"/><text x="66.8621%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.6121%" y="261" width="0.1637%" height="15" fill="rgb(228,205,53)" fg:x="814" fg:w="2"/><text x="66.8621%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="66.3666%" y="469" width="0.4910%" height="15" fill="rgb(235,77,20)" fg:x="811" fg:w="6"/><text x="66.6166%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="66.4484%" y="453" width="0.4092%" height="15" fill="rgb(227,147,34)" fg:x="812" fg:w="5"/><text x="66.6984%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.7758%" y="437" width="0.0818%" height="15" fill="rgb(226,203,52)" fg:x="816" fg:w="1"/><text x="67.0258%" y="447.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.90%)</title><rect x="66.0393%" y="533" width="0.9002%" height="15" fill="rgb(226,186,23)" fg:x="807" fg:w="11"/><text x="66.2893%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.90%)</title><rect x="66.0393%" y="517" width="0.9002%" height="15" fill="rgb(236,13,30)" fg:x="807" fg:w="11"/><text x="66.2893%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.90%)</title><rect x="66.0393%" y="501" width="0.9002%" height="15" fill="rgb(228,121,22)" fg:x="807" fg:w="11"/><text x="66.2893%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="66.3666%" y="485" width="0.5728%" height="15" fill="rgb(248,222,26)" fg:x="811" fg:w="7"/><text x="66.6166%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.8576%" y="469" width="0.0818%" height="15" fill="rgb(251,72,25)" fg:x="817" fg:w="1"/><text x="67.1076%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.9394%" y="469" width="0.0818%" height="15" fill="rgb(223,114,24)" fg:x="818" fg:w="1"/><text x="67.1894%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.0213%" y="453" width="0.1637%" height="15" fill="rgb(232,190,43)" fg:x="819" fg:w="2"/><text x="67.2713%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.0213%" y="437" width="0.1637%" height="15" fill="rgb(208,90,0)" fg:x="819" fg:w="2"/><text x="67.2713%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.0213%" y="421" width="0.1637%" height="15" fill="rgb(234,149,31)" fg:x="819" fg:w="2"/><text x="67.2713%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.0213%" y="405" width="0.1637%" height="15" fill="rgb(235,188,36)" fg:x="819" fg:w="2"/><text x="67.2713%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.0213%" y="389" width="0.1637%" height="15" fill="rgb(219,59,51)" fg:x="819" fg:w="2"/><text x="67.2713%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.0213%" y="373" width="0.1637%" height="15" fill="rgb(236,101,40)" fg:x="819" fg:w="2"/><text x="67.2713%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="67.0213%" y="357" width="0.1637%" height="15" fill="rgb(235,33,7)" fg:x="819" fg:w="2"/><text x="67.2713%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.0213%" y="341" width="0.1637%" height="15" fill="rgb(213,169,26)" fg:x="819" fg:w="2"/><text x="67.2713%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.0213%" y="325" width="0.1637%" height="15" fill="rgb(218,99,34)" fg:x="819" fg:w="2"/><text x="67.2713%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.1031%" y="309" width="0.0818%" height="15" fill="rgb(210,57,24)" fg:x="820" fg:w="1"/><text x="67.3531%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.1849%" y="453" width="0.0818%" height="15" fill="rgb(231,181,54)" fg:x="821" fg:w="1"/><text x="67.4349%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.1849%" y="437" width="0.0818%" height="15" fill="rgb(251,188,48)" fg:x="821" fg:w="1"/><text x="67.4349%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.57%)</title><rect x="66.9394%" y="501" width="0.5728%" height="15" fill="rgb(243,12,45)" fg:x="818" fg:w="7"/><text x="67.1894%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="66.9394%" y="485" width="0.5728%" height="15" fill="rgb(250,197,9)" fg:x="818" fg:w="7"/><text x="67.1894%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.49%)</title><rect x="67.0213%" y="469" width="0.4910%" height="15" fill="rgb(235,149,35)" fg:x="819" fg:w="6"/><text x="67.2713%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="67.2668%" y="453" width="0.2455%" height="15" fill="rgb(219,27,19)" fg:x="822" fg:w="3"/><text x="67.5168%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="67.2668%" y="437" width="0.2455%" height="15" fill="rgb(244,78,31)" fg:x="822" fg:w="3"/><text x="67.5168%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.25%)</title><rect x="67.2668%" y="421" width="0.2455%" height="15" fill="rgb(241,13,4)" fg:x="822" fg:w="3"/><text x="67.5168%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="67.2668%" y="405" width="0.2455%" height="15" fill="rgb(212,194,26)" fg:x="822" fg:w="3"/><text x="67.5168%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="67.2668%" y="389" width="0.2455%" height="15" fill="rgb(236,80,11)" fg:x="822" fg:w="3"/><text x="67.5168%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.25%)</title><rect x="67.2668%" y="373" width="0.2455%" height="15" fill="rgb(206,1,24)" fg:x="822" fg:w="3"/><text x="67.5168%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="67.2668%" y="357" width="0.2455%" height="15" fill="rgb(238,215,50)" fg:x="822" fg:w="3"/><text x="67.5168%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="67.2668%" y="341" width="0.2455%" height="15" fill="rgb(254,126,32)" fg:x="822" fg:w="3"/><text x="67.5168%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.25%)</title><rect x="67.2668%" y="325" width="0.2455%" height="15" fill="rgb(206,111,53)" fg:x="822" fg:w="3"/><text x="67.5168%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="67.2668%" y="309" width="0.2455%" height="15" fill="rgb(218,72,44)" fg:x="822" fg:w="3"/><text x="67.5168%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="67.2668%" y="293" width="0.2455%" height="15" fill="rgb(238,25,3)" fg:x="822" fg:w="3"/><text x="67.5168%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="67.4304%" y="277" width="0.0818%" height="15" fill="rgb(250,191,7)" fg:x="824" fg:w="1"/><text x="67.6804%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4304%" y="261" width="0.0818%" height="15" fill="rgb(238,56,30)" fg:x="824" fg:w="1"/><text x="67.6804%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.4304%" y="245" width="0.0818%" height="15" fill="rgb(210,27,45)" fg:x="824" fg:w="1"/><text x="67.6804%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="67.4304%" y="229" width="0.0818%" height="15" fill="rgb(207,10,50)" fg:x="824" fg:w="1"/><text x="67.6804%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (19 samples, 1.55%)</title><rect x="66.0393%" y="549" width="1.5548%" height="15" fill="rgb(249,30,23)" fg:x="807" fg:w="19"/><text x="66.2893%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="66.9394%" y="533" width="0.6547%" height="15" fill="rgb(250,80,12)" fg:x="818" fg:w="8"/><text x="67.1894%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="66.9394%" y="517" width="0.6547%" height="15" fill="rgb(210,221,37)" fg:x="818" fg:w="8"/><text x="67.1894%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5123%" y="501" width="0.0818%" height="15" fill="rgb(205,96,24)" fg:x="825" fg:w="1"/><text x="67.7623%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5123%" y="485" width="0.0818%" height="15" fill="rgb(247,104,22)" fg:x="825" fg:w="1"/><text x="67.7623%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.5123%" y="469" width="0.0818%" height="15" fill="rgb(222,61,53)" fg:x="825" fg:w="1"/><text x="67.7623%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5123%" y="453" width="0.0818%" height="15" fill="rgb(241,11,53)" fg:x="825" fg:w="1"/><text x="67.7623%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5941%" y="501" width="0.0818%" height="15" fill="rgb(230,111,47)" fg:x="826" fg:w="1"/><text x="67.8441%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5941%" y="485" width="0.0818%" height="15" fill="rgb(218,187,29)" fg:x="826" fg:w="1"/><text x="67.8441%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5941%" y="469" width="0.0818%" height="15" fill="rgb(210,121,46)" fg:x="826" fg:w="1"/><text x="67.8441%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5941%" y="453" width="0.0818%" height="15" fill="rgb(250,43,19)" fg:x="826" fg:w="1"/><text x="67.8441%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5941%" y="437" width="0.0818%" height="15" fill="rgb(238,61,12)" fg:x="826" fg:w="1"/><text x="67.8441%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.6759%" y="501" width="0.0818%" height="15" fill="rgb(251,198,9)" fg:x="827" fg:w="1"/><text x="67.9259%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (25 samples, 2.05%)</title><rect x="65.7938%" y="581" width="2.0458%" height="15" fill="rgb(214,192,38)" fg:x="804" fg:w="25"/><text x="66.0438%" y="591.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (25 samples, 2.05%)</title><rect x="65.7938%" y="565" width="2.0458%" height="15" fill="rgb(214,73,19)" fg:x="804" fg:w="25"/><text x="66.0438%" y="575.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="67.5941%" y="549" width="0.2455%" height="15" fill="rgb(249,222,49)" fg:x="826" fg:w="3"/><text x="67.8441%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="67.5941%" y="533" width="0.2455%" height="15" fill="rgb(231,181,54)" fg:x="826" fg:w="3"/><text x="67.8441%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="67.5941%" y="517" width="0.2455%" height="15" fill="rgb(240,1,13)" fg:x="826" fg:w="3"/><text x="67.8441%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.7578%" y="501" width="0.0818%" height="15" fill="rgb(225,21,16)" fg:x="828" fg:w="1"/><text x="68.0078%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7578%" y="485" width="0.0818%" height="15" fill="rgb(246,176,50)" fg:x="828" fg:w="1"/><text x="68.0078%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.7578%" y="469" width="0.0818%" height="15" fill="rgb(208,96,50)" fg:x="828" fg:w="1"/><text x="68.0078%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7578%" y="453" width="0.0818%" height="15" fill="rgb(240,219,19)" fg:x="828" fg:w="1"/><text x="68.0078%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8396%" y="421" width="0.0818%" height="15" fill="rgb(234,73,5)" fg:x="829" fg:w="1"/><text x="68.0896%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8396%" y="405" width="0.0818%" height="15" fill="rgb(225,52,53)" fg:x="829" fg:w="1"/><text x="68.0896%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.8396%" y="389" width="0.0818%" height="15" fill="rgb(250,12,14)" fg:x="829" fg:w="1"/><text x="68.0896%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.8396%" y="373" width="0.0818%" height="15" fill="rgb(242,185,54)" fg:x="829" fg:w="1"/><text x="68.0896%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.8396%" y="357" width="0.0818%" height="15" fill="rgb(211,206,31)" fg:x="829" fg:w="1"/><text x="68.0896%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8396%" y="341" width="0.0818%" height="15" fill="rgb(252,10,33)" fg:x="829" fg:w="1"/><text x="68.0896%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8396%" y="325" width="0.0818%" height="15" fill="rgb(216,26,7)" fg:x="829" fg:w="1"/><text x="68.0896%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.8396%" y="309" width="0.0818%" height="15" fill="rgb(228,112,40)" fg:x="829" fg:w="1"/><text x="68.0896%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.8396%" y="293" width="0.0818%" height="15" fill="rgb(212,21,16)" fg:x="829" fg:w="1"/><text x="68.0896%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.8396%" y="277" width="0.0818%" height="15" fill="rgb(249,3,29)" fg:x="829" fg:w="1"/><text x="68.0896%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.8396%" y="261" width="0.0818%" height="15" fill="rgb(221,42,51)" fg:x="829" fg:w="1"/><text x="68.0896%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="67.8396%" y="245" width="0.0818%" height="15" fill="rgb(225,90,21)" fg:x="829" fg:w="1"/><text x="68.0896%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="67.8396%" y="229" width="0.0818%" height="15" fill="rgb(242,131,5)" fg:x="829" fg:w="1"/><text x="68.0896%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="68.0033%" y="293" width="0.0818%" height="15" fill="rgb(220,187,28)" fg:x="831" fg:w="1"/><text x="68.2533%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="68.0033%" y="277" width="0.0818%" height="15" fill="rgb(210,75,48)" fg:x="831" fg:w="1"/><text x="68.2533%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (29 samples, 2.37%)</title><rect x="65.7938%" y="597" width="2.3732%" height="15" fill="rgb(211,91,40)" fg:x="804" fg:w="29"/><text x="66.0438%" y="607.50">&lt;e..</text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.33%)</title><rect x="67.8396%" y="581" width="0.3273%" height="15" fill="rgb(205,43,18)" fg:x="829" fg:w="4"/><text x="68.0896%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.33%)</title><rect x="67.8396%" y="565" width="0.3273%" height="15" fill="rgb(207,123,11)" fg:x="829" fg:w="4"/><text x="68.0896%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.33%)</title><rect x="67.8396%" y="549" width="0.3273%" height="15" fill="rgb(235,89,39)" fg:x="829" fg:w="4"/><text x="68.0896%" y="559.50"></text></g><g><title>core::fmt::write (4 samples, 0.33%)</title><rect x="67.8396%" y="533" width="0.3273%" height="15" fill="rgb(245,217,27)" fg:x="829" fg:w="4"/><text x="68.0896%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.33%)</title><rect x="67.8396%" y="517" width="0.3273%" height="15" fill="rgb(216,55,17)" fg:x="829" fg:w="4"/><text x="68.0896%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.33%)</title><rect x="67.8396%" y="501" width="0.3273%" height="15" fill="rgb(252,116,44)" fg:x="829" fg:w="4"/><text x="68.0896%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.33%)</title><rect x="67.8396%" y="485" width="0.3273%" height="15" fill="rgb(229,153,4)" fg:x="829" fg:w="4"/><text x="68.0896%" y="495.50"></text></g><g><title>core::fmt::write (4 samples, 0.33%)</title><rect x="67.8396%" y="469" width="0.3273%" height="15" fill="rgb(222,24,35)" fg:x="829" fg:w="4"/><text x="68.0896%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.33%)</title><rect x="67.8396%" y="453" width="0.3273%" height="15" fill="rgb(214,26,20)" fg:x="829" fg:w="4"/><text x="68.0896%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (4 samples, 0.33%)</title><rect x="67.8396%" y="437" width="0.3273%" height="15" fill="rgb(215,14,45)" fg:x="829" fg:w="4"/><text x="68.0896%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.25%)</title><rect x="67.9214%" y="421" width="0.2455%" height="15" fill="rgb(217,212,50)" fg:x="830" fg:w="3"/><text x="68.1714%" y="431.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="67.9214%" y="405" width="0.2455%" height="15" fill="rgb(230,172,52)" fg:x="830" fg:w="3"/><text x="68.1714%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="68.0033%" y="389" width="0.1637%" height="15" fill="rgb(210,48,36)" fg:x="831" fg:w="2"/><text x="68.2533%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="68.0033%" y="373" width="0.1637%" height="15" fill="rgb(216,213,32)" fg:x="831" fg:w="2"/><text x="68.2533%" y="383.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="68.0033%" y="357" width="0.1637%" height="15" fill="rgb(237,202,41)" fg:x="831" fg:w="2"/><text x="68.2533%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="68.0033%" y="341" width="0.1637%" height="15" fill="rgb(209,14,29)" fg:x="831" fg:w="2"/><text x="68.2533%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="68.0033%" y="325" width="0.1637%" height="15" fill="rgb(219,29,3)" fg:x="831" fg:w="2"/><text x="68.2533%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="68.0033%" y="309" width="0.1637%" height="15" fill="rgb(229,13,49)" fg:x="831" fg:w="2"/><text x="68.2533%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.0851%" y="293" width="0.0818%" height="15" fill="rgb(210,206,2)" fg:x="832" fg:w="1"/><text x="68.3351%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="68.1669%" y="565" width="0.1637%" height="15" fill="rgb(216,154,46)" fg:x="833" fg:w="2"/><text x="68.4169%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="68.2488%" y="549" width="0.0818%" height="15" fill="rgb(211,170,52)" fg:x="834" fg:w="1"/><text x="68.4988%" y="559.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.25%)</title><rect x="68.1669%" y="597" width="0.2455%" height="15" fill="rgb(233,109,47)" fg:x="833" fg:w="3"/><text x="68.4169%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="68.1669%" y="581" width="0.2455%" height="15" fill="rgb(208,212,30)" fg:x="833" fg:w="3"/><text x="68.4169%" y="591.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="68.3306%" y="565" width="0.0818%" height="15" fill="rgb(215,190,19)" fg:x="835" fg:w="1"/><text x="68.5806%" y="575.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="68.3306%" y="549" width="0.0818%" height="15" fill="rgb(207,164,53)" fg:x="835" fg:w="1"/><text x="68.5806%" y="559.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.33%)</title><rect x="68.4124%" y="597" width="0.3273%" height="15" fill="rgb(213,87,49)" fg:x="836" fg:w="4"/><text x="68.6624%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.33%)</title><rect x="68.4124%" y="581" width="0.3273%" height="15" fill="rgb(241,216,24)" fg:x="836" fg:w="4"/><text x="68.6624%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="68.4124%" y="565" width="0.3273%" height="15" fill="rgb(241,123,45)" fg:x="836" fg:w="4"/><text x="68.6624%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="68.4943%" y="549" width="0.2455%" height="15" fill="rgb(220,36,15)" fg:x="837" fg:w="3"/><text x="68.7443%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="68.4943%" y="533" width="0.2455%" height="15" fill="rgb(215,202,9)" fg:x="837" fg:w="3"/><text x="68.7443%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.5761%" y="517" width="0.1637%" height="15" fill="rgb(252,71,26)" fg:x="838" fg:w="2"/><text x="68.8261%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.5761%" y="501" width="0.1637%" height="15" fill="rgb(243,195,19)" fg:x="838" fg:w="2"/><text x="68.8261%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.6579%" y="485" width="0.0818%" height="15" fill="rgb(207,167,27)" fg:x="839" fg:w="1"/><text x="68.9079%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6579%" y="469" width="0.0818%" height="15" fill="rgb(250,146,54)" fg:x="839" fg:w="1"/><text x="68.9079%" y="479.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (117 samples, 9.57%)</title><rect x="59.3290%" y="613" width="9.5745%" height="15" fill="rgb(245,79,9)" fg:x="725" fg:w="117"/><text x="59.5790%" y="623.50">engine::sessio..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="68.7398%" y="597" width="0.1637%" height="15" fill="rgb(234,197,22)" fg:x="840" fg:w="2"/><text x="68.9898%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="68.7398%" y="581" width="0.1637%" height="15" fill="rgb(221,52,48)" fg:x="840" fg:w="2"/><text x="68.9898%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="68.7398%" y="565" width="0.1637%" height="15" fill="rgb(235,80,0)" fg:x="840" fg:w="2"/><text x="68.9898%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="68.7398%" y="549" width="0.1637%" height="15" fill="rgb(221,117,53)" fg:x="840" fg:w="2"/><text x="68.9898%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="68.7398%" y="533" width="0.1637%" height="15" fill="rgb(239,48,47)" fg:x="840" fg:w="2"/><text x="68.9898%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="68.7398%" y="517" width="0.1637%" height="15" fill="rgb(227,191,52)" fg:x="840" fg:w="2"/><text x="68.9898%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="68.7398%" y="501" width="0.1637%" height="15" fill="rgb(241,118,1)" fg:x="840" fg:w="2"/><text x="68.9898%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="68.7398%" y="485" width="0.1637%" height="15" fill="rgb(240,85,3)" fg:x="840" fg:w="2"/><text x="68.9898%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="68.7398%" y="469" width="0.1637%" height="15" fill="rgb(237,68,37)" fg:x="840" fg:w="2"/><text x="68.9898%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="68.7398%" y="453" width="0.1637%" height="15" fill="rgb(212,9,20)" fg:x="840" fg:w="2"/><text x="68.9898%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="68.8216%" y="437" width="0.0818%" height="15" fill="rgb(218,84,17)" fg:x="841" fg:w="1"/><text x="69.0716%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="68.8216%" y="421" width="0.0818%" height="15" fill="rgb(235,147,20)" fg:x="841" fg:w="1"/><text x="69.0716%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (843 samples, 68.99%)</title><rect x="0.0000%" y="661" width="68.9853%" height="15" fill="rgb(208,224,1)" fg:x="0" fg:w="843"/><text x="0.2500%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (843 samples, 68.99%)</title><rect x="0.0000%" y="645" width="68.9853%" height="15" fill="rgb(232,97,50)" fg:x="0" fg:w="843"/><text x="0.2500%" y="655.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (843 samples, 68.99%)</title><rect x="0.0000%" y="629" width="68.9853%" height="15" fill="rgb(238,15,45)" fg:x="0" fg:w="843"/><text x="0.2500%" y="639.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="68.9034%" y="613" width="0.0818%" height="15" fill="rgb(231,46,18)" fg:x="842" fg:w="1"/><text x="69.1534%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.9034%" y="597" width="0.0818%" height="15" fill="rgb(254,169,10)" fg:x="842" fg:w="1"/><text x="69.1534%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.9034%" y="581" width="0.0818%" height="15" fill="rgb(243,169,30)" fg:x="842" fg:w="1"/><text x="69.1534%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.9034%" y="565" width="0.0818%" height="15" fill="rgb(236,90,49)" fg:x="842" fg:w="1"/><text x="69.1534%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="69.0671%" y="597" width="0.0818%" height="15" fill="rgb(218,80,15)" fg:x="844" fg:w="1"/><text x="69.3171%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.0671%" y="581" width="0.0818%" height="15" fill="rgb(222,115,37)" fg:x="844" fg:w="1"/><text x="69.3171%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.2308%" y="501" width="0.0818%" height="15" fill="rgb(227,0,6)" fg:x="846" fg:w="1"/><text x="69.4808%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="69.3944%" y="485" width="0.1637%" height="15" fill="rgb(217,189,13)" fg:x="848" fg:w="2"/><text x="69.6444%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.4763%" y="469" width="0.0818%" height="15" fill="rgb(220,74,19)" fg:x="849" fg:w="1"/><text x="69.7263%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="69.5581%" y="485" width="0.1637%" height="15" fill="rgb(224,81,18)" fg:x="850" fg:w="2"/><text x="69.8081%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6399%" y="469" width="0.0818%" height="15" fill="rgb(245,178,48)" fg:x="851" fg:w="1"/><text x="69.8899%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.7218%" y="469" width="0.0818%" height="15" fill="rgb(207,78,24)" fg:x="852" fg:w="1"/><text x="69.9718%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.8036%" y="469" width="0.0818%" height="15" fill="rgb(223,222,30)" fg:x="853" fg:w="1"/><text x="70.0536%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8036%" y="453" width="0.0818%" height="15" fill="rgb(234,101,12)" fg:x="853" fg:w="1"/><text x="70.0536%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.74%)</title><rect x="69.2308%" y="517" width="0.7365%" height="15" fill="rgb(209,80,46)" fg:x="846" fg:w="9"/><text x="69.4808%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="69.3126%" y="501" width="0.6547%" height="15" fill="rgb(228,79,14)" fg:x="847" fg:w="8"/><text x="69.5626%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="69.7218%" y="485" width="0.2455%" height="15" fill="rgb(220,219,34)" fg:x="852" fg:w="3"/><text x="69.9718%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.8854%" y="469" width="0.0818%" height="15" fill="rgb(207,80,21)" fg:x="854" fg:w="1"/><text x="70.1354%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8854%" y="453" width="0.0818%" height="15" fill="rgb(210,154,44)" fg:x="854" fg:w="1"/><text x="70.1354%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.82%)</title><rect x="69.2308%" y="549" width="0.8183%" height="15" fill="rgb(246,44,39)" fg:x="846" fg:w="10"/><text x="69.4808%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.82%)</title><rect x="69.2308%" y="533" width="0.8183%" height="15" fill="rgb(252,175,13)" fg:x="846" fg:w="10"/><text x="69.4808%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="69.9673%" y="517" width="0.0818%" height="15" fill="rgb(211,50,39)" fg:x="855" fg:w="1"/><text x="70.2173%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.90%)</title><rect x="69.2308%" y="581" width="0.9002%" height="15" fill="rgb(231,204,27)" fg:x="846" fg:w="11"/><text x="69.4808%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (11 samples, 0.90%)</title><rect x="69.2308%" y="565" width="0.9002%" height="15" fill="rgb(253,26,34)" fg:x="846" fg:w="11"/><text x="69.4808%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="70.0491%" y="549" width="0.0818%" height="15" fill="rgb(207,139,38)" fg:x="856" fg:w="1"/><text x="70.2991%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0491%" y="533" width="0.0818%" height="15" fill="rgb(248,54,27)" fg:x="856" fg:w="1"/><text x="70.2991%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.23%)</title><rect x="68.9853%" y="613" width="1.2275%" height="15" fill="rgb(234,25,33)" fg:x="843" fg:w="15"/><text x="69.2353%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (13 samples, 1.06%)</title><rect x="69.1489%" y="597" width="1.0638%" height="15" fill="rgb(249,107,47)" fg:x="845" fg:w="13"/><text x="69.3989%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1309%" y="581" width="0.0818%" height="15" fill="rgb(230,190,31)" fg:x="857" fg:w="1"/><text x="70.3809%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.2946%" y="549" width="0.0818%" height="15" fill="rgb(238,173,45)" fg:x="859" fg:w="1"/><text x="70.5446%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.2946%" y="533" width="0.0818%" height="15" fill="rgb(222,16,50)" fg:x="859" fg:w="1"/><text x="70.5446%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.2946%" y="517" width="0.0818%" height="15" fill="rgb(251,204,47)" fg:x="859" fg:w="1"/><text x="70.5446%" y="527.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="70.4583%" y="501" width="0.0818%" height="15" fill="rgb(225,12,3)" fg:x="861" fg:w="1"/><text x="70.7083%" y="511.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="70.4583%" y="485" width="0.0818%" height="15" fill="rgb(214,208,22)" fg:x="861" fg:w="1"/><text x="70.7083%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="70.4583%" y="469" width="0.0818%" height="15" fill="rgb(240,57,32)" fg:x="861" fg:w="1"/><text x="70.7083%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="70.4583%" y="453" width="0.0818%" height="15" fill="rgb(243,113,48)" fg:x="861" fg:w="1"/><text x="70.7083%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="70.4583%" y="437" width="0.0818%" height="15" fill="rgb(225,135,30)" fg:x="861" fg:w="1"/><text x="70.7083%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="70.4583%" y="421" width="0.0818%" height="15" fill="rgb(222,3,53)" fg:x="861" fg:w="1"/><text x="70.7083%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.4583%" y="405" width="0.0818%" height="15" fill="rgb(243,142,2)" fg:x="861" fg:w="1"/><text x="70.7083%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.4583%" y="389" width="0.0818%" height="15" fill="rgb(233,67,14)" fg:x="861" fg:w="1"/><text x="70.7083%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.4583%" y="373" width="0.0818%" height="15" fill="rgb(245,125,36)" fg:x="861" fg:w="1"/><text x="70.7083%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.4583%" y="357" width="0.0818%" height="15" fill="rgb(225,199,6)" fg:x="861" fg:w="1"/><text x="70.7083%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.4583%" y="341" width="0.0818%" height="15" fill="rgb(244,71,6)" fg:x="861" fg:w="1"/><text x="70.7083%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.4583%" y="325" width="0.0818%" height="15" fill="rgb(225,62,9)" fg:x="861" fg:w="1"/><text x="70.7083%" y="335.50"></text></g><g><title>libloading::safe::Library::new (13 samples, 1.06%)</title><rect x="70.3764%" y="517" width="1.0638%" height="15" fill="rgb(246,139,53)" fg:x="860" fg:w="13"/><text x="70.6264%" y="527.50"></text></g><g><title>dlopen (11 samples, 0.90%)</title><rect x="70.5401%" y="501" width="0.9002%" height="15" fill="rgb(243,161,46)" fg:x="862" fg:w="11"/><text x="70.7901%" y="511.50"></text></g><g><title>_dl_catch_error (11 samples, 0.90%)</title><rect x="70.5401%" y="485" width="0.9002%" height="15" fill="rgb(236,153,7)" fg:x="862" fg:w="11"/><text x="70.7901%" y="495.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.90%)</title><rect x="70.5401%" y="469" width="0.9002%" height="15" fill="rgb(248,42,35)" fg:x="862" fg:w="11"/><text x="70.7901%" y="479.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.90%)</title><rect x="70.5401%" y="453" width="0.9002%" height="15" fill="rgb(250,17,31)" fg:x="862" fg:w="11"/><text x="70.7901%" y="463.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.90%)</title><rect x="70.5401%" y="437" width="0.9002%" height="15" fill="rgb(248,138,14)" fg:x="862" fg:w="11"/><text x="70.7901%" y="447.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (14 samples, 1.15%)</title><rect x="70.3764%" y="549" width="1.1457%" height="15" fill="rgb(228,161,3)" fg:x="860" fg:w="14"/><text x="70.6264%" y="559.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (14 samples, 1.15%)</title><rect x="70.3764%" y="533" width="1.1457%" height="15" fill="rgb(248,116,17)" fg:x="860" fg:w="14"/><text x="70.6264%" y="543.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="71.4403%" y="517" width="0.0818%" height="15" fill="rgb(207,78,24)" fg:x="873" fg:w="1"/><text x="71.6903%" y="527.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="71.4403%" y="501" width="0.0818%" height="15" fill="rgb(234,99,48)" fg:x="873" fg:w="1"/><text x="71.6903%" y="511.50"></text></g><g><title>engine::session::Session::initialize (16 samples, 1.31%)</title><rect x="70.2946%" y="565" width="1.3093%" height="15" fill="rgb(242,22,26)" fg:x="859" fg:w="16"/><text x="70.5446%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="71.5221%" y="549" width="0.0818%" height="15" fill="rgb(227,78,32)" fg:x="874" fg:w="1"/><text x="71.7721%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.5221%" y="533" width="0.0818%" height="15" fill="rgb(226,189,43)" fg:x="874" fg:w="1"/><text x="71.7721%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.5221%" y="517" width="0.0818%" height="15" fill="rgb(227,218,35)" fg:x="874" fg:w="1"/><text x="71.7721%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.5221%" y="501" width="0.0818%" height="15" fill="rgb(206,111,40)" fg:x="874" fg:w="1"/><text x="71.7721%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.5221%" y="485" width="0.0818%" height="15" fill="rgb(208,217,22)" fg:x="874" fg:w="1"/><text x="71.7721%" y="495.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (18 samples, 1.47%)</title><rect x="70.2128%" y="613" width="1.4730%" height="15" fill="rgb(248,20,20)" fg:x="858" fg:w="18"/><text x="70.4628%" y="623.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (18 samples, 1.47%)</title><rect x="70.2128%" y="597" width="1.4730%" height="15" fill="rgb(239,155,16)" fg:x="858" fg:w="18"/><text x="70.4628%" y="607.50"></text></g><g><title>engine::session::Session::new (17 samples, 1.39%)</title><rect x="70.2946%" y="581" width="1.3912%" height="15" fill="rgb(238,171,46)" fg:x="859" fg:w="17"/><text x="70.5446%" y="591.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="71.6039%" y="565" width="0.0818%" height="15" fill="rgb(248,11,36)" fg:x="875" fg:w="1"/><text x="71.8539%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.6039%" y="549" width="0.0818%" height="15" fill="rgb(220,148,37)" fg:x="875" fg:w="1"/><text x="71.8539%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="71.7676%" y="597" width="0.0818%" height="15" fill="rgb(218,144,42)" fg:x="877" fg:w="1"/><text x="72.0176%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.8494%" y="597" width="0.0818%" height="15" fill="rgb(245,20,20)" fg:x="878" fg:w="1"/><text x="72.0994%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.8494%" y="581" width="0.0818%" height="15" fill="rgb(240,111,48)" fg:x="878" fg:w="1"/><text x="72.0994%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.9313%" y="565" width="0.1637%" height="15" fill="rgb(237,225,32)" fg:x="879" fg:w="2"/><text x="72.1813%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.9313%" y="549" width="0.1637%" height="15" fill="rgb(228,161,46)" fg:x="879" fg:w="2"/><text x="72.1813%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="71.9313%" y="533" width="0.1637%" height="15" fill="rgb(235,196,21)" fg:x="879" fg:w="2"/><text x="72.1813%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="71.9313%" y="517" width="0.1637%" height="15" fill="rgb(250,133,21)" fg:x="879" fg:w="2"/><text x="72.1813%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="71.9313%" y="501" width="0.1637%" height="15" fill="rgb(236,94,32)" fg:x="879" fg:w="2"/><text x="72.1813%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.9313%" y="485" width="0.1637%" height="15" fill="rgb(219,176,25)" fg:x="879" fg:w="2"/><text x="72.1813%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.9313%" y="469" width="0.1637%" height="15" fill="rgb(211,17,43)" fg:x="879" fg:w="2"/><text x="72.1813%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="71.9313%" y="453" width="0.1637%" height="15" fill="rgb(220,75,23)" fg:x="879" fg:w="2"/><text x="72.1813%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="71.9313%" y="437" width="0.1637%" height="15" fill="rgb(215,122,32)" fg:x="879" fg:w="2"/><text x="72.1813%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="71.9313%" y="421" width="0.1637%" height="15" fill="rgb(218,57,38)" fg:x="879" fg:w="2"/><text x="72.1813%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="71.9313%" y="405" width="0.1637%" height="15" fill="rgb(233,208,46)" fg:x="879" fg:w="2"/><text x="72.1813%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.9313%" y="389" width="0.1637%" height="15" fill="rgb(221,35,50)" fg:x="879" fg:w="2"/><text x="72.1813%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.25%)</title><rect x="71.9313%" y="581" width="0.2455%" height="15" fill="rgb(229,213,29)" fg:x="879" fg:w="3"/><text x="72.1813%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0949%" y="565" width="0.0818%" height="15" fill="rgb(229,110,40)" fg:x="881" fg:w="1"/><text x="72.3449%" y="575.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="72.1768%" y="581" width="0.0818%" height="15" fill="rgb(247,206,19)" fg:x="882" fg:w="1"/><text x="72.4268%" y="591.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="72.1768%" y="565" width="0.0818%" height="15" fill="rgb(216,229,45)" fg:x="882" fg:w="1"/><text x="72.4268%" y="575.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="72.1768%" y="549" width="0.0818%" height="15" fill="rgb(205,184,31)" fg:x="882" fg:w="1"/><text x="72.4268%" y="559.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="72.1768%" y="533" width="0.0818%" height="15" fill="rgb(213,91,10)" fg:x="882" fg:w="1"/><text x="72.4268%" y="543.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="72.1768%" y="517" width="0.0818%" height="15" fill="rgb(250,49,8)" fg:x="882" fg:w="1"/><text x="72.4268%" y="527.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="72.1768%" y="501" width="0.0818%" height="15" fill="rgb(207,26,8)" fg:x="882" fg:w="1"/><text x="72.4268%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="72.1768%" y="485" width="0.0818%" height="15" fill="rgb(224,2,13)" fg:x="882" fg:w="1"/><text x="72.4268%" y="495.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="72.1768%" y="469" width="0.0818%" height="15" fill="rgb(219,108,27)" fg:x="882" fg:w="1"/><text x="72.4268%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="72.3404%" y="549" width="0.0818%" height="15" fill="rgb(240,89,32)" fg:x="884" fg:w="1"/><text x="72.5904%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="72.4223%" y="533" width="0.0818%" height="15" fill="rgb(248,205,3)" fg:x="885" fg:w="1"/><text x="72.6723%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.4223%" y="517" width="0.0818%" height="15" fill="rgb(236,197,47)" fg:x="885" fg:w="1"/><text x="72.6723%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.4223%" y="501" width="0.0818%" height="15" fill="rgb(244,185,52)" fg:x="885" fg:w="1"/><text x="72.6723%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="72.5859%" y="501" width="0.3273%" height="15" fill="rgb(210,206,23)" fg:x="887" fg:w="4"/><text x="72.8359%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="72.5859%" y="485" width="0.3273%" height="15" fill="rgb(251,177,30)" fg:x="887" fg:w="4"/><text x="72.8359%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="72.6678%" y="469" width="0.2455%" height="15" fill="rgb(243,27,45)" fg:x="888" fg:w="3"/><text x="72.9178%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="72.6678%" y="453" width="0.2455%" height="15" fill="rgb(248,141,51)" fg:x="888" fg:w="3"/><text x="72.9178%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="72.9951%" y="485" width="0.3273%" height="15" fill="rgb(235,102,15)" fg:x="892" fg:w="4"/><text x="73.2451%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="73.0769%" y="469" width="0.2455%" height="15" fill="rgb(214,164,53)" fg:x="893" fg:w="3"/><text x="73.3269%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="73.0769%" y="453" width="0.2455%" height="15" fill="rgb(228,18,51)" fg:x="893" fg:w="3"/><text x="73.3269%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="73.1588%" y="437" width="0.1637%" height="15" fill="rgb(205,211,11)" fg:x="894" fg:w="2"/><text x="73.4088%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="73.3224%" y="469" width="0.3273%" height="15" fill="rgb(208,63,6)" fg:x="896" fg:w="4"/><text x="73.5724%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="73.4043%" y="453" width="0.2455%" height="15" fill="rgb(245,76,14)" fg:x="897" fg:w="3"/><text x="73.6543%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.5679%" y="437" width="0.0818%" height="15" fill="rgb(234,176,34)" fg:x="899" fg:w="1"/><text x="73.8179%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5679%" y="421" width="0.0818%" height="15" fill="rgb(243,156,42)" fg:x="899" fg:w="1"/><text x="73.8179%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.5679%" y="405" width="0.0818%" height="15" fill="rgb(237,182,10)" fg:x="899" fg:w="1"/><text x="73.8179%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.5679%" y="389" width="0.0818%" height="15" fill="rgb(244,117,0)" fg:x="899" fg:w="1"/><text x="73.8179%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.5679%" y="373" width="0.0818%" height="15" fill="rgb(239,91,50)" fg:x="899" fg:w="1"/><text x="73.8179%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.7316%" y="437" width="0.0818%" height="15" fill="rgb(206,38,9)" fg:x="901" fg:w="1"/><text x="73.9816%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.7316%" y="421" width="0.0818%" height="15" fill="rgb(205,25,10)" fg:x="901" fg:w="1"/><text x="73.9816%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.7316%" y="405" width="0.0818%" height="15" fill="rgb(206,224,7)" fg:x="901" fg:w="1"/><text x="73.9816%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="73.7316%" y="389" width="0.0818%" height="15" fill="rgb(227,157,10)" fg:x="901" fg:w="1"/><text x="73.9816%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.8134%" y="421" width="0.0818%" height="15" fill="rgb(214,157,37)" fg:x="902" fg:w="1"/><text x="74.0634%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.8953%" y="421" width="0.0818%" height="15" fill="rgb(209,180,35)" fg:x="903" fg:w="1"/><text x="74.1453%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.8953%" y="405" width="0.0818%" height="15" fill="rgb(216,174,49)" fg:x="903" fg:w="1"/><text x="74.1453%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.9771%" y="421" width="0.1637%" height="15" fill="rgb(205,96,20)" fg:x="904" fg:w="2"/><text x="74.2271%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.0589%" y="405" width="0.0818%" height="15" fill="rgb(214,220,39)" fg:x="905" fg:w="1"/><text x="74.3089%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.0589%" y="389" width="0.0818%" height="15" fill="rgb(245,126,30)" fg:x="905" fg:w="1"/><text x="74.3089%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.0589%" y="373" width="0.0818%" height="15" fill="rgb(215,88,33)" fg:x="905" fg:w="1"/><text x="74.3089%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.0589%" y="357" width="0.0818%" height="15" fill="rgb(210,1,49)" fg:x="905" fg:w="1"/><text x="74.3089%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.0589%" y="341" width="0.0818%" height="15" fill="rgb(207,133,3)" fg:x="905" fg:w="1"/><text x="74.3089%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.0589%" y="325" width="0.0818%" height="15" fill="rgb(231,47,43)" fg:x="905" fg:w="1"/><text x="74.3089%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.0589%" y="309" width="0.0818%" height="15" fill="rgb(245,64,1)" fg:x="905" fg:w="1"/><text x="74.3089%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="73.8134%" y="437" width="0.4092%" height="15" fill="rgb(253,145,20)" fg:x="902" fg:w="5"/><text x="74.0634%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.1408%" y="421" width="0.0818%" height="15" fill="rgb(211,39,18)" fg:x="906" fg:w="1"/><text x="74.3908%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="73.7316%" y="453" width="0.5728%" height="15" fill="rgb(223,225,18)" fg:x="901" fg:w="7"/><text x="73.9816%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.2226%" y="437" width="0.0818%" height="15" fill="rgb(210,202,44)" fg:x="907" fg:w="1"/><text x="74.4726%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.06%)</title><rect x="73.3224%" y="485" width="1.0638%" height="15" fill="rgb(231,138,36)" fg:x="896" fg:w="13"/><text x="73.5724%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.74%)</title><rect x="73.6498%" y="469" width="0.7365%" height="15" fill="rgb(237,115,25)" fg:x="900" fg:w="9"/><text x="73.8998%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.3044%" y="453" width="0.0818%" height="15" fill="rgb(215,53,48)" fg:x="908" fg:w="1"/><text x="74.5544%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (25 samples, 2.05%)</title><rect x="72.5859%" y="517" width="2.0458%" height="15" fill="rgb(243,193,24)" fg:x="887" fg:w="25"/><text x="72.8359%" y="527.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.72%)</title><rect x="72.9133%" y="501" width="1.7185%" height="15" fill="rgb(210,106,28)" fg:x="891" fg:w="21"/><text x="73.1633%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="74.3863%" y="485" width="0.2455%" height="15" fill="rgb(249,192,0)" fg:x="909" fg:w="3"/><text x="74.6363%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.4681%" y="469" width="0.1637%" height="15" fill="rgb(224,96,21)" fg:x="910" fg:w="2"/><text x="74.7181%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="74.4681%" y="453" width="0.1637%" height="15" fill="rgb(243,160,19)" fg:x="910" fg:w="2"/><text x="74.7181%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="74.4681%" y="437" width="0.1637%" height="15" fill="rgb(219,205,50)" fg:x="910" fg:w="2"/><text x="74.7181%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="74.4681%" y="421" width="0.1637%" height="15" fill="rgb(218,175,44)" fg:x="910" fg:w="2"/><text x="74.7181%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="74.4681%" y="405" width="0.1637%" height="15" fill="rgb(251,84,47)" fg:x="910" fg:w="2"/><text x="74.7181%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6318%" y="469" width="0.0818%" height="15" fill="rgb(241,14,16)" fg:x="912" fg:w="1"/><text x="74.8818%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="74.6318%" y="517" width="0.2455%" height="15" fill="rgb(207,142,28)" fg:x="912" fg:w="3"/><text x="74.8818%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.25%)</title><rect x="74.6318%" y="501" width="0.2455%" height="15" fill="rgb(208,116,22)" fg:x="912" fg:w="3"/><text x="74.8818%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="74.6318%" y="485" width="0.2455%" height="15" fill="rgb(210,0,43)" fg:x="912" fg:w="3"/><text x="74.8818%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="74.7136%" y="469" width="0.1637%" height="15" fill="rgb(246,33,21)" fg:x="913" fg:w="2"/><text x="74.9636%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="74.7136%" y="453" width="0.1637%" height="15" fill="rgb(208,158,54)" fg:x="913" fg:w="2"/><text x="74.9636%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="74.7954%" y="437" width="0.0818%" height="15" fill="rgb(218,99,29)" fg:x="914" fg:w="1"/><text x="75.0454%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="74.8773%" y="501" width="0.0818%" height="15" fill="rgb(226,29,7)" fg:x="915" fg:w="1"/><text x="75.1273%" y="511.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="74.8773%" y="485" width="0.0818%" height="15" fill="rgb(206,178,46)" fg:x="915" fg:w="1"/><text x="75.1273%" y="495.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="74.8773%" y="469" width="0.0818%" height="15" fill="rgb(205,169,32)" fg:x="915" fg:w="1"/><text x="75.1273%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.8773%" y="453" width="0.0818%" height="15" fill="rgb(217,4,13)" fg:x="915" fg:w="1"/><text x="75.1273%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.0409%" y="469" width="0.1637%" height="15" fill="rgb(210,140,37)" fg:x="917" fg:w="2"/><text x="75.2909%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1227%" y="453" width="0.0818%" height="15" fill="rgb(229,80,10)" fg:x="918" fg:w="1"/><text x="75.3727%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="75.1227%" y="437" width="0.0818%" height="15" fill="rgb(212,175,34)" fg:x="918" fg:w="1"/><text x="75.3727%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="75.2046%" y="469" width="0.0818%" height="15" fill="rgb(216,207,24)" fg:x="919" fg:w="1"/><text x="75.4546%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="75.2864%" y="469" width="0.0818%" height="15" fill="rgb(234,163,3)" fg:x="920" fg:w="1"/><text x="75.5364%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.2864%" y="453" width="0.0818%" height="15" fill="rgb(248,101,16)" fg:x="920" fg:w="1"/><text x="75.5364%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2864%" y="437" width="0.0818%" height="15" fill="rgb(209,152,54)" fg:x="920" fg:w="1"/><text x="75.5364%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.3682%" y="421" width="0.1637%" height="15" fill="rgb(229,124,51)" fg:x="921" fg:w="2"/><text x="75.6182%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.6137%" y="389" width="0.1637%" height="15" fill="rgb(219,83,18)" fg:x="924" fg:w="2"/><text x="75.8637%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.6956%" y="373" width="0.0818%" height="15" fill="rgb(206,29,38)" fg:x="925" fg:w="1"/><text x="75.9456%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6956%" y="357" width="0.0818%" height="15" fill="rgb(245,123,23)" fg:x="925" fg:w="1"/><text x="75.9456%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.7774%" y="341" width="0.0818%" height="15" fill="rgb(238,50,33)" fg:x="926" fg:w="1"/><text x="76.0274%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="75.7774%" y="373" width="0.1637%" height="15" fill="rgb(234,165,23)" fg:x="926" fg:w="2"/><text x="76.0274%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.7774%" y="357" width="0.1637%" height="15" fill="rgb(211,82,31)" fg:x="926" fg:w="2"/><text x="76.0274%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8592%" y="341" width="0.0818%" height="15" fill="rgb(224,166,46)" fg:x="927" fg:w="1"/><text x="76.1092%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="75.3682%" y="437" width="0.6547%" height="15" fill="rgb(211,13,8)" fg:x="921" fg:w="8"/><text x="75.6182%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="75.5319%" y="421" width="0.4910%" height="15" fill="rgb(212,7,42)" fg:x="923" fg:w="6"/><text x="75.7819%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="75.5319%" y="405" width="0.4910%" height="15" fill="rgb(249,102,19)" fg:x="923" fg:w="6"/><text x="75.7819%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="75.7774%" y="389" width="0.2455%" height="15" fill="rgb(225,41,13)" fg:x="926" fg:w="3"/><text x="76.0274%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9411%" y="373" width="0.0818%" height="15" fill="rgb(220,65,27)" fg:x="928" fg:w="1"/><text x="76.1911%" y="383.50"></text></g><g><title>engine::session::Session::flush (51 samples, 4.17%)</title><rect x="71.9313%" y="597" width="4.1735%" height="15" fill="rgb(206,4,41)" fg:x="879" fg:w="51"/><text x="72.1813%" y="607.50">engin..</text></g><g><title>engine::session::state::State::close (47 samples, 3.85%)</title><rect x="72.2586%" y="581" width="3.8462%" height="15" fill="rgb(219,60,39)" fg:x="883" fg:w="47"/><text x="72.5086%" y="591.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (46 samples, 3.76%)</title><rect x="72.3404%" y="565" width="3.7643%" height="15" fill="rgb(226,4,38)" fg:x="884" fg:w="46"/><text x="72.5904%" y="575.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (45 samples, 3.68%)</title><rect x="72.4223%" y="549" width="3.6825%" height="15" fill="rgb(250,52,3)" fg:x="885" fg:w="45"/><text x="72.6723%" y="559.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (44 samples, 3.60%)</title><rect x="72.5041%" y="533" width="3.6007%" height="15" fill="rgb(234,93,0)" fg:x="886" fg:w="44"/><text x="72.7541%" y="543.50">engi..</text></g><g><title>kernel::model::any_entity_changes (15 samples, 1.23%)</title><rect x="74.8773%" y="517" width="1.2275%" height="15" fill="rgb(251,47,47)" fg:x="915" fg:w="15"/><text x="75.1273%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.15%)</title><rect x="74.9591%" y="501" width="1.1457%" height="15" fill="rgb(205,166,47)" fg:x="916" fg:w="14"/><text x="75.2091%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.15%)</title><rect x="74.9591%" y="485" width="1.1457%" height="15" fill="rgb(231,148,8)" fg:x="916" fg:w="14"/><text x="75.2091%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.74%)</title><rect x="75.3682%" y="469" width="0.7365%" height="15" fill="rgb(244,185,19)" fg:x="921" fg:w="9"/><text x="75.6182%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.74%)</title><rect x="75.3682%" y="453" width="0.7365%" height="15" fill="rgb(224,201,45)" fg:x="921" fg:w="9"/><text x="75.6182%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.0229%" y="437" width="0.0818%" height="15" fill="rgb(240,77,39)" fg:x="929" fg:w="1"/><text x="76.2729%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0229%" y="421" width="0.0818%" height="15" fill="rgb(248,211,29)" fg:x="929" fg:w="1"/><text x="76.2729%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="76.1047%" y="565" width="0.1637%" height="15" fill="rgb(232,214,46)" fg:x="930" fg:w="2"/><text x="76.3547%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="76.1047%" y="549" width="0.1637%" height="15" fill="rgb(213,99,54)" fg:x="930" fg:w="2"/><text x="76.3547%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="76.1047%" y="533" width="0.1637%" height="15" fill="rgb(240,19,46)" fg:x="930" fg:w="2"/><text x="76.3547%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="517" width="0.1637%" height="15" fill="rgb(243,89,10)" fg:x="930" fg:w="2"/><text x="76.3547%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.1047%" y="501" width="0.1637%" height="15" fill="rgb(249,28,32)" fg:x="930" fg:w="2"/><text x="76.3547%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="485" width="0.1637%" height="15" fill="rgb(253,30,9)" fg:x="930" fg:w="2"/><text x="76.3547%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="469" width="0.1637%" height="15" fill="rgb(217,2,26)" fg:x="930" fg:w="2"/><text x="76.3547%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="453" width="0.1637%" height="15" fill="rgb(220,28,10)" fg:x="930" fg:w="2"/><text x="76.3547%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.1047%" y="437" width="0.1637%" height="15" fill="rgb(228,167,49)" fg:x="930" fg:w="2"/><text x="76.3547%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="421" width="0.1637%" height="15" fill="rgb(238,212,3)" fg:x="930" fg:w="2"/><text x="76.3547%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="405" width="0.1637%" height="15" fill="rgb(229,134,44)" fg:x="930" fg:w="2"/><text x="76.3547%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="389" width="0.1637%" height="15" fill="rgb(208,71,4)" fg:x="930" fg:w="2"/><text x="76.3547%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.1047%" y="373" width="0.1637%" height="15" fill="rgb(221,205,45)" fg:x="930" fg:w="2"/><text x="76.3547%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="357" width="0.1637%" height="15" fill="rgb(215,132,38)" fg:x="930" fg:w="2"/><text x="76.3547%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="341" width="0.1637%" height="15" fill="rgb(227,158,6)" fg:x="930" fg:w="2"/><text x="76.3547%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="325" width="0.1637%" height="15" fill="rgb(250,10,38)" fg:x="930" fg:w="2"/><text x="76.3547%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.1047%" y="309" width="0.1637%" height="15" fill="rgb(225,171,40)" fg:x="930" fg:w="2"/><text x="76.3547%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="76.1047%" y="293" width="0.1637%" height="15" fill="rgb(238,17,43)" fg:x="930" fg:w="2"/><text x="76.3547%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.1047%" y="277" width="0.1637%" height="15" fill="rgb(208,145,4)" fg:x="930" fg:w="2"/><text x="76.3547%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.1047%" y="261" width="0.1637%" height="15" fill="rgb(232,82,7)" fg:x="930" fg:w="2"/><text x="76.3547%" y="271.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="76.1047%" y="245" width="0.1637%" height="15" fill="rgb(205,166,38)" fg:x="930" fg:w="2"/><text x="76.3547%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="76.1047%" y="229" width="0.1637%" height="15" fill="rgb(240,228,4)" fg:x="930" fg:w="2"/><text x="76.3547%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="76.1047%" y="213" width="0.1637%" height="15" fill="rgb(233,121,40)" fg:x="930" fg:w="2"/><text x="76.3547%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="76.1047%" y="197" width="0.1637%" height="15" fill="rgb(243,84,30)" fg:x="930" fg:w="2"/><text x="76.3547%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="76.1047%" y="181" width="0.1637%" height="15" fill="rgb(235,81,48)" fg:x="930" fg:w="2"/><text x="76.3547%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="76.1047%" y="165" width="0.1637%" height="15" fill="rgb(218,137,0)" fg:x="930" fg:w="2"/><text x="76.3547%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="76.1047%" y="149" width="0.1637%" height="15" fill="rgb(223,151,48)" fg:x="930" fg:w="2"/><text x="76.3547%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="76.1047%" y="133" width="0.1637%" height="15" fill="rgb(247,30,19)" fg:x="930" fg:w="2"/><text x="76.3547%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="76.1047%" y="117" width="0.1637%" height="15" fill="rgb(205,129,29)" fg:x="930" fg:w="2"/><text x="76.3547%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="76.1047%" y="101" width="0.1637%" height="15" fill="rgb(222,29,2)" fg:x="930" fg:w="2"/><text x="76.3547%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="76.1047%" y="85" width="0.1637%" height="15" fill="rgb(232,145,33)" fg:x="930" fg:w="2"/><text x="76.3547%" y="95.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="76.1047%" y="69" width="0.1637%" height="15" fill="rgb(217,30,31)" fg:x="930" fg:w="2"/><text x="76.3547%" y="79.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="76.1047%" y="53" width="0.1637%" height="15" fill="rgb(243,22,52)" fg:x="930" fg:w="2"/><text x="76.3547%" y="63.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="76.2684%" y="565" width="0.0818%" height="15" fill="rgb(254,228,14)" fg:x="932" fg:w="1"/><text x="76.5184%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.2684%" y="549" width="0.0818%" height="15" fill="rgb(231,45,50)" fg:x="932" fg:w="1"/><text x="76.5184%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.2684%" y="533" width="0.0818%" height="15" fill="rgb(248,125,3)" fg:x="932" fg:w="1"/><text x="76.5184%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.2684%" y="517" width="0.0818%" height="15" fill="rgb(213,76,9)" fg:x="932" fg:w="1"/><text x="76.5184%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2684%" y="501" width="0.0818%" height="15" fill="rgb(238,108,21)" fg:x="932" fg:w="1"/><text x="76.5184%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2684%" y="485" width="0.0818%" height="15" fill="rgb(229,214,19)" fg:x="932" fg:w="1"/><text x="76.5184%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="76.3502%" y="533" width="0.0818%" height="15" fill="rgb(252,201,5)" fg:x="933" fg:w="1"/><text x="76.6002%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="76.3502%" y="517" width="0.0818%" height="15" fill="rgb(233,165,49)" fg:x="933" fg:w="1"/><text x="76.6002%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.3502%" y="501" width="0.0818%" height="15" fill="rgb(208,165,19)" fg:x="933" fg:w="1"/><text x="76.6002%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3502%" y="485" width="0.0818%" height="15" fill="rgb(216,220,31)" fg:x="933" fg:w="1"/><text x="76.6002%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.3502%" y="469" width="0.0818%" height="15" fill="rgb(214,8,31)" fg:x="933" fg:w="1"/><text x="76.6002%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3502%" y="453" width="0.0818%" height="15" fill="rgb(220,32,32)" fg:x="933" fg:w="1"/><text x="76.6002%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.3502%" y="437" width="0.0818%" height="15" fill="rgb(237,172,34)" fg:x="933" fg:w="1"/><text x="76.6002%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="76.3502%" y="421" width="0.0818%" height="15" fill="rgb(240,209,5)" fg:x="933" fg:w="1"/><text x="76.6002%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3502%" y="405" width="0.0818%" height="15" fill="rgb(221,219,1)" fg:x="933" fg:w="1"/><text x="76.6002%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.3502%" y="389" width="0.0818%" height="15" fill="rgb(237,90,36)" fg:x="933" fg:w="1"/><text x="76.6002%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3502%" y="373" width="0.0818%" height="15" fill="rgb(245,14,51)" fg:x="933" fg:w="1"/><text x="76.6002%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="76.3502%" y="549" width="0.1637%" height="15" fill="rgb(211,71,49)" fg:x="933" fg:w="2"/><text x="76.6002%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="76.4321%" y="533" width="0.0818%" height="15" fill="rgb(230,223,9)" fg:x="934" fg:w="1"/><text x="76.6821%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4321%" y="517" width="0.0818%" height="15" fill="rgb(212,33,31)" fg:x="934" fg:w="1"/><text x="76.6821%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4321%" y="501" width="0.0818%" height="15" fill="rgb(218,141,5)" fg:x="934" fg:w="1"/><text x="76.6821%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.4321%" y="485" width="0.0818%" height="15" fill="rgb(239,194,8)" fg:x="934" fg:w="1"/><text x="76.6821%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.4321%" y="469" width="0.0818%" height="15" fill="rgb(225,119,29)" fg:x="934" fg:w="1"/><text x="76.6821%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.4321%" y="453" width="0.0818%" height="15" fill="rgb(233,32,3)" fg:x="934" fg:w="1"/><text x="76.6821%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.4321%" y="437" width="0.0818%" height="15" fill="rgb(248,126,40)" fg:x="934" fg:w="1"/><text x="76.6821%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.4321%" y="421" width="0.0818%" height="15" fill="rgb(213,102,53)" fg:x="934" fg:w="1"/><text x="76.6821%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.4321%" y="405" width="0.0818%" height="15" fill="rgb(212,69,15)" fg:x="934" fg:w="1"/><text x="76.6821%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.4321%" y="389" width="0.0818%" height="15" fill="rgb(253,39,34)" fg:x="934" fg:w="1"/><text x="76.6821%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.4321%" y="373" width="0.0818%" height="15" fill="rgb(205,189,54)" fg:x="934" fg:w="1"/><text x="76.6821%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.4321%" y="357" width="0.0818%" height="15" fill="rgb(234,229,45)" fg:x="934" fg:w="1"/><text x="76.6821%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4321%" y="341" width="0.0818%" height="15" fill="rgb(243,79,48)" fg:x="934" fg:w="1"/><text x="76.6821%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.57%)</title><rect x="76.1047%" y="581" width="0.5728%" height="15" fill="rgb(206,71,50)" fg:x="930" fg:w="7"/><text x="76.3547%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="76.3502%" y="565" width="0.3273%" height="15" fill="rgb(209,32,17)" fg:x="933" fg:w="4"/><text x="76.6002%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="76.5139%" y="549" width="0.1637%" height="15" fill="rgb(219,229,6)" fg:x="935" fg:w="2"/><text x="76.7639%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.5139%" y="533" width="0.1637%" height="15" fill="rgb(226,25,27)" fg:x="935" fg:w="2"/><text x="76.7639%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.5139%" y="517" width="0.1637%" height="15" fill="rgb(218,185,23)" fg:x="935" fg:w="2"/><text x="76.7639%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="76.5139%" y="501" width="0.1637%" height="15" fill="rgb(242,123,5)" fg:x="935" fg:w="2"/><text x="76.7639%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="76.5139%" y="485" width="0.1637%" height="15" fill="rgb(215,53,19)" fg:x="935" fg:w="2"/><text x="76.7639%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="76.6776%" y="517" width="0.0818%" height="15" fill="rgb(233,20,30)" fg:x="937" fg:w="1"/><text x="76.9276%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.7594%" y="421" width="0.0818%" height="15" fill="rgb(209,67,20)" fg:x="938" fg:w="1"/><text x="77.0094%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7594%" y="405" width="0.0818%" height="15" fill="rgb(227,181,50)" fg:x="938" fg:w="1"/><text x="77.0094%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="76.6776%" y="533" width="0.2455%" height="15" fill="rgb(252,75,38)" fg:x="937" fg:w="3"/><text x="76.9276%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.7594%" y="517" width="0.1637%" height="15" fill="rgb(235,9,33)" fg:x="938" fg:w="2"/><text x="77.0094%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.7594%" y="501" width="0.1637%" height="15" fill="rgb(208,87,30)" fg:x="938" fg:w="2"/><text x="77.0094%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.7594%" y="485" width="0.1637%" height="15" fill="rgb(215,199,39)" fg:x="938" fg:w="2"/><text x="77.0094%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.7594%" y="469" width="0.1637%" height="15" fill="rgb(246,208,12)" fg:x="938" fg:w="2"/><text x="77.0094%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.7594%" y="453" width="0.1637%" height="15" fill="rgb(206,195,10)" fg:x="938" fg:w="2"/><text x="77.0094%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.7594%" y="437" width="0.1637%" height="15" fill="rgb(244,1,30)" fg:x="938" fg:w="2"/><text x="77.0094%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.8412%" y="421" width="0.0818%" height="15" fill="rgb(230,83,5)" fg:x="939" fg:w="1"/><text x="77.0912%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8412%" y="405" width="0.0818%" height="15" fill="rgb(239,62,17)" fg:x="939" fg:w="1"/><text x="77.0912%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.8412%" y="389" width="0.0818%" height="15" fill="rgb(252,193,41)" fg:x="939" fg:w="1"/><text x="77.0912%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.8412%" y="373" width="0.0818%" height="15" fill="rgb(216,142,19)" fg:x="939" fg:w="1"/><text x="77.0912%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.33%)</title><rect x="76.6776%" y="565" width="0.3273%" height="15" fill="rgb(240,81,38)" fg:x="937" fg:w="4"/><text x="76.9276%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="76.6776%" y="549" width="0.3273%" height="15" fill="rgb(240,109,40)" fg:x="937" fg:w="4"/><text x="76.9276%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.9231%" y="533" width="0.0818%" height="15" fill="rgb(230,123,10)" fg:x="940" fg:w="1"/><text x="77.1731%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.9231%" y="517" width="0.0818%" height="15" fill="rgb(253,42,32)" fg:x="940" fg:w="1"/><text x="77.1731%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.9231%" y="501" width="0.0818%" height="15" fill="rgb(218,154,8)" fg:x="940" fg:w="1"/><text x="77.1731%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9231%" y="485" width="0.0818%" height="15" fill="rgb(216,197,10)" fg:x="940" fg:w="1"/><text x="77.1731%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9231%" y="469" width="0.0818%" height="15" fill="rgb(223,107,12)" fg:x="940" fg:w="1"/><text x="77.1731%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.0049%" y="549" width="0.0818%" height="15" fill="rgb(241,174,42)" fg:x="941" fg:w="1"/><text x="77.2549%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.0049%" y="533" width="0.0818%" height="15" fill="rgb(231,78,20)" fg:x="941" fg:w="1"/><text x="77.2549%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.25%)</title><rect x="77.0049%" y="565" width="0.2455%" height="15" fill="rgb(230,208,49)" fg:x="941" fg:w="3"/><text x="77.2549%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="77.0867%" y="549" width="0.1637%" height="15" fill="rgb(238,11,34)" fg:x="942" fg:w="2"/><text x="77.3367%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.0867%" y="533" width="0.1637%" height="15" fill="rgb(210,130,26)" fg:x="942" fg:w="2"/><text x="77.3367%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.1686%" y="517" width="0.0818%" height="15" fill="rgb(242,131,11)" fg:x="943" fg:w="1"/><text x="77.4186%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="77.1686%" y="501" width="0.0818%" height="15" fill="rgb(237,38,28)" fg:x="943" fg:w="1"/><text x="77.4186%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.1686%" y="485" width="0.0818%" height="15" fill="rgb(244,180,43)" fg:x="943" fg:w="1"/><text x="77.4186%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1686%" y="469" width="0.0818%" height="15" fill="rgb(214,171,19)" fg:x="943" fg:w="1"/><text x="77.4186%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.2504%" y="549" width="0.0818%" height="15" fill="rgb(252,101,45)" fg:x="944" fg:w="1"/><text x="77.5004%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.2504%" y="533" width="0.0818%" height="15" fill="rgb(211,96,33)" fg:x="944" fg:w="1"/><text x="77.5004%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.2504%" y="517" width="0.0818%" height="15" fill="rgb(207,80,25)" fg:x="944" fg:w="1"/><text x="77.5004%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.2504%" y="501" width="0.0818%" height="15" fill="rgb(225,15,35)" fg:x="944" fg:w="1"/><text x="77.5004%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.2504%" y="485" width="0.0818%" height="15" fill="rgb(214,93,43)" fg:x="944" fg:w="1"/><text x="77.5004%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2504%" y="469" width="0.0818%" height="15" fill="rgb(248,42,37)" fg:x="944" fg:w="1"/><text x="77.5004%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.2504%" y="453" width="0.0818%" height="15" fill="rgb(217,135,32)" fg:x="944" fg:w="1"/><text x="77.5004%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2504%" y="437" width="0.0818%" height="15" fill="rgb(216,74,28)" fg:x="944" fg:w="1"/><text x="77.5004%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2504%" y="421" width="0.0818%" height="15" fill="rgb(247,108,16)" fg:x="944" fg:w="1"/><text x="77.5004%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2504%" y="405" width="0.0818%" height="15" fill="rgb(205,219,30)" fg:x="944" fg:w="1"/><text x="77.5004%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2504%" y="389" width="0.0818%" height="15" fill="rgb(241,122,9)" fg:x="944" fg:w="1"/><text x="77.5004%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2504%" y="373" width="0.0818%" height="15" fill="rgb(216,148,50)" fg:x="944" fg:w="1"/><text x="77.5004%" y="383.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="77.3322%" y="469" width="0.0818%" height="15" fill="rgb(226,154,2)" fg:x="945" fg:w="1"/><text x="77.5822%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="77.3322%" y="453" width="0.0818%" height="15" fill="rgb(220,128,1)" fg:x="945" fg:w="1"/><text x="77.5822%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3322%" y="437" width="0.0818%" height="15" fill="rgb(245,185,29)" fg:x="945" fg:w="1"/><text x="77.5822%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3322%" y="421" width="0.0818%" height="15" fill="rgb(243,161,2)" fg:x="945" fg:w="1"/><text x="77.5822%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.3322%" y="405" width="0.0818%" height="15" fill="rgb(249,215,17)" fg:x="945" fg:w="1"/><text x="77.5822%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.3322%" y="389" width="0.0818%" height="15" fill="rgb(237,67,11)" fg:x="945" fg:w="1"/><text x="77.5822%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.3322%" y="373" width="0.0818%" height="15" fill="rgb(239,17,24)" fg:x="945" fg:w="1"/><text x="77.5822%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.3322%" y="357" width="0.0818%" height="15" fill="rgb(215,97,29)" fg:x="945" fg:w="1"/><text x="77.5822%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3322%" y="341" width="0.0818%" height="15" fill="rgb(253,228,42)" fg:x="945" fg:w="1"/><text x="77.5822%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.25%)</title><rect x="77.2504%" y="565" width="0.2455%" height="15" fill="rgb(240,85,2)" fg:x="944" fg:w="3"/><text x="77.5004%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="77.3322%" y="549" width="0.1637%" height="15" fill="rgb(214,155,4)" fg:x="945" fg:w="2"/><text x="77.5822%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.3322%" y="533" width="0.1637%" height="15" fill="rgb(247,120,22)" fg:x="945" fg:w="2"/><text x="77.5822%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="77.3322%" y="517" width="0.1637%" height="15" fill="rgb(211,208,6)" fg:x="945" fg:w="2"/><text x="77.5822%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="77.3322%" y="501" width="0.1637%" height="15" fill="rgb(235,99,41)" fg:x="945" fg:w="2"/><text x="77.5822%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="77.3322%" y="485" width="0.1637%" height="15" fill="rgb(223,28,8)" fg:x="945" fg:w="2"/><text x="77.5822%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.4141%" y="469" width="0.0818%" height="15" fill="rgb(212,71,20)" fg:x="946" fg:w="1"/><text x="77.6641%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.4141%" y="453" width="0.0818%" height="15" fill="rgb(206,85,3)" fg:x="946" fg:w="1"/><text x="77.6641%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.4141%" y="437" width="0.0818%" height="15" fill="rgb(244,180,11)" fg:x="946" fg:w="1"/><text x="77.6641%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="77.4141%" y="421" width="0.0818%" height="15" fill="rgb(223,16,21)" fg:x="946" fg:w="1"/><text x="77.6641%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="77.4141%" y="405" width="0.0818%" height="15" fill="rgb(238,85,42)" fg:x="946" fg:w="1"/><text x="77.6641%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="77.4141%" y="389" width="0.0818%" height="15" fill="rgb(205,85,8)" fg:x="946" fg:w="1"/><text x="77.6641%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="77.4959%" y="517" width="0.0818%" height="15" fill="rgb(217,190,15)" fg:x="947" fg:w="1"/><text x="77.7459%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (19 samples, 1.55%)</title><rect x="76.1047%" y="597" width="1.5548%" height="15" fill="rgb(243,192,23)" fg:x="930" fg:w="19"/><text x="76.3547%" y="607.50"></text></g><g><title>plugins_core::tools::set_container (12 samples, 0.98%)</title><rect x="76.6776%" y="581" width="0.9820%" height="15" fill="rgb(223,220,37)" fg:x="937" fg:w="12"/><text x="76.9276%" y="591.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="77.4959%" y="565" width="0.1637%" height="15" fill="rgb(208,41,17)" fg:x="947" fg:w="2"/><text x="77.7459%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="77.4959%" y="549" width="0.1637%" height="15" fill="rgb(224,188,7)" fg:x="947" fg:w="2"/><text x="77.7459%" y="559.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="77.4959%" y="533" width="0.1637%" height="15" fill="rgb(236,16,50)" fg:x="947" fg:w="2"/><text x="77.7459%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.5777%" y="517" width="0.0818%" height="15" fill="rgb(238,6,24)" fg:x="948" fg:w="1"/><text x="77.8277%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="77.5777%" y="501" width="0.0818%" height="15" fill="rgb(253,67,45)" fg:x="948" fg:w="1"/><text x="77.8277%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.5777%" y="485" width="0.0818%" height="15" fill="rgb(210,89,32)" fg:x="948" fg:w="1"/><text x="77.8277%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5777%" y="469" width="0.0818%" height="15" fill="rgb(208,89,9)" fg:x="948" fg:w="1"/><text x="77.8277%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8232%" y="517" width="0.0818%" height="15" fill="rgb(222,180,44)" fg:x="951" fg:w="1"/><text x="78.0732%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8232%" y="501" width="0.0818%" height="15" fill="rgb(250,181,46)" fg:x="951" fg:w="1"/><text x="78.0732%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8232%" y="485" width="0.0818%" height="15" fill="rgb(210,190,26)" fg:x="951" fg:w="1"/><text x="78.0732%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8232%" y="469" width="0.0818%" height="15" fill="rgb(253,49,13)" fg:x="951" fg:w="1"/><text x="78.0732%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8232%" y="453" width="0.0818%" height="15" fill="rgb(240,184,42)" fg:x="951" fg:w="1"/><text x="78.0732%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8232%" y="437" width="0.0818%" height="15" fill="rgb(246,59,37)" fg:x="951" fg:w="1"/><text x="78.0732%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.8232%" y="421" width="0.0818%" height="15" fill="rgb(207,134,54)" fg:x="951" fg:w="1"/><text x="78.0732%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.8232%" y="405" width="0.0818%" height="15" fill="rgb(250,122,24)" fg:x="951" fg:w="1"/><text x="78.0732%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.8232%" y="389" width="0.0818%" height="15" fill="rgb(239,206,3)" fg:x="951" fg:w="1"/><text x="78.0732%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8232%" y="373" width="0.0818%" height="15" fill="rgb(253,220,32)" fg:x="951" fg:w="1"/><text x="78.0732%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8232%" y="357" width="0.0818%" height="15" fill="rgb(209,217,48)" fg:x="951" fg:w="1"/><text x="78.0732%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.8232%" y="341" width="0.0818%" height="15" fill="rgb(242,91,39)" fg:x="951" fg:w="1"/><text x="78.0732%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.8232%" y="325" width="0.0818%" height="15" fill="rgb(228,4,13)" fg:x="951" fg:w="1"/><text x="78.0732%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.8232%" y="309" width="0.0818%" height="15" fill="rgb(223,133,4)" fg:x="951" fg:w="1"/><text x="78.0732%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.8232%" y="293" width="0.0818%" height="15" fill="rgb(215,105,30)" fg:x="951" fg:w="1"/><text x="78.0732%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8232%" y="277" width="0.0818%" height="15" fill="rgb(230,9,4)" fg:x="951" fg:w="1"/><text x="78.0732%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="77.7414%" y="565" width="0.2455%" height="15" fill="rgb(248,15,2)" fg:x="950" fg:w="3"/><text x="77.9914%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="77.7414%" y="549" width="0.2455%" height="15" fill="rgb(208,210,22)" fg:x="950" fg:w="3"/><text x="77.9914%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="77.7414%" y="533" width="0.2455%" height="15" fill="rgb(208,112,41)" fg:x="950" fg:w="3"/><text x="77.9914%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9051%" y="517" width="0.0818%" height="15" fill="rgb(232,83,14)" fg:x="952" fg:w="1"/><text x="78.1551%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9051%" y="501" width="0.0818%" height="15" fill="rgb(229,65,11)" fg:x="952" fg:w="1"/><text x="78.1551%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.9869%" y="485" width="0.0818%" height="15" fill="rgb(228,126,24)" fg:x="953" fg:w="1"/><text x="78.2369%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="77.9869%" y="565" width="0.1637%" height="15" fill="rgb(218,66,33)" fg:x="953" fg:w="2"/><text x="78.2369%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="77.9869%" y="549" width="0.1637%" height="15" fill="rgb(251,49,52)" fg:x="953" fg:w="2"/><text x="78.2369%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.9869%" y="533" width="0.1637%" height="15" fill="rgb(219,46,37)" fg:x="953" fg:w="2"/><text x="78.2369%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.9869%" y="517" width="0.1637%" height="15" fill="rgb(213,53,49)" fg:x="953" fg:w="2"/><text x="78.2369%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.9869%" y="501" width="0.1637%" height="15" fill="rgb(214,134,1)" fg:x="953" fg:w="2"/><text x="78.2369%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.0687%" y="485" width="0.0818%" height="15" fill="rgb(208,139,43)" fg:x="954" fg:w="1"/><text x="78.3187%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0687%" y="469" width="0.0818%" height="15" fill="rgb(231,105,35)" fg:x="954" fg:w="1"/><text x="78.3187%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.2324%" y="485" width="0.1637%" height="15" fill="rgb(247,189,9)" fg:x="956" fg:w="2"/><text x="78.4824%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.2324%" y="469" width="0.1637%" height="15" fill="rgb(252,48,51)" fg:x="956" fg:w="2"/><text x="78.4824%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3142%" y="453" width="0.0818%" height="15" fill="rgb(209,121,1)" fg:x="957" fg:w="1"/><text x="78.5642%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3142%" y="437" width="0.0818%" height="15" fill="rgb(231,40,26)" fg:x="957" fg:w="1"/><text x="78.5642%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3142%" y="421" width="0.0818%" height="15" fill="rgb(251,8,13)" fg:x="957" fg:w="1"/><text x="78.5642%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.82%)</title><rect x="77.6596%" y="597" width="0.8183%" height="15" fill="rgb(231,110,2)" fg:x="949" fg:w="10"/><text x="77.9096%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.74%)</title><rect x="77.7414%" y="581" width="0.7365%" height="15" fill="rgb(216,153,22)" fg:x="950" fg:w="9"/><text x="77.9914%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="78.1506%" y="565" width="0.3273%" height="15" fill="rgb(249,116,49)" fg:x="955" fg:w="4"/><text x="78.4006%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.33%)</title><rect x="78.1506%" y="549" width="0.3273%" height="15" fill="rgb(230,89,2)" fg:x="955" fg:w="4"/><text x="78.4006%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.33%)</title><rect x="78.1506%" y="533" width="0.3273%" height="15" fill="rgb(231,125,23)" fg:x="955" fg:w="4"/><text x="78.4006%" y="543.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="78.1506%" y="517" width="0.3273%" height="15" fill="rgb(212,217,18)" fg:x="955" fg:w="4"/><text x="78.4006%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="78.1506%" y="501" width="0.3273%" height="15" fill="rgb(210,21,33)" fg:x="955" fg:w="4"/><text x="78.4006%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3961%" y="485" width="0.0818%" height="15" fill="rgb(241,97,9)" fg:x="958" fg:w="1"/><text x="78.6461%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3961%" y="469" width="0.0818%" height="15" fill="rgb(221,35,31)" fg:x="958" fg:w="1"/><text x="78.6461%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3961%" y="453" width="0.0818%" height="15" fill="rgb(251,23,23)" fg:x="958" fg:w="1"/><text x="78.6461%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3961%" y="437" width="0.0818%" height="15" fill="rgb(227,165,2)" fg:x="958" fg:w="1"/><text x="78.6461%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.3961%" y="421" width="0.0818%" height="15" fill="rgb(242,24,2)" fg:x="958" fg:w="1"/><text x="78.6461%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3961%" y="405" width="0.0818%" height="15" fill="rgb(242,138,51)" fg:x="958" fg:w="1"/><text x="78.6461%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3961%" y="389" width="0.0818%" height="15" fill="rgb(220,219,5)" fg:x="958" fg:w="1"/><text x="78.6461%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3961%" y="373" width="0.0818%" height="15" fill="rgb(247,53,29)" fg:x="958" fg:w="1"/><text x="78.6461%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3961%" y="357" width="0.0818%" height="15" fill="rgb(233,43,39)" fg:x="958" fg:w="1"/><text x="78.6461%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3961%" y="341" width="0.0818%" height="15" fill="rgb(230,128,54)" fg:x="958" fg:w="1"/><text x="78.6461%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.3961%" y="325" width="0.0818%" height="15" fill="rgb(218,20,12)" fg:x="958" fg:w="1"/><text x="78.6461%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.3961%" y="309" width="0.0818%" height="15" fill="rgb(206,51,14)" fg:x="958" fg:w="1"/><text x="78.6461%" y="319.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="78.4779%" y="565" width="0.0818%" height="15" fill="rgb(223,16,35)" fg:x="959" fg:w="1"/><text x="78.7279%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4779%" y="549" width="0.0818%" height="15" fill="rgb(226,165,37)" fg:x="959" fg:w="1"/><text x="78.7279%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.5597%" y="565" width="0.0818%" height="15" fill="rgb(240,26,21)" fg:x="960" fg:w="1"/><text x="78.8097%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.5597%" y="549" width="0.0818%" height="15" fill="rgb(240,72,46)" fg:x="960" fg:w="1"/><text x="78.8097%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5597%" y="533" width="0.0818%" height="15" fill="rgb(211,33,41)" fg:x="960" fg:w="1"/><text x="78.8097%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5597%" y="517" width="0.0818%" height="15" fill="rgb(224,157,46)" fg:x="960" fg:w="1"/><text x="78.8097%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5597%" y="501" width="0.0818%" height="15" fill="rgb(223,59,19)" fg:x="960" fg:w="1"/><text x="78.8097%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5597%" y="485" width="0.0818%" height="15" fill="rgb(239,187,1)" fg:x="960" fg:w="1"/><text x="78.8097%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.25%)</title><rect x="78.4779%" y="597" width="0.2455%" height="15" fill="rgb(226,95,9)" fg:x="959" fg:w="3"/><text x="78.7279%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.25%)</title><rect x="78.4779%" y="581" width="0.2455%" height="15" fill="rgb(234,61,54)" fg:x="959" fg:w="3"/><text x="78.7279%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.6416%" y="565" width="0.0818%" height="15" fill="rgb(205,209,47)" fg:x="961" fg:w="1"/><text x="78.8916%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="78.6416%" y="549" width="0.0818%" height="15" fill="rgb(228,7,43)" fg:x="961" fg:w="1"/><text x="78.8916%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6416%" y="533" width="0.0818%" height="15" fill="rgb(240,217,52)" fg:x="961" fg:w="1"/><text x="78.8916%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="78.8052%" y="565" width="0.0818%" height="15" fill="rgb(211,178,21)" fg:x="963" fg:w="1"/><text x="79.0552%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="78.8052%" y="549" width="0.0818%" height="15" fill="rgb(205,25,34)" fg:x="963" fg:w="1"/><text x="79.0552%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="78.8052%" y="533" width="0.0818%" height="15" fill="rgb(209,57,11)" fg:x="963" fg:w="1"/><text x="79.0552%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.8871%" y="517" width="0.0818%" height="15" fill="rgb(221,99,2)" fg:x="964" fg:w="1"/><text x="79.1371%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.8871%" y="501" width="0.0818%" height="15" fill="rgb(232,79,22)" fg:x="964" fg:w="1"/><text x="79.1371%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.25%)</title><rect x="78.8052%" y="581" width="0.2455%" height="15" fill="rgb(221,145,32)" fg:x="963" fg:w="3"/><text x="79.0552%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="78.8871%" y="565" width="0.1637%" height="15" fill="rgb(236,133,36)" fg:x="964" fg:w="2"/><text x="79.1371%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="78.8871%" y="549" width="0.1637%" height="15" fill="rgb(208,224,44)" fg:x="964" fg:w="2"/><text x="79.1371%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.8871%" y="533" width="0.1637%" height="15" fill="rgb(235,143,15)" fg:x="964" fg:w="2"/><text x="79.1371%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.9689%" y="517" width="0.0818%" height="15" fill="rgb(249,83,27)" fg:x="965" fg:w="1"/><text x="79.2189%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9689%" y="501" width="0.0818%" height="15" fill="rgb(238,226,19)" fg:x="965" fg:w="1"/><text x="79.2189%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.9689%" y="485" width="0.0818%" height="15" fill="rgb(226,206,27)" fg:x="965" fg:w="1"/><text x="79.2189%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9689%" y="469" width="0.0818%" height="15" fill="rgb(251,182,9)" fg:x="965" fg:w="1"/><text x="79.2189%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.9689%" y="453" width="0.0818%" height="15" fill="rgb(212,140,41)" fg:x="965" fg:w="1"/><text x="79.2189%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="79.0507%" y="549" width="0.0818%" height="15" fill="rgb(220,106,18)" fg:x="966" fg:w="1"/><text x="79.3007%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="79.0507%" y="533" width="0.0818%" height="15" fill="rgb(252,46,41)" fg:x="966" fg:w="1"/><text x="79.3007%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0507%" y="517" width="0.0818%" height="15" fill="rgb(209,222,15)" fg:x="966" fg:w="1"/><text x="79.3007%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="79.0507%" y="581" width="0.1637%" height="15" fill="rgb(233,83,50)" fg:x="966" fg:w="2"/><text x="79.3007%" y="591.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="79.0507%" y="565" width="0.1637%" height="15" fill="rgb(205,212,0)" fg:x="966" fg:w="2"/><text x="79.3007%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.1326%" y="549" width="0.0818%" height="15" fill="rgb(235,117,51)" fg:x="967" fg:w="1"/><text x="79.3826%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.1326%" y="533" width="0.0818%" height="15" fill="rgb(233,133,48)" fg:x="967" fg:w="1"/><text x="79.3826%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.1326%" y="517" width="0.0818%" height="15" fill="rgb(219,3,2)" fg:x="967" fg:w="1"/><text x="79.3826%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="79.3781%" y="533" width="0.0818%" height="15" fill="rgb(225,80,52)" fg:x="970" fg:w="1"/><text x="79.6281%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="79.3781%" y="517" width="0.0818%" height="15" fill="rgb(235,195,42)" fg:x="970" fg:w="1"/><text x="79.6281%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.3781%" y="501" width="0.0818%" height="15" fill="rgb(240,207,46)" fg:x="970" fg:w="1"/><text x="79.6281%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.3781%" y="485" width="0.0818%" height="15" fill="rgb(236,112,50)" fg:x="970" fg:w="1"/><text x="79.6281%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.3781%" y="469" width="0.0818%" height="15" fill="rgb(249,151,27)" fg:x="970" fg:w="1"/><text x="79.6281%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.3781%" y="453" width="0.0818%" height="15" fill="rgb(253,223,52)" fg:x="970" fg:w="1"/><text x="79.6281%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3781%" y="437" width="0.0818%" height="15" fill="rgb(215,55,33)" fg:x="970" fg:w="1"/><text x="79.6281%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="79.4599%" y="533" width="0.1637%" height="15" fill="rgb(207,24,17)" fg:x="971" fg:w="2"/><text x="79.7099%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="79.4599%" y="517" width="0.1637%" height="15" fill="rgb(218,169,32)" fg:x="971" fg:w="2"/><text x="79.7099%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="79.4599%" y="501" width="0.1637%" height="15" fill="rgb(209,210,6)" fg:x="971" fg:w="2"/><text x="79.7099%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="79.4599%" y="485" width="0.1637%" height="15" fill="rgb(225,208,8)" fg:x="971" fg:w="2"/><text x="79.7099%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.4599%" y="469" width="0.1637%" height="15" fill="rgb(238,14,32)" fg:x="971" fg:w="2"/><text x="79.7099%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.4599%" y="453" width="0.1637%" height="15" fill="rgb(211,137,3)" fg:x="971" fg:w="2"/><text x="79.7099%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.4599%" y="437" width="0.1637%" height="15" fill="rgb(207,171,19)" fg:x="971" fg:w="2"/><text x="79.7099%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.4599%" y="421" width="0.1637%" height="15" fill="rgb(250,80,8)" fg:x="971" fg:w="2"/><text x="79.7099%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.4599%" y="405" width="0.1637%" height="15" fill="rgb(209,103,53)" fg:x="971" fg:w="2"/><text x="79.7099%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="79.4599%" y="389" width="0.1637%" height="15" fill="rgb(233,198,10)" fg:x="971" fg:w="2"/><text x="79.7099%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.4599%" y="373" width="0.1637%" height="15" fill="rgb(236,125,25)" fg:x="971" fg:w="2"/><text x="79.7099%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.4599%" y="357" width="0.1637%" height="15" fill="rgb(254,182,48)" fg:x="971" fg:w="2"/><text x="79.7099%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.4599%" y="341" width="0.1637%" height="15" fill="rgb(216,108,44)" fg:x="971" fg:w="2"/><text x="79.7099%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.4599%" y="325" width="0.1637%" height="15" fill="rgb(222,72,39)" fg:x="971" fg:w="2"/><text x="79.7099%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.5417%" y="309" width="0.0818%" height="15" fill="rgb(252,70,39)" fg:x="972" fg:w="1"/><text x="79.7917%" y="319.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="79.5417%" y="293" width="0.0818%" height="15" fill="rgb(243,99,34)" fg:x="972" fg:w="1"/><text x="79.7917%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.6236%" y="421" width="0.0818%" height="15" fill="rgb(252,109,12)" fg:x="973" fg:w="1"/><text x="79.8736%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.6236%" y="405" width="0.0818%" height="15" fill="rgb(211,186,10)" fg:x="973" fg:w="1"/><text x="79.8736%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="79.6236%" y="501" width="0.1637%" height="15" fill="rgb(246,90,8)" fg:x="973" fg:w="2"/><text x="79.8736%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="79.6236%" y="485" width="0.1637%" height="15" fill="rgb(226,91,24)" fg:x="973" fg:w="2"/><text x="79.8736%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.6236%" y="469" width="0.1637%" height="15" fill="rgb(216,28,44)" fg:x="973" fg:w="2"/><text x="79.8736%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.6236%" y="453" width="0.1637%" height="15" fill="rgb(229,36,0)" fg:x="973" fg:w="2"/><text x="79.8736%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.6236%" y="437" width="0.1637%" height="15" fill="rgb(245,97,18)" fg:x="973" fg:w="2"/><text x="79.8736%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.7054%" y="421" width="0.0818%" height="15" fill="rgb(241,97,54)" fg:x="974" fg:w="1"/><text x="79.9554%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.7054%" y="405" width="0.0818%" height="15" fill="rgb(234,125,17)" fg:x="974" fg:w="1"/><text x="79.9554%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.7054%" y="389" width="0.0818%" height="15" fill="rgb(228,172,39)" fg:x="974" fg:w="1"/><text x="79.9554%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.7054%" y="373" width="0.0818%" height="15" fill="rgb(227,169,1)" fg:x="974" fg:w="1"/><text x="79.9554%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.7054%" y="357" width="0.0818%" height="15" fill="rgb(206,13,35)" fg:x="974" fg:w="1"/><text x="79.9554%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.7054%" y="341" width="0.0818%" height="15" fill="rgb(211,117,30)" fg:x="974" fg:w="1"/><text x="79.9554%" y="351.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="79.7872%" y="501" width="0.0818%" height="15" fill="rgb(230,198,4)" fg:x="975" fg:w="1"/><text x="80.0372%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="79.7872%" y="485" width="0.0818%" height="15" fill="rgb(213,87,54)" fg:x="975" fg:w="1"/><text x="80.0372%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.7872%" y="469" width="0.0818%" height="15" fill="rgb(248,43,22)" fg:x="975" fg:w="1"/><text x="80.0372%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.8691%" y="453" width="0.0818%" height="15" fill="rgb(213,175,48)" fg:x="976" fg:w="1"/><text x="80.1191%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.8691%" y="437" width="0.0818%" height="15" fill="rgb(252,55,9)" fg:x="976" fg:w="1"/><text x="80.1191%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.8691%" y="421" width="0.0818%" height="15" fill="rgb(231,72,33)" fg:x="976" fg:w="1"/><text x="80.1191%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.8691%" y="405" width="0.0818%" height="15" fill="rgb(213,2,54)" fg:x="976" fg:w="1"/><text x="80.1191%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.8691%" y="389" width="0.0818%" height="15" fill="rgb(208,88,25)" fg:x="976" fg:w="1"/><text x="80.1191%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.8691%" y="373" width="0.0818%" height="15" fill="rgb(215,117,13)" fg:x="976" fg:w="1"/><text x="80.1191%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.8691%" y="357" width="0.0818%" height="15" fill="rgb(243,147,21)" fg:x="976" fg:w="1"/><text x="80.1191%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.8691%" y="341" width="0.0818%" height="15" fill="rgb(208,215,36)" fg:x="976" fg:w="1"/><text x="80.1191%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.8691%" y="325" width="0.0818%" height="15" fill="rgb(238,187,24)" fg:x="976" fg:w="1"/><text x="80.1191%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.8691%" y="309" width="0.0818%" height="15" fill="rgb(214,173,11)" fg:x="976" fg:w="1"/><text x="80.1191%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.8691%" y="293" width="0.0818%" height="15" fill="rgb(222,71,20)" fg:x="976" fg:w="1"/><text x="80.1191%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.8691%" y="277" width="0.0818%" height="15" fill="rgb(242,125,4)" fg:x="976" fg:w="1"/><text x="80.1191%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.8691%" y="261" width="0.0818%" height="15" fill="rgb(217,101,52)" fg:x="976" fg:w="1"/><text x="80.1191%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.8691%" y="245" width="0.0818%" height="15" fill="rgb(223,2,50)" fg:x="976" fg:w="1"/><text x="80.1191%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="79.6236%" y="517" width="0.4092%" height="15" fill="rgb(225,197,9)" fg:x="973" fg:w="5"/><text x="79.8736%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="79.8691%" y="501" width="0.1637%" height="15" fill="rgb(234,76,27)" fg:x="976" fg:w="2"/><text x="80.1191%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="79.8691%" y="485" width="0.1637%" height="15" fill="rgb(213,161,26)" fg:x="976" fg:w="2"/><text x="80.1191%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="79.8691%" y="469" width="0.1637%" height="15" fill="rgb(210,228,2)" fg:x="976" fg:w="2"/><text x="80.1191%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="79.9509%" y="453" width="0.0818%" height="15" fill="rgb(235,4,16)" fg:x="977" fg:w="1"/><text x="80.2009%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.9509%" y="437" width="0.0818%" height="15" fill="rgb(235,83,42)" fg:x="977" fg:w="1"/><text x="80.2009%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.9509%" y="421" width="0.0818%" height="15" fill="rgb(207,116,39)" fg:x="977" fg:w="1"/><text x="80.2009%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.9509%" y="405" width="0.0818%" height="15" fill="rgb(253,206,9)" fg:x="977" fg:w="1"/><text x="80.2009%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9509%" y="389" width="0.0818%" height="15" fill="rgb(234,32,47)" fg:x="977" fg:w="1"/><text x="80.2009%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.90%)</title><rect x="79.2144%" y="581" width="0.9002%" height="15" fill="rgb(247,40,39)" fg:x="968" fg:w="11"/><text x="79.4644%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.82%)</title><rect x="79.2962%" y="565" width="0.8183%" height="15" fill="rgb(236,199,13)" fg:x="969" fg:w="10"/><text x="79.5462%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.74%)</title><rect x="79.3781%" y="549" width="0.7365%" height="15" fill="rgb(240,127,44)" fg:x="970" fg:w="9"/><text x="79.6281%" y="559.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.49%)</title><rect x="79.6236%" y="533" width="0.4910%" height="15" fill="rgb(248,220,47)" fg:x="973" fg:w="6"/><text x="79.8736%" y="543.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="80.0327%" y="517" width="0.0818%" height="15" fill="rgb(240,78,9)" fg:x="978" fg:w="1"/><text x="80.2827%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="80.0327%" y="501" width="0.0818%" height="15" fill="rgb(245,119,5)" fg:x="978" fg:w="1"/><text x="80.2827%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="80.0327%" y="485" width="0.0818%" height="15" fill="rgb(238,175,31)" fg:x="978" fg:w="1"/><text x="80.2827%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.0327%" y="469" width="0.0818%" height="15" fill="rgb(232,140,42)" fg:x="978" fg:w="1"/><text x="80.2827%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.0327%" y="453" width="0.0818%" height="15" fill="rgb(218,179,7)" fg:x="978" fg:w="1"/><text x="80.2827%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.0327%" y="437" width="0.0818%" height="15" fill="rgb(232,79,27)" fg:x="978" fg:w="1"/><text x="80.2827%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0327%" y="421" width="0.0818%" height="15" fill="rgb(247,11,19)" fg:x="978" fg:w="1"/><text x="80.2827%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0327%" y="405" width="0.0818%" height="15" fill="rgb(216,171,54)" fg:x="978" fg:w="1"/><text x="80.2827%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0327%" y="389" width="0.0818%" height="15" fill="rgb(233,158,36)" fg:x="978" fg:w="1"/><text x="80.2827%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.0327%" y="373" width="0.0818%" height="15" fill="rgb(215,48,47)" fg:x="978" fg:w="1"/><text x="80.2827%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.0327%" y="357" width="0.0818%" height="15" fill="rgb(230,223,15)" fg:x="978" fg:w="1"/><text x="80.2827%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.0327%" y="341" width="0.0818%" height="15" fill="rgb(234,49,19)" fg:x="978" fg:w="1"/><text x="80.2827%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0327%" y="325" width="0.0818%" height="15" fill="rgb(232,89,25)" fg:x="978" fg:w="1"/><text x="80.2827%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0327%" y="309" width="0.0818%" height="15" fill="rgb(237,206,28)" fg:x="978" fg:w="1"/><text x="80.2827%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.0327%" y="293" width="0.0818%" height="15" fill="rgb(249,68,37)" fg:x="978" fg:w="1"/><text x="80.2827%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.0327%" y="277" width="0.0818%" height="15" fill="rgb(226,99,43)" fg:x="978" fg:w="1"/><text x="80.2827%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.0327%" y="261" width="0.0818%" height="15" fill="rgb(216,46,28)" fg:x="978" fg:w="1"/><text x="80.2827%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.0327%" y="245" width="0.0818%" height="15" fill="rgb(216,33,9)" fg:x="978" fg:w="1"/><text x="80.2827%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.0327%" y="229" width="0.0818%" height="15" fill="rgb(216,129,4)" fg:x="978" fg:w="1"/><text x="80.2827%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="80.1146%" y="581" width="0.0818%" height="15" fill="rgb(216,106,3)" fg:x="979" fg:w="1"/><text x="80.3646%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="80.1146%" y="565" width="0.0818%" height="15" fill="rgb(217,79,45)" fg:x="979" fg:w="1"/><text x="80.3646%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="80.1146%" y="549" width="0.0818%" height="15" fill="rgb(239,98,13)" fg:x="979" fg:w="1"/><text x="80.3646%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1146%" y="533" width="0.0818%" height="15" fill="rgb(221,115,4)" fg:x="979" fg:w="1"/><text x="80.3646%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="80.1964%" y="565" width="0.0818%" height="15" fill="rgb(215,85,0)" fg:x="980" fg:w="1"/><text x="80.4464%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.2782%" y="517" width="0.0818%" height="15" fill="rgb(230,62,15)" fg:x="981" fg:w="1"/><text x="80.5282%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.2782%" y="501" width="0.0818%" height="15" fill="rgb(247,162,2)" fg:x="981" fg:w="1"/><text x="80.5282%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.3601%" y="485" width="0.0818%" height="15" fill="rgb(212,112,32)" fg:x="982" fg:w="1"/><text x="80.6101%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.3601%" y="469" width="0.0818%" height="15" fill="rgb(216,137,9)" fg:x="982" fg:w="1"/><text x="80.6101%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.3601%" y="453" width="0.0818%" height="15" fill="rgb(250,149,33)" fg:x="982" fg:w="1"/><text x="80.6101%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.3601%" y="437" width="0.0818%" height="15" fill="rgb(246,124,31)" fg:x="982" fg:w="1"/><text x="80.6101%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.3601%" y="421" width="0.0818%" height="15" fill="rgb(216,210,22)" fg:x="982" fg:w="1"/><text x="80.6101%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="80.3601%" y="405" width="0.0818%" height="15" fill="rgb(228,128,36)" fg:x="982" fg:w="1"/><text x="80.6101%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="80.3601%" y="389" width="0.0818%" height="15" fill="rgb(231,41,0)" fg:x="982" fg:w="1"/><text x="80.6101%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="80.4419%" y="485" width="0.0818%" height="15" fill="rgb(232,61,26)" fg:x="983" fg:w="1"/><text x="80.6919%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.4419%" y="469" width="0.0818%" height="15" fill="rgb(217,60,9)" fg:x="983" fg:w="1"/><text x="80.6919%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.4419%" y="453" width="0.0818%" height="15" fill="rgb(233,41,35)" fg:x="983" fg:w="1"/><text x="80.6919%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.4419%" y="437" width="0.0818%" height="15" fill="rgb(253,139,43)" fg:x="983" fg:w="1"/><text x="80.6919%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.4419%" y="421" width="0.0818%" height="15" fill="rgb(245,100,51)" fg:x="983" fg:w="1"/><text x="80.6919%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.4419%" y="405" width="0.0818%" height="15" fill="rgb(250,208,18)" fg:x="983" fg:w="1"/><text x="80.6919%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.4419%" y="389" width="0.0818%" height="15" fill="rgb(245,33,2)" fg:x="983" fg:w="1"/><text x="80.6919%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.25%)</title><rect x="80.5237%" y="469" width="0.2455%" height="15" fill="rgb(244,171,31)" fg:x="984" fg:w="3"/><text x="80.7737%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="80.5237%" y="453" width="0.2455%" height="15" fill="rgb(229,1,43)" fg:x="984" fg:w="3"/><text x="80.7737%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.6056%" y="437" width="0.1637%" height="15" fill="rgb(223,153,28)" fg:x="985" fg:w="2"/><text x="80.8556%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.6874%" y="421" width="0.0818%" height="15" fill="rgb(241,4,46)" fg:x="986" fg:w="1"/><text x="80.9374%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.7692%" y="453" width="0.0818%" height="15" fill="rgb(230,81,11)" fg:x="987" fg:w="1"/><text x="81.0192%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="80.8511%" y="453" width="0.2455%" height="15" fill="rgb(253,204,39)" fg:x="988" fg:w="3"/><text x="81.1011%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="80.8511%" y="437" width="0.2455%" height="15" fill="rgb(250,96,8)" fg:x="988" fg:w="3"/><text x="81.1011%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.9329%" y="421" width="0.1637%" height="15" fill="rgb(219,89,54)" fg:x="989" fg:w="2"/><text x="81.1829%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.0147%" y="405" width="0.0818%" height="15" fill="rgb(235,136,39)" fg:x="990" fg:w="1"/><text x="81.2647%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.0147%" y="389" width="0.0818%" height="15" fill="rgb(230,155,37)" fg:x="990" fg:w="1"/><text x="81.2647%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.0147%" y="373" width="0.0818%" height="15" fill="rgb(235,199,50)" fg:x="990" fg:w="1"/><text x="81.2647%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.0147%" y="357" width="0.0818%" height="15" fill="rgb(227,81,32)" fg:x="990" fg:w="1"/><text x="81.2647%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.0966%" y="437" width="0.0818%" height="15" fill="rgb(225,6,28)" fg:x="991" fg:w="1"/><text x="81.3466%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.1784%" y="405" width="0.0818%" height="15" fill="rgb(207,211,17)" fg:x="992" fg:w="1"/><text x="81.4284%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.1784%" y="389" width="0.0818%" height="15" fill="rgb(228,31,49)" fg:x="992" fg:w="1"/><text x="81.4284%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="81.1784%" y="437" width="0.1637%" height="15" fill="rgb(230,185,3)" fg:x="992" fg:w="2"/><text x="81.4284%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.1784%" y="421" width="0.1637%" height="15" fill="rgb(206,167,15)" fg:x="992" fg:w="2"/><text x="81.4284%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.2602%" y="405" width="0.0818%" height="15" fill="rgb(234,2,36)" fg:x="993" fg:w="1"/><text x="81.5102%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="81.3421%" y="437" width="0.4092%" height="15" fill="rgb(239,160,29)" fg:x="994" fg:w="5"/><text x="81.5921%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="81.4239%" y="421" width="0.3273%" height="15" fill="rgb(236,117,2)" fg:x="995" fg:w="4"/><text x="81.6739%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="81.4239%" y="405" width="0.3273%" height="15" fill="rgb(215,117,37)" fg:x="995" fg:w="4"/><text x="81.6739%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="81.5057%" y="389" width="0.2455%" height="15" fill="rgb(244,48,36)" fg:x="996" fg:w="3"/><text x="81.7557%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.25%)</title><rect x="81.5057%" y="373" width="0.2455%" height="15" fill="rgb(223,101,37)" fg:x="996" fg:w="3"/><text x="81.7557%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.25%)</title><rect x="81.5057%" y="357" width="0.2455%" height="15" fill="rgb(205,200,1)" fg:x="996" fg:w="3"/><text x="81.7557%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="81.5876%" y="341" width="0.1637%" height="15" fill="rgb(209,193,20)" fg:x="997" fg:w="2"/><text x="81.8376%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.7512%" y="421" width="0.0818%" height="15" fill="rgb(214,63,13)" fg:x="999" fg:w="1"/><text x="82.0012%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.7512%" y="405" width="0.0818%" height="15" fill="rgb(253,113,46)" fg:x="999" fg:w="1"/><text x="82.0012%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.8331%" y="405" width="0.0818%" height="15" fill="rgb(237,103,34)" fg:x="1000" fg:w="1"/><text x="82.0831%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.8331%" y="389" width="0.0818%" height="15" fill="rgb(223,38,25)" fg:x="1000" fg:w="1"/><text x="82.0831%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.8331%" y="421" width="0.1637%" height="15" fill="rgb(251,32,32)" fg:x="1000" fg:w="2"/><text x="82.0831%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.9149%" y="405" width="0.0818%" height="15" fill="rgb(228,65,22)" fg:x="1001" fg:w="1"/><text x="82.1649%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.9149%" y="389" width="0.0818%" height="15" fill="rgb(205,11,46)" fg:x="1001" fg:w="1"/><text x="82.1649%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.9149%" y="373" width="0.0818%" height="15" fill="rgb(220,35,2)" fg:x="1001" fg:w="1"/><text x="82.1649%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.9149%" y="357" width="0.0818%" height="15" fill="rgb(217,151,17)" fg:x="1001" fg:w="1"/><text x="82.1649%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.9149%" y="341" width="0.0818%" height="15" fill="rgb(243,227,35)" fg:x="1001" fg:w="1"/><text x="82.1649%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.9149%" y="325" width="0.0818%" height="15" fill="rgb(214,0,34)" fg:x="1001" fg:w="1"/><text x="82.1649%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.9149%" y="309" width="0.0818%" height="15" fill="rgb(209,42,37)" fg:x="1001" fg:w="1"/><text x="82.1649%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.9149%" y="293" width="0.0818%" height="15" fill="rgb(251,176,30)" fg:x="1001" fg:w="1"/><text x="82.1649%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.9149%" y="277" width="0.0818%" height="15" fill="rgb(223,64,40)" fg:x="1001" fg:w="1"/><text x="82.1649%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.98%)</title><rect x="81.0966%" y="453" width="0.9820%" height="15" fill="rgb(227,180,23)" fg:x="991" fg:w="12"/><text x="81.3466%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="81.7512%" y="437" width="0.3273%" height="15" fill="rgb(220,137,31)" fg:x="999" fg:w="4"/><text x="82.0012%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.9967%" y="421" width="0.0818%" height="15" fill="rgb(245,124,25)" fg:x="1002" fg:w="1"/><text x="82.2467%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.9967%" y="405" width="0.0818%" height="15" fill="rgb(217,157,5)" fg:x="1002" fg:w="1"/><text x="82.2467%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.9967%" y="389" width="0.0818%" height="15" fill="rgb(225,59,2)" fg:x="1002" fg:w="1"/><text x="82.2467%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (21 samples, 1.72%)</title><rect x="80.5237%" y="485" width="1.7185%" height="15" fill="rgb(220,182,9)" fg:x="984" fg:w="21"/><text x="80.7737%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.47%)</title><rect x="80.7692%" y="469" width="1.4730%" height="15" fill="rgb(249,54,24)" fg:x="987" fg:w="18"/><text x="81.0192%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.0786%" y="453" width="0.1637%" height="15" fill="rgb(216,89,17)" fg:x="1003" fg:w="2"/><text x="82.3286%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.0786%" y="437" width="0.1637%" height="15" fill="rgb(245,20,45)" fg:x="1003" fg:w="2"/><text x="82.3286%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.1604%" y="421" width="0.0818%" height="15" fill="rgb(230,83,14)" fg:x="1004" fg:w="1"/><text x="82.4104%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.2422%" y="453" width="0.0818%" height="15" fill="rgb(246,109,11)" fg:x="1005" fg:w="1"/><text x="82.4922%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.2422%" y="485" width="0.1637%" height="15" fill="rgb(235,85,23)" fg:x="1005" fg:w="2"/><text x="82.4922%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="82.2422%" y="469" width="0.1637%" height="15" fill="rgb(215,101,36)" fg:x="1005" fg:w="2"/><text x="82.4922%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3241%" y="453" width="0.0818%" height="15" fill="rgb(228,140,31)" fg:x="1006" fg:w="1"/><text x="82.5741%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3241%" y="437" width="0.0818%" height="15" fill="rgb(234,162,37)" fg:x="1006" fg:w="1"/><text x="82.5741%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3241%" y="421" width="0.0818%" height="15" fill="rgb(221,0,24)" fg:x="1006" fg:w="1"/><text x="82.5741%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3241%" y="405" width="0.0818%" height="15" fill="rgb(230,161,41)" fg:x="1006" fg:w="1"/><text x="82.5741%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3241%" y="389" width="0.0818%" height="15" fill="rgb(224,46,24)" fg:x="1006" fg:w="1"/><text x="82.5741%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3241%" y="373" width="0.0818%" height="15" fill="rgb(205,59,32)" fg:x="1006" fg:w="1"/><text x="82.5741%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.3241%" y="357" width="0.0818%" height="15" fill="rgb(239,31,20)" fg:x="1006" fg:w="1"/><text x="82.5741%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3241%" y="341" width="0.0818%" height="15" fill="rgb(233,149,44)" fg:x="1006" fg:w="1"/><text x="82.5741%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="82.4059%" y="469" width="0.0818%" height="15" fill="rgb(243,47,26)" fg:x="1007" fg:w="1"/><text x="82.6559%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4877%" y="405" width="0.0818%" height="15" fill="rgb(233,107,5)" fg:x="1008" fg:w="1"/><text x="82.7377%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="82.4877%" y="437" width="0.1637%" height="15" fill="rgb(248,140,33)" fg:x="1008" fg:w="2"/><text x="82.7377%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="82.4877%" y="421" width="0.1637%" height="15" fill="rgb(228,178,19)" fg:x="1008" fg:w="2"/><text x="82.7377%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5696%" y="405" width="0.0818%" height="15" fill="rgb(224,39,49)" fg:x="1009" fg:w="1"/><text x="82.8196%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5696%" y="389" width="0.0818%" height="15" fill="rgb(246,56,47)" fg:x="1009" fg:w="1"/><text x="82.8196%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.6514%" y="405" width="0.0818%" height="15" fill="rgb(220,73,27)" fg:x="1010" fg:w="1"/><text x="82.9014%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.7332%" y="357" width="0.0818%" height="15" fill="rgb(239,112,21)" fg:x="1011" fg:w="1"/><text x="82.9832%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="82.7332%" y="389" width="0.1637%" height="15" fill="rgb(253,14,51)" fg:x="1011" fg:w="2"/><text x="82.9832%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.7332%" y="373" width="0.1637%" height="15" fill="rgb(215,58,12)" fg:x="1011" fg:w="2"/><text x="82.9832%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.8151%" y="357" width="0.0818%" height="15" fill="rgb(207,181,19)" fg:x="1012" fg:w="1"/><text x="83.0651%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8151%" y="341" width="0.0818%" height="15" fill="rgb(211,214,34)" fg:x="1012" fg:w="1"/><text x="83.0651%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8151%" y="325" width="0.0818%" height="15" fill="rgb(243,124,39)" fg:x="1012" fg:w="1"/><text x="83.0651%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.8969%" y="373" width="0.0818%" height="15" fill="rgb(248,135,21)" fg:x="1013" fg:w="1"/><text x="83.1469%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0606%" y="357" width="0.0818%" height="15" fill="rgb(245,218,3)" fg:x="1015" fg:w="1"/><text x="83.3106%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1424%" y="325" width="0.0818%" height="15" fill="rgb(225,144,22)" fg:x="1016" fg:w="1"/><text x="83.3924%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1424%" y="309" width="0.0818%" height="15" fill="rgb(250,90,15)" fg:x="1016" fg:w="1"/><text x="83.3924%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1424%" y="293" width="0.0818%" height="15" fill="rgb(224,64,29)" fg:x="1016" fg:w="1"/><text x="83.3924%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.2242%" y="309" width="0.0818%" height="15" fill="rgb(217,50,47)" fg:x="1017" fg:w="1"/><text x="83.4742%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="83.3061%" y="309" width="0.4092%" height="15" fill="rgb(231,159,47)" fg:x="1018" fg:w="5"/><text x="83.5561%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="83.3061%" y="293" width="0.4092%" height="15" fill="rgb(213,89,29)" fg:x="1018" fg:w="5"/><text x="83.5561%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="83.4697%" y="277" width="0.2455%" height="15" fill="rgb(243,90,23)" fg:x="1020" fg:w="3"/><text x="83.7197%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6334%" y="261" width="0.0818%" height="15" fill="rgb(213,21,6)" fg:x="1022" fg:w="1"/><text x="83.8834%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6334%" y="245" width="0.0818%" height="15" fill="rgb(237,139,17)" fg:x="1022" fg:w="1"/><text x="83.8834%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6334%" y="229" width="0.0818%" height="15" fill="rgb(250,147,17)" fg:x="1022" fg:w="1"/><text x="83.8834%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="83.1424%" y="341" width="0.6547%" height="15" fill="rgb(212,208,42)" fg:x="1016" fg:w="8"/><text x="83.3924%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="83.2242%" y="325" width="0.5728%" height="15" fill="rgb(215,229,40)" fg:x="1017" fg:w="7"/><text x="83.4742%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7152%" y="309" width="0.0818%" height="15" fill="rgb(206,204,1)" fg:x="1023" fg:w="1"/><text x="83.9652%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.15%)</title><rect x="82.7332%" y="405" width="1.1457%" height="15" fill="rgb(230,62,32)" fg:x="1011" fg:w="14"/><text x="82.9832%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.98%)</title><rect x="82.8969%" y="389" width="0.9820%" height="15" fill="rgb(223,22,42)" fg:x="1013" fg:w="12"/><text x="83.1469%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.90%)</title><rect x="82.9787%" y="373" width="0.9002%" height="15" fill="rgb(244,6,23)" fg:x="1014" fg:w="11"/><text x="83.2287%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.74%)</title><rect x="83.1424%" y="357" width="0.7365%" height="15" fill="rgb(240,221,42)" fg:x="1016" fg:w="9"/><text x="83.3924%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7971%" y="341" width="0.0818%" height="15" fill="rgb(222,74,7)" fg:x="1024" fg:w="1"/><text x="84.0471%" y="351.50"></text></g><g><title>engine::session::Session::flush (46 samples, 3.76%)</title><rect x="80.1964%" y="581" width="3.7643%" height="15" fill="rgb(227,191,38)" fg:x="980" fg:w="46"/><text x="80.4464%" y="591.50">engi..</text></g><g><title>engine::session::Session::save_changes (45 samples, 3.68%)</title><rect x="80.2782%" y="565" width="3.6825%" height="15" fill="rgb(227,89,34)" fg:x="981" fg:w="45"/><text x="80.5282%" y="575.50">engi..</text></g><g><title>engine::session::state::State::close (45 samples, 3.68%)</title><rect x="80.2782%" y="549" width="3.6825%" height="15" fill="rgb(215,153,25)" fg:x="981" fg:w="45"/><text x="80.5282%" y="559.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (45 samples, 3.68%)</title><rect x="80.2782%" y="533" width="3.6825%" height="15" fill="rgb(215,153,46)" fg:x="981" fg:w="45"/><text x="80.5282%" y="543.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (44 samples, 3.60%)</title><rect x="80.3601%" y="517" width="3.6007%" height="15" fill="rgb(242,38,52)" fg:x="982" fg:w="44"/><text x="80.6101%" y="527.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (44 samples, 3.60%)</title><rect x="80.3601%" y="501" width="3.6007%" height="15" fill="rgb(218,112,4)" fg:x="982" fg:w="44"/><text x="80.6101%" y="511.50">engi..</text></g><g><title>kernel::model::any_entity_changes (19 samples, 1.55%)</title><rect x="82.4059%" y="485" width="1.5548%" height="15" fill="rgb(231,210,31)" fg:x="1007" fg:w="19"/><text x="82.6559%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (18 samples, 1.47%)</title><rect x="82.4877%" y="469" width="1.4730%" height="15" fill="rgb(245,223,36)" fg:x="1008" fg:w="18"/><text x="82.7377%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.47%)</title><rect x="82.4877%" y="453" width="1.4730%" height="15" fill="rgb(246,41,2)" fg:x="1008" fg:w="18"/><text x="82.7377%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.31%)</title><rect x="82.6514%" y="437" width="1.3093%" height="15" fill="rgb(227,51,31)" fg:x="1010" fg:w="16"/><text x="82.9014%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.31%)</title><rect x="82.6514%" y="421" width="1.3093%" height="15" fill="rgb(222,95,26)" fg:x="1010" fg:w="16"/><text x="82.9014%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="83.8789%" y="405" width="0.0818%" height="15" fill="rgb(224,190,1)" fg:x="1025" fg:w="1"/><text x="84.1289%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8789%" y="389" width="0.0818%" height="15" fill="rgb(209,90,42)" fg:x="1025" fg:w="1"/><text x="84.1289%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="83.9607%" y="565" width="0.0818%" height="15" fill="rgb(232,225,50)" fg:x="1026" fg:w="1"/><text x="84.2107%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.0426%" y="501" width="0.0818%" height="15" fill="rgb(239,89,47)" fg:x="1027" fg:w="1"/><text x="84.2926%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.0426%" y="485" width="0.0818%" height="15" fill="rgb(230,212,50)" fg:x="1027" fg:w="1"/><text x="84.2926%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.25%)</title><rect x="83.9607%" y="581" width="0.2455%" height="15" fill="rgb(252,1,27)" fg:x="1026" fg:w="3"/><text x="84.2107%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.0426%" y="565" width="0.1637%" height="15" fill="rgb(237,179,41)" fg:x="1027" fg:w="2"/><text x="84.2926%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.0426%" y="549" width="0.1637%" height="15" fill="rgb(214,151,37)" fg:x="1027" fg:w="2"/><text x="84.2926%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.0426%" y="533" width="0.1637%" height="15" fill="rgb(211,74,11)" fg:x="1027" fg:w="2"/><text x="84.2926%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.0426%" y="517" width="0.1637%" height="15" fill="rgb(242,21,21)" fg:x="1027" fg:w="2"/><text x="84.2926%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1244%" y="501" width="0.0818%" height="15" fill="rgb(226,106,43)" fg:x="1028" fg:w="1"/><text x="84.3744%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1244%" y="485" width="0.0818%" height="15" fill="rgb(229,162,39)" fg:x="1028" fg:w="1"/><text x="84.3744%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="84.2062%" y="533" width="0.0818%" height="15" fill="rgb(228,159,25)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="84.2062%" y="517" width="0.0818%" height="15" fill="rgb(237,32,23)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2062%" y="501" width="0.0818%" height="15" fill="rgb(212,35,32)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2062%" y="485" width="0.0818%" height="15" fill="rgb(215,199,1)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2062%" y="469" width="0.0818%" height="15" fill="rgb(215,67,13)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.2062%" y="453" width="0.0818%" height="15" fill="rgb(216,20,47)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.2062%" y="437" width="0.0818%" height="15" fill="rgb(249,183,48)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.2062%" y="421" width="0.0818%" height="15" fill="rgb(208,86,37)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.2062%" y="405" width="0.0818%" height="15" fill="rgb(251,192,7)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.2062%" y="389" width="0.0818%" height="15" fill="rgb(234,196,3)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.2062%" y="373" width="0.0818%" height="15" fill="rgb(229,150,39)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.2062%" y="357" width="0.0818%" height="15" fill="rgb(226,19,29)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.2062%" y="341" width="0.0818%" height="15" fill="rgb(226,222,2)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.2062%" y="325" width="0.0818%" height="15" fill="rgb(235,85,29)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2062%" y="309" width="0.0818%" height="15" fill="rgb(237,194,43)" fg:x="1029" fg:w="1"/><text x="84.4562%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.25%)</title><rect x="84.2062%" y="549" width="0.2455%" height="15" fill="rgb(211,4,42)" fg:x="1029" fg:w="3"/><text x="84.4562%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="84.2881%" y="533" width="0.1637%" height="15" fill="rgb(221,80,37)" fg:x="1030" fg:w="2"/><text x="84.5381%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="84.2881%" y="517" width="0.1637%" height="15" fill="rgb(222,47,31)" fg:x="1030" fg:w="2"/><text x="84.5381%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="84.2881%" y="501" width="0.1637%" height="15" fill="rgb(249,82,52)" fg:x="1030" fg:w="2"/><text x="84.5381%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="84.2881%" y="485" width="0.1637%" height="15" fill="rgb(218,203,2)" fg:x="1030" fg:w="2"/><text x="84.5381%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="84.2881%" y="469" width="0.1637%" height="15" fill="rgb(210,175,14)" fg:x="1030" fg:w="2"/><text x="84.5381%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="84.2881%" y="453" width="0.1637%" height="15" fill="rgb(216,210,12)" fg:x="1030" fg:w="2"/><text x="84.5381%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="84.2881%" y="437" width="0.1637%" height="15" fill="rgb(229,120,18)" fg:x="1030" fg:w="2"/><text x="84.5381%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="84.2881%" y="421" width="0.1637%" height="15" fill="rgb(231,174,12)" fg:x="1030" fg:w="2"/><text x="84.5381%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="84.2881%" y="405" width="0.1637%" height="15" fill="rgb(214,101,53)" fg:x="1030" fg:w="2"/><text x="84.5381%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="84.2881%" y="389" width="0.1637%" height="15" fill="rgb(246,89,43)" fg:x="1030" fg:w="2"/><text x="84.5381%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="84.3699%" y="373" width="0.0818%" height="15" fill="rgb(222,9,51)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.3699%" y="357" width="0.0818%" height="15" fill="rgb(252,221,9)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.3699%" y="341" width="0.0818%" height="15" fill="rgb(248,28,15)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="84.3699%" y="325" width="0.0818%" height="15" fill="rgb(213,54,52)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="84.3699%" y="309" width="0.0818%" height="15" fill="rgb(240,3,45)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.3699%" y="293" width="0.0818%" height="15" fill="rgb(239,138,24)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.3699%" y="277" width="0.0818%" height="15" fill="rgb(233,45,54)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.3699%" y="261" width="0.0818%" height="15" fill="rgb(220,131,2)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.3699%" y="245" width="0.0818%" height="15" fill="rgb(240,154,36)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="84.3699%" y="229" width="0.0818%" height="15" fill="rgb(251,221,1)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="84.3699%" y="213" width="0.0818%" height="15" fill="rgb(225,217,1)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="84.3699%" y="197" width="0.0818%" height="15" fill="rgb(241,105,49)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="84.3699%" y="181" width="0.0818%" height="15" fill="rgb(215,44,32)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="84.3699%" y="165" width="0.0818%" height="15" fill="rgb(213,222,14)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="84.3699%" y="149" width="0.0818%" height="15" fill="rgb(207,99,52)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.3699%" y="133" width="0.0818%" height="15" fill="rgb(214,208,52)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="84.3699%" y="117" width="0.0818%" height="15" fill="rgb(244,169,0)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.3699%" y="101" width="0.0818%" height="15" fill="rgb(216,193,37)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="84.3699%" y="85" width="0.0818%" height="15" fill="rgb(212,158,10)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="84.3699%" y="69" width="0.0818%" height="15" fill="rgb(213,110,20)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="84.3699%" y="53" width="0.0818%" height="15" fill="rgb(226,5,42)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.3699%" y="37" width="0.0818%" height="15" fill="rgb(211,93,8)" fg:x="1031" fg:w="1"/><text x="84.6199%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4517%" y="501" width="0.0818%" height="15" fill="rgb(240,208,12)" fg:x="1032" fg:w="1"/><text x="84.7017%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4517%" y="485" width="0.0818%" height="15" fill="rgb(233,127,50)" fg:x="1032" fg:w="1"/><text x="84.7017%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.5336%" y="341" width="0.0818%" height="15" fill="rgb(227,199,53)" fg:x="1033" fg:w="1"/><text x="84.7836%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="84.4517%" y="549" width="0.2455%" height="15" fill="rgb(235,199,10)" fg:x="1032" fg:w="3"/><text x="84.7017%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="84.4517%" y="533" width="0.2455%" height="15" fill="rgb(228,148,35)" fg:x="1032" fg:w="3"/><text x="84.7017%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="84.4517%" y="517" width="0.2455%" height="15" fill="rgb(217,87,19)" fg:x="1032" fg:w="3"/><text x="84.7017%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.5336%" y="501" width="0.1637%" height="15" fill="rgb(239,9,32)" fg:x="1033" fg:w="2"/><text x="84.7836%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.5336%" y="485" width="0.1637%" height="15" fill="rgb(229,101,29)" fg:x="1033" fg:w="2"/><text x="84.7836%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.5336%" y="469" width="0.1637%" height="15" fill="rgb(208,143,26)" fg:x="1033" fg:w="2"/><text x="84.7836%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.5336%" y="453" width="0.1637%" height="15" fill="rgb(214,10,2)" fg:x="1033" fg:w="2"/><text x="84.7836%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="84.5336%" y="437" width="0.1637%" height="15" fill="rgb(254,203,30)" fg:x="1033" fg:w="2"/><text x="84.7836%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.5336%" y="421" width="0.1637%" height="15" fill="rgb(242,45,3)" fg:x="1033" fg:w="2"/><text x="84.7836%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.5336%" y="405" width="0.1637%" height="15" fill="rgb(209,146,51)" fg:x="1033" fg:w="2"/><text x="84.7836%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.5336%" y="389" width="0.1637%" height="15" fill="rgb(222,80,5)" fg:x="1033" fg:w="2"/><text x="84.7836%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.5336%" y="373" width="0.1637%" height="15" fill="rgb(252,80,35)" fg:x="1033" fg:w="2"/><text x="84.7836%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.5336%" y="357" width="0.1637%" height="15" fill="rgb(246,125,28)" fg:x="1033" fg:w="2"/><text x="84.7836%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6154%" y="341" width="0.0818%" height="15" fill="rgb(224,143,51)" fg:x="1034" fg:w="1"/><text x="84.8654%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="84.6972%" y="549" width="0.0818%" height="15" fill="rgb(205,24,17)" fg:x="1035" fg:w="1"/><text x="84.9472%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="84.6972%" y="533" width="0.0818%" height="15" fill="rgb(253,128,30)" fg:x="1035" fg:w="1"/><text x="84.9472%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6972%" y="517" width="0.0818%" height="15" fill="rgb(214,153,25)" fg:x="1035" fg:w="1"/><text x="84.9472%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="84.7791%" y="533" width="0.0818%" height="15" fill="rgb(214,4,28)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.7791%" y="517" width="0.0818%" height="15" fill="rgb(235,179,52)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7791%" y="501" width="0.0818%" height="15" fill="rgb(233,27,42)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7791%" y="485" width="0.0818%" height="15" fill="rgb(238,35,25)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7791%" y="469" width="0.0818%" height="15" fill="rgb(227,44,31)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7791%" y="453" width="0.0818%" height="15" fill="rgb(232,201,13)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7791%" y="437" width="0.0818%" height="15" fill="rgb(224,172,52)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.7791%" y="421" width="0.0818%" height="15" fill="rgb(214,27,26)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.7791%" y="405" width="0.0818%" height="15" fill="rgb(210,185,52)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.7791%" y="389" width="0.0818%" height="15" fill="rgb(249,59,32)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7791%" y="373" width="0.0818%" height="15" fill="rgb(242,209,18)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7791%" y="357" width="0.0818%" height="15" fill="rgb(229,0,18)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.7791%" y="341" width="0.0818%" height="15" fill="rgb(217,138,29)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.7791%" y="325" width="0.0818%" height="15" fill="rgb(215,72,42)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.7791%" y="309" width="0.0818%" height="15" fill="rgb(254,115,11)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.7791%" y="293" width="0.0818%" height="15" fill="rgb(205,133,39)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7791%" y="277" width="0.0818%" height="15" fill="rgb(211,36,27)" fg:x="1036" fg:w="1"/><text x="85.0291%" y="287.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="84.7791%" y="549" width="0.1637%" height="15" fill="rgb(221,48,10)" fg:x="1036" fg:w="2"/><text x="85.0291%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.8609%" y="533" width="0.0818%" height="15" fill="rgb(230,172,50)" fg:x="1037" fg:w="1"/><text x="85.1109%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8609%" y="517" width="0.0818%" height="15" fill="rgb(249,72,18)" fg:x="1037" fg:w="1"/><text x="85.1109%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.8609%" y="501" width="0.0818%" height="15" fill="rgb(237,58,48)" fg:x="1037" fg:w="1"/><text x="85.1109%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8609%" y="485" width="0.0818%" height="15" fill="rgb(242,123,3)" fg:x="1037" fg:w="1"/><text x="85.1109%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8609%" y="469" width="0.0818%" height="15" fill="rgb(232,111,32)" fg:x="1037" fg:w="1"/><text x="85.1109%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.9427%" y="501" width="0.0818%" height="15" fill="rgb(229,108,3)" fg:x="1038" fg:w="1"/><text x="85.1927%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.9427%" y="485" width="0.0818%" height="15" fill="rgb(222,158,10)" fg:x="1038" fg:w="1"/><text x="85.1927%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9427%" y="469" width="0.0818%" height="15" fill="rgb(205,34,49)" fg:x="1038" fg:w="1"/><text x="85.1927%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9427%" y="453" width="0.0818%" height="15" fill="rgb(232,21,14)" fg:x="1038" fg:w="1"/><text x="85.1927%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9427%" y="437" width="0.0818%" height="15" fill="rgb(229,127,44)" fg:x="1038" fg:w="1"/><text x="85.1927%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9427%" y="421" width="0.0818%" height="15" fill="rgb(232,171,4)" fg:x="1038" fg:w="1"/><text x="85.1927%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.9427%" y="405" width="0.0818%" height="15" fill="rgb(250,92,16)" fg:x="1038" fg:w="1"/><text x="85.1927%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9427%" y="389" width="0.0818%" height="15" fill="rgb(230,103,38)" fg:x="1038" fg:w="1"/><text x="85.1927%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9427%" y="373" width="0.0818%" height="15" fill="rgb(253,167,9)" fg:x="1038" fg:w="1"/><text x="85.1927%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9427%" y="357" width="0.0818%" height="15" fill="rgb(222,118,11)" fg:x="1038" fg:w="1"/><text x="85.1927%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="84.9427%" y="549" width="0.3273%" height="15" fill="rgb(240,202,0)" fg:x="1038" fg:w="4"/><text x="85.1927%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.33%)</title><rect x="84.9427%" y="533" width="0.3273%" height="15" fill="rgb(236,124,4)" fg:x="1038" fg:w="4"/><text x="85.1927%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.33%)</title><rect x="84.9427%" y="517" width="0.3273%" height="15" fill="rgb(244,128,18)" fg:x="1038" fg:w="4"/><text x="85.1927%" y="527.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.25%)</title><rect x="85.0245%" y="501" width="0.2455%" height="15" fill="rgb(231,206,5)" fg:x="1039" fg:w="3"/><text x="85.2745%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.1064%" y="485" width="0.1637%" height="15" fill="rgb(237,111,8)" fg:x="1040" fg:w="2"/><text x="85.3564%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1882%" y="469" width="0.0818%" height="15" fill="rgb(225,127,3)" fg:x="1041" fg:w="1"/><text x="85.4382%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1882%" y="453" width="0.0818%" height="15" fill="rgb(222,85,48)" fg:x="1041" fg:w="1"/><text x="85.4382%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1882%" y="437" width="0.0818%" height="15" fill="rgb(221,108,37)" fg:x="1041" fg:w="1"/><text x="85.4382%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1882%" y="421" width="0.0818%" height="15" fill="rgb(226,169,36)" fg:x="1041" fg:w="1"/><text x="85.4382%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1882%" y="405" width="0.0818%" height="15" fill="rgb(237,76,12)" fg:x="1041" fg:w="1"/><text x="85.4382%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1882%" y="389" width="0.0818%" height="15" fill="rgb(210,227,32)" fg:x="1041" fg:w="1"/><text x="85.4382%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.15%)</title><rect x="84.2062%" y="565" width="1.1457%" height="15" fill="rgb(214,117,20)" fg:x="1029" fg:w="14"/><text x="84.4562%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="85.2700%" y="549" width="0.0818%" height="15" fill="rgb(234,119,41)" fg:x="1042" fg:w="1"/><text x="85.5200%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3519%" y="469" width="0.0818%" height="15" fill="rgb(230,130,47)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3519%" y="453" width="0.0818%" height="15" fill="rgb(215,21,41)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3519%" y="437" width="0.0818%" height="15" fill="rgb(226,26,53)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3519%" y="421" width="0.0818%" height="15" fill="rgb(221,92,23)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3519%" y="405" width="0.0818%" height="15" fill="rgb(213,156,21)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3519%" y="389" width="0.0818%" height="15" fill="rgb(254,166,29)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.3519%" y="373" width="0.0818%" height="15" fill="rgb(213,71,1)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.3519%" y="357" width="0.0818%" height="15" fill="rgb(245,8,13)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.3519%" y="341" width="0.0818%" height="15" fill="rgb(213,32,32)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="85.3519%" y="325" width="0.0818%" height="15" fill="rgb(251,86,50)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.3519%" y="309" width="0.0818%" height="15" fill="rgb(252,92,41)" fg:x="1043" fg:w="1"/><text x="85.6019%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.3519%" y="517" width="0.1637%" height="15" fill="rgb(234,70,35)" fg:x="1043" fg:w="2"/><text x="85.6019%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.3519%" y="501" width="0.1637%" height="15" fill="rgb(210,157,19)" fg:x="1043" fg:w="2"/><text x="85.6019%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.3519%" y="485" width="0.1637%" height="15" fill="rgb(206,20,45)" fg:x="1043" fg:w="2"/><text x="85.6019%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.4337%" y="469" width="0.0818%" height="15" fill="rgb(207,34,7)" fg:x="1044" fg:w="1"/><text x="85.6837%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.4337%" y="453" width="0.0818%" height="15" fill="rgb(253,151,14)" fg:x="1044" fg:w="1"/><text x="85.6837%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.4337%" y="437" width="0.0818%" height="15" fill="rgb(252,1,18)" fg:x="1044" fg:w="1"/><text x="85.6837%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.4337%" y="421" width="0.0818%" height="15" fill="rgb(214,77,52)" fg:x="1044" fg:w="1"/><text x="85.6837%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.5155%" y="437" width="0.0818%" height="15" fill="rgb(254,106,35)" fg:x="1045" fg:w="1"/><text x="85.7655%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.5155%" y="469" width="0.1637%" height="15" fill="rgb(212,67,40)" fg:x="1045" fg:w="2"/><text x="85.7655%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="85.5155%" y="453" width="0.1637%" height="15" fill="rgb(228,76,23)" fg:x="1045" fg:w="2"/><text x="85.7655%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5974%" y="437" width="0.0818%" height="15" fill="rgb(250,198,5)" fg:x="1046" fg:w="1"/><text x="85.8474%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5974%" y="421" width="0.0818%" height="15" fill="rgb(209,20,25)" fg:x="1046" fg:w="1"/><text x="85.8474%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.5974%" y="405" width="0.0818%" height="15" fill="rgb(236,32,4)" fg:x="1046" fg:w="1"/><text x="85.8474%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.41%)</title><rect x="85.3519%" y="549" width="0.4092%" height="15" fill="rgb(215,31,6)" fg:x="1043" fg:w="5"/><text x="85.6019%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.41%)</title><rect x="85.3519%" y="533" width="0.4092%" height="15" fill="rgb(207,186,49)" fg:x="1043" fg:w="5"/><text x="85.6019%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.25%)</title><rect x="85.5155%" y="517" width="0.2455%" height="15" fill="rgb(211,212,49)" fg:x="1045" fg:w="3"/><text x="85.7655%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="85.5155%" y="501" width="0.2455%" height="15" fill="rgb(229,51,41)" fg:x="1045" fg:w="3"/><text x="85.7655%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="85.5155%" y="485" width="0.2455%" height="15" fill="rgb(205,225,36)" fg:x="1045" fg:w="3"/><text x="85.7655%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6792%" y="469" width="0.0818%" height="15" fill="rgb(209,213,45)" fg:x="1047" fg:w="1"/><text x="85.9292%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6792%" y="453" width="0.0818%" height="15" fill="rgb(219,35,49)" fg:x="1047" fg:w="1"/><text x="85.9292%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.6792%" y="437" width="0.0818%" height="15" fill="rgb(215,205,22)" fg:x="1047" fg:w="1"/><text x="85.9292%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.6792%" y="421" width="0.0818%" height="15" fill="rgb(248,204,34)" fg:x="1047" fg:w="1"/><text x="85.9292%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7610%" y="501" width="0.0818%" height="15" fill="rgb(219,223,31)" fg:x="1048" fg:w="1"/><text x="86.0110%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7610%" y="485" width="0.0818%" height="15" fill="rgb(236,14,8)" fg:x="1048" fg:w="1"/><text x="86.0110%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.7610%" y="469" width="0.0818%" height="15" fill="rgb(243,129,23)" fg:x="1048" fg:w="1"/><text x="86.0110%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.7610%" y="549" width="0.1637%" height="15" fill="rgb(205,204,5)" fg:x="1048" fg:w="2"/><text x="86.0110%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="85.7610%" y="533" width="0.1637%" height="15" fill="rgb(244,115,32)" fg:x="1048" fg:w="2"/><text x="86.0110%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.7610%" y="517" width="0.1637%" height="15" fill="rgb(229,123,14)" fg:x="1048" fg:w="2"/><text x="86.0110%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.8429%" y="501" width="0.0818%" height="15" fill="rgb(250,85,1)" fg:x="1049" fg:w="1"/><text x="86.0929%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="85.8429%" y="485" width="0.0818%" height="15" fill="rgb(209,141,54)" fg:x="1049" fg:w="1"/><text x="86.0929%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0065%" y="389" width="0.0818%" height="15" fill="rgb(244,107,39)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0065%" y="373" width="0.0818%" height="15" fill="rgb(230,68,26)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.0065%" y="357" width="0.0818%" height="15" fill="rgb(220,178,33)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.0065%" y="341" width="0.0818%" height="15" fill="rgb(220,77,53)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.0065%" y="325" width="0.0818%" height="15" fill="rgb(224,108,19)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0065%" y="309" width="0.0818%" height="15" fill="rgb(223,203,27)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0065%" y="293" width="0.0818%" height="15" fill="rgb(211,32,46)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.0065%" y="277" width="0.0818%" height="15" fill="rgb(240,101,27)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.0065%" y="261" width="0.0818%" height="15" fill="rgb(217,210,11)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.0065%" y="245" width="0.0818%" height="15" fill="rgb(236,130,21)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.0065%" y="229" width="0.0818%" height="15" fill="rgb(250,136,8)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0065%" y="213" width="0.0818%" height="15" fill="rgb(243,223,36)" fg:x="1051" fg:w="1"/><text x="86.2565%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.0065%" y="405" width="0.1637%" height="15" fill="rgb(246,184,8)" fg:x="1051" fg:w="2"/><text x="86.2565%" y="415.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="86.0884%" y="389" width="0.0818%" height="15" fill="rgb(222,158,36)" fg:x="1052" fg:w="1"/><text x="86.3384%" y="399.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.0884%" y="373" width="0.0818%" height="15" fill="rgb(210,220,19)" fg:x="1052" fg:w="1"/><text x="86.3384%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="85.9247%" y="421" width="0.3273%" height="15" fill="rgb(246,44,38)" fg:x="1050" fg:w="4"/><text x="86.1747%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1702%" y="405" width="0.0818%" height="15" fill="rgb(246,186,14)" fg:x="1053" fg:w="1"/><text x="86.4202%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1702%" y="389" width="0.0818%" height="15" fill="rgb(233,193,20)" fg:x="1053" fg:w="1"/><text x="86.4202%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.1702%" y="373" width="0.0818%" height="15" fill="rgb(215,60,5)" fg:x="1053" fg:w="1"/><text x="86.4202%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.1702%" y="357" width="0.0818%" height="15" fill="rgb(207,128,10)" fg:x="1053" fg:w="1"/><text x="86.4202%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.1702%" y="341" width="0.0818%" height="15" fill="rgb(238,84,54)" fg:x="1053" fg:w="1"/><text x="86.4202%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="86.1702%" y="325" width="0.0818%" height="15" fill="rgb(213,130,11)" fg:x="1053" fg:w="1"/><text x="86.4202%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.1702%" y="309" width="0.0818%" height="15" fill="rgb(235,62,9)" fg:x="1053" fg:w="1"/><text x="86.4202%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="85.9247%" y="453" width="0.4092%" height="15" fill="rgb(222,64,24)" fg:x="1050" fg:w="5"/><text x="86.1747%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="85.9247%" y="437" width="0.4092%" height="15" fill="rgb(238,193,42)" fg:x="1050" fg:w="5"/><text x="86.1747%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.2520%" y="421" width="0.0818%" height="15" fill="rgb(243,204,46)" fg:x="1054" fg:w="1"/><text x="86.5020%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.2520%" y="405" width="0.0818%" height="15" fill="rgb(243,196,11)" fg:x="1054" fg:w="1"/><text x="86.5020%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.2520%" y="389" width="0.0818%" height="15" fill="rgb(232,77,22)" fg:x="1054" fg:w="1"/><text x="86.5020%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.2520%" y="373" width="0.0818%" height="15" fill="rgb(215,80,25)" fg:x="1054" fg:w="1"/><text x="86.5020%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.2520%" y="357" width="0.0818%" height="15" fill="rgb(210,173,7)" fg:x="1054" fg:w="1"/><text x="86.5020%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="86.2520%" y="341" width="0.0818%" height="15" fill="rgb(207,101,10)" fg:x="1054" fg:w="1"/><text x="86.5020%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.2520%" y="325" width="0.0818%" height="15" fill="rgb(246,57,48)" fg:x="1054" fg:w="1"/><text x="86.5020%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.49%)</title><rect x="85.9247%" y="549" width="0.4910%" height="15" fill="rgb(236,184,40)" fg:x="1050" fg:w="6"/><text x="86.1747%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.49%)</title><rect x="85.9247%" y="533" width="0.4910%" height="15" fill="rgb(210,205,13)" fg:x="1050" fg:w="6"/><text x="86.1747%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.49%)</title><rect x="85.9247%" y="517" width="0.4910%" height="15" fill="rgb(231,129,42)" fg:x="1050" fg:w="6"/><text x="86.1747%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.49%)</title><rect x="85.9247%" y="501" width="0.4910%" height="15" fill="rgb(220,229,54)" fg:x="1050" fg:w="6"/><text x="86.1747%" y="511.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="85.9247%" y="485" width="0.4910%" height="15" fill="rgb(230,192,26)" fg:x="1050" fg:w="6"/><text x="86.1747%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="85.9247%" y="469" width="0.4910%" height="15" fill="rgb(253,18,30)" fg:x="1050" fg:w="6"/><text x="86.1747%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.3339%" y="453" width="0.0818%" height="15" fill="rgb(216,62,53)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.3339%" y="437" width="0.0818%" height="15" fill="rgb(230,79,29)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.3339%" y="421" width="0.0818%" height="15" fill="rgb(242,26,26)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.3339%" y="405" width="0.0818%" height="15" fill="rgb(227,125,21)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.3339%" y="389" width="0.0818%" height="15" fill="rgb(229,93,26)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.3339%" y="373" width="0.0818%" height="15" fill="rgb(227,228,8)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.3339%" y="357" width="0.0818%" height="15" fill="rgb(233,56,0)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.3339%" y="341" width="0.0818%" height="15" fill="rgb(225,185,17)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.3339%" y="325" width="0.0818%" height="15" fill="rgb(238,202,30)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.3339%" y="309" width="0.0818%" height="15" fill="rgb(236,60,13)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="86.3339%" y="293" width="0.0818%" height="15" fill="rgb(244,92,0)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="86.3339%" y="277" width="0.0818%" height="15" fill="rgb(225,57,15)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.3339%" y="261" width="0.0818%" height="15" fill="rgb(228,5,28)" fg:x="1055" fg:w="1"/><text x="86.5839%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="86.4157%" y="533" width="0.0818%" height="15" fill="rgb(252,34,51)" fg:x="1056" fg:w="1"/><text x="86.6657%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="86.4157%" y="517" width="0.0818%" height="15" fill="rgb(235,58,7)" fg:x="1056" fg:w="1"/><text x="86.6657%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4157%" y="501" width="0.0818%" height="15" fill="rgb(250,132,20)" fg:x="1056" fg:w="1"/><text x="86.6657%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (29 samples, 2.37%)</title><rect x="84.2062%" y="581" width="2.3732%" height="15" fill="rgb(217,164,0)" fg:x="1029" fg:w="29"/><text x="84.4562%" y="591.50">pl..</text></g><g><title>plugins_core::tools::set_container (15 samples, 1.23%)</title><rect x="85.3519%" y="565" width="1.2275%" height="15" fill="rgb(208,220,35)" fg:x="1043" fg:w="15"/><text x="85.6019%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="86.4157%" y="549" width="0.1637%" height="15" fill="rgb(227,42,51)" fg:x="1056" fg:w="2"/><text x="86.6657%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.4975%" y="533" width="0.0818%" height="15" fill="rgb(225,146,38)" fg:x="1057" fg:w="1"/><text x="86.7475%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4975%" y="517" width="0.0818%" height="15" fill="rgb(252,108,37)" fg:x="1057" fg:w="1"/><text x="86.7475%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.4975%" y="501" width="0.0818%" height="15" fill="rgb(244,101,24)" fg:x="1057" fg:w="1"/><text x="86.7475%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4975%" y="485" width="0.0818%" height="15" fill="rgb(213,161,50)" fg:x="1057" fg:w="1"/><text x="86.7475%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.4975%" y="469" width="0.0818%" height="15" fill="rgb(248,159,19)" fg:x="1057" fg:w="1"/><text x="86.7475%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.6612%" y="549" width="0.0818%" height="15" fill="rgb(233,179,15)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="86.6612%" y="533" width="0.0818%" height="15" fill="rgb(248,178,3)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6612%" y="517" width="0.0818%" height="15" fill="rgb(245,190,41)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6612%" y="501" width="0.0818%" height="15" fill="rgb(218,151,19)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6612%" y="485" width="0.0818%" height="15" fill="rgb(245,25,44)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.6612%" y="469" width="0.0818%" height="15" fill="rgb(235,172,47)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.6612%" y="453" width="0.0818%" height="15" fill="rgb(246,33,12)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.6612%" y="437" width="0.0818%" height="15" fill="rgb(214,124,7)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6612%" y="421" width="0.0818%" height="15" fill="rgb(246,186,18)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6612%" y="405" width="0.0818%" height="15" fill="rgb(231,94,1)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.6612%" y="389" width="0.0818%" height="15" fill="rgb(208,33,48)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.6612%" y="373" width="0.0818%" height="15" fill="rgb(208,195,44)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.6612%" y="357" width="0.0818%" height="15" fill="rgb(226,13,52)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.6612%" y="341" width="0.0818%" height="15" fill="rgb(217,219,45)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6612%" y="325" width="0.0818%" height="15" fill="rgb(223,45,25)" fg:x="1059" fg:w="1"/><text x="86.9112%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.7430%" y="533" width="0.0818%" height="15" fill="rgb(241,163,0)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.7430%" y="517" width="0.0818%" height="15" fill="rgb(216,68,47)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.7430%" y="501" width="0.0818%" height="15" fill="rgb(236,119,45)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.7430%" y="485" width="0.0818%" height="15" fill="rgb(209,188,24)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7430%" y="469" width="0.0818%" height="15" fill="rgb(221,118,7)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7430%" y="453" width="0.0818%" height="15" fill="rgb(213,148,43)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7430%" y="437" width="0.0818%" height="15" fill="rgb(231,21,43)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7430%" y="421" width="0.0818%" height="15" fill="rgb(232,213,43)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.7430%" y="405" width="0.0818%" height="15" fill="rgb(239,145,50)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7430%" y="389" width="0.0818%" height="15" fill="rgb(222,131,18)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7430%" y="373" width="0.0818%" height="15" fill="rgb(243,181,13)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7430%" y="357" width="0.0818%" height="15" fill="rgb(212,74,41)" fg:x="1060" fg:w="1"/><text x="86.9930%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.25%)</title><rect x="86.6612%" y="565" width="0.2455%" height="15" fill="rgb(237,143,34)" fg:x="1059" fg:w="3"/><text x="86.9112%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="86.7430%" y="549" width="0.1637%" height="15" fill="rgb(228,139,0)" fg:x="1060" fg:w="2"/><text x="86.9930%" y="559.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="86.8249%" y="533" width="0.0818%" height="15" fill="rgb(227,214,11)" fg:x="1061" fg:w="1"/><text x="87.0749%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8249%" y="517" width="0.0818%" height="15" fill="rgb(228,118,39)" fg:x="1061" fg:w="1"/><text x="87.0749%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9067%" y="469" width="0.0818%" height="15" fill="rgb(207,117,22)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9067%" y="453" width="0.0818%" height="15" fill="rgb(225,91,8)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9067%" y="437" width="0.0818%" height="15" fill="rgb(230,219,48)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9067%" y="421" width="0.0818%" height="15" fill="rgb(244,0,23)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9067%" y="405" width="0.0818%" height="15" fill="rgb(206,212,23)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9067%" y="389" width="0.0818%" height="15" fill="rgb(254,62,10)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9067%" y="373" width="0.0818%" height="15" fill="rgb(236,58,8)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.9067%" y="357" width="0.0818%" height="15" fill="rgb(232,212,17)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.9067%" y="341" width="0.0818%" height="15" fill="rgb(206,132,9)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.9067%" y="325" width="0.0818%" height="15" fill="rgb(234,97,28)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9067%" y="309" width="0.0818%" height="15" fill="rgb(254,144,9)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9067%" y="293" width="0.0818%" height="15" fill="rgb(244,204,43)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.9067%" y="277" width="0.0818%" height="15" fill="rgb(248,177,16)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.9067%" y="261" width="0.0818%" height="15" fill="rgb(219,110,15)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.9067%" y="245" width="0.0818%" height="15" fill="rgb(212,203,25)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.9067%" y="229" width="0.0818%" height="15" fill="rgb(205,50,1)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9067%" y="213" width="0.0818%" height="15" fill="rgb(222,152,41)" fg:x="1062" fg:w="1"/><text x="87.1567%" y="223.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="86.9067%" y="549" width="0.1637%" height="15" fill="rgb(236,83,3)" fg:x="1062" fg:w="2"/><text x="87.1567%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="86.9067%" y="533" width="0.1637%" height="15" fill="rgb(214,30,54)" fg:x="1062" fg:w="2"/><text x="87.1567%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.9067%" y="517" width="0.1637%" height="15" fill="rgb(250,117,31)" fg:x="1062" fg:w="2"/><text x="87.1567%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.9067%" y="501" width="0.1637%" height="15" fill="rgb(228,77,14)" fg:x="1062" fg:w="2"/><text x="87.1567%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.9067%" y="485" width="0.1637%" height="15" fill="rgb(241,3,28)" fg:x="1062" fg:w="2"/><text x="87.1567%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9885%" y="469" width="0.0818%" height="15" fill="rgb(221,175,52)" fg:x="1063" fg:w="1"/><text x="87.2385%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.9885%" y="453" width="0.0818%" height="15" fill="rgb(237,91,6)" fg:x="1063" fg:w="1"/><text x="87.2385%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9885%" y="437" width="0.0818%" height="15" fill="rgb(246,46,42)" fg:x="1063" fg:w="1"/><text x="87.2385%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9885%" y="421" width="0.0818%" height="15" fill="rgb(235,199,0)" fg:x="1063" fg:w="1"/><text x="87.2385%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9885%" y="405" width="0.0818%" height="15" fill="rgb(224,44,40)" fg:x="1063" fg:w="1"/><text x="87.2385%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9885%" y="389" width="0.0818%" height="15" fill="rgb(209,24,35)" fg:x="1063" fg:w="1"/><text x="87.2385%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.9885%" y="373" width="0.0818%" height="15" fill="rgb(244,46,22)" fg:x="1063" fg:w="1"/><text x="87.2385%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.9885%" y="357" width="0.0818%" height="15" fill="rgb(235,99,8)" fg:x="1063" fg:w="1"/><text x="87.2385%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (103 samples, 8.43%)</title><rect x="78.7234%" y="597" width="8.4288%" height="15" fill="rgb(218,127,36)" fg:x="962" fg:w="103"/><text x="78.9734%" y="607.50">plugins_core..</text></g><g><title>plugins_core::build::Build::occupying (7 samples, 0.57%)</title><rect x="86.5794%" y="581" width="0.5728%" height="15" fill="rgb(238,47,46)" fg:x="1058" fg:w="7"/><text x="86.8294%" y="591.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.25%)</title><rect x="86.9067%" y="565" width="0.2455%" height="15" fill="rgb(233,65,17)" fg:x="1062" fg:w="3"/><text x="87.1567%" y="575.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="87.0704%" y="549" width="0.0818%" height="15" fill="rgb(239,22,33)" fg:x="1064" fg:w="1"/><text x="87.3204%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="87.0704%" y="533" width="0.0818%" height="15" fill="rgb(243,66,43)" fg:x="1064" fg:w="1"/><text x="87.3204%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="87.0704%" y="517" width="0.0818%" height="15" fill="rgb(235,210,28)" fg:x="1064" fg:w="1"/><text x="87.3204%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.0704%" y="501" width="0.0818%" height="15" fill="rgb(205,191,50)" fg:x="1064" fg:w="1"/><text x="87.3204%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.0704%" y="485" width="0.0818%" height="15" fill="rgb(251,217,19)" fg:x="1064" fg:w="1"/><text x="87.3204%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.0704%" y="469" width="0.0818%" height="15" fill="rgb(205,174,37)" fg:x="1064" fg:w="1"/><text x="87.3204%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0704%" y="453" width="0.0818%" height="15" fill="rgb(212,158,42)" fg:x="1064" fg:w="1"/><text x="87.3204%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0704%" y="437" width="0.0818%" height="15" fill="rgb(212,208,51)" fg:x="1064" fg:w="1"/><text x="87.3204%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0704%" y="421" width="0.0818%" height="15" fill="rgb(225,198,20)" fg:x="1064" fg:w="1"/><text x="87.3204%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0704%" y="405" width="0.0818%" height="15" fill="rgb(247,41,44)" fg:x="1064" fg:w="1"/><text x="87.3204%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="87.1522%" y="565" width="0.0818%" height="15" fill="rgb(228,33,41)" fg:x="1065" fg:w="1"/><text x="87.4022%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="87.1522%" y="549" width="0.0818%" height="15" fill="rgb(215,47,52)" fg:x="1065" fg:w="1"/><text x="87.4022%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.1522%" y="533" width="0.0818%" height="15" fill="rgb(248,106,37)" fg:x="1065" fg:w="1"/><text x="87.4022%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.1522%" y="517" width="0.0818%" height="15" fill="rgb(238,91,29)" fg:x="1065" fg:w="1"/><text x="87.4022%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.1522%" y="501" width="0.0818%" height="15" fill="rgb(226,111,40)" fg:x="1065" fg:w="1"/><text x="87.4022%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.1522%" y="485" width="0.0818%" height="15" fill="rgb(229,159,36)" fg:x="1065" fg:w="1"/><text x="87.4022%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="87.1522%" y="469" width="0.0818%" height="15" fill="rgb(221,109,4)" fg:x="1065" fg:w="1"/><text x="87.4022%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.2340%" y="549" width="0.0818%" height="15" fill="rgb(236,56,25)" fg:x="1066" fg:w="1"/><text x="87.4840%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2340%" y="533" width="0.0818%" height="15" fill="rgb(244,113,23)" fg:x="1066" fg:w="1"/><text x="87.4840%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.25%)</title><rect x="87.1522%" y="597" width="0.2455%" height="15" fill="rgb(249,132,2)" fg:x="1065" fg:w="3"/><text x="87.4022%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.25%)</title><rect x="87.1522%" y="581" width="0.2455%" height="15" fill="rgb(205,185,21)" fg:x="1065" fg:w="3"/><text x="87.4022%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="87.2340%" y="565" width="0.1637%" height="15" fill="rgb(245,130,2)" fg:x="1066" fg:w="2"/><text x="87.4840%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.3159%" y="549" width="0.0818%" height="15" fill="rgb(246,71,26)" fg:x="1067" fg:w="1"/><text x="87.5659%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.3159%" y="533" width="0.0818%" height="15" fill="rgb(234,194,6)" fg:x="1067" fg:w="1"/><text x="87.5659%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.3159%" y="517" width="0.0818%" height="15" fill="rgb(206,24,32)" fg:x="1067" fg:w="1"/><text x="87.5659%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3159%" y="501" width="0.0818%" height="15" fill="rgb(233,7,54)" fg:x="1067" fg:w="1"/><text x="87.5659%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="87.3977%" y="549" width="0.0818%" height="15" fill="rgb(252,46,1)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.3977%" y="533" width="0.0818%" height="15" fill="rgb(216,113,53)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.3977%" y="517" width="0.0818%" height="15" fill="rgb(215,40,24)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.3977%" y="501" width="0.0818%" height="15" fill="rgb(233,222,8)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.3977%" y="485" width="0.0818%" height="15" fill="rgb(248,73,28)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.3977%" y="469" width="0.0818%" height="15" fill="rgb(247,126,28)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.3977%" y="453" width="0.0818%" height="15" fill="rgb(242,173,54)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.3977%" y="437" width="0.0818%" height="15" fill="rgb(244,186,22)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.3977%" y="421" width="0.0818%" height="15" fill="rgb(231,187,4)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.3977%" y="405" width="0.0818%" height="15" fill="rgb(252,66,47)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.3977%" y="389" width="0.0818%" height="15" fill="rgb(240,228,28)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3977%" y="373" width="0.0818%" height="15" fill="rgb(237,63,43)" fg:x="1068" fg:w="1"/><text x="87.6477%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="87.4795%" y="549" width="0.0818%" height="15" fill="rgb(214,1,44)" fg:x="1069" fg:w="1"/><text x="87.7295%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="87.4795%" y="533" width="0.0818%" height="15" fill="rgb(212,2,46)" fg:x="1069" fg:w="1"/><text x="87.7295%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="87.4795%" y="517" width="0.0818%" height="15" fill="rgb(213,142,5)" fg:x="1069" fg:w="1"/><text x="87.7295%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4795%" y="501" width="0.0818%" height="15" fill="rgb(229,135,1)" fg:x="1069" fg:w="1"/><text x="87.7295%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.5614%" y="501" width="0.0818%" height="15" fill="rgb(252,98,38)" fg:x="1070" fg:w="1"/><text x="87.8114%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.5614%" y="485" width="0.0818%" height="15" fill="rgb(206,89,40)" fg:x="1070" fg:w="1"/><text x="87.8114%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5614%" y="469" width="0.0818%" height="15" fill="rgb(219,73,36)" fg:x="1070" fg:w="1"/><text x="87.8114%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5614%" y="453" width="0.0818%" height="15" fill="rgb(207,168,32)" fg:x="1070" fg:w="1"/><text x="87.8114%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.5614%" y="437" width="0.0818%" height="15" fill="rgb(215,113,21)" fg:x="1070" fg:w="1"/><text x="87.8114%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5614%" y="421" width="0.0818%" height="15" fill="rgb(217,144,43)" fg:x="1070" fg:w="1"/><text x="87.8114%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6432%" y="469" width="0.0818%" height="15" fill="rgb(249,48,50)" fg:x="1071" fg:w="1"/><text x="87.8932%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.6432%" y="453" width="0.0818%" height="15" fill="rgb(242,1,26)" fg:x="1071" fg:w="1"/><text x="87.8932%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6432%" y="437" width="0.0818%" height="15" fill="rgb(231,167,42)" fg:x="1071" fg:w="1"/><text x="87.8932%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6432%" y="421" width="0.0818%" height="15" fill="rgb(242,177,45)" fg:x="1071" fg:w="1"/><text x="87.8932%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6432%" y="405" width="0.0818%" height="15" fill="rgb(232,121,42)" fg:x="1071" fg:w="1"/><text x="87.8932%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6432%" y="389" width="0.0818%" height="15" fill="rgb(205,8,42)" fg:x="1071" fg:w="1"/><text x="87.8932%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.6432%" y="373" width="0.0818%" height="15" fill="rgb(238,199,24)" fg:x="1071" fg:w="1"/><text x="87.8932%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="87.3977%" y="565" width="0.4092%" height="15" fill="rgb(228,112,2)" fg:x="1068" fg:w="5"/><text x="87.6477%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.25%)</title><rect x="87.5614%" y="549" width="0.2455%" height="15" fill="rgb(215,115,33)" fg:x="1070" fg:w="3"/><text x="87.8114%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.25%)</title><rect x="87.5614%" y="533" width="0.2455%" height="15" fill="rgb(230,209,34)" fg:x="1070" fg:w="3"/><text x="87.8114%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.25%)</title><rect x="87.5614%" y="517" width="0.2455%" height="15" fill="rgb(246,76,12)" fg:x="1070" fg:w="3"/><text x="87.8114%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="87.6432%" y="501" width="0.1637%" height="15" fill="rgb(240,110,9)" fg:x="1071" fg:w="2"/><text x="87.8932%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="87.6432%" y="485" width="0.1637%" height="15" fill="rgb(224,94,46)" fg:x="1071" fg:w="2"/><text x="87.8932%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.7250%" y="469" width="0.0818%" height="15" fill="rgb(247,150,22)" fg:x="1072" fg:w="1"/><text x="87.9750%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.7250%" y="453" width="0.0818%" height="15" fill="rgb(249,85,13)" fg:x="1072" fg:w="1"/><text x="87.9750%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="87.7250%" y="437" width="0.0818%" height="15" fill="rgb(208,77,41)" fg:x="1072" fg:w="1"/><text x="87.9750%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.7250%" y="421" width="0.0818%" height="15" fill="rgb(240,42,44)" fg:x="1072" fg:w="1"/><text x="87.9750%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.7250%" y="405" width="0.0818%" height="15" fill="rgb(222,10,51)" fg:x="1072" fg:w="1"/><text x="87.9750%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.7250%" y="389" width="0.0818%" height="15" fill="rgb(208,146,53)" fg:x="1072" fg:w="1"/><text x="87.9750%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.49%)</title><rect x="87.3977%" y="597" width="0.4910%" height="15" fill="rgb(236,162,23)" fg:x="1068" fg:w="6"/><text x="87.6477%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.49%)</title><rect x="87.3977%" y="581" width="0.4910%" height="15" fill="rgb(218,66,21)" fg:x="1068" fg:w="6"/><text x="87.6477%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="87.8069%" y="565" width="0.0818%" height="15" fill="rgb(233,6,47)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="87.8069%" y="549" width="0.0818%" height="15" fill="rgb(236,59,51)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.8069%" y="533" width="0.0818%" height="15" fill="rgb(242,12,46)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.8069%" y="517" width="0.0818%" height="15" fill="rgb(243,142,19)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.8069%" y="501" width="0.0818%" height="15" fill="rgb(217,28,17)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.8069%" y="485" width="0.0818%" height="15" fill="rgb(228,2,27)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="87.8069%" y="469" width="0.0818%" height="15" fill="rgb(214,221,4)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.8069%" y="453" width="0.0818%" height="15" fill="rgb(224,69,26)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.8069%" y="437" width="0.0818%" height="15" fill="rgb(219,70,4)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="87.8069%" y="421" width="0.0818%" height="15" fill="rgb(218,157,39)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.8069%" y="405" width="0.0818%" height="15" fill="rgb(238,36,28)" fg:x="1073" fg:w="1"/><text x="88.0569%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.9705%" y="565" width="0.0818%" height="15" fill="rgb(232,29,0)" fg:x="1075" fg:w="1"/><text x="88.2205%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.9705%" y="549" width="0.0818%" height="15" fill="rgb(243,138,46)" fg:x="1075" fg:w="1"/><text x="88.2205%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.9705%" y="533" width="0.0818%" height="15" fill="rgb(232,186,41)" fg:x="1075" fg:w="1"/><text x="88.2205%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9705%" y="517" width="0.0818%" height="15" fill="rgb(252,166,17)" fg:x="1075" fg:w="1"/><text x="88.2205%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.0524%" y="517" width="0.1637%" height="15" fill="rgb(228,179,12)" fg:x="1076" fg:w="2"/><text x="88.3024%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.0524%" y="501" width="0.1637%" height="15" fill="rgb(254,205,53)" fg:x="1076" fg:w="2"/><text x="88.3024%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.0524%" y="485" width="0.1637%" height="15" fill="rgb(224,163,47)" fg:x="1076" fg:w="2"/><text x="88.3024%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.0524%" y="469" width="0.1637%" height="15" fill="rgb(208,43,47)" fg:x="1076" fg:w="2"/><text x="88.3024%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.0524%" y="453" width="0.1637%" height="15" fill="rgb(224,198,38)" fg:x="1076" fg:w="2"/><text x="88.3024%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.0524%" y="437" width="0.1637%" height="15" fill="rgb(234,12,40)" fg:x="1076" fg:w="2"/><text x="88.3024%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.0524%" y="421" width="0.1637%" height="15" fill="rgb(237,212,39)" fg:x="1076" fg:w="2"/><text x="88.3024%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="88.0524%" y="405" width="0.1637%" height="15" fill="rgb(253,2,33)" fg:x="1076" fg:w="2"/><text x="88.3024%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1342%" y="389" width="0.0818%" height="15" fill="rgb(251,29,16)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.1342%" y="373" width="0.0818%" height="15" fill="rgb(214,38,29)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.1342%" y="357" width="0.0818%" height="15" fill="rgb(226,226,29)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.1342%" y="341" width="0.0818%" height="15" fill="rgb(236,79,42)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1342%" y="325" width="0.0818%" height="15" fill="rgb(222,12,36)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1342%" y="309" width="0.0818%" height="15" fill="rgb(232,123,44)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.1342%" y="293" width="0.0818%" height="15" fill="rgb(234,93,50)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.1342%" y="277" width="0.0818%" height="15" fill="rgb(210,86,49)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.1342%" y="261" width="0.0818%" height="15" fill="rgb(224,91,54)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.1342%" y="245" width="0.0818%" height="15" fill="rgb(239,169,9)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1342%" y="229" width="0.0818%" height="15" fill="rgb(238,29,17)" fg:x="1077" fg:w="1"/><text x="88.3842%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.2160%" y="405" width="0.0818%" height="15" fill="rgb(227,160,22)" fg:x="1078" fg:w="1"/><text x="88.4660%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.33%)</title><rect x="88.0524%" y="549" width="0.3273%" height="15" fill="rgb(231,129,52)" fg:x="1076" fg:w="4"/><text x="88.3024%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.33%)</title><rect x="88.0524%" y="533" width="0.3273%" height="15" fill="rgb(241,184,9)" fg:x="1076" fg:w="4"/><text x="88.3024%" y="543.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="88.2160%" y="517" width="0.1637%" height="15" fill="rgb(217,43,48)" fg:x="1078" fg:w="2"/><text x="88.4660%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="88.2160%" y="501" width="0.1637%" height="15" fill="rgb(213,49,1)" fg:x="1078" fg:w="2"/><text x="88.4660%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="88.2160%" y="485" width="0.1637%" height="15" fill="rgb(223,79,39)" fg:x="1078" fg:w="2"/><text x="88.4660%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.2160%" y="469" width="0.1637%" height="15" fill="rgb(228,227,46)" fg:x="1078" fg:w="2"/><text x="88.4660%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="88.2160%" y="453" width="0.1637%" height="15" fill="rgb(245,89,41)" fg:x="1078" fg:w="2"/><text x="88.4660%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.2160%" y="437" width="0.1637%" height="15" fill="rgb(253,83,21)" fg:x="1078" fg:w="2"/><text x="88.4660%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="88.2160%" y="421" width="0.1637%" height="15" fill="rgb(229,116,51)" fg:x="1078" fg:w="2"/><text x="88.4660%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2979%" y="405" width="0.0818%" height="15" fill="rgb(246,67,26)" fg:x="1079" fg:w="1"/><text x="88.5479%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.2979%" y="389" width="0.0818%" height="15" fill="rgb(250,117,20)" fg:x="1079" fg:w="1"/><text x="88.5479%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2979%" y="373" width="0.0818%" height="15" fill="rgb(207,88,17)" fg:x="1079" fg:w="1"/><text x="88.5479%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="88.2979%" y="357" width="0.0818%" height="15" fill="rgb(212,98,36)" fg:x="1079" fg:w="1"/><text x="88.5479%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.57%)</title><rect x="87.8887%" y="581" width="0.5728%" height="15" fill="rgb(221,72,6)" fg:x="1074" fg:w="7"/><text x="88.1387%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="88.0524%" y="565" width="0.4092%" height="15" fill="rgb(235,129,19)" fg:x="1076" fg:w="5"/><text x="88.3024%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="88.3797%" y="549" width="0.0818%" height="15" fill="rgb(237,200,6)" fg:x="1080" fg:w="1"/><text x="88.6297%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3797%" y="533" width="0.0818%" height="15" fill="rgb(239,69,54)" fg:x="1080" fg:w="1"/><text x="88.6297%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3797%" y="517" width="0.0818%" height="15" fill="rgb(214,68,45)" fg:x="1080" fg:w="1"/><text x="88.6297%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4615%" y="485" width="0.0818%" height="15" fill="rgb(254,160,8)" fg:x="1081" fg:w="1"/><text x="88.7115%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4615%" y="469" width="0.0818%" height="15" fill="rgb(215,226,31)" fg:x="1081" fg:w="1"/><text x="88.7115%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (9 samples, 0.74%)</title><rect x="87.8887%" y="597" width="0.7365%" height="15" fill="rgb(253,6,35)" fg:x="1074" fg:w="9"/><text x="88.1387%" y="607.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="88.4615%" y="581" width="0.1637%" height="15" fill="rgb(219,96,42)" fg:x="1081" fg:w="2"/><text x="88.7115%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="88.4615%" y="565" width="0.1637%" height="15" fill="rgb(207,170,13)" fg:x="1081" fg:w="2"/><text x="88.7115%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.4615%" y="549" width="0.1637%" height="15" fill="rgb(239,101,5)" fg:x="1081" fg:w="2"/><text x="88.7115%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.4615%" y="533" width="0.1637%" height="15" fill="rgb(228,183,34)" fg:x="1081" fg:w="2"/><text x="88.7115%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.4615%" y="517" width="0.1637%" height="15" fill="rgb(205,28,31)" fg:x="1081" fg:w="2"/><text x="88.7115%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.4615%" y="501" width="0.1637%" height="15" fill="rgb(214,118,50)" fg:x="1081" fg:w="2"/><text x="88.7115%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5434%" y="485" width="0.0818%" height="15" fill="rgb(213,108,51)" fg:x="1082" fg:w="1"/><text x="88.7934%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5434%" y="469" width="0.0818%" height="15" fill="rgb(238,56,37)" fg:x="1082" fg:w="1"/><text x="88.7934%" y="479.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (208 samples, 17.02%)</title><rect x="71.6858%" y="613" width="17.0213%" height="15" fill="rgb(214,136,28)" fg:x="876" fg:w="208"/><text x="71.9358%" y="623.50">&lt;tests::HoldingKeyInVessel..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="88.6252%" y="597" width="0.0818%" height="15" fill="rgb(221,201,54)" fg:x="1083" fg:w="1"/><text x="88.8752%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.6252%" y="581" width="0.0818%" height="15" fill="rgb(228,216,39)" fg:x="1083" fg:w="1"/><text x="88.8752%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="88.7070%" y="613" width="0.0818%" height="15" fill="rgb(207,229,49)" fg:x="1084" fg:w="1"/><text x="88.9570%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="88.7070%" y="597" width="0.0818%" height="15" fill="rgb(224,23,43)" fg:x="1084" fg:w="1"/><text x="88.9570%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="88.7070%" y="581" width="0.0818%" height="15" fill="rgb(247,97,18)" fg:x="1084" fg:w="1"/><text x="88.9570%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.7070%" y="565" width="0.0818%" height="15" fill="rgb(232,53,32)" fg:x="1084" fg:w="1"/><text x="88.9570%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.7889%" y="581" width="0.0818%" height="15" fill="rgb(247,38,23)" fg:x="1085" fg:w="1"/><text x="89.0389%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.7889%" y="565" width="0.0818%" height="15" fill="rgb(228,101,52)" fg:x="1085" fg:w="1"/><text x="89.0389%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.7889%" y="549" width="0.0818%" height="15" fill="rgb(231,45,36)" fg:x="1085" fg:w="1"/><text x="89.0389%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.7889%" y="533" width="0.0818%" height="15" fill="rgb(221,183,50)" fg:x="1085" fg:w="1"/><text x="89.0389%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.7889%" y="517" width="0.0818%" height="15" fill="rgb(251,132,12)" fg:x="1085" fg:w="1"/><text x="89.0389%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="88.7889%" y="501" width="0.0818%" height="15" fill="rgb(252,50,16)" fg:x="1085" fg:w="1"/><text x="89.0389%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.7889%" y="485" width="0.0818%" height="15" fill="rgb(224,60,15)" fg:x="1085" fg:w="1"/><text x="89.0389%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="88.7889%" y="597" width="0.1637%" height="15" fill="rgb(254,2,34)" fg:x="1085" fg:w="2"/><text x="89.0389%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.8707%" y="581" width="0.0818%" height="15" fill="rgb(232,154,8)" fg:x="1086" fg:w="1"/><text x="89.1207%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="88.9525%" y="597" width="0.1637%" height="15" fill="rgb(235,190,52)" fg:x="1087" fg:w="2"/><text x="89.2025%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="88.9525%" y="581" width="0.1637%" height="15" fill="rgb(213,218,38)" fg:x="1087" fg:w="2"/><text x="89.2025%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="88.9525%" y="565" width="0.1637%" height="15" fill="rgb(237,50,37)" fg:x="1087" fg:w="2"/><text x="89.2025%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="88.9525%" y="549" width="0.1637%" height="15" fill="rgb(235,51,35)" fg:x="1087" fg:w="2"/><text x="89.2025%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="88.9525%" y="533" width="0.1637%" height="15" fill="rgb(244,40,52)" fg:x="1087" fg:w="2"/><text x="89.2025%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="88.9525%" y="517" width="0.1637%" height="15" fill="rgb(217,225,45)" fg:x="1087" fg:w="2"/><text x="89.2025%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="88.9525%" y="501" width="0.1637%" height="15" fill="rgb(247,191,36)" fg:x="1087" fg:w="2"/><text x="89.2025%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="88.9525%" y="485" width="0.1637%" height="15" fill="rgb(251,144,31)" fg:x="1087" fg:w="2"/><text x="89.2025%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="89.1162%" y="549" width="0.0818%" height="15" fill="rgb(227,155,41)" fg:x="1089" fg:w="1"/><text x="89.3662%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.1162%" y="533" width="0.0818%" height="15" fill="rgb(236,121,36)" fg:x="1089" fg:w="1"/><text x="89.3662%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1162%" y="517" width="0.0818%" height="15" fill="rgb(221,128,28)" fg:x="1089" fg:w="1"/><text x="89.3662%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="89.2799%" y="517" width="0.0818%" height="15" fill="rgb(249,67,50)" fg:x="1091" fg:w="1"/><text x="89.5299%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.2799%" y="501" width="0.0818%" height="15" fill="rgb(241,126,38)" fg:x="1091" fg:w="1"/><text x="89.5299%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.2799%" y="485" width="0.0818%" height="15" fill="rgb(239,33,14)" fg:x="1091" fg:w="1"/><text x="89.5299%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.4435%" y="501" width="0.1637%" height="15" fill="rgb(207,221,54)" fg:x="1093" fg:w="2"/><text x="89.6935%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.4435%" y="485" width="0.1637%" height="15" fill="rgb(242,138,43)" fg:x="1093" fg:w="2"/><text x="89.6935%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.5254%" y="469" width="0.0818%" height="15" fill="rgb(231,118,19)" fg:x="1094" fg:w="1"/><text x="89.7754%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.5254%" y="453" width="0.0818%" height="15" fill="rgb(214,128,54)" fg:x="1094" fg:w="1"/><text x="89.7754%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.6072%" y="453" width="0.1637%" height="15" fill="rgb(236,136,6)" fg:x="1095" fg:w="2"/><text x="89.8572%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.6072%" y="437" width="0.1637%" height="15" fill="rgb(247,30,38)" fg:x="1095" fg:w="2"/><text x="89.8572%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="89.6072%" y="421" width="0.1637%" height="15" fill="rgb(249,189,40)" fg:x="1095" fg:w="2"/><text x="89.8572%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.6890%" y="405" width="0.0818%" height="15" fill="rgb(247,179,7)" fg:x="1096" fg:w="1"/><text x="89.9390%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="89.6072%" y="485" width="0.2455%" height="15" fill="rgb(239,46,52)" fg:x="1095" fg:w="3"/><text x="89.8572%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="89.6072%" y="469" width="0.2455%" height="15" fill="rgb(225,28,52)" fg:x="1095" fg:w="3"/><text x="89.8572%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="89.7709%" y="453" width="0.0818%" height="15" fill="rgb(217,208,44)" fg:x="1097" fg:w="1"/><text x="90.0209%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="89.8527%" y="485" width="0.2455%" height="15" fill="rgb(224,11,34)" fg:x="1098" fg:w="3"/><text x="90.1027%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="89.8527%" y="469" width="0.2455%" height="15" fill="rgb(205,134,17)" fg:x="1098" fg:w="3"/><text x="90.1027%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="89.9345%" y="453" width="0.1637%" height="15" fill="rgb(237,125,9)" fg:x="1099" fg:w="2"/><text x="90.1845%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="89.9345%" y="437" width="0.1637%" height="15" fill="rgb(208,139,47)" fg:x="1099" fg:w="2"/><text x="90.1845%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="89.9345%" y="421" width="0.1637%" height="15" fill="rgb(242,5,5)" fg:x="1099" fg:w="2"/><text x="90.1845%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="89.9345%" y="405" width="0.1637%" height="15" fill="rgb(218,78,2)" fg:x="1099" fg:w="2"/><text x="90.1845%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="89.9345%" y="389" width="0.1637%" height="15" fill="rgb(217,75,16)" fg:x="1099" fg:w="2"/><text x="90.1845%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="90.0982%" y="469" width="0.2455%" height="15" fill="rgb(212,56,17)" fg:x="1101" fg:w="3"/><text x="90.3482%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="90.0982%" y="453" width="0.2455%" height="15" fill="rgb(228,61,29)" fg:x="1101" fg:w="3"/><text x="90.3482%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="90.1800%" y="437" width="0.1637%" height="15" fill="rgb(247,202,38)" fg:x="1102" fg:w="2"/><text x="90.4300%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="90.1800%" y="421" width="0.1637%" height="15" fill="rgb(211,216,43)" fg:x="1102" fg:w="2"/><text x="90.4300%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.4255%" y="453" width="0.0818%" height="15" fill="rgb(220,7,49)" fg:x="1105" fg:w="1"/><text x="90.6755%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.4255%" y="437" width="0.0818%" height="15" fill="rgb(219,158,7)" fg:x="1105" fg:w="1"/><text x="90.6755%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.4255%" y="421" width="0.0818%" height="15" fill="rgb(206,127,9)" fg:x="1105" fg:w="1"/><text x="90.6755%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="90.5074%" y="437" width="0.2455%" height="15" fill="rgb(206,103,43)" fg:x="1106" fg:w="3"/><text x="90.7574%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="90.5074%" y="421" width="0.2455%" height="15" fill="rgb(240,108,41)" fg:x="1106" fg:w="3"/><text x="90.7574%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.6710%" y="405" width="0.0818%" height="15" fill="rgb(252,212,6)" fg:x="1108" fg:w="1"/><text x="90.9210%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.7529%" y="421" width="0.0818%" height="15" fill="rgb(248,105,31)" fg:x="1109" fg:w="1"/><text x="91.0029%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.7529%" y="405" width="0.0818%" height="15" fill="rgb(241,123,4)" fg:x="1109" fg:w="1"/><text x="91.0029%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.7529%" y="389" width="0.0818%" height="15" fill="rgb(223,74,37)" fg:x="1109" fg:w="1"/><text x="91.0029%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.8347%" y="421" width="0.0818%" height="15" fill="rgb(251,219,28)" fg:x="1110" fg:w="1"/><text x="91.0847%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.39%)</title><rect x="89.6072%" y="501" width="1.3912%" height="15" fill="rgb(218,36,31)" fg:x="1095" fg:w="17"/><text x="89.8572%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.90%)</title><rect x="90.0982%" y="485" width="0.9002%" height="15" fill="rgb(229,40,15)" fg:x="1101" fg:w="11"/><text x="90.3482%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="90.3437%" y="469" width="0.6547%" height="15" fill="rgb(208,138,37)" fg:x="1104" fg:w="8"/><text x="90.5937%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="90.5074%" y="453" width="0.4910%" height="15" fill="rgb(208,40,52)" fg:x="1106" fg:w="6"/><text x="90.7574%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="90.7529%" y="437" width="0.2455%" height="15" fill="rgb(246,181,48)" fg:x="1109" fg:w="3"/><text x="91.0029%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.9165%" y="421" width="0.0818%" height="15" fill="rgb(253,178,36)" fg:x="1111" fg:w="1"/><text x="91.1665%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.88%)</title><rect x="89.3617%" y="517" width="1.8822%" height="15" fill="rgb(210,170,6)" fg:x="1092" fg:w="23"/><text x="89.6117%" y="527.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="90.9984%" y="501" width="0.2455%" height="15" fill="rgb(243,62,22)" fg:x="1112" fg:w="3"/><text x="91.2484%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="90.9984%" y="485" width="0.2455%" height="15" fill="rgb(213,145,26)" fg:x="1112" fg:w="3"/><text x="91.2484%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="90.9984%" y="469" width="0.2455%" height="15" fill="rgb(237,177,23)" fg:x="1112" fg:w="3"/><text x="91.2484%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="91.1620%" y="453" width="0.0818%" height="15" fill="rgb(252,5,24)" fg:x="1114" fg:w="1"/><text x="91.4120%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (25 samples, 2.05%)</title><rect x="89.2799%" y="533" width="2.0458%" height="15" fill="rgb(230,108,54)" fg:x="1091" fg:w="25"/><text x="89.5299%" y="543.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.2439%" y="517" width="0.0818%" height="15" fill="rgb(252,192,41)" fg:x="1115" fg:w="1"/><text x="91.4939%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.3257%" y="485" width="0.0818%" height="15" fill="rgb(218,125,20)" fg:x="1116" fg:w="1"/><text x="91.5757%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="91.4075%" y="469" width="0.1637%" height="15" fill="rgb(230,223,15)" fg:x="1117" fg:w="2"/><text x="91.6575%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="91.3257%" y="533" width="0.3273%" height="15" fill="rgb(239,99,47)" fg:x="1116" fg:w="4"/><text x="91.5757%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.33%)</title><rect x="91.3257%" y="517" width="0.3273%" height="15" fill="rgb(222,214,23)" fg:x="1116" fg:w="4"/><text x="91.5757%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="91.3257%" y="501" width="0.3273%" height="15" fill="rgb(250,98,43)" fg:x="1116" fg:w="4"/><text x="91.5757%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="91.4075%" y="485" width="0.2455%" height="15" fill="rgb(226,140,11)" fg:x="1117" fg:w="3"/><text x="91.6575%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.5712%" y="469" width="0.0818%" height="15" fill="rgb(239,2,22)" fg:x="1119" fg:w="1"/><text x="91.8212%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7349%" y="501" width="0.0818%" height="15" fill="rgb(209,106,26)" fg:x="1121" fg:w="1"/><text x="91.9849%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.8167%" y="469" width="0.0818%" height="15" fill="rgb(209,135,11)" fg:x="1122" fg:w="1"/><text x="92.0667%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.8167%" y="453" width="0.0818%" height="15" fill="rgb(241,58,6)" fg:x="1122" fg:w="1"/><text x="92.0667%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.9804%" y="453" width="0.0818%" height="15" fill="rgb(214,78,1)" fg:x="1124" fg:w="1"/><text x="92.2304%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.1440%" y="405" width="0.0818%" height="15" fill="rgb(229,135,33)" fg:x="1126" fg:w="1"/><text x="92.3940%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.1440%" y="389" width="0.0818%" height="15" fill="rgb(245,87,50)" fg:x="1126" fg:w="1"/><text x="92.3940%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="91.8167%" y="501" width="0.5728%" height="15" fill="rgb(222,222,8)" fg:x="1122" fg:w="7"/><text x="92.0667%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.57%)</title><rect x="91.8167%" y="485" width="0.5728%" height="15" fill="rgb(214,97,50)" fg:x="1122" fg:w="7"/><text x="92.0667%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="91.8985%" y="469" width="0.4910%" height="15" fill="rgb(244,161,51)" fg:x="1123" fg:w="6"/><text x="92.1485%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="92.0622%" y="453" width="0.3273%" height="15" fill="rgb(225,17,4)" fg:x="1125" fg:w="4"/><text x="92.3122%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="92.0622%" y="437" width="0.3273%" height="15" fill="rgb(238,10,13)" fg:x="1125" fg:w="4"/><text x="92.3122%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="92.1440%" y="421" width="0.2455%" height="15" fill="rgb(239,169,14)" fg:x="1126" fg:w="3"/><text x="92.3940%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="92.2259%" y="405" width="0.1637%" height="15" fill="rgb(213,105,25)" fg:x="1127" fg:w="2"/><text x="92.4759%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="92.2259%" y="389" width="0.1637%" height="15" fill="rgb(233,4,17)" fg:x="1127" fg:w="2"/><text x="92.4759%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.25%)</title><rect x="92.4714%" y="485" width="0.2455%" height="15" fill="rgb(212,5,35)" fg:x="1130" fg:w="3"/><text x="92.7214%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="92.5532%" y="469" width="0.1637%" height="15" fill="rgb(216,3,14)" fg:x="1131" fg:w="2"/><text x="92.8032%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="92.5532%" y="453" width="0.1637%" height="15" fill="rgb(240,105,33)" fg:x="1131" fg:w="2"/><text x="92.8032%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="92.5532%" y="437" width="0.1637%" height="15" fill="rgb(216,73,0)" fg:x="1131" fg:w="2"/><text x="92.8032%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="92.6350%" y="421" width="0.0818%" height="15" fill="rgb(217,153,48)" fg:x="1132" fg:w="1"/><text x="92.8850%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="92.6350%" y="405" width="0.0818%" height="15" fill="rgb(218,180,8)" fg:x="1132" fg:w="1"/><text x="92.8850%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (13 samples, 1.06%)</title><rect x="91.7349%" y="517" width="1.0638%" height="15" fill="rgb(252,168,2)" fg:x="1121" fg:w="13"/><text x="91.9849%" y="527.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.41%)</title><rect x="92.3895%" y="501" width="0.4092%" height="15" fill="rgb(224,116,33)" fg:x="1129" fg:w="5"/><text x="92.6395%" y="511.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="92.7169%" y="485" width="0.0818%" height="15" fill="rgb(229,205,17)" fg:x="1133" fg:w="1"/><text x="92.9669%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.7169%" y="469" width="0.0818%" height="15" fill="rgb(234,1,41)" fg:x="1133" fg:w="1"/><text x="92.9669%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.7987%" y="517" width="0.0818%" height="15" fill="rgb(244,185,8)" fg:x="1134" fg:w="1"/><text x="93.0487%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7987%" y="501" width="0.0818%" height="15" fill="rgb(248,51,21)" fg:x="1134" fg:w="1"/><text x="93.0487%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0442%" y="485" width="0.0818%" height="15" fill="rgb(248,157,31)" fg:x="1137" fg:w="1"/><text x="93.2942%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1260%" y="485" width="0.0818%" height="15" fill="rgb(210,34,47)" fg:x="1138" fg:w="1"/><text x="93.3760%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="93.2079%" y="485" width="0.0818%" height="15" fill="rgb(227,139,53)" fg:x="1139" fg:w="1"/><text x="93.4579%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.2079%" y="469" width="0.0818%" height="15" fill="rgb(232,211,37)" fg:x="1139" fg:w="1"/><text x="93.4579%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="93.4534%" y="437" width="0.0818%" height="15" fill="rgb(236,133,10)" fg:x="1142" fg:w="1"/><text x="93.7034%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="93.4534%" y="421" width="0.0818%" height="15" fill="rgb(243,202,25)" fg:x="1142" fg:w="1"/><text x="93.7034%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.6170%" y="405" width="0.1637%" height="15" fill="rgb(224,59,9)" fg:x="1144" fg:w="2"/><text x="93.8670%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6989%" y="389" width="0.0818%" height="15" fill="rgb(206,146,16)" fg:x="1145" fg:w="1"/><text x="93.9489%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7807%" y="341" width="0.0818%" height="15" fill="rgb(220,47,2)" fg:x="1146" fg:w="1"/><text x="94.0307%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.8625%" y="325" width="0.0818%" height="15" fill="rgb(225,124,51)" fg:x="1147" fg:w="1"/><text x="94.1125%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="93.9444%" y="325" width="0.0818%" height="15" fill="rgb(241,220,50)" fg:x="1148" fg:w="1"/><text x="94.1944%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.9444%" y="309" width="0.0818%" height="15" fill="rgb(232,168,5)" fg:x="1148" fg:w="1"/><text x="94.1944%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.9444%" y="293" width="0.0818%" height="15" fill="rgb(243,90,22)" fg:x="1148" fg:w="1"/><text x="94.1944%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9444%" y="277" width="0.0818%" height="15" fill="rgb(223,153,32)" fg:x="1148" fg:w="1"/><text x="94.1944%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="93.7807%" y="389" width="0.3273%" height="15" fill="rgb(243,124,20)" fg:x="1146" fg:w="4"/><text x="94.0307%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="93.7807%" y="373" width="0.3273%" height="15" fill="rgb(246,168,39)" fg:x="1146" fg:w="4"/><text x="94.0307%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="93.7807%" y="357" width="0.3273%" height="15" fill="rgb(222,165,54)" fg:x="1146" fg:w="4"/><text x="94.0307%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="93.8625%" y="341" width="0.2455%" height="15" fill="rgb(251,142,27)" fg:x="1147" fg:w="3"/><text x="94.1125%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0262%" y="325" width="0.0818%" height="15" fill="rgb(207,168,50)" fg:x="1149" fg:w="1"/><text x="94.2762%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.90%)</title><rect x="93.2897%" y="469" width="0.9002%" height="15" fill="rgb(250,139,25)" fg:x="1140" fg:w="11"/><text x="93.5397%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.82%)</title><rect x="93.3715%" y="453" width="0.8183%" height="15" fill="rgb(214,194,48)" fg:x="1141" fg:w="10"/><text x="93.6215%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="93.5352%" y="437" width="0.6547%" height="15" fill="rgb(227,138,47)" fg:x="1143" fg:w="8"/><text x="93.7852%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="93.5352%" y="421" width="0.6547%" height="15" fill="rgb(250,162,5)" fg:x="1143" fg:w="8"/><text x="93.7852%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="93.7807%" y="405" width="0.4092%" height="15" fill="rgb(229,74,25)" fg:x="1146" fg:w="5"/><text x="94.0307%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1080%" y="389" width="0.0818%" height="15" fill="rgb(221,124,34)" fg:x="1150" fg:w="1"/><text x="94.3580%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.39%)</title><rect x="92.8805%" y="517" width="1.3912%" height="15" fill="rgb(225,94,25)" fg:x="1135" fg:w="17"/><text x="93.1305%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.39%)</title><rect x="92.8805%" y="501" width="1.3912%" height="15" fill="rgb(210,100,12)" fg:x="1135" fg:w="17"/><text x="93.1305%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.98%)</title><rect x="93.2897%" y="485" width="0.9820%" height="15" fill="rgb(206,62,48)" fg:x="1140" fg:w="12"/><text x="93.5397%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1899%" y="469" width="0.0818%" height="15" fill="rgb(222,181,9)" fg:x="1151" fg:w="1"/><text x="94.4399%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1899%" y="453" width="0.0818%" height="15" fill="rgb(248,42,38)" fg:x="1151" fg:w="1"/><text x="94.4399%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.4354%" y="373" width="0.0818%" height="15" fill="rgb(213,40,6)" fg:x="1154" fg:w="1"/><text x="94.6854%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4354%" y="357" width="0.0818%" height="15" fill="rgb(211,108,15)" fg:x="1154" fg:w="1"/><text x="94.6854%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.4354%" y="341" width="0.0818%" height="15" fill="rgb(249,62,9)" fg:x="1154" fg:w="1"/><text x="94.6854%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.4354%" y="325" width="0.0818%" height="15" fill="rgb(233,26,54)" fg:x="1154" fg:w="1"/><text x="94.6854%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.5172%" y="357" width="0.0818%" height="15" fill="rgb(210,175,26)" fg:x="1155" fg:w="1"/><text x="94.7672%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5172%" y="341" width="0.0818%" height="15" fill="rgb(210,43,33)" fg:x="1155" fg:w="1"/><text x="94.7672%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.5172%" y="325" width="0.0818%" height="15" fill="rgb(224,46,17)" fg:x="1155" fg:w="1"/><text x="94.7672%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5172%" y="309" width="0.0818%" height="15" fill="rgb(254,24,38)" fg:x="1155" fg:w="1"/><text x="94.7672%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5172%" y="293" width="0.0818%" height="15" fill="rgb(248,32,0)" fg:x="1155" fg:w="1"/><text x="94.7672%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="94.3535%" y="453" width="0.3273%" height="15" fill="rgb(224,37,41)" fg:x="1153" fg:w="4"/><text x="94.6035%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="94.3535%" y="437" width="0.3273%" height="15" fill="rgb(252,70,22)" fg:x="1153" fg:w="4"/><text x="94.6035%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="94.3535%" y="421" width="0.3273%" height="15" fill="rgb(241,123,50)" fg:x="1153" fg:w="4"/><text x="94.6035%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="94.3535%" y="405" width="0.3273%" height="15" fill="rgb(246,138,33)" fg:x="1153" fg:w="4"/><text x="94.6035%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="94.4354%" y="389" width="0.2455%" height="15" fill="rgb(218,39,32)" fg:x="1154" fg:w="3"/><text x="94.6854%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.5172%" y="373" width="0.1637%" height="15" fill="rgb(241,229,10)" fg:x="1155" fg:w="2"/><text x="94.7672%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.5990%" y="357" width="0.0818%" height="15" fill="rgb(212,160,10)" fg:x="1156" fg:w="1"/><text x="94.8490%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5990%" y="341" width="0.0818%" height="15" fill="rgb(227,48,51)" fg:x="1156" fg:w="1"/><text x="94.8490%" y="351.50"></text></g><g><title>engine::session::Session::close (75 samples, 6.14%)</title><rect x="88.7889%" y="613" width="6.1375%" height="15" fill="rgb(238,159,21)" fg:x="1085" fg:w="75"/><text x="89.0389%" y="623.50">engine::..</text></g><g><title>engine::session::state::State::close (71 samples, 5.81%)</title><rect x="89.1162%" y="597" width="5.8101%" height="15" fill="rgb(216,1,10)" fg:x="1089" fg:w="71"/><text x="89.3662%" y="607.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (71 samples, 5.81%)</title><rect x="89.1162%" y="581" width="5.8101%" height="15" fill="rgb(209,228,25)" fg:x="1089" fg:w="71"/><text x="89.3662%" y="591.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (71 samples, 5.81%)</title><rect x="89.1162%" y="565" width="5.8101%" height="15" fill="rgb(234,160,10)" fg:x="1089" fg:w="71"/><text x="89.3662%" y="575.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (70 samples, 5.73%)</title><rect x="89.1980%" y="549" width="5.7283%" height="15" fill="rgb(212,66,25)" fg:x="1090" fg:w="70"/><text x="89.4480%" y="559.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (40 samples, 3.27%)</title><rect x="91.6530%" y="533" width="3.2733%" height="15" fill="rgb(254,121,18)" fg:x="1120" fg:w="40"/><text x="91.9030%" y="543.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.65%)</title><rect x="94.2717%" y="517" width="0.6547%" height="15" fill="rgb(219,127,1)" fg:x="1152" fg:w="8"/><text x="94.5217%" y="527.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.65%)</title><rect x="94.2717%" y="501" width="0.6547%" height="15" fill="rgb(219,224,42)" fg:x="1152" fg:w="8"/><text x="94.5217%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="94.2717%" y="485" width="0.6547%" height="15" fill="rgb(253,130,22)" fg:x="1152" fg:w="8"/><text x="94.5217%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="94.2717%" y="469" width="0.6547%" height="15" fill="rgb(253,39,28)" fg:x="1152" fg:w="8"/><text x="94.5217%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="94.6809%" y="453" width="0.2455%" height="15" fill="rgb(231,126,37)" fg:x="1157" fg:w="3"/><text x="94.9309%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.7627%" y="437" width="0.1637%" height="15" fill="rgb(251,145,14)" fg:x="1158" fg:w="2"/><text x="95.0127%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="94.8445%" y="421" width="0.0818%" height="15" fill="rgb(229,164,30)" fg:x="1159" fg:w="1"/><text x="95.0945%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="95.0900%" y="373" width="0.0818%" height="15" fill="rgb(233,227,54)" fg:x="1162" fg:w="1"/><text x="95.3400%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0900%" y="357" width="0.0818%" height="15" fill="rgb(240,94,22)" fg:x="1162" fg:w="1"/><text x="95.3400%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="95.0900%" y="389" width="0.1637%" height="15" fill="rgb(217,56,16)" fg:x="1162" fg:w="2"/><text x="95.3400%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.1718%" y="373" width="0.0818%" height="15" fill="rgb(229,133,38)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.1718%" y="357" width="0.0818%" height="15" fill="rgb(225,139,35)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1718%" y="341" width="0.0818%" height="15" fill="rgb(223,100,16)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1718%" y="325" width="0.0818%" height="15" fill="rgb(207,43,50)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1718%" y="309" width="0.0818%" height="15" fill="rgb(237,221,9)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1718%" y="293" width="0.0818%" height="15" fill="rgb(236,134,24)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1718%" y="277" width="0.0818%" height="15" fill="rgb(222,173,4)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1718%" y="261" width="0.0818%" height="15" fill="rgb(234,144,52)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1718%" y="245" width="0.0818%" height="15" fill="rgb(223,41,7)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1718%" y="229" width="0.0818%" height="15" fill="rgb(226,143,9)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1718%" y="213" width="0.0818%" height="15" fill="rgb(234,43,37)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1718%" y="197" width="0.0818%" height="15" fill="rgb(224,188,11)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1718%" y="181" width="0.0818%" height="15" fill="rgb(233,113,28)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.1718%" y="165" width="0.0818%" height="15" fill="rgb(215,16,1)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.1718%" y="149" width="0.0818%" height="15" fill="rgb(238,74,38)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.1718%" y="133" width="0.0818%" height="15" fill="rgb(221,66,35)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.1718%" y="117" width="0.0818%" height="15" fill="rgb(251,225,2)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1718%" y="101" width="0.0818%" height="15" fill="rgb(240,169,18)" fg:x="1163" fg:w="1"/><text x="95.4218%" y="111.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.25%)</title><rect x="95.0900%" y="421" width="0.2455%" height="15" fill="rgb(243,130,50)" fg:x="1162" fg:w="3"/><text x="95.3400%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.25%)</title><rect x="95.0900%" y="405" width="0.2455%" height="15" fill="rgb(228,75,13)" fg:x="1162" fg:w="3"/><text x="95.3400%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.2537%" y="389" width="0.0818%" height="15" fill="rgb(252,95,35)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.2537%" y="373" width="0.0818%" height="15" fill="rgb(222,180,54)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.2537%" y="357" width="0.0818%" height="15" fill="rgb(250,110,34)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.2537%" y="341" width="0.0818%" height="15" fill="rgb(208,100,21)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.2537%" y="325" width="0.0818%" height="15" fill="rgb(209,123,47)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.2537%" y="309" width="0.0818%" height="15" fill="rgb(237,147,9)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.2537%" y="293" width="0.0818%" height="15" fill="rgb(228,206,23)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.2537%" y="277" width="0.0818%" height="15" fill="rgb(217,174,46)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.2537%" y="261" width="0.0818%" height="15" fill="rgb(231,126,21)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.2537%" y="245" width="0.0818%" height="15" fill="rgb(245,26,1)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.2537%" y="229" width="0.0818%" height="15" fill="rgb(224,138,39)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.2537%" y="213" width="0.0818%" height="15" fill="rgb(208,97,3)" fg:x="1164" fg:w="1"/><text x="95.5037%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3355%" y="357" width="0.0818%" height="15" fill="rgb(222,77,29)" fg:x="1165" fg:w="1"/><text x="95.5855%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3355%" y="341" width="0.0818%" height="15" fill="rgb(243,188,36)" fg:x="1165" fg:w="1"/><text x="95.5855%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.4173%" y="325" width="0.0818%" height="15" fill="rgb(218,214,3)" fg:x="1166" fg:w="1"/><text x="95.6673%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4173%" y="309" width="0.0818%" height="15" fill="rgb(211,183,45)" fg:x="1166" fg:w="1"/><text x="95.6673%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.4992%" y="277" width="0.0818%" height="15" fill="rgb(230,218,25)" fg:x="1167" fg:w="1"/><text x="95.7492%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.4992%" y="261" width="0.0818%" height="15" fill="rgb(233,86,6)" fg:x="1167" fg:w="1"/><text x="95.7492%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.4992%" y="245" width="0.0818%" height="15" fill="rgb(220,59,24)" fg:x="1167" fg:w="1"/><text x="95.7492%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.4992%" y="229" width="0.0818%" height="15" fill="rgb(227,60,1)" fg:x="1167" fg:w="1"/><text x="95.7492%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.4992%" y="213" width="0.0818%" height="15" fill="rgb(216,212,54)" fg:x="1167" fg:w="1"/><text x="95.7492%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.4992%" y="197" width="0.0818%" height="15" fill="rgb(227,81,54)" fg:x="1167" fg:w="1"/><text x="95.7492%" y="207.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="95.3355%" y="405" width="0.4092%" height="15" fill="rgb(206,204,43)" fg:x="1165" fg:w="5"/><text x="95.5855%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="95.3355%" y="389" width="0.4092%" height="15" fill="rgb(219,29,26)" fg:x="1165" fg:w="5"/><text x="95.5855%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="95.3355%" y="373" width="0.4092%" height="15" fill="rgb(252,40,36)" fg:x="1165" fg:w="5"/><text x="95.5855%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="95.4173%" y="357" width="0.3273%" height="15" fill="rgb(224,205,39)" fg:x="1166" fg:w="4"/><text x="95.6673%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="95.4173%" y="341" width="0.3273%" height="15" fill="rgb(222,13,21)" fg:x="1166" fg:w="4"/><text x="95.6673%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="95.4992%" y="325" width="0.2455%" height="15" fill="rgb(243,139,6)" fg:x="1167" fg:w="3"/><text x="95.7492%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="95.4992%" y="309" width="0.2455%" height="15" fill="rgb(237,101,11)" fg:x="1167" fg:w="3"/><text x="95.7492%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="95.4992%" y="293" width="0.2455%" height="15" fill="rgb(254,49,28)" fg:x="1167" fg:w="3"/><text x="95.7492%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.5810%" y="277" width="0.1637%" height="15" fill="rgb(223,41,21)" fg:x="1168" fg:w="2"/><text x="95.8310%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.6628%" y="261" width="0.0818%" height="15" fill="rgb(225,103,29)" fg:x="1169" fg:w="1"/><text x="95.9128%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.6628%" y="245" width="0.0818%" height="15" fill="rgb(244,82,43)" fg:x="1169" fg:w="1"/><text x="95.9128%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.7447%" y="341" width="0.0818%" height="15" fill="rgb(217,39,3)" fg:x="1170" fg:w="1"/><text x="95.9947%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.7447%" y="325" width="0.0818%" height="15" fill="rgb(239,128,25)" fg:x="1170" fg:w="1"/><text x="95.9947%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.7447%" y="309" width="0.0818%" height="15" fill="rgb(210,192,37)" fg:x="1170" fg:w="1"/><text x="95.9947%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="95.8265%" y="293" width="0.0818%" height="15" fill="rgb(219,98,18)" fg:x="1171" fg:w="1"/><text x="96.0765%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.8265%" y="277" width="0.0818%" height="15" fill="rgb(224,228,38)" fg:x="1171" fg:w="1"/><text x="96.0765%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.8265%" y="261" width="0.0818%" height="15" fill="rgb(241,129,43)" fg:x="1171" fg:w="1"/><text x="96.0765%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.8265%" y="245" width="0.0818%" height="15" fill="rgb(223,8,51)" fg:x="1171" fg:w="1"/><text x="96.0765%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="95.8265%" y="229" width="0.0818%" height="15" fill="rgb(233,76,24)" fg:x="1171" fg:w="1"/><text x="96.0765%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.8265%" y="325" width="0.1637%" height="15" fill="rgb(219,115,10)" fg:x="1171" fg:w="2"/><text x="96.0765%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.8265%" y="309" width="0.1637%" height="15" fill="rgb(222,137,12)" fg:x="1171" fg:w="2"/><text x="96.0765%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9083%" y="293" width="0.0818%" height="15" fill="rgb(216,192,16)" fg:x="1172" fg:w="1"/><text x="96.1583%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9083%" y="277" width="0.0818%" height="15" fill="rgb(247,6,27)" fg:x="1172" fg:w="1"/><text x="96.1583%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.9083%" y="261" width="0.0818%" height="15" fill="rgb(254,39,44)" fg:x="1172" fg:w="1"/><text x="96.1583%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (9 samples, 0.74%)</title><rect x="95.3355%" y="421" width="0.7365%" height="15" fill="rgb(251,116,35)" fg:x="1165" fg:w="9"/><text x="95.5855%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="95.7447%" y="405" width="0.3273%" height="15" fill="rgb(208,61,44)" fg:x="1170" fg:w="4"/><text x="95.9947%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="95.7447%" y="389" width="0.3273%" height="15" fill="rgb(250,34,5)" fg:x="1170" fg:w="4"/><text x="95.9947%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="95.7447%" y="373" width="0.3273%" height="15" fill="rgb(241,40,15)" fg:x="1170" fg:w="4"/><text x="95.9947%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="95.7447%" y="357" width="0.3273%" height="15" fill="rgb(229,182,2)" fg:x="1170" fg:w="4"/><text x="95.9947%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.25%)</title><rect x="95.8265%" y="341" width="0.2455%" height="15" fill="rgb(244,148,52)" fg:x="1171" fg:w="3"/><text x="96.0765%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9902%" y="325" width="0.0818%" height="15" fill="rgb(225,211,4)" fg:x="1173" fg:w="1"/><text x="96.2402%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9902%" y="309" width="0.0818%" height="15" fill="rgb(208,222,47)" fg:x="1173" fg:w="1"/><text x="96.2402%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="95.9902%" y="293" width="0.0818%" height="15" fill="rgb(233,162,0)" fg:x="1173" fg:w="1"/><text x="96.2402%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9902%" y="277" width="0.0818%" height="15" fill="rgb(241,54,13)" fg:x="1173" fg:w="1"/><text x="96.2402%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9902%" y="261" width="0.0818%" height="15" fill="rgb(213,89,18)" fg:x="1173" fg:w="1"/><text x="96.2402%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="95.9902%" y="245" width="0.0818%" height="15" fill="rgb(215,170,37)" fg:x="1173" fg:w="1"/><text x="96.2402%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9902%" y="229" width="0.0818%" height="15" fill="rgb(216,133,15)" fg:x="1173" fg:w="1"/><text x="96.2402%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9902%" y="213" width="0.0818%" height="15" fill="rgb(230,42,19)" fg:x="1173" fg:w="1"/><text x="96.2402%" y="223.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="96.0720%" y="405" width="0.0818%" height="15" fill="rgb(221,103,41)" fg:x="1174" fg:w="1"/><text x="96.3220%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1538%" y="309" width="0.0818%" height="15" fill="rgb(220,142,31)" fg:x="1175" fg:w="1"/><text x="96.4038%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1538%" y="293" width="0.0818%" height="15" fill="rgb(239,218,4)" fg:x="1175" fg:w="1"/><text x="96.4038%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1538%" y="277" width="0.0818%" height="15" fill="rgb(232,16,4)" fg:x="1175" fg:w="1"/><text x="96.4038%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1538%" y="261" width="0.0818%" height="15" fill="rgb(226,213,25)" fg:x="1175" fg:w="1"/><text x="96.4038%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1538%" y="245" width="0.0818%" height="15" fill="rgb(235,135,19)" fg:x="1175" fg:w="1"/><text x="96.4038%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.1538%" y="229" width="0.0818%" height="15" fill="rgb(240,107,29)" fg:x="1175" fg:w="1"/><text x="96.4038%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.1538%" y="213" width="0.0818%" height="15" fill="rgb(206,164,44)" fg:x="1175" fg:w="1"/><text x="96.4038%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.1538%" y="373" width="0.1637%" height="15" fill="rgb(210,23,48)" fg:x="1175" fg:w="2"/><text x="96.4038%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.1538%" y="357" width="0.1637%" height="15" fill="rgb(212,138,25)" fg:x="1175" fg:w="2"/><text x="96.4038%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.1538%" y="341" width="0.1637%" height="15" fill="rgb(224,152,3)" fg:x="1175" fg:w="2"/><text x="96.4038%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.1538%" y="325" width="0.1637%" height="15" fill="rgb(214,38,23)" fg:x="1175" fg:w="2"/><text x="96.4038%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.2357%" y="309" width="0.0818%" height="15" fill="rgb(215,161,10)" fg:x="1176" fg:w="1"/><text x="96.4857%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.3175%" y="245" width="0.0818%" height="15" fill="rgb(240,185,7)" fg:x="1177" fg:w="1"/><text x="96.5675%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3175%" y="229" width="0.0818%" height="15" fill="rgb(244,104,25)" fg:x="1177" fg:w="1"/><text x="96.5675%" y="239.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (17 samples, 1.39%)</title><rect x="95.0900%" y="517" width="1.3912%" height="15" fill="rgb(242,140,44)" fg:x="1162" fg:w="17"/><text x="95.3400%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.39%)</title><rect x="95.0900%" y="501" width="1.3912%" height="15" fill="rgb(245,30,19)" fg:x="1162" fg:w="17"/><text x="95.3400%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (17 samples, 1.39%)</title><rect x="95.0900%" y="485" width="1.3912%" height="15" fill="rgb(219,208,35)" fg:x="1162" fg:w="17"/><text x="95.3400%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (17 samples, 1.39%)</title><rect x="95.0900%" y="469" width="1.3912%" height="15" fill="rgb(235,200,7)" fg:x="1162" fg:w="17"/><text x="95.3400%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.39%)</title><rect x="95.0900%" y="453" width="1.3912%" height="15" fill="rgb(220,193,10)" fg:x="1162" fg:w="17"/><text x="95.3400%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.39%)</title><rect x="95.0900%" y="437" width="1.3912%" height="15" fill="rgb(212,216,39)" fg:x="1162" fg:w="17"/><text x="95.3400%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.41%)</title><rect x="96.0720%" y="421" width="0.4092%" height="15" fill="rgb(212,134,19)" fg:x="1174" fg:w="5"/><text x="96.3220%" y="431.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="96.1538%" y="405" width="0.3273%" height="15" fill="rgb(230,57,24)" fg:x="1175" fg:w="4"/><text x="96.4038%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="96.1538%" y="389" width="0.3273%" height="15" fill="rgb(238,209,37)" fg:x="1175" fg:w="4"/><text x="96.4038%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3175%" y="373" width="0.1637%" height="15" fill="rgb(247,11,45)" fg:x="1177" fg:w="2"/><text x="96.5675%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3175%" y="357" width="0.1637%" height="15" fill="rgb(222,126,6)" fg:x="1177" fg:w="2"/><text x="96.5675%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3175%" y="341" width="0.1637%" height="15" fill="rgb(245,77,24)" fg:x="1177" fg:w="2"/><text x="96.5675%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3175%" y="325" width="0.1637%" height="15" fill="rgb(227,14,24)" fg:x="1177" fg:w="2"/><text x="96.5675%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.3175%" y="309" width="0.1637%" height="15" fill="rgb(211,112,42)" fg:x="1177" fg:w="2"/><text x="96.5675%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3175%" y="293" width="0.1637%" height="15" fill="rgb(230,103,42)" fg:x="1177" fg:w="2"/><text x="96.5675%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3175%" y="277" width="0.1637%" height="15" fill="rgb(228,125,42)" fg:x="1177" fg:w="2"/><text x="96.5675%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3175%" y="261" width="0.1637%" height="15" fill="rgb(243,33,6)" fg:x="1177" fg:w="2"/><text x="96.5675%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.3993%" y="245" width="0.0818%" height="15" fill="rgb(231,2,40)" fg:x="1178" fg:w="1"/><text x="96.6493%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3993%" y="229" width="0.0818%" height="15" fill="rgb(224,200,53)" fg:x="1178" fg:w="1"/><text x="96.6493%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.3993%" y="213" width="0.0818%" height="15" fill="rgb(215,116,36)" fg:x="1178" fg:w="1"/><text x="96.6493%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3993%" y="197" width="0.0818%" height="15" fill="rgb(240,23,51)" fg:x="1178" fg:w="1"/><text x="96.6493%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="96.4812%" y="469" width="0.0818%" height="15" fill="rgb(221,72,5)" fg:x="1179" fg:w="1"/><text x="96.7312%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="96.4812%" y="453" width="0.0818%" height="15" fill="rgb(245,142,9)" fg:x="1179" fg:w="1"/><text x="96.7312%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4812%" y="437" width="0.0818%" height="15" fill="rgb(207,34,16)" fg:x="1179" fg:w="1"/><text x="96.7312%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="96.4812%" y="517" width="0.1637%" height="15" fill="rgb(252,101,12)" fg:x="1179" fg:w="2"/><text x="96.7312%" y="527.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="96.4812%" y="501" width="0.1637%" height="15" fill="rgb(239,89,37)" fg:x="1179" fg:w="2"/><text x="96.7312%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="96.4812%" y="485" width="0.1637%" height="15" fill="rgb(252,227,37)" fg:x="1179" fg:w="2"/><text x="96.7312%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="96.5630%" y="469" width="0.0818%" height="15" fill="rgb(212,164,17)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="96.5630%" y="453" width="0.0818%" height="15" fill="rgb(240,86,13)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="96.5630%" y="437" width="0.0818%" height="15" fill="rgb(233,183,32)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.5630%" y="421" width="0.0818%" height="15" fill="rgb(205,201,38)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.5630%" y="405" width="0.0818%" height="15" fill="rgb(210,122,38)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="96.5630%" y="389" width="0.0818%" height="15" fill="rgb(241,174,26)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="96.5630%" y="373" width="0.0818%" height="15" fill="rgb(219,89,7)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.5630%" y="357" width="0.0818%" height="15" fill="rgb(246,9,24)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.5630%" y="341" width="0.0818%" height="15" fill="rgb(205,132,21)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="96.5630%" y="325" width="0.0818%" height="15" fill="rgb(210,11,17)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="96.5630%" y="309" width="0.0818%" height="15" fill="rgb(226,138,14)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.5630%" y="293" width="0.0818%" height="15" fill="rgb(224,108,44)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.5630%" y="277" width="0.0818%" height="15" fill="rgb(247,114,36)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.5630%" y="261" width="0.0818%" height="15" fill="rgb(231,183,14)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.5630%" y="245" width="0.0818%" height="15" fill="rgb(218,168,4)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="96.5630%" y="229" width="0.0818%" height="15" fill="rgb(210,8,3)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="96.5630%" y="213" width="0.0818%" height="15" fill="rgb(216,165,0)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="96.5630%" y="197" width="0.0818%" height="15" fill="rgb(245,120,5)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="96.5630%" y="181" width="0.0818%" height="15" fill="rgb(249,121,32)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.5630%" y="165" width="0.0818%" height="15" fill="rgb(211,55,33)" fg:x="1180" fg:w="1"/><text x="96.8130%" y="175.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (20 samples, 1.64%)</title><rect x="95.0900%" y="533" width="1.6367%" height="15" fill="rgb(254,46,35)" fg:x="1162" fg:w="20"/><text x="95.3400%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="96.6448%" y="517" width="0.0818%" height="15" fill="rgb(213,213,19)" fg:x="1181" fg:w="1"/><text x="96.8948%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="96.6448%" y="501" width="0.0818%" height="15" fill="rgb(207,152,44)" fg:x="1181" fg:w="1"/><text x="96.8948%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.7267%" y="517" width="0.0818%" height="15" fill="rgb(227,195,36)" fg:x="1182" fg:w="1"/><text x="96.9767%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="96.7267%" y="533" width="0.1637%" height="15" fill="rgb(210,137,36)" fg:x="1182" fg:w="2"/><text x="96.9767%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="96.8085%" y="517" width="0.0818%" height="15" fill="rgb(253,47,47)" fg:x="1183" fg:w="1"/><text x="97.0585%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.8085%" y="501" width="0.0818%" height="15" fill="rgb(230,147,18)" fg:x="1183" fg:w="1"/><text x="97.0585%" y="511.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="97.0540%" y="421" width="0.0818%" height="15" fill="rgb(247,33,49)" fg:x="1186" fg:w="1"/><text x="97.3040%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="97.0540%" y="405" width="0.0818%" height="15" fill="rgb(239,26,29)" fg:x="1186" fg:w="1"/><text x="97.3040%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (28 samples, 2.29%)</title><rect x="94.9264%" y="597" width="2.2913%" height="15" fill="rgb(245,145,52)" fg:x="1160" fg:w="28"/><text x="95.1764%" y="607.50">&lt;..</text></g><g><title>kernel::plugins::mw::apply_middleware (28 samples, 2.29%)</title><rect x="94.9264%" y="581" width="2.2913%" height="15" fill="rgb(224,139,32)" fg:x="1160" fg:w="28"/><text x="95.1764%" y="591.50">k..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (28 samples, 2.29%)</title><rect x="94.9264%" y="565" width="2.2913%" height="15" fill="rgb(238,202,19)" fg:x="1160" fg:w="28"/><text x="95.1764%" y="575.50">k..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (27 samples, 2.21%)</title><rect x="95.0082%" y="549" width="2.2095%" height="15" fill="rgb(249,211,53)" fg:x="1161" fg:w="27"/><text x="95.2582%" y="559.50">&lt;..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.33%)</title><rect x="96.8903%" y="533" width="0.3273%" height="15" fill="rgb(237,229,33)" fg:x="1184" fg:w="4"/><text x="97.1403%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.25%)</title><rect x="96.9722%" y="517" width="0.2455%" height="15" fill="rgb(208,97,40)" fg:x="1185" fg:w="3"/><text x="97.2222%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.25%)</title><rect x="96.9722%" y="501" width="0.2455%" height="15" fill="rgb(254,36,16)" fg:x="1185" fg:w="3"/><text x="97.2222%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.25%)</title><rect x="96.9722%" y="485" width="0.2455%" height="15" fill="rgb(221,7,12)" fg:x="1185" fg:w="3"/><text x="97.2222%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.25%)</title><rect x="96.9722%" y="469" width="0.2455%" height="15" fill="rgb(205,11,12)" fg:x="1185" fg:w="3"/><text x="97.2222%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="97.0540%" y="453" width="0.1637%" height="15" fill="rgb(227,72,28)" fg:x="1186" fg:w="2"/><text x="97.3040%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="97.0540%" y="437" width="0.1637%" height="15" fill="rgb(228,7,34)" fg:x="1186" fg:w="2"/><text x="97.3040%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1358%" y="421" width="0.0818%" height="15" fill="rgb(230,52,42)" fg:x="1187" fg:w="1"/><text x="97.3858%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.2995%" y="533" width="0.0818%" height="15" fill="rgb(219,177,53)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.2995%" y="517" width="0.0818%" height="15" fill="rgb(243,196,34)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.2995%" y="501" width="0.0818%" height="15" fill="rgb(213,66,49)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2995%" y="485" width="0.0818%" height="15" fill="rgb(233,11,50)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2995%" y="469" width="0.0818%" height="15" fill="rgb(235,190,6)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2995%" y="453" width="0.0818%" height="15" fill="rgb(212,64,44)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2995%" y="437" width="0.0818%" height="15" fill="rgb(206,95,44)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.2995%" y="421" width="0.0818%" height="15" fill="rgb(227,136,25)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2995%" y="405" width="0.0818%" height="15" fill="rgb(206,178,17)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2995%" y="389" width="0.0818%" height="15" fill="rgb(208,168,35)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2995%" y="373" width="0.0818%" height="15" fill="rgb(213,210,40)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2995%" y="357" width="0.0818%" height="15" fill="rgb(236,60,6)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2995%" y="341" width="0.0818%" height="15" fill="rgb(220,186,36)" fg:x="1189" fg:w="1"/><text x="97.5495%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="97.2995%" y="565" width="0.1637%" height="15" fill="rgb(225,120,49)" fg:x="1189" fg:w="2"/><text x="97.5495%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="97.2995%" y="549" width="0.1637%" height="15" fill="rgb(250,115,20)" fg:x="1189" fg:w="2"/><text x="97.5495%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.3813%" y="533" width="0.0818%" height="15" fill="rgb(207,214,23)" fg:x="1190" fg:w="1"/><text x="97.6313%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="97.3813%" y="517" width="0.0818%" height="15" fill="rgb(240,9,18)" fg:x="1190" fg:w="1"/><text x="97.6313%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.3813%" y="501" width="0.0818%" height="15" fill="rgb(232,170,48)" fg:x="1190" fg:w="1"/><text x="97.6313%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6268%" y="421" width="0.0818%" height="15" fill="rgb(236,149,23)" fg:x="1193" fg:w="1"/><text x="97.8768%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6268%" y="405" width="0.0818%" height="15" fill="rgb(210,125,42)" fg:x="1193" fg:w="1"/><text x="97.8768%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6268%" y="389" width="0.0818%" height="15" fill="rgb(207,201,52)" fg:x="1193" fg:w="1"/><text x="97.8768%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6268%" y="373" width="0.0818%" height="15" fill="rgb(250,187,37)" fg:x="1193" fg:w="1"/><text x="97.8768%" y="383.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="97.4632%" y="549" width="0.4092%" height="15" fill="rgb(214,186,2)" fg:x="1191" fg:w="5"/><text x="97.7132%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="97.4632%" y="533" width="0.4092%" height="15" fill="rgb(207,189,15)" fg:x="1191" fg:w="5"/><text x="97.7132%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="97.4632%" y="517" width="0.4092%" height="15" fill="rgb(221,99,21)" fg:x="1191" fg:w="5"/><text x="97.7132%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="97.4632%" y="501" width="0.4092%" height="15" fill="rgb(212,67,18)" fg:x="1191" fg:w="5"/><text x="97.7132%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="97.4632%" y="485" width="0.4092%" height="15" fill="rgb(226,24,24)" fg:x="1191" fg:w="5"/><text x="97.7132%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="97.5450%" y="469" width="0.3273%" height="15" fill="rgb(252,123,31)" fg:x="1192" fg:w="4"/><text x="97.7950%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="97.5450%" y="453" width="0.3273%" height="15" fill="rgb(251,227,47)" fg:x="1192" fg:w="4"/><text x="97.7950%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="97.5450%" y="437" width="0.3273%" height="15" fill="rgb(233,84,53)" fg:x="1192" fg:w="4"/><text x="97.7950%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.7087%" y="421" width="0.1637%" height="15" fill="rgb(228,57,19)" fg:x="1194" fg:w="2"/><text x="97.9587%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.7087%" y="405" width="0.1637%" height="15" fill="rgb(251,81,5)" fg:x="1194" fg:w="2"/><text x="97.9587%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7905%" y="389" width="0.0818%" height="15" fill="rgb(236,211,27)" fg:x="1195" fg:w="1"/><text x="98.0405%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.8723%" y="437" width="0.0818%" height="15" fill="rgb(218,21,6)" fg:x="1196" fg:w="1"/><text x="98.1223%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.8723%" y="421" width="0.0818%" height="15" fill="rgb(239,104,19)" fg:x="1196" fg:w="1"/><text x="98.1223%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.8723%" y="405" width="0.0818%" height="15" fill="rgb(234,179,27)" fg:x="1196" fg:w="1"/><text x="98.1223%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.8723%" y="389" width="0.0818%" height="15" fill="rgb(221,154,39)" fg:x="1196" fg:w="1"/><text x="98.1223%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8723%" y="373" width="0.0818%" height="15" fill="rgb(228,190,1)" fg:x="1196" fg:w="1"/><text x="98.1223%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8723%" y="357" width="0.0818%" height="15" fill="rgb(244,122,33)" fg:x="1196" fg:w="1"/><text x="98.1223%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.8723%" y="469" width="0.1637%" height="15" fill="rgb(227,56,37)" fg:x="1196" fg:w="2"/><text x="98.1223%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.8723%" y="453" width="0.1637%" height="15" fill="rgb(207,158,16)" fg:x="1196" fg:w="2"/><text x="98.1223%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.9542%" y="437" width="0.0818%" height="15" fill="rgb(251,222,30)" fg:x="1197" fg:w="1"/><text x="98.2042%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.9542%" y="421" width="0.0818%" height="15" fill="rgb(240,22,49)" fg:x="1197" fg:w="1"/><text x="98.2042%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.9542%" y="405" width="0.0818%" height="15" fill="rgb(224,207,37)" fg:x="1197" fg:w="1"/><text x="98.2042%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.9542%" y="389" width="0.0818%" height="15" fill="rgb(249,188,40)" fg:x="1197" fg:w="1"/><text x="98.2042%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.9542%" y="373" width="0.0818%" height="15" fill="rgb(254,141,11)" fg:x="1197" fg:w="1"/><text x="98.2042%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.0360%" y="469" width="0.0818%" height="15" fill="rgb(231,177,6)" fg:x="1198" fg:w="1"/><text x="98.2860%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.0360%" y="453" width="0.0818%" height="15" fill="rgb(241,6,16)" fg:x="1198" fg:w="1"/><text x="98.2860%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.0360%" y="437" width="0.0818%" height="15" fill="rgb(230,50,14)" fg:x="1198" fg:w="1"/><text x="98.2860%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0360%" y="421" width="0.0818%" height="15" fill="rgb(254,36,3)" fg:x="1198" fg:w="1"/><text x="98.2860%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="97.8723%" y="517" width="0.3273%" height="15" fill="rgb(226,149,37)" fg:x="1196" fg:w="4"/><text x="98.1223%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="97.8723%" y="501" width="0.3273%" height="15" fill="rgb(253,49,27)" fg:x="1196" fg:w="4"/><text x="98.1223%" y="511.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.33%)</title><rect x="97.8723%" y="485" width="0.3273%" height="15" fill="rgb(249,182,52)" fg:x="1196" fg:w="4"/><text x="98.1223%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1178%" y="469" width="0.0818%" height="15" fill="rgb(223,42,15)" fg:x="1199" fg:w="1"/><text x="98.3678%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1178%" y="453" width="0.0818%" height="15" fill="rgb(232,31,42)" fg:x="1199" fg:w="1"/><text x="98.3678%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.1178%" y="437" width="0.0818%" height="15" fill="rgb(233,56,46)" fg:x="1199" fg:w="1"/><text x="98.3678%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.1178%" y="421" width="0.0818%" height="15" fill="rgb(241,143,21)" fg:x="1199" fg:w="1"/><text x="98.3678%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="98.1178%" y="405" width="0.0818%" height="15" fill="rgb(251,222,15)" fg:x="1199" fg:w="1"/><text x="98.3678%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1178%" y="389" width="0.0818%" height="15" fill="rgb(242,101,40)" fg:x="1199" fg:w="1"/><text x="98.3678%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1178%" y="373" width="0.0818%" height="15" fill="rgb(247,60,44)" fg:x="1199" fg:w="1"/><text x="98.3678%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.1178%" y="357" width="0.0818%" height="15" fill="rgb(254,48,47)" fg:x="1199" fg:w="1"/><text x="98.3678%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (11 samples, 0.90%)</title><rect x="97.4632%" y="565" width="0.9002%" height="15" fill="rgb(253,30,33)" fg:x="1191" fg:w="11"/><text x="97.7132%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="97.8723%" y="549" width="0.4910%" height="15" fill="rgb(253,214,47)" fg:x="1196" fg:w="6"/><text x="98.1223%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="97.8723%" y="533" width="0.4910%" height="15" fill="rgb(241,108,29)" fg:x="1196" fg:w="6"/><text x="98.1223%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.1997%" y="517" width="0.1637%" height="15" fill="rgb(240,36,2)" fg:x="1200" fg:w="2"/><text x="98.4497%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1997%" y="501" width="0.1637%" height="15" fill="rgb(243,198,24)" fg:x="1200" fg:w="2"/><text x="98.4497%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.2815%" y="485" width="0.0818%" height="15" fill="rgb(225,98,27)" fg:x="1201" fg:w="1"/><text x="98.5315%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.2815%" y="469" width="0.0818%" height="15" fill="rgb(208,86,30)" fg:x="1201" fg:w="1"/><text x="98.5315%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (15 samples, 1.23%)</title><rect x="97.2177%" y="597" width="1.2275%" height="15" fill="rgb(242,157,11)" fg:x="1188" fg:w="15"/><text x="97.4677%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.23%)</title><rect x="97.2177%" y="581" width="1.2275%" height="15" fill="rgb(244,84,16)" fg:x="1188" fg:w="15"/><text x="97.4677%" y="591.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="98.3633%" y="565" width="0.0818%" height="15" fill="rgb(247,20,46)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3633%" y="549" width="0.0818%" height="15" fill="rgb(240,157,20)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3633%" y="533" width="0.0818%" height="15" fill="rgb(212,151,38)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.3633%" y="517" width="0.0818%" height="15" fill="rgb(233,197,14)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.3633%" y="501" width="0.0818%" height="15" fill="rgb(226,148,28)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.3633%" y="485" width="0.0818%" height="15" fill="rgb(244,141,30)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3633%" y="469" width="0.0818%" height="15" fill="rgb(215,73,38)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3633%" y="453" width="0.0818%" height="15" fill="rgb(230,148,29)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.3633%" y="437" width="0.0818%" height="15" fill="rgb(250,41,52)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.3633%" y="421" width="0.0818%" height="15" fill="rgb(215,48,1)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.3633%" y="405" width="0.0818%" height="15" fill="rgb(205,223,38)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.3633%" y="389" width="0.0818%" height="15" fill="rgb(213,51,8)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3633%" y="373" width="0.0818%" height="15" fill="rgb(248,53,11)" fg:x="1202" fg:w="1"/><text x="98.6133%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="98.5270%" y="565" width="0.0818%" height="15" fill="rgb(218,140,4)" fg:x="1204" fg:w="1"/><text x="98.7770%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="98.6088%" y="549" width="0.1637%" height="15" fill="rgb(248,161,31)" fg:x="1205" fg:w="2"/><text x="98.8588%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="98.6088%" y="533" width="0.1637%" height="15" fill="rgb(239,88,32)" fg:x="1205" fg:w="2"/><text x="98.8588%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.6088%" y="517" width="0.1637%" height="15" fill="rgb(234,14,28)" fg:x="1205" fg:w="2"/><text x="98.8588%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.6907%" y="501" width="0.0818%" height="15" fill="rgb(235,173,11)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.6907%" y="485" width="0.0818%" height="15" fill="rgb(222,70,2)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6907%" y="469" width="0.0818%" height="15" fill="rgb(228,196,41)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6907%" y="453" width="0.0818%" height="15" fill="rgb(249,19,9)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6907%" y="437" width="0.0818%" height="15" fill="rgb(221,16,43)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6907%" y="421" width="0.0818%" height="15" fill="rgb(225,207,6)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.6907%" y="405" width="0.0818%" height="15" fill="rgb(249,32,32)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.6907%" y="389" width="0.0818%" height="15" fill="rgb(232,163,43)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.6907%" y="373" width="0.0818%" height="15" fill="rgb(236,158,54)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.6907%" y="357" width="0.0818%" height="15" fill="rgb(205,126,44)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.6907%" y="341" width="0.0818%" height="15" fill="rgb(210,162,12)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.6907%" y="325" width="0.0818%" height="15" fill="rgb(218,156,48)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.6907%" y="309" width="0.0818%" height="15" fill="rgb(248,210,3)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.6907%" y="293" width="0.0818%" height="15" fill="rgb(212,43,27)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.6907%" y="277" width="0.0818%" height="15" fill="rgb(241,52,6)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.6907%" y="261" width="0.0818%" height="15" fill="rgb(222,178,35)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.6907%" y="245" width="0.0818%" height="15" fill="rgb(205,121,46)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6907%" y="229" width="0.0818%" height="15" fill="rgb(249,67,1)" fg:x="1206" fg:w="1"/><text x="98.9407%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7725%" y="453" width="0.0818%" height="15" fill="rgb(238,168,42)" fg:x="1207" fg:w="1"/><text x="99.0225%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7725%" y="437" width="0.0818%" height="15" fill="rgb(205,36,48)" fg:x="1207" fg:w="1"/><text x="99.0225%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7725%" y="421" width="0.0818%" height="15" fill="rgb(240,85,12)" fg:x="1207" fg:w="1"/><text x="99.0225%" y="431.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.7725%" y="533" width="0.1637%" height="15" fill="rgb(245,27,39)" fg:x="1207" fg:w="2"/><text x="99.0225%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.7725%" y="517" width="0.1637%" height="15" fill="rgb(218,129,34)" fg:x="1207" fg:w="2"/><text x="99.0225%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7725%" y="501" width="0.1637%" height="15" fill="rgb(221,157,12)" fg:x="1207" fg:w="2"/><text x="99.0225%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.7725%" y="485" width="0.1637%" height="15" fill="rgb(213,206,20)" fg:x="1207" fg:w="2"/><text x="99.0225%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7725%" y="469" width="0.1637%" height="15" fill="rgb(227,115,30)" fg:x="1207" fg:w="2"/><text x="99.0225%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8543%" y="453" width="0.0818%" height="15" fill="rgb(221,40,47)" fg:x="1208" fg:w="1"/><text x="99.1043%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8543%" y="437" width="0.0818%" height="15" fill="rgb(239,96,49)" fg:x="1208" fg:w="1"/><text x="99.1043%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8543%" y="421" width="0.0818%" height="15" fill="rgb(223,24,38)" fg:x="1208" fg:w="1"/><text x="99.1043%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8543%" y="405" width="0.0818%" height="15" fill="rgb(242,35,45)" fg:x="1208" fg:w="1"/><text x="99.1043%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8543%" y="389" width="0.0818%" height="15" fill="rgb(236,20,9)" fg:x="1208" fg:w="1"/><text x="99.1043%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8543%" y="373" width="0.0818%" height="15" fill="rgb(239,124,8)" fg:x="1208" fg:w="1"/><text x="99.1043%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8543%" y="357" width="0.0818%" height="15" fill="rgb(228,92,29)" fg:x="1208" fg:w="1"/><text x="99.1043%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8543%" y="341" width="0.0818%" height="15" fill="rgb(251,53,39)" fg:x="1208" fg:w="1"/><text x="99.1043%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.9362%" y="501" width="0.0818%" height="15" fill="rgb(224,44,10)" fg:x="1209" fg:w="1"/><text x="99.1862%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9362%" y="485" width="0.0818%" height="15" fill="rgb(254,10,15)" fg:x="1209" fg:w="1"/><text x="99.1862%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9362%" y="469" width="0.0818%" height="15" fill="rgb(245,173,6)" fg:x="1209" fg:w="1"/><text x="99.1862%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9362%" y="453" width="0.0818%" height="15" fill="rgb(228,74,0)" fg:x="1209" fg:w="1"/><text x="99.1862%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.41%)</title><rect x="98.7725%" y="549" width="0.4092%" height="15" fill="rgb(206,138,29)" fg:x="1207" fg:w="5"/><text x="99.0225%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="98.9362%" y="533" width="0.2455%" height="15" fill="rgb(253,27,43)" fg:x="1209" fg:w="3"/><text x="99.1862%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="98.9362%" y="517" width="0.2455%" height="15" fill="rgb(231,73,0)" fg:x="1209" fg:w="3"/><text x="99.1862%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.0180%" y="501" width="0.1637%" height="15" fill="rgb(218,9,23)" fg:x="1210" fg:w="2"/><text x="99.2680%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.0180%" y="485" width="0.1637%" height="15" fill="rgb(251,55,29)" fg:x="1210" fg:w="2"/><text x="99.2680%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="99.0180%" y="469" width="0.1637%" height="15" fill="rgb(223,180,22)" fg:x="1210" fg:w="2"/><text x="99.2680%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="99.0180%" y="453" width="0.1637%" height="15" fill="rgb(223,29,21)" fg:x="1210" fg:w="2"/><text x="99.2680%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="99.1817%" y="549" width="0.2455%" height="15" fill="rgb(251,103,37)" fg:x="1212" fg:w="3"/><text x="99.4317%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="99.2635%" y="533" width="0.1637%" height="15" fill="rgb(214,11,21)" fg:x="1213" fg:w="2"/><text x="99.5135%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.2635%" y="517" width="0.1637%" height="15" fill="rgb(205,137,13)" fg:x="1213" fg:w="2"/><text x="99.5135%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3453%" y="501" width="0.0818%" height="15" fill="rgb(225,58,47)" fg:x="1214" fg:w="1"/><text x="99.5953%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3453%" y="485" width="0.0818%" height="15" fill="rgb(222,197,14)" fg:x="1214" fg:w="1"/><text x="99.5953%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3453%" y="469" width="0.0818%" height="15" fill="rgb(215,210,33)" fg:x="1214" fg:w="1"/><text x="99.5953%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3453%" y="453" width="0.0818%" height="15" fill="rgb(242,13,9)" fg:x="1214" fg:w="1"/><text x="99.5953%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.3453%" y="437" width="0.0818%" height="15" fill="rgb(218,31,39)" fg:x="1214" fg:w="1"/><text x="99.5953%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.06%)</title><rect x="98.4452%" y="581" width="1.0638%" height="15" fill="rgb(211,214,23)" fg:x="1203" fg:w="13"/><text x="98.6952%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.90%)</title><rect x="98.6088%" y="565" width="0.9002%" height="15" fill="rgb(237,92,14)" fg:x="1205" fg:w="11"/><text x="98.8588%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.4272%" y="549" width="0.0818%" height="15" fill="rgb(220,78,5)" fg:x="1215" fg:w="1"/><text x="99.6772%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4272%" y="533" width="0.0818%" height="15" fill="rgb(237,23,21)" fg:x="1215" fg:w="1"/><text x="99.6772%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="99.4272%" y="517" width="0.0818%" height="15" fill="rgb(251,207,51)" fg:x="1215" fg:w="1"/><text x="99.6772%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4272%" y="501" width="0.0818%" height="15" fill="rgb(249,206,18)" fg:x="1215" fg:w="1"/><text x="99.6772%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (14 samples, 1.15%)</title><rect x="98.4452%" y="597" width="1.1457%" height="15" fill="rgb(236,20,19)" fg:x="1203" fg:w="14"/><text x="98.6952%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.5090%" y="581" width="0.0818%" height="15" fill="rgb(214,227,29)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.5090%" y="565" width="0.0818%" height="15" fill="rgb(209,183,4)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.5090%" y="549" width="0.0818%" height="15" fill="rgb(233,111,23)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5090%" y="533" width="0.0818%" height="15" fill="rgb(238,121,27)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.5090%" y="517" width="0.0818%" height="15" fill="rgb(236,120,41)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.5090%" y="501" width="0.0818%" height="15" fill="rgb(241,143,10)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.5090%" y="485" width="0.0818%" height="15" fill="rgb(224,86,31)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5090%" y="469" width="0.0818%" height="15" fill="rgb(236,212,27)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.5090%" y="453" width="0.0818%" height="15" fill="rgb(219,43,51)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.5090%" y="437" width="0.0818%" height="15" fill="rgb(232,216,8)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.5090%" y="421" width="0.0818%" height="15" fill="rgb(206,222,39)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5090%" y="405" width="0.0818%" height="15" fill="rgb(209,149,48)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.5090%" y="389" width="0.0818%" height="15" fill="rgb(229,155,21)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.5090%" y="373" width="0.0818%" height="15" fill="rgb(246,152,26)" fg:x="1216" fg:w="1"/><text x="99.7590%" y="383.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="99.5908%" y="597" width="0.1637%" height="15" fill="rgb(206,70,42)" fg:x="1217" fg:w="2"/><text x="99.8408%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="99.5908%" y="581" width="0.1637%" height="15" fill="rgb(236,9,11)" fg:x="1217" fg:w="2"/><text x="99.8408%" y="591.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6727%" y="565" width="0.0818%" height="15" fill="rgb(238,145,47)" fg:x="1218" fg:w="1"/><text x="99.9227%" y="575.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.6727%" y="549" width="0.0818%" height="15" fill="rgb(252,189,7)" fg:x="1218" fg:w="1"/><text x="99.9227%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.6727%" y="533" width="0.0818%" height="15" fill="rgb(254,168,51)" fg:x="1218" fg:w="1"/><text x="99.9227%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.6727%" y="517" width="0.0818%" height="15" fill="rgb(227,105,46)" fg:x="1218" fg:w="1"/><text x="99.9227%" y="527.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (60 samples, 4.91%)</title><rect x="94.9264%" y="613" width="4.9100%" height="15" fill="rgb(227,74,30)" fg:x="1160" fg:w="60"/><text x="95.1764%" y="623.50">engine..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.7545%" y="597" width="0.0818%" height="15" fill="rgb(206,212,44)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.7545%" y="581" width="0.0818%" height="15" fill="rgb(252,69,11)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.7545%" y="565" width="0.0818%" height="15" fill="rgb(239,116,0)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7545%" y="549" width="0.0818%" height="15" fill="rgb(246,189,23)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7545%" y="533" width="0.0818%" height="15" fill="rgb(229,50,41)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7545%" y="517" width="0.0818%" height="15" fill="rgb(214,66,37)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7545%" y="501" width="0.0818%" height="15" fill="rgb(226,28,6)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7545%" y="485" width="0.0818%" height="15" fill="rgb(239,154,0)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7545%" y="469" width="0.0818%" height="15" fill="rgb(233,97,11)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7545%" y="453" width="0.0818%" height="15" fill="rgb(236,215,16)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7545%" y="437" width="0.0818%" height="15" fill="rgb(246,188,29)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7545%" y="421" width="0.0818%" height="15" fill="rgb(207,7,29)" fg:x="1219" fg:w="1"/><text x="100.0045%" y="431.50"></text></g><g><title>all (1,222 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(238,112,43)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="975.50"></text></g><g><title>simple-20ff020b (1,222 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(230,110,32)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="959.50">simple-20ff020b</text></g><g><title>_start (1,222 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(218,197,32)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="943.50">_start</text></g><g><title>__libc_start_main (1,222 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(252,61,9)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="927.50">__libc_start_main</text></g><g><title>main (1,222 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(244,140,14)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="911.50">main</text></g><g><title>std::rt::lang_start_internal (1,222 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(216,14,47)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,222 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(224,130,52)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,222 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(210,229,51)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,222 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(242,13,9)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,222 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(252,71,50)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="831.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,222 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(218,225,6)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,222 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(219,27,35)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,222 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(226,30,1)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,222 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(227,164,34)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,222 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(206,103,4)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="751.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,222 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(214,166,19)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,222 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(240,56,20)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="719.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,222 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(224,25,3)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="703.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,222 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(216,206,54)" fg:x="0" fg:w="1222"/><text x="0.2500%" y="687.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (379 samples, 31.01%)</title><rect x="68.9853%" y="661" width="31.0147%" height="15" fill="rgb(225,142,10)" fg:x="843" fg:w="379"/><text x="69.2353%" y="671.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion:..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (379 samples, 31.01%)</title><rect x="68.9853%" y="645" width="31.0147%" height="15" fill="rgb(246,9,18)" fg:x="843" fg:w="379"/><text x="69.2353%" y="655.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (379 samples, 31.01%)</title><rect x="68.9853%" y="629" width="31.0147%" height="15" fill="rgb(247,140,18)" fg:x="843" fg:w="379"/><text x="69.2353%" y="639.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="99.8363%" y="613" width="0.1637%" height="15" fill="rgb(239,184,22)" fg:x="1220" fg:w="2"/><text x="100.0863%" y="623.50"></text></g></svg></svg>