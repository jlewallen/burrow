<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="1253"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.1596%" y="645" width="0.1596%" height="15" fill="rgb(241,64,10)" fg:x="2" fg:w="2"/><text x="0.4096%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.2394%" y="629" width="0.0798%" height="15" fill="rgb(229,39,44)" fg:x="3" fg:w="1"/><text x="0.4894%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4789%" y="613" width="0.0798%" height="15" fill="rgb(230,226,3)" fg:x="6" fg:w="1"/><text x="0.7289%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.7183%" y="549" width="0.2394%" height="15" fill="rgb(222,13,42)" fg:x="9" fg:w="3"/><text x="0.9683%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.9577%" y="549" width="0.1596%" height="15" fill="rgb(247,180,54)" fg:x="12" fg:w="2"/><text x="1.2077%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0375%" y="533" width="0.0798%" height="15" fill="rgb(205,96,16)" fg:x="13" fg:w="1"/><text x="1.2875%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1173%" y="501" width="0.0798%" height="15" fill="rgb(205,100,21)" fg:x="14" fg:w="1"/><text x="1.3673%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="1.1173%" y="533" width="0.1596%" height="15" fill="rgb(248,51,4)" fg:x="14" fg:w="2"/><text x="1.3673%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="1.1173%" y="517" width="0.1596%" height="15" fill="rgb(217,197,30)" fg:x="14" fg:w="2"/><text x="1.3673%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.1971%" y="501" width="0.0798%" height="15" fill="rgb(240,179,40)" fg:x="15" fg:w="1"/><text x="1.4471%" y="511.50"></text></g><g><title>__libc_free (6 samples, 0.48%)</title><rect x="1.2769%" y="533" width="0.4789%" height="15" fill="rgb(212,185,35)" fg:x="16" fg:w="6"/><text x="1.5269%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.7558%" y="533" width="0.1596%" height="15" fill="rgb(251,222,31)" fg:x="22" fg:w="2"/><text x="2.0058%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.9952%" y="517" width="0.0798%" height="15" fill="rgb(208,140,36)" fg:x="25" fg:w="1"/><text x="2.2452%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0750%" y="501" width="0.0798%" height="15" fill="rgb(220,148,1)" fg:x="26" fg:w="1"/><text x="2.3250%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1548%" y="485" width="0.0798%" height="15" fill="rgb(254,4,28)" fg:x="27" fg:w="1"/><text x="2.4048%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.84%)</title><rect x="0.5587%" y="565" width="1.8356%" height="15" fill="rgb(222,185,44)" fg:x="7" fg:w="23"/><text x="0.8087%" y="575.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="1.1173%" y="549" width="1.2769%" height="15" fill="rgb(215,74,39)" fg:x="14" fg:w="16"/><text x="1.3673%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="1.9154%" y="533" width="0.4789%" height="15" fill="rgb(247,86,4)" fg:x="24" fg:w="6"/><text x="2.1654%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="2.0750%" y="517" width="0.3192%" height="15" fill="rgb(231,105,32)" fg:x="26" fg:w="4"/><text x="2.3250%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="2.1548%" y="501" width="0.2394%" height="15" fill="rgb(222,65,35)" fg:x="27" fg:w="3"/><text x="2.4048%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.2346%" y="485" width="0.1596%" height="15" fill="rgb(218,145,35)" fg:x="28" fg:w="2"/><text x="2.4846%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.2346%" y="469" width="0.1596%" height="15" fill="rgb(208,7,15)" fg:x="28" fg:w="2"/><text x="2.4846%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.92%)</title><rect x="0.5587%" y="581" width="1.9154%" height="15" fill="rgb(209,83,13)" fg:x="7" fg:w="24"/><text x="0.8087%" y="591.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3943%" y="565" width="0.0798%" height="15" fill="rgb(218,3,10)" fg:x="30" fg:w="1"/><text x="2.6443%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (28 samples, 2.23%)</title><rect x="0.3192%" y="645" width="2.2346%" height="15" fill="rgb(211,219,4)" fg:x="4" fg:w="28"/><text x="0.5692%" y="655.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.15%)</title><rect x="0.3990%" y="629" width="2.1548%" height="15" fill="rgb(228,194,12)" fg:x="5" fg:w="27"/><text x="0.6490%" y="639.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (25 samples, 2.00%)</title><rect x="0.5587%" y="613" width="1.9952%" height="15" fill="rgb(210,175,7)" fg:x="7" fg:w="25"/><text x="0.8087%" y="623.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.00%)</title><rect x="0.5587%" y="597" width="1.9952%" height="15" fill="rgb(243,132,6)" fg:x="7" fg:w="25"/><text x="0.8087%" y="607.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4741%" y="581" width="0.0798%" height="15" fill="rgb(207,72,18)" fg:x="31" fg:w="1"/><text x="2.7241%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.47%)</title><rect x="0.1596%" y="661" width="2.4741%" height="15" fill="rgb(236,1,18)" fg:x="2" fg:w="31"/><text x="0.4096%" y="671.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="2.5539%" y="645" width="0.0798%" height="15" fill="rgb(227,0,18)" fg:x="32" fg:w="1"/><text x="2.8039%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="2.5539%" y="629" width="0.0798%" height="15" fill="rgb(247,37,5)" fg:x="32" fg:w="1"/><text x="2.8039%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.5539%" y="613" width="0.0798%" height="15" fill="rgb(237,179,24)" fg:x="32" fg:w="1"/><text x="2.8039%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="2.7135%" y="629" width="0.0798%" height="15" fill="rgb(226,53,20)" fg:x="34" fg:w="1"/><text x="2.9635%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.7933%" y="581" width="0.0798%" height="15" fill="rgb(247,75,7)" fg:x="35" fg:w="1"/><text x="3.0433%" y="591.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="2.7933%" y="565" width="0.0798%" height="15" fill="rgb(233,96,12)" fg:x="35" fg:w="1"/><text x="3.0433%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="2.7933%" y="549" width="0.0798%" height="15" fill="rgb(224,125,0)" fg:x="35" fg:w="1"/><text x="3.0433%" y="559.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="2.7933%" y="533" width="0.0798%" height="15" fill="rgb(224,92,25)" fg:x="35" fg:w="1"/><text x="3.0433%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="2.7933%" y="517" width="0.0798%" height="15" fill="rgb(224,42,24)" fg:x="35" fg:w="1"/><text x="3.0433%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="2.7933%" y="501" width="0.0798%" height="15" fill="rgb(234,132,49)" fg:x="35" fg:w="1"/><text x="3.0433%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="2.7933%" y="485" width="0.0798%" height="15" fill="rgb(248,100,35)" fg:x="35" fg:w="1"/><text x="3.0433%" y="495.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="2.7933%" y="469" width="0.0798%" height="15" fill="rgb(239,94,40)" fg:x="35" fg:w="1"/><text x="3.0433%" y="479.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="2.8731%" y="581" width="0.0798%" height="15" fill="rgb(235,139,28)" fg:x="36" fg:w="1"/><text x="3.1231%" y="591.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="2.8731%" y="565" width="0.0798%" height="15" fill="rgb(217,144,7)" fg:x="36" fg:w="1"/><text x="3.1231%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.8731%" y="549" width="0.0798%" height="15" fill="rgb(227,55,4)" fg:x="36" fg:w="1"/><text x="3.1231%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.8731%" y="533" width="0.0798%" height="15" fill="rgb(252,82,54)" fg:x="36" fg:w="1"/><text x="3.1231%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.8731%" y="517" width="0.0798%" height="15" fill="rgb(245,172,4)" fg:x="36" fg:w="1"/><text x="3.1231%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="2.8731%" y="501" width="0.0798%" height="15" fill="rgb(207,26,27)" fg:x="36" fg:w="1"/><text x="3.1231%" y="511.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="3.0327%" y="565" width="0.0798%" height="15" fill="rgb(252,98,18)" fg:x="38" fg:w="1"/><text x="3.2827%" y="575.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="3.0327%" y="549" width="0.0798%" height="15" fill="rgb(244,8,26)" fg:x="38" fg:w="1"/><text x="3.2827%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="3.0327%" y="533" width="0.0798%" height="15" fill="rgb(237,173,45)" fg:x="38" fg:w="1"/><text x="3.2827%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="3.0327%" y="517" width="0.0798%" height="15" fill="rgb(208,213,49)" fg:x="38" fg:w="1"/><text x="3.2827%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="3.0327%" y="501" width="0.0798%" height="15" fill="rgb(212,122,37)" fg:x="38" fg:w="1"/><text x="3.2827%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="3.0327%" y="485" width="0.0798%" height="15" fill="rgb(213,80,17)" fg:x="38" fg:w="1"/><text x="3.2827%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.0327%" y="469" width="0.0798%" height="15" fill="rgb(206,210,43)" fg:x="38" fg:w="1"/><text x="3.2827%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.0327%" y="453" width="0.0798%" height="15" fill="rgb(229,214,3)" fg:x="38" fg:w="1"/><text x="3.2827%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.0327%" y="437" width="0.0798%" height="15" fill="rgb(235,213,29)" fg:x="38" fg:w="1"/><text x="3.2827%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.0327%" y="421" width="0.0798%" height="15" fill="rgb(248,135,26)" fg:x="38" fg:w="1"/><text x="3.2827%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.0327%" y="405" width="0.0798%" height="15" fill="rgb(242,188,12)" fg:x="38" fg:w="1"/><text x="3.2827%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.0327%" y="389" width="0.0798%" height="15" fill="rgb(245,38,12)" fg:x="38" fg:w="1"/><text x="3.2827%" y="399.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="3.5116%" y="533" width="0.0798%" height="15" fill="rgb(218,42,13)" fg:x="44" fg:w="1"/><text x="3.7616%" y="543.50"></text></g><g><title>__strerror_r (1 samples, 0.08%)</title><rect x="3.5914%" y="533" width="0.0798%" height="15" fill="rgb(238,132,49)" fg:x="45" fg:w="1"/><text x="3.8414%" y="543.50"></text></g><g><title>dlerror (8 samples, 0.64%)</title><rect x="3.1125%" y="565" width="0.6385%" height="15" fill="rgb(209,196,19)" fg:x="39" fg:w="8"/><text x="3.3625%" y="575.50"></text></g><g><title>__asprintf (7 samples, 0.56%)</title><rect x="3.1923%" y="549" width="0.5587%" height="15" fill="rgb(244,131,22)" fg:x="40" fg:w="7"/><text x="3.4423%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.6712%" y="533" width="0.0798%" height="15" fill="rgb(223,18,34)" fg:x="46" fg:w="1"/><text x="3.9212%" y="543.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (29 samples, 2.31%)</title><rect x="2.7933%" y="613" width="2.3144%" height="15" fill="rgb(252,124,54)" fg:x="35" fg:w="29"/><text x="3.0433%" y="623.50">k..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (29 samples, 2.31%)</title><rect x="2.7933%" y="597" width="2.3144%" height="15" fill="rgb(229,106,42)" fg:x="35" fg:w="29"/><text x="3.0433%" y="607.50">&lt;..</text></g><g><title>libloading::os::unix::Library::open (27 samples, 2.15%)</title><rect x="2.9529%" y="581" width="2.1548%" height="15" fill="rgb(221,129,1)" fg:x="37" fg:w="27"/><text x="3.2029%" y="591.50">l..</text></g><g><title>dlopen (17 samples, 1.36%)</title><rect x="3.7510%" y="565" width="1.3567%" height="15" fill="rgb(229,74,15)" fg:x="47" fg:w="17"/><text x="4.0010%" y="575.50"></text></g><g><title>_dl_catch_error (16 samples, 1.28%)</title><rect x="3.8308%" y="549" width="1.2769%" height="15" fill="rgb(210,206,50)" fg:x="48" fg:w="16"/><text x="4.0808%" y="559.50"></text></g><g><title>_dl_catch_exception (16 samples, 1.28%)</title><rect x="3.8308%" y="533" width="1.2769%" height="15" fill="rgb(251,114,31)" fg:x="48" fg:w="16"/><text x="4.0808%" y="543.50"></text></g><g><title>_dl_catch_exception (16 samples, 1.28%)</title><rect x="3.8308%" y="517" width="1.2769%" height="15" fill="rgb(215,225,28)" fg:x="48" fg:w="16"/><text x="4.0808%" y="527.50"></text></g><g><title>_dl_catch_exception (16 samples, 1.28%)</title><rect x="3.8308%" y="501" width="1.2769%" height="15" fill="rgb(237,109,14)" fg:x="48" fg:w="16"/><text x="4.0808%" y="511.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="5.0279%" y="485" width="0.0798%" height="15" fill="rgb(230,13,37)" fg:x="63" fg:w="1"/><text x="5.2779%" y="495.50"></text></g><g><title>engine::session::Session::initialize (33 samples, 2.63%)</title><rect x="2.7933%" y="629" width="2.6337%" height="15" fill="rgb(231,40,28)" fg:x="35" fg:w="33"/><text x="3.0433%" y="639.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="5.1077%" y="613" width="0.3192%" height="15" fill="rgb(231,202,18)" fg:x="64" fg:w="4"/><text x="5.3577%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="5.1077%" y="597" width="0.3192%" height="15" fill="rgb(225,33,18)" fg:x="64" fg:w="4"/><text x="5.3577%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="5.1077%" y="581" width="0.3192%" height="15" fill="rgb(223,64,47)" fg:x="64" fg:w="4"/><text x="5.3577%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="5.1875%" y="565" width="0.2394%" height="15" fill="rgb(234,114,13)" fg:x="65" fg:w="3"/><text x="5.4375%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.2674%" y="549" width="0.1596%" height="15" fill="rgb(248,56,40)" fg:x="66" fg:w="2"/><text x="5.5174%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.3472%" y="533" width="0.0798%" height="15" fill="rgb(221,194,21)" fg:x="67" fg:w="1"/><text x="5.5972%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (37 samples, 2.95%)</title><rect x="2.6337%" y="661" width="2.9529%" height="15" fill="rgb(242,108,46)" fg:x="33" fg:w="37"/><text x="2.8837%" y="671.50">&lt;en..</text></g><g><title>engine::session::Session::new (37 samples, 2.95%)</title><rect x="2.6337%" y="645" width="2.9529%" height="15" fill="rgb(220,106,10)" fg:x="33" fg:w="37"/><text x="2.8837%" y="655.50">eng..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="5.4270%" y="629" width="0.1596%" height="15" fill="rgb(211,88,4)" fg:x="68" fg:w="2"/><text x="5.6770%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="5.5068%" y="613" width="0.0798%" height="15" fill="rgb(214,95,34)" fg:x="69" fg:w="1"/><text x="5.7568%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.5068%" y="597" width="0.0798%" height="15" fill="rgb(250,160,33)" fg:x="69" fg:w="1"/><text x="5.7568%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="5.5866%" y="645" width="0.0798%" height="15" fill="rgb(225,29,10)" fg:x="70" fg:w="1"/><text x="5.8366%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="5.6664%" y="645" width="0.0798%" height="15" fill="rgb(224,28,30)" fg:x="71" fg:w="1"/><text x="5.9164%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="5.6664%" y="629" width="0.0798%" height="15" fill="rgb(231,77,4)" fg:x="71" fg:w="1"/><text x="5.9164%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.6664%" y="613" width="0.0798%" height="15" fill="rgb(209,63,21)" fg:x="71" fg:w="1"/><text x="5.9164%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.8260%" y="613" width="0.0798%" height="15" fill="rgb(226,22,11)" fg:x="73" fg:w="1"/><text x="6.0760%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.8260%" y="597" width="0.0798%" height="15" fill="rgb(216,82,30)" fg:x="73" fg:w="1"/><text x="6.0760%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.8260%" y="581" width="0.0798%" height="15" fill="rgb(246,227,38)" fg:x="73" fg:w="1"/><text x="6.0760%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.8260%" y="565" width="0.0798%" height="15" fill="rgb(251,203,53)" fg:x="73" fg:w="1"/><text x="6.0760%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.8260%" y="549" width="0.0798%" height="15" fill="rgb(254,101,1)" fg:x="73" fg:w="1"/><text x="6.0760%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.8260%" y="533" width="0.0798%" height="15" fill="rgb(241,180,5)" fg:x="73" fg:w="1"/><text x="6.0760%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.8260%" y="517" width="0.0798%" height="15" fill="rgb(218,168,4)" fg:x="73" fg:w="1"/><text x="6.0760%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.8260%" y="501" width="0.0798%" height="15" fill="rgb(224,223,32)" fg:x="73" fg:w="1"/><text x="6.0760%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.8260%" y="485" width="0.0798%" height="15" fill="rgb(236,106,22)" fg:x="73" fg:w="1"/><text x="6.0760%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.8260%" y="469" width="0.0798%" height="15" fill="rgb(206,121,5)" fg:x="73" fg:w="1"/><text x="6.0760%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.8260%" y="453" width="0.0798%" height="15" fill="rgb(233,87,28)" fg:x="73" fg:w="1"/><text x="6.0760%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.8260%" y="437" width="0.0798%" height="15" fill="rgb(236,137,17)" fg:x="73" fg:w="1"/><text x="6.0760%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="5.7462%" y="629" width="0.2394%" height="15" fill="rgb(209,183,38)" fg:x="72" fg:w="3"/><text x="5.9962%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.9058%" y="613" width="0.0798%" height="15" fill="rgb(206,162,44)" fg:x="74" fg:w="1"/><text x="6.1558%" y="623.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="5.9856%" y="629" width="0.0798%" height="15" fill="rgb(237,70,39)" fg:x="75" fg:w="1"/><text x="6.2356%" y="639.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="5.9856%" y="613" width="0.0798%" height="15" fill="rgb(212,176,5)" fg:x="75" fg:w="1"/><text x="6.2356%" y="623.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="5.9856%" y="597" width="0.0798%" height="15" fill="rgb(232,95,16)" fg:x="75" fg:w="1"/><text x="6.2356%" y="607.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="5.9856%" y="581" width="0.0798%" height="15" fill="rgb(219,115,35)" fg:x="75" fg:w="1"/><text x="6.2356%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="5.9856%" y="565" width="0.0798%" height="15" fill="rgb(251,67,27)" fg:x="75" fg:w="1"/><text x="6.2356%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="5.9856%" y="549" width="0.0798%" height="15" fill="rgb(222,95,40)" fg:x="75" fg:w="1"/><text x="6.2356%" y="559.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="5.9856%" y="533" width="0.0798%" height="15" fill="rgb(250,35,16)" fg:x="75" fg:w="1"/><text x="6.2356%" y="543.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="5.9856%" y="517" width="0.0798%" height="15" fill="rgb(224,86,44)" fg:x="75" fg:w="1"/><text x="6.2356%" y="527.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="5.9856%" y="501" width="0.0798%" height="15" fill="rgb(237,53,53)" fg:x="75" fg:w="1"/><text x="6.2356%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.1453%" y="597" width="0.0798%" height="15" fill="rgb(208,171,33)" fg:x="77" fg:w="1"/><text x="6.3953%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="6.2251%" y="549" width="0.3990%" height="15" fill="rgb(222,64,27)" fg:x="78" fg:w="5"/><text x="6.4751%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="6.3049%" y="533" width="0.3192%" height="15" fill="rgb(221,121,35)" fg:x="79" fg:w="4"/><text x="6.5549%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.3847%" y="517" width="0.2394%" height="15" fill="rgb(228,137,42)" fg:x="80" fg:w="3"/><text x="6.6347%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.6241%" y="533" width="0.0798%" height="15" fill="rgb(227,54,21)" fg:x="83" fg:w="1"/><text x="6.8741%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="6.7039%" y="533" width="0.3192%" height="15" fill="rgb(240,168,33)" fg:x="84" fg:w="4"/><text x="6.9539%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.7837%" y="517" width="0.2394%" height="15" fill="rgb(243,159,6)" fg:x="85" fg:w="3"/><text x="7.0337%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.9433%" y="501" width="0.0798%" height="15" fill="rgb(205,211,41)" fg:x="87" fg:w="1"/><text x="7.1933%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.9433%" y="485" width="0.0798%" height="15" fill="rgb(253,30,1)" fg:x="87" fg:w="1"/><text x="7.1933%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.0231%" y="485" width="0.0798%" height="15" fill="rgb(226,80,18)" fg:x="88" fg:w="1"/><text x="7.2731%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="7.0231%" y="517" width="0.1596%" height="15" fill="rgb(253,156,46)" fg:x="88" fg:w="2"/><text x="7.2731%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.0231%" y="501" width="0.1596%" height="15" fill="rgb(248,87,27)" fg:x="88" fg:w="2"/><text x="7.2731%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.1030%" y="485" width="0.0798%" height="15" fill="rgb(227,122,2)" fg:x="89" fg:w="1"/><text x="7.3530%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.1030%" y="469" width="0.0798%" height="15" fill="rgb(229,94,39)" fg:x="89" fg:w="1"/><text x="7.3530%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.1030%" y="453" width="0.0798%" height="15" fill="rgb(225,173,31)" fg:x="89" fg:w="1"/><text x="7.3530%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="7.1828%" y="517" width="0.1596%" height="15" fill="rgb(239,176,30)" fg:x="90" fg:w="2"/><text x="7.4328%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.1828%" y="501" width="0.1596%" height="15" fill="rgb(212,104,21)" fg:x="90" fg:w="2"/><text x="7.4328%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.1828%" y="485" width="0.1596%" height="15" fill="rgb(240,209,40)" fg:x="90" fg:w="2"/><text x="7.4328%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.2626%" y="469" width="0.0798%" height="15" fill="rgb(234,195,5)" fg:x="91" fg:w="1"/><text x="7.5126%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="7.3424%" y="501" width="0.2394%" height="15" fill="rgb(238,213,1)" fg:x="92" fg:w="3"/><text x="7.5924%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.3424%" y="485" width="0.2394%" height="15" fill="rgb(235,182,54)" fg:x="92" fg:w="3"/><text x="7.5924%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.4222%" y="469" width="0.1596%" height="15" fill="rgb(229,50,46)" fg:x="93" fg:w="2"/><text x="7.6722%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.6616%" y="485" width="0.0798%" height="15" fill="rgb(219,145,13)" fg:x="96" fg:w="1"/><text x="7.9116%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.6616%" y="469" width="0.0798%" height="15" fill="rgb(220,226,10)" fg:x="96" fg:w="1"/><text x="7.9116%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.6616%" y="453" width="0.0798%" height="15" fill="rgb(248,47,30)" fg:x="96" fg:w="1"/><text x="7.9116%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="7.5818%" y="501" width="0.2394%" height="15" fill="rgb(231,209,44)" fg:x="95" fg:w="3"/><text x="7.8318%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.7414%" y="485" width="0.0798%" height="15" fill="rgb(209,80,30)" fg:x="97" fg:w="1"/><text x="7.9914%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="7.0231%" y="533" width="0.8779%" height="15" fill="rgb(232,9,14)" fg:x="88" fg:w="11"/><text x="7.2731%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="7.3424%" y="517" width="0.5587%" height="15" fill="rgb(243,91,43)" fg:x="92" fg:w="7"/><text x="7.5924%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.8212%" y="501" width="0.0798%" height="15" fill="rgb(231,90,52)" fg:x="98" fg:w="1"/><text x="8.0712%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.8212%" y="485" width="0.0798%" height="15" fill="rgb(253,192,44)" fg:x="98" fg:w="1"/><text x="8.0712%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.8212%" y="469" width="0.0798%" height="15" fill="rgb(241,66,31)" fg:x="98" fg:w="1"/><text x="8.0712%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.76%)</title><rect x="6.2251%" y="565" width="1.7558%" height="15" fill="rgb(235,81,37)" fg:x="78" fg:w="22"/><text x="6.4751%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="6.6241%" y="549" width="1.3567%" height="15" fill="rgb(223,221,9)" fg:x="83" fg:w="17"/><text x="6.8741%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.9010%" y="533" width="0.0798%" height="15" fill="rgb(242,180,7)" fg:x="99" fg:w="1"/><text x="8.1510%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="8.1405%" y="533" width="0.1596%" height="15" fill="rgb(243,78,19)" fg:x="102" fg:w="2"/><text x="8.3905%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="8.3799%" y="485" width="0.2394%" height="15" fill="rgb(233,23,17)" fg:x="105" fg:w="3"/><text x="8.6299%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="8.6193%" y="485" width="0.0798%" height="15" fill="rgb(252,122,45)" fg:x="108" fg:w="1"/><text x="8.8693%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="8.6193%" y="469" width="0.0798%" height="15" fill="rgb(247,108,20)" fg:x="108" fg:w="1"/><text x="8.8693%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.6193%" y="453" width="0.0798%" height="15" fill="rgb(235,84,21)" fg:x="108" fg:w="1"/><text x="8.8693%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.6991%" y="469" width="0.0798%" height="15" fill="rgb(247,129,10)" fg:x="109" fg:w="1"/><text x="8.9491%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="8.7789%" y="453" width="0.1596%" height="15" fill="rgb(208,173,14)" fg:x="110" fg:w="2"/><text x="9.0289%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.8587%" y="437" width="0.0798%" height="15" fill="rgb(236,31,38)" fg:x="111" fg:w="1"/><text x="9.1087%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="7.9808%" y="565" width="1.0375%" height="15" fill="rgb(232,65,17)" fg:x="100" fg:w="13"/><text x="8.2308%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="7.9808%" y="549" width="1.0375%" height="15" fill="rgb(224,45,49)" fg:x="100" fg:w="13"/><text x="8.2308%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="8.3001%" y="533" width="0.7183%" height="15" fill="rgb(225,2,53)" fg:x="104" fg:w="9"/><text x="8.5501%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="8.3799%" y="517" width="0.6385%" height="15" fill="rgb(248,210,53)" fg:x="105" fg:w="8"/><text x="8.6299%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="8.3799%" y="501" width="0.6385%" height="15" fill="rgb(211,1,30)" fg:x="105" fg:w="8"/><text x="8.6299%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="8.6991%" y="485" width="0.3192%" height="15" fill="rgb(224,96,15)" fg:x="109" fg:w="4"/><text x="8.9491%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="8.7789%" y="469" width="0.2394%" height="15" fill="rgb(252,45,11)" fg:x="110" fg:w="3"/><text x="9.0289%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.9385%" y="453" width="0.0798%" height="15" fill="rgb(220,125,38)" fg:x="112" fg:w="1"/><text x="9.1885%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="9.0184%" y="549" width="0.0798%" height="15" fill="rgb(243,161,33)" fg:x="113" fg:w="1"/><text x="9.2684%" y="559.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="9.0184%" y="533" width="0.0798%" height="15" fill="rgb(248,197,34)" fg:x="113" fg:w="1"/><text x="9.2684%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.0982%" y="517" width="0.0798%" height="15" fill="rgb(228,165,23)" fg:x="114" fg:w="1"/><text x="9.3482%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="9.1780%" y="517" width="0.3192%" height="15" fill="rgb(236,94,38)" fg:x="115" fg:w="4"/><text x="9.4280%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.3376%" y="501" width="0.1596%" height="15" fill="rgb(220,13,23)" fg:x="117" fg:w="2"/><text x="9.5876%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="9.3376%" y="485" width="0.1596%" height="15" fill="rgb(234,26,39)" fg:x="117" fg:w="2"/><text x="9.5876%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="9.4972%" y="517" width="0.0798%" height="15" fill="rgb(205,117,44)" fg:x="119" fg:w="1"/><text x="9.7472%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.8962%" y="437" width="0.1596%" height="15" fill="rgb(250,42,2)" fg:x="124" fg:w="2"/><text x="10.1462%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.8962%" y="421" width="0.1596%" height="15" fill="rgb(223,83,14)" fg:x="124" fg:w="2"/><text x="10.1462%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.8962%" y="405" width="0.1596%" height="15" fill="rgb(241,147,50)" fg:x="124" fg:w="2"/><text x="10.1462%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.1357%" y="405" width="0.0798%" height="15" fill="rgb(218,90,6)" fg:x="127" fg:w="1"/><text x="10.3857%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.2155%" y="389" width="0.0798%" height="15" fill="rgb(210,191,5)" fg:x="128" fg:w="1"/><text x="10.4655%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="10.2953%" y="389" width="0.0798%" height="15" fill="rgb(225,139,19)" fg:x="129" fg:w="1"/><text x="10.5453%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.3751%" y="373" width="0.0798%" height="15" fill="rgb(210,1,33)" fg:x="130" fg:w="1"/><text x="10.6251%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="10.5347%" y="357" width="0.0798%" height="15" fill="rgb(213,50,3)" fg:x="132" fg:w="1"/><text x="10.7847%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5347%" y="341" width="0.0798%" height="15" fill="rgb(234,227,4)" fg:x="132" fg:w="1"/><text x="10.7847%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5347%" y="325" width="0.0798%" height="15" fill="rgb(246,63,5)" fg:x="132" fg:w="1"/><text x="10.7847%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.5347%" y="309" width="0.0798%" height="15" fill="rgb(245,136,27)" fg:x="132" fg:w="1"/><text x="10.7847%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6145%" y="357" width="0.0798%" height="15" fill="rgb(247,199,27)" fg:x="133" fg:w="1"/><text x="10.8645%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="10.1357%" y="421" width="0.6385%" height="15" fill="rgb(252,158,49)" fg:x="127" fg:w="8"/><text x="10.3857%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="10.2155%" y="405" width="0.5587%" height="15" fill="rgb(254,73,1)" fg:x="128" fg:w="7"/><text x="10.4655%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="10.3751%" y="389" width="0.3990%" height="15" fill="rgb(248,93,19)" fg:x="130" fg:w="5"/><text x="10.6251%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="10.4549%" y="373" width="0.3192%" height="15" fill="rgb(206,67,5)" fg:x="131" fg:w="4"/><text x="10.7049%" y="383.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="10.6943%" y="357" width="0.0798%" height="15" fill="rgb(209,210,4)" fg:x="134" fg:w="1"/><text x="10.9443%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="10.6943%" y="341" width="0.0798%" height="15" fill="rgb(214,185,36)" fg:x="134" fg:w="1"/><text x="10.9443%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.28%)</title><rect x="9.5770%" y="501" width="1.2769%" height="15" fill="rgb(233,191,26)" fg:x="120" fg:w="16"/><text x="9.8270%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="9.6568%" y="485" width="1.1971%" height="15" fill="rgb(248,94,17)" fg:x="121" fg:w="15"/><text x="9.9068%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.20%)</title><rect x="9.6568%" y="469" width="1.1971%" height="15" fill="rgb(250,64,4)" fg:x="121" fg:w="15"/><text x="9.9068%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.12%)</title><rect x="9.7366%" y="453" width="1.1173%" height="15" fill="rgb(218,41,53)" fg:x="122" fg:w="14"/><text x="9.9866%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="10.0559%" y="437" width="0.7981%" height="15" fill="rgb(251,176,28)" fg:x="126" fg:w="10"/><text x="10.3059%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.7741%" y="421" width="0.0798%" height="15" fill="rgb(247,22,9)" fg:x="135" fg:w="1"/><text x="11.0241%" y="431.50"></text></g><g><title>engine::session::Session::flush (65 samples, 5.19%)</title><rect x="5.7462%" y="645" width="5.1875%" height="15" fill="rgb(218,201,14)" fg:x="72" fg:w="65"/><text x="5.9962%" y="655.50">engine..</text></g><g><title>engine::session::state::State::close (61 samples, 4.87%)</title><rect x="6.0654%" y="629" width="4.8683%" height="15" fill="rgb(218,94,10)" fg:x="76" fg:w="61"/><text x="6.3154%" y="639.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (61 samples, 4.87%)</title><rect x="6.0654%" y="613" width="4.8683%" height="15" fill="rgb(222,183,52)" fg:x="76" fg:w="61"/><text x="6.3154%" y="623.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (59 samples, 4.71%)</title><rect x="6.2251%" y="597" width="4.7087%" height="15" fill="rgb(242,140,25)" fg:x="78" fg:w="59"/><text x="6.4751%" y="607.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (59 samples, 4.71%)</title><rect x="6.2251%" y="581" width="4.7087%" height="15" fill="rgb(235,197,38)" fg:x="78" fg:w="59"/><text x="6.4751%" y="591.50">engin..</text></g><g><title>kernel::model::any_entity_changes (24 samples, 1.92%)</title><rect x="9.0184%" y="565" width="1.9154%" height="15" fill="rgb(237,136,15)" fg:x="113" fg:w="24"/><text x="9.2684%" y="575.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (23 samples, 1.84%)</title><rect x="9.0982%" y="549" width="1.8356%" height="15" fill="rgb(223,44,49)" fg:x="114" fg:w="23"/><text x="9.3482%" y="559.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 1.84%)</title><rect x="9.0982%" y="533" width="1.8356%" height="15" fill="rgb(227,71,15)" fg:x="114" fg:w="23"/><text x="9.3482%" y="543.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.36%)</title><rect x="9.5770%" y="517" width="1.3567%" height="15" fill="rgb(225,153,20)" fg:x="120" fg:w="17"/><text x="9.8270%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8540%" y="501" width="0.0798%" height="15" fill="rgb(210,190,26)" fg:x="136" fg:w="1"/><text x="11.1040%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8540%" y="485" width="0.0798%" height="15" fill="rgb(223,147,5)" fg:x="136" fg:w="1"/><text x="11.1040%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.8540%" y="469" width="0.0798%" height="15" fill="rgb(207,14,23)" fg:x="136" fg:w="1"/><text x="11.1040%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="10.9338%" y="613" width="0.0798%" height="15" fill="rgb(211,195,53)" fg:x="137" fg:w="1"/><text x="11.1838%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="10.9338%" y="597" width="0.0798%" height="15" fill="rgb(237,75,46)" fg:x="137" fg:w="1"/><text x="11.1838%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.0136%" y="613" width="0.0798%" height="15" fill="rgb(254,55,14)" fg:x="138" fg:w="1"/><text x="11.2636%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.0136%" y="597" width="0.0798%" height="15" fill="rgb(230,185,30)" fg:x="138" fg:w="1"/><text x="11.2636%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.0136%" y="581" width="0.0798%" height="15" fill="rgb(220,14,11)" fg:x="138" fg:w="1"/><text x="11.2636%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.0136%" y="565" width="0.0798%" height="15" fill="rgb(215,169,44)" fg:x="138" fg:w="1"/><text x="11.2636%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.0136%" y="549" width="0.0798%" height="15" fill="rgb(253,203,20)" fg:x="138" fg:w="1"/><text x="11.2636%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.0136%" y="533" width="0.0798%" height="15" fill="rgb(229,225,17)" fg:x="138" fg:w="1"/><text x="11.2636%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.0136%" y="517" width="0.0798%" height="15" fill="rgb(236,76,26)" fg:x="138" fg:w="1"/><text x="11.2636%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.0136%" y="501" width="0.0798%" height="15" fill="rgb(234,15,30)" fg:x="138" fg:w="1"/><text x="11.2636%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.0136%" y="485" width="0.0798%" height="15" fill="rgb(211,113,48)" fg:x="138" fg:w="1"/><text x="11.2636%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.0136%" y="469" width="0.0798%" height="15" fill="rgb(221,31,36)" fg:x="138" fg:w="1"/><text x="11.2636%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.0136%" y="453" width="0.0798%" height="15" fill="rgb(215,118,52)" fg:x="138" fg:w="1"/><text x="11.2636%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1732%" y="581" width="0.0798%" height="15" fill="rgb(241,151,27)" fg:x="140" fg:w="1"/><text x="11.4232%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1732%" y="565" width="0.0798%" height="15" fill="rgb(253,51,3)" fg:x="140" fg:w="1"/><text x="11.4232%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1732%" y="549" width="0.0798%" height="15" fill="rgb(216,201,24)" fg:x="140" fg:w="1"/><text x="11.4232%" y="559.50"></text></g><g><title>engine::identifiers::model::set_gid (3 samples, 0.24%)</title><rect x="11.0934%" y="613" width="0.2394%" height="15" fill="rgb(231,107,4)" fg:x="139" fg:w="3"/><text x="11.3434%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="11.1732%" y="597" width="0.1596%" height="15" fill="rgb(243,97,54)" fg:x="140" fg:w="2"/><text x="11.4232%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="11.2530%" y="581" width="0.0798%" height="15" fill="rgb(221,32,51)" fg:x="141" fg:w="1"/><text x="11.5030%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.3328%" y="533" width="0.0798%" height="15" fill="rgb(218,171,35)" fg:x="142" fg:w="1"/><text x="11.5828%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="11.3328%" y="597" width="0.2394%" height="15" fill="rgb(214,20,53)" fg:x="142" fg:w="3"/><text x="11.5828%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="11.3328%" y="581" width="0.2394%" height="15" fill="rgb(239,9,52)" fg:x="142" fg:w="3"/><text x="11.5828%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="11.3328%" y="565" width="0.2394%" height="15" fill="rgb(215,114,45)" fg:x="142" fg:w="3"/><text x="11.5828%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="11.3328%" y="549" width="0.2394%" height="15" fill="rgb(208,118,9)" fg:x="142" fg:w="3"/><text x="11.5828%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="11.4126%" y="533" width="0.1596%" height="15" fill="rgb(235,7,39)" fg:x="143" fg:w="2"/><text x="11.6626%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="11.4126%" y="517" width="0.1596%" height="15" fill="rgb(243,225,15)" fg:x="143" fg:w="2"/><text x="11.6626%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="11.4126%" y="501" width="0.1596%" height="15" fill="rgb(225,216,18)" fg:x="143" fg:w="2"/><text x="11.6626%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="11.4126%" y="485" width="0.1596%" height="15" fill="rgb(233,36,38)" fg:x="143" fg:w="2"/><text x="11.6626%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="11.4126%" y="469" width="0.1596%" height="15" fill="rgb(239,88,23)" fg:x="143" fg:w="2"/><text x="11.6626%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="11.4126%" y="453" width="0.1596%" height="15" fill="rgb(219,181,35)" fg:x="143" fg:w="2"/><text x="11.6626%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="11.4126%" y="437" width="0.1596%" height="15" fill="rgb(215,18,46)" fg:x="143" fg:w="2"/><text x="11.6626%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="11.4126%" y="421" width="0.1596%" height="15" fill="rgb(241,38,11)" fg:x="143" fg:w="2"/><text x="11.6626%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.4924%" y="405" width="0.0798%" height="15" fill="rgb(248,169,45)" fg:x="144" fg:w="1"/><text x="11.7424%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.4924%" y="389" width="0.0798%" height="15" fill="rgb(239,50,49)" fg:x="144" fg:w="1"/><text x="11.7424%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (22 samples, 1.76%)</title><rect x="10.9338%" y="629" width="1.7558%" height="15" fill="rgb(231,96,31)" fg:x="137" fg:w="22"/><text x="11.1838%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (17 samples, 1.36%)</title><rect x="11.3328%" y="613" width="1.3567%" height="15" fill="rgb(224,193,37)" fg:x="142" fg:w="17"/><text x="11.5828%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (14 samples, 1.12%)</title><rect x="11.5722%" y="597" width="1.1173%" height="15" fill="rgb(227,153,50)" fg:x="145" fg:w="14"/><text x="11.8222%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 1.12%)</title><rect x="11.5722%" y="581" width="1.1173%" height="15" fill="rgb(249,228,3)" fg:x="145" fg:w="14"/><text x="11.8222%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 1.04%)</title><rect x="11.6520%" y="565" width="1.0375%" height="15" fill="rgb(219,164,43)" fg:x="146" fg:w="13"/><text x="11.9020%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 1.04%)</title><rect x="11.6520%" y="549" width="1.0375%" height="15" fill="rgb(216,45,41)" fg:x="146" fg:w="13"/><text x="11.9020%" y="559.50"></text></g><g><title>__libc_malloc (13 samples, 1.04%)</title><rect x="11.6520%" y="533" width="1.0375%" height="15" fill="rgb(210,226,51)" fg:x="146" fg:w="13"/><text x="11.9020%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="12.7694%" y="613" width="0.0798%" height="15" fill="rgb(209,117,49)" fg:x="160" fg:w="1"/><text x="13.0194%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="12.8492%" y="613" width="0.0798%" height="15" fill="rgb(206,196,24)" fg:x="161" fg:w="1"/><text x="13.0992%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="12.8492%" y="597" width="0.0798%" height="15" fill="rgb(253,218,3)" fg:x="161" fg:w="1"/><text x="13.0992%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.8492%" y="581" width="0.0798%" height="15" fill="rgb(252,166,2)" fg:x="161" fg:w="1"/><text x="13.0992%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9290%" y="533" width="0.0798%" height="15" fill="rgb(236,218,26)" fg:x="162" fg:w="1"/><text x="13.1790%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9290%" y="517" width="0.0798%" height="15" fill="rgb(254,84,19)" fg:x="162" fg:w="1"/><text x="13.1790%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.9290%" y="581" width="0.1596%" height="15" fill="rgb(219,137,29)" fg:x="162" fg:w="2"/><text x="13.1790%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.9290%" y="565" width="0.1596%" height="15" fill="rgb(227,47,52)" fg:x="162" fg:w="2"/><text x="13.1790%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.9290%" y="549" width="0.1596%" height="15" fill="rgb(229,167,24)" fg:x="162" fg:w="2"/><text x="13.1790%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0088%" y="533" width="0.0798%" height="15" fill="rgb(233,164,1)" fg:x="163" fg:w="1"/><text x="13.2588%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0088%" y="517" width="0.0798%" height="15" fill="rgb(218,88,48)" fg:x="163" fg:w="1"/><text x="13.2588%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0088%" y="501" width="0.0798%" height="15" fill="rgb(226,214,24)" fg:x="163" fg:w="1"/><text x="13.2588%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0088%" y="485" width="0.0798%" height="15" fill="rgb(233,29,12)" fg:x="163" fg:w="1"/><text x="13.2588%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.0088%" y="469" width="0.0798%" height="15" fill="rgb(219,120,34)" fg:x="163" fg:w="1"/><text x="13.2588%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0088%" y="453" width="0.0798%" height="15" fill="rgb(226,78,44)" fg:x="163" fg:w="1"/><text x="13.2588%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0088%" y="437" width="0.0798%" height="15" fill="rgb(240,15,48)" fg:x="163" fg:w="1"/><text x="13.2588%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0088%" y="421" width="0.0798%" height="15" fill="rgb(253,176,7)" fg:x="163" fg:w="1"/><text x="13.2588%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.0886%" y="565" width="0.0798%" height="15" fill="rgb(206,166,28)" fg:x="164" fg:w="1"/><text x="13.3386%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.1684%" y="469" width="0.0798%" height="15" fill="rgb(241,53,51)" fg:x="165" fg:w="1"/><text x="13.4184%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.1684%" y="453" width="0.0798%" height="15" fill="rgb(249,112,30)" fg:x="165" fg:w="1"/><text x="13.4184%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.1684%" y="437" width="0.0798%" height="15" fill="rgb(217,85,30)" fg:x="165" fg:w="1"/><text x="13.4184%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.1684%" y="421" width="0.0798%" height="15" fill="rgb(233,49,7)" fg:x="165" fg:w="1"/><text x="13.4184%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.1684%" y="405" width="0.0798%" height="15" fill="rgb(234,109,9)" fg:x="165" fg:w="1"/><text x="13.4184%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.1684%" y="389" width="0.0798%" height="15" fill="rgb(253,95,22)" fg:x="165" fg:w="1"/><text x="13.4184%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.1684%" y="373" width="0.0798%" height="15" fill="rgb(233,176,25)" fg:x="165" fg:w="1"/><text x="13.4184%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.1684%" y="357" width="0.0798%" height="15" fill="rgb(236,33,39)" fg:x="165" fg:w="1"/><text x="13.4184%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.1684%" y="341" width="0.0798%" height="15" fill="rgb(223,226,42)" fg:x="165" fg:w="1"/><text x="13.4184%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.1684%" y="325" width="0.0798%" height="15" fill="rgb(216,99,33)" fg:x="165" fg:w="1"/><text x="13.4184%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.1684%" y="309" width="0.0798%" height="15" fill="rgb(235,84,23)" fg:x="165" fg:w="1"/><text x="13.4184%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1684%" y="293" width="0.0798%" height="15" fill="rgb(232,2,27)" fg:x="165" fg:w="1"/><text x="13.4184%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1684%" y="485" width="0.1596%" height="15" fill="rgb(241,23,22)" fg:x="165" fg:w="2"/><text x="13.4184%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2482%" y="469" width="0.0798%" height="15" fill="rgb(211,73,27)" fg:x="166" fg:w="1"/><text x="13.4982%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.1684%" y="533" width="0.2394%" height="15" fill="rgb(235,109,49)" fg:x="165" fg:w="3"/><text x="13.4184%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.1684%" y="517" width="0.2394%" height="15" fill="rgb(230,99,29)" fg:x="165" fg:w="3"/><text x="13.4184%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.1684%" y="501" width="0.2394%" height="15" fill="rgb(245,199,7)" fg:x="165" fg:w="3"/><text x="13.4184%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.3280%" y="485" width="0.0798%" height="15" fill="rgb(217,179,10)" fg:x="167" fg:w="1"/><text x="13.5780%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.3280%" y="469" width="0.0798%" height="15" fill="rgb(254,99,47)" fg:x="167" fg:w="1"/><text x="13.5780%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.3280%" y="453" width="0.0798%" height="15" fill="rgb(251,121,7)" fg:x="167" fg:w="1"/><text x="13.5780%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.3280%" y="437" width="0.0798%" height="15" fill="rgb(250,177,26)" fg:x="167" fg:w="1"/><text x="13.5780%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.3280%" y="421" width="0.0798%" height="15" fill="rgb(232,88,15)" fg:x="167" fg:w="1"/><text x="13.5780%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.3280%" y="405" width="0.0798%" height="15" fill="rgb(251,54,54)" fg:x="167" fg:w="1"/><text x="13.5780%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.3280%" y="389" width="0.0798%" height="15" fill="rgb(208,177,15)" fg:x="167" fg:w="1"/><text x="13.5780%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.3280%" y="373" width="0.0798%" height="15" fill="rgb(205,97,32)" fg:x="167" fg:w="1"/><text x="13.5780%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.3280%" y="357" width="0.0798%" height="15" fill="rgb(217,192,13)" fg:x="167" fg:w="1"/><text x="13.5780%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.3280%" y="341" width="0.0798%" height="15" fill="rgb(215,163,41)" fg:x="167" fg:w="1"/><text x="13.5780%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.3280%" y="325" width="0.0798%" height="15" fill="rgb(246,83,29)" fg:x="167" fg:w="1"/><text x="13.5780%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.3280%" y="309" width="0.0798%" height="15" fill="rgb(219,2,45)" fg:x="167" fg:w="1"/><text x="13.5780%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.4078%" y="485" width="0.0798%" height="15" fill="rgb(242,215,33)" fg:x="168" fg:w="1"/><text x="13.6578%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="13.4078%" y="533" width="0.1596%" height="15" fill="rgb(217,1,6)" fg:x="168" fg:w="2"/><text x="13.6578%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="13.4078%" y="517" width="0.1596%" height="15" fill="rgb(207,85,52)" fg:x="168" fg:w="2"/><text x="13.6578%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.4078%" y="501" width="0.1596%" height="15" fill="rgb(231,171,19)" fg:x="168" fg:w="2"/><text x="13.6578%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.4876%" y="485" width="0.0798%" height="15" fill="rgb(207,128,4)" fg:x="169" fg:w="1"/><text x="13.7376%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.4876%" y="469" width="0.0798%" height="15" fill="rgb(219,208,4)" fg:x="169" fg:w="1"/><text x="13.7376%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.4876%" y="453" width="0.0798%" height="15" fill="rgb(235,161,42)" fg:x="169" fg:w="1"/><text x="13.7376%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.4876%" y="437" width="0.0798%" height="15" fill="rgb(247,218,18)" fg:x="169" fg:w="1"/><text x="13.7376%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.4876%" y="421" width="0.0798%" height="15" fill="rgb(232,114,51)" fg:x="169" fg:w="1"/><text x="13.7376%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="12.9290%" y="613" width="0.7183%" height="15" fill="rgb(222,95,3)" fg:x="162" fg:w="9"/><text x="13.1790%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.72%)</title><rect x="12.9290%" y="597" width="0.7183%" height="15" fill="rgb(240,65,29)" fg:x="162" fg:w="9"/><text x="13.1790%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="13.0886%" y="581" width="0.5587%" height="15" fill="rgb(249,209,20)" fg:x="164" fg:w="7"/><text x="13.3386%" y="591.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="13.1684%" y="565" width="0.4789%" height="15" fill="rgb(241,48,37)" fg:x="165" fg:w="6"/><text x="13.4184%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="13.1684%" y="549" width="0.4789%" height="15" fill="rgb(230,140,42)" fg:x="165" fg:w="6"/><text x="13.4184%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.5674%" y="533" width="0.0798%" height="15" fill="rgb(230,176,45)" fg:x="170" fg:w="1"/><text x="13.8174%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5674%" y="517" width="0.0798%" height="15" fill="rgb(245,112,21)" fg:x="170" fg:w="1"/><text x="13.8174%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.5674%" y="501" width="0.0798%" height="15" fill="rgb(207,183,35)" fg:x="170" fg:w="1"/><text x="13.8174%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5674%" y="485" width="0.0798%" height="15" fill="rgb(227,44,33)" fg:x="170" fg:w="1"/><text x="13.8174%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.5674%" y="469" width="0.0798%" height="15" fill="rgb(246,120,21)" fg:x="170" fg:w="1"/><text x="13.8174%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5674%" y="453" width="0.0798%" height="15" fill="rgb(235,57,52)" fg:x="170" fg:w="1"/><text x="13.8174%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.5674%" y="437" width="0.0798%" height="15" fill="rgb(238,84,10)" fg:x="170" fg:w="1"/><text x="13.8174%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5674%" y="421" width="0.0798%" height="15" fill="rgb(251,200,32)" fg:x="170" fg:w="1"/><text x="13.8174%" y="431.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="13.7271%" y="597" width="0.0798%" height="15" fill="rgb(247,159,13)" fg:x="172" fg:w="1"/><text x="13.9771%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.7271%" y="581" width="0.0798%" height="15" fill="rgb(238,64,4)" fg:x="172" fg:w="1"/><text x="13.9771%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.7271%" y="565" width="0.0798%" height="15" fill="rgb(221,131,51)" fg:x="172" fg:w="1"/><text x="13.9771%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="13.6472%" y="613" width="0.2394%" height="15" fill="rgb(242,5,29)" fg:x="171" fg:w="3"/><text x="13.8972%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="13.8069%" y="597" width="0.0798%" height="15" fill="rgb(214,130,32)" fg:x="173" fg:w="1"/><text x="14.0569%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.8069%" y="581" width="0.0798%" height="15" fill="rgb(244,210,16)" fg:x="173" fg:w="1"/><text x="14.0569%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.8069%" y="565" width="0.0798%" height="15" fill="rgb(234,48,26)" fg:x="173" fg:w="1"/><text x="14.0569%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9665%" y="517" width="0.0798%" height="15" fill="rgb(231,82,38)" fg:x="175" fg:w="1"/><text x="14.2165%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9665%" y="501" width="0.0798%" height="15" fill="rgb(254,128,41)" fg:x="175" fg:w="1"/><text x="14.2165%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9665%" y="485" width="0.0798%" height="15" fill="rgb(212,73,49)" fg:x="175" fg:w="1"/><text x="14.2165%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9665%" y="469" width="0.0798%" height="15" fill="rgb(205,62,54)" fg:x="175" fg:w="1"/><text x="14.2165%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9665%" y="453" width="0.0798%" height="15" fill="rgb(228,0,8)" fg:x="175" fg:w="1"/><text x="14.2165%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9665%" y="437" width="0.0798%" height="15" fill="rgb(251,28,17)" fg:x="175" fg:w="1"/><text x="14.2165%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9665%" y="421" width="0.0798%" height="15" fill="rgb(238,105,27)" fg:x="175" fg:w="1"/><text x="14.2165%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.9665%" y="405" width="0.0798%" height="15" fill="rgb(237,216,33)" fg:x="175" fg:w="1"/><text x="14.2165%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.9665%" y="389" width="0.0798%" height="15" fill="rgb(229,228,25)" fg:x="175" fg:w="1"/><text x="14.2165%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.9665%" y="565" width="0.1596%" height="15" fill="rgb(233,75,23)" fg:x="175" fg:w="2"/><text x="14.2165%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.9665%" y="549" width="0.1596%" height="15" fill="rgb(231,207,16)" fg:x="175" fg:w="2"/><text x="14.2165%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.9665%" y="533" width="0.1596%" height="15" fill="rgb(231,191,45)" fg:x="175" fg:w="2"/><text x="14.2165%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0463%" y="517" width="0.0798%" height="15" fill="rgb(224,133,17)" fg:x="176" fg:w="1"/><text x="14.2963%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0463%" y="501" width="0.0798%" height="15" fill="rgb(209,178,27)" fg:x="176" fg:w="1"/><text x="14.2963%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0463%" y="485" width="0.0798%" height="15" fill="rgb(218,37,11)" fg:x="176" fg:w="1"/><text x="14.2963%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0463%" y="469" width="0.0798%" height="15" fill="rgb(251,226,25)" fg:x="176" fg:w="1"/><text x="14.2963%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.0463%" y="453" width="0.0798%" height="15" fill="rgb(209,222,27)" fg:x="176" fg:w="1"/><text x="14.2963%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0463%" y="437" width="0.0798%" height="15" fill="rgb(238,22,21)" fg:x="176" fg:w="1"/><text x="14.2963%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0463%" y="421" width="0.0798%" height="15" fill="rgb(233,161,25)" fg:x="176" fg:w="1"/><text x="14.2963%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0463%" y="405" width="0.0798%" height="15" fill="rgb(226,122,53)" fg:x="176" fg:w="1"/><text x="14.2963%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.0463%" y="389" width="0.0798%" height="15" fill="rgb(220,123,17)" fg:x="176" fg:w="1"/><text x="14.2963%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0463%" y="373" width="0.0798%" height="15" fill="rgb(230,224,35)" fg:x="176" fg:w="1"/><text x="14.2963%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1261%" y="549" width="0.0798%" height="15" fill="rgb(246,83,8)" fg:x="177" fg:w="1"/><text x="14.3761%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1261%" y="533" width="0.0798%" height="15" fill="rgb(230,214,17)" fg:x="177" fg:w="1"/><text x="14.3761%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.1261%" y="517" width="0.0798%" height="15" fill="rgb(222,97,18)" fg:x="177" fg:w="1"/><text x="14.3761%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.1261%" y="501" width="0.0798%" height="15" fill="rgb(206,79,1)" fg:x="177" fg:w="1"/><text x="14.3761%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.1261%" y="485" width="0.0798%" height="15" fill="rgb(214,121,34)" fg:x="177" fg:w="1"/><text x="14.3761%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.1261%" y="469" width="0.0798%" height="15" fill="rgb(249,199,46)" fg:x="177" fg:w="1"/><text x="14.3761%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.1261%" y="453" width="0.0798%" height="15" fill="rgb(214,222,46)" fg:x="177" fg:w="1"/><text x="14.3761%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.1261%" y="437" width="0.0798%" height="15" fill="rgb(248,168,30)" fg:x="177" fg:w="1"/><text x="14.3761%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.1261%" y="421" width="0.0798%" height="15" fill="rgb(226,14,28)" fg:x="177" fg:w="1"/><text x="14.3761%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.1261%" y="405" width="0.0798%" height="15" fill="rgb(253,123,1)" fg:x="177" fg:w="1"/><text x="14.3761%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.1261%" y="389" width="0.0798%" height="15" fill="rgb(225,24,42)" fg:x="177" fg:w="1"/><text x="14.3761%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1261%" y="373" width="0.0798%" height="15" fill="rgb(216,161,37)" fg:x="177" fg:w="1"/><text x="14.3761%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2059%" y="517" width="0.0798%" height="15" fill="rgb(251,164,26)" fg:x="178" fg:w="1"/><text x="14.4559%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2059%" y="501" width="0.0798%" height="15" fill="rgb(219,177,3)" fg:x="178" fg:w="1"/><text x="14.4559%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2059%" y="485" width="0.0798%" height="15" fill="rgb(222,65,0)" fg:x="178" fg:w="1"/><text x="14.4559%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2059%" y="469" width="0.0798%" height="15" fill="rgb(223,69,54)" fg:x="178" fg:w="1"/><text x="14.4559%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.2059%" y="453" width="0.0798%" height="15" fill="rgb(235,30,27)" fg:x="178" fg:w="1"/><text x="14.4559%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.2857%" y="517" width="0.0798%" height="15" fill="rgb(220,183,50)" fg:x="179" fg:w="1"/><text x="14.5357%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.2857%" y="501" width="0.0798%" height="15" fill="rgb(248,198,15)" fg:x="179" fg:w="1"/><text x="14.5357%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.2857%" y="485" width="0.0798%" height="15" fill="rgb(222,211,4)" fg:x="179" fg:w="1"/><text x="14.5357%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.2857%" y="469" width="0.0798%" height="15" fill="rgb(214,102,34)" fg:x="179" fg:w="1"/><text x="14.5357%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.2857%" y="453" width="0.0798%" height="15" fill="rgb(245,92,5)" fg:x="179" fg:w="1"/><text x="14.5357%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="13.9665%" y="597" width="0.4789%" height="15" fill="rgb(252,72,51)" fg:x="175" fg:w="6"/><text x="14.2165%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="13.9665%" y="581" width="0.4789%" height="15" fill="rgb(252,208,19)" fg:x="175" fg:w="6"/><text x="14.2165%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="14.1261%" y="565" width="0.3192%" height="15" fill="rgb(211,69,7)" fg:x="177" fg:w="4"/><text x="14.3761%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="14.2059%" y="549" width="0.2394%" height="15" fill="rgb(211,27,16)" fg:x="178" fg:w="3"/><text x="14.4559%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.2059%" y="533" width="0.2394%" height="15" fill="rgb(219,216,14)" fg:x="178" fg:w="3"/><text x="14.4559%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.3655%" y="517" width="0.0798%" height="15" fill="rgb(219,71,8)" fg:x="180" fg:w="1"/><text x="14.6155%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3655%" y="501" width="0.0798%" height="15" fill="rgb(223,170,53)" fg:x="180" fg:w="1"/><text x="14.6155%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.3655%" y="485" width="0.0798%" height="15" fill="rgb(246,21,26)" fg:x="180" fg:w="1"/><text x="14.6155%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3655%" y="469" width="0.0798%" height="15" fill="rgb(248,20,46)" fg:x="180" fg:w="1"/><text x="14.6155%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.3655%" y="453" width="0.0798%" height="15" fill="rgb(252,94,11)" fg:x="180" fg:w="1"/><text x="14.6155%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3655%" y="437" width="0.0798%" height="15" fill="rgb(236,163,8)" fg:x="180" fg:w="1"/><text x="14.6155%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.3655%" y="421" width="0.0798%" height="15" fill="rgb(217,221,45)" fg:x="180" fg:w="1"/><text x="14.6155%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3655%" y="405" width="0.0798%" height="15" fill="rgb(238,38,17)" fg:x="180" fg:w="1"/><text x="14.6155%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.3655%" y="389" width="0.0798%" height="15" fill="rgb(242,210,23)" fg:x="180" fg:w="1"/><text x="14.6155%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3655%" y="373" width="0.0798%" height="15" fill="rgb(250,86,53)" fg:x="180" fg:w="1"/><text x="14.6155%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.3655%" y="357" width="0.0798%" height="15" fill="rgb(223,168,25)" fg:x="180" fg:w="1"/><text x="14.6155%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (45 samples, 3.59%)</title><rect x="10.9338%" y="645" width="3.5914%" height="15" fill="rgb(251,189,4)" fg:x="137" fg:w="45"/><text x="11.1838%" y="655.50">plug..</text></g><g><title>plugins_core::tools::set_container (23 samples, 1.84%)</title><rect x="12.6895%" y="629" width="1.8356%" height="15" fill="rgb(245,19,28)" fg:x="159" fg:w="23"/><text x="12.9395%" y="639.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="13.8867%" y="613" width="0.6385%" height="15" fill="rgb(207,10,34)" fg:x="174" fg:w="8"/><text x="14.1367%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="14.4453%" y="597" width="0.0798%" height="15" fill="rgb(235,153,31)" fg:x="181" fg:w="1"/><text x="14.6953%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.4453%" y="581" width="0.0798%" height="15" fill="rgb(228,72,37)" fg:x="181" fg:w="1"/><text x="14.6953%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="14.4453%" y="565" width="0.0798%" height="15" fill="rgb(215,15,16)" fg:x="181" fg:w="1"/><text x="14.6953%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="14.4453%" y="549" width="0.0798%" height="15" fill="rgb(250,119,29)" fg:x="181" fg:w="1"/><text x="14.6953%" y="559.50"></text></g><g><title>kernel::model::base::Identity::new (1 samples, 0.08%)</title><rect x="14.4453%" y="533" width="0.0798%" height="15" fill="rgb(214,59,1)" fg:x="181" fg:w="1"/><text x="14.6953%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="14.6049%" y="597" width="0.0798%" height="15" fill="rgb(223,109,25)" fg:x="183" fg:w="1"/><text x="14.8549%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="14.6848%" y="469" width="0.0798%" height="15" fill="rgb(230,198,22)" fg:x="184" fg:w="1"/><text x="14.9348%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.6848%" y="453" width="0.0798%" height="15" fill="rgb(245,184,46)" fg:x="184" fg:w="1"/><text x="14.9348%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.6848%" y="437" width="0.0798%" height="15" fill="rgb(253,73,16)" fg:x="184" fg:w="1"/><text x="14.9348%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="14.6049%" y="613" width="0.2394%" height="15" fill="rgb(206,94,45)" fg:x="183" fg:w="3"/><text x="14.8549%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.6848%" y="597" width="0.1596%" height="15" fill="rgb(236,83,27)" fg:x="184" fg:w="2"/><text x="14.9348%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.6848%" y="581" width="0.1596%" height="15" fill="rgb(220,196,8)" fg:x="184" fg:w="2"/><text x="14.9348%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.6848%" y="565" width="0.1596%" height="15" fill="rgb(254,185,14)" fg:x="184" fg:w="2"/><text x="14.9348%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.6848%" y="549" width="0.1596%" height="15" fill="rgb(226,50,22)" fg:x="184" fg:w="2"/><text x="14.9348%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.6848%" y="533" width="0.1596%" height="15" fill="rgb(253,147,0)" fg:x="184" fg:w="2"/><text x="14.9348%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.6848%" y="517" width="0.1596%" height="15" fill="rgb(252,46,33)" fg:x="184" fg:w="2"/><text x="14.9348%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.6848%" y="501" width="0.1596%" height="15" fill="rgb(242,22,54)" fg:x="184" fg:w="2"/><text x="14.9348%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.6848%" y="485" width="0.1596%" height="15" fill="rgb(223,178,32)" fg:x="184" fg:w="2"/><text x="14.9348%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7646%" y="469" width="0.0798%" height="15" fill="rgb(214,106,53)" fg:x="185" fg:w="1"/><text x="15.0146%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.7646%" y="453" width="0.0798%" height="15" fill="rgb(232,65,50)" fg:x="185" fg:w="1"/><text x="15.0146%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.8444%" y="501" width="0.0798%" height="15" fill="rgb(231,110,28)" fg:x="186" fg:w="1"/><text x="15.0944%" y="511.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="14.8444%" y="613" width="0.1596%" height="15" fill="rgb(216,71,40)" fg:x="186" fg:w="2"/><text x="15.0944%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="14.8444%" y="597" width="0.1596%" height="15" fill="rgb(229,89,53)" fg:x="186" fg:w="2"/><text x="15.0944%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.8444%" y="581" width="0.1596%" height="15" fill="rgb(210,124,14)" fg:x="186" fg:w="2"/><text x="15.0944%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.8444%" y="565" width="0.1596%" height="15" fill="rgb(236,213,6)" fg:x="186" fg:w="2"/><text x="15.0944%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.8444%" y="549" width="0.1596%" height="15" fill="rgb(228,41,5)" fg:x="186" fg:w="2"/><text x="15.0944%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.8444%" y="533" width="0.1596%" height="15" fill="rgb(221,167,25)" fg:x="186" fg:w="2"/><text x="15.0944%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.8444%" y="517" width="0.1596%" height="15" fill="rgb(228,144,37)" fg:x="186" fg:w="2"/><text x="15.0944%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9242%" y="501" width="0.0798%" height="15" fill="rgb(227,189,38)" fg:x="187" fg:w="1"/><text x="15.1742%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0040%" y="581" width="0.0798%" height="15" fill="rgb(218,8,2)" fg:x="188" fg:w="1"/><text x="15.2540%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0040%" y="565" width="0.0798%" height="15" fill="rgb(209,61,28)" fg:x="188" fg:w="1"/><text x="15.2540%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0040%" y="549" width="0.0798%" height="15" fill="rgb(233,140,39)" fg:x="188" fg:w="1"/><text x="15.2540%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.0040%" y="533" width="0.0798%" height="15" fill="rgb(251,66,48)" fg:x="188" fg:w="1"/><text x="15.2540%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.0040%" y="517" width="0.0798%" height="15" fill="rgb(210,44,45)" fg:x="188" fg:w="1"/><text x="15.2540%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.0040%" y="501" width="0.0798%" height="15" fill="rgb(214,136,46)" fg:x="188" fg:w="1"/><text x="15.2540%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.0040%" y="485" width="0.0798%" height="15" fill="rgb(207,130,50)" fg:x="188" fg:w="1"/><text x="15.2540%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.0040%" y="469" width="0.0798%" height="15" fill="rgb(228,102,49)" fg:x="188" fg:w="1"/><text x="15.2540%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.0040%" y="453" width="0.0798%" height="15" fill="rgb(253,55,1)" fg:x="188" fg:w="1"/><text x="15.2540%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.0040%" y="437" width="0.0798%" height="15" fill="rgb(238,222,9)" fg:x="188" fg:w="1"/><text x="15.2540%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.0040%" y="421" width="0.0798%" height="15" fill="rgb(246,99,6)" fg:x="188" fg:w="1"/><text x="15.2540%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.0040%" y="405" width="0.0798%" height="15" fill="rgb(219,110,26)" fg:x="188" fg:w="1"/><text x="15.2540%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0040%" y="389" width="0.0798%" height="15" fill="rgb(239,160,33)" fg:x="188" fg:w="1"/><text x="15.2540%" y="399.50"></text></g><g><title>engine::identifiers::model::set_gid (2 samples, 0.16%)</title><rect x="15.0040%" y="613" width="0.1596%" height="15" fill="rgb(220,202,23)" fg:x="188" fg:w="2"/><text x="15.2540%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.0040%" y="597" width="0.1596%" height="15" fill="rgb(208,80,26)" fg:x="188" fg:w="2"/><text x="15.2540%" y="607.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="15.0838%" y="581" width="0.0798%" height="15" fill="rgb(243,85,7)" fg:x="189" fg:w="1"/><text x="15.3338%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0838%" y="565" width="0.0798%" height="15" fill="rgb(228,77,47)" fg:x="189" fg:w="1"/><text x="15.3338%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0838%" y="549" width="0.0798%" height="15" fill="rgb(212,226,8)" fg:x="189" fg:w="1"/><text x="15.3338%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1636%" y="533" width="0.0798%" height="15" fill="rgb(241,120,54)" fg:x="190" fg:w="1"/><text x="15.4136%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1636%" y="517" width="0.0798%" height="15" fill="rgb(226,80,16)" fg:x="190" fg:w="1"/><text x="15.4136%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1636%" y="501" width="0.0798%" height="15" fill="rgb(240,76,13)" fg:x="190" fg:w="1"/><text x="15.4136%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1636%" y="485" width="0.0798%" height="15" fill="rgb(252,74,8)" fg:x="190" fg:w="1"/><text x="15.4136%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.2434%" y="501" width="0.0798%" height="15" fill="rgb(244,155,2)" fg:x="191" fg:w="1"/><text x="15.4934%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.2434%" y="485" width="0.0798%" height="15" fill="rgb(215,81,35)" fg:x="191" fg:w="1"/><text x="15.4934%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2434%" y="469" width="0.0798%" height="15" fill="rgb(206,55,2)" fg:x="191" fg:w="1"/><text x="15.4934%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (11 samples, 0.88%)</title><rect x="14.5251%" y="645" width="0.8779%" height="15" fill="rgb(231,2,34)" fg:x="182" fg:w="11"/><text x="14.7751%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="14.6049%" y="629" width="0.7981%" height="15" fill="rgb(242,176,48)" fg:x="183" fg:w="10"/><text x="14.8549%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="15.1636%" y="613" width="0.2394%" height="15" fill="rgb(249,31,36)" fg:x="190" fg:w="3"/><text x="15.4136%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="15.1636%" y="597" width="0.2394%" height="15" fill="rgb(205,18,17)" fg:x="190" fg:w="3"/><text x="15.4136%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="15.1636%" y="581" width="0.2394%" height="15" fill="rgb(254,130,5)" fg:x="190" fg:w="3"/><text x="15.4136%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="15.1636%" y="565" width="0.2394%" height="15" fill="rgb(229,42,45)" fg:x="190" fg:w="3"/><text x="15.4136%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="15.1636%" y="549" width="0.2394%" height="15" fill="rgb(245,95,25)" fg:x="190" fg:w="3"/><text x="15.4136%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="15.2434%" y="533" width="0.1596%" height="15" fill="rgb(249,193,38)" fg:x="191" fg:w="2"/><text x="15.4934%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.2434%" y="517" width="0.1596%" height="15" fill="rgb(241,140,43)" fg:x="191" fg:w="2"/><text x="15.4934%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.3232%" y="501" width="0.0798%" height="15" fill="rgb(245,78,48)" fg:x="192" fg:w="1"/><text x="15.5732%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.3232%" y="485" width="0.0798%" height="15" fill="rgb(214,92,39)" fg:x="192" fg:w="1"/><text x="15.5732%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.3232%" y="469" width="0.0798%" height="15" fill="rgb(211,189,14)" fg:x="192" fg:w="1"/><text x="15.5732%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3232%" y="453" width="0.0798%" height="15" fill="rgb(218,7,24)" fg:x="192" fg:w="1"/><text x="15.5732%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.4030%" y="581" width="0.0798%" height="15" fill="rgb(224,200,49)" fg:x="193" fg:w="1"/><text x="15.6530%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.4030%" y="565" width="0.0798%" height="15" fill="rgb(218,210,14)" fg:x="193" fg:w="1"/><text x="15.6530%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="15.4030%" y="645" width="0.3192%" height="15" fill="rgb(234,142,31)" fg:x="193" fg:w="4"/><text x="15.6530%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="15.4030%" y="629" width="0.3192%" height="15" fill="rgb(227,165,2)" fg:x="193" fg:w="4"/><text x="15.6530%" y="639.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="15.4030%" y="613" width="0.3192%" height="15" fill="rgb(232,44,46)" fg:x="193" fg:w="4"/><text x="15.6530%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="15.4030%" y="597" width="0.3192%" height="15" fill="rgb(236,149,47)" fg:x="193" fg:w="4"/><text x="15.6530%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="15.4828%" y="581" width="0.2394%" height="15" fill="rgb(227,45,31)" fg:x="194" fg:w="3"/><text x="15.7328%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="15.4828%" y="565" width="0.2394%" height="15" fill="rgb(240,176,51)" fg:x="194" fg:w="3"/><text x="15.7328%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="15.4828%" y="549" width="0.2394%" height="15" fill="rgb(249,146,41)" fg:x="194" fg:w="3"/><text x="15.7328%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.5626%" y="533" width="0.1596%" height="15" fill="rgb(213,208,4)" fg:x="195" fg:w="2"/><text x="15.8126%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="15.5626%" y="517" width="0.1596%" height="15" fill="rgb(245,84,36)" fg:x="195" fg:w="2"/><text x="15.8126%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="15.5626%" y="501" width="0.1596%" height="15" fill="rgb(254,84,18)" fg:x="195" fg:w="2"/><text x="15.8126%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="15.5626%" y="485" width="0.1596%" height="15" fill="rgb(225,38,54)" fg:x="195" fg:w="2"/><text x="15.8126%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.5626%" y="469" width="0.1596%" height="15" fill="rgb(246,50,30)" fg:x="195" fg:w="2"/><text x="15.8126%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.6425%" y="453" width="0.0798%" height="15" fill="rgb(246,148,9)" fg:x="196" fg:w="1"/><text x="15.8925%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="15.6425%" y="437" width="0.0798%" height="15" fill="rgb(223,75,4)" fg:x="196" fg:w="1"/><text x="15.8925%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="15.8021%" y="613" width="0.0798%" height="15" fill="rgb(239,148,41)" fg:x="198" fg:w="1"/><text x="16.0521%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.8021%" y="597" width="0.0798%" height="15" fill="rgb(205,195,3)" fg:x="198" fg:w="1"/><text x="16.0521%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8021%" y="581" width="0.0798%" height="15" fill="rgb(254,161,1)" fg:x="198" fg:w="1"/><text x="16.0521%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8021%" y="565" width="0.0798%" height="15" fill="rgb(211,229,8)" fg:x="198" fg:w="1"/><text x="16.0521%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.8021%" y="549" width="0.0798%" height="15" fill="rgb(220,97,9)" fg:x="198" fg:w="1"/><text x="16.0521%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.8021%" y="533" width="0.0798%" height="15" fill="rgb(240,218,8)" fg:x="198" fg:w="1"/><text x="16.0521%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.8021%" y="517" width="0.0798%" height="15" fill="rgb(250,44,0)" fg:x="198" fg:w="1"/><text x="16.0521%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.8021%" y="501" width="0.0798%" height="15" fill="rgb(236,41,53)" fg:x="198" fg:w="1"/><text x="16.0521%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.8021%" y="485" width="0.0798%" height="15" fill="rgb(218,227,13)" fg:x="198" fg:w="1"/><text x="16.0521%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.8021%" y="469" width="0.0798%" height="15" fill="rgb(217,94,32)" fg:x="198" fg:w="1"/><text x="16.0521%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.8021%" y="453" width="0.0798%" height="15" fill="rgb(213,217,12)" fg:x="198" fg:w="1"/><text x="16.0521%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.8021%" y="437" width="0.0798%" height="15" fill="rgb(229,13,46)" fg:x="198" fg:w="1"/><text x="16.0521%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.8021%" y="421" width="0.0798%" height="15" fill="rgb(243,139,5)" fg:x="198" fg:w="1"/><text x="16.0521%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8021%" y="405" width="0.0798%" height="15" fill="rgb(249,38,45)" fg:x="198" fg:w="1"/><text x="16.0521%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8819%" y="565" width="0.0798%" height="15" fill="rgb(216,70,11)" fg:x="199" fg:w="1"/><text x="16.1319%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8819%" y="549" width="0.0798%" height="15" fill="rgb(253,101,25)" fg:x="199" fg:w="1"/><text x="16.1319%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8819%" y="533" width="0.0798%" height="15" fill="rgb(207,197,30)" fg:x="199" fg:w="1"/><text x="16.1319%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8819%" y="517" width="0.0798%" height="15" fill="rgb(238,87,13)" fg:x="199" fg:w="1"/><text x="16.1319%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8819%" y="501" width="0.0798%" height="15" fill="rgb(215,155,8)" fg:x="199" fg:w="1"/><text x="16.1319%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="15.8021%" y="629" width="0.2394%" height="15" fill="rgb(239,166,38)" fg:x="198" fg:w="3"/><text x="16.0521%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="15.8819%" y="613" width="0.1596%" height="15" fill="rgb(240,194,35)" fg:x="199" fg:w="2"/><text x="16.1319%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="15.8819%" y="597" width="0.1596%" height="15" fill="rgb(219,10,44)" fg:x="199" fg:w="2"/><text x="16.1319%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.8819%" y="581" width="0.1596%" height="15" fill="rgb(251,220,35)" fg:x="199" fg:w="2"/><text x="16.1319%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.9617%" y="565" width="0.0798%" height="15" fill="rgb(218,117,13)" fg:x="200" fg:w="1"/><text x="16.2117%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9617%" y="549" width="0.0798%" height="15" fill="rgb(221,213,40)" fg:x="200" fg:w="1"/><text x="16.2117%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.9617%" y="533" width="0.0798%" height="15" fill="rgb(251,224,35)" fg:x="200" fg:w="1"/><text x="16.2117%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9617%" y="517" width="0.0798%" height="15" fill="rgb(241,33,39)" fg:x="200" fg:w="1"/><text x="16.2117%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.9617%" y="501" width="0.0798%" height="15" fill="rgb(222,74,17)" fg:x="200" fg:w="1"/><text x="16.2117%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9617%" y="485" width="0.0798%" height="15" fill="rgb(225,103,0)" fg:x="200" fg:w="1"/><text x="16.2117%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="15.9617%" y="469" width="0.0798%" height="15" fill="rgb(240,0,12)" fg:x="200" fg:w="1"/><text x="16.2117%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0415%" y="597" width="0.0798%" height="15" fill="rgb(233,213,37)" fg:x="201" fg:w="1"/><text x="16.2915%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0415%" y="581" width="0.0798%" height="15" fill="rgb(225,84,52)" fg:x="201" fg:w="1"/><text x="16.2915%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="16.0415%" y="565" width="0.0798%" height="15" fill="rgb(247,160,51)" fg:x="201" fg:w="1"/><text x="16.2915%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="16.0415%" y="629" width="0.1596%" height="15" fill="rgb(244,60,51)" fg:x="201" fg:w="2"/><text x="16.2915%" y="639.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="16.0415%" y="613" width="0.1596%" height="15" fill="rgb(233,114,7)" fg:x="201" fg:w="2"/><text x="16.2915%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.1213%" y="597" width="0.0798%" height="15" fill="rgb(246,136,16)" fg:x="202" fg:w="1"/><text x="16.3713%" y="607.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="16.1213%" y="581" width="0.0798%" height="15" fill="rgb(243,114,45)" fg:x="202" fg:w="1"/><text x="16.3713%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.1213%" y="565" width="0.0798%" height="15" fill="rgb(247,183,43)" fg:x="202" fg:w="1"/><text x="16.3713%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.2011%" y="629" width="0.0798%" height="15" fill="rgb(251,210,42)" fg:x="203" fg:w="1"/><text x="16.4511%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2809%" y="421" width="0.0798%" height="15" fill="rgb(221,88,35)" fg:x="204" fg:w="1"/><text x="16.5309%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.2809%" y="437" width="0.1596%" height="15" fill="rgb(242,21,20)" fg:x="204" fg:w="2"/><text x="16.5309%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3607%" y="421" width="0.0798%" height="15" fill="rgb(233,226,36)" fg:x="205" fg:w="1"/><text x="16.6107%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.2809%" y="501" width="0.2394%" height="15" fill="rgb(243,189,34)" fg:x="204" fg:w="3"/><text x="16.5309%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.2809%" y="485" width="0.2394%" height="15" fill="rgb(207,145,50)" fg:x="204" fg:w="3"/><text x="16.5309%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.2809%" y="469" width="0.2394%" height="15" fill="rgb(242,1,50)" fg:x="204" fg:w="3"/><text x="16.5309%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.2809%" y="453" width="0.2394%" height="15" fill="rgb(231,65,32)" fg:x="204" fg:w="3"/><text x="16.5309%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.4405%" y="437" width="0.0798%" height="15" fill="rgb(208,68,49)" fg:x="206" fg:w="1"/><text x="16.6905%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="16.2809%" y="581" width="0.3192%" height="15" fill="rgb(253,54,49)" fg:x="204" fg:w="4"/><text x="16.5309%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="16.2809%" y="565" width="0.3192%" height="15" fill="rgb(245,186,24)" fg:x="204" fg:w="4"/><text x="16.5309%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="16.2809%" y="549" width="0.3192%" height="15" fill="rgb(209,2,41)" fg:x="204" fg:w="4"/><text x="16.5309%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="16.2809%" y="533" width="0.3192%" height="15" fill="rgb(242,208,54)" fg:x="204" fg:w="4"/><text x="16.5309%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="16.2809%" y="517" width="0.3192%" height="15" fill="rgb(225,9,51)" fg:x="204" fg:w="4"/><text x="16.5309%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.5204%" y="501" width="0.0798%" height="15" fill="rgb(207,207,25)" fg:x="207" fg:w="1"/><text x="16.7704%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.5204%" y="485" width="0.0798%" height="15" fill="rgb(253,96,18)" fg:x="207" fg:w="1"/><text x="16.7704%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.5204%" y="469" width="0.0798%" height="15" fill="rgb(252,215,20)" fg:x="207" fg:w="1"/><text x="16.7704%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.5204%" y="453" width="0.0798%" height="15" fill="rgb(245,227,26)" fg:x="207" fg:w="1"/><text x="16.7704%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.5204%" y="437" width="0.0798%" height="15" fill="rgb(241,208,0)" fg:x="207" fg:w="1"/><text x="16.7704%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.5204%" y="421" width="0.0798%" height="15" fill="rgb(224,130,10)" fg:x="207" fg:w="1"/><text x="16.7704%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="16.6002%" y="549" width="0.0798%" height="15" fill="rgb(237,29,0)" fg:x="208" fg:w="1"/><text x="16.8502%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="16.6002%" y="533" width="0.0798%" height="15" fill="rgb(219,27,41)" fg:x="208" fg:w="1"/><text x="16.8502%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6002%" y="517" width="0.0798%" height="15" fill="rgb(245,101,19)" fg:x="208" fg:w="1"/><text x="16.8502%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6800%" y="469" width="0.0798%" height="15" fill="rgb(243,44,37)" fg:x="209" fg:w="1"/><text x="16.9300%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6800%" y="453" width="0.0798%" height="15" fill="rgb(228,213,43)" fg:x="209" fg:w="1"/><text x="16.9300%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6800%" y="437" width="0.0798%" height="15" fill="rgb(219,163,21)" fg:x="209" fg:w="1"/><text x="16.9300%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.6800%" y="421" width="0.0798%" height="15" fill="rgb(234,86,24)" fg:x="209" fg:w="1"/><text x="16.9300%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.6800%" y="405" width="0.0798%" height="15" fill="rgb(225,10,24)" fg:x="209" fg:w="1"/><text x="16.9300%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.6800%" y="389" width="0.0798%" height="15" fill="rgb(218,109,7)" fg:x="209" fg:w="1"/><text x="16.9300%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.6800%" y="373" width="0.0798%" height="15" fill="rgb(210,20,26)" fg:x="209" fg:w="1"/><text x="16.9300%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.6800%" y="357" width="0.0798%" height="15" fill="rgb(216,18,1)" fg:x="209" fg:w="1"/><text x="16.9300%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.6800%" y="341" width="0.0798%" height="15" fill="rgb(206,163,23)" fg:x="209" fg:w="1"/><text x="16.9300%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.6800%" y="325" width="0.0798%" height="15" fill="rgb(229,150,31)" fg:x="209" fg:w="1"/><text x="16.9300%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.6800%" y="309" width="0.0798%" height="15" fill="rgb(231,10,5)" fg:x="209" fg:w="1"/><text x="16.9300%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.6800%" y="293" width="0.0798%" height="15" fill="rgb(250,40,50)" fg:x="209" fg:w="1"/><text x="16.9300%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.6800%" y="277" width="0.0798%" height="15" fill="rgb(217,119,7)" fg:x="209" fg:w="1"/><text x="16.9300%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.6800%" y="549" width="0.1596%" height="15" fill="rgb(245,214,40)" fg:x="209" fg:w="2"/><text x="16.9300%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.6800%" y="533" width="0.1596%" height="15" fill="rgb(216,187,1)" fg:x="209" fg:w="2"/><text x="16.9300%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.6800%" y="517" width="0.1596%" height="15" fill="rgb(237,146,21)" fg:x="209" fg:w="2"/><text x="16.9300%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.6800%" y="501" width="0.1596%" height="15" fill="rgb(210,174,47)" fg:x="209" fg:w="2"/><text x="16.9300%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.6800%" y="485" width="0.1596%" height="15" fill="rgb(218,111,39)" fg:x="209" fg:w="2"/><text x="16.9300%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7598%" y="469" width="0.0798%" height="15" fill="rgb(224,95,19)" fg:x="210" fg:w="1"/><text x="17.0098%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.8396%" y="501" width="0.0798%" height="15" fill="rgb(234,15,38)" fg:x="211" fg:w="1"/><text x="17.0896%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8396%" y="485" width="0.0798%" height="15" fill="rgb(246,56,12)" fg:x="211" fg:w="1"/><text x="17.0896%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.8396%" y="469" width="0.0798%" height="15" fill="rgb(247,16,17)" fg:x="211" fg:w="1"/><text x="17.0896%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="16.9194%" y="501" width="0.0798%" height="15" fill="rgb(215,151,11)" fg:x="212" fg:w="1"/><text x="17.1694%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.9194%" y="485" width="0.0798%" height="15" fill="rgb(225,16,24)" fg:x="212" fg:w="1"/><text x="17.1694%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="16.8396%" y="533" width="0.2394%" height="15" fill="rgb(217,117,5)" fg:x="211" fg:w="3"/><text x="17.0896%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.8396%" y="517" width="0.2394%" height="15" fill="rgb(246,187,53)" fg:x="211" fg:w="3"/><text x="17.0896%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.9992%" y="501" width="0.0798%" height="15" fill="rgb(241,71,40)" fg:x="213" fg:w="1"/><text x="17.2492%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.9992%" y="485" width="0.0798%" height="15" fill="rgb(231,67,39)" fg:x="213" fg:w="1"/><text x="17.2492%" y="495.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="16.9992%" y="469" width="0.0798%" height="15" fill="rgb(222,120,24)" fg:x="213" fg:w="1"/><text x="17.2492%" y="479.50"></text></g><g><title>engine::identifiers::model::set_gid (5 samples, 0.40%)</title><rect x="16.8396%" y="549" width="0.3990%" height="15" fill="rgb(248,3,3)" fg:x="211" fg:w="5"/><text x="17.0896%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.0790%" y="533" width="0.1596%" height="15" fill="rgb(228,218,5)" fg:x="214" fg:w="2"/><text x="17.3290%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="17.1588%" y="517" width="0.0798%" height="15" fill="rgb(212,202,43)" fg:x="215" fg:w="1"/><text x="17.4088%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="16.6002%" y="565" width="0.7183%" height="15" fill="rgb(235,183,2)" fg:x="208" fg:w="9"/><text x="16.8502%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="17.2386%" y="549" width="0.0798%" height="15" fill="rgb(230,165,10)" fg:x="216" fg:w="1"/><text x="17.4886%" y="559.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="17.2386%" y="533" width="0.0798%" height="15" fill="rgb(219,54,40)" fg:x="216" fg:w="1"/><text x="17.4886%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.2386%" y="517" width="0.0798%" height="15" fill="rgb(244,73,9)" fg:x="216" fg:w="1"/><text x="17.4886%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3184%" y="469" width="0.0798%" height="15" fill="rgb(212,32,45)" fg:x="217" fg:w="1"/><text x="17.5684%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3184%" y="453" width="0.0798%" height="15" fill="rgb(205,58,31)" fg:x="217" fg:w="1"/><text x="17.5684%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3184%" y="437" width="0.0798%" height="15" fill="rgb(250,120,43)" fg:x="217" fg:w="1"/><text x="17.5684%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3184%" y="421" width="0.0798%" height="15" fill="rgb(235,13,10)" fg:x="217" fg:w="1"/><text x="17.5684%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3184%" y="405" width="0.0798%" height="15" fill="rgb(232,219,31)" fg:x="217" fg:w="1"/><text x="17.5684%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="17.3982%" y="469" width="0.0798%" height="15" fill="rgb(218,157,51)" fg:x="218" fg:w="1"/><text x="17.6482%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.3982%" y="453" width="0.0798%" height="15" fill="rgb(211,91,52)" fg:x="218" fg:w="1"/><text x="17.6482%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.3982%" y="437" width="0.0798%" height="15" fill="rgb(240,173,1)" fg:x="218" fg:w="1"/><text x="17.6482%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="17.3184%" y="517" width="0.3990%" height="15" fill="rgb(248,20,47)" fg:x="217" fg:w="5"/><text x="17.5684%" y="527.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="17.3184%" y="501" width="0.3990%" height="15" fill="rgb(217,221,40)" fg:x="217" fg:w="5"/><text x="17.5684%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="17.3184%" y="485" width="0.3990%" height="15" fill="rgb(226,149,51)" fg:x="217" fg:w="5"/><text x="17.5684%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.4781%" y="469" width="0.2394%" height="15" fill="rgb(252,193,7)" fg:x="219" fg:w="3"/><text x="17.7281%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.4781%" y="453" width="0.2394%" height="15" fill="rgb(205,123,0)" fg:x="219" fg:w="3"/><text x="17.7281%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.4781%" y="437" width="0.2394%" height="15" fill="rgb(233,173,25)" fg:x="219" fg:w="3"/><text x="17.7281%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.4781%" y="421" width="0.2394%" height="15" fill="rgb(216,63,32)" fg:x="219" fg:w="3"/><text x="17.7281%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="17.4781%" y="405" width="0.2394%" height="15" fill="rgb(209,56,45)" fg:x="219" fg:w="3"/><text x="17.7281%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.4781%" y="389" width="0.2394%" height="15" fill="rgb(226,111,49)" fg:x="219" fg:w="3"/><text x="17.7281%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.5579%" y="373" width="0.1596%" height="15" fill="rgb(244,181,21)" fg:x="220" fg:w="2"/><text x="17.8079%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.5579%" y="357" width="0.1596%" height="15" fill="rgb(222,126,15)" fg:x="220" fg:w="2"/><text x="17.8079%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.5579%" y="341" width="0.1596%" height="15" fill="rgb(222,95,17)" fg:x="220" fg:w="2"/><text x="17.8079%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.5579%" y="325" width="0.1596%" height="15" fill="rgb(254,46,5)" fg:x="220" fg:w="2"/><text x="17.8079%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7175%" y="437" width="0.0798%" height="15" fill="rgb(236,216,35)" fg:x="222" fg:w="1"/><text x="17.9675%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7175%" y="421" width="0.0798%" height="15" fill="rgb(217,187,26)" fg:x="222" fg:w="1"/><text x="17.9675%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7175%" y="405" width="0.0798%" height="15" fill="rgb(207,192,25)" fg:x="222" fg:w="1"/><text x="17.9675%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7175%" y="389" width="0.0798%" height="15" fill="rgb(253,135,27)" fg:x="222" fg:w="1"/><text x="17.9675%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.7175%" y="373" width="0.0798%" height="15" fill="rgb(211,122,29)" fg:x="222" fg:w="1"/><text x="17.9675%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.7175%" y="357" width="0.0798%" height="15" fill="rgb(233,162,40)" fg:x="222" fg:w="1"/><text x="17.9675%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.7175%" y="341" width="0.0798%" height="15" fill="rgb(222,184,47)" fg:x="222" fg:w="1"/><text x="17.9675%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7175%" y="325" width="0.0798%" height="15" fill="rgb(249,99,23)" fg:x="222" fg:w="1"/><text x="17.9675%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7175%" y="309" width="0.0798%" height="15" fill="rgb(214,60,12)" fg:x="222" fg:w="1"/><text x="17.9675%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.7175%" y="293" width="0.0798%" height="15" fill="rgb(250,229,36)" fg:x="222" fg:w="1"/><text x="17.9675%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.7175%" y="277" width="0.0798%" height="15" fill="rgb(232,195,10)" fg:x="222" fg:w="1"/><text x="17.9675%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.7175%" y="261" width="0.0798%" height="15" fill="rgb(205,213,31)" fg:x="222" fg:w="1"/><text x="17.9675%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.7175%" y="245" width="0.0798%" height="15" fill="rgb(237,43,8)" fg:x="222" fg:w="1"/><text x="17.9675%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.7175%" y="229" width="0.0798%" height="15" fill="rgb(216,208,3)" fg:x="222" fg:w="1"/><text x="17.9675%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.7175%" y="469" width="0.1596%" height="15" fill="rgb(228,179,44)" fg:x="222" fg:w="2"/><text x="17.9675%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.7175%" y="453" width="0.1596%" height="15" fill="rgb(230,192,27)" fg:x="222" fg:w="2"/><text x="17.9675%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.7973%" y="437" width="0.0798%" height="15" fill="rgb(251,30,38)" fg:x="223" fg:w="1"/><text x="18.0473%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="17.8771%" y="469" width="0.0798%" height="15" fill="rgb(246,55,52)" fg:x="224" fg:w="1"/><text x="18.1271%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.8771%" y="453" width="0.0798%" height="15" fill="rgb(249,79,26)" fg:x="224" fg:w="1"/><text x="18.1271%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8771%" y="437" width="0.0798%" height="15" fill="rgb(220,202,16)" fg:x="224" fg:w="1"/><text x="18.1271%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8771%" y="421" width="0.0798%" height="15" fill="rgb(250,170,23)" fg:x="224" fg:w="1"/><text x="18.1271%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8771%" y="405" width="0.0798%" height="15" fill="rgb(230,7,37)" fg:x="224" fg:w="1"/><text x="18.1271%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.8771%" y="389" width="0.0798%" height="15" fill="rgb(213,71,1)" fg:x="224" fg:w="1"/><text x="18.1271%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8771%" y="373" width="0.0798%" height="15" fill="rgb(227,87,39)" fg:x="224" fg:w="1"/><text x="18.1271%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.9569%" y="437" width="0.0798%" height="15" fill="rgb(210,41,29)" fg:x="225" fg:w="1"/><text x="18.2069%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="17.3184%" y="549" width="0.8779%" height="15" fill="rgb(206,191,31)" fg:x="217" fg:w="11"/><text x="17.5684%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (11 samples, 0.88%)</title><rect x="17.3184%" y="533" width="0.8779%" height="15" fill="rgb(247,75,54)" fg:x="217" fg:w="11"/><text x="17.5684%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="17.7175%" y="517" width="0.4789%" height="15" fill="rgb(208,54,50)" fg:x="222" fg:w="6"/><text x="17.9675%" y="527.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="17.7175%" y="501" width="0.4789%" height="15" fill="rgb(214,90,37)" fg:x="222" fg:w="6"/><text x="17.9675%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="17.7175%" y="485" width="0.4789%" height="15" fill="rgb(220,132,6)" fg:x="222" fg:w="6"/><text x="17.9675%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.9569%" y="469" width="0.2394%" height="15" fill="rgb(213,167,7)" fg:x="225" fg:w="3"/><text x="18.2069%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.9569%" y="453" width="0.2394%" height="15" fill="rgb(243,36,27)" fg:x="225" fg:w="3"/><text x="18.2069%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.0367%" y="437" width="0.1596%" height="15" fill="rgb(235,147,12)" fg:x="226" fg:w="2"/><text x="18.2867%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0367%" y="421" width="0.1596%" height="15" fill="rgb(212,198,44)" fg:x="226" fg:w="2"/><text x="18.2867%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.0367%" y="405" width="0.1596%" height="15" fill="rgb(218,68,50)" fg:x="226" fg:w="2"/><text x="18.2867%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0367%" y="389" width="0.1596%" height="15" fill="rgb(224,79,48)" fg:x="226" fg:w="2"/><text x="18.2867%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.0367%" y="373" width="0.1596%" height="15" fill="rgb(213,191,50)" fg:x="226" fg:w="2"/><text x="18.2867%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1165%" y="357" width="0.0798%" height="15" fill="rgb(254,146,10)" fg:x="227" fg:w="1"/><text x="18.3665%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.1165%" y="341" width="0.0798%" height="15" fill="rgb(215,175,11)" fg:x="227" fg:w="1"/><text x="18.3665%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="18.1963%" y="549" width="0.0798%" height="15" fill="rgb(207,49,7)" fg:x="228" fg:w="1"/><text x="18.4463%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.1963%" y="533" width="0.0798%" height="15" fill="rgb(234,144,29)" fg:x="228" fg:w="1"/><text x="18.4463%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.1963%" y="517" width="0.0798%" height="15" fill="rgb(213,222,48)" fg:x="228" fg:w="1"/><text x="18.4463%" y="527.50"></text></g><g><title>plugins_core::build::Build::leads_to (22 samples, 1.76%)</title><rect x="16.6002%" y="581" width="1.7558%" height="15" fill="rgb(222,8,6)" fg:x="208" fg:w="22"/><text x="16.8502%" y="591.50"></text></g><g><title>plugins_core::tools::leads_to (13 samples, 1.04%)</title><rect x="17.3184%" y="565" width="1.0375%" height="15" fill="rgb(221,114,49)" fg:x="217" fg:w="13"/><text x="17.5684%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.2761%" y="549" width="0.0798%" height="15" fill="rgb(250,140,42)" fg:x="229" fg:w="1"/><text x="18.5261%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="18.2761%" y="533" width="0.0798%" height="15" fill="rgb(250,150,27)" fg:x="229" fg:w="1"/><text x="18.5261%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.2761%" y="517" width="0.0798%" height="15" fill="rgb(252,159,3)" fg:x="229" fg:w="1"/><text x="18.5261%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.2761%" y="501" width="0.0798%" height="15" fill="rgb(241,182,3)" fg:x="229" fg:w="1"/><text x="18.5261%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.2761%" y="485" width="0.0798%" height="15" fill="rgb(236,3,9)" fg:x="229" fg:w="1"/><text x="18.5261%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.2761%" y="469" width="0.0798%" height="15" fill="rgb(223,227,51)" fg:x="229" fg:w="1"/><text x="18.5261%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (27 samples, 2.15%)</title><rect x="16.2809%" y="629" width="2.1548%" height="15" fill="rgb(232,133,30)" fg:x="204" fg:w="27"/><text x="16.5309%" y="639.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 2.15%)</title><rect x="16.2809%" y="613" width="2.1548%" height="15" fill="rgb(209,93,27)" fg:x="204" fg:w="27"/><text x="16.5309%" y="623.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (27 samples, 2.15%)</title><rect x="16.2809%" y="597" width="2.1548%" height="15" fill="rgb(208,108,34)" fg:x="204" fg:w="27"/><text x="16.5309%" y="607.50">p..</text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="18.3559%" y="581" width="0.0798%" height="15" fill="rgb(215,189,13)" fg:x="230" fg:w="1"/><text x="18.6059%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="18.3559%" y="565" width="0.0798%" height="15" fill="rgb(206,88,23)" fg:x="230" fg:w="1"/><text x="18.6059%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="18.3559%" y="549" width="0.0798%" height="15" fill="rgb(240,173,0)" fg:x="230" fg:w="1"/><text x="18.6059%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.3559%" y="533" width="0.0798%" height="15" fill="rgb(223,106,52)" fg:x="230" fg:w="1"/><text x="18.6059%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.3559%" y="517" width="0.0798%" height="15" fill="rgb(206,130,16)" fg:x="230" fg:w="1"/><text x="18.6059%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.3559%" y="501" width="0.0798%" height="15" fill="rgb(220,54,25)" fg:x="230" fg:w="1"/><text x="18.6059%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="18.3559%" y="485" width="0.0798%" height="15" fill="rgb(210,4,38)" fg:x="230" fg:w="1"/><text x="18.6059%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.3559%" y="469" width="0.0798%" height="15" fill="rgb(238,94,39)" fg:x="230" fg:w="1"/><text x="18.6059%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3559%" y="453" width="0.0798%" height="15" fill="rgb(234,124,34)" fg:x="230" fg:w="1"/><text x="18.6059%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="18.4358%" y="629" width="0.0798%" height="15" fill="rgb(221,91,40)" fg:x="231" fg:w="1"/><text x="18.6858%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4358%" y="613" width="0.0798%" height="15" fill="rgb(246,53,28)" fg:x="231" fg:w="1"/><text x="18.6858%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="18.5156%" y="613" width="0.1596%" height="15" fill="rgb(229,109,7)" fg:x="232" fg:w="2"/><text x="18.7656%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.5954%" y="597" width="0.0798%" height="15" fill="rgb(249,117,8)" fg:x="233" fg:w="1"/><text x="18.8454%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="18.7550%" y="565" width="0.0798%" height="15" fill="rgb(210,181,1)" fg:x="235" fg:w="1"/><text x="19.0050%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.7550%" y="549" width="0.0798%" height="15" fill="rgb(211,66,1)" fg:x="235" fg:w="1"/><text x="19.0050%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.7550%" y="533" width="0.0798%" height="15" fill="rgb(221,90,14)" fg:x="235" fg:w="1"/><text x="19.0050%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.7550%" y="517" width="0.0798%" height="15" fill="rgb(219,222,44)" fg:x="235" fg:w="1"/><text x="19.0050%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.9944%" y="437" width="0.0798%" height="15" fill="rgb(246,34,33)" fg:x="238" fg:w="1"/><text x="19.2444%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.9944%" y="421" width="0.0798%" height="15" fill="rgb(227,135,41)" fg:x="238" fg:w="1"/><text x="19.2444%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.9944%" y="405" width="0.0798%" height="15" fill="rgb(226,15,14)" fg:x="238" fg:w="1"/><text x="19.2444%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.9944%" y="389" width="0.0798%" height="15" fill="rgb(236,148,47)" fg:x="238" fg:w="1"/><text x="19.2444%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.9944%" y="373" width="0.0798%" height="15" fill="rgb(233,162,52)" fg:x="238" fg:w="1"/><text x="19.2444%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.9944%" y="357" width="0.0798%" height="15" fill="rgb(244,35,28)" fg:x="238" fg:w="1"/><text x="19.2444%" y="367.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="18.9944%" y="341" width="0.0798%" height="15" fill="rgb(205,121,10)" fg:x="238" fg:w="1"/><text x="19.2444%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="18.8348%" y="565" width="0.3192%" height="15" fill="rgb(250,58,18)" fg:x="236" fg:w="4"/><text x="19.0848%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="18.8348%" y="549" width="0.3192%" height="15" fill="rgb(216,37,13)" fg:x="236" fg:w="4"/><text x="19.0848%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (4 samples, 0.32%)</title><rect x="18.8348%" y="533" width="0.3192%" height="15" fill="rgb(221,215,42)" fg:x="236" fg:w="4"/><text x="19.0848%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.9944%" y="517" width="0.1596%" height="15" fill="rgb(217,214,19)" fg:x="238" fg:w="2"/><text x="19.2444%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.9944%" y="501" width="0.1596%" height="15" fill="rgb(233,139,13)" fg:x="238" fg:w="2"/><text x="19.2444%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="18.9944%" y="485" width="0.1596%" height="15" fill="rgb(247,168,23)" fg:x="238" fg:w="2"/><text x="19.2444%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="18.9944%" y="469" width="0.1596%" height="15" fill="rgb(207,202,1)" fg:x="238" fg:w="2"/><text x="19.2444%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="18.9944%" y="453" width="0.1596%" height="15" fill="rgb(220,155,48)" fg:x="238" fg:w="2"/><text x="19.2444%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.0742%" y="437" width="0.0798%" height="15" fill="rgb(250,43,26)" fg:x="239" fg:w="1"/><text x="19.3242%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.0742%" y="421" width="0.0798%" height="15" fill="rgb(212,190,23)" fg:x="239" fg:w="1"/><text x="19.3242%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="19.2338%" y="533" width="0.0798%" height="15" fill="rgb(216,39,24)" fg:x="241" fg:w="1"/><text x="19.4838%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.2338%" y="517" width="0.0798%" height="15" fill="rgb(252,113,16)" fg:x="241" fg:w="1"/><text x="19.4838%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.2338%" y="501" width="0.0798%" height="15" fill="rgb(208,113,19)" fg:x="241" fg:w="1"/><text x="19.4838%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.2338%" y="485" width="0.0798%" height="15" fill="rgb(234,107,25)" fg:x="241" fg:w="1"/><text x="19.4838%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.2338%" y="469" width="0.0798%" height="15" fill="rgb(234,217,51)" fg:x="241" fg:w="1"/><text x="19.4838%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="19.3136%" y="501" width="0.3192%" height="15" fill="rgb(251,29,42)" fg:x="242" fg:w="4"/><text x="19.5636%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="19.3136%" y="485" width="0.3192%" height="15" fill="rgb(221,62,51)" fg:x="242" fg:w="4"/><text x="19.5636%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="19.3935%" y="469" width="0.2394%" height="15" fill="rgb(240,192,43)" fg:x="243" fg:w="3"/><text x="19.6435%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="19.3935%" y="453" width="0.2394%" height="15" fill="rgb(224,157,47)" fg:x="243" fg:w="3"/><text x="19.6435%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.5531%" y="437" width="0.0798%" height="15" fill="rgb(226,84,45)" fg:x="245" fg:w="1"/><text x="19.8031%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.5531%" y="421" width="0.0798%" height="15" fill="rgb(208,207,23)" fg:x="245" fg:w="1"/><text x="19.8031%" y="431.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="19.5531%" y="405" width="0.0798%" height="15" fill="rgb(253,34,51)" fg:x="245" fg:w="1"/><text x="19.8031%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="19.3136%" y="517" width="0.4789%" height="15" fill="rgb(227,26,34)" fg:x="242" fg:w="6"/><text x="19.5636%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.6329%" y="501" width="0.1596%" height="15" fill="rgb(245,75,19)" fg:x="246" fg:w="2"/><text x="19.8829%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.7127%" y="485" width="0.0798%" height="15" fill="rgb(250,191,31)" fg:x="247" fg:w="1"/><text x="19.9627%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.7127%" y="469" width="0.0798%" height="15" fill="rgb(224,11,50)" fg:x="247" fg:w="1"/><text x="19.9627%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.8723%" y="501" width="0.0798%" height="15" fill="rgb(231,171,7)" fg:x="249" fg:w="1"/><text x="20.1223%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8723%" y="485" width="0.0798%" height="15" fill="rgb(252,214,10)" fg:x="249" fg:w="1"/><text x="20.1223%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.8723%" y="469" width="0.0798%" height="15" fill="rgb(249,45,46)" fg:x="249" fg:w="1"/><text x="20.1223%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.8723%" y="453" width="0.0798%" height="15" fill="rgb(240,173,7)" fg:x="249" fg:w="1"/><text x="20.1223%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.9521%" y="501" width="0.0798%" height="15" fill="rgb(235,214,13)" fg:x="250" fg:w="1"/><text x="20.2021%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.1915%" y="485" width="0.0798%" height="15" fill="rgb(245,156,8)" fg:x="253" fg:w="1"/><text x="20.4415%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="20.2713%" y="485" width="0.2394%" height="15" fill="rgb(235,46,12)" fg:x="254" fg:w="3"/><text x="20.5213%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.3512%" y="469" width="0.1596%" height="15" fill="rgb(221,81,14)" fg:x="255" fg:w="2"/><text x="20.6012%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.4310%" y="453" width="0.0798%" height="15" fill="rgb(238,207,9)" fg:x="256" fg:w="1"/><text x="20.6810%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.5108%" y="469" width="0.0798%" height="15" fill="rgb(224,129,35)" fg:x="257" fg:w="1"/><text x="20.7608%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="20.5906%" y="469" width="0.3192%" height="15" fill="rgb(243,218,34)" fg:x="258" fg:w="4"/><text x="20.8406%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="20.5906%" y="453" width="0.3192%" height="15" fill="rgb(220,166,13)" fg:x="258" fg:w="4"/><text x="20.8406%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.7502%" y="437" width="0.1596%" height="15" fill="rgb(227,167,49)" fg:x="260" fg:w="2"/><text x="21.0002%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.8300%" y="421" width="0.0798%" height="15" fill="rgb(234,142,12)" fg:x="261" fg:w="1"/><text x="21.0800%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="20.9098%" y="453" width="0.2394%" height="15" fill="rgb(207,100,48)" fg:x="262" fg:w="3"/><text x="21.1598%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.9098%" y="437" width="0.2394%" height="15" fill="rgb(210,25,14)" fg:x="262" fg:w="3"/><text x="21.1598%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.9896%" y="421" width="0.1596%" height="15" fill="rgb(246,116,27)" fg:x="263" fg:w="2"/><text x="21.2396%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.0694%" y="405" width="0.0798%" height="15" fill="rgb(214,193,42)" fg:x="264" fg:w="1"/><text x="21.3194%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="20.9098%" y="469" width="0.5587%" height="15" fill="rgb(214,122,8)" fg:x="262" fg:w="7"/><text x="21.1598%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="21.1492%" y="453" width="0.3192%" height="15" fill="rgb(244,173,18)" fg:x="265" fg:w="4"/><text x="21.3992%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="21.1492%" y="437" width="0.3192%" height="15" fill="rgb(232,68,19)" fg:x="265" fg:w="4"/><text x="21.3992%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="21.1492%" y="421" width="0.3192%" height="15" fill="rgb(236,224,1)" fg:x="265" fg:w="4"/><text x="21.3992%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.2291%" y="405" width="0.2394%" height="15" fill="rgb(240,11,8)" fg:x="266" fg:w="3"/><text x="21.4791%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.3089%" y="389" width="0.1596%" height="15" fill="rgb(244,159,20)" fg:x="267" fg:w="2"/><text x="21.5589%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.3887%" y="373" width="0.0798%" height="15" fill="rgb(240,223,54)" fg:x="268" fg:w="1"/><text x="21.6387%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="20.5108%" y="485" width="1.0375%" height="15" fill="rgb(237,146,5)" fg:x="257" fg:w="13"/><text x="20.7608%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.4685%" y="469" width="0.0798%" height="15" fill="rgb(218,221,32)" fg:x="269" fg:w="1"/><text x="21.7185%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.4685%" y="453" width="0.0798%" height="15" fill="rgb(244,96,26)" fg:x="269" fg:w="1"/><text x="21.7185%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.4685%" y="437" width="0.0798%" height="15" fill="rgb(245,184,37)" fg:x="269" fg:w="1"/><text x="21.7185%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="20.0319%" y="501" width="1.5962%" height="15" fill="rgb(248,91,47)" fg:x="251" fg:w="20"/><text x="20.2819%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.5483%" y="485" width="0.0798%" height="15" fill="rgb(243,199,8)" fg:x="270" fg:w="1"/><text x="21.7983%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.5483%" y="469" width="0.0798%" height="15" fill="rgb(249,12,15)" fg:x="270" fg:w="1"/><text x="21.7983%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.55%)</title><rect x="19.3136%" y="533" width="2.5539%" height="15" fill="rgb(245,97,12)" fg:x="242" fg:w="32"/><text x="19.5636%" y="543.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.08%)</title><rect x="19.7925%" y="517" width="2.0750%" height="15" fill="rgb(244,61,1)" fg:x="248" fg:w="26"/><text x="20.0425%" y="527.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.6281%" y="501" width="0.2394%" height="15" fill="rgb(222,194,10)" fg:x="271" fg:w="3"/><text x="21.8781%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="21.6281%" y="485" width="0.2394%" height="15" fill="rgb(226,178,8)" fg:x="271" fg:w="3"/><text x="21.8781%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="21.6281%" y="469" width="0.2394%" height="15" fill="rgb(241,32,34)" fg:x="271" fg:w="3"/><text x="21.8781%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.7877%" y="453" width="0.0798%" height="15" fill="rgb(254,26,6)" fg:x="273" fg:w="1"/><text x="22.0377%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.7877%" y="437" width="0.0798%" height="15" fill="rgb(249,71,11)" fg:x="273" fg:w="1"/><text x="22.0377%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8675%" y="501" width="0.0798%" height="15" fill="rgb(232,170,27)" fg:x="274" fg:w="1"/><text x="22.1175%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="21.9473%" y="501" width="0.2394%" height="15" fill="rgb(214,223,17)" fg:x="275" fg:w="3"/><text x="22.1973%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.1868%" y="485" width="0.0798%" height="15" fill="rgb(250,18,15)" fg:x="278" fg:w="1"/><text x="22.4368%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.2666%" y="485" width="0.0798%" height="15" fill="rgb(212,153,51)" fg:x="279" fg:w="1"/><text x="22.5166%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.3464%" y="469" width="0.0798%" height="15" fill="rgb(219,194,12)" fg:x="280" fg:w="1"/><text x="22.5964%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="22.4262%" y="453" width="0.1596%" height="15" fill="rgb(212,58,17)" fg:x="281" fg:w="2"/><text x="22.6762%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.5060%" y="437" width="0.0798%" height="15" fill="rgb(254,5,10)" fg:x="282" fg:w="1"/><text x="22.7560%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.5060%" y="421" width="0.0798%" height="15" fill="rgb(246,91,7)" fg:x="282" fg:w="1"/><text x="22.7560%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="21.8675%" y="533" width="0.9577%" height="15" fill="rgb(218,108,49)" fg:x="274" fg:w="12"/><text x="22.1175%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="21.8675%" y="517" width="0.9577%" height="15" fill="rgb(238,123,20)" fg:x="274" fg:w="12"/><text x="22.1175%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="22.1868%" y="501" width="0.6385%" height="15" fill="rgb(231,69,23)" fg:x="278" fg:w="8"/><text x="22.4368%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="22.3464%" y="485" width="0.4789%" height="15" fill="rgb(230,209,3)" fg:x="280" fg:w="6"/><text x="22.5964%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="22.4262%" y="469" width="0.3990%" height="15" fill="rgb(231,19,0)" fg:x="281" fg:w="5"/><text x="22.6762%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="22.5858%" y="453" width="0.2394%" height="15" fill="rgb(226,192,25)" fg:x="283" fg:w="3"/><text x="22.8358%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.6656%" y="437" width="0.1596%" height="15" fill="rgb(223,175,53)" fg:x="284" fg:w="2"/><text x="22.9156%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="22.6656%" y="421" width="0.1596%" height="15" fill="rgb(248,35,51)" fg:x="284" fg:w="2"/><text x="22.9156%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="22.6656%" y="405" width="0.1596%" height="15" fill="rgb(230,37,26)" fg:x="284" fg:w="2"/><text x="22.9156%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="22.8252%" y="517" width="0.0798%" height="15" fill="rgb(206,120,22)" fg:x="286" fg:w="1"/><text x="23.0752%" y="527.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="22.8252%" y="501" width="0.0798%" height="15" fill="rgb(207,165,28)" fg:x="286" fg:w="1"/><text x="23.0752%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="22.8252%" y="485" width="0.0798%" height="15" fill="rgb(226,23,46)" fg:x="286" fg:w="1"/><text x="23.0752%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="22.9848%" y="485" width="0.2394%" height="15" fill="rgb(208,130,44)" fg:x="288" fg:w="3"/><text x="23.2348%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.2243%" y="485" width="0.0798%" height="15" fill="rgb(231,67,8)" fg:x="291" fg:w="1"/><text x="23.4743%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.2243%" y="469" width="0.0798%" height="15" fill="rgb(205,183,22)" fg:x="291" fg:w="1"/><text x="23.4743%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.2243%" y="453" width="0.0798%" height="15" fill="rgb(224,47,9)" fg:x="291" fg:w="1"/><text x="23.4743%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="23.3041%" y="453" width="0.0798%" height="15" fill="rgb(250,183,49)" fg:x="292" fg:w="1"/><text x="23.5541%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="23.3041%" y="437" width="0.0798%" height="15" fill="rgb(220,151,39)" fg:x="292" fg:w="1"/><text x="23.5541%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="23.3041%" y="485" width="0.2394%" height="15" fill="rgb(220,118,20)" fg:x="292" fg:w="3"/><text x="23.5541%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="23.3041%" y="469" width="0.2394%" height="15" fill="rgb(231,65,51)" fg:x="292" fg:w="3"/><text x="23.5541%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.3839%" y="453" width="0.1596%" height="15" fill="rgb(253,125,37)" fg:x="293" fg:w="2"/><text x="23.6339%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.8627%" y="437" width="0.0798%" height="15" fill="rgb(232,102,6)" fg:x="299" fg:w="1"/><text x="24.1127%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.8627%" y="421" width="0.0798%" height="15" fill="rgb(251,105,13)" fg:x="299" fg:w="1"/><text x="24.1127%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8627%" y="405" width="0.0798%" height="15" fill="rgb(222,179,29)" fg:x="299" fg:w="1"/><text x="24.1127%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.9425%" y="437" width="0.0798%" height="15" fill="rgb(229,180,53)" fg:x="300" fg:w="1"/><text x="24.1925%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9425%" y="421" width="0.0798%" height="15" fill="rgb(238,104,13)" fg:x="300" fg:w="1"/><text x="24.1925%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9425%" y="405" width="0.0798%" height="15" fill="rgb(210,130,5)" fg:x="300" fg:w="1"/><text x="24.1925%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="24.1022%" y="421" width="0.0798%" height="15" fill="rgb(233,87,49)" fg:x="302" fg:w="1"/><text x="24.3522%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.2618%" y="373" width="0.0798%" height="15" fill="rgb(243,34,9)" fg:x="304" fg:w="1"/><text x="24.5118%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.2618%" y="405" width="0.1596%" height="15" fill="rgb(235,225,10)" fg:x="304" fg:w="2"/><text x="24.5118%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.2618%" y="389" width="0.1596%" height="15" fill="rgb(212,0,30)" fg:x="304" fg:w="2"/><text x="24.5118%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.3416%" y="373" width="0.0798%" height="15" fill="rgb(211,177,0)" fg:x="305" fg:w="1"/><text x="24.5916%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.4214%" y="373" width="0.0798%" height="15" fill="rgb(225,220,11)" fg:x="306" fg:w="1"/><text x="24.6714%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.4214%" y="357" width="0.0798%" height="15" fill="rgb(215,10,13)" fg:x="306" fg:w="1"/><text x="24.6714%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.4214%" y="341" width="0.0798%" height="15" fill="rgb(240,177,14)" fg:x="306" fg:w="1"/><text x="24.6714%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="24.5012%" y="357" width="0.0798%" height="15" fill="rgb(243,7,39)" fg:x="307" fg:w="1"/><text x="24.7512%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.5810%" y="341" width="0.2394%" height="15" fill="rgb(212,99,0)" fg:x="308" fg:w="3"/><text x="24.8310%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.6608%" y="325" width="0.1596%" height="15" fill="rgb(225,162,48)" fg:x="309" fg:w="2"/><text x="24.9108%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.6608%" y="309" width="0.1596%" height="15" fill="rgb(246,16,25)" fg:x="309" fg:w="2"/><text x="24.9108%" y="319.50"></text></g><g><title>engine::session::Session::flush (81 samples, 6.46%)</title><rect x="18.5156%" y="629" width="6.4645%" height="15" fill="rgb(220,150,2)" fg:x="232" fg:w="81"/><text x="18.7656%" y="639.50">engine::..</text></g><g><title>engine::session::Session::save_changes (79 samples, 6.30%)</title><rect x="18.6752%" y="613" width="6.3049%" height="15" fill="rgb(237,113,11)" fg:x="234" fg:w="79"/><text x="18.9252%" y="623.50">engine::..</text></g><g><title>engine::session::state::State::close (79 samples, 6.30%)</title><rect x="18.6752%" y="597" width="6.3049%" height="15" fill="rgb(236,70,20)" fg:x="234" fg:w="79"/><text x="18.9252%" y="607.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (78 samples, 6.23%)</title><rect x="18.7550%" y="581" width="6.2251%" height="15" fill="rgb(234,94,7)" fg:x="235" fg:w="78"/><text x="19.0050%" y="591.50">engine::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (73 samples, 5.83%)</title><rect x="19.1540%" y="565" width="5.8260%" height="15" fill="rgb(250,221,0)" fg:x="240" fg:w="73"/><text x="19.4040%" y="575.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (73 samples, 5.83%)</title><rect x="19.1540%" y="549" width="5.8260%" height="15" fill="rgb(245,149,46)" fg:x="240" fg:w="73"/><text x="19.4040%" y="559.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (27 samples, 2.15%)</title><rect x="22.8252%" y="533" width="2.1548%" height="15" fill="rgb(215,37,27)" fg:x="286" fg:w="27"/><text x="23.0752%" y="543.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (26 samples, 2.08%)</title><rect x="22.9050%" y="517" width="2.0750%" height="15" fill="rgb(232,65,3)" fg:x="287" fg:w="26"/><text x="23.1550%" y="527.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (26 samples, 2.08%)</title><rect x="22.9050%" y="501" width="2.0750%" height="15" fill="rgb(214,2,16)" fg:x="287" fg:w="26"/><text x="23.1550%" y="511.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.44%)</title><rect x="23.5435%" y="485" width="1.4366%" height="15" fill="rgb(227,131,50)" fg:x="295" fg:w="18"/><text x="23.7935%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.12%)</title><rect x="23.8627%" y="469" width="1.1173%" height="15" fill="rgb(247,131,45)" fg:x="299" fg:w="14"/><text x="24.1127%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.12%)</title><rect x="23.8627%" y="453" width="1.1173%" height="15" fill="rgb(215,97,47)" fg:x="299" fg:w="14"/><text x="24.1127%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="24.0223%" y="437" width="0.9577%" height="15" fill="rgb(233,143,12)" fg:x="301" fg:w="12"/><text x="24.2723%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="24.1820%" y="421" width="0.7981%" height="15" fill="rgb(222,57,17)" fg:x="303" fg:w="10"/><text x="24.4320%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="24.4214%" y="405" width="0.5587%" height="15" fill="rgb(214,119,38)" fg:x="306" fg:w="7"/><text x="24.6714%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="24.4214%" y="389" width="0.5587%" height="15" fill="rgb(217,28,47)" fg:x="306" fg:w="7"/><text x="24.6714%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="24.5012%" y="373" width="0.4789%" height="15" fill="rgb(231,14,52)" fg:x="307" fg:w="6"/><text x="24.7512%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="24.5810%" y="357" width="0.3990%" height="15" fill="rgb(220,158,18)" fg:x="308" fg:w="5"/><text x="24.8310%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="24.8204%" y="341" width="0.1596%" height="15" fill="rgb(222,143,46)" fg:x="311" fg:w="2"/><text x="25.0704%" y="351.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="24.9800%" y="629" width="0.0798%" height="15" fill="rgb(227,165,5)" fg:x="313" fg:w="1"/><text x="25.2300%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="24.9800%" y="613" width="0.0798%" height="15" fill="rgb(216,222,49)" fg:x="313" fg:w="1"/><text x="25.2300%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="24.9800%" y="597" width="0.0798%" height="15" fill="rgb(238,73,39)" fg:x="313" fg:w="1"/><text x="25.2300%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="24.9800%" y="581" width="0.0798%" height="15" fill="rgb(252,115,9)" fg:x="313" fg:w="1"/><text x="25.2300%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.9800%" y="565" width="0.0798%" height="15" fill="rgb(238,202,4)" fg:x="313" fg:w="1"/><text x="25.2300%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="24.9800%" y="549" width="0.0798%" height="15" fill="rgb(252,153,44)" fg:x="313" fg:w="1"/><text x="25.2300%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="25.1397%" y="581" width="0.0798%" height="15" fill="rgb(235,128,27)" fg:x="315" fg:w="1"/><text x="25.3897%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="25.1397%" y="565" width="0.0798%" height="15" fill="rgb(221,121,47)" fg:x="315" fg:w="1"/><text x="25.3897%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.2195%" y="453" width="0.0798%" height="15" fill="rgb(247,211,47)" fg:x="316" fg:w="1"/><text x="25.4695%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.2195%" y="437" width="0.0798%" height="15" fill="rgb(252,47,49)" fg:x="316" fg:w="1"/><text x="25.4695%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="25.2195%" y="421" width="0.0798%" height="15" fill="rgb(219,119,53)" fg:x="316" fg:w="1"/><text x="25.4695%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="25.2195%" y="405" width="0.0798%" height="15" fill="rgb(243,165,53)" fg:x="316" fg:w="1"/><text x="25.4695%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="25.2195%" y="389" width="0.0798%" height="15" fill="rgb(230,12,35)" fg:x="316" fg:w="1"/><text x="25.4695%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="25.2195%" y="373" width="0.0798%" height="15" fill="rgb(239,57,49)" fg:x="316" fg:w="1"/><text x="25.4695%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.2195%" y="357" width="0.0798%" height="15" fill="rgb(231,154,7)" fg:x="316" fg:w="1"/><text x="25.4695%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.2195%" y="341" width="0.0798%" height="15" fill="rgb(248,81,34)" fg:x="316" fg:w="1"/><text x="25.4695%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.2195%" y="325" width="0.0798%" height="15" fill="rgb(247,9,5)" fg:x="316" fg:w="1"/><text x="25.4695%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="25.2195%" y="309" width="0.0798%" height="15" fill="rgb(228,172,27)" fg:x="316" fg:w="1"/><text x="25.4695%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.2195%" y="293" width="0.0798%" height="15" fill="rgb(230,57,44)" fg:x="316" fg:w="1"/><text x="25.4695%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2195%" y="277" width="0.0798%" height="15" fill="rgb(249,35,22)" fg:x="316" fg:w="1"/><text x="25.4695%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="25.1397%" y="597" width="0.2394%" height="15" fill="rgb(250,137,27)" fg:x="315" fg:w="3"/><text x="25.3897%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="25.2195%" y="581" width="0.1596%" height="15" fill="rgb(251,57,31)" fg:x="316" fg:w="2"/><text x="25.4695%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="25.2195%" y="565" width="0.1596%" height="15" fill="rgb(238,60,0)" fg:x="316" fg:w="2"/><text x="25.4695%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="25.2195%" y="549" width="0.1596%" height="15" fill="rgb(242,185,39)" fg:x="316" fg:w="2"/><text x="25.4695%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="25.2195%" y="533" width="0.1596%" height="15" fill="rgb(240,63,43)" fg:x="316" fg:w="2"/><text x="25.4695%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="25.2195%" y="517" width="0.1596%" height="15" fill="rgb(236,155,6)" fg:x="316" fg:w="2"/><text x="25.4695%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="25.2195%" y="501" width="0.1596%" height="15" fill="rgb(215,11,29)" fg:x="316" fg:w="2"/><text x="25.4695%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="25.2195%" y="485" width="0.1596%" height="15" fill="rgb(228,180,48)" fg:x="316" fg:w="2"/><text x="25.4695%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="25.2195%" y="469" width="0.1596%" height="15" fill="rgb(241,102,12)" fg:x="316" fg:w="2"/><text x="25.4695%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.2993%" y="453" width="0.0798%" height="15" fill="rgb(246,213,4)" fg:x="317" fg:w="1"/><text x="25.5493%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="25.2993%" y="437" width="0.0798%" height="15" fill="rgb(218,134,35)" fg:x="317" fg:w="1"/><text x="25.5493%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.2993%" y="421" width="0.0798%" height="15" fill="rgb(251,117,35)" fg:x="317" fg:w="1"/><text x="25.5493%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3791%" y="501" width="0.0798%" height="15" fill="rgb(206,156,45)" fg:x="318" fg:w="1"/><text x="25.6291%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3791%" y="485" width="0.0798%" height="15" fill="rgb(218,52,27)" fg:x="318" fg:w="1"/><text x="25.6291%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.3791%" y="469" width="0.0798%" height="15" fill="rgb(238,83,36)" fg:x="318" fg:w="1"/><text x="25.6291%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.3791%" y="549" width="0.1596%" height="15" fill="rgb(218,53,43)" fg:x="318" fg:w="2"/><text x="25.6291%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.3791%" y="533" width="0.1596%" height="15" fill="rgb(239,54,39)" fg:x="318" fg:w="2"/><text x="25.6291%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.3791%" y="517" width="0.1596%" height="15" fill="rgb(212,198,13)" fg:x="318" fg:w="2"/><text x="25.6291%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.4589%" y="501" width="0.0798%" height="15" fill="rgb(234,54,46)" fg:x="319" fg:w="1"/><text x="25.7089%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.4589%" y="485" width="0.0798%" height="15" fill="rgb(217,120,7)" fg:x="319" fg:w="1"/><text x="25.7089%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.4589%" y="469" width="0.0798%" height="15" fill="rgb(246,39,15)" fg:x="319" fg:w="1"/><text x="25.7089%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.4589%" y="453" width="0.0798%" height="15" fill="rgb(242,143,31)" fg:x="319" fg:w="1"/><text x="25.7089%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.4589%" y="437" width="0.0798%" height="15" fill="rgb(252,60,24)" fg:x="319" fg:w="1"/><text x="25.7089%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.4589%" y="421" width="0.0798%" height="15" fill="rgb(249,220,7)" fg:x="319" fg:w="1"/><text x="25.7089%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.4589%" y="405" width="0.0798%" height="15" fill="rgb(236,67,13)" fg:x="319" fg:w="1"/><text x="25.7089%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.4589%" y="389" width="0.0798%" height="15" fill="rgb(210,62,39)" fg:x="319" fg:w="1"/><text x="25.7089%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.4589%" y="373" width="0.0798%" height="15" fill="rgb(219,122,53)" fg:x="319" fg:w="1"/><text x="25.7089%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.4589%" y="357" width="0.0798%" height="15" fill="rgb(218,87,25)" fg:x="319" fg:w="1"/><text x="25.7089%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.4589%" y="341" width="0.0798%" height="15" fill="rgb(234,179,48)" fg:x="319" fg:w="1"/><text x="25.7089%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4589%" y="325" width="0.0798%" height="15" fill="rgb(248,90,0)" fg:x="319" fg:w="1"/><text x="25.7089%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="25.3791%" y="597" width="0.2394%" height="15" fill="rgb(207,228,37)" fg:x="318" fg:w="3"/><text x="25.6291%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="25.3791%" y="581" width="0.2394%" height="15" fill="rgb(235,214,15)" fg:x="318" fg:w="3"/><text x="25.6291%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.3791%" y="565" width="0.2394%" height="15" fill="rgb(210,144,39)" fg:x="318" fg:w="3"/><text x="25.6291%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5387%" y="549" width="0.0798%" height="15" fill="rgb(222,67,41)" fg:x="320" fg:w="1"/><text x="25.7887%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5387%" y="533" width="0.0798%" height="15" fill="rgb(205,35,37)" fg:x="320" fg:w="1"/><text x="25.7887%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5387%" y="517" width="0.0798%" height="15" fill="rgb(216,125,40)" fg:x="320" fg:w="1"/><text x="25.7887%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5387%" y="501" width="0.0798%" height="15" fill="rgb(228,227,20)" fg:x="320" fg:w="1"/><text x="25.7887%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.5387%" y="485" width="0.0798%" height="15" fill="rgb(242,173,45)" fg:x="320" fg:w="1"/><text x="25.7887%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5387%" y="469" width="0.0798%" height="15" fill="rgb(215,79,24)" fg:x="320" fg:w="1"/><text x="25.7887%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5387%" y="453" width="0.0798%" height="15" fill="rgb(238,164,38)" fg:x="320" fg:w="1"/><text x="25.7887%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5387%" y="437" width="0.0798%" height="15" fill="rgb(245,196,38)" fg:x="320" fg:w="1"/><text x="25.7887%" y="447.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="25.6185%" y="597" width="0.0798%" height="15" fill="rgb(231,217,29)" fg:x="321" fg:w="1"/><text x="25.8685%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="25.6185%" y="581" width="0.0798%" height="15" fill="rgb(245,6,4)" fg:x="321" fg:w="1"/><text x="25.8685%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.6185%" y="565" width="0.0798%" height="15" fill="rgb(214,76,49)" fg:x="321" fg:w="1"/><text x="25.8685%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6185%" y="549" width="0.0798%" height="15" fill="rgb(205,96,12)" fg:x="321" fg:w="1"/><text x="25.8685%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6185%" y="533" width="0.0798%" height="15" fill="rgb(243,131,4)" fg:x="321" fg:w="1"/><text x="25.8685%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6185%" y="517" width="0.0798%" height="15" fill="rgb(214,114,4)" fg:x="321" fg:w="1"/><text x="25.8685%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6185%" y="501" width="0.0798%" height="15" fill="rgb(234,215,15)" fg:x="321" fg:w="1"/><text x="25.8685%" y="511.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="25.6983%" y="597" width="0.0798%" height="15" fill="rgb(250,216,45)" fg:x="322" fg:w="1"/><text x="25.9483%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="25.6983%" y="581" width="0.0798%" height="15" fill="rgb(236,128,4)" fg:x="322" fg:w="1"/><text x="25.9483%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6983%" y="565" width="0.0798%" height="15" fill="rgb(234,50,33)" fg:x="322" fg:w="1"/><text x="25.9483%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="25.7781%" y="549" width="0.0798%" height="15" fill="rgb(253,131,37)" fg:x="323" fg:w="1"/><text x="26.0281%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.7781%" y="533" width="0.0798%" height="15" fill="rgb(218,55,27)" fg:x="323" fg:w="1"/><text x="26.0281%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="25.7781%" y="517" width="0.0798%" height="15" fill="rgb(241,220,28)" fg:x="323" fg:w="1"/><text x="26.0281%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="25.7781%" y="581" width="0.2394%" height="15" fill="rgb(241,90,48)" fg:x="323" fg:w="3"/><text x="26.0281%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="25.7781%" y="565" width="0.2394%" height="15" fill="rgb(216,43,37)" fg:x="323" fg:w="3"/><text x="26.0281%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="25.8579%" y="549" width="0.1596%" height="15" fill="rgb(207,173,9)" fg:x="324" fg:w="2"/><text x="26.1079%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.8579%" y="533" width="0.1596%" height="15" fill="rgb(240,126,30)" fg:x="324" fg:w="2"/><text x="26.1079%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="25.8579%" y="517" width="0.1596%" height="15" fill="rgb(228,178,53)" fg:x="324" fg:w="2"/><text x="26.1079%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.8579%" y="501" width="0.1596%" height="15" fill="rgb(217,33,4)" fg:x="324" fg:w="2"/><text x="26.1079%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="25.8579%" y="485" width="0.1596%" height="15" fill="rgb(206,124,34)" fg:x="324" fg:w="2"/><text x="26.1079%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.8579%" y="469" width="0.1596%" height="15" fill="rgb(208,122,53)" fg:x="324" fg:w="2"/><text x="26.1079%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="25.8579%" y="453" width="0.1596%" height="15" fill="rgb(215,202,26)" fg:x="324" fg:w="2"/><text x="26.1079%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="25.8579%" y="437" width="0.1596%" height="15" fill="rgb(232,198,31)" fg:x="324" fg:w="2"/><text x="26.1079%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.9377%" y="421" width="0.0798%" height="15" fill="rgb(222,23,35)" fg:x="325" fg:w="1"/><text x="26.1877%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="25.0599%" y="613" width="1.0375%" height="15" fill="rgb(242,27,53)" fg:x="314" fg:w="13"/><text x="25.3099%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="25.7781%" y="597" width="0.3192%" height="15" fill="rgb(210,216,42)" fg:x="323" fg:w="4"/><text x="26.0281%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="26.0176%" y="581" width="0.0798%" height="15" fill="rgb(234,39,38)" fg:x="326" fg:w="1"/><text x="26.2676%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0176%" y="565" width="0.0798%" height="15" fill="rgb(235,126,54)" fg:x="326" fg:w="1"/><text x="26.2676%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0176%" y="549" width="0.0798%" height="15" fill="rgb(235,150,33)" fg:x="326" fg:w="1"/><text x="26.2676%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="26.0974%" y="517" width="0.0798%" height="15" fill="rgb(249,49,53)" fg:x="327" fg:w="1"/><text x="26.3474%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.0974%" y="501" width="0.0798%" height="15" fill="rgb(238,60,50)" fg:x="327" fg:w="1"/><text x="26.3474%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.0974%" y="485" width="0.0798%" height="15" fill="rgb(210,5,2)" fg:x="327" fg:w="1"/><text x="26.3474%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0974%" y="469" width="0.0798%" height="15" fill="rgb(214,207,24)" fg:x="327" fg:w="1"/><text x="26.3474%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="26.0974%" y="565" width="0.1596%" height="15" fill="rgb(228,173,2)" fg:x="327" fg:w="2"/><text x="26.3474%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.0974%" y="549" width="0.1596%" height="15" fill="rgb(244,26,8)" fg:x="327" fg:w="2"/><text x="26.3474%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.0974%" y="533" width="0.1596%" height="15" fill="rgb(249,153,35)" fg:x="327" fg:w="2"/><text x="26.3474%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.1772%" y="517" width="0.0798%" height="15" fill="rgb(221,215,40)" fg:x="328" fg:w="1"/><text x="26.4272%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1772%" y="501" width="0.0798%" height="15" fill="rgb(238,106,35)" fg:x="328" fg:w="1"/><text x="26.4272%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.1772%" y="485" width="0.0798%" height="15" fill="rgb(207,195,21)" fg:x="328" fg:w="1"/><text x="26.4272%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1772%" y="469" width="0.0798%" height="15" fill="rgb(205,43,29)" fg:x="328" fg:w="1"/><text x="26.4272%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.1772%" y="453" width="0.0798%" height="15" fill="rgb(236,35,21)" fg:x="328" fg:w="1"/><text x="26.4272%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1772%" y="437" width="0.0798%" height="15" fill="rgb(244,74,8)" fg:x="328" fg:w="1"/><text x="26.4272%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.1772%" y="421" width="0.0798%" height="15" fill="rgb(241,229,7)" fg:x="328" fg:w="1"/><text x="26.4272%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2570%" y="549" width="0.0798%" height="15" fill="rgb(212,223,25)" fg:x="329" fg:w="1"/><text x="26.5070%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="26.3368%" y="549" width="0.0798%" height="15" fill="rgb(234,58,53)" fg:x="330" fg:w="1"/><text x="26.5868%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.3368%" y="533" width="0.0798%" height="15" fill="rgb(244,36,1)" fg:x="330" fg:w="1"/><text x="26.5868%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4166%" y="453" width="0.0798%" height="15" fill="rgb(222,40,54)" fg:x="331" fg:w="1"/><text x="26.6666%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4166%" y="437" width="0.0798%" height="15" fill="rgb(210,207,39)" fg:x="331" fg:w="1"/><text x="26.6666%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.4166%" y="517" width="0.1596%" height="15" fill="rgb(234,52,14)" fg:x="331" fg:w="2"/><text x="26.6666%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.4166%" y="501" width="0.1596%" height="15" fill="rgb(239,108,46)" fg:x="331" fg:w="2"/><text x="26.6666%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.4166%" y="485" width="0.1596%" height="15" fill="rgb(252,223,5)" fg:x="331" fg:w="2"/><text x="26.6666%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.4166%" y="469" width="0.1596%" height="15" fill="rgb(227,181,11)" fg:x="331" fg:w="2"/><text x="26.6666%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4964%" y="453" width="0.0798%" height="15" fill="rgb(248,126,40)" fg:x="332" fg:w="1"/><text x="26.7464%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4964%" y="437" width="0.0798%" height="15" fill="rgb(243,1,18)" fg:x="332" fg:w="1"/><text x="26.7464%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.4964%" y="421" width="0.0798%" height="15" fill="rgb(214,145,23)" fg:x="332" fg:w="1"/><text x="26.7464%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.4964%" y="405" width="0.0798%" height="15" fill="rgb(241,218,11)" fg:x="332" fg:w="1"/><text x="26.7464%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.4964%" y="389" width="0.0798%" height="15" fill="rgb(214,219,24)" fg:x="332" fg:w="1"/><text x="26.7464%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.4964%" y="373" width="0.0798%" height="15" fill="rgb(235,32,7)" fg:x="332" fg:w="1"/><text x="26.7464%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.4964%" y="357" width="0.0798%" height="15" fill="rgb(227,121,28)" fg:x="332" fg:w="1"/><text x="26.7464%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.4964%" y="341" width="0.0798%" height="15" fill="rgb(216,129,49)" fg:x="332" fg:w="1"/><text x="26.7464%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.4964%" y="325" width="0.0798%" height="15" fill="rgb(207,194,50)" fg:x="332" fg:w="1"/><text x="26.7464%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.4964%" y="309" width="0.0798%" height="15" fill="rgb(207,4,18)" fg:x="332" fg:w="1"/><text x="26.7464%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.4964%" y="293" width="0.0798%" height="15" fill="rgb(213,50,30)" fg:x="332" fg:w="1"/><text x="26.7464%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4964%" y="277" width="0.0798%" height="15" fill="rgb(208,77,22)" fg:x="332" fg:w="1"/><text x="26.7464%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="26.5762%" y="517" width="0.0798%" height="15" fill="rgb(244,204,34)" fg:x="333" fg:w="1"/><text x="26.8262%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.5762%" y="501" width="0.0798%" height="15" fill="rgb(230,20,17)" fg:x="333" fg:w="1"/><text x="26.8262%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.5762%" y="485" width="0.0798%" height="15" fill="rgb(237,83,15)" fg:x="333" fg:w="1"/><text x="26.8262%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.5762%" y="469" width="0.0798%" height="15" fill="rgb(221,109,25)" fg:x="333" fg:w="1"/><text x="26.8262%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.5762%" y="453" width="0.0798%" height="15" fill="rgb(205,194,52)" fg:x="333" fg:w="1"/><text x="26.8262%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="26.0974%" y="597" width="0.6385%" height="15" fill="rgb(244,173,54)" fg:x="327" fg:w="8"/><text x="26.3474%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="26.0974%" y="581" width="0.6385%" height="15" fill="rgb(227,181,18)" fg:x="327" fg:w="8"/><text x="26.3474%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="26.2570%" y="565" width="0.4789%" height="15" fill="rgb(238,36,30)" fg:x="329" fg:w="6"/><text x="26.5070%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="26.4166%" y="549" width="0.3192%" height="15" fill="rgb(254,85,0)" fg:x="331" fg:w="4"/><text x="26.6666%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="26.4166%" y="533" width="0.3192%" height="15" fill="rgb(247,63,33)" fg:x="331" fg:w="4"/><text x="26.6666%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.6560%" y="517" width="0.0798%" height="15" fill="rgb(220,7,54)" fg:x="334" fg:w="1"/><text x="26.9060%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.6560%" y="501" width="0.0798%" height="15" fill="rgb(238,227,21)" fg:x="334" fg:w="1"/><text x="26.9060%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.6560%" y="485" width="0.0798%" height="15" fill="rgb(237,29,31)" fg:x="334" fg:w="1"/><text x="26.9060%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.6560%" y="469" width="0.0798%" height="15" fill="rgb(211,21,50)" fg:x="334" fg:w="1"/><text x="26.9060%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.6560%" y="453" width="0.0798%" height="15" fill="rgb(239,119,2)" fg:x="334" fg:w="1"/><text x="26.9060%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.6560%" y="437" width="0.0798%" height="15" fill="rgb(250,2,39)" fg:x="334" fg:w="1"/><text x="26.9060%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.6560%" y="421" width="0.0798%" height="15" fill="rgb(244,46,53)" fg:x="334" fg:w="1"/><text x="26.9060%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.6560%" y="405" width="0.0798%" height="15" fill="rgb(209,21,19)" fg:x="334" fg:w="1"/><text x="26.9060%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.6560%" y="389" width="0.0798%" height="15" fill="rgb(236,145,4)" fg:x="334" fg:w="1"/><text x="26.9060%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.6560%" y="373" width="0.0798%" height="15" fill="rgb(220,133,36)" fg:x="334" fg:w="1"/><text x="26.9060%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.6560%" y="357" width="0.0798%" height="15" fill="rgb(244,18,3)" fg:x="334" fg:w="1"/><text x="26.9060%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="26.7358%" y="597" width="0.0798%" height="15" fill="rgb(232,171,48)" fg:x="335" fg:w="1"/><text x="26.9858%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.7358%" y="581" width="0.0798%" height="15" fill="rgb(223,223,53)" fg:x="335" fg:w="1"/><text x="26.9858%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.7358%" y="565" width="0.0798%" height="15" fill="rgb(246,92,13)" fg:x="335" fg:w="1"/><text x="26.9858%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="26.7358%" y="549" width="0.0798%" height="15" fill="rgb(229,171,10)" fg:x="335" fg:w="1"/><text x="26.9858%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="26.8156%" y="581" width="0.1596%" height="15" fill="rgb(213,131,26)" fg:x="336" fg:w="2"/><text x="27.0656%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.8156%" y="565" width="0.1596%" height="15" fill="rgb(242,87,54)" fg:x="336" fg:w="2"/><text x="27.0656%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.8955%" y="549" width="0.0798%" height="15" fill="rgb(237,21,35)" fg:x="337" fg:w="1"/><text x="27.1455%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="26.8955%" y="533" width="0.0798%" height="15" fill="rgb(253,13,47)" fg:x="337" fg:w="1"/><text x="27.1455%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.8955%" y="517" width="0.0798%" height="15" fill="rgb(215,122,49)" fg:x="337" fg:w="1"/><text x="27.1455%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="26.8156%" y="597" width="0.2394%" height="15" fill="rgb(209,179,30)" fg:x="336" fg:w="3"/><text x="27.0656%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="26.9753%" y="581" width="0.0798%" height="15" fill="rgb(235,100,24)" fg:x="338" fg:w="1"/><text x="27.2253%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.9753%" y="565" width="0.0798%" height="15" fill="rgb(209,67,24)" fg:x="338" fg:w="1"/><text x="27.2253%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="26.9753%" y="549" width="0.0798%" height="15" fill="rgb(206,74,32)" fg:x="338" fg:w="1"/><text x="27.2253%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.9753%" y="533" width="0.0798%" height="15" fill="rgb(212,45,25)" fg:x="338" fg:w="1"/><text x="27.2253%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9753%" y="517" width="0.0798%" height="15" fill="rgb(239,26,3)" fg:x="338" fg:w="1"/><text x="27.2253%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.1349%" y="501" width="0.0798%" height="15" fill="rgb(218,36,15)" fg:x="340" fg:w="1"/><text x="27.3849%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.1349%" y="485" width="0.0798%" height="15" fill="rgb(206,108,24)" fg:x="340" fg:w="1"/><text x="27.3849%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.1349%" y="469" width="0.0798%" height="15" fill="rgb(234,204,42)" fg:x="340" fg:w="1"/><text x="27.3849%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.2147%" y="501" width="0.0798%" height="15" fill="rgb(229,2,11)" fg:x="341" fg:w="1"/><text x="27.4647%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.2945%" y="437" width="0.0798%" height="15" fill="rgb(221,20,48)" fg:x="342" fg:w="1"/><text x="27.5445%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="27.2945%" y="501" width="0.1596%" height="15" fill="rgb(244,164,10)" fg:x="342" fg:w="2"/><text x="27.5445%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="27.2945%" y="485" width="0.1596%" height="15" fill="rgb(243,229,2)" fg:x="342" fg:w="2"/><text x="27.5445%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="27.2945%" y="469" width="0.1596%" height="15" fill="rgb(232,131,37)" fg:x="342" fg:w="2"/><text x="27.5445%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="27.2945%" y="453" width="0.1596%" height="15" fill="rgb(217,156,11)" fg:x="342" fg:w="2"/><text x="27.5445%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.3743%" y="437" width="0.0798%" height="15" fill="rgb(239,99,48)" fg:x="343" fg:w="1"/><text x="27.6243%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="27.0551%" y="549" width="0.4789%" height="15" fill="rgb(231,209,9)" fg:x="339" fg:w="6"/><text x="27.3051%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="27.1349%" y="533" width="0.3990%" height="15" fill="rgb(254,97,27)" fg:x="340" fg:w="5"/><text x="27.3849%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="27.1349%" y="517" width="0.3990%" height="15" fill="rgb(223,151,38)" fg:x="340" fg:w="5"/><text x="27.3849%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.4541%" y="501" width="0.0798%" height="15" fill="rgb(219,206,35)" fg:x="344" fg:w="1"/><text x="27.7041%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.4541%" y="485" width="0.0798%" height="15" fill="rgb(216,130,31)" fg:x="344" fg:w="1"/><text x="27.7041%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.4541%" y="469" width="0.0798%" height="15" fill="rgb(251,97,34)" fg:x="344" fg:w="1"/><text x="27.7041%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.4541%" y="453" width="0.0798%" height="15" fill="rgb(246,159,47)" fg:x="344" fg:w="1"/><text x="27.7041%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.5339%" y="469" width="0.1596%" height="15" fill="rgb(232,87,10)" fg:x="345" fg:w="2"/><text x="27.7839%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.5339%" y="453" width="0.1596%" height="15" fill="rgb(249,1,37)" fg:x="345" fg:w="2"/><text x="27.7839%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.6137%" y="437" width="0.0798%" height="15" fill="rgb(239,135,14)" fg:x="346" fg:w="1"/><text x="27.8637%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.5339%" y="501" width="0.2394%" height="15" fill="rgb(253,116,46)" fg:x="345" fg:w="3"/><text x="27.7839%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.5339%" y="485" width="0.2394%" height="15" fill="rgb(222,217,37)" fg:x="345" fg:w="3"/><text x="27.7839%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.6935%" y="469" width="0.0798%" height="15" fill="rgb(252,96,8)" fg:x="347" fg:w="1"/><text x="27.9435%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.6935%" y="453" width="0.0798%" height="15" fill="rgb(254,103,41)" fg:x="347" fg:w="1"/><text x="27.9435%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.6935%" y="437" width="0.0798%" height="15" fill="rgb(218,213,19)" fg:x="347" fg:w="1"/><text x="27.9435%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.6935%" y="421" width="0.0798%" height="15" fill="rgb(253,95,21)" fg:x="347" fg:w="1"/><text x="27.9435%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.6935%" y="405" width="0.0798%" height="15" fill="rgb(229,26,28)" fg:x="347" fg:w="1"/><text x="27.9435%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.6935%" y="389" width="0.0798%" height="15" fill="rgb(230,129,16)" fg:x="347" fg:w="1"/><text x="27.9435%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.6935%" y="373" width="0.0798%" height="15" fill="rgb(236,126,17)" fg:x="347" fg:w="1"/><text x="27.9435%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.6935%" y="357" width="0.0798%" height="15" fill="rgb(209,33,33)" fg:x="347" fg:w="1"/><text x="27.9435%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.6935%" y="341" width="0.0798%" height="15" fill="rgb(227,85,29)" fg:x="347" fg:w="1"/><text x="27.9435%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.6935%" y="325" width="0.0798%" height="15" fill="rgb(241,53,46)" fg:x="347" fg:w="1"/><text x="27.9435%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.6935%" y="309" width="0.0798%" height="15" fill="rgb(228,167,53)" fg:x="347" fg:w="1"/><text x="27.9435%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6935%" y="293" width="0.0798%" height="15" fill="rgb(238,195,45)" fg:x="347" fg:w="1"/><text x="27.9435%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7733%" y="405" width="0.0798%" height="15" fill="rgb(252,124,45)" fg:x="348" fg:w="1"/><text x="28.0233%" y="415.50"></text></g><g><title>plugins_core::build::Build::holding (36 samples, 2.87%)</title><rect x="25.0599%" y="629" width="2.8731%" height="15" fill="rgb(251,38,35)" fg:x="314" fg:w="36"/><text x="25.3099%" y="639.50">pl..</text></g><g><title>plugins_core::tools::set_container (23 samples, 1.84%)</title><rect x="26.0974%" y="613" width="1.8356%" height="15" fill="rgb(227,33,2)" fg:x="327" fg:w="23"/><text x="26.3474%" y="623.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="27.0551%" y="597" width="0.8779%" height="15" fill="rgb(223,157,46)" fg:x="339" fg:w="11"/><text x="27.3051%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="27.0551%" y="581" width="0.8779%" height="15" fill="rgb(222,78,41)" fg:x="339" fg:w="11"/><text x="27.3051%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (11 samples, 0.88%)</title><rect x="27.0551%" y="565" width="0.8779%" height="15" fill="rgb(248,176,11)" fg:x="339" fg:w="11"/><text x="27.3051%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="27.5339%" y="549" width="0.3990%" height="15" fill="rgb(241,221,18)" fg:x="345" fg:w="5"/><text x="27.7839%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="27.5339%" y="533" width="0.3990%" height="15" fill="rgb(218,85,22)" fg:x="345" fg:w="5"/><text x="27.7839%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="27.5339%" y="517" width="0.3990%" height="15" fill="rgb(222,223,7)" fg:x="345" fg:w="5"/><text x="27.7839%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.7733%" y="501" width="0.1596%" height="15" fill="rgb(254,59,39)" fg:x="348" fg:w="2"/><text x="28.0233%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.7733%" y="485" width="0.1596%" height="15" fill="rgb(247,100,27)" fg:x="348" fg:w="2"/><text x="28.0233%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.7733%" y="469" width="0.1596%" height="15" fill="rgb(237,207,10)" fg:x="348" fg:w="2"/><text x="28.0233%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.7733%" y="453" width="0.1596%" height="15" fill="rgb(220,121,28)" fg:x="348" fg:w="2"/><text x="28.0233%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="27.7733%" y="437" width="0.1596%" height="15" fill="rgb(213,223,20)" fg:x="348" fg:w="2"/><text x="28.0233%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.7733%" y="421" width="0.1596%" height="15" fill="rgb(205,121,27)" fg:x="348" fg:w="2"/><text x="28.0233%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.8532%" y="405" width="0.0798%" height="15" fill="rgb(253,24,53)" fg:x="349" fg:w="1"/><text x="28.1032%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8532%" y="389" width="0.0798%" height="15" fill="rgb(224,224,47)" fg:x="349" fg:w="1"/><text x="28.1032%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.8532%" y="373" width="0.0798%" height="15" fill="rgb(250,125,36)" fg:x="349" fg:w="1"/><text x="28.1032%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.8532%" y="357" width="0.0798%" height="15" fill="rgb(240,144,38)" fg:x="349" fg:w="1"/><text x="28.1032%" y="367.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="27.9330%" y="629" width="0.0798%" height="15" fill="rgb(250,15,50)" fg:x="350" fg:w="1"/><text x="28.1830%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="27.9330%" y="613" width="0.0798%" height="15" fill="rgb(210,24,26)" fg:x="350" fg:w="1"/><text x="28.1830%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.9330%" y="597" width="0.0798%" height="15" fill="rgb(234,53,53)" fg:x="350" fg:w="1"/><text x="28.1830%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.9330%" y="581" width="0.0798%" height="15" fill="rgb(208,108,28)" fg:x="350" fg:w="1"/><text x="28.1830%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.9330%" y="565" width="0.0798%" height="15" fill="rgb(227,143,7)" fg:x="350" fg:w="1"/><text x="28.1830%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.9330%" y="549" width="0.0798%" height="15" fill="rgb(238,189,38)" fg:x="350" fg:w="1"/><text x="28.1830%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.9330%" y="533" width="0.0798%" height="15" fill="rgb(222,69,15)" fg:x="350" fg:w="1"/><text x="28.1830%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.9330%" y="517" width="0.0798%" height="15" fill="rgb(213,169,7)" fg:x="350" fg:w="1"/><text x="28.1830%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.0128%" y="565" width="0.0798%" height="15" fill="rgb(251,219,4)" fg:x="351" fg:w="1"/><text x="28.2628%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.0128%" y="549" width="0.0798%" height="15" fill="rgb(241,55,40)" fg:x="351" fg:w="1"/><text x="28.2628%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="28.0128%" y="533" width="0.0798%" height="15" fill="rgb(243,57,30)" fg:x="351" fg:w="1"/><text x="28.2628%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.0128%" y="517" width="0.0798%" height="15" fill="rgb(234,50,30)" fg:x="351" fg:w="1"/><text x="28.2628%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.0926%" y="501" width="0.0798%" height="15" fill="rgb(239,23,42)" fg:x="352" fg:w="1"/><text x="28.3426%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.0926%" y="485" width="0.0798%" height="15" fill="rgb(217,38,19)" fg:x="352" fg:w="1"/><text x="28.3426%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.0926%" y="469" width="0.0798%" height="15" fill="rgb(215,179,16)" fg:x="352" fg:w="1"/><text x="28.3426%" y="479.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="28.0128%" y="629" width="0.2394%" height="15" fill="rgb(254,21,37)" fg:x="351" fg:w="3"/><text x="28.2628%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="28.0128%" y="613" width="0.2394%" height="15" fill="rgb(219,207,48)" fg:x="351" fg:w="3"/><text x="28.2628%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="28.0128%" y="597" width="0.2394%" height="15" fill="rgb(227,225,41)" fg:x="351" fg:w="3"/><text x="28.2628%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="28.0128%" y="581" width="0.2394%" height="15" fill="rgb(223,130,1)" fg:x="351" fg:w="3"/><text x="28.2628%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="28.0926%" y="565" width="0.1596%" height="15" fill="rgb(249,54,42)" fg:x="352" fg:w="2"/><text x="28.3426%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="28.0926%" y="549" width="0.1596%" height="15" fill="rgb(248,69,25)" fg:x="352" fg:w="2"/><text x="28.3426%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="28.0926%" y="533" width="0.1596%" height="15" fill="rgb(234,21,32)" fg:x="352" fg:w="2"/><text x="28.3426%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="28.0926%" y="517" width="0.1596%" height="15" fill="rgb(252,136,6)" fg:x="352" fg:w="2"/><text x="28.3426%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="28.1724%" y="501" width="0.0798%" height="15" fill="rgb(245,87,12)" fg:x="353" fg:w="1"/><text x="28.4224%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="28.1724%" y="485" width="0.0798%" height="15" fill="rgb(208,12,15)" fg:x="353" fg:w="1"/><text x="28.4224%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="28.1724%" y="469" width="0.0798%" height="15" fill="rgb(250,98,2)" fg:x="353" fg:w="1"/><text x="28.4224%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="28.1724%" y="453" width="0.0798%" height="15" fill="rgb(205,213,15)" fg:x="353" fg:w="1"/><text x="28.4224%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="28.3320%" y="581" width="0.0798%" height="15" fill="rgb(248,192,44)" fg:x="355" fg:w="1"/><text x="28.5820%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="28.3320%" y="565" width="0.0798%" height="15" fill="rgb(221,89,17)" fg:x="355" fg:w="1"/><text x="28.5820%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.3320%" y="549" width="0.0798%" height="15" fill="rgb(209,55,3)" fg:x="355" fg:w="1"/><text x="28.5820%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="28.3320%" y="597" width="0.1596%" height="15" fill="rgb(247,23,45)" fg:x="355" fg:w="2"/><text x="28.5820%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="28.4118%" y="581" width="0.0798%" height="15" fill="rgb(235,152,23)" fg:x="356" fg:w="1"/><text x="28.6618%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="28.4118%" y="565" width="0.0798%" height="15" fill="rgb(244,63,13)" fg:x="356" fg:w="1"/><text x="28.6618%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="28.4118%" y="549" width="0.0798%" height="15" fill="rgb(227,30,37)" fg:x="356" fg:w="1"/><text x="28.6618%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.4118%" y="533" width="0.0798%" height="15" fill="rgb(224,49,42)" fg:x="356" fg:w="1"/><text x="28.6618%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.4118%" y="517" width="0.0798%" height="15" fill="rgb(218,129,5)" fg:x="356" fg:w="1"/><text x="28.6618%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="28.4118%" y="501" width="0.0798%" height="15" fill="rgb(240,199,54)" fg:x="356" fg:w="1"/><text x="28.6618%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.4118%" y="485" width="0.0798%" height="15" fill="rgb(234,31,13)" fg:x="356" fg:w="1"/><text x="28.6618%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.4916%" y="549" width="0.0798%" height="15" fill="rgb(219,73,54)" fg:x="357" fg:w="1"/><text x="28.7416%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.4916%" y="533" width="0.0798%" height="15" fill="rgb(251,162,10)" fg:x="357" fg:w="1"/><text x="28.7416%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="28.4916%" y="517" width="0.0798%" height="15" fill="rgb(240,138,47)" fg:x="357" fg:w="1"/><text x="28.7416%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="28.4916%" y="501" width="0.0798%" height="15" fill="rgb(216,138,26)" fg:x="357" fg:w="1"/><text x="28.7416%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.5714%" y="485" width="0.0798%" height="15" fill="rgb(243,17,35)" fg:x="358" fg:w="1"/><text x="28.8214%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.5714%" y="469" width="0.0798%" height="15" fill="rgb(241,60,18)" fg:x="358" fg:w="1"/><text x="28.8214%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="28.4916%" y="597" width="0.2394%" height="15" fill="rgb(234,2,44)" fg:x="357" fg:w="3"/><text x="28.7416%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="28.4916%" y="581" width="0.2394%" height="15" fill="rgb(225,225,33)" fg:x="357" fg:w="3"/><text x="28.7416%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.4916%" y="565" width="0.2394%" height="15" fill="rgb(234,50,31)" fg:x="357" fg:w="3"/><text x="28.7416%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.5714%" y="549" width="0.1596%" height="15" fill="rgb(249,6,25)" fg:x="358" fg:w="2"/><text x="28.8214%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.5714%" y="533" width="0.1596%" height="15" fill="rgb(241,5,17)" fg:x="358" fg:w="2"/><text x="28.8214%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.5714%" y="517" width="0.1596%" height="15" fill="rgb(207,116,10)" fg:x="358" fg:w="2"/><text x="28.8214%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.5714%" y="501" width="0.1596%" height="15" fill="rgb(222,128,18)" fg:x="358" fg:w="2"/><text x="28.8214%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.6512%" y="485" width="0.0798%" height="15" fill="rgb(229,109,25)" fg:x="359" fg:w="1"/><text x="28.9012%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.6512%" y="469" width="0.0798%" height="15" fill="rgb(222,102,25)" fg:x="359" fg:w="1"/><text x="28.9012%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.6512%" y="453" width="0.0798%" height="15" fill="rgb(239,211,5)" fg:x="359" fg:w="1"/><text x="28.9012%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.6512%" y="437" width="0.0798%" height="15" fill="rgb(223,136,26)" fg:x="359" fg:w="1"/><text x="28.9012%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.7310%" y="549" width="0.0798%" height="15" fill="rgb(227,30,15)" fg:x="360" fg:w="1"/><text x="28.9810%" y="559.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="28.7310%" y="597" width="0.1596%" height="15" fill="rgb(247,76,4)" fg:x="360" fg:w="2"/><text x="28.9810%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="28.7310%" y="581" width="0.1596%" height="15" fill="rgb(245,38,48)" fg:x="360" fg:w="2"/><text x="28.9810%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.7310%" y="565" width="0.1596%" height="15" fill="rgb(210,220,14)" fg:x="360" fg:w="2"/><text x="28.9810%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.8109%" y="549" width="0.0798%" height="15" fill="rgb(224,60,51)" fg:x="361" fg:w="1"/><text x="29.0609%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.8109%" y="533" width="0.0798%" height="15" fill="rgb(212,133,49)" fg:x="361" fg:w="1"/><text x="29.0609%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="28.8907%" y="581" width="0.1596%" height="15" fill="rgb(231,39,22)" fg:x="362" fg:w="2"/><text x="29.1407%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.8907%" y="565" width="0.1596%" height="15" fill="rgb(236,173,22)" fg:x="362" fg:w="2"/><text x="29.1407%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.8907%" y="549" width="0.1596%" height="15" fill="rgb(210,70,0)" fg:x="362" fg:w="2"/><text x="29.1407%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.8907%" y="533" width="0.1596%" height="15" fill="rgb(215,170,11)" fg:x="362" fg:w="2"/><text x="29.1407%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.9705%" y="517" width="0.0798%" height="15" fill="rgb(220,154,28)" fg:x="363" fg:w="1"/><text x="29.2205%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.9705%" y="501" width="0.0798%" height="15" fill="rgb(240,160,41)" fg:x="363" fg:w="1"/><text x="29.2205%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="28.9705%" y="485" width="0.0798%" height="15" fill="rgb(243,215,41)" fg:x="363" fg:w="1"/><text x="29.2205%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="28.9705%" y="469" width="0.0798%" height="15" fill="rgb(214,208,31)" fg:x="363" fg:w="1"/><text x="29.2205%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.0503%" y="533" width="0.0798%" height="15" fill="rgb(247,57,22)" fg:x="364" fg:w="1"/><text x="29.3003%" y="543.50"></text></g><g><title>engine::identifiers::model::set_gid (4 samples, 0.32%)</title><rect x="28.8907%" y="597" width="0.3192%" height="15" fill="rgb(228,73,52)" fg:x="362" fg:w="4"/><text x="29.1407%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="29.0503%" y="581" width="0.1596%" height="15" fill="rgb(252,60,9)" fg:x="364" fg:w="2"/><text x="29.3003%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="29.0503%" y="565" width="0.1596%" height="15" fill="rgb(233,9,51)" fg:x="364" fg:w="2"/><text x="29.3003%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="29.0503%" y="549" width="0.1596%" height="15" fill="rgb(223,67,14)" fg:x="364" fg:w="2"/><text x="29.3003%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.1301%" y="533" width="0.0798%" height="15" fill="rgb(222,86,2)" fg:x="365" fg:w="1"/><text x="29.3801%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.1301%" y="517" width="0.0798%" height="15" fill="rgb(243,58,54)" fg:x="365" fg:w="1"/><text x="29.3801%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.1301%" y="501" width="0.0798%" height="15" fill="rgb(210,200,39)" fg:x="365" fg:w="1"/><text x="29.3801%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2099%" y="437" width="0.0798%" height="15" fill="rgb(238,135,9)" fg:x="366" fg:w="1"/><text x="29.4599%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2099%" y="421" width="0.0798%" height="15" fill="rgb(232,179,7)" fg:x="366" fg:w="1"/><text x="29.4599%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.2099%" y="405" width="0.0798%" height="15" fill="rgb(245,65,41)" fg:x="366" fg:w="1"/><text x="29.4599%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.2099%" y="389" width="0.0798%" height="15" fill="rgb(227,43,8)" fg:x="366" fg:w="1"/><text x="29.4599%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.2099%" y="373" width="0.0798%" height="15" fill="rgb(235,91,14)" fg:x="366" fg:w="1"/><text x="29.4599%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.2099%" y="357" width="0.0798%" height="15" fill="rgb(235,219,31)" fg:x="366" fg:w="1"/><text x="29.4599%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.2099%" y="341" width="0.0798%" height="15" fill="rgb(227,121,25)" fg:x="366" fg:w="1"/><text x="29.4599%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.2099%" y="325" width="0.0798%" height="15" fill="rgb(254,129,24)" fg:x="366" fg:w="1"/><text x="29.4599%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.2099%" y="309" width="0.0798%" height="15" fill="rgb(226,144,49)" fg:x="366" fg:w="1"/><text x="29.4599%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.2099%" y="293" width="0.0798%" height="15" fill="rgb(214,187,32)" fg:x="366" fg:w="1"/><text x="29.4599%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.2099%" y="277" width="0.0798%" height="15" fill="rgb(243,129,46)" fg:x="366" fg:w="1"/><text x="29.4599%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2099%" y="261" width="0.0798%" height="15" fill="rgb(221,185,35)" fg:x="366" fg:w="1"/><text x="29.4599%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.2099%" y="453" width="0.1596%" height="15" fill="rgb(205,0,32)" fg:x="366" fg:w="2"/><text x="29.4599%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2897%" y="437" width="0.0798%" height="15" fill="rgb(229,179,12)" fg:x="367" fg:w="1"/><text x="29.5397%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="28.3320%" y="613" width="1.1173%" height="15" fill="rgb(252,107,19)" fg:x="355" fg:w="14"/><text x="28.5820%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="29.2099%" y="597" width="0.2394%" height="15" fill="rgb(220,95,27)" fg:x="366" fg:w="3"/><text x="29.4599%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="29.2099%" y="581" width="0.2394%" height="15" fill="rgb(240,113,40)" fg:x="366" fg:w="3"/><text x="29.4599%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="29.2099%" y="565" width="0.2394%" height="15" fill="rgb(208,4,43)" fg:x="366" fg:w="3"/><text x="29.4599%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="29.2099%" y="549" width="0.2394%" height="15" fill="rgb(247,189,30)" fg:x="366" fg:w="3"/><text x="29.4599%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="29.2099%" y="533" width="0.2394%" height="15" fill="rgb(231,157,17)" fg:x="366" fg:w="3"/><text x="29.4599%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.2099%" y="517" width="0.2394%" height="15" fill="rgb(224,139,6)" fg:x="366" fg:w="3"/><text x="29.4599%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.2099%" y="501" width="0.2394%" height="15" fill="rgb(223,83,16)" fg:x="366" fg:w="3"/><text x="29.4599%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.2099%" y="485" width="0.2394%" height="15" fill="rgb(232,211,20)" fg:x="366" fg:w="3"/><text x="29.4599%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.2099%" y="469" width="0.2394%" height="15" fill="rgb(225,203,35)" fg:x="366" fg:w="3"/><text x="29.4599%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.3695%" y="453" width="0.0798%" height="15" fill="rgb(215,211,44)" fg:x="368" fg:w="1"/><text x="29.6195%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="29.4493%" y="517" width="0.0798%" height="15" fill="rgb(248,213,26)" fg:x="369" fg:w="1"/><text x="29.6993%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.4493%" y="501" width="0.0798%" height="15" fill="rgb(214,23,52)" fg:x="369" fg:w="1"/><text x="29.6993%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.4493%" y="485" width="0.0798%" height="15" fill="rgb(225,173,50)" fg:x="369" fg:w="1"/><text x="29.6993%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.4493%" y="469" width="0.0798%" height="15" fill="rgb(206,150,22)" fg:x="369" fg:w="1"/><text x="29.6993%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="29.4493%" y="565" width="0.1596%" height="15" fill="rgb(239,64,23)" fg:x="369" fg:w="2"/><text x="29.6993%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="29.4493%" y="549" width="0.1596%" height="15" fill="rgb(242,50,38)" fg:x="369" fg:w="2"/><text x="29.6993%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.4493%" y="533" width="0.1596%" height="15" fill="rgb(217,91,15)" fg:x="369" fg:w="2"/><text x="29.6993%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.5291%" y="517" width="0.0798%" height="15" fill="rgb(230,172,6)" fg:x="370" fg:w="1"/><text x="29.7791%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5291%" y="501" width="0.0798%" height="15" fill="rgb(221,98,26)" fg:x="370" fg:w="1"/><text x="29.7791%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.5291%" y="485" width="0.0798%" height="15" fill="rgb(227,210,45)" fg:x="370" fg:w="1"/><text x="29.7791%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5291%" y="469" width="0.0798%" height="15" fill="rgb(206,8,30)" fg:x="370" fg:w="1"/><text x="29.7791%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.5291%" y="453" width="0.0798%" height="15" fill="rgb(241,219,17)" fg:x="370" fg:w="1"/><text x="29.7791%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5291%" y="437" width="0.0798%" height="15" fill="rgb(247,121,29)" fg:x="370" fg:w="1"/><text x="29.7791%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.5291%" y="421" width="0.0798%" height="15" fill="rgb(219,169,49)" fg:x="370" fg:w="1"/><text x="29.7791%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5291%" y="405" width="0.0798%" height="15" fill="rgb(253,49,49)" fg:x="370" fg:w="1"/><text x="29.7791%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.5291%" y="389" width="0.0798%" height="15" fill="rgb(217,178,3)" fg:x="370" fg:w="1"/><text x="29.7791%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5291%" y="373" width="0.0798%" height="15" fill="rgb(234,73,37)" fg:x="370" fg:w="1"/><text x="29.7791%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.5291%" y="357" width="0.0798%" height="15" fill="rgb(250,98,22)" fg:x="370" fg:w="1"/><text x="29.7791%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="29.4493%" y="597" width="0.2394%" height="15" fill="rgb(220,108,37)" fg:x="369" fg:w="3"/><text x="29.6993%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="29.4493%" y="581" width="0.2394%" height="15" fill="rgb(225,168,10)" fg:x="369" fg:w="3"/><text x="29.6993%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="29.6089%" y="565" width="0.0798%" height="15" fill="rgb(247,215,21)" fg:x="371" fg:w="1"/><text x="29.8589%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.6089%" y="549" width="0.0798%" height="15" fill="rgb(253,189,31)" fg:x="371" fg:w="1"/><text x="29.8589%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.6089%" y="533" width="0.0798%" height="15" fill="rgb(241,54,22)" fg:x="371" fg:w="1"/><text x="29.8589%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6089%" y="517" width="0.0798%" height="15" fill="rgb(211,87,4)" fg:x="371" fg:w="1"/><text x="29.8589%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6089%" y="501" width="0.0798%" height="15" fill="rgb(245,112,24)" fg:x="371" fg:w="1"/><text x="29.8589%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6089%" y="485" width="0.0798%" height="15" fill="rgb(235,190,41)" fg:x="371" fg:w="1"/><text x="29.8589%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6089%" y="469" width="0.0798%" height="15" fill="rgb(214,89,8)" fg:x="371" fg:w="1"/><text x="29.8589%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6089%" y="453" width="0.0798%" height="15" fill="rgb(249,155,35)" fg:x="371" fg:w="1"/><text x="29.8589%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6089%" y="437" width="0.0798%" height="15" fill="rgb(249,88,26)" fg:x="371" fg:w="1"/><text x="29.8589%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.6089%" y="421" width="0.0798%" height="15" fill="rgb(232,56,8)" fg:x="371" fg:w="1"/><text x="29.8589%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.6089%" y="405" width="0.0798%" height="15" fill="rgb(240,95,3)" fg:x="371" fg:w="1"/><text x="29.8589%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.6089%" y="389" width="0.0798%" height="15" fill="rgb(222,44,28)" fg:x="371" fg:w="1"/><text x="29.8589%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.6089%" y="373" width="0.0798%" height="15" fill="rgb(234,16,30)" fg:x="371" fg:w="1"/><text x="29.8589%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.6089%" y="357" width="0.0798%" height="15" fill="rgb(223,26,17)" fg:x="371" fg:w="1"/><text x="29.8589%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.6089%" y="341" width="0.0798%" height="15" fill="rgb(239,187,47)" fg:x="371" fg:w="1"/><text x="29.8589%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.6089%" y="325" width="0.0798%" height="15" fill="rgb(247,102,50)" fg:x="371" fg:w="1"/><text x="29.8589%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.6089%" y="309" width="0.0798%" height="15" fill="rgb(231,216,22)" fg:x="371" fg:w="1"/><text x="29.8589%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.6089%" y="293" width="0.0798%" height="15" fill="rgb(216,201,26)" fg:x="371" fg:w="1"/><text x="29.8589%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.6089%" y="277" width="0.0798%" height="15" fill="rgb(214,186,23)" fg:x="371" fg:w="1"/><text x="29.8589%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.6887%" y="549" width="0.0798%" height="15" fill="rgb(235,184,4)" fg:x="372" fg:w="1"/><text x="29.9387%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.6887%" y="533" width="0.0798%" height="15" fill="rgb(244,46,17)" fg:x="372" fg:w="1"/><text x="29.9387%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.6887%" y="517" width="0.0798%" height="15" fill="rgb(248,74,46)" fg:x="372" fg:w="1"/><text x="29.9387%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6887%" y="501" width="0.0798%" height="15" fill="rgb(243,79,5)" fg:x="372" fg:w="1"/><text x="29.9387%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.6887%" y="485" width="0.0798%" height="15" fill="rgb(213,148,1)" fg:x="372" fg:w="1"/><text x="29.9387%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.7686%" y="453" width="0.0798%" height="15" fill="rgb(221,30,0)" fg:x="373" fg:w="1"/><text x="30.0186%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7686%" y="437" width="0.0798%" height="15" fill="rgb(207,85,29)" fg:x="373" fg:w="1"/><text x="30.0186%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.7686%" y="469" width="0.1596%" height="15" fill="rgb(239,31,46)" fg:x="373" fg:w="2"/><text x="30.0186%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.8484%" y="453" width="0.0798%" height="15" fill="rgb(219,6,1)" fg:x="374" fg:w="1"/><text x="30.0984%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.7686%" y="485" width="0.2394%" height="15" fill="rgb(229,90,29)" fg:x="373" fg:w="3"/><text x="30.0186%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9282%" y="469" width="0.0798%" height="15" fill="rgb(242,201,42)" fg:x="375" fg:w="1"/><text x="30.1782%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9282%" y="453" width="0.0798%" height="15" fill="rgb(243,80,54)" fg:x="375" fg:w="1"/><text x="30.1782%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.9282%" y="437" width="0.0798%" height="15" fill="rgb(223,166,15)" fg:x="375" fg:w="1"/><text x="30.1782%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.9282%" y="421" width="0.0798%" height="15" fill="rgb(238,78,27)" fg:x="375" fg:w="1"/><text x="30.1782%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.9282%" y="405" width="0.0798%" height="15" fill="rgb(235,28,43)" fg:x="375" fg:w="1"/><text x="30.1782%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.9282%" y="389" width="0.0798%" height="15" fill="rgb(240,210,28)" fg:x="375" fg:w="1"/><text x="30.1782%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.9282%" y="373" width="0.0798%" height="15" fill="rgb(253,6,46)" fg:x="375" fg:w="1"/><text x="30.1782%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.9282%" y="357" width="0.0798%" height="15" fill="rgb(250,159,47)" fg:x="375" fg:w="1"/><text x="30.1782%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.9282%" y="341" width="0.0798%" height="15" fill="rgb(216,139,2)" fg:x="375" fg:w="1"/><text x="30.1782%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.9282%" y="325" width="0.0798%" height="15" fill="rgb(221,124,44)" fg:x="375" fg:w="1"/><text x="30.1782%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.9282%" y="309" width="0.0798%" height="15" fill="rgb(205,37,22)" fg:x="375" fg:w="1"/><text x="30.1782%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.9282%" y="293" width="0.0798%" height="15" fill="rgb(250,55,8)" fg:x="375" fg:w="1"/><text x="30.1782%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="29.7686%" y="501" width="0.3192%" height="15" fill="rgb(215,83,48)" fg:x="373" fg:w="4"/><text x="30.0186%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.0080%" y="485" width="0.0798%" height="15" fill="rgb(253,2,32)" fg:x="376" fg:w="1"/><text x="30.2580%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.0080%" y="469" width="0.0798%" height="15" fill="rgb(236,67,28)" fg:x="376" fg:w="1"/><text x="30.2580%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.0080%" y="453" width="0.0798%" height="15" fill="rgb(252,55,15)" fg:x="376" fg:w="1"/><text x="30.2580%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.0080%" y="437" width="0.0798%" height="15" fill="rgb(243,173,17)" fg:x="376" fg:w="1"/><text x="30.2580%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.0080%" y="421" width="0.0798%" height="15" fill="rgb(215,212,13)" fg:x="376" fg:w="1"/><text x="30.2580%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0878%" y="405" width="0.0798%" height="15" fill="rgb(253,176,6)" fg:x="377" fg:w="1"/><text x="30.3378%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0878%" y="389" width="0.0798%" height="15" fill="rgb(236,105,26)" fg:x="377" fg:w="1"/><text x="30.3378%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="30.1676%" y="373" width="0.0798%" height="15" fill="rgb(239,226,32)" fg:x="378" fg:w="1"/><text x="30.4176%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.1676%" y="357" width="0.0798%" height="15" fill="rgb(236,104,51)" fg:x="378" fg:w="1"/><text x="30.4176%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (183 samples, 14.60%)</title><rect x="15.7223%" y="645" width="14.6049%" height="15" fill="rgb(220,172,33)" fg:x="197" fg:w="183"/><text x="15.9723%" y="655.50">plugins_core::build::B..</text></g><g><title>plugins_core::build::Build::occupying (26 samples, 2.08%)</title><rect x="28.2522%" y="629" width="2.0750%" height="15" fill="rgb(224,182,25)" fg:x="354" fg:w="26"/><text x="28.5022%" y="639.50">p..</text></g><g><title>plugins_core::tools::set_occupying (11 samples, 0.88%)</title><rect x="29.4493%" y="613" width="0.8779%" height="15" fill="rgb(236,184,24)" fg:x="369" fg:w="11"/><text x="29.6993%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (8 samples, 0.64%)</title><rect x="29.6887%" y="597" width="0.6385%" height="15" fill="rgb(241,221,14)" fg:x="372" fg:w="8"/><text x="29.9387%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="29.6887%" y="581" width="0.6385%" height="15" fill="rgb(227,146,5)" fg:x="372" fg:w="8"/><text x="29.9387%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="29.6887%" y="565" width="0.6385%" height="15" fill="rgb(214,15,23)" fg:x="372" fg:w="8"/><text x="29.9387%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="29.7686%" y="549" width="0.5587%" height="15" fill="rgb(233,157,31)" fg:x="373" fg:w="7"/><text x="30.0186%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="29.7686%" y="533" width="0.5587%" height="15" fill="rgb(211,27,52)" fg:x="373" fg:w="7"/><text x="30.0186%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="29.7686%" y="517" width="0.5587%" height="15" fill="rgb(212,223,15)" fg:x="373" fg:w="7"/><text x="30.0186%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="30.0878%" y="501" width="0.2394%" height="15" fill="rgb(254,211,0)" fg:x="377" fg:w="3"/><text x="30.3378%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="30.0878%" y="485" width="0.2394%" height="15" fill="rgb(205,43,38)" fg:x="377" fg:w="3"/><text x="30.3378%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="30.0878%" y="469" width="0.2394%" height="15" fill="rgb(242,206,46)" fg:x="377" fg:w="3"/><text x="30.3378%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="30.0878%" y="453" width="0.2394%" height="15" fill="rgb(220,221,12)" fg:x="377" fg:w="3"/><text x="30.3378%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="30.0878%" y="437" width="0.2394%" height="15" fill="rgb(217,156,35)" fg:x="377" fg:w="3"/><text x="30.3378%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="30.0878%" y="421" width="0.2394%" height="15" fill="rgb(207,181,49)" fg:x="377" fg:w="3"/><text x="30.3378%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.1676%" y="405" width="0.1596%" height="15" fill="rgb(235,103,47)" fg:x="378" fg:w="2"/><text x="30.4176%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.1676%" y="389" width="0.1596%" height="15" fill="rgb(222,63,28)" fg:x="378" fg:w="2"/><text x="30.4176%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.2474%" y="373" width="0.0798%" height="15" fill="rgb(244,137,21)" fg:x="379" fg:w="1"/><text x="30.4974%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2474%" y="357" width="0.0798%" height="15" fill="rgb(228,35,27)" fg:x="379" fg:w="1"/><text x="30.4974%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="30.3272%" y="645" width="0.0798%" height="15" fill="rgb(226,191,41)" fg:x="380" fg:w="1"/><text x="30.5772%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="30.4070%" y="597" width="0.0798%" height="15" fill="rgb(210,154,3)" fg:x="381" fg:w="1"/><text x="30.6570%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.4070%" y="581" width="0.0798%" height="15" fill="rgb(216,60,49)" fg:x="381" fg:w="1"/><text x="30.6570%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.4868%" y="597" width="0.0798%" height="15" fill="rgb(226,17,20)" fg:x="382" fg:w="1"/><text x="30.7368%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.4868%" y="581" width="0.0798%" height="15" fill="rgb(206,115,35)" fg:x="382" fg:w="1"/><text x="30.7368%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.4868%" y="565" width="0.0798%" height="15" fill="rgb(227,88,1)" fg:x="382" fg:w="1"/><text x="30.7368%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4868%" y="549" width="0.0798%" height="15" fill="rgb(230,222,24)" fg:x="382" fg:w="1"/><text x="30.7368%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4868%" y="533" width="0.0798%" height="15" fill="rgb(214,124,32)" fg:x="382" fg:w="1"/><text x="30.7368%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4868%" y="517" width="0.0798%" height="15" fill="rgb(240,41,36)" fg:x="382" fg:w="1"/><text x="30.7368%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4868%" y="501" width="0.0798%" height="15" fill="rgb(221,17,52)" fg:x="382" fg:w="1"/><text x="30.7368%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4868%" y="485" width="0.0798%" height="15" fill="rgb(252,70,16)" fg:x="382" fg:w="1"/><text x="30.7368%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.4868%" y="469" width="0.0798%" height="15" fill="rgb(250,177,4)" fg:x="382" fg:w="1"/><text x="30.7368%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.4868%" y="453" width="0.0798%" height="15" fill="rgb(240,188,47)" fg:x="382" fg:w="1"/><text x="30.7368%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.4868%" y="437" width="0.0798%" height="15" fill="rgb(215,92,12)" fg:x="382" fg:w="1"/><text x="30.7368%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4868%" y="421" width="0.0798%" height="15" fill="rgb(242,110,29)" fg:x="382" fg:w="1"/><text x="30.7368%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4868%" y="405" width="0.0798%" height="15" fill="rgb(208,211,26)" fg:x="382" fg:w="1"/><text x="30.7368%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.4868%" y="389" width="0.0798%" height="15" fill="rgb(244,147,6)" fg:x="382" fg:w="1"/><text x="30.7368%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.4868%" y="373" width="0.0798%" height="15" fill="rgb(211,130,42)" fg:x="382" fg:w="1"/><text x="30.7368%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.4868%" y="357" width="0.0798%" height="15" fill="rgb(220,63,1)" fg:x="382" fg:w="1"/><text x="30.7368%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.4868%" y="341" width="0.0798%" height="15" fill="rgb(241,212,30)" fg:x="382" fg:w="1"/><text x="30.7368%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.4868%" y="325" width="0.0798%" height="15" fill="rgb(233,153,17)" fg:x="382" fg:w="1"/><text x="30.7368%" y="335.50"></text></g><g><title>engine::identifiers::model::set_gid (2 samples, 0.16%)</title><rect x="30.5666%" y="597" width="0.1596%" height="15" fill="rgb(236,3,10)" fg:x="383" fg:w="2"/><text x="30.8166%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.6464%" y="581" width="0.0798%" height="15" fill="rgb(232,41,21)" fg:x="384" fg:w="1"/><text x="30.8964%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="30.6464%" y="565" width="0.0798%" height="15" fill="rgb(206,63,51)" fg:x="384" fg:w="1"/><text x="30.8964%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="30.6464%" y="549" width="0.0798%" height="15" fill="rgb(250,214,3)" fg:x="384" fg:w="1"/><text x="30.8964%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7263%" y="453" width="0.0798%" height="15" fill="rgb(254,89,27)" fg:x="385" fg:w="1"/><text x="30.9763%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7263%" y="437" width="0.0798%" height="15" fill="rgb(249,41,14)" fg:x="385" fg:w="1"/><text x="30.9763%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7263%" y="421" width="0.0798%" height="15" fill="rgb(221,196,51)" fg:x="385" fg:w="1"/><text x="30.9763%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8061%" y="437" width="0.0798%" height="15" fill="rgb(214,116,26)" fg:x="386" fg:w="1"/><text x="31.0561%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.56%)</title><rect x="30.4070%" y="645" width="0.5587%" height="15" fill="rgb(236,67,7)" fg:x="381" fg:w="7"/><text x="30.6570%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="30.4070%" y="629" width="0.5587%" height="15" fill="rgb(253,179,32)" fg:x="381" fg:w="7"/><text x="30.6570%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="30.4070%" y="613" width="0.5587%" height="15" fill="rgb(218,33,15)" fg:x="381" fg:w="7"/><text x="30.6570%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="30.7263%" y="597" width="0.2394%" height="15" fill="rgb(217,202,41)" fg:x="385" fg:w="3"/><text x="30.9763%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="30.7263%" y="581" width="0.2394%" height="15" fill="rgb(234,133,5)" fg:x="385" fg:w="3"/><text x="30.9763%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="30.7263%" y="565" width="0.2394%" height="15" fill="rgb(240,47,40)" fg:x="385" fg:w="3"/><text x="30.9763%" y="575.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="30.7263%" y="549" width="0.2394%" height="15" fill="rgb(234,166,26)" fg:x="385" fg:w="3"/><text x="30.9763%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="30.7263%" y="533" width="0.2394%" height="15" fill="rgb(244,125,51)" fg:x="385" fg:w="3"/><text x="30.9763%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="30.7263%" y="517" width="0.2394%" height="15" fill="rgb(229,171,11)" fg:x="385" fg:w="3"/><text x="30.9763%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="30.7263%" y="501" width="0.2394%" height="15" fill="rgb(224,38,45)" fg:x="385" fg:w="3"/><text x="30.9763%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="30.7263%" y="485" width="0.2394%" height="15" fill="rgb(237,27,7)" fg:x="385" fg:w="3"/><text x="30.9763%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="30.7263%" y="469" width="0.2394%" height="15" fill="rgb(216,52,7)" fg:x="385" fg:w="3"/><text x="30.9763%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="30.8061%" y="453" width="0.1596%" height="15" fill="rgb(243,11,11)" fg:x="386" fg:w="2"/><text x="31.0561%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="30.8859%" y="437" width="0.0798%" height="15" fill="rgb(253,167,20)" fg:x="387" fg:w="1"/><text x="31.1359%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.8859%" y="421" width="0.0798%" height="15" fill="rgb(215,207,5)" fg:x="387" fg:w="1"/><text x="31.1359%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9657%" y="581" width="0.0798%" height="15" fill="rgb(252,127,31)" fg:x="388" fg:w="1"/><text x="31.2157%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9657%" y="565" width="0.0798%" height="15" fill="rgb(209,106,27)" fg:x="388" fg:w="1"/><text x="31.2157%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.9657%" y="549" width="0.0798%" height="15" fill="rgb(214,220,18)" fg:x="388" fg:w="1"/><text x="31.2157%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.9657%" y="533" width="0.0798%" height="15" fill="rgb(237,89,12)" fg:x="388" fg:w="1"/><text x="31.2157%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.9657%" y="517" width="0.0798%" height="15" fill="rgb(209,167,36)" fg:x="388" fg:w="1"/><text x="31.2157%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.9657%" y="501" width="0.0798%" height="15" fill="rgb(243,45,22)" fg:x="388" fg:w="1"/><text x="31.2157%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.9657%" y="485" width="0.0798%" height="15" fill="rgb(239,2,46)" fg:x="388" fg:w="1"/><text x="31.2157%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.9657%" y="469" width="0.0798%" height="15" fill="rgb(241,101,0)" fg:x="388" fg:w="1"/><text x="31.2157%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.9657%" y="453" width="0.0798%" height="15" fill="rgb(244,34,31)" fg:x="388" fg:w="1"/><text x="31.2157%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.9657%" y="437" width="0.0798%" height="15" fill="rgb(248,23,22)" fg:x="388" fg:w="1"/><text x="31.2157%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.9657%" y="421" width="0.0798%" height="15" fill="rgb(218,27,48)" fg:x="388" fg:w="1"/><text x="31.2157%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9657%" y="405" width="0.0798%" height="15" fill="rgb(232,78,1)" fg:x="388" fg:w="1"/><text x="31.2157%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="30.9657%" y="613" width="0.2394%" height="15" fill="rgb(233,169,12)" fg:x="388" fg:w="3"/><text x="31.2157%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="30.9657%" y="597" width="0.2394%" height="15" fill="rgb(225,222,54)" fg:x="388" fg:w="3"/><text x="31.2157%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="31.0455%" y="581" width="0.1596%" height="15" fill="rgb(245,126,29)" fg:x="389" fg:w="2"/><text x="31.2955%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="31.0455%" y="565" width="0.1596%" height="15" fill="rgb(241,63,48)" fg:x="389" fg:w="2"/><text x="31.2955%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="31.0455%" y="549" width="0.1596%" height="15" fill="rgb(235,126,38)" fg:x="389" fg:w="2"/><text x="31.2955%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="31.0455%" y="533" width="0.1596%" height="15" fill="rgb(232,96,49)" fg:x="389" fg:w="2"/><text x="31.2955%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.1253%" y="517" width="0.0798%" height="15" fill="rgb(211,146,40)" fg:x="390" fg:w="1"/><text x="31.3753%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.1253%" y="501" width="0.0798%" height="15" fill="rgb(247,93,44)" fg:x="390" fg:w="1"/><text x="31.3753%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.1253%" y="485" width="0.0798%" height="15" fill="rgb(251,41,49)" fg:x="390" fg:w="1"/><text x="31.3753%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.1253%" y="469" width="0.0798%" height="15" fill="rgb(218,155,12)" fg:x="390" fg:w="1"/><text x="31.3753%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.1253%" y="453" width="0.0798%" height="15" fill="rgb(221,161,30)" fg:x="390" fg:w="1"/><text x="31.3753%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="31.1253%" y="437" width="0.0798%" height="15" fill="rgb(221,179,11)" fg:x="390" fg:w="1"/><text x="31.3753%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="31.1253%" y="421" width="0.0798%" height="15" fill="rgb(224,170,48)" fg:x="390" fg:w="1"/><text x="31.3753%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="31.1253%" y="405" width="0.0798%" height="15" fill="rgb(223,117,5)" fg:x="390" fg:w="1"/><text x="31.3753%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="31.1253%" y="389" width="0.0798%" height="15" fill="rgb(209,52,20)" fg:x="390" fg:w="1"/><text x="31.3753%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.1253%" y="373" width="0.0798%" height="15" fill="rgb(209,19,41)" fg:x="390" fg:w="1"/><text x="31.3753%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.1253%" y="357" width="0.0798%" height="15" fill="rgb(210,177,12)" fg:x="390" fg:w="1"/><text x="31.3753%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.1253%" y="341" width="0.0798%" height="15" fill="rgb(211,159,37)" fg:x="390" fg:w="1"/><text x="31.3753%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="31.1253%" y="325" width="0.0798%" height="15" fill="rgb(209,20,2)" fg:x="390" fg:w="1"/><text x="31.3753%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.1253%" y="309" width="0.0798%" height="15" fill="rgb(244,3,46)" fg:x="390" fg:w="1"/><text x="31.3753%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.2051%" y="565" width="0.1596%" height="15" fill="rgb(220,94,38)" fg:x="391" fg:w="2"/><text x="31.4551%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.2051%" y="549" width="0.1596%" height="15" fill="rgb(253,14,31)" fg:x="391" fg:w="2"/><text x="31.4551%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.2051%" y="533" width="0.1596%" height="15" fill="rgb(234,176,13)" fg:x="391" fg:w="2"/><text x="31.4551%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2849%" y="517" width="0.0798%" height="15" fill="rgb(218,62,25)" fg:x="392" fg:w="1"/><text x="31.5349%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="31.2051%" y="613" width="0.2394%" height="15" fill="rgb(216,124,40)" fg:x="391" fg:w="3"/><text x="31.4551%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="31.2051%" y="597" width="0.2394%" height="15" fill="rgb(228,170,12)" fg:x="391" fg:w="3"/><text x="31.4551%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.2051%" y="581" width="0.2394%" height="15" fill="rgb(231,226,5)" fg:x="391" fg:w="3"/><text x="31.4551%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.3647%" y="565" width="0.0798%" height="15" fill="rgb(237,122,22)" fg:x="393" fg:w="1"/><text x="31.6147%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.3647%" y="549" width="0.0798%" height="15" fill="rgb(209,185,25)" fg:x="393" fg:w="1"/><text x="31.6147%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.3647%" y="533" width="0.0798%" height="15" fill="rgb(228,200,32)" fg:x="393" fg:w="1"/><text x="31.6147%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.3647%" y="517" width="0.0798%" height="15" fill="rgb(217,140,10)" fg:x="393" fg:w="1"/><text x="31.6147%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.3647%" y="501" width="0.0798%" height="15" fill="rgb(253,17,24)" fg:x="393" fg:w="1"/><text x="31.6147%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.3647%" y="485" width="0.0798%" height="15" fill="rgb(212,61,6)" fg:x="393" fg:w="1"/><text x="31.6147%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.3647%" y="469" width="0.0798%" height="15" fill="rgb(205,14,25)" fg:x="393" fg:w="1"/><text x="31.6147%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.3647%" y="453" width="0.0798%" height="15" fill="rgb(232,69,41)" fg:x="393" fg:w="1"/><text x="31.6147%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.5243%" y="565" width="0.0798%" height="15" fill="rgb(241,106,47)" fg:x="395" fg:w="1"/><text x="31.7743%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.5243%" y="549" width="0.0798%" height="15" fill="rgb(210,213,53)" fg:x="395" fg:w="1"/><text x="31.7743%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.5243%" y="533" width="0.0798%" height="15" fill="rgb(253,175,27)" fg:x="395" fg:w="1"/><text x="31.7743%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5243%" y="517" width="0.0798%" height="15" fill="rgb(211,171,24)" fg:x="395" fg:w="1"/><text x="31.7743%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.5243%" y="501" width="0.0798%" height="15" fill="rgb(229,80,7)" fg:x="395" fg:w="1"/><text x="31.7743%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5243%" y="485" width="0.0798%" height="15" fill="rgb(212,46,39)" fg:x="395" fg:w="1"/><text x="31.7743%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.5243%" y="469" width="0.0798%" height="15" fill="rgb(240,80,45)" fg:x="395" fg:w="1"/><text x="31.7743%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5243%" y="453" width="0.0798%" height="15" fill="rgb(253,177,40)" fg:x="395" fg:w="1"/><text x="31.7743%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.5243%" y="437" width="0.0798%" height="15" fill="rgb(249,200,15)" fg:x="395" fg:w="1"/><text x="31.7743%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5243%" y="421" width="0.0798%" height="15" fill="rgb(217,78,26)" fg:x="395" fg:w="1"/><text x="31.7743%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.6840%" y="533" width="0.1596%" height="15" fill="rgb(254,151,32)" fg:x="397" fg:w="2"/><text x="31.9340%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.7638%" y="517" width="0.0798%" height="15" fill="rgb(226,165,27)" fg:x="398" fg:w="1"/><text x="32.0138%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.7638%" y="501" width="0.0798%" height="15" fill="rgb(250,206,4)" fg:x="398" fg:w="1"/><text x="32.0138%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="30.9657%" y="629" width="0.9577%" height="15" fill="rgb(231,229,27)" fg:x="388" fg:w="12"/><text x="31.2157%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="31.4445%" y="613" width="0.4789%" height="15" fill="rgb(239,217,8)" fg:x="394" fg:w="6"/><text x="31.6945%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="31.4445%" y="597" width="0.4789%" height="15" fill="rgb(225,204,27)" fg:x="394" fg:w="6"/><text x="31.6945%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="31.5243%" y="581" width="0.3990%" height="15" fill="rgb(230,56,32)" fg:x="395" fg:w="5"/><text x="31.7743%" y="591.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="31.6042%" y="565" width="0.3192%" height="15" fill="rgb(222,56,27)" fg:x="396" fg:w="4"/><text x="31.8542%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="31.6042%" y="549" width="0.3192%" height="15" fill="rgb(253,108,27)" fg:x="396" fg:w="4"/><text x="31.8542%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="31.8436%" y="533" width="0.0798%" height="15" fill="rgb(212,87,36)" fg:x="399" fg:w="1"/><text x="32.0936%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.8436%" y="517" width="0.0798%" height="15" fill="rgb(247,82,36)" fg:x="399" fg:w="1"/><text x="32.0936%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.8436%" y="501" width="0.0798%" height="15" fill="rgb(222,143,9)" fg:x="399" fg:w="1"/><text x="32.0936%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.8436%" y="485" width="0.0798%" height="15" fill="rgb(238,162,48)" fg:x="399" fg:w="1"/><text x="32.0936%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.8436%" y="469" width="0.0798%" height="15" fill="rgb(221,59,43)" fg:x="399" fg:w="1"/><text x="32.0936%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.8436%" y="453" width="0.0798%" height="15" fill="rgb(205,166,41)" fg:x="399" fg:w="1"/><text x="32.0936%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="31.9234%" y="629" width="0.0798%" height="15" fill="rgb(241,186,40)" fg:x="400" fg:w="1"/><text x="32.1734%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="31.9234%" y="613" width="0.0798%" height="15" fill="rgb(216,119,35)" fg:x="400" fg:w="1"/><text x="32.1734%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.9234%" y="597" width="0.0798%" height="15" fill="rgb(208,68,38)" fg:x="400" fg:w="1"/><text x="32.1734%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.9234%" y="581" width="0.0798%" height="15" fill="rgb(217,113,1)" fg:x="400" fg:w="1"/><text x="32.1734%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.9234%" y="565" width="0.0798%" height="15" fill="rgb(242,153,3)" fg:x="400" fg:w="1"/><text x="32.1734%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.9234%" y="549" width="0.0798%" height="15" fill="rgb(229,76,35)" fg:x="400" fg:w="1"/><text x="32.1734%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.9234%" y="533" width="0.0798%" height="15" fill="rgb(229,125,34)" fg:x="400" fg:w="1"/><text x="32.1734%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="31.9234%" y="517" width="0.0798%" height="15" fill="rgb(238,179,36)" fg:x="400" fg:w="1"/><text x="32.1734%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.9234%" y="501" width="0.0798%" height="15" fill="rgb(244,183,19)" fg:x="400" fg:w="1"/><text x="32.1734%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (14 samples, 1.12%)</title><rect x="30.9657%" y="645" width="1.1173%" height="15" fill="rgb(216,85,49)" fg:x="388" fg:w="14"/><text x="31.2157%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="32.0032%" y="629" width="0.0798%" height="15" fill="rgb(208,161,47)" fg:x="401" fg:w="1"/><text x="32.2532%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="32.0032%" y="613" width="0.0798%" height="15" fill="rgb(233,210,18)" fg:x="401" fg:w="1"/><text x="32.2532%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="32.0032%" y="597" width="0.0798%" height="15" fill="rgb(205,104,42)" fg:x="401" fg:w="1"/><text x="32.2532%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="32.0032%" y="581" width="0.0798%" height="15" fill="rgb(248,90,43)" fg:x="401" fg:w="1"/><text x="32.2532%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="32.0032%" y="565" width="0.0798%" height="15" fill="rgb(206,198,11)" fg:x="401" fg:w="1"/><text x="32.2532%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.0032%" y="549" width="0.0798%" height="15" fill="rgb(239,165,27)" fg:x="401" fg:w="1"/><text x="32.2532%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="32.0032%" y="533" width="0.0798%" height="15" fill="rgb(246,44,32)" fg:x="401" fg:w="1"/><text x="32.2532%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.0032%" y="517" width="0.0798%" height="15" fill="rgb(252,65,42)" fg:x="401" fg:w="1"/><text x="32.2532%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="32.0032%" y="501" width="0.0798%" height="15" fill="rgb(246,197,18)" fg:x="401" fg:w="1"/><text x="32.2532%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="32.0032%" y="485" width="0.0798%" height="15" fill="rgb(216,192,4)" fg:x="401" fg:w="1"/><text x="32.2532%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.0032%" y="469" width="0.0798%" height="15" fill="rgb(208,117,10)" fg:x="401" fg:w="1"/><text x="32.2532%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0032%" y="453" width="0.0798%" height="15" fill="rgb(240,61,47)" fg:x="401" fg:w="1"/><text x="32.2532%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (333 samples, 26.58%)</title><rect x="5.5866%" y="661" width="26.5762%" height="15" fill="rgb(228,178,21)" fg:x="70" fg:w="333"/><text x="5.8366%" y="671.50">&lt;tests::HoldingKeyInVessel as tests::WorldF..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="32.0830%" y="645" width="0.0798%" height="15" fill="rgb(219,96,54)" fg:x="402" fg:w="1"/><text x="32.3330%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1628%" y="661" width="0.0798%" height="15" fill="rgb(250,177,24)" fg:x="403" fg:w="1"/><text x="32.4128%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="32.2426%" y="661" width="0.1596%" height="15" fill="rgb(242,154,46)" fg:x="404" fg:w="2"/><text x="32.4926%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="32.2426%" y="645" width="0.1596%" height="15" fill="rgb(226,176,29)" fg:x="404" fg:w="2"/><text x="32.4926%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="32.2426%" y="629" width="0.1596%" height="15" fill="rgb(226,29,2)" fg:x="404" fg:w="2"/><text x="32.4926%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="32.2426%" y="613" width="0.1596%" height="15" fill="rgb(237,104,14)" fg:x="404" fg:w="2"/><text x="32.4926%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="32.2426%" y="597" width="0.1596%" height="15" fill="rgb(245,207,31)" fg:x="404" fg:w="2"/><text x="32.4926%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="32.4820%" y="645" width="0.1596%" height="15" fill="rgb(229,211,45)" fg:x="407" fg:w="2"/><text x="32.7320%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.5619%" y="629" width="0.0798%" height="15" fill="rgb(229,113,15)" fg:x="408" fg:w="1"/><text x="32.8119%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.6417%" y="645" width="0.0798%" height="15" fill="rgb(237,147,15)" fg:x="409" fg:w="1"/><text x="32.8917%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="32.6417%" y="629" width="0.0798%" height="15" fill="rgb(244,120,12)" fg:x="409" fg:w="1"/><text x="32.8917%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.6417%" y="613" width="0.0798%" height="15" fill="rgb(205,120,12)" fg:x="409" fg:w="1"/><text x="32.8917%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.6417%" y="597" width="0.0798%" height="15" fill="rgb(231,26,45)" fg:x="409" fg:w="1"/><text x="32.8917%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="32.6417%" y="581" width="0.0798%" height="15" fill="rgb(246,98,1)" fg:x="409" fg:w="1"/><text x="32.8917%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="32.6417%" y="565" width="0.0798%" height="15" fill="rgb(207,68,45)" fg:x="409" fg:w="1"/><text x="32.8917%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="32.6417%" y="549" width="0.0798%" height="15" fill="rgb(231,27,38)" fg:x="409" fg:w="1"/><text x="32.8917%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="32.6417%" y="533" width="0.0798%" height="15" fill="rgb(214,223,3)" fg:x="409" fg:w="1"/><text x="32.8917%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.6417%" y="517" width="0.0798%" height="15" fill="rgb(228,195,46)" fg:x="409" fg:w="1"/><text x="32.8917%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.6417%" y="501" width="0.0798%" height="15" fill="rgb(231,100,42)" fg:x="409" fg:w="1"/><text x="32.8917%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.6417%" y="485" width="0.0798%" height="15" fill="rgb(236,53,4)" fg:x="409" fg:w="1"/><text x="32.8917%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.6417%" y="469" width="0.0798%" height="15" fill="rgb(230,152,12)" fg:x="409" fg:w="1"/><text x="32.8917%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="32.6417%" y="453" width="0.0798%" height="15" fill="rgb(226,101,19)" fg:x="409" fg:w="1"/><text x="32.8917%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="32.6417%" y="437" width="0.0798%" height="15" fill="rgb(250,149,32)" fg:x="409" fg:w="1"/><text x="32.8917%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="32.6417%" y="421" width="0.0798%" height="15" fill="rgb(232,178,12)" fg:x="409" fg:w="1"/><text x="32.8917%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="32.6417%" y="405" width="0.0798%" height="15" fill="rgb(246,151,17)" fg:x="409" fg:w="1"/><text x="32.8917%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="32.6417%" y="389" width="0.0798%" height="15" fill="rgb(252,17,51)" fg:x="409" fg:w="1"/><text x="32.8917%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="32.6417%" y="373" width="0.0798%" height="15" fill="rgb(250,207,23)" fg:x="409" fg:w="1"/><text x="32.8917%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="32.6417%" y="357" width="0.0798%" height="15" fill="rgb(205,27,5)" fg:x="409" fg:w="1"/><text x="32.8917%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="32.6417%" y="341" width="0.0798%" height="15" fill="rgb(224,32,19)" fg:x="409" fg:w="1"/><text x="32.8917%" y="351.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="32.6417%" y="325" width="0.0798%" height="15" fill="rgb(247,214,40)" fg:x="409" fg:w="1"/><text x="32.8917%" y="335.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="32.6417%" y="309" width="0.0798%" height="15" fill="rgb(239,199,17)" fg:x="409" fg:w="1"/><text x="32.8917%" y="319.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="32.6417%" y="293" width="0.0798%" height="15" fill="rgb(251,159,9)" fg:x="409" fg:w="1"/><text x="32.8917%" y="303.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="32.7215%" y="645" width="0.0798%" height="15" fill="rgb(225,78,32)" fg:x="410" fg:w="1"/><text x="32.9715%" y="655.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="32.7215%" y="629" width="0.0798%" height="15" fill="rgb(206,97,47)" fg:x="410" fg:w="1"/><text x="32.9715%" y="639.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="32.7215%" y="613" width="0.0798%" height="15" fill="rgb(227,107,4)" fg:x="410" fg:w="1"/><text x="32.9715%" y="623.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="32.7215%" y="597" width="0.0798%" height="15" fill="rgb(241,146,50)" fg:x="410" fg:w="1"/><text x="32.9715%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="32.7215%" y="581" width="0.0798%" height="15" fill="rgb(232,92,30)" fg:x="410" fg:w="1"/><text x="32.9715%" y="591.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="32.7215%" y="565" width="0.0798%" height="15" fill="rgb(222,0,40)" fg:x="410" fg:w="1"/><text x="32.9715%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="32.7215%" y="549" width="0.0798%" height="15" fill="rgb(219,54,33)" fg:x="410" fg:w="1"/><text x="32.9715%" y="559.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="32.7215%" y="533" width="0.0798%" height="15" fill="rgb(226,209,28)" fg:x="410" fg:w="1"/><text x="32.9715%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="32.8811%" y="613" width="0.0798%" height="15" fill="rgb(254,205,35)" fg:x="412" fg:w="1"/><text x="33.1311%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="32.8811%" y="597" width="0.0798%" height="15" fill="rgb(230,159,3)" fg:x="412" fg:w="1"/><text x="33.1311%" y="607.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="32.8811%" y="581" width="0.0798%" height="15" fill="rgb(232,190,24)" fg:x="412" fg:w="1"/><text x="33.1311%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="33.0407%" y="597" width="0.0798%" height="15" fill="rgb(217,227,44)" fg:x="414" fg:w="1"/><text x="33.2907%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.0407%" y="581" width="0.0798%" height="15" fill="rgb(236,211,1)" fg:x="414" fg:w="1"/><text x="33.2907%" y="591.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="33.0407%" y="565" width="0.0798%" height="15" fill="rgb(250,127,46)" fg:x="414" fg:w="1"/><text x="33.2907%" y="575.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="33.0407%" y="549" width="0.0798%" height="15" fill="rgb(229,213,6)" fg:x="414" fg:w="1"/><text x="33.2907%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="33.2003%" y="549" width="0.0798%" height="15" fill="rgb(237,15,36)" fg:x="416" fg:w="1"/><text x="33.4503%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.2003%" y="533" width="0.0798%" height="15" fill="rgb(213,131,41)" fg:x="416" fg:w="1"/><text x="33.4503%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="33.2003%" y="565" width="0.1596%" height="15" fill="rgb(225,82,44)" fg:x="416" fg:w="2"/><text x="33.4503%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.2801%" y="549" width="0.0798%" height="15" fill="rgb(249,42,11)" fg:x="417" fg:w="1"/><text x="33.5301%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="33.4397%" y="549" width="0.0798%" height="15" fill="rgb(253,11,29)" fg:x="419" fg:w="1"/><text x="33.6897%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.4397%" y="533" width="0.0798%" height="15" fill="rgb(206,8,54)" fg:x="419" fg:w="1"/><text x="33.6897%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="33.5196%" y="549" width="0.4789%" height="15" fill="rgb(222,186,2)" fg:x="420" fg:w="6"/><text x="33.7696%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="33.7590%" y="533" width="0.2394%" height="15" fill="rgb(221,206,53)" fg:x="423" fg:w="3"/><text x="34.0090%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="33.7590%" y="517" width="0.2394%" height="15" fill="rgb(230,150,21)" fg:x="423" fg:w="3"/><text x="34.0090%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="33.8388%" y="501" width="0.1596%" height="15" fill="rgb(253,202,10)" fg:x="424" fg:w="2"/><text x="34.0888%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="33.8388%" y="485" width="0.1596%" height="15" fill="rgb(238,109,40)" fg:x="424" fg:w="2"/><text x="34.0888%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.9186%" y="469" width="0.0798%" height="15" fill="rgb(247,120,22)" fg:x="425" fg:w="1"/><text x="34.1686%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.9186%" y="453" width="0.0798%" height="15" fill="rgb(207,43,30)" fg:x="425" fg:w="1"/><text x="34.1686%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="34.0782%" y="501" width="0.1596%" height="15" fill="rgb(213,211,24)" fg:x="427" fg:w="2"/><text x="34.3282%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="34.0782%" y="485" width="0.1596%" height="15" fill="rgb(239,73,39)" fg:x="427" fg:w="2"/><text x="34.3282%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.0782%" y="469" width="0.1596%" height="15" fill="rgb(245,182,19)" fg:x="427" fg:w="2"/><text x="34.3282%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="34.0782%" y="453" width="0.1596%" height="15" fill="rgb(247,143,26)" fg:x="427" fg:w="2"/><text x="34.3282%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="34.0782%" y="437" width="0.1596%" height="15" fill="rgb(228,191,23)" fg:x="427" fg:w="2"/><text x="34.3282%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="34.0782%" y="533" width="0.2394%" height="15" fill="rgb(253,165,31)" fg:x="427" fg:w="3"/><text x="34.3282%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="34.0782%" y="517" width="0.2394%" height="15" fill="rgb(234,138,20)" fg:x="427" fg:w="3"/><text x="34.3282%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.2378%" y="501" width="0.0798%" height="15" fill="rgb(218,191,29)" fg:x="429" fg:w="1"/><text x="34.4878%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.2378%" y="485" width="0.0798%" height="15" fill="rgb(221,157,19)" fg:x="429" fg:w="1"/><text x="34.4878%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="34.3176%" y="533" width="0.2394%" height="15" fill="rgb(237,26,42)" fg:x="430" fg:w="3"/><text x="34.5676%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="34.3176%" y="517" width="0.2394%" height="15" fill="rgb(220,163,24)" fg:x="430" fg:w="3"/><text x="34.5676%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="34.3974%" y="501" width="0.1596%" height="15" fill="rgb(242,115,20)" fg:x="431" fg:w="2"/><text x="34.6474%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="34.4773%" y="485" width="0.0798%" height="15" fill="rgb(210,206,9)" fg:x="432" fg:w="1"/><text x="34.7273%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.7167%" y="517" width="0.0798%" height="15" fill="rgb(208,71,17)" fg:x="435" fg:w="1"/><text x="34.9667%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.7965%" y="517" width="0.0798%" height="15" fill="rgb(233,7,5)" fg:x="436" fg:w="1"/><text x="35.0465%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.7965%" y="501" width="0.0798%" height="15" fill="rgb(207,92,33)" fg:x="436" fg:w="1"/><text x="35.0465%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.7965%" y="485" width="0.0798%" height="15" fill="rgb(218,87,9)" fg:x="436" fg:w="1"/><text x="35.0465%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="34.8763%" y="501" width="0.0798%" height="15" fill="rgb(219,47,37)" fg:x="437" fg:w="1"/><text x="35.1263%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.8763%" y="485" width="0.0798%" height="15" fill="rgb(221,152,34)" fg:x="437" fg:w="1"/><text x="35.1263%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.8763%" y="469" width="0.0798%" height="15" fill="rgb(235,176,21)" fg:x="437" fg:w="1"/><text x="35.1263%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.9561%" y="469" width="0.0798%" height="15" fill="rgb(232,212,21)" fg:x="438" fg:w="1"/><text x="35.2061%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="35.0359%" y="469" width="0.1596%" height="15" fill="rgb(245,82,39)" fg:x="439" fg:w="2"/><text x="35.2859%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.1157%" y="453" width="0.0798%" height="15" fill="rgb(241,52,51)" fg:x="440" fg:w="1"/><text x="35.3657%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.1157%" y="437" width="0.0798%" height="15" fill="rgb(219,91,24)" fg:x="440" fg:w="1"/><text x="35.3657%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.1157%" y="421" width="0.0798%" height="15" fill="rgb(241,142,12)" fg:x="440" fg:w="1"/><text x="35.3657%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="34.9561%" y="485" width="0.3990%" height="15" fill="rgb(230,27,9)" fg:x="438" fg:w="5"/><text x="35.2061%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.1955%" y="469" width="0.1596%" height="15" fill="rgb(249,181,32)" fg:x="441" fg:w="2"/><text x="35.4455%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.1955%" y="453" width="0.1596%" height="15" fill="rgb(230,107,3)" fg:x="441" fg:w="2"/><text x="35.4455%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.2753%" y="437" width="0.0798%" height="15" fill="rgb(246,204,14)" fg:x="442" fg:w="1"/><text x="35.5253%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.2753%" y="421" width="0.0798%" height="15" fill="rgb(213,192,47)" fg:x="442" fg:w="1"/><text x="35.5253%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.2753%" y="405" width="0.0798%" height="15" fill="rgb(240,44,36)" fg:x="442" fg:w="1"/><text x="35.5253%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.2753%" y="389" width="0.0798%" height="15" fill="rgb(244,209,38)" fg:x="442" fg:w="1"/><text x="35.5253%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="34.8763%" y="517" width="0.5587%" height="15" fill="rgb(219,34,37)" fg:x="437" fg:w="7"/><text x="35.1263%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="34.9561%" y="501" width="0.4789%" height="15" fill="rgb(210,28,6)" fg:x="438" fg:w="6"/><text x="35.2061%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.3551%" y="485" width="0.0798%" height="15" fill="rgb(244,110,52)" fg:x="443" fg:w="1"/><text x="35.6051%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.3551%" y="469" width="0.0798%" height="15" fill="rgb(254,124,47)" fg:x="443" fg:w="1"/><text x="35.6051%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="35.3551%" y="453" width="0.0798%" height="15" fill="rgb(254,110,13)" fg:x="443" fg:w="1"/><text x="35.6051%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="34.5571%" y="533" width="0.9577%" height="15" fill="rgb(252,57,21)" fg:x="433" fg:w="12"/><text x="34.8071%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.4350%" y="517" width="0.0798%" height="15" fill="rgb(242,60,45)" fg:x="444" fg:w="1"/><text x="35.6850%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="33.9984%" y="549" width="1.5962%" height="15" fill="rgb(234,49,30)" fg:x="426" fg:w="20"/><text x="34.2484%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.5148%" y="533" width="0.0798%" height="15" fill="rgb(218,98,6)" fg:x="445" fg:w="1"/><text x="35.7648%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.5148%" y="517" width="0.0798%" height="15" fill="rgb(220,174,29)" fg:x="445" fg:w="1"/><text x="35.7648%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.5148%" y="501" width="0.0798%" height="15" fill="rgb(236,163,23)" fg:x="445" fg:w="1"/><text x="35.7648%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.31%)</title><rect x="33.3599%" y="565" width="2.3144%" height="15" fill="rgb(242,114,45)" fg:x="418" fg:w="29"/><text x="33.6099%" y="575.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.5946%" y="549" width="0.0798%" height="15" fill="rgb(232,10,53)" fg:x="446" fg:w="1"/><text x="35.8446%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (33 samples, 2.63%)</title><rect x="33.2003%" y="581" width="2.6337%" height="15" fill="rgb(245,108,29)" fg:x="416" fg:w="33"/><text x="33.4503%" y="591.50">&lt;s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.6744%" y="565" width="0.1596%" height="15" fill="rgb(240,89,53)" fg:x="447" fg:w="2"/><text x="35.9244%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.6744%" y="549" width="0.1596%" height="15" fill="rgb(226,60,45)" fg:x="447" fg:w="2"/><text x="35.9244%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7542%" y="533" width="0.0798%" height="15" fill="rgb(230,41,44)" fg:x="448" fg:w="1"/><text x="36.0042%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.7542%" y="517" width="0.0798%" height="15" fill="rgb(230,26,20)" fg:x="448" fg:w="1"/><text x="36.0042%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="35.8340%" y="549" width="0.1596%" height="15" fill="rgb(237,170,32)" fg:x="449" fg:w="2"/><text x="36.0840%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.9936%" y="549" width="0.0798%" height="15" fill="rgb(212,35,42)" fg:x="451" fg:w="1"/><text x="36.2436%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.0734%" y="501" width="0.0798%" height="15" fill="rgb(227,31,34)" fg:x="452" fg:w="1"/><text x="36.3234%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="35.8340%" y="581" width="0.3990%" height="15" fill="rgb(216,19,18)" fg:x="449" fg:w="5"/><text x="36.0840%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="35.8340%" y="565" width="0.3990%" height="15" fill="rgb(211,133,42)" fg:x="449" fg:w="5"/><text x="36.0840%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.0734%" y="549" width="0.1596%" height="15" fill="rgb(244,66,13)" fg:x="452" fg:w="2"/><text x="36.3234%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.0734%" y="533" width="0.1596%" height="15" fill="rgb(218,185,50)" fg:x="452" fg:w="2"/><text x="36.3234%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.0734%" y="517" width="0.1596%" height="15" fill="rgb(219,149,13)" fg:x="452" fg:w="2"/><text x="36.3234%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.1532%" y="501" width="0.0798%" height="15" fill="rgb(221,125,0)" fg:x="453" fg:w="1"/><text x="36.4032%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1532%" y="485" width="0.0798%" height="15" fill="rgb(247,126,27)" fg:x="453" fg:w="1"/><text x="36.4032%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="36.2330%" y="517" width="0.1596%" height="15" fill="rgb(250,138,30)" fg:x="454" fg:w="2"/><text x="36.4830%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="36.4725%" y="501" width="0.2394%" height="15" fill="rgb(230,151,9)" fg:x="457" fg:w="3"/><text x="36.7225%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6321%" y="485" width="0.0798%" height="15" fill="rgb(233,80,38)" fg:x="459" fg:w="1"/><text x="36.8821%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="36.8715%" y="485" width="0.1596%" height="15" fill="rgb(232,68,43)" fg:x="462" fg:w="2"/><text x="37.1215%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.0311%" y="485" width="0.0798%" height="15" fill="rgb(254,5,50)" fg:x="464" fg:w="1"/><text x="37.2811%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.0311%" y="469" width="0.0798%" height="15" fill="rgb(225,45,5)" fg:x="464" fg:w="1"/><text x="37.2811%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="37.1109%" y="469" width="0.1596%" height="15" fill="rgb(239,22,3)" fg:x="465" fg:w="2"/><text x="37.3609%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.1109%" y="453" width="0.1596%" height="15" fill="rgb(243,129,0)" fg:x="465" fg:w="2"/><text x="37.3609%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.3504%" y="437" width="0.0798%" height="15" fill="rgb(223,164,0)" fg:x="468" fg:w="1"/><text x="37.6004%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="37.2706%" y="469" width="0.3192%" height="15" fill="rgb(221,46,29)" fg:x="467" fg:w="4"/><text x="37.5206%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="37.3504%" y="453" width="0.2394%" height="15" fill="rgb(205,97,47)" fg:x="468" fg:w="3"/><text x="37.6004%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="37.4302%" y="437" width="0.1596%" height="15" fill="rgb(249,14,8)" fg:x="469" fg:w="2"/><text x="37.6802%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.5898%" y="453" width="0.0798%" height="15" fill="rgb(216,77,3)" fg:x="471" fg:w="1"/><text x="37.8398%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.5898%" y="437" width="0.0798%" height="15" fill="rgb(206,168,54)" fg:x="471" fg:w="1"/><text x="37.8398%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="37.6696%" y="437" width="0.1596%" height="15" fill="rgb(236,3,41)" fg:x="472" fg:w="2"/><text x="37.9196%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (22 samples, 1.76%)</title><rect x="36.2330%" y="549" width="1.7558%" height="15" fill="rgb(231,132,24)" fg:x="454" fg:w="22"/><text x="36.4830%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (22 samples, 1.76%)</title><rect x="36.2330%" y="533" width="1.7558%" height="15" fill="rgb(227,221,40)" fg:x="454" fg:w="22"/><text x="36.4830%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.60%)</title><rect x="36.3927%" y="517" width="1.5962%" height="15" fill="rgb(233,151,11)" fg:x="456" fg:w="20"/><text x="36.6427%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="36.7119%" y="501" width="1.2769%" height="15" fill="rgb(247,81,35)" fg:x="460" fg:w="16"/><text x="36.9619%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="37.1109%" y="485" width="0.8779%" height="15" fill="rgb(243,128,48)" fg:x="465" fg:w="11"/><text x="37.3609%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="37.5898%" y="469" width="0.3990%" height="15" fill="rgb(253,16,10)" fg:x="471" fg:w="5"/><text x="37.8398%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="37.6696%" y="453" width="0.3192%" height="15" fill="rgb(228,67,27)" fg:x="472" fg:w="4"/><text x="37.9196%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="37.8292%" y="437" width="0.1596%" height="15" fill="rgb(231,105,25)" fg:x="474" fg:w="2"/><text x="38.0792%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.9090%" y="421" width="0.0798%" height="15" fill="rgb(213,166,47)" fg:x="475" fg:w="1"/><text x="38.1590%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.9090%" y="405" width="0.0798%" height="15" fill="rgb(209,27,10)" fg:x="475" fg:w="1"/><text x="38.1590%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.16%)</title><rect x="38.3081%" y="485" width="0.1596%" height="15" fill="rgb(241,44,30)" fg:x="480" fg:w="2"/><text x="38.5581%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="38.3081%" y="469" width="0.1596%" height="15" fill="rgb(223,216,15)" fg:x="480" fg:w="2"/><text x="38.5581%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.3879%" y="453" width="0.0798%" height="15" fill="rgb(227,14,7)" fg:x="481" fg:w="1"/><text x="38.6379%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="38.2283%" y="501" width="0.3192%" height="15" fill="rgb(237,14,5)" fg:x="479" fg:w="4"/><text x="38.4783%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="38.4677%" y="485" width="0.0798%" height="15" fill="rgb(232,14,36)" fg:x="482" fg:w="1"/><text x="38.7177%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="38.4677%" y="469" width="0.0798%" height="15" fill="rgb(234,0,38)" fg:x="482" fg:w="1"/><text x="38.7177%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="38.4677%" y="453" width="0.0798%" height="15" fill="rgb(207,170,14)" fg:x="482" fg:w="1"/><text x="38.7177%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="38.4677%" y="437" width="0.0798%" height="15" fill="rgb(252,45,13)" fg:x="482" fg:w="1"/><text x="38.7177%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="37.9888%" y="533" width="0.6385%" height="15" fill="rgb(213,142,7)" fg:x="476" fg:w="8"/><text x="38.2388%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="37.9888%" y="517" width="0.6385%" height="15" fill="rgb(216,157,23)" fg:x="476" fg:w="8"/><text x="38.2388%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.5475%" y="501" width="0.0798%" height="15" fill="rgb(212,145,33)" fg:x="483" fg:w="1"/><text x="38.7975%" y="511.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (32 samples, 2.55%)</title><rect x="36.2330%" y="565" width="2.5539%" height="15" fill="rgb(233,26,13)" fg:x="454" fg:w="32"/><text x="36.4830%" y="575.50">&lt;k..</text></g><g><title>treediff::diff::diff (10 samples, 0.80%)</title><rect x="37.9888%" y="549" width="0.7981%" height="15" fill="rgb(219,196,19)" fg:x="476" fg:w="10"/><text x="38.2388%" y="559.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (2 samples, 0.16%)</title><rect x="38.6273%" y="533" width="0.1596%" height="15" fill="rgb(246,56,21)" fg:x="484" fg:w="2"/><text x="38.8773%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.6273%" y="517" width="0.1596%" height="15" fill="rgb(222,28,53)" fg:x="484" fg:w="2"/><text x="38.8773%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.9465%" y="533" width="0.1596%" height="15" fill="rgb(224,5,27)" fg:x="488" fg:w="2"/><text x="39.1965%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="39.1061%" y="533" width="0.2394%" height="15" fill="rgb(220,153,33)" fg:x="490" fg:w="3"/><text x="39.3561%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.2658%" y="517" width="0.0798%" height="15" fill="rgb(226,58,19)" fg:x="492" fg:w="1"/><text x="39.5158%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="39.2658%" y="501" width="0.0798%" height="15" fill="rgb(239,112,23)" fg:x="492" fg:w="1"/><text x="39.5158%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="39.2658%" y="485" width="0.0798%" height="15" fill="rgb(251,213,20)" fg:x="492" fg:w="1"/><text x="39.5158%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="39.3456%" y="533" width="0.0798%" height="15" fill="rgb(215,181,21)" fg:x="493" fg:w="1"/><text x="39.5956%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.3456%" y="517" width="0.0798%" height="15" fill="rgb(240,8,35)" fg:x="493" fg:w="1"/><text x="39.5956%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.3456%" y="501" width="0.0798%" height="15" fill="rgb(232,203,3)" fg:x="493" fg:w="1"/><text x="39.5956%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.3456%" y="485" width="0.0798%" height="15" fill="rgb(214,202,43)" fg:x="493" fg:w="1"/><text x="39.5956%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="39.3456%" y="469" width="0.0798%" height="15" fill="rgb(254,35,11)" fg:x="493" fg:w="1"/><text x="39.5956%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="39.5850%" y="501" width="0.0798%" height="15" fill="rgb(239,173,13)" fg:x="496" fg:w="1"/><text x="39.8350%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.9042%" y="485" width="0.1596%" height="15" fill="rgb(220,141,0)" fg:x="500" fg:w="2"/><text x="40.1542%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.9042%" y="469" width="0.1596%" height="15" fill="rgb(210,98,12)" fg:x="500" fg:w="2"/><text x="40.1542%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9840%" y="453" width="0.0798%" height="15" fill="rgb(254,153,22)" fg:x="501" fg:w="1"/><text x="40.2340%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="40.0638%" y="485" width="0.0798%" height="15" fill="rgb(247,223,17)" fg:x="502" fg:w="1"/><text x="40.3138%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="40.0638%" y="469" width="0.0798%" height="15" fill="rgb(246,56,7)" fg:x="502" fg:w="1"/><text x="40.3138%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="40.0638%" y="453" width="0.0798%" height="15" fill="rgb(240,226,12)" fg:x="502" fg:w="1"/><text x="40.3138%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="40.0638%" y="437" width="0.0798%" height="15" fill="rgb(205,87,46)" fg:x="502" fg:w="1"/><text x="40.3138%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.0638%" y="421" width="0.0798%" height="15" fill="rgb(245,214,51)" fg:x="502" fg:w="1"/><text x="40.3138%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.2235%" y="469" width="0.0798%" height="15" fill="rgb(223,172,33)" fg:x="504" fg:w="1"/><text x="40.4735%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="40.3033%" y="469" width="0.0798%" height="15" fill="rgb(227,203,34)" fg:x="505" fg:w="1"/><text x="40.5533%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.3831%" y="453" width="0.1596%" height="15" fill="rgb(248,143,44)" fg:x="506" fg:w="2"/><text x="40.6331%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.3831%" y="437" width="0.1596%" height="15" fill="rgb(226,162,5)" fg:x="506" fg:w="2"/><text x="40.6331%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.4629%" y="421" width="0.0798%" height="15" fill="rgb(211,143,1)" fg:x="507" fg:w="1"/><text x="40.7129%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.6225%" y="421" width="0.0798%" height="15" fill="rgb(224,96,15)" fg:x="509" fg:w="1"/><text x="40.8725%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="41.0215%" y="405" width="0.0798%" height="15" fill="rgb(222,4,38)" fg:x="514" fg:w="1"/><text x="41.2715%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1812%" y="357" width="0.0798%" height="15" fill="rgb(253,228,15)" fg:x="516" fg:w="1"/><text x="41.4312%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.1014%" y="389" width="0.2394%" height="15" fill="rgb(242,194,12)" fg:x="515" fg:w="3"/><text x="41.3514%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.1812%" y="373" width="0.1596%" height="15" fill="rgb(214,177,31)" fg:x="516" fg:w="2"/><text x="41.4312%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.2610%" y="357" width="0.0798%" height="15" fill="rgb(226,58,51)" fg:x="517" fg:w="1"/><text x="41.5110%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="40.6225%" y="437" width="0.8779%" height="15" fill="rgb(250,119,16)" fg:x="509" fg:w="11"/><text x="40.8725%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="40.7023%" y="421" width="0.7981%" height="15" fill="rgb(223,128,53)" fg:x="510" fg:w="10"/><text x="40.9523%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="41.1014%" y="405" width="0.3990%" height="15" fill="rgb(251,199,15)" fg:x="515" fg:w="5"/><text x="41.3514%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="41.3408%" y="389" width="0.1596%" height="15" fill="rgb(235,168,42)" fg:x="518" fg:w="2"/><text x="41.5908%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="41.4206%" y="373" width="0.0798%" height="15" fill="rgb(250,210,17)" fg:x="519" fg:w="1"/><text x="41.6706%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4206%" y="357" width="0.0798%" height="15" fill="rgb(226,36,41)" fg:x="519" fg:w="1"/><text x="41.6706%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4206%" y="341" width="0.0798%" height="15" fill="rgb(225,87,10)" fg:x="519" fg:w="1"/><text x="41.6706%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.92%)</title><rect x="39.6648%" y="501" width="1.9154%" height="15" fill="rgb(228,83,9)" fg:x="497" fg:w="24"/><text x="39.9148%" y="511.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.44%)</title><rect x="40.1437%" y="485" width="1.4366%" height="15" fill="rgb(225,16,36)" fg:x="503" fg:w="18"/><text x="40.3937%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="40.3831%" y="469" width="1.1971%" height="15" fill="rgb(242,198,13)" fg:x="506" fg:w="15"/><text x="40.6331%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="40.5427%" y="453" width="1.0375%" height="15" fill="rgb(239,25,51)" fg:x="508" fg:w="13"/><text x="40.7927%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="41.5004%" y="437" width="0.0798%" height="15" fill="rgb(239,28,37)" fg:x="520" fg:w="1"/><text x="41.7504%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="41.5004%" y="421" width="0.0798%" height="15" fill="rgb(234,70,17)" fg:x="520" fg:w="1"/><text x="41.7504%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (36 samples, 2.87%)</title><rect x="38.7869%" y="565" width="2.8731%" height="15" fill="rgb(231,215,53)" fg:x="486" fg:w="36"/><text x="39.0369%" y="575.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 2.87%)</title><rect x="38.7869%" y="549" width="2.8731%" height="15" fill="rgb(218,140,42)" fg:x="486" fg:w="36"/><text x="39.0369%" y="559.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 2.23%)</title><rect x="39.4254%" y="533" width="2.2346%" height="15" fill="rgb(233,227,45)" fg:x="494" fg:w="28"/><text x="39.6754%" y="543.50">s..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (26 samples, 2.08%)</title><rect x="39.5850%" y="517" width="2.0750%" height="15" fill="rgb(225,189,21)" fg:x="496" fg:w="26"/><text x="39.8350%" y="527.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="41.5802%" y="501" width="0.0798%" height="15" fill="rgb(237,176,54)" fg:x="521" fg:w="1"/><text x="41.8302%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5802%" y="485" width="0.0798%" height="15" fill="rgb(215,131,46)" fg:x="521" fg:w="1"/><text x="41.8302%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="42.0591%" y="389" width="0.0798%" height="15" fill="rgb(218,95,20)" fg:x="527" fg:w="1"/><text x="42.3091%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.1389%" y="389" width="0.0798%" height="15" fill="rgb(208,198,12)" fg:x="528" fg:w="1"/><text x="42.3889%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="42.1389%" y="373" width="0.0798%" height="15" fill="rgb(239,107,50)" fg:x="528" fg:w="1"/><text x="42.3889%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="42.0591%" y="421" width="0.2394%" height="15" fill="rgb(240,217,37)" fg:x="527" fg:w="3"/><text x="42.3091%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="42.0591%" y="405" width="0.2394%" height="15" fill="rgb(242,197,49)" fg:x="527" fg:w="3"/><text x="42.3091%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2187%" y="389" width="0.0798%" height="15" fill="rgb(219,171,17)" fg:x="529" fg:w="1"/><text x="42.4687%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="42.2985%" y="325" width="0.0798%" height="15" fill="rgb(209,81,40)" fg:x="530" fg:w="1"/><text x="42.5485%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="42.4581%" y="309" width="0.1596%" height="15" fill="rgb(237,156,30)" fg:x="532" fg:w="2"/><text x="42.7081%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.5379%" y="293" width="0.0798%" height="15" fill="rgb(212,127,16)" fg:x="533" fg:w="1"/><text x="42.7879%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="42.3783%" y="325" width="0.3192%" height="15" fill="rgb(226,66,32)" fg:x="531" fg:w="4"/><text x="42.6283%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.6177%" y="309" width="0.0798%" height="15" fill="rgb(245,22,46)" fg:x="534" fg:w="1"/><text x="42.8677%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.6177%" y="293" width="0.0798%" height="15" fill="rgb(210,112,21)" fg:x="534" fg:w="1"/><text x="42.8677%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.6177%" y="277" width="0.0798%" height="15" fill="rgb(207,118,39)" fg:x="534" fg:w="1"/><text x="42.8677%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="42.2985%" y="341" width="0.4789%" height="15" fill="rgb(205,206,35)" fg:x="530" fg:w="6"/><text x="42.5485%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.6975%" y="325" width="0.0798%" height="15" fill="rgb(222,120,2)" fg:x="535" fg:w="1"/><text x="42.9475%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.7773%" y="341" width="0.0798%" height="15" fill="rgb(205,38,18)" fg:x="536" fg:w="1"/><text x="43.0273%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7773%" y="325" width="0.0798%" height="15" fill="rgb(226,61,2)" fg:x="536" fg:w="1"/><text x="43.0273%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="42.2985%" y="373" width="0.6385%" height="15" fill="rgb(242,161,23)" fg:x="530" fg:w="8"/><text x="42.5485%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="42.2985%" y="357" width="0.6385%" height="15" fill="rgb(213,13,52)" fg:x="530" fg:w="8"/><text x="42.5485%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.8571%" y="341" width="0.0798%" height="15" fill="rgb(246,209,47)" fg:x="537" fg:w="1"/><text x="43.1071%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.8571%" y="325" width="0.0798%" height="15" fill="rgb(214,41,3)" fg:x="537" fg:w="1"/><text x="43.1071%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.9370%" y="373" width="0.0798%" height="15" fill="rgb(236,119,38)" fg:x="538" fg:w="1"/><text x="43.1870%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="42.0591%" y="437" width="1.0375%" height="15" fill="rgb(218,50,11)" fg:x="527" fg:w="13"/><text x="42.3091%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="42.2985%" y="421" width="0.7981%" height="15" fill="rgb(228,38,11)" fg:x="530" fg:w="10"/><text x="42.5485%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="42.2985%" y="405" width="0.7981%" height="15" fill="rgb(212,13,9)" fg:x="530" fg:w="10"/><text x="42.5485%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="42.2985%" y="389" width="0.7981%" height="15" fill="rgb(208,211,9)" fg:x="530" fg:w="10"/><text x="42.5485%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0168%" y="373" width="0.0798%" height="15" fill="rgb(239,39,32)" fg:x="539" fg:w="1"/><text x="43.2668%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.36%)</title><rect x="41.9792%" y="469" width="1.3567%" height="15" fill="rgb(254,179,26)" fg:x="526" fg:w="17"/><text x="42.2292%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.28%)</title><rect x="42.0591%" y="453" width="1.2769%" height="15" fill="rgb(249,165,28)" fg:x="527" fg:w="16"/><text x="42.3091%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="43.0966%" y="437" width="0.2394%" height="15" fill="rgb(225,59,50)" fg:x="540" fg:w="3"/><text x="43.3466%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="43.0966%" y="421" width="0.2394%" height="15" fill="rgb(209,122,5)" fg:x="540" fg:w="3"/><text x="43.3466%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.76%)</title><rect x="41.9792%" y="501" width="1.7558%" height="15" fill="rgb(214,65,34)" fg:x="526" fg:w="22"/><text x="42.2292%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.76%)</title><rect x="41.9792%" y="485" width="1.7558%" height="15" fill="rgb(249,183,32)" fg:x="526" fg:w="22"/><text x="42.2292%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="43.3360%" y="469" width="0.3990%" height="15" fill="rgb(218,122,24)" fg:x="543" fg:w="5"/><text x="43.5860%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="43.4956%" y="453" width="0.2394%" height="15" fill="rgb(224,109,18)" fg:x="545" fg:w="3"/><text x="43.7456%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.7350%" y="485" width="0.0798%" height="15" fill="rgb(210,68,50)" fg:x="548" fg:w="1"/><text x="43.9850%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="43.7350%" y="501" width="0.1596%" height="15" fill="rgb(212,184,34)" fg:x="548" fg:w="2"/><text x="43.9850%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.8148%" y="485" width="0.0798%" height="15" fill="rgb(238,105,48)" fg:x="549" fg:w="1"/><text x="44.0648%" y="495.50"></text></g><g><title>engine::session::state::State::flush_entities (143 samples, 11.41%)</title><rect x="32.8811%" y="629" width="11.4126%" height="15" fill="rgb(222,134,54)" fg:x="412" fg:w="143"/><text x="33.1311%" y="639.50">engine::session::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (142 samples, 11.33%)</title><rect x="32.9609%" y="613" width="11.3328%" height="15" fill="rgb(246,24,43)" fg:x="413" fg:w="142"/><text x="33.2109%" y="623.50">engine::session::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (140 samples, 11.17%)</title><rect x="33.1205%" y="597" width="11.1732%" height="15" fill="rgb(227,169,22)" fg:x="415" fg:w="140"/><text x="33.3705%" y="607.50">engine::session:..</text></g><g><title>kernel::model::any_entity_changes (101 samples, 8.06%)</title><rect x="36.2330%" y="581" width="8.0607%" height="15" fill="rgb(253,152,4)" fg:x="454" fg:w="101"/><text x="36.4830%" y="591.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (33 samples, 2.63%)</title><rect x="41.6600%" y="565" width="2.6337%" height="15" fill="rgb(219,158,36)" fg:x="522" fg:w="33"/><text x="41.9100%" y="575.50">se..</text></g><g><title>serde_json::de::from_trait (33 samples, 2.63%)</title><rect x="41.6600%" y="549" width="2.6337%" height="15" fill="rgb(251,128,40)" fg:x="522" fg:w="33"/><text x="41.9100%" y="559.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.55%)</title><rect x="41.7398%" y="533" width="2.5539%" height="15" fill="rgb(254,101,39)" fg:x="523" fg:w="32"/><text x="41.9898%" y="543.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.55%)</title><rect x="41.7398%" y="517" width="2.5539%" height="15" fill="rgb(221,168,40)" fg:x="523" fg:w="32"/><text x="41.9898%" y="527.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="43.8947%" y="501" width="0.3990%" height="15" fill="rgb(221,14,27)" fg:x="550" fg:w="5"/><text x="44.1447%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="44.0543%" y="485" width="0.2394%" height="15" fill="rgb(207,36,43)" fg:x="552" fg:w="3"/><text x="44.3043%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="44.1341%" y="469" width="0.1596%" height="15" fill="rgb(240,172,53)" fg:x="553" fg:w="2"/><text x="44.3841%" y="479.50"></text></g><g><title>engine::session::state::State::close (145 samples, 11.57%)</title><rect x="32.8013%" y="645" width="11.5722%" height="15" fill="rgb(241,138,43)" fg:x="411" fg:w="145"/><text x="33.0513%" y="655.50">engine::session::..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="44.2937%" y="629" width="0.0798%" height="15" fill="rgb(227,78,19)" fg:x="555" fg:w="1"/><text x="44.5437%" y="639.50"></text></g><g><title>engine::session::Session::close (151 samples, 12.05%)</title><rect x="32.4022%" y="661" width="12.0511%" height="15" fill="rgb(215,127,44)" fg:x="406" fg:w="151"/><text x="32.6522%" y="671.50">engine::session::S..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="44.3735%" y="645" width="0.0798%" height="15" fill="rgb(227,13,10)" fg:x="556" fg:w="1"/><text x="44.6235%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="44.6927%" y="597" width="0.0798%" height="15" fill="rgb(249,177,6)" fg:x="560" fg:w="1"/><text x="44.9427%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="44.6927%" y="581" width="0.0798%" height="15" fill="rgb(215,154,26)" fg:x="560" fg:w="1"/><text x="44.9427%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="44.6927%" y="565" width="0.0798%" height="15" fill="rgb(250,168,20)" fg:x="560" fg:w="1"/><text x="44.9427%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="44.6927%" y="549" width="0.0798%" height="15" fill="rgb(222,53,38)" fg:x="560" fg:w="1"/><text x="44.9427%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="44.6927%" y="533" width="0.0798%" height="15" fill="rgb(245,154,5)" fg:x="560" fg:w="1"/><text x="44.9427%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.6927%" y="517" width="0.0798%" height="15" fill="rgb(214,89,50)" fg:x="560" fg:w="1"/><text x="44.9427%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.6927%" y="501" width="0.0798%" height="15" fill="rgb(232,73,14)" fg:x="560" fg:w="1"/><text x="44.9427%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="44.6927%" y="485" width="0.0798%" height="15" fill="rgb(230,101,20)" fg:x="560" fg:w="1"/><text x="44.9427%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="44.6927%" y="469" width="0.0798%" height="15" fill="rgb(208,56,28)" fg:x="560" fg:w="1"/><text x="44.9427%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.6927%" y="453" width="0.0798%" height="15" fill="rgb(247,205,22)" fg:x="560" fg:w="1"/><text x="44.9427%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.6927%" y="437" width="0.0798%" height="15" fill="rgb(252,109,51)" fg:x="560" fg:w="1"/><text x="44.9427%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="44.6927%" y="421" width="0.0798%" height="15" fill="rgb(220,40,24)" fg:x="560" fg:w="1"/><text x="44.9427%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="44.6927%" y="405" width="0.0798%" height="15" fill="rgb(251,108,7)" fg:x="560" fg:w="1"/><text x="44.9427%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.6927%" y="389" width="0.0798%" height="15" fill="rgb(238,102,51)" fg:x="560" fg:w="1"/><text x="44.9427%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.6927%" y="373" width="0.0798%" height="15" fill="rgb(219,149,34)" fg:x="560" fg:w="1"/><text x="44.9427%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.6927%" y="357" width="0.0798%" height="15" fill="rgb(239,70,0)" fg:x="560" fg:w="1"/><text x="44.9427%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.6927%" y="341" width="0.0798%" height="15" fill="rgb(246,214,23)" fg:x="560" fg:w="1"/><text x="44.9427%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="44.6927%" y="325" width="0.0798%" height="15" fill="rgb(239,221,51)" fg:x="560" fg:w="1"/><text x="44.9427%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="44.6927%" y="309" width="0.0798%" height="15" fill="rgb(254,62,14)" fg:x="560" fg:w="1"/><text x="44.9427%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="44.6927%" y="293" width="0.0798%" height="15" fill="rgb(253,57,33)" fg:x="560" fg:w="1"/><text x="44.9427%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="44.6927%" y="277" width="0.0798%" height="15" fill="rgb(229,34,6)" fg:x="560" fg:w="1"/><text x="44.9427%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.6927%" y="261" width="0.0798%" height="15" fill="rgb(235,191,23)" fg:x="560" fg:w="1"/><text x="44.9427%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.6927%" y="245" width="0.0798%" height="15" fill="rgb(217,207,27)" fg:x="560" fg:w="1"/><text x="44.9427%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.6927%" y="229" width="0.0798%" height="15" fill="rgb(232,41,44)" fg:x="560" fg:w="1"/><text x="44.9427%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="44.6927%" y="213" width="0.0798%" height="15" fill="rgb(221,188,19)" fg:x="560" fg:w="1"/><text x="44.9427%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.6927%" y="197" width="0.0798%" height="15" fill="rgb(245,180,45)" fg:x="560" fg:w="1"/><text x="44.9427%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="44.6927%" y="181" width="0.0798%" height="15" fill="rgb(250,220,42)" fg:x="560" fg:w="1"/><text x="44.9427%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="44.6927%" y="165" width="0.0798%" height="15" fill="rgb(234,16,34)" fg:x="560" fg:w="1"/><text x="44.9427%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="44.6927%" y="149" width="0.0798%" height="15" fill="rgb(233,217,23)" fg:x="560" fg:w="1"/><text x="44.9427%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.6927%" y="133" width="0.0798%" height="15" fill="rgb(209,22,46)" fg:x="560" fg:w="1"/><text x="44.9427%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.7725%" y="469" width="0.0798%" height="15" fill="rgb(213,101,18)" fg:x="561" fg:w="1"/><text x="45.0225%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="44.7725%" y="517" width="0.1596%" height="15" fill="rgb(215,179,52)" fg:x="561" fg:w="2"/><text x="45.0225%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="44.7725%" y="501" width="0.1596%" height="15" fill="rgb(223,50,25)" fg:x="561" fg:w="2"/><text x="45.0225%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="44.7725%" y="485" width="0.1596%" height="15" fill="rgb(224,51,44)" fg:x="561" fg:w="2"/><text x="45.0225%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="44.8524%" y="469" width="0.0798%" height="15" fill="rgb(224,13,54)" fg:x="562" fg:w="1"/><text x="45.1024%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.8524%" y="453" width="0.0798%" height="15" fill="rgb(219,58,47)" fg:x="562" fg:w="1"/><text x="45.1024%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.8524%" y="437" width="0.0798%" height="15" fill="rgb(246,124,34)" fg:x="562" fg:w="1"/><text x="45.1024%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.8524%" y="421" width="0.0798%" height="15" fill="rgb(245,109,25)" fg:x="562" fg:w="1"/><text x="45.1024%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.8524%" y="405" width="0.0798%" height="15" fill="rgb(235,48,23)" fg:x="562" fg:w="1"/><text x="45.1024%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.8524%" y="389" width="0.0798%" height="15" fill="rgb(229,203,36)" fg:x="562" fg:w="1"/><text x="45.1024%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8524%" y="373" width="0.0798%" height="15" fill="rgb(234,180,9)" fg:x="562" fg:w="1"/><text x="45.1024%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8524%" y="357" width="0.0798%" height="15" fill="rgb(228,98,45)" fg:x="562" fg:w="1"/><text x="45.1024%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.8524%" y="341" width="0.0798%" height="15" fill="rgb(240,24,36)" fg:x="562" fg:w="1"/><text x="45.1024%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.8524%" y="325" width="0.0798%" height="15" fill="rgb(227,154,19)" fg:x="562" fg:w="1"/><text x="45.1024%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.8524%" y="309" width="0.0798%" height="15" fill="rgb(231,2,48)" fg:x="562" fg:w="1"/><text x="45.1024%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.8524%" y="293" width="0.0798%" height="15" fill="rgb(219,216,0)" fg:x="562" fg:w="1"/><text x="45.1024%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.8524%" y="277" width="0.0798%" height="15" fill="rgb(251,88,0)" fg:x="562" fg:w="1"/><text x="45.1024%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.8524%" y="261" width="0.0798%" height="15" fill="rgb(242,45,45)" fg:x="562" fg:w="1"/><text x="45.1024%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.8524%" y="245" width="0.0798%" height="15" fill="rgb(218,149,45)" fg:x="562" fg:w="1"/><text x="45.1024%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.8524%" y="229" width="0.0798%" height="15" fill="rgb(247,194,10)" fg:x="562" fg:w="1"/><text x="45.1024%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.8524%" y="213" width="0.0798%" height="15" fill="rgb(234,33,37)" fg:x="562" fg:w="1"/><text x="45.1024%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="44.9322%" y="517" width="0.1596%" height="15" fill="rgb(218,61,13)" fg:x="563" fg:w="2"/><text x="45.1822%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="44.9322%" y="501" width="0.1596%" height="15" fill="rgb(210,80,52)" fg:x="563" fg:w="2"/><text x="45.1822%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="44.9322%" y="485" width="0.1596%" height="15" fill="rgb(218,203,27)" fg:x="563" fg:w="2"/><text x="45.1822%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.9322%" y="469" width="0.1596%" height="15" fill="rgb(209,126,33)" fg:x="563" fg:w="2"/><text x="45.1822%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.9322%" y="453" width="0.1596%" height="15" fill="rgb(234,173,41)" fg:x="563" fg:w="2"/><text x="45.1822%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.0120%" y="437" width="0.0798%" height="15" fill="rgb(228,166,9)" fg:x="564" fg:w="1"/><text x="45.2620%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.0120%" y="421" width="0.0798%" height="15" fill="rgb(208,124,43)" fg:x="564" fg:w="1"/><text x="45.2620%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="45.0120%" y="405" width="0.0798%" height="15" fill="rgb(212,154,38)" fg:x="564" fg:w="1"/><text x="45.2620%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.0120%" y="389" width="0.0798%" height="15" fill="rgb(246,179,35)" fg:x="564" fg:w="1"/><text x="45.2620%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.0120%" y="373" width="0.0798%" height="15" fill="rgb(251,3,50)" fg:x="564" fg:w="1"/><text x="45.2620%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.0120%" y="357" width="0.0798%" height="15" fill="rgb(219,96,8)" fg:x="564" fg:w="1"/><text x="45.2620%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="45.0918%" y="421" width="0.1596%" height="15" fill="rgb(251,216,33)" fg:x="565" fg:w="2"/><text x="45.3418%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="45.0918%" y="405" width="0.1596%" height="15" fill="rgb(243,145,29)" fg:x="565" fg:w="2"/><text x="45.3418%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.2514%" y="421" width="0.0798%" height="15" fill="rgb(210,75,20)" fg:x="567" fg:w="1"/><text x="45.5014%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.2514%" y="405" width="0.0798%" height="15" fill="rgb(235,56,8)" fg:x="567" fg:w="1"/><text x="45.5014%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.2514%" y="389" width="0.0798%" height="15" fill="rgb(226,175,49)" fg:x="567" fg:w="1"/><text x="45.5014%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.3312%" y="373" width="0.0798%" height="15" fill="rgb(242,204,23)" fg:x="568" fg:w="1"/><text x="45.5812%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.3312%" y="357" width="0.0798%" height="15" fill="rgb(225,104,24)" fg:x="568" fg:w="1"/><text x="45.5812%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.3312%" y="341" width="0.0798%" height="15" fill="rgb(253,34,1)" fg:x="568" fg:w="1"/><text x="45.5812%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.3312%" y="325" width="0.0798%" height="15" fill="rgb(233,199,23)" fg:x="568" fg:w="1"/><text x="45.5812%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.3312%" y="309" width="0.0798%" height="15" fill="rgb(247,7,51)" fg:x="568" fg:w="1"/><text x="45.5812%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.3312%" y="293" width="0.0798%" height="15" fill="rgb(214,146,12)" fg:x="568" fg:w="1"/><text x="45.5812%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3312%" y="277" width="0.0798%" height="15" fill="rgb(234,181,43)" fg:x="568" fg:w="1"/><text x="45.5812%" y="287.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="45.0918%" y="501" width="0.3990%" height="15" fill="rgb(239,148,6)" fg:x="565" fg:w="5"/><text x="45.3418%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="45.0918%" y="485" width="0.3990%" height="15" fill="rgb(206,151,17)" fg:x="565" fg:w="5"/><text x="45.3418%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="45.0918%" y="469" width="0.3990%" height="15" fill="rgb(213,215,10)" fg:x="565" fg:w="5"/><text x="45.3418%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="45.0918%" y="453" width="0.3990%" height="15" fill="rgb(215,220,44)" fg:x="565" fg:w="5"/><text x="45.3418%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="45.0918%" y="437" width="0.3990%" height="15" fill="rgb(245,205,37)" fg:x="565" fg:w="5"/><text x="45.3418%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.3312%" y="421" width="0.1596%" height="15" fill="rgb(245,130,43)" fg:x="568" fg:w="2"/><text x="45.5812%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.3312%" y="405" width="0.1596%" height="15" fill="rgb(231,227,38)" fg:x="568" fg:w="2"/><text x="45.5812%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.3312%" y="389" width="0.1596%" height="15" fill="rgb(233,185,4)" fg:x="568" fg:w="2"/><text x="45.5812%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.4110%" y="373" width="0.0798%" height="15" fill="rgb(224,154,43)" fg:x="569" fg:w="1"/><text x="45.6610%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.4110%" y="357" width="0.0798%" height="15" fill="rgb(235,156,15)" fg:x="569" fg:w="1"/><text x="45.6610%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.4110%" y="341" width="0.0798%" height="15" fill="rgb(211,55,43)" fg:x="569" fg:w="1"/><text x="45.6610%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.4110%" y="325" width="0.0798%" height="15" fill="rgb(247,149,40)" fg:x="569" fg:w="1"/><text x="45.6610%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.4908%" y="437" width="0.0798%" height="15" fill="rgb(232,171,16)" fg:x="570" fg:w="1"/><text x="45.7408%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.6504%" y="389" width="0.0798%" height="15" fill="rgb(215,117,49)" fg:x="572" fg:w="1"/><text x="45.9004%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.6504%" y="373" width="0.0798%" height="15" fill="rgb(246,194,11)" fg:x="572" fg:w="1"/><text x="45.9004%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.6504%" y="357" width="0.0798%" height="15" fill="rgb(242,101,44)" fg:x="572" fg:w="1"/><text x="45.9004%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.6504%" y="341" width="0.0798%" height="15" fill="rgb(226,174,6)" fg:x="572" fg:w="1"/><text x="45.9004%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.6504%" y="325" width="0.0798%" height="15" fill="rgb(213,150,20)" fg:x="572" fg:w="1"/><text x="45.9004%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.6504%" y="309" width="0.0798%" height="15" fill="rgb(222,124,42)" fg:x="572" fg:w="1"/><text x="45.9004%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="45.6504%" y="293" width="0.0798%" height="15" fill="rgb(250,19,47)" fg:x="572" fg:w="1"/><text x="45.9004%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="45.6504%" y="277" width="0.0798%" height="15" fill="rgb(241,217,19)" fg:x="572" fg:w="1"/><text x="45.9004%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6504%" y="261" width="0.0798%" height="15" fill="rgb(207,210,34)" fg:x="572" fg:w="1"/><text x="45.9004%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="45.5706%" y="421" width="0.2394%" height="15" fill="rgb(244,45,4)" fg:x="571" fg:w="3"/><text x="45.8206%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="45.5706%" y="405" width="0.2394%" height="15" fill="rgb(252,134,50)" fg:x="571" fg:w="3"/><text x="45.8206%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="45.7302%" y="389" width="0.0798%" height="15" fill="rgb(238,74,2)" fg:x="573" fg:w="1"/><text x="45.9802%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.7302%" y="373" width="0.0798%" height="15" fill="rgb(226,58,46)" fg:x="573" fg:w="1"/><text x="45.9802%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.7302%" y="357" width="0.0798%" height="15" fill="rgb(232,83,35)" fg:x="573" fg:w="1"/><text x="45.9802%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.7302%" y="341" width="0.0798%" height="15" fill="rgb(212,148,47)" fg:x="573" fg:w="1"/><text x="45.9802%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="45.7302%" y="325" width="0.0798%" height="15" fill="rgb(235,29,1)" fg:x="573" fg:w="1"/><text x="45.9802%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="45.7302%" y="309" width="0.0798%" height="15" fill="rgb(247,55,37)" fg:x="573" fg:w="1"/><text x="45.9802%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="45.8101%" y="421" width="0.1596%" height="15" fill="rgb(222,48,3)" fg:x="574" fg:w="2"/><text x="46.0601%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="45.8101%" y="405" width="0.1596%" height="15" fill="rgb(234,21,33)" fg:x="574" fg:w="2"/><text x="46.0601%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="45.8899%" y="389" width="0.0798%" height="15" fill="rgb(247,178,53)" fg:x="575" fg:w="1"/><text x="46.1399%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="45.8899%" y="373" width="0.0798%" height="15" fill="rgb(225,75,7)" fg:x="575" fg:w="1"/><text x="46.1399%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="45.9697%" y="373" width="0.0798%" height="15" fill="rgb(219,199,7)" fg:x="576" fg:w="1"/><text x="46.2197%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="45.9697%" y="357" width="0.0798%" height="15" fill="rgb(209,93,42)" fg:x="576" fg:w="1"/><text x="46.2197%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.9697%" y="341" width="0.0798%" height="15" fill="rgb(240,175,17)" fg:x="576" fg:w="1"/><text x="46.2197%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.9697%" y="325" width="0.0798%" height="15" fill="rgb(232,106,7)" fg:x="576" fg:w="1"/><text x="46.2197%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.9697%" y="309" width="0.0798%" height="15" fill="rgb(242,106,43)" fg:x="576" fg:w="1"/><text x="46.2197%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (17 samples, 1.36%)</title><rect x="44.7725%" y="565" width="1.3567%" height="15" fill="rgb(242,61,37)" fg:x="561" fg:w="17"/><text x="45.0225%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.36%)</title><rect x="44.7725%" y="549" width="1.3567%" height="15" fill="rgb(205,72,10)" fg:x="561" fg:w="17"/><text x="45.0225%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.36%)</title><rect x="44.7725%" y="533" width="1.3567%" height="15" fill="rgb(214,184,36)" fg:x="561" fg:w="17"/><text x="45.0225%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::from_str (13 samples, 1.04%)</title><rect x="45.0918%" y="517" width="1.0375%" height="15" fill="rgb(206,107,18)" fg:x="565" fg:w="13"/><text x="45.3418%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="45.4908%" y="501" width="0.6385%" height="15" fill="rgb(210,75,5)" fg:x="570" fg:w="8"/><text x="45.7408%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="45.4908%" y="485" width="0.6385%" height="15" fill="rgb(205,3,19)" fg:x="570" fg:w="8"/><text x="45.7408%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="45.4908%" y="469" width="0.6385%" height="15" fill="rgb(207,181,42)" fg:x="570" fg:w="8"/><text x="45.7408%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="45.4908%" y="453" width="0.6385%" height="15" fill="rgb(229,179,43)" fg:x="570" fg:w="8"/><text x="45.7408%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="45.5706%" y="437" width="0.5587%" height="15" fill="rgb(246,95,30)" fg:x="571" fg:w="7"/><text x="45.8206%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.9697%" y="421" width="0.1596%" height="15" fill="rgb(234,144,45)" fg:x="576" fg:w="2"/><text x="46.2197%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.9697%" y="405" width="0.1596%" height="15" fill="rgb(250,54,25)" fg:x="576" fg:w="2"/><text x="46.2197%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="45.9697%" y="389" width="0.1596%" height="15" fill="rgb(215,195,40)" fg:x="576" fg:w="2"/><text x="46.2197%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.0495%" y="373" width="0.0798%" height="15" fill="rgb(233,188,42)" fg:x="577" fg:w="1"/><text x="46.2995%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.0495%" y="357" width="0.0798%" height="15" fill="rgb(247,227,35)" fg:x="577" fg:w="1"/><text x="46.2995%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="46.0495%" y="341" width="0.0798%" height="15" fill="rgb(249,124,27)" fg:x="577" fg:w="1"/><text x="46.2995%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.0495%" y="325" width="0.0798%" height="15" fill="rgb(219,207,25)" fg:x="577" fg:w="1"/><text x="46.2995%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.0495%" y="309" width="0.0798%" height="15" fill="rgb(241,216,47)" fg:x="577" fg:w="1"/><text x="46.2995%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.0495%" y="293" width="0.0798%" height="15" fill="rgb(233,82,50)" fg:x="577" fg:w="1"/><text x="46.2995%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.0495%" y="277" width="0.0798%" height="15" fill="rgb(232,63,2)" fg:x="577" fg:w="1"/><text x="46.2995%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.0495%" y="261" width="0.0798%" height="15" fill="rgb(236,184,28)" fg:x="577" fg:w="1"/><text x="46.2995%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.1293%" y="565" width="0.1596%" height="15" fill="rgb(254,63,27)" fg:x="578" fg:w="2"/><text x="46.3793%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (21 samples, 1.68%)</title><rect x="44.6927%" y="613" width="1.6760%" height="15" fill="rgb(253,106,28)" fg:x="560" fg:w="21"/><text x="44.9427%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (20 samples, 1.60%)</title><rect x="44.7725%" y="597" width="1.5962%" height="15" fill="rgb(225,141,39)" fg:x="561" fg:w="20"/><text x="45.0225%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (20 samples, 1.60%)</title><rect x="44.7725%" y="581" width="1.5962%" height="15" fill="rgb(222,157,20)" fg:x="561" fg:w="20"/><text x="45.0225%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.2889%" y="565" width="0.0798%" height="15" fill="rgb(210,190,9)" fg:x="580" fg:w="1"/><text x="46.5389%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.2889%" y="549" width="0.0798%" height="15" fill="rgb(242,167,7)" fg:x="580" fg:w="1"/><text x="46.5389%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="46.3687%" y="565" width="0.0798%" height="15" fill="rgb(227,82,41)" fg:x="581" fg:w="1"/><text x="46.6187%" y="575.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="46.3687%" y="549" width="0.0798%" height="15" fill="rgb(222,131,13)" fg:x="581" fg:w="1"/><text x="46.6187%" y="559.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (26 samples, 2.08%)</title><rect x="44.5331%" y="629" width="2.0750%" height="15" fill="rgb(221,98,26)" fg:x="558" fg:w="26"/><text x="44.7831%" y="639.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="46.3687%" y="613" width="0.2394%" height="15" fill="rgb(251,63,52)" fg:x="581" fg:w="3"/><text x="46.6187%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="46.3687%" y="597" width="0.2394%" height="15" fill="rgb(246,25,43)" fg:x="581" fg:w="3"/><text x="46.6187%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="46.3687%" y="581" width="0.2394%" height="15" fill="rgb(247,167,15)" fg:x="581" fg:w="3"/><text x="46.6187%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="46.4485%" y="565" width="0.1596%" height="15" fill="rgb(240,104,42)" fg:x="582" fg:w="2"/><text x="46.6985%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="46.5283%" y="549" width="0.0798%" height="15" fill="rgb(224,54,6)" fg:x="583" fg:w="1"/><text x="46.7783%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="46.5283%" y="533" width="0.0798%" height="15" fill="rgb(244,108,35)" fg:x="583" fg:w="1"/><text x="46.7783%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.5283%" y="517" width="0.0798%" height="15" fill="rgb(216,154,2)" fg:x="583" fg:w="1"/><text x="46.7783%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.5283%" y="501" width="0.0798%" height="15" fill="rgb(222,8,47)" fg:x="583" fg:w="1"/><text x="46.7783%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="46.5283%" y="485" width="0.0798%" height="15" fill="rgb(252,93,1)" fg:x="583" fg:w="1"/><text x="46.7783%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="46.5283%" y="469" width="0.0798%" height="15" fill="rgb(223,226,51)" fg:x="583" fg:w="1"/><text x="46.7783%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.5283%" y="453" width="0.0798%" height="15" fill="rgb(206,147,9)" fg:x="583" fg:w="1"/><text x="46.7783%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.5283%" y="437" width="0.0798%" height="15" fill="rgb(248,180,41)" fg:x="583" fg:w="1"/><text x="46.7783%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.5283%" y="421" width="0.0798%" height="15" fill="rgb(209,47,50)" fg:x="583" fg:w="1"/><text x="46.7783%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.5283%" y="405" width="0.0798%" height="15" fill="rgb(243,65,31)" fg:x="583" fg:w="1"/><text x="46.7783%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="46.5283%" y="389" width="0.0798%" height="15" fill="rgb(228,128,1)" fg:x="583" fg:w="1"/><text x="46.7783%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="46.5283%" y="373" width="0.0798%" height="15" fill="rgb(231,192,16)" fg:x="583" fg:w="1"/><text x="46.7783%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="46.5283%" y="357" width="0.0798%" height="15" fill="rgb(224,26,40)" fg:x="583" fg:w="1"/><text x="46.7783%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="46.5283%" y="341" width="0.0798%" height="15" fill="rgb(214,192,17)" fg:x="583" fg:w="1"/><text x="46.7783%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="46.5283%" y="325" width="0.0798%" height="15" fill="rgb(225,147,18)" fg:x="583" fg:w="1"/><text x="46.7783%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="46.5283%" y="309" width="0.0798%" height="15" fill="rgb(205,35,11)" fg:x="583" fg:w="1"/><text x="46.7783%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.5283%" y="293" width="0.0798%" height="15" fill="rgb(242,40,42)" fg:x="583" fg:w="1"/><text x="46.7783%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="46.5283%" y="277" width="0.0798%" height="15" fill="rgb(250,170,13)" fg:x="583" fg:w="1"/><text x="46.7783%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.5283%" y="261" width="0.0798%" height="15" fill="rgb(240,161,28)" fg:x="583" fg:w="1"/><text x="46.7783%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="46.5283%" y="245" width="0.0798%" height="15" fill="rgb(245,179,12)" fg:x="583" fg:w="1"/><text x="46.7783%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="46.5283%" y="229" width="0.0798%" height="15" fill="rgb(250,92,32)" fg:x="583" fg:w="1"/><text x="46.7783%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="46.5283%" y="213" width="0.0798%" height="15" fill="rgb(233,10,40)" fg:x="583" fg:w="1"/><text x="46.7783%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="46.5283%" y="197" width="0.0798%" height="15" fill="rgb(217,98,1)" fg:x="583" fg:w="1"/><text x="46.7783%" y="207.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="46.6879%" y="597" width="0.0798%" height="15" fill="rgb(238,202,7)" fg:x="585" fg:w="1"/><text x="46.9379%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="47.0870%" y="485" width="0.1596%" height="15" fill="rgb(222,91,3)" fg:x="590" fg:w="2"/><text x="47.3370%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="46.9274%" y="501" width="0.3990%" height="15" fill="rgb(211,170,49)" fg:x="588" fg:w="5"/><text x="47.1774%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.2466%" y="485" width="0.0798%" height="15" fill="rgb(253,139,18)" fg:x="592" fg:w="1"/><text x="47.4966%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="46.9274%" y="517" width="0.4789%" height="15" fill="rgb(222,4,43)" fg:x="588" fg:w="6"/><text x="47.1774%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.3264%" y="501" width="0.0798%" height="15" fill="rgb(207,205,12)" fg:x="593" fg:w="1"/><text x="47.5764%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="46.8476%" y="533" width="0.6385%" height="15" fill="rgb(216,159,46)" fg:x="587" fg:w="8"/><text x="47.0976%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.4062%" y="517" width="0.0798%" height="15" fill="rgb(236,115,1)" fg:x="594" fg:w="1"/><text x="47.6562%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.4860%" y="533" width="0.1596%" height="15" fill="rgb(251,35,33)" fg:x="595" fg:w="2"/><text x="47.7360%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="46.7678%" y="565" width="1.0375%" height="15" fill="rgb(248,62,51)" fg:x="586" fg:w="13"/><text x="47.0178%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="46.8476%" y="549" width="0.9577%" height="15" fill="rgb(254,180,19)" fg:x="587" fg:w="12"/><text x="47.0976%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="47.6457%" y="533" width="0.1596%" height="15" fill="rgb(217,100,32)" fg:x="597" fg:w="2"/><text x="47.8957%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="47.6457%" y="517" width="0.1596%" height="15" fill="rgb(224,71,22)" fg:x="597" fg:w="2"/><text x="47.8957%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.7255%" y="501" width="0.0798%" height="15" fill="rgb(251,185,33)" fg:x="598" fg:w="1"/><text x="47.9755%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (25 samples, 2.00%)</title><rect x="46.7678%" y="597" width="1.9952%" height="15" fill="rgb(209,75,48)" fg:x="586" fg:w="25"/><text x="47.0178%" y="607.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.00%)</title><rect x="46.7678%" y="581" width="1.9952%" height="15" fill="rgb(253,190,16)" fg:x="586" fg:w="25"/><text x="47.0178%" y="591.50">&lt;..</text></g><g><title>__libc_free (12 samples, 0.96%)</title><rect x="47.8053%" y="565" width="0.9577%" height="15" fill="rgb(226,140,1)" fg:x="599" fg:w="12"/><text x="48.0553%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9226%" y="565" width="0.0798%" height="15" fill="rgb(206,75,30)" fg:x="613" fg:w="1"/><text x="49.1726%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9226%" y="549" width="0.0798%" height="15" fill="rgb(231,208,37)" fg:x="613" fg:w="1"/><text x="49.1726%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.9226%" y="533" width="0.0798%" height="15" fill="rgb(238,136,40)" fg:x="613" fg:w="1"/><text x="49.1726%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.9226%" y="517" width="0.0798%" height="15" fill="rgb(247,137,17)" fg:x="613" fg:w="1"/><text x="49.1726%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.9226%" y="501" width="0.0798%" height="15" fill="rgb(240,60,40)" fg:x="613" fg:w="1"/><text x="49.1726%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9226%" y="485" width="0.0798%" height="15" fill="rgb(236,68,50)" fg:x="613" fg:w="1"/><text x="49.1726%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9226%" y="469" width="0.0798%" height="15" fill="rgb(230,42,12)" fg:x="613" fg:w="1"/><text x="49.1726%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.9226%" y="453" width="0.0798%" height="15" fill="rgb(219,16,16)" fg:x="613" fg:w="1"/><text x="49.1726%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.9226%" y="437" width="0.0798%" height="15" fill="rgb(220,38,35)" fg:x="613" fg:w="1"/><text x="49.1726%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.9226%" y="421" width="0.0798%" height="15" fill="rgb(228,33,1)" fg:x="613" fg:w="1"/><text x="49.1726%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.9226%" y="405" width="0.0798%" height="15" fill="rgb(241,46,31)" fg:x="613" fg:w="1"/><text x="49.1726%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9226%" y="389" width="0.0798%" height="15" fill="rgb(232,58,20)" fg:x="613" fg:w="1"/><text x="49.1726%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="49.0822%" y="549" width="0.0798%" height="15" fill="rgb(206,228,53)" fg:x="615" fg:w="1"/><text x="49.3322%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.1620%" y="549" width="0.0798%" height="15" fill="rgb(206,88,33)" fg:x="616" fg:w="1"/><text x="49.4120%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="49.2418%" y="549" width="0.0798%" height="15" fill="rgb(238,69,7)" fg:x="617" fg:w="1"/><text x="49.4918%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="49.3216%" y="533" width="0.0798%" height="15" fill="rgb(250,21,46)" fg:x="618" fg:w="1"/><text x="49.5716%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.3216%" y="517" width="0.0798%" height="15" fill="rgb(215,212,21)" fg:x="618" fg:w="1"/><text x="49.5716%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.3216%" y="501" width="0.0798%" height="15" fill="rgb(211,35,12)" fg:x="618" fg:w="1"/><text x="49.5716%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.3216%" y="485" width="0.0798%" height="15" fill="rgb(231,184,16)" fg:x="618" fg:w="1"/><text x="49.5716%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3216%" y="469" width="0.0798%" height="15" fill="rgb(242,140,15)" fg:x="618" fg:w="1"/><text x="49.5716%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.3216%" y="453" width="0.0798%" height="15" fill="rgb(220,37,14)" fg:x="618" fg:w="1"/><text x="49.5716%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="49.0024%" y="565" width="0.4789%" height="15" fill="rgb(223,146,22)" fg:x="614" fg:w="6"/><text x="49.2524%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.16%)</title><rect x="49.3216%" y="549" width="0.1596%" height="15" fill="rgb(216,132,15)" fg:x="618" fg:w="2"/><text x="49.5716%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.4014%" y="533" width="0.0798%" height="15" fill="rgb(248,83,5)" fg:x="619" fg:w="1"/><text x="49.6514%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.5611%" y="533" width="0.0798%" height="15" fill="rgb(231,206,48)" fg:x="621" fg:w="1"/><text x="49.8111%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.32%)</title><rect x="49.4812%" y="565" width="0.3192%" height="15" fill="rgb(253,185,37)" fg:x="620" fg:w="4"/><text x="49.7312%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="49.4812%" y="549" width="0.3192%" height="15" fill="rgb(208,21,44)" fg:x="620" fg:w="4"/><text x="49.7312%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.6409%" y="533" width="0.1596%" height="15" fill="rgb(236,125,4)" fg:x="622" fg:w="2"/><text x="49.8909%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="49.6409%" y="517" width="0.1596%" height="15" fill="rgb(226,134,25)" fg:x="622" fg:w="2"/><text x="49.8909%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.7207%" y="501" width="0.0798%" height="15" fill="rgb(250,201,12)" fg:x="623" fg:w="1"/><text x="49.9707%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="49.8005%" y="565" width="0.1596%" height="15" fill="rgb(225,92,18)" fg:x="624" fg:w="2"/><text x="50.0505%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="49.8005%" y="549" width="0.1596%" height="15" fill="rgb(227,35,22)" fg:x="624" fg:w="2"/><text x="50.0505%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="49.8803%" y="533" width="0.0798%" height="15" fill="rgb(214,180,52)" fg:x="625" fg:w="1"/><text x="50.1303%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="49.8803%" y="517" width="0.0798%" height="15" fill="rgb(233,55,38)" fg:x="625" fg:w="1"/><text x="50.1303%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="50.1197%" y="517" width="0.0798%" height="15" fill="rgb(249,171,43)" fg:x="628" fg:w="1"/><text x="50.3697%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.1995%" y="485" width="0.0798%" height="15" fill="rgb(239,87,2)" fg:x="629" fg:w="1"/><text x="50.4495%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="50.2793%" y="485" width="0.0798%" height="15" fill="rgb(248,141,5)" fg:x="630" fg:w="1"/><text x="50.5293%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.2793%" y="469" width="0.0798%" height="15" fill="rgb(238,33,42)" fg:x="630" fg:w="1"/><text x="50.5293%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="50.3591%" y="453" width="0.1596%" height="15" fill="rgb(231,57,19)" fg:x="631" fg:w="2"/><text x="50.6091%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="50.3591%" y="437" width="0.1596%" height="15" fill="rgb(214,78,53)" fg:x="631" fg:w="2"/><text x="50.6091%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4389%" y="421" width="0.0798%" height="15" fill="rgb(206,132,29)" fg:x="632" fg:w="1"/><text x="50.6889%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4389%" y="405" width="0.0798%" height="15" fill="rgb(248,174,31)" fg:x="632" fg:w="1"/><text x="50.6889%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.4389%" y="389" width="0.0798%" height="15" fill="rgb(221,87,13)" fg:x="632" fg:w="1"/><text x="50.6889%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.4389%" y="373" width="0.0798%" height="15" fill="rgb(223,197,17)" fg:x="632" fg:w="1"/><text x="50.6889%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.4389%" y="357" width="0.0798%" height="15" fill="rgb(220,144,50)" fg:x="632" fg:w="1"/><text x="50.6889%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.4389%" y="341" width="0.0798%" height="15" fill="rgb(244,201,11)" fg:x="632" fg:w="1"/><text x="50.6889%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.4389%" y="325" width="0.0798%" height="15" fill="rgb(249,81,34)" fg:x="632" fg:w="1"/><text x="50.6889%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.4389%" y="309" width="0.0798%" height="15" fill="rgb(205,161,12)" fg:x="632" fg:w="1"/><text x="50.6889%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.4389%" y="293" width="0.0798%" height="15" fill="rgb(252,139,50)" fg:x="632" fg:w="1"/><text x="50.6889%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.4389%" y="277" width="0.0798%" height="15" fill="rgb(205,169,14)" fg:x="632" fg:w="1"/><text x="50.6889%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.4389%" y="261" width="0.0798%" height="15" fill="rgb(248,198,33)" fg:x="632" fg:w="1"/><text x="50.6889%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.4389%" y="245" width="0.0798%" height="15" fill="rgb(236,23,21)" fg:x="632" fg:w="1"/><text x="50.6889%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="50.1995%" y="501" width="0.3990%" height="15" fill="rgb(231,13,38)" fg:x="629" fg:w="5"/><text x="50.4495%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="50.3591%" y="485" width="0.2394%" height="15" fill="rgb(239,139,21)" fg:x="631" fg:w="3"/><text x="50.6091%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (3 samples, 0.24%)</title><rect x="50.3591%" y="469" width="0.2394%" height="15" fill="rgb(222,164,45)" fg:x="631" fg:w="3"/><text x="50.6091%" y="479.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="50.5188%" y="453" width="0.0798%" height="15" fill="rgb(230,52,27)" fg:x="633" fg:w="1"/><text x="50.7688%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.6784%" y="485" width="0.0798%" height="15" fill="rgb(227,143,42)" fg:x="635" fg:w="1"/><text x="50.9284%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.7582%" y="485" width="0.0798%" height="15" fill="rgb(249,127,1)" fg:x="636" fg:w="1"/><text x="51.0082%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.9178%" y="469" width="0.0798%" height="15" fill="rgb(243,107,26)" fg:x="638" fg:w="1"/><text x="51.1678%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9976%" y="277" width="0.0798%" height="15" fill="rgb(225,7,45)" fg:x="639" fg:w="1"/><text x="51.2476%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9976%" y="261" width="0.0798%" height="15" fill="rgb(241,88,38)" fg:x="639" fg:w="1"/><text x="51.2476%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9976%" y="245" width="0.0798%" height="15" fill="rgb(226,121,9)" fg:x="639" fg:w="1"/><text x="51.2476%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="50.9976%" y="357" width="0.1596%" height="15" fill="rgb(253,60,29)" fg:x="639" fg:w="2"/><text x="51.2476%" y="367.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="50.9976%" y="341" width="0.1596%" height="15" fill="rgb(244,181,39)" fg:x="639" fg:w="2"/><text x="51.2476%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="50.9976%" y="325" width="0.1596%" height="15" fill="rgb(252,203,31)" fg:x="639" fg:w="2"/><text x="51.2476%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.9976%" y="309" width="0.1596%" height="15" fill="rgb(224,120,8)" fg:x="639" fg:w="2"/><text x="51.2476%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.9976%" y="293" width="0.1596%" height="15" fill="rgb(205,171,54)" fg:x="639" fg:w="2"/><text x="51.2476%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.0774%" y="277" width="0.0798%" height="15" fill="rgb(235,89,11)" fg:x="640" fg:w="1"/><text x="51.3274%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="50.9976%" y="389" width="0.2394%" height="15" fill="rgb(212,180,28)" fg:x="639" fg:w="3"/><text x="51.2476%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="50.9976%" y="373" width="0.2394%" height="15" fill="rgb(247,84,49)" fg:x="639" fg:w="3"/><text x="51.2476%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="51.1572%" y="357" width="0.0798%" height="15" fill="rgb(236,187,52)" fg:x="641" fg:w="1"/><text x="51.4072%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="51.1572%" y="341" width="0.0798%" height="15" fill="rgb(227,24,15)" fg:x="641" fg:w="1"/><text x="51.4072%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="51.1572%" y="325" width="0.0798%" height="15" fill="rgb(227,211,13)" fg:x="641" fg:w="1"/><text x="51.4072%" y="335.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="51.1572%" y="309" width="0.0798%" height="15" fill="rgb(245,52,14)" fg:x="641" fg:w="1"/><text x="51.4072%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.2370%" y="341" width="0.0798%" height="15" fill="rgb(225,185,13)" fg:x="642" fg:w="1"/><text x="51.4870%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.2370%" y="325" width="0.0798%" height="15" fill="rgb(217,160,29)" fg:x="642" fg:w="1"/><text x="51.4870%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.2370%" y="309" width="0.0798%" height="15" fill="rgb(216,115,53)" fg:x="642" fg:w="1"/><text x="51.4870%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.2370%" y="293" width="0.0798%" height="15" fill="rgb(236,99,5)" fg:x="642" fg:w="1"/><text x="51.4870%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.2370%" y="277" width="0.0798%" height="15" fill="rgb(222,60,38)" fg:x="642" fg:w="1"/><text x="51.4870%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.2370%" y="261" width="0.0798%" height="15" fill="rgb(212,82,22)" fg:x="642" fg:w="1"/><text x="51.4870%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.2370%" y="245" width="0.0798%" height="15" fill="rgb(214,48,28)" fg:x="642" fg:w="1"/><text x="51.4870%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2370%" y="229" width="0.0798%" height="15" fill="rgb(245,196,50)" fg:x="642" fg:w="1"/><text x="51.4870%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2370%" y="213" width="0.0798%" height="15" fill="rgb(225,159,46)" fg:x="642" fg:w="1"/><text x="51.4870%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.2370%" y="197" width="0.0798%" height="15" fill="rgb(207,195,48)" fg:x="642" fg:w="1"/><text x="51.4870%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.2370%" y="181" width="0.0798%" height="15" fill="rgb(240,73,3)" fg:x="642" fg:w="1"/><text x="51.4870%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.2370%" y="165" width="0.0798%" height="15" fill="rgb(245,57,23)" fg:x="642" fg:w="1"/><text x="51.4870%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.2370%" y="149" width="0.0798%" height="15" fill="rgb(240,75,18)" fg:x="642" fg:w="1"/><text x="51.4870%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2370%" y="133" width="0.0798%" height="15" fill="rgb(238,168,12)" fg:x="642" fg:w="1"/><text x="51.4870%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="51.2370%" y="389" width="0.1596%" height="15" fill="rgb(226,20,40)" fg:x="642" fg:w="2"/><text x="51.4870%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="51.2370%" y="373" width="0.1596%" height="15" fill="rgb(224,130,35)" fg:x="642" fg:w="2"/><text x="51.4870%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="51.2370%" y="357" width="0.1596%" height="15" fill="rgb(225,63,41)" fg:x="642" fg:w="2"/><text x="51.4870%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.3168%" y="341" width="0.0798%" height="15" fill="rgb(219,3,3)" fg:x="643" fg:w="1"/><text x="51.5668%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3168%" y="325" width="0.0798%" height="15" fill="rgb(218,157,4)" fg:x="643" fg:w="1"/><text x="51.5668%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.3168%" y="309" width="0.0798%" height="15" fill="rgb(232,76,36)" fg:x="643" fg:w="1"/><text x="51.5668%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3168%" y="293" width="0.0798%" height="15" fill="rgb(247,36,0)" fg:x="643" fg:w="1"/><text x="51.5668%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.3168%" y="277" width="0.0798%" height="15" fill="rgb(205,2,34)" fg:x="643" fg:w="1"/><text x="51.5668%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3168%" y="261" width="0.0798%" height="15" fill="rgb(239,136,13)" fg:x="643" fg:w="1"/><text x="51.5668%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.3168%" y="245" width="0.0798%" height="15" fill="rgb(253,122,12)" fg:x="643" fg:w="1"/><text x="51.5668%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3168%" y="229" width="0.0798%" height="15" fill="rgb(222,174,7)" fg:x="643" fg:w="1"/><text x="51.5668%" y="239.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="51.3966%" y="373" width="0.0798%" height="15" fill="rgb(208,191,42)" fg:x="644" fg:w="1"/><text x="51.6466%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.3966%" y="357" width="0.0798%" height="15" fill="rgb(237,212,15)" fg:x="644" fg:w="1"/><text x="51.6466%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.3966%" y="341" width="0.0798%" height="15" fill="rgb(215,65,20)" fg:x="644" fg:w="1"/><text x="51.6466%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.3966%" y="325" width="0.0798%" height="15" fill="rgb(232,103,11)" fg:x="644" fg:w="1"/><text x="51.6466%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.3966%" y="309" width="0.0798%" height="15" fill="rgb(235,148,18)" fg:x="644" fg:w="1"/><text x="51.6466%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.3966%" y="293" width="0.0798%" height="15" fill="rgb(240,173,7)" fg:x="644" fg:w="1"/><text x="51.6466%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.3966%" y="277" width="0.0798%" height="15" fill="rgb(228,182,25)" fg:x="644" fg:w="1"/><text x="51.6466%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.3966%" y="261" width="0.0798%" height="15" fill="rgb(247,3,52)" fg:x="644" fg:w="1"/><text x="51.6466%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.3966%" y="245" width="0.0798%" height="15" fill="rgb(226,155,8)" fg:x="644" fg:w="1"/><text x="51.6466%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.3966%" y="229" width="0.0798%" height="15" fill="rgb(243,195,38)" fg:x="644" fg:w="1"/><text x="51.6466%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.3966%" y="213" width="0.0798%" height="15" fill="rgb(254,181,33)" fg:x="644" fg:w="1"/><text x="51.6466%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.3966%" y="197" width="0.0798%" height="15" fill="rgb(232,98,23)" fg:x="644" fg:w="1"/><text x="51.6466%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.3966%" y="181" width="0.0798%" height="15" fill="rgb(205,23,10)" fg:x="644" fg:w="1"/><text x="51.6466%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.3966%" y="165" width="0.0798%" height="15" fill="rgb(212,124,38)" fg:x="644" fg:w="1"/><text x="51.6466%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.3966%" y="149" width="0.0798%" height="15" fill="rgb(228,207,2)" fg:x="644" fg:w="1"/><text x="51.6466%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.5563%" y="341" width="0.0798%" height="15" fill="rgb(215,120,22)" fg:x="646" fg:w="1"/><text x="51.8063%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.5563%" y="325" width="0.0798%" height="15" fill="rgb(251,172,33)" fg:x="646" fg:w="1"/><text x="51.8063%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.5563%" y="309" width="0.0798%" height="15" fill="rgb(250,83,2)" fg:x="646" fg:w="1"/><text x="51.8063%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.5563%" y="293" width="0.0798%" height="15" fill="rgb(210,132,53)" fg:x="646" fg:w="1"/><text x="51.8063%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.5563%" y="277" width="0.0798%" height="15" fill="rgb(221,208,36)" fg:x="646" fg:w="1"/><text x="51.8063%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="51.5563%" y="261" width="0.0798%" height="15" fill="rgb(205,192,46)" fg:x="646" fg:w="1"/><text x="51.8063%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.5563%" y="245" width="0.0798%" height="15" fill="rgb(223,163,14)" fg:x="646" fg:w="1"/><text x="51.8063%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.5563%" y="229" width="0.0798%" height="15" fill="rgb(218,41,28)" fg:x="646" fg:w="1"/><text x="51.8063%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="51.5563%" y="213" width="0.0798%" height="15" fill="rgb(235,104,10)" fg:x="646" fg:w="1"/><text x="51.8063%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.5563%" y="197" width="0.0798%" height="15" fill="rgb(246,17,4)" fg:x="646" fg:w="1"/><text x="51.8063%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.5563%" y="181" width="0.0798%" height="15" fill="rgb(240,7,16)" fg:x="646" fg:w="1"/><text x="51.8063%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="51.5563%" y="165" width="0.0798%" height="15" fill="rgb(213,160,23)" fg:x="646" fg:w="1"/><text x="51.8063%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.5563%" y="149" width="0.0798%" height="15" fill="rgb(251,179,49)" fg:x="646" fg:w="1"/><text x="51.8063%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.5563%" y="133" width="0.0798%" height="15" fill="rgb(247,198,10)" fg:x="646" fg:w="1"/><text x="51.8063%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.72%)</title><rect x="50.9976%" y="437" width="0.7183%" height="15" fill="rgb(220,65,29)" fg:x="639" fg:w="9"/><text x="51.2476%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="50.9976%" y="421" width="0.7183%" height="15" fill="rgb(237,171,28)" fg:x="639" fg:w="9"/><text x="51.2476%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="50.9976%" y="405" width="0.7183%" height="15" fill="rgb(228,44,26)" fg:x="639" fg:w="9"/><text x="51.2476%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::from_str (4 samples, 0.32%)</title><rect x="51.3966%" y="389" width="0.3192%" height="15" fill="rgb(216,210,27)" fg:x="644" fg:w="4"/><text x="51.6466%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="51.4765%" y="373" width="0.2394%" height="15" fill="rgb(252,10,17)" fg:x="645" fg:w="3"/><text x="51.7265%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.4765%" y="357" width="0.2394%" height="15" fill="rgb(214,172,30)" fg:x="645" fg:w="3"/><text x="51.7265%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.6361%" y="341" width="0.0798%" height="15" fill="rgb(253,130,48)" fg:x="647" fg:w="1"/><text x="51.8861%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.6361%" y="325" width="0.0798%" height="15" fill="rgb(226,99,43)" fg:x="647" fg:w="1"/><text x="51.8861%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7159%" y="437" width="0.0798%" height="15" fill="rgb(239,111,26)" fg:x="648" fg:w="1"/><text x="51.9659%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.7159%" y="421" width="0.0798%" height="15" fill="rgb(240,27,53)" fg:x="648" fg:w="1"/><text x="51.9659%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.7159%" y="405" width="0.0798%" height="15" fill="rgb(254,163,12)" fg:x="648" fg:w="1"/><text x="51.9659%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7159%" y="389" width="0.0798%" height="15" fill="rgb(225,51,48)" fg:x="648" fg:w="1"/><text x="51.9659%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7159%" y="373" width="0.0798%" height="15" fill="rgb(205,19,32)" fg:x="648" fg:w="1"/><text x="51.9659%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.7159%" y="357" width="0.0798%" height="15" fill="rgb(218,119,26)" fg:x="648" fg:w="1"/><text x="51.9659%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.7159%" y="341" width="0.0798%" height="15" fill="rgb(231,173,33)" fg:x="648" fg:w="1"/><text x="51.9659%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.7159%" y="325" width="0.0798%" height="15" fill="rgb(241,100,29)" fg:x="648" fg:w="1"/><text x="51.9659%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="51.7159%" y="309" width="0.0798%" height="15" fill="rgb(250,194,34)" fg:x="648" fg:w="1"/><text x="51.9659%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.7159%" y="293" width="0.0798%" height="15" fill="rgb(215,23,50)" fg:x="648" fg:w="1"/><text x="51.9659%" y="303.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="50.5986%" y="501" width="1.2769%" height="15" fill="rgb(206,49,37)" fg:x="634" fg:w="16"/><text x="50.8486%" y="511.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (13 samples, 1.04%)</title><rect x="50.8380%" y="485" width="1.0375%" height="15" fill="rgb(247,39,21)" fg:x="637" fg:w="13"/><text x="51.0880%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (11 samples, 0.88%)</title><rect x="50.9976%" y="469" width="0.8779%" height="15" fill="rgb(209,220,15)" fg:x="639" fg:w="11"/><text x="51.2476%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="50.9976%" y="453" width="0.8779%" height="15" fill="rgb(206,41,33)" fg:x="639" fg:w="11"/><text x="51.2476%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.7957%" y="437" width="0.0798%" height="15" fill="rgb(221,225,45)" fg:x="649" fg:w="1"/><text x="52.0457%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.8755%" y="469" width="0.1596%" height="15" fill="rgb(216,27,18)" fg:x="650" fg:w="2"/><text x="52.1255%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.8755%" y="453" width="0.1596%" height="15" fill="rgb(250,193,34)" fg:x="650" fg:w="2"/><text x="52.1255%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.9553%" y="437" width="0.0798%" height="15" fill="rgb(227,215,20)" fg:x="651" fg:w="1"/><text x="52.2053%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.9553%" y="421" width="0.0798%" height="15" fill="rgb(242,211,27)" fg:x="651" fg:w="1"/><text x="52.2053%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="52.0351%" y="469" width="0.0798%" height="15" fill="rgb(229,190,30)" fg:x="652" fg:w="1"/><text x="52.2851%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="52.0351%" y="453" width="0.0798%" height="15" fill="rgb(253,31,29)" fg:x="652" fg:w="1"/><text x="52.2851%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="52.0351%" y="437" width="0.0798%" height="15" fill="rgb(229,177,52)" fg:x="652" fg:w="1"/><text x="52.2851%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="52.0351%" y="421" width="0.0798%" height="15" fill="rgb(226,88,8)" fg:x="652" fg:w="1"/><text x="52.2851%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="52.0351%" y="405" width="0.0798%" height="15" fill="rgb(214,55,27)" fg:x="652" fg:w="1"/><text x="52.2851%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="52.0351%" y="389" width="0.0798%" height="15" fill="rgb(233,202,5)" fg:x="652" fg:w="1"/><text x="52.2851%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="52.0351%" y="373" width="0.0798%" height="15" fill="rgb(251,49,30)" fg:x="652" fg:w="1"/><text x="52.2851%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.0351%" y="357" width="0.0798%" height="15" fill="rgb(235,18,52)" fg:x="652" fg:w="1"/><text x="52.2851%" y="367.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (27 samples, 2.15%)</title><rect x="50.1995%" y="517" width="2.1548%" height="15" fill="rgb(250,111,51)" fg:x="629" fg:w="27"/><text x="50.4495%" y="527.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="51.8755%" y="501" width="0.4789%" height="15" fill="rgb(218,13,25)" fg:x="650" fg:w="6"/><text x="52.1255%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="51.8755%" y="485" width="0.4789%" height="15" fill="rgb(248,96,7)" fg:x="650" fg:w="6"/><text x="52.1255%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="52.1149%" y="469" width="0.2394%" height="15" fill="rgb(217,31,15)" fg:x="653" fg:w="3"/><text x="52.3649%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="52.1149%" y="453" width="0.2394%" height="15" fill="rgb(228,59,49)" fg:x="653" fg:w="3"/><text x="52.3649%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="52.1947%" y="437" width="0.1596%" height="15" fill="rgb(210,152,38)" fg:x="654" fg:w="2"/><text x="52.4447%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.1947%" y="421" width="0.1596%" height="15" fill="rgb(206,71,11)" fg:x="654" fg:w="2"/><text x="52.4447%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="52.2745%" y="405" width="0.0798%" height="15" fill="rgb(244,199,5)" fg:x="655" fg:w="1"/><text x="52.5245%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="52.3543%" y="501" width="0.0798%" height="15" fill="rgb(253,49,1)" fg:x="656" fg:w="1"/><text x="52.6043%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3543%" y="485" width="0.0798%" height="15" fill="rgb(225,206,40)" fg:x="656" fg:w="1"/><text x="52.6043%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.6736%" y="437" width="0.1596%" height="15" fill="rgb(243,116,47)" fg:x="660" fg:w="2"/><text x="52.9236%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7534%" y="421" width="0.0798%" height="15" fill="rgb(219,225,16)" fg:x="661" fg:w="1"/><text x="53.0034%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.7534%" y="405" width="0.0798%" height="15" fill="rgb(233,29,47)" fg:x="661" fg:w="1"/><text x="53.0034%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.7534%" y="389" width="0.0798%" height="15" fill="rgb(250,179,18)" fg:x="661" fg:w="1"/><text x="53.0034%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.7534%" y="373" width="0.0798%" height="15" fill="rgb(215,176,6)" fg:x="661" fg:w="1"/><text x="53.0034%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7534%" y="357" width="0.0798%" height="15" fill="rgb(214,117,39)" fg:x="661" fg:w="1"/><text x="53.0034%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7534%" y="341" width="0.0798%" height="15" fill="rgb(247,183,36)" fg:x="661" fg:w="1"/><text x="53.0034%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.7534%" y="325" width="0.0798%" height="15" fill="rgb(237,200,3)" fg:x="661" fg:w="1"/><text x="53.0034%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.7534%" y="309" width="0.0798%" height="15" fill="rgb(212,220,24)" fg:x="661" fg:w="1"/><text x="53.0034%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.7534%" y="293" width="0.0798%" height="15" fill="rgb(245,216,20)" fg:x="661" fg:w="1"/><text x="53.0034%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.7534%" y="277" width="0.0798%" height="15" fill="rgb(219,124,7)" fg:x="661" fg:w="1"/><text x="53.0034%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7534%" y="261" width="0.0798%" height="15" fill="rgb(227,167,8)" fg:x="661" fg:w="1"/><text x="53.0034%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="52.5938%" y="469" width="0.3990%" height="15" fill="rgb(241,37,2)" fg:x="659" fg:w="5"/><text x="52.8438%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="52.6736%" y="453" width="0.3192%" height="15" fill="rgb(238,134,33)" fg:x="660" fg:w="4"/><text x="52.9236%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.8332%" y="437" width="0.1596%" height="15" fill="rgb(248,48,27)" fg:x="662" fg:w="2"/><text x="53.0832%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.8332%" y="421" width="0.1596%" height="15" fill="rgb(212,14,16)" fg:x="662" fg:w="2"/><text x="53.0832%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.8332%" y="405" width="0.1596%" height="15" fill="rgb(217,205,37)" fg:x="662" fg:w="2"/><text x="53.0832%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.8332%" y="389" width="0.1596%" height="15" fill="rgb(233,185,47)" fg:x="662" fg:w="2"/><text x="53.0832%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="52.8332%" y="373" width="0.1596%" height="15" fill="rgb(244,88,8)" fg:x="662" fg:w="2"/><text x="53.0832%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="52.8332%" y="357" width="0.1596%" height="15" fill="rgb(213,0,20)" fg:x="662" fg:w="2"/><text x="53.0832%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="52.8332%" y="341" width="0.1596%" height="15" fill="rgb(238,159,36)" fg:x="662" fg:w="2"/><text x="53.0832%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="52.8332%" y="325" width="0.1596%" height="15" fill="rgb(253,173,17)" fg:x="662" fg:w="2"/><text x="53.0832%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="52.8332%" y="309" width="0.1596%" height="15" fill="rgb(221,23,28)" fg:x="662" fg:w="2"/><text x="53.0832%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="52.8332%" y="293" width="0.1596%" height="15" fill="rgb(218,113,15)" fg:x="662" fg:w="2"/><text x="53.0832%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="52.8332%" y="277" width="0.1596%" height="15" fill="rgb(233,58,3)" fg:x="662" fg:w="2"/><text x="53.0832%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="52.8332%" y="261" width="0.1596%" height="15" fill="rgb(250,46,35)" fg:x="662" fg:w="2"/><text x="53.0832%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="52.8332%" y="245" width="0.1596%" height="15" fill="rgb(210,169,11)" fg:x="662" fg:w="2"/><text x="53.0832%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.8332%" y="229" width="0.1596%" height="15" fill="rgb(246,88,19)" fg:x="662" fg:w="2"/><text x="53.0832%" y="239.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="52.9928%" y="373" width="0.1596%" height="15" fill="rgb(206,81,49)" fg:x="664" fg:w="2"/><text x="53.2428%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.2322%" y="277" width="0.1596%" height="15" fill="rgb(232,144,18)" fg:x="667" fg:w="2"/><text x="53.4822%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.2322%" y="261" width="0.1596%" height="15" fill="rgb(235,2,27)" fg:x="667" fg:w="2"/><text x="53.4822%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.2322%" y="245" width="0.1596%" height="15" fill="rgb(239,157,39)" fg:x="667" fg:w="2"/><text x="53.4822%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.2322%" y="229" width="0.1596%" height="15" fill="rgb(220,11,17)" fg:x="667" fg:w="2"/><text x="53.4822%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.3121%" y="213" width="0.0798%" height="15" fill="rgb(243,94,50)" fg:x="668" fg:w="1"/><text x="53.5621%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.3919%" y="149" width="0.0798%" height="15" fill="rgb(218,22,0)" fg:x="669" fg:w="1"/><text x="53.6419%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.3919%" y="181" width="0.1596%" height="15" fill="rgb(249,70,21)" fg:x="669" fg:w="2"/><text x="53.6419%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.3919%" y="165" width="0.1596%" height="15" fill="rgb(245,111,46)" fg:x="669" fg:w="2"/><text x="53.6419%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.4717%" y="149" width="0.0798%" height="15" fill="rgb(244,183,12)" fg:x="670" fg:w="1"/><text x="53.7217%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="53.2322%" y="325" width="0.3990%" height="15" fill="rgb(207,117,0)" fg:x="667" fg:w="5"/><text x="53.4822%" y="335.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="53.2322%" y="309" width="0.3990%" height="15" fill="rgb(206,20,43)" fg:x="667" fg:w="5"/><text x="53.4822%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="53.2322%" y="293" width="0.3990%" height="15" fill="rgb(221,104,11)" fg:x="667" fg:w="5"/><text x="53.4822%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="53.3919%" y="277" width="0.2394%" height="15" fill="rgb(254,36,50)" fg:x="669" fg:w="3"/><text x="53.6419%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="53.3919%" y="261" width="0.2394%" height="15" fill="rgb(252,17,15)" fg:x="669" fg:w="3"/><text x="53.6419%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="53.3919%" y="245" width="0.2394%" height="15" fill="rgb(219,129,43)" fg:x="669" fg:w="3"/><text x="53.6419%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="53.3919%" y="229" width="0.2394%" height="15" fill="rgb(205,34,45)" fg:x="669" fg:w="3"/><text x="53.6419%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="53.3919%" y="213" width="0.2394%" height="15" fill="rgb(251,201,32)" fg:x="669" fg:w="3"/><text x="53.6419%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="53.3919%" y="197" width="0.2394%" height="15" fill="rgb(205,56,0)" fg:x="669" fg:w="3"/><text x="53.6419%" y="207.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="53.5515%" y="181" width="0.0798%" height="15" fill="rgb(211,193,27)" fg:x="671" fg:w="1"/><text x="53.8015%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="53.6313%" y="309" width="0.0798%" height="15" fill="rgb(231,100,42)" fg:x="672" fg:w="1"/><text x="53.8813%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6313%" y="293" width="0.0798%" height="15" fill="rgb(245,85,27)" fg:x="672" fg:w="1"/><text x="53.8813%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.7111%" y="277" width="0.0798%" height="15" fill="rgb(241,76,24)" fg:x="673" fg:w="1"/><text x="53.9611%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.7111%" y="261" width="0.0798%" height="15" fill="rgb(249,157,15)" fg:x="673" fg:w="1"/><text x="53.9611%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.7111%" y="245" width="0.0798%" height="15" fill="rgb(222,218,25)" fg:x="673" fg:w="1"/><text x="53.9611%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.7111%" y="229" width="0.0798%" height="15" fill="rgb(252,156,52)" fg:x="673" fg:w="1"/><text x="53.9611%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.7111%" y="213" width="0.0798%" height="15" fill="rgb(211,185,7)" fg:x="673" fg:w="1"/><text x="53.9611%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (9 samples, 0.72%)</title><rect x="53.2322%" y="357" width="0.7183%" height="15" fill="rgb(234,108,24)" fg:x="667" fg:w="9"/><text x="53.4822%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.72%)</title><rect x="53.2322%" y="341" width="0.7183%" height="15" fill="rgb(227,218,2)" fg:x="667" fg:w="9"/><text x="53.4822%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="53.6313%" y="325" width="0.3192%" height="15" fill="rgb(224,0,36)" fg:x="672" fg:w="4"/><text x="53.8813%" y="335.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="53.7111%" y="309" width="0.2394%" height="15" fill="rgb(233,201,10)" fg:x="673" fg:w="3"/><text x="53.9611%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="53.7111%" y="293" width="0.2394%" height="15" fill="rgb(252,209,14)" fg:x="673" fg:w="3"/><text x="53.9611%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.7909%" y="277" width="0.1596%" height="15" fill="rgb(205,93,49)" fg:x="674" fg:w="2"/><text x="54.0409%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.7909%" y="261" width="0.1596%" height="15" fill="rgb(234,116,45)" fg:x="674" fg:w="2"/><text x="54.0409%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.7909%" y="245" width="0.1596%" height="15" fill="rgb(248,89,35)" fg:x="674" fg:w="2"/><text x="54.0409%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.7909%" y="229" width="0.1596%" height="15" fill="rgb(233,167,45)" fg:x="674" fg:w="2"/><text x="54.0409%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="53.8707%" y="213" width="0.0798%" height="15" fill="rgb(248,228,14)" fg:x="675" fg:w="1"/><text x="54.1207%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.8707%" y="197" width="0.0798%" height="15" fill="rgb(246,91,14)" fg:x="675" fg:w="1"/><text x="54.1207%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.8707%" y="181" width="0.0798%" height="15" fill="rgb(227,142,5)" fg:x="675" fg:w="1"/><text x="54.1207%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8707%" y="165" width="0.0798%" height="15" fill="rgb(221,63,33)" fg:x="675" fg:w="1"/><text x="54.1207%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.0303%" y="309" width="0.2394%" height="15" fill="rgb(233,49,0)" fg:x="677" fg:w="3"/><text x="54.2803%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.0303%" y="293" width="0.2394%" height="15" fill="rgb(251,115,38)" fg:x="677" fg:w="3"/><text x="54.2803%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1101%" y="277" width="0.1596%" height="15" fill="rgb(231,214,32)" fg:x="678" fg:w="2"/><text x="54.3601%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.1101%" y="261" width="0.1596%" height="15" fill="rgb(248,73,46)" fg:x="678" fg:w="2"/><text x="54.3601%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.2698%" y="213" width="0.0798%" height="15" fill="rgb(237,156,4)" fg:x="680" fg:w="1"/><text x="54.5198%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.2698%" y="197" width="0.0798%" height="15" fill="rgb(227,132,2)" fg:x="680" fg:w="1"/><text x="54.5198%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3496%" y="213" width="0.0798%" height="15" fill="rgb(248,161,9)" fg:x="681" fg:w="1"/><text x="54.5996%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3496%" y="197" width="0.0798%" height="15" fill="rgb(238,77,38)" fg:x="681" fg:w="1"/><text x="54.5996%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.80%)</title><rect x="53.9505%" y="357" width="0.7981%" height="15" fill="rgb(222,166,40)" fg:x="676" fg:w="10"/><text x="54.2005%" y="367.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="53.9505%" y="341" width="0.7981%" height="15" fill="rgb(214,168,45)" fg:x="676" fg:w="10"/><text x="54.2005%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="53.9505%" y="325" width="0.7981%" height="15" fill="rgb(226,64,37)" fg:x="676" fg:w="10"/><text x="54.2005%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="54.2698%" y="309" width="0.4789%" height="15" fill="rgb(232,210,43)" fg:x="680" fg:w="6"/><text x="54.5198%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="54.2698%" y="293" width="0.4789%" height="15" fill="rgb(214,76,33)" fg:x="680" fg:w="6"/><text x="54.5198%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="54.2698%" y="277" width="0.4789%" height="15" fill="rgb(210,78,5)" fg:x="680" fg:w="6"/><text x="54.5198%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="54.2698%" y="261" width="0.4789%" height="15" fill="rgb(211,107,37)" fg:x="680" fg:w="6"/><text x="54.5198%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="54.2698%" y="245" width="0.4789%" height="15" fill="rgb(249,67,16)" fg:x="680" fg:w="6"/><text x="54.5198%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="54.2698%" y="229" width="0.4789%" height="15" fill="rgb(222,114,31)" fg:x="680" fg:w="6"/><text x="54.5198%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="54.4294%" y="213" width="0.3192%" height="15" fill="rgb(242,118,19)" fg:x="682" fg:w="4"/><text x="54.6794%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="54.4294%" y="197" width="0.3192%" height="15" fill="rgb(223,115,1)" fg:x="682" fg:w="4"/><text x="54.6794%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.6688%" y="181" width="0.0798%" height="15" fill="rgb(241,182,54)" fg:x="685" fg:w="1"/><text x="54.9188%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.7486%" y="357" width="0.0798%" height="15" fill="rgb(244,166,36)" fg:x="686" fg:w="1"/><text x="54.9986%" y="367.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (17 samples, 1.36%)</title><rect x="54.8284%" y="357" width="1.3567%" height="15" fill="rgb(241,52,43)" fg:x="687" fg:w="17"/><text x="55.0784%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 1.36%)</title><rect x="54.8284%" y="341" width="1.3567%" height="15" fill="rgb(236,82,9)" fg:x="687" fg:w="17"/><text x="55.0784%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (17 samples, 1.36%)</title><rect x="54.8284%" y="325" width="1.3567%" height="15" fill="rgb(241,119,0)" fg:x="687" fg:w="17"/><text x="55.0784%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 1.36%)</title><rect x="54.8284%" y="309" width="1.3567%" height="15" fill="rgb(221,19,22)" fg:x="687" fg:w="17"/><text x="55.0784%" y="319.50"></text></g><g><title>__libc_malloc (15 samples, 1.20%)</title><rect x="54.9880%" y="293" width="1.1971%" height="15" fill="rgb(254,144,35)" fg:x="689" fg:w="15"/><text x="55.2380%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.1852%" y="277" width="0.0798%" height="15" fill="rgb(246,132,30)" fg:x="704" fg:w="1"/><text x="56.4352%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.1852%" y="293" width="0.1596%" height="15" fill="rgb(234,69,28)" fg:x="704" fg:w="2"/><text x="56.4352%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.2650%" y="277" width="0.0798%" height="15" fill="rgb(219,106,47)" fg:x="705" fg:w="1"/><text x="56.5150%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.5044%" y="245" width="0.0798%" height="15" fill="rgb(218,79,24)" fg:x="708" fg:w="1"/><text x="56.7544%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.6640%" y="229" width="0.1596%" height="15" fill="rgb(225,26,21)" fg:x="710" fg:w="2"/><text x="56.9140%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.6640%" y="213" width="0.1596%" height="15" fill="rgb(217,68,49)" fg:x="710" fg:w="2"/><text x="56.9140%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.8236%" y="197" width="0.1596%" height="15" fill="rgb(220,204,28)" fg:x="712" fg:w="2"/><text x="57.0736%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9034%" y="181" width="0.0798%" height="15" fill="rgb(237,208,43)" fg:x="713" fg:w="1"/><text x="57.1534%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.9832%" y="197" width="0.0798%" height="15" fill="rgb(213,97,42)" fg:x="714" fg:w="1"/><text x="57.2332%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.0630%" y="165" width="0.0798%" height="15" fill="rgb(238,96,52)" fg:x="715" fg:w="1"/><text x="57.3130%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.0630%" y="149" width="0.0798%" height="15" fill="rgb(228,14,13)" fg:x="715" fg:w="1"/><text x="57.3130%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.0630%" y="133" width="0.0798%" height="15" fill="rgb(219,123,13)" fg:x="715" fg:w="1"/><text x="57.3130%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.1429%" y="133" width="0.0798%" height="15" fill="rgb(216,144,17)" fg:x="716" fg:w="1"/><text x="57.3929%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.2227%" y="117" width="0.0798%" height="15" fill="rgb(230,228,29)" fg:x="717" fg:w="1"/><text x="57.4727%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2227%" y="101" width="0.0798%" height="15" fill="rgb(233,18,5)" fg:x="717" fg:w="1"/><text x="57.4727%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2227%" y="85" width="0.0798%" height="15" fill="rgb(233,197,12)" fg:x="717" fg:w="1"/><text x="57.4727%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2227%" y="69" width="0.0798%" height="15" fill="rgb(234,140,29)" fg:x="717" fg:w="1"/><text x="57.4727%" y="79.50"></text></g><g><title>serde_json::de::from_trait (15 samples, 1.20%)</title><rect x="56.1852%" y="341" width="1.1971%" height="15" fill="rgb(233,113,19)" fg:x="704" fg:w="15"/><text x="56.4352%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 1.20%)</title><rect x="56.1852%" y="325" width="1.1971%" height="15" fill="rgb(246,209,13)" fg:x="704" fg:w="15"/><text x="56.4352%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.20%)</title><rect x="56.1852%" y="309" width="1.1971%" height="15" fill="rgb(242,79,54)" fg:x="704" fg:w="15"/><text x="56.4352%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.04%)</title><rect x="56.3448%" y="293" width="1.0375%" height="15" fill="rgb(219,73,16)" fg:x="706" fg:w="13"/><text x="56.5948%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="56.3448%" y="277" width="1.0375%" height="15" fill="rgb(224,52,10)" fg:x="706" fg:w="13"/><text x="56.5948%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="56.5044%" y="261" width="0.8779%" height="15" fill="rgb(237,179,5)" fg:x="708" fg:w="11"/><text x="56.7544%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="56.5842%" y="245" width="0.7981%" height="15" fill="rgb(231,20,6)" fg:x="709" fg:w="10"/><text x="56.8342%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="56.8236%" y="229" width="0.5587%" height="15" fill="rgb(253,171,45)" fg:x="712" fg:w="7"/><text x="57.0736%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="56.8236%" y="213" width="0.5587%" height="15" fill="rgb(230,75,49)" fg:x="712" fg:w="7"/><text x="57.0736%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="57.0630%" y="197" width="0.3192%" height="15" fill="rgb(216,83,46)" fg:x="715" fg:w="4"/><text x="57.3130%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="57.0630%" y="181" width="0.3192%" height="15" fill="rgb(236,56,9)" fg:x="715" fg:w="4"/><text x="57.3130%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="57.1429%" y="165" width="0.2394%" height="15" fill="rgb(215,28,34)" fg:x="716" fg:w="3"/><text x="57.3929%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="57.1429%" y="149" width="0.2394%" height="15" fill="rgb(230,222,20)" fg:x="716" fg:w="3"/><text x="57.3929%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="57.2227%" y="133" width="0.1596%" height="15" fill="rgb(235,209,51)" fg:x="717" fg:w="2"/><text x="57.4727%" y="143.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="57.3025%" y="117" width="0.0798%" height="15" fill="rgb(235,167,1)" fg:x="718" fg:w="1"/><text x="57.5525%" y="127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.6217%" y="277" width="0.1596%" height="15" fill="rgb(248,220,0)" fg:x="722" fg:w="2"/><text x="57.8717%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.7015%" y="261" width="0.0798%" height="15" fill="rgb(239,0,18)" fg:x="723" fg:w="1"/><text x="57.9515%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.8611%" y="165" width="0.0798%" height="15" fill="rgb(229,179,11)" fg:x="725" fg:w="1"/><text x="58.1111%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.8611%" y="149" width="0.0798%" height="15" fill="rgb(226,116,53)" fg:x="725" fg:w="1"/><text x="58.1111%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8611%" y="133" width="0.0798%" height="15" fill="rgb(218,1,49)" fg:x="725" fg:w="1"/><text x="58.1111%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8611%" y="117" width="0.0798%" height="15" fill="rgb(208,184,47)" fg:x="725" fg:w="1"/><text x="58.1111%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.8611%" y="197" width="0.1596%" height="15" fill="rgb(238,174,3)" fg:x="725" fg:w="2"/><text x="58.1111%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.8611%" y="181" width="0.1596%" height="15" fill="rgb(247,188,6)" fg:x="725" fg:w="2"/><text x="58.1111%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="57.9409%" y="165" width="0.0798%" height="15" fill="rgb(211,165,46)" fg:x="726" fg:w="1"/><text x="58.1909%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.9409%" y="149" width="0.0798%" height="15" fill="rgb(222,190,10)" fg:x="726" fg:w="1"/><text x="58.1909%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.9409%" y="133" width="0.0798%" height="15" fill="rgb(206,185,3)" fg:x="726" fg:w="1"/><text x="58.1909%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="57.9409%" y="117" width="0.0798%" height="15" fill="rgb(244,125,37)" fg:x="726" fg:w="1"/><text x="58.1909%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9409%" y="101" width="0.0798%" height="15" fill="rgb(211,43,7)" fg:x="726" fg:w="1"/><text x="58.1909%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="58.0208%" y="197" width="0.0798%" height="15" fill="rgb(250,41,42)" fg:x="727" fg:w="1"/><text x="58.2708%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.0208%" y="181" width="0.0798%" height="15" fill="rgb(254,54,42)" fg:x="727" fg:w="1"/><text x="58.2708%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="57.7813%" y="229" width="0.4789%" height="15" fill="rgb(213,71,43)" fg:x="724" fg:w="6"/><text x="58.0313%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="57.8611%" y="213" width="0.3990%" height="15" fill="rgb(249,3,44)" fg:x="725" fg:w="5"/><text x="58.1111%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.1006%" y="197" width="0.1596%" height="15" fill="rgb(229,80,41)" fg:x="728" fg:w="2"/><text x="58.3506%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="57.7813%" y="261" width="0.5587%" height="15" fill="rgb(231,25,28)" fg:x="724" fg:w="7"/><text x="58.0313%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="57.7813%" y="245" width="0.5587%" height="15" fill="rgb(208,79,48)" fg:x="724" fg:w="7"/><text x="58.0313%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="58.2602%" y="229" width="0.0798%" height="15" fill="rgb(207,196,38)" fg:x="730" fg:w="1"/><text x="58.5102%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.2602%" y="213" width="0.0798%" height="15" fill="rgb(228,105,49)" fg:x="730" fg:w="1"/><text x="58.5102%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.2602%" y="197" width="0.0798%" height="15" fill="rgb(237,99,15)" fg:x="730" fg:w="1"/><text x="58.5102%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.2602%" y="181" width="0.0798%" height="15" fill="rgb(224,207,46)" fg:x="730" fg:w="1"/><text x="58.5102%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="58.2602%" y="165" width="0.0798%" height="15" fill="rgb(249,117,50)" fg:x="730" fg:w="1"/><text x="58.5102%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="58.3400%" y="261" width="0.1596%" height="15" fill="rgb(248,17,13)" fg:x="731" fg:w="2"/><text x="58.5900%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="58.3400%" y="245" width="0.1596%" height="15" fill="rgb(228,187,36)" fg:x="731" fg:w="2"/><text x="58.5900%" y="255.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="58.3400%" y="229" width="0.1596%" height="15" fill="rgb(234,132,20)" fg:x="731" fg:w="2"/><text x="58.5900%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="58.4996%" y="229" width="0.0798%" height="15" fill="rgb(209,170,46)" fg:x="733" fg:w="1"/><text x="58.7496%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4996%" y="213" width="0.0798%" height="15" fill="rgb(237,23,19)" fg:x="733" fg:w="1"/><text x="58.7496%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.4996%" y="197" width="0.0798%" height="15" fill="rgb(227,21,26)" fg:x="733" fg:w="1"/><text x="58.7496%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="58.4996%" y="181" width="0.0798%" height="15" fill="rgb(222,220,48)" fg:x="733" fg:w="1"/><text x="58.7496%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4996%" y="165" width="0.0798%" height="15" fill="rgb(214,9,16)" fg:x="733" fg:w="1"/><text x="58.7496%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.4996%" y="149" width="0.0798%" height="15" fill="rgb(209,73,30)" fg:x="733" fg:w="1"/><text x="58.7496%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="58.4996%" y="133" width="0.0798%" height="15" fill="rgb(207,20,33)" fg:x="733" fg:w="1"/><text x="58.7496%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4996%" y="117" width="0.0798%" height="15" fill="rgb(219,153,12)" fg:x="733" fg:w="1"/><text x="58.7496%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.4996%" y="101" width="0.0798%" height="15" fill="rgb(235,97,25)" fg:x="733" fg:w="1"/><text x="58.7496%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="58.4996%" y="85" width="0.0798%" height="15" fill="rgb(244,30,34)" fg:x="733" fg:w="1"/><text x="58.7496%" y="95.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4996%" y="69" width="0.0798%" height="15" fill="rgb(214,106,45)" fg:x="733" fg:w="1"/><text x="58.7496%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.4996%" y="53" width="0.0798%" height="15" fill="rgb(226,41,9)" fg:x="733" fg:w="1"/><text x="58.7496%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.4996%" y="37" width="0.0798%" height="15" fill="rgb(253,139,29)" fg:x="733" fg:w="1"/><text x="58.7496%" y="47.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (14 samples, 1.12%)</title><rect x="57.5419%" y="309" width="1.1173%" height="15" fill="rgb(213,205,39)" fg:x="721" fg:w="14"/><text x="57.7919%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="57.6217%" y="293" width="1.0375%" height="15" fill="rgb(209,27,10)" fg:x="722" fg:w="13"/><text x="57.8717%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.88%)</title><rect x="57.7813%" y="277" width="0.8779%" height="15" fill="rgb(249,142,16)" fg:x="724" fg:w="11"/><text x="58.0313%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.4996%" y="261" width="0.1596%" height="15" fill="rgb(242,65,12)" fg:x="733" fg:w="2"/><text x="58.7496%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.4996%" y="245" width="0.1596%" height="15" fill="rgb(232,48,10)" fg:x="733" fg:w="2"/><text x="58.7496%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="58.5794%" y="229" width="0.0798%" height="15" fill="rgb(253,67,19)" fg:x="734" fg:w="1"/><text x="58.8294%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="58.5794%" y="213" width="0.0798%" height="15" fill="rgb(227,93,29)" fg:x="734" fg:w="1"/><text x="58.8294%" y="223.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (70 samples, 5.59%)</title><rect x="53.1524%" y="373" width="5.5866%" height="15" fill="rgb(226,189,53)" fg:x="666" fg:w="70"/><text x="53.4024%" y="383.50">engine:..</text></g><g><title>kernel::model::entity::Entity::from_str (32 samples, 2.55%)</title><rect x="56.1852%" y="357" width="2.5539%" height="15" fill="rgb(223,224,1)" fg:x="704" fg:w="32"/><text x="56.4352%" y="367.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 1.36%)</title><rect x="57.3823%" y="341" width="1.3567%" height="15" fill="rgb(221,84,32)" fg:x="719" fg:w="17"/><text x="57.6323%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.36%)</title><rect x="57.3823%" y="325" width="1.3567%" height="15" fill="rgb(214,189,28)" fg:x="719" fg:w="17"/><text x="57.6323%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.6592%" y="309" width="0.0798%" height="15" fill="rgb(234,7,52)" fg:x="735" fg:w="1"/><text x="58.9092%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.6592%" y="293" width="0.0798%" height="15" fill="rgb(249,73,31)" fg:x="735" fg:w="1"/><text x="58.9092%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.6592%" y="277" width="0.0798%" height="15" fill="rgb(253,153,41)" fg:x="735" fg:w="1"/><text x="58.9092%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (73 samples, 5.83%)</title><rect x="52.9928%" y="389" width="5.8260%" height="15" fill="rgb(249,52,34)" fg:x="664" fg:w="73"/><text x="53.2428%" y="399.50">&lt;engine..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="58.7390%" y="373" width="0.0798%" height="15" fill="rgb(236,177,47)" fg:x="736" fg:w="1"/><text x="58.9890%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (74 samples, 5.91%)</title><rect x="52.9928%" y="469" width="5.9058%" height="15" fill="rgb(252,185,45)" fg:x="664" fg:w="74"/><text x="53.2428%" y="479.50">&lt;plugins..</text></g><g><title>core::iter::adapters::try_process (74 samples, 5.91%)</title><rect x="52.9928%" y="453" width="5.9058%" height="15" fill="rgb(251,15,30)" fg:x="664" fg:w="74"/><text x="53.2428%" y="463.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74 samples, 5.91%)</title><rect x="52.9928%" y="437" width="5.9058%" height="15" fill="rgb(233,31,4)" fg:x="664" fg:w="74"/><text x="53.2428%" y="447.50">&lt;alloc::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (74 samples, 5.91%)</title><rect x="52.9928%" y="421" width="5.9058%" height="15" fill="rgb(254,44,24)" fg:x="664" fg:w="74"/><text x="53.2428%" y="431.50">&lt;core::i..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (74 samples, 5.91%)</title><rect x="52.9928%" y="405" width="5.9058%" height="15" fill="rgb(218,54,1)" fg:x="664" fg:w="74"/><text x="53.2428%" y="415.50">&lt;engine:..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8188%" y="389" width="0.0798%" height="15" fill="rgb(243,209,39)" fg:x="737" fg:w="1"/><text x="59.0688%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.8986%" y="469" width="0.0798%" height="15" fill="rgb(206,75,33)" fg:x="738" fg:w="1"/><text x="59.1486%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.9785%" y="437" width="0.0798%" height="15" fill="rgb(223,108,18)" fg:x="739" fg:w="1"/><text x="59.2285%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.9785%" y="421" width="0.0798%" height="15" fill="rgb(244,89,31)" fg:x="739" fg:w="1"/><text x="59.2285%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.9785%" y="405" width="0.0798%" height="15" fill="rgb(222,167,27)" fg:x="739" fg:w="1"/><text x="59.2285%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.0583%" y="357" width="0.0798%" height="15" fill="rgb(247,41,16)" fg:x="740" fg:w="1"/><text x="59.3083%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.1381%" y="357" width="0.0798%" height="15" fill="rgb(233,168,40)" fg:x="741" fg:w="1"/><text x="59.3881%" y="367.50"></text></g><g><title>plugins_core::tools::get_contained_keys (87 samples, 6.94%)</title><rect x="52.3543%" y="517" width="6.9433%" height="15" fill="rgb(205,211,8)" fg:x="656" fg:w="87"/><text x="52.6043%" y="527.50">plugins_c..</text></g><g><title>kernel::model::entry::Entry::scope (86 samples, 6.86%)</title><rect x="52.4342%" y="501" width="6.8635%" height="15" fill="rgb(238,105,11)" fg:x="657" fg:w="86"/><text x="52.6842%" y="511.50">kernel::m..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (86 samples, 6.86%)</title><rect x="52.4342%" y="485" width="6.8635%" height="15" fill="rgb(223,142,52)" fg:x="657" fg:w="86"/><text x="52.6842%" y="495.50">kernel::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="58.9785%" y="469" width="0.3192%" height="15" fill="rgb(238,51,33)" fg:x="739" fg:w="4"/><text x="59.2285%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="58.9785%" y="453" width="0.3192%" height="15" fill="rgb(231,188,43)" fg:x="739" fg:w="4"/><text x="59.2285%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="59.0583%" y="437" width="0.2394%" height="15" fill="rgb(216,92,17)" fg:x="740" fg:w="3"/><text x="59.3083%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="59.0583%" y="421" width="0.2394%" height="15" fill="rgb(228,2,40)" fg:x="740" fg:w="3"/><text x="59.3083%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="59.0583%" y="405" width="0.2394%" height="15" fill="rgb(226,73,15)" fg:x="740" fg:w="3"/><text x="59.3083%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.0583%" y="389" width="0.2394%" height="15" fill="rgb(227,66,46)" fg:x="740" fg:w="3"/><text x="59.3083%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.0583%" y="373" width="0.2394%" height="15" fill="rgb(209,71,6)" fg:x="740" fg:w="3"/><text x="59.3083%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="59.2179%" y="357" width="0.0798%" height="15" fill="rgb(246,100,25)" fg:x="742" fg:w="1"/><text x="59.4679%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2977%" y="501" width="0.0798%" height="15" fill="rgb(248,185,27)" fg:x="743" fg:w="1"/><text x="59.5477%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="59.3775%" y="501" width="0.0798%" height="15" fill="rgb(225,118,47)" fg:x="744" fg:w="1"/><text x="59.6275%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.3775%" y="485" width="0.0798%" height="15" fill="rgb(220,185,44)" fg:x="744" fg:w="1"/><text x="59.6275%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.6169%" y="437" width="0.0798%" height="15" fill="rgb(227,95,24)" fg:x="747" fg:w="1"/><text x="59.8669%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6169%" y="421" width="0.0798%" height="15" fill="rgb(252,84,24)" fg:x="747" fg:w="1"/><text x="59.8669%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6967%" y="437" width="0.0798%" height="15" fill="rgb(240,34,44)" fg:x="748" fg:w="1"/><text x="59.9467%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6967%" y="421" width="0.0798%" height="15" fill="rgb(209,72,54)" fg:x="748" fg:w="1"/><text x="59.9467%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.6967%" y="405" width="0.0798%" height="15" fill="rgb(226,19,45)" fg:x="748" fg:w="1"/><text x="59.9467%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.6967%" y="389" width="0.0798%" height="15" fill="rgb(246,7,45)" fg:x="748" fg:w="1"/><text x="59.9467%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.6967%" y="373" width="0.0798%" height="15" fill="rgb(225,45,2)" fg:x="748" fg:w="1"/><text x="59.9467%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6967%" y="357" width="0.0798%" height="15" fill="rgb(221,80,29)" fg:x="748" fg:w="1"/><text x="59.9467%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6967%" y="341" width="0.0798%" height="15" fill="rgb(228,11,19)" fg:x="748" fg:w="1"/><text x="59.9467%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.6967%" y="325" width="0.0798%" height="15" fill="rgb(243,17,21)" fg:x="748" fg:w="1"/><text x="59.9467%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.6967%" y="309" width="0.0798%" height="15" fill="rgb(243,88,8)" fg:x="748" fg:w="1"/><text x="59.9467%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.6967%" y="293" width="0.0798%" height="15" fill="rgb(214,17,9)" fg:x="748" fg:w="1"/><text x="59.9467%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.6967%" y="277" width="0.0798%" height="15" fill="rgb(232,169,15)" fg:x="748" fg:w="1"/><text x="59.9467%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6967%" y="261" width="0.0798%" height="15" fill="rgb(232,86,53)" fg:x="748" fg:w="1"/><text x="59.9467%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="59.6169%" y="469" width="0.2394%" height="15" fill="rgb(222,100,4)" fg:x="747" fg:w="3"/><text x="59.8669%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.6169%" y="453" width="0.2394%" height="15" fill="rgb(253,151,38)" fg:x="747" fg:w="3"/><text x="59.8669%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7765%" y="437" width="0.0798%" height="15" fill="rgb(238,215,29)" fg:x="749" fg:w="1"/><text x="60.0265%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.7765%" y="421" width="0.0798%" height="15" fill="rgb(205,128,53)" fg:x="749" fg:w="1"/><text x="60.0265%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.9362%" y="437" width="0.0798%" height="15" fill="rgb(248,183,14)" fg:x="751" fg:w="1"/><text x="60.1862%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (128 samples, 10.22%)</title><rect x="49.9601%" y="549" width="10.2155%" height="15" fill="rgb(244,172,35)" fg:x="626" fg:w="128"/><text x="50.2101%" y="559.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (126 samples, 10.06%)</title><rect x="50.1197%" y="533" width="10.0559%" height="15" fill="rgb(234,93,19)" fg:x="628" fg:w="126"/><text x="50.3697%" y="543.50">&lt;core::iter::ad..</text></g><g><title>plugins_core::tools::get_occupant_keys (11 samples, 0.88%)</title><rect x="59.2977%" y="517" width="0.8779%" height="15" fill="rgb(227,109,7)" fg:x="743" fg:w="11"/><text x="59.5477%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="59.4573%" y="501" width="0.7183%" height="15" fill="rgb(233,136,54)" fg:x="745" fg:w="9"/><text x="59.7073%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="59.4573%" y="485" width="0.7183%" height="15" fill="rgb(233,19,40)" fg:x="745" fg:w="9"/><text x="59.7073%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="59.8563%" y="469" width="0.3192%" height="15" fill="rgb(247,41,18)" fg:x="750" fg:w="4"/><text x="60.1063%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="59.8563%" y="453" width="0.3192%" height="15" fill="rgb(220,34,34)" fg:x="750" fg:w="4"/><text x="60.1063%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="60.0160%" y="437" width="0.1596%" height="15" fill="rgb(222,135,32)" fg:x="752" fg:w="2"/><text x="60.2660%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="60.0160%" y="421" width="0.1596%" height="15" fill="rgb(214,80,19)" fg:x="752" fg:w="2"/><text x="60.2660%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="60.0160%" y="405" width="0.1596%" height="15" fill="rgb(234,54,46)" fg:x="752" fg:w="2"/><text x="60.2660%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.0160%" y="389" width="0.1596%" height="15" fill="rgb(251,48,23)" fg:x="752" fg:w="2"/><text x="60.2660%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.0160%" y="373" width="0.1596%" height="15" fill="rgb(254,109,52)" fg:x="752" fg:w="2"/><text x="60.2660%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.0958%" y="357" width="0.0798%" height="15" fill="rgb(240,186,19)" fg:x="753" fg:w="1"/><text x="60.3458%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.2554%" y="517" width="0.0798%" height="15" fill="rgb(246,187,17)" fg:x="755" fg:w="1"/><text x="60.5054%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.4948%" y="501" width="0.1596%" height="15" fill="rgb(212,21,5)" fg:x="758" fg:w="2"/><text x="60.7448%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.4948%" y="485" width="0.1596%" height="15" fill="rgb(225,185,18)" fg:x="758" fg:w="2"/><text x="60.7448%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="60.4948%" y="469" width="0.1596%" height="15" fill="rgb(245,114,17)" fg:x="758" fg:w="2"/><text x="60.7448%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="60.4948%" y="453" width="0.1596%" height="15" fill="rgb(223,164,24)" fg:x="758" fg:w="2"/><text x="60.7448%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="60.4948%" y="437" width="0.1596%" height="15" fill="rgb(211,228,3)" fg:x="758" fg:w="2"/><text x="60.7448%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.4948%" y="421" width="0.1596%" height="15" fill="rgb(223,16,38)" fg:x="758" fg:w="2"/><text x="60.7448%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.4948%" y="405" width="0.1596%" height="15" fill="rgb(207,31,54)" fg:x="758" fg:w="2"/><text x="60.7448%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="60.4948%" y="389" width="0.1596%" height="15" fill="rgb(220,39,11)" fg:x="758" fg:w="2"/><text x="60.7448%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="60.4948%" y="373" width="0.1596%" height="15" fill="rgb(235,185,0)" fg:x="758" fg:w="2"/><text x="60.7448%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="60.4948%" y="357" width="0.1596%" height="15" fill="rgb(249,39,18)" fg:x="758" fg:w="2"/><text x="60.7448%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="60.4948%" y="341" width="0.1596%" height="15" fill="rgb(240,110,33)" fg:x="758" fg:w="2"/><text x="60.7448%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.4948%" y="325" width="0.1596%" height="15" fill="rgb(210,92,42)" fg:x="758" fg:w="2"/><text x="60.7448%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="60.6544%" y="485" width="0.1596%" height="15" fill="rgb(218,215,28)" fg:x="760" fg:w="2"/><text x="60.9044%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="60.6544%" y="469" width="0.1596%" height="15" fill="rgb(238,215,36)" fg:x="760" fg:w="2"/><text x="60.9044%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="60.8140%" y="485" width="0.0798%" height="15" fill="rgb(220,31,10)" fg:x="762" fg:w="1"/><text x="61.0640%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8939%" y="469" width="0.0798%" height="15" fill="rgb(212,93,14)" fg:x="763" fg:w="1"/><text x="61.1439%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8939%" y="453" width="0.0798%" height="15" fill="rgb(254,207,2)" fg:x="763" fg:w="1"/><text x="61.1439%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.8939%" y="437" width="0.0798%" height="15" fill="rgb(205,57,44)" fg:x="763" fg:w="1"/><text x="61.1439%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.8939%" y="421" width="0.0798%" height="15" fill="rgb(226,151,19)" fg:x="763" fg:w="1"/><text x="61.1439%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.8939%" y="405" width="0.0798%" height="15" fill="rgb(230,72,30)" fg:x="763" fg:w="1"/><text x="61.1439%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8939%" y="389" width="0.0798%" height="15" fill="rgb(244,0,8)" fg:x="763" fg:w="1"/><text x="61.1439%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8939%" y="373" width="0.0798%" height="15" fill="rgb(230,192,6)" fg:x="763" fg:w="1"/><text x="61.1439%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.8939%" y="357" width="0.0798%" height="15" fill="rgb(233,207,13)" fg:x="763" fg:w="1"/><text x="61.1439%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.8939%" y="341" width="0.0798%" height="15" fill="rgb(206,227,7)" fg:x="763" fg:w="1"/><text x="61.1439%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.8939%" y="325" width="0.0798%" height="15" fill="rgb(213,217,25)" fg:x="763" fg:w="1"/><text x="61.1439%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.8939%" y="309" width="0.0798%" height="15" fill="rgb(249,75,4)" fg:x="763" fg:w="1"/><text x="61.1439%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8939%" y="293" width="0.0798%" height="15" fill="rgb(225,114,18)" fg:x="763" fg:w="1"/><text x="61.1439%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0535%" y="389" width="0.0798%" height="15" fill="rgb(211,162,40)" fg:x="765" fg:w="1"/><text x="61.3035%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0535%" y="373" width="0.0798%" height="15" fill="rgb(206,49,29)" fg:x="765" fg:w="1"/><text x="61.3035%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.0535%" y="357" width="0.0798%" height="15" fill="rgb(244,8,6)" fg:x="765" fg:w="1"/><text x="61.3035%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.0535%" y="341" width="0.0798%" height="15" fill="rgb(231,194,28)" fg:x="765" fg:w="1"/><text x="61.3035%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.0535%" y="325" width="0.0798%" height="15" fill="rgb(210,69,5)" fg:x="765" fg:w="1"/><text x="61.3035%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.0535%" y="309" width="0.0798%" height="15" fill="rgb(216,186,12)" fg:x="765" fg:w="1"/><text x="61.3035%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.0535%" y="293" width="0.0798%" height="15" fill="rgb(238,61,15)" fg:x="765" fg:w="1"/><text x="61.3035%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.0535%" y="277" width="0.0798%" height="15" fill="rgb(226,104,1)" fg:x="765" fg:w="1"/><text x="61.3035%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.0535%" y="261" width="0.0798%" height="15" fill="rgb(229,128,15)" fg:x="765" fg:w="1"/><text x="61.3035%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.0535%" y="245" width="0.0798%" height="15" fill="rgb(247,110,15)" fg:x="765" fg:w="1"/><text x="61.3035%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.0535%" y="229" width="0.0798%" height="15" fill="rgb(210,74,48)" fg:x="765" fg:w="1"/><text x="61.3035%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.0535%" y="213" width="0.0798%" height="15" fill="rgb(246,121,10)" fg:x="765" fg:w="1"/><text x="61.3035%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="61.1333%" y="357" width="0.1596%" height="15" fill="rgb(214,156,37)" fg:x="766" fg:w="2"/><text x="61.3833%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="61.1333%" y="341" width="0.1596%" height="15" fill="rgb(214,210,34)" fg:x="766" fg:w="2"/><text x="61.3833%" y="351.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="61.1333%" y="325" width="0.1596%" height="15" fill="rgb(237,93,35)" fg:x="766" fg:w="2"/><text x="61.3833%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="61.1333%" y="309" width="0.1596%" height="15" fill="rgb(206,36,8)" fg:x="766" fg:w="2"/><text x="61.3833%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="61.1333%" y="293" width="0.1596%" height="15" fill="rgb(208,151,12)" fg:x="766" fg:w="2"/><text x="61.3833%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="61.1333%" y="277" width="0.1596%" height="15" fill="rgb(225,133,52)" fg:x="766" fg:w="2"/><text x="61.3833%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="61.1333%" y="261" width="0.1596%" height="15" fill="rgb(231,71,53)" fg:x="766" fg:w="2"/><text x="61.3833%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="61.1333%" y="245" width="0.1596%" height="15" fill="rgb(243,76,21)" fg:x="766" fg:w="2"/><text x="61.3833%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="61.1333%" y="229" width="0.1596%" height="15" fill="rgb(252,144,3)" fg:x="766" fg:w="2"/><text x="61.3833%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="61.1333%" y="213" width="0.1596%" height="15" fill="rgb(231,199,10)" fg:x="766" fg:w="2"/><text x="61.3833%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="61.1333%" y="197" width="0.1596%" height="15" fill="rgb(215,18,11)" fg:x="766" fg:w="2"/><text x="61.3833%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.1333%" y="181" width="0.1596%" height="15" fill="rgb(241,65,24)" fg:x="766" fg:w="2"/><text x="61.3833%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (9 samples, 0.72%)</title><rect x="60.6544%" y="501" width="0.7183%" height="15" fill="rgb(251,192,38)" fg:x="760" fg:w="9"/><text x="60.9044%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="60.8939%" y="485" width="0.4789%" height="15" fill="rgb(205,9,35)" fg:x="763" fg:w="6"/><text x="61.1439%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.40%)</title><rect x="60.9737%" y="469" width="0.3990%" height="15" fill="rgb(229,225,49)" fg:x="764" fg:w="5"/><text x="61.2237%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.40%)</title><rect x="60.9737%" y="453" width="0.3990%" height="15" fill="rgb(207,125,39)" fg:x="764" fg:w="5"/><text x="61.2237%" y="463.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="60.9737%" y="437" width="0.3990%" height="15" fill="rgb(222,78,19)" fg:x="764" fg:w="5"/><text x="61.2237%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.40%)</title><rect x="60.9737%" y="421" width="0.3990%" height="15" fill="rgb(248,207,20)" fg:x="764" fg:w="5"/><text x="61.2237%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (5 samples, 0.40%)</title><rect x="60.9737%" y="405" width="0.3990%" height="15" fill="rgb(205,103,49)" fg:x="764" fg:w="5"/><text x="61.2237%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="61.1333%" y="389" width="0.2394%" height="15" fill="rgb(216,42,28)" fg:x="766" fg:w="3"/><text x="61.3833%" y="399.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="61.1333%" y="373" width="0.2394%" height="15" fill="rgb(213,205,53)" fg:x="766" fg:w="3"/><text x="61.3833%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.2929%" y="357" width="0.0798%" height="15" fill="rgb(239,140,53)" fg:x="768" fg:w="1"/><text x="61.5429%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.2929%" y="341" width="0.0798%" height="15" fill="rgb(248,95,9)" fg:x="768" fg:w="1"/><text x="61.5429%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.2929%" y="325" width="0.0798%" height="15" fill="rgb(254,58,47)" fg:x="768" fg:w="1"/><text x="61.5429%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="61.2929%" y="309" width="0.0798%" height="15" fill="rgb(234,227,14)" fg:x="768" fg:w="1"/><text x="61.5429%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="61.2929%" y="293" width="0.0798%" height="15" fill="rgb(205,192,45)" fg:x="768" fg:w="1"/><text x="61.5429%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="61.2929%" y="277" width="0.0798%" height="15" fill="rgb(253,187,31)" fg:x="768" fg:w="1"/><text x="61.5429%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="61.2929%" y="261" width="0.0798%" height="15" fill="rgb(222,6,32)" fg:x="768" fg:w="1"/><text x="61.5429%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.2929%" y="245" width="0.0798%" height="15" fill="rgb(249,190,19)" fg:x="768" fg:w="1"/><text x="61.5429%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.2929%" y="229" width="0.0798%" height="15" fill="rgb(251,28,20)" fg:x="768" fg:w="1"/><text x="61.5429%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="61.2929%" y="213" width="0.0798%" height="15" fill="rgb(210,223,40)" fg:x="768" fg:w="1"/><text x="61.5429%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="61.2929%" y="197" width="0.0798%" height="15" fill="rgb(216,137,22)" fg:x="768" fg:w="1"/><text x="61.5429%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="61.2929%" y="181" width="0.0798%" height="15" fill="rgb(247,39,34)" fg:x="768" fg:w="1"/><text x="61.5429%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.8468%" y="149" width="0.0798%" height="15" fill="rgb(239,43,50)" fg:x="800" fg:w="1"/><text x="64.0968%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.8468%" y="133" width="0.0798%" height="15" fill="rgb(241,212,9)" fg:x="800" fg:w="1"/><text x="64.0968%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="63.7670%" y="165" width="0.2394%" height="15" fill="rgb(205,8,2)" fg:x="799" fg:w="3"/><text x="64.0170%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9266%" y="149" width="0.0798%" height="15" fill="rgb(217,173,54)" fg:x="801" fg:w="1"/><text x="64.1766%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.48%)</title><rect x="63.6073%" y="197" width="0.4789%" height="15" fill="rgb(208,149,52)" fg:x="797" fg:w="6"/><text x="63.8573%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="63.7670%" y="181" width="0.3192%" height="15" fill="rgb(239,99,40)" fg:x="799" fg:w="4"/><text x="64.0170%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="64.0064%" y="165" width="0.0798%" height="15" fill="rgb(233,214,26)" fg:x="802" fg:w="1"/><text x="64.2564%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.0064%" y="149" width="0.0798%" height="15" fill="rgb(231,225,37)" fg:x="802" fg:w="1"/><text x="64.2564%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="64.0862%" y="197" width="0.1596%" height="15" fill="rgb(252,55,35)" fg:x="803" fg:w="2"/><text x="64.3362%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.1660%" y="181" width="0.0798%" height="15" fill="rgb(239,43,18)" fg:x="804" fg:w="1"/><text x="64.4160%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.80%)</title><rect x="63.5275%" y="213" width="0.7981%" height="15" fill="rgb(251,125,49)" fg:x="796" fg:w="10"/><text x="63.7775%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.2458%" y="197" width="0.0798%" height="15" fill="rgb(212,83,54)" fg:x="805" fg:w="1"/><text x="64.4958%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.2458%" y="181" width="0.0798%" height="15" fill="rgb(250,75,6)" fg:x="805" fg:w="1"/><text x="64.4958%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.2458%" y="165" width="0.0798%" height="15" fill="rgb(252,36,40)" fg:x="805" fg:w="1"/><text x="64.4958%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (13 samples, 1.04%)</title><rect x="63.3679%" y="245" width="1.0375%" height="15" fill="rgb(230,91,51)" fg:x="794" fg:w="13"/><text x="63.6179%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="63.4477%" y="229" width="0.9577%" height="15" fill="rgb(212,92,28)" fg:x="795" fg:w="12"/><text x="63.6977%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="64.3256%" y="213" width="0.0798%" height="15" fill="rgb(227,13,22)" fg:x="806" fg:w="1"/><text x="64.5756%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 1.28%)</title><rect x="63.2083%" y="261" width="1.2769%" height="15" fill="rgb(239,204,32)" fg:x="792" fg:w="16"/><text x="63.4583%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4054%" y="245" width="0.0798%" height="15" fill="rgb(228,49,41)" fg:x="807" fg:w="1"/><text x="64.6554%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.4054%" y="229" width="0.0798%" height="15" fill="rgb(206,95,6)" fg:x="807" fg:w="1"/><text x="64.6554%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (18 samples, 1.44%)</title><rect x="63.2083%" y="293" width="1.4366%" height="15" fill="rgb(251,20,14)" fg:x="792" fg:w="18"/><text x="63.4583%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 1.44%)</title><rect x="63.2083%" y="277" width="1.4366%" height="15" fill="rgb(214,99,28)" fg:x="792" fg:w="18"/><text x="63.4583%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="64.4852%" y="261" width="0.1596%" height="15" fill="rgb(239,122,54)" fg:x="808" fg:w="2"/><text x="64.7352%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.4852%" y="245" width="0.1596%" height="15" fill="rgb(218,217,46)" fg:x="808" fg:w="2"/><text x="64.7352%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="64.6449%" y="293" width="0.2394%" height="15" fill="rgb(249,106,28)" fg:x="810" fg:w="3"/><text x="64.8949%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="65.0439%" y="277" width="0.2394%" height="15" fill="rgb(250,158,18)" fg:x="815" fg:w="3"/><text x="65.2939%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.2035%" y="261" width="0.0798%" height="15" fill="rgb(226,137,29)" fg:x="817" fg:w="1"/><text x="65.4535%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (32 samples, 2.55%)</title><rect x="62.9689%" y="325" width="2.5539%" height="15" fill="rgb(210,188,1)" fg:x="789" fg:w="32"/><text x="63.2189%" y="335.50">&lt;s..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 2.39%)</title><rect x="63.1285%" y="309" width="2.3943%" height="15" fill="rgb(227,84,42)" fg:x="791" fg:w="30"/><text x="63.3785%" y="319.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="64.8843%" y="293" width="0.6385%" height="15" fill="rgb(222,147,48)" fg:x="813" fg:w="8"/><text x="65.1343%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="65.2833%" y="277" width="0.2394%" height="15" fill="rgb(241,150,43)" fg:x="818" fg:w="3"/><text x="65.5333%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="65.6026%" y="245" width="0.0798%" height="15" fill="rgb(206,139,52)" fg:x="822" fg:w="1"/><text x="65.8526%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (40 samples, 3.19%)</title><rect x="62.5698%" y="341" width="3.1923%" height="15" fill="rgb(230,63,14)" fg:x="784" fg:w="40"/><text x="62.8198%" y="351.50">&lt;rp..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="65.5227%" y="325" width="0.2394%" height="15" fill="rgb(247,8,20)" fg:x="821" fg:w="3"/><text x="65.7727%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="65.5227%" y="309" width="0.2394%" height="15" fill="rgb(213,115,4)" fg:x="821" fg:w="3"/><text x="65.7727%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.24%)</title><rect x="65.5227%" y="293" width="0.2394%" height="15" fill="rgb(241,79,49)" fg:x="821" fg:w="3"/><text x="65.7727%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="65.5227%" y="277" width="0.2394%" height="15" fill="rgb(222,42,35)" fg:x="821" fg:w="3"/><text x="65.7727%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="65.6026%" y="261" width="0.1596%" height="15" fill="rgb(247,59,23)" fg:x="822" fg:w="2"/><text x="65.8526%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.6824%" y="245" width="0.0798%" height="15" fill="rgb(247,93,18)" fg:x="823" fg:w="1"/><text x="65.9324%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.7622%" y="341" width="0.1596%" height="15" fill="rgb(249,107,47)" fg:x="824" fg:w="2"/><text x="66.0122%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8420%" y="325" width="0.0798%" height="15" fill="rgb(219,27,1)" fg:x="825" fg:w="1"/><text x="66.0920%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 3.59%)</title><rect x="62.4900%" y="357" width="3.5914%" height="15" fill="rgb(217,82,32)" fg:x="783" fg:w="45"/><text x="62.7400%" y="367.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.9218%" y="341" width="0.1596%" height="15" fill="rgb(250,129,47)" fg:x="826" fg:w="2"/><text x="66.1718%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (54 samples, 4.31%)</title><rect x="62.1708%" y="389" width="4.3097%" height="15" fill="rgb(253,88,35)" fg:x="779" fg:w="54"/><text x="62.4208%" y="399.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (50 samples, 3.99%)</title><rect x="62.4900%" y="373" width="3.9904%" height="15" fill="rgb(245,221,14)" fg:x="783" fg:w="50"/><text x="62.7400%" y="383.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="66.0814%" y="357" width="0.3990%" height="15" fill="rgb(217,119,54)" fg:x="828" fg:w="5"/><text x="66.3314%" y="367.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="66.1612%" y="341" width="0.3192%" height="15" fill="rgb(247,128,31)" fg:x="829" fg:w="4"/><text x="66.4112%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (58 samples, 4.63%)</title><rect x="62.0910%" y="405" width="4.6289%" height="15" fill="rgb(211,99,22)" fg:x="778" fg:w="58"/><text x="62.3410%" y="415.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="66.4804%" y="389" width="0.2394%" height="15" fill="rgb(212,20,17)" fg:x="833" fg:w="3"/><text x="66.7304%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.5603%" y="373" width="0.1596%" height="15" fill="rgb(209,159,29)" fg:x="834" fg:w="2"/><text x="66.8103%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (63 samples, 5.03%)</title><rect x="62.0112%" y="437" width="5.0279%" height="15" fill="rgb(222,177,53)" fg:x="777" fg:w="63"/><text x="62.2612%" y="447.50">&lt;rpc_p..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (62 samples, 4.95%)</title><rect x="62.0910%" y="421" width="4.9481%" height="15" fill="rgb(234,46,43)" fg:x="778" fg:w="62"/><text x="62.3410%" y="431.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="66.7199%" y="405" width="0.3192%" height="15" fill="rgb(208,108,14)" fg:x="836" fg:w="4"/><text x="66.9699%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.8795%" y="389" width="0.1596%" height="15" fill="rgb(226,78,53)" fg:x="838" fg:w="2"/><text x="67.1295%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.0391%" y="437" width="0.0798%" height="15" fill="rgb(230,20,41)" fg:x="840" fg:w="1"/><text x="67.2891%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 5.83%)</title><rect x="61.5323%" y="453" width="5.8260%" height="15" fill="rgb(213,195,35)" fg:x="771" fg:w="73"/><text x="61.7823%" y="463.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="67.1189%" y="437" width="0.2394%" height="15" fill="rgb(242,62,36)" fg:x="841" fg:w="3"/><text x="67.3689%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="67.1987%" y="421" width="0.1596%" height="15" fill="rgb(222,210,37)" fg:x="842" fg:w="2"/><text x="67.4487%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="67.2785%" y="405" width="0.0798%" height="15" fill="rgb(232,107,19)" fg:x="843" fg:w="1"/><text x="67.5285%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (76 samples, 6.07%)</title><rect x="61.3727%" y="485" width="6.0654%" height="15" fill="rgb(235,85,17)" fg:x="769" fg:w="76"/><text x="61.6227%" y="495.50">&lt;rpc_pro..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (76 samples, 6.07%)</title><rect x="61.3727%" y="469" width="6.0654%" height="15" fill="rgb(219,195,31)" fg:x="769" fg:w="76"/><text x="61.6227%" y="479.50">&lt;std::co..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="67.3583%" y="453" width="0.0798%" height="15" fill="rgb(231,183,30)" fg:x="844" fg:w="1"/><text x="67.6083%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3583%" y="437" width="0.0798%" height="15" fill="rgb(212,0,11)" fg:x="844" fg:w="1"/><text x="67.6083%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="67.5180%" y="437" width="0.2394%" height="15" fill="rgb(249,53,54)" fg:x="846" fg:w="3"/><text x="67.7680%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="67.7574%" y="437" width="0.5587%" height="15" fill="rgb(211,118,13)" fg:x="849" fg:w="7"/><text x="68.0074%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="68.0766%" y="421" width="0.2394%" height="15" fill="rgb(237,42,9)" fg:x="853" fg:w="3"/><text x="68.3266%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="68.1564%" y="405" width="0.1596%" height="15" fill="rgb(227,68,32)" fg:x="854" fg:w="2"/><text x="68.4064%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="68.3160%" y="437" width="0.1596%" height="15" fill="rgb(238,10,7)" fg:x="856" fg:w="2"/><text x="68.5660%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.3958%" y="421" width="0.0798%" height="15" fill="rgb(224,42,12)" fg:x="857" fg:w="1"/><text x="68.6458%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3958%" y="405" width="0.0798%" height="15" fill="rgb(252,190,5)" fg:x="857" fg:w="1"/><text x="68.6458%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="68.4757%" y="437" width="0.1596%" height="15" fill="rgb(220,214,39)" fg:x="858" fg:w="2"/><text x="68.7257%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="68.4757%" y="421" width="0.1596%" height="15" fill="rgb(247,98,4)" fg:x="858" fg:w="2"/><text x="68.7257%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5555%" y="405" width="0.0798%" height="15" fill="rgb(211,60,12)" fg:x="859" fg:w="1"/><text x="68.8055%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (7 samples, 0.56%)</title><rect x="68.6353%" y="437" width="0.5587%" height="15" fill="rgb(224,42,10)" fg:x="860" fg:w="7"/><text x="68.8853%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="68.7949%" y="421" width="0.3990%" height="15" fill="rgb(217,167,4)" fg:x="862" fg:w="5"/><text x="69.0449%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.0343%" y="405" width="0.1596%" height="15" fill="rgb(253,18,17)" fg:x="865" fg:w="2"/><text x="69.2843%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1141%" y="389" width="0.0798%" height="15" fill="rgb(249,186,44)" fg:x="866" fg:w="1"/><text x="69.3641%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.1141%" y="373" width="0.0798%" height="15" fill="rgb(254,124,54)" fg:x="866" fg:w="1"/><text x="69.3641%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="69.2737%" y="405" width="0.0798%" height="15" fill="rgb(220,124,39)" fg:x="868" fg:w="1"/><text x="69.5237%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="69.4334%" y="389" width="0.2394%" height="15" fill="rgb(225,96,46)" fg:x="870" fg:w="3"/><text x="69.6834%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="69.4334%" y="373" width="0.2394%" height="15" fill="rgb(221,106,12)" fg:x="870" fg:w="3"/><text x="69.6834%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="69.4334%" y="357" width="0.2394%" height="15" fill="rgb(227,133,23)" fg:x="870" fg:w="3"/><text x="69.6834%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.8324%" y="341" width="0.1596%" height="15" fill="rgb(216,44,52)" fg:x="875" fg:w="2"/><text x="70.0824%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.9122%" y="325" width="0.0798%" height="15" fill="rgb(239,149,7)" fg:x="876" fg:w="1"/><text x="70.1622%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.9122%" y="309" width="0.0798%" height="15" fill="rgb(211,157,31)" fg:x="876" fg:w="1"/><text x="70.1622%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="69.8324%" y="357" width="0.2394%" height="15" fill="rgb(206,215,22)" fg:x="875" fg:w="3"/><text x="70.0824%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="69.9920%" y="341" width="0.0798%" height="15" fill="rgb(208,113,15)" fg:x="877" fg:w="1"/><text x="70.2420%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9920%" y="325" width="0.0798%" height="15" fill="rgb(207,189,15)" fg:x="877" fg:w="1"/><text x="70.2420%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.64%)</title><rect x="69.6728%" y="389" width="0.6385%" height="15" fill="rgb(231,115,4)" fg:x="873" fg:w="8"/><text x="69.9228%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="69.6728%" y="373" width="0.6385%" height="15" fill="rgb(253,117,2)" fg:x="873" fg:w="8"/><text x="69.9228%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="70.0718%" y="357" width="0.2394%" height="15" fill="rgb(248,48,24)" fg:x="878" fg:w="3"/><text x="70.3218%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.3911%" y="373" width="0.0798%" height="15" fill="rgb(241,28,46)" fg:x="882" fg:w="1"/><text x="70.6411%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5507%" y="357" width="0.0798%" height="15" fill="rgb(216,165,52)" fg:x="884" fg:w="1"/><text x="70.8007%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5507%" y="341" width="0.0798%" height="15" fill="rgb(220,222,34)" fg:x="884" fg:w="1"/><text x="70.8007%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5507%" y="325" width="0.0798%" height="15" fill="rgb(247,222,49)" fg:x="884" fg:w="1"/><text x="70.8007%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0295%" y="293" width="0.0798%" height="15" fill="rgb(240,10,31)" fg:x="890" fg:w="1"/><text x="71.2795%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="70.8699%" y="325" width="0.3192%" height="15" fill="rgb(221,199,35)" fg:x="888" fg:w="4"/><text x="71.1199%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="70.9497%" y="309" width="0.2394%" height="15" fill="rgb(230,223,11)" fg:x="889" fg:w="3"/><text x="71.1997%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="71.1093%" y="293" width="0.0798%" height="15" fill="rgb(218,82,45)" fg:x="891" fg:w="1"/><text x="71.3593%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="71.5084%" y="309" width="0.1596%" height="15" fill="rgb(233,213,33)" fg:x="896" fg:w="2"/><text x="71.7584%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="71.7478%" y="293" width="0.3192%" height="15" fill="rgb(210,143,52)" fg:x="899" fg:w="4"/><text x="71.9978%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="71.8276%" y="277" width="0.2394%" height="15" fill="rgb(206,95,4)" fg:x="900" fg:w="3"/><text x="72.0776%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="71.8276%" y="261" width="0.2394%" height="15" fill="rgb(246,164,46)" fg:x="900" fg:w="3"/><text x="72.0776%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="71.6680%" y="309" width="0.7183%" height="15" fill="rgb(213,210,47)" fg:x="898" fg:w="9"/><text x="71.9180%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="72.0670%" y="293" width="0.3192%" height="15" fill="rgb(210,12,38)" fg:x="903" fg:w="4"/><text x="72.3170%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.3065%" y="277" width="0.0798%" height="15" fill="rgb(252,192,54)" fg:x="906" fg:w="1"/><text x="72.5565%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.15%)</title><rect x="70.4709%" y="373" width="2.1548%" height="15" fill="rgb(242,92,6)" fg:x="883" fg:w="27"/><text x="70.7209%" y="383.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (25 samples, 2.00%)</title><rect x="70.6305%" y="357" width="1.9952%" height="15" fill="rgb(253,154,15)" fg:x="885" fg:w="25"/><text x="70.8805%" y="367.50">s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 1.76%)</title><rect x="70.8699%" y="341" width="1.7558%" height="15" fill="rgb(209,20,43)" fg:x="888" fg:w="22"/><text x="71.1199%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.44%)</title><rect x="71.1891%" y="325" width="1.4366%" height="15" fill="rgb(232,28,49)" fg:x="892" fg:w="18"/><text x="71.4391%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="72.3863%" y="309" width="0.2394%" height="15" fill="rgb(248,131,53)" fg:x="907" fg:w="3"/><text x="72.6363%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (44 samples, 3.51%)</title><rect x="69.3536%" y="405" width="3.5116%" height="15" fill="rgb(214,16,30)" fg:x="869" fg:w="44"/><text x="69.6036%" y="415.50">&lt;se..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (32 samples, 2.55%)</title><rect x="70.3113%" y="389" width="2.5539%" height="15" fill="rgb(245,16,0)" fg:x="881" fg:w="32"/><text x="70.5613%" y="399.50">se..</text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="72.6257%" y="373" width="0.2394%" height="15" fill="rgb(245,17,35)" fg:x="910" fg:w="3"/><text x="72.8757%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (47 samples, 3.75%)</title><rect x="69.2737%" y="421" width="3.7510%" height="15" fill="rgb(249,27,53)" fg:x="868" fg:w="47"/><text x="69.5237%" y="431.50">&lt;ser..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="72.8651%" y="405" width="0.1596%" height="15" fill="rgb(214,73,24)" fg:x="913" fg:w="2"/><text x="73.1151%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.9449%" y="389" width="0.0798%" height="15" fill="rgb(223,84,37)" fg:x="914" fg:w="1"/><text x="73.1949%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.0247%" y="421" width="0.1596%" height="15" fill="rgb(210,109,28)" fg:x="915" fg:w="2"/><text x="73.2747%" y="431.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (306 samples, 24.42%)</title><rect x="48.8428%" y="581" width="24.4214%" height="15" fill="rgb(208,186,6)" fg:x="612" fg:w="306"/><text x="49.0928%" y="591.50">&lt;plugins_rpc::sessions::SessionServices..</text></g><g><title>core::iter::adapters::try_process (292 samples, 23.30%)</title><rect x="49.9601%" y="565" width="23.3041%" height="15" fill="rgb(235,201,30)" fg:x="626" fg:w="292"/><text x="50.2101%" y="575.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (164 samples, 13.09%)</title><rect x="60.1756%" y="549" width="13.0886%" height="15" fill="rgb(216,198,48)" fg:x="754" fg:w="164"/><text x="60.4256%" y="559.50">alloc::vec::in_place..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (163 samples, 13.01%)</title><rect x="60.2554%" y="533" width="13.0088%" height="15" fill="rgb(254,186,25)" fg:x="755" fg:w="163"/><text x="60.5054%" y="543.50">&lt;core::iter::adapter..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (162 samples, 12.93%)</title><rect x="60.3352%" y="517" width="12.9290%" height="15" fill="rgb(227,87,5)" fg:x="756" fg:w="162"/><text x="60.5852%" y="527.50">plugins_rpc::sessio..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (149 samples, 11.89%)</title><rect x="61.3727%" y="501" width="11.8915%" height="15" fill="rgb(236,205,25)" fg:x="769" fg:w="149"/><text x="61.6227%" y="511.50">&lt;rpc_proto::Json a..</text></g><g><title>kernel::model::EntityPtr::to_json_value (73 samples, 5.83%)</title><rect x="67.4381%" y="485" width="5.8260%" height="15" fill="rgb(229,99,32)" fg:x="845" fg:w="73"/><text x="67.6881%" y="495.50">kernel:..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (73 samples, 5.83%)</title><rect x="67.4381%" y="469" width="5.8260%" height="15" fill="rgb(231,177,31)" fg:x="845" fg:w="73"/><text x="67.6881%" y="479.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (73 samples, 5.83%)</title><rect x="67.4381%" y="453" width="5.8260%" height="15" fill="rgb(246,15,2)" fg:x="845" fg:w="73"/><text x="67.6881%" y="463.50">&lt;serde_..</text></g><g><title>serde::ser::Serializer::collect_map (51 samples, 4.07%)</title><rect x="69.1939%" y="437" width="4.0702%" height="15" fill="rgb(207,39,15)" fg:x="867" fg:w="51"/><text x="69.4439%" y="447.50">serd..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1844%" y="421" width="0.0798%" height="15" fill="rgb(207,44,9)" fg:x="917" fg:w="1"/><text x="73.4344%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1844%" y="405" width="0.0798%" height="15" fill="rgb(225,224,33)" fg:x="917" fg:w="1"/><text x="73.4344%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1844%" y="389" width="0.0798%" height="15" fill="rgb(252,151,3)" fg:x="917" fg:w="1"/><text x="73.4344%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.2642%" y="581" width="0.0798%" height="15" fill="rgb(211,140,13)" fg:x="918" fg:w="1"/><text x="73.5142%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.3440%" y="581" width="0.0798%" height="15" fill="rgb(239,225,17)" fg:x="919" fg:w="1"/><text x="73.5940%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.4238%" y="581" width="0.0798%" height="15" fill="rgb(223,170,52)" fg:x="920" fg:w="1"/><text x="73.6738%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.4238%" y="565" width="0.0798%" height="15" fill="rgb(212,64,21)" fg:x="920" fg:w="1"/><text x="73.6738%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.4238%" y="549" width="0.0798%" height="15" fill="rgb(236,126,48)" fg:x="920" fg:w="1"/><text x="73.6738%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (338 samples, 26.98%)</title><rect x="46.6081%" y="629" width="26.9753%" height="15" fill="rgb(209,135,11)" fg:x="584" fg:w="338"/><text x="46.8581%" y="639.50">kernel::plugins::SessionPlugins::have_surro..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (337 samples, 26.90%)</title><rect x="46.6879%" y="613" width="26.8955%" height="15" fill="rgb(228,126,40)" fg:x="585" fg:w="337"/><text x="46.9379%" y="623.50">&lt;plugins_dynlib::DynamicPlugin as kernel::p..</text></g><g><title>plugins_rpc::querying::have_surroundings (311 samples, 24.82%)</title><rect x="48.7630%" y="597" width="24.8204%" height="15" fill="rgb(205,196,36)" fg:x="611" fg:w="311"/><text x="49.0130%" y="607.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="73.5036%" y="581" width="0.0798%" height="15" fill="rgb(243,160,33)" fg:x="921" fg:w="1"/><text x="73.7536%" y="591.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="73.5036%" y="565" width="0.0798%" height="15" fill="rgb(210,84,20)" fg:x="921" fg:w="1"/><text x="73.7536%" y="575.50"></text></g><g><title>kernel::model::base::&lt;impl core::convert::From&lt;kernel::model::base::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="73.5036%" y="549" width="0.0798%" height="15" fill="rgb(228,213,30)" fg:x="921" fg:w="1"/><text x="73.7536%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="73.5036%" y="533" width="0.0798%" height="15" fill="rgb(252,33,45)" fg:x="921" fg:w="1"/><text x="73.7536%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.5036%" y="517" width="0.0798%" height="15" fill="rgb(254,227,20)" fg:x="921" fg:w="1"/><text x="73.7536%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.5036%" y="501" width="0.0798%" height="15" fill="rgb(228,192,2)" fg:x="921" fg:w="1"/><text x="73.7536%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="73.5036%" y="485" width="0.0798%" height="15" fill="rgb(233,32,8)" fg:x="921" fg:w="1"/><text x="73.7536%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.6632%" y="373" width="0.0798%" height="15" fill="rgb(220,146,47)" fg:x="923" fg:w="1"/><text x="73.9132%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.6632%" y="357" width="0.0798%" height="15" fill="rgb(246,194,1)" fg:x="923" fg:w="1"/><text x="73.9132%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.6632%" y="341" width="0.0798%" height="15" fill="rgb(218,203,9)" fg:x="923" fg:w="1"/><text x="73.9132%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.6632%" y="325" width="0.0798%" height="15" fill="rgb(237,97,14)" fg:x="923" fg:w="1"/><text x="73.9132%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.6632%" y="309" width="0.0798%" height="15" fill="rgb(239,76,15)" fg:x="923" fg:w="1"/><text x="73.9132%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.6632%" y="293" width="0.0798%" height="15" fill="rgb(222,53,45)" fg:x="923" fg:w="1"/><text x="73.9132%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.6632%" y="277" width="0.0798%" height="15" fill="rgb(237,88,5)" fg:x="923" fg:w="1"/><text x="73.9132%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="73.6632%" y="501" width="0.1596%" height="15" fill="rgb(218,223,35)" fg:x="923" fg:w="2"/><text x="73.9132%" y="511.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="73.6632%" y="485" width="0.1596%" height="15" fill="rgb(243,229,38)" fg:x="923" fg:w="2"/><text x="73.9132%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="73.6632%" y="469" width="0.1596%" height="15" fill="rgb(240,75,41)" fg:x="923" fg:w="2"/><text x="73.9132%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="73.6632%" y="453" width="0.1596%" height="15" fill="rgb(209,110,37)" fg:x="923" fg:w="2"/><text x="73.9132%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="73.6632%" y="437" width="0.1596%" height="15" fill="rgb(221,130,46)" fg:x="923" fg:w="2"/><text x="73.9132%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="73.6632%" y="421" width="0.1596%" height="15" fill="rgb(237,160,20)" fg:x="923" fg:w="2"/><text x="73.9132%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="73.6632%" y="405" width="0.1596%" height="15" fill="rgb(234,126,24)" fg:x="923" fg:w="2"/><text x="73.9132%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="73.6632%" y="389" width="0.1596%" height="15" fill="rgb(207,177,9)" fg:x="923" fg:w="2"/><text x="73.9132%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="73.7430%" y="373" width="0.0798%" height="15" fill="rgb(231,191,33)" fg:x="924" fg:w="1"/><text x="73.9930%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="73.7430%" y="357" width="0.0798%" height="15" fill="rgb(207,42,1)" fg:x="924" fg:w="1"/><text x="73.9930%" y="367.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="73.5834%" y="597" width="0.3192%" height="15" fill="rgb(218,34,50)" fg:x="922" fg:w="4"/><text x="73.8334%" y="607.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="73.5834%" y="581" width="0.3192%" height="15" fill="rgb(254,126,39)" fg:x="922" fg:w="4"/><text x="73.8334%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="73.5834%" y="565" width="0.3192%" height="15" fill="rgb(251,17,26)" fg:x="922" fg:w="4"/><text x="73.8334%" y="575.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="73.5834%" y="549" width="0.3192%" height="15" fill="rgb(252,215,34)" fg:x="922" fg:w="4"/><text x="73.8334%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="73.5834%" y="533" width="0.3192%" height="15" fill="rgb(217,120,44)" fg:x="922" fg:w="4"/><text x="73.8334%" y="543.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (4 samples, 0.32%)</title><rect x="73.5834%" y="517" width="0.3192%" height="15" fill="rgb(211,31,11)" fg:x="922" fg:w="4"/><text x="73.8334%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::actions::DropAction&gt; (1 samples, 0.08%)</title><rect x="73.8228%" y="501" width="0.0798%" height="15" fill="rgb(222,69,51)" fg:x="925" fg:w="1"/><text x="74.0728%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (369 samples, 29.45%)</title><rect x="44.5331%" y="645" width="29.4493%" height="15" fill="rgb(215,229,42)" fg:x="558" fg:w="369"/><text x="44.7831%" y="655.50">&lt;engine::session::Session as kernel::actions::P..</text></g><g><title>kernel::plugins::mw::apply_middleware (5 samples, 0.40%)</title><rect x="73.5834%" y="629" width="0.3990%" height="15" fill="rgb(212,102,15)" fg:x="922" fg:w="5"/><text x="73.8334%" y="639.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="73.5834%" y="613" width="0.3990%" height="15" fill="rgb(205,179,41)" fg:x="922" fg:w="5"/><text x="73.8334%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::LibraryMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="73.9026%" y="597" width="0.0798%" height="15" fill="rgb(219,148,46)" fg:x="926" fg:w="1"/><text x="74.1526%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="74.0623%" y="629" width="0.0798%" height="15" fill="rgb(243,40,19)" fg:x="928" fg:w="1"/><text x="74.3123%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.0623%" y="613" width="0.0798%" height="15" fill="rgb(208,206,34)" fg:x="928" fg:w="1"/><text x="74.3123%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.0623%" y="597" width="0.0798%" height="15" fill="rgb(244,184,38)" fg:x="928" fg:w="1"/><text x="74.3123%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.0623%" y="581" width="0.0798%" height="15" fill="rgb(244,151,47)" fg:x="928" fg:w="1"/><text x="74.3123%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.0623%" y="565" width="0.0798%" height="15" fill="rgb(236,134,42)" fg:x="928" fg:w="1"/><text x="74.3123%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.0623%" y="549" width="0.0798%" height="15" fill="rgb(233,93,22)" fg:x="928" fg:w="1"/><text x="74.3123%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="74.0623%" y="533" width="0.0798%" height="15" fill="rgb(211,202,10)" fg:x="928" fg:w="1"/><text x="74.3123%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.0623%" y="517" width="0.0798%" height="15" fill="rgb(240,63,8)" fg:x="928" fg:w="1"/><text x="74.3123%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.1421%" y="581" width="0.0798%" height="15" fill="rgb(214,9,4)" fg:x="929" fg:w="1"/><text x="74.3921%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.1421%" y="565" width="0.0798%" height="15" fill="rgb(243,66,45)" fg:x="929" fg:w="1"/><text x="74.3921%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.1421%" y="549" width="0.0798%" height="15" fill="rgb(220,50,42)" fg:x="929" fg:w="1"/><text x="74.3921%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.1421%" y="533" width="0.0798%" height="15" fill="rgb(220,134,27)" fg:x="929" fg:w="1"/><text x="74.3921%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.1421%" y="517" width="0.0798%" height="15" fill="rgb(246,151,50)" fg:x="929" fg:w="1"/><text x="74.3921%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.1421%" y="501" width="0.0798%" height="15" fill="rgb(238,216,27)" fg:x="929" fg:w="1"/><text x="74.3921%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.1421%" y="485" width="0.0798%" height="15" fill="rgb(250,92,11)" fg:x="929" fg:w="1"/><text x="74.3921%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.1421%" y="469" width="0.0798%" height="15" fill="rgb(248,183,6)" fg:x="929" fg:w="1"/><text x="74.3921%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="74.1421%" y="613" width="0.1596%" height="15" fill="rgb(211,204,50)" fg:x="929" fg:w="2"/><text x="74.3921%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="74.1421%" y="597" width="0.1596%" height="15" fill="rgb(252,55,47)" fg:x="929" fg:w="2"/><text x="74.3921%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.2219%" y="581" width="0.0798%" height="15" fill="rgb(240,198,32)" fg:x="930" fg:w="1"/><text x="74.4719%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.2219%" y="565" width="0.0798%" height="15" fill="rgb(224,203,19)" fg:x="930" fg:w="1"/><text x="74.4719%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.2219%" y="549" width="0.0798%" height="15" fill="rgb(205,27,16)" fg:x="930" fg:w="1"/><text x="74.4719%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.2219%" y="533" width="0.0798%" height="15" fill="rgb(224,226,17)" fg:x="930" fg:w="1"/><text x="74.4719%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.2219%" y="517" width="0.0798%" height="15" fill="rgb(205,216,54)" fg:x="930" fg:w="1"/><text x="74.4719%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.2219%" y="501" width="0.0798%" height="15" fill="rgb(248,168,46)" fg:x="930" fg:w="1"/><text x="74.4719%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.2219%" y="485" width="0.0798%" height="15" fill="rgb(226,111,45)" fg:x="930" fg:w="1"/><text x="74.4719%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.2219%" y="469" width="0.0798%" height="15" fill="rgb(231,15,9)" fg:x="930" fg:w="1"/><text x="74.4719%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.2219%" y="453" width="0.0798%" height="15" fill="rgb(243,168,3)" fg:x="930" fg:w="1"/><text x="74.4719%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.2219%" y="437" width="0.0798%" height="15" fill="rgb(221,220,54)" fg:x="930" fg:w="1"/><text x="74.4719%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.3017%" y="613" width="0.0798%" height="15" fill="rgb(232,174,38)" fg:x="931" fg:w="1"/><text x="74.5517%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.3017%" y="597" width="0.0798%" height="15" fill="rgb(205,14,38)" fg:x="931" fg:w="1"/><text x="74.5517%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.3017%" y="581" width="0.0798%" height="15" fill="rgb(234,89,19)" fg:x="931" fg:w="1"/><text x="74.5517%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3017%" y="565" width="0.0798%" height="15" fill="rgb(216,68,51)" fg:x="931" fg:w="1"/><text x="74.5517%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3017%" y="549" width="0.0798%" height="15" fill="rgb(213,49,2)" fg:x="931" fg:w="1"/><text x="74.5517%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3017%" y="533" width="0.0798%" height="15" fill="rgb(242,146,30)" fg:x="931" fg:w="1"/><text x="74.5517%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3017%" y="517" width="0.0798%" height="15" fill="rgb(224,188,11)" fg:x="931" fg:w="1"/><text x="74.5517%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.5411%" y="421" width="0.0798%" height="15" fill="rgb(213,159,11)" fg:x="934" fg:w="1"/><text x="74.7911%" y="431.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="74.3815%" y="597" width="0.3192%" height="15" fill="rgb(229,13,31)" fg:x="932" fg:w="4"/><text x="74.6315%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="74.3815%" y="581" width="0.3192%" height="15" fill="rgb(209,103,11)" fg:x="932" fg:w="4"/><text x="74.6315%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="74.3815%" y="565" width="0.3192%" height="15" fill="rgb(206,3,4)" fg:x="932" fg:w="4"/><text x="74.6315%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="74.4613%" y="549" width="0.2394%" height="15" fill="rgb(252,10,49)" fg:x="933" fg:w="3"/><text x="74.7113%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.4613%" y="533" width="0.2394%" height="15" fill="rgb(217,160,32)" fg:x="933" fg:w="3"/><text x="74.7113%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="74.4613%" y="517" width="0.2394%" height="15" fill="rgb(249,196,0)" fg:x="933" fg:w="3"/><text x="74.7113%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.5411%" y="501" width="0.1596%" height="15" fill="rgb(213,17,48)" fg:x="934" fg:w="2"/><text x="74.7911%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.5411%" y="485" width="0.1596%" height="15" fill="rgb(206,42,46)" fg:x="934" fg:w="2"/><text x="74.7911%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.5411%" y="469" width="0.1596%" height="15" fill="rgb(212,105,24)" fg:x="934" fg:w="2"/><text x="74.7911%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.5411%" y="453" width="0.1596%" height="15" fill="rgb(243,216,30)" fg:x="934" fg:w="2"/><text x="74.7911%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="74.5411%" y="437" width="0.1596%" height="15" fill="rgb(207,121,3)" fg:x="934" fg:w="2"/><text x="74.7911%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="74.6209%" y="421" width="0.0798%" height="15" fill="rgb(249,78,0)" fg:x="935" fg:w="1"/><text x="74.8709%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.6209%" y="405" width="0.0798%" height="15" fill="rgb(244,151,32)" fg:x="935" fg:w="1"/><text x="74.8709%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="74.7805%" y="565" width="0.0798%" height="15" fill="rgb(228,63,25)" fg:x="937" fg:w="1"/><text x="75.0305%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.8603%" y="517" width="0.0798%" height="15" fill="rgb(231,158,23)" fg:x="938" fg:w="1"/><text x="75.1103%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.8603%" y="501" width="0.0798%" height="15" fill="rgb(248,107,23)" fg:x="938" fg:w="1"/><text x="75.1103%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.8603%" y="485" width="0.0798%" height="15" fill="rgb(215,168,21)" fg:x="938" fg:w="1"/><text x="75.1103%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.8603%" y="469" width="0.0798%" height="15" fill="rgb(227,83,22)" fg:x="938" fg:w="1"/><text x="75.1103%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.8603%" y="453" width="0.0798%" height="15" fill="rgb(217,118,43)" fg:x="938" fg:w="1"/><text x="75.1103%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.8603%" y="437" width="0.0798%" height="15" fill="rgb(229,220,41)" fg:x="938" fg:w="1"/><text x="75.1103%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.8603%" y="421" width="0.0798%" height="15" fill="rgb(254,146,46)" fg:x="938" fg:w="1"/><text x="75.1103%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9401%" y="517" width="0.0798%" height="15" fill="rgb(233,208,31)" fg:x="939" fg:w="1"/><text x="75.1901%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="75.0200%" y="517" width="0.2394%" height="15" fill="rgb(222,162,7)" fg:x="940" fg:w="3"/><text x="75.2700%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="75.0200%" y="501" width="0.2394%" height="15" fill="rgb(230,117,45)" fg:x="940" fg:w="3"/><text x="75.2700%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="75.0200%" y="485" width="0.2394%" height="15" fill="rgb(239,163,6)" fg:x="940" fg:w="3"/><text x="75.2700%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="75.0998%" y="469" width="0.1596%" height="15" fill="rgb(246,130,17)" fg:x="941" fg:w="2"/><text x="75.3498%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.1796%" y="453" width="0.0798%" height="15" fill="rgb(216,84,5)" fg:x="942" fg:w="1"/><text x="75.4296%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.2594%" y="437" width="0.0798%" height="15" fill="rgb(230,200,21)" fg:x="943" fg:w="1"/><text x="75.5094%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="74.8603%" y="565" width="0.5587%" height="15" fill="rgb(224,2,8)" fg:x="938" fg:w="7"/><text x="75.1103%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="74.8603%" y="549" width="0.5587%" height="15" fill="rgb(238,178,10)" fg:x="938" fg:w="7"/><text x="75.1103%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="74.8603%" y="533" width="0.5587%" height="15" fill="rgb(242,153,24)" fg:x="938" fg:w="7"/><text x="75.1103%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2594%" y="517" width="0.1596%" height="15" fill="rgb(242,32,48)" fg:x="943" fg:w="2"/><text x="75.5094%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.2594%" y="501" width="0.1596%" height="15" fill="rgb(227,36,0)" fg:x="943" fg:w="2"/><text x="75.5094%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="75.2594%" y="485" width="0.1596%" height="15" fill="rgb(251,33,35)" fg:x="943" fg:w="2"/><text x="75.5094%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2594%" y="469" width="0.1596%" height="15" fill="rgb(232,168,51)" fg:x="943" fg:w="2"/><text x="75.5094%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.2594%" y="453" width="0.1596%" height="15" fill="rgb(228,56,10)" fg:x="943" fg:w="2"/><text x="75.5094%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.3392%" y="437" width="0.0798%" height="15" fill="rgb(231,10,26)" fg:x="944" fg:w="1"/><text x="75.5892%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.3392%" y="421" width="0.0798%" height="15" fill="rgb(226,202,12)" fg:x="944" fg:w="1"/><text x="75.5892%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3392%" y="405" width="0.0798%" height="15" fill="rgb(251,49,21)" fg:x="944" fg:w="1"/><text x="75.5892%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.3392%" y="389" width="0.0798%" height="15" fill="rgb(206,228,28)" fg:x="944" fg:w="1"/><text x="75.5892%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.3392%" y="373" width="0.0798%" height="15" fill="rgb(205,198,31)" fg:x="944" fg:w="1"/><text x="75.5892%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3392%" y="357" width="0.0798%" height="15" fill="rgb(213,69,1)" fg:x="944" fg:w="1"/><text x="75.5892%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.3392%" y="341" width="0.0798%" height="15" fill="rgb(209,177,9)" fg:x="944" fg:w="1"/><text x="75.5892%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.3392%" y="325" width="0.0798%" height="15" fill="rgb(227,119,30)" fg:x="944" fg:w="1"/><text x="75.5892%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3392%" y="309" width="0.0798%" height="15" fill="rgb(234,106,41)" fg:x="944" fg:w="1"/><text x="75.5892%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.3392%" y="293" width="0.0798%" height="15" fill="rgb(244,103,47)" fg:x="944" fg:w="1"/><text x="75.5892%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.3392%" y="277" width="0.0798%" height="15" fill="rgb(212,211,25)" fg:x="944" fg:w="1"/><text x="75.5892%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.3392%" y="261" width="0.0798%" height="15" fill="rgb(208,63,53)" fg:x="944" fg:w="1"/><text x="75.5892%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (20 samples, 1.60%)</title><rect x="73.9824%" y="645" width="1.5962%" height="15" fill="rgb(213,176,21)" fg:x="927" fg:w="20"/><text x="74.2324%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.44%)</title><rect x="74.1421%" y="629" width="1.4366%" height="15" fill="rgb(243,124,12)" fg:x="929" fg:w="18"/><text x="74.3921%" y="639.50"></text></g><g><title>kernel::model::entity::Entity::from_str (15 samples, 1.20%)</title><rect x="74.3815%" y="613" width="1.1971%" height="15" fill="rgb(239,2,35)" fg:x="932" fg:w="15"/><text x="74.6315%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="74.7007%" y="597" width="0.8779%" height="15" fill="rgb(253,169,22)" fg:x="936" fg:w="11"/><text x="74.9507%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="74.7007%" y="581" width="0.8779%" height="15" fill="rgb(254,51,12)" fg:x="936" fg:w="11"/><text x="74.9507%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.4190%" y="565" width="0.1596%" height="15" fill="rgb(244,17,47)" fg:x="945" fg:w="2"/><text x="75.6690%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.4190%" y="549" width="0.1596%" height="15" fill="rgb(251,45,46)" fg:x="945" fg:w="2"/><text x="75.6690%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="75.4190%" y="533" width="0.1596%" height="15" fill="rgb(223,87,43)" fg:x="945" fg:w="2"/><text x="75.6690%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4988%" y="517" width="0.0798%" height="15" fill="rgb(230,132,31)" fg:x="946" fg:w="1"/><text x="75.7488%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8180%" y="581" width="0.0798%" height="15" fill="rgb(206,99,1)" fg:x="950" fg:w="1"/><text x="76.0680%" y="591.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="75.8978%" y="549" width="0.0798%" height="15" fill="rgb(227,110,25)" fg:x="951" fg:w="1"/><text x="76.1478%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="75.8978%" y="565" width="0.1596%" height="15" fill="rgb(217,182,7)" fg:x="951" fg:w="2"/><text x="76.1478%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.9777%" y="549" width="0.0798%" height="15" fill="rgb(250,176,4)" fg:x="952" fg:w="1"/><text x="76.2277%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.9777%" y="533" width="0.0798%" height="15" fill="rgb(244,98,30)" fg:x="952" fg:w="1"/><text x="76.2277%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9777%" y="517" width="0.0798%" height="15" fill="rgb(228,150,42)" fg:x="952" fg:w="1"/><text x="76.2277%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9777%" y="501" width="0.0798%" height="15" fill="rgb(231,91,46)" fg:x="952" fg:w="1"/><text x="76.2277%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9777%" y="485" width="0.0798%" height="15" fill="rgb(252,161,32)" fg:x="952" fg:w="1"/><text x="76.2277%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9777%" y="469" width="0.0798%" height="15" fill="rgb(236,69,41)" fg:x="952" fg:w="1"/><text x="76.2277%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.9777%" y="453" width="0.0798%" height="15" fill="rgb(212,160,3)" fg:x="952" fg:w="1"/><text x="76.2277%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9777%" y="437" width="0.0798%" height="15" fill="rgb(216,5,50)" fg:x="952" fg:w="1"/><text x="76.2277%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9777%" y="421" width="0.0798%" height="15" fill="rgb(241,138,25)" fg:x="952" fg:w="1"/><text x="76.2277%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9777%" y="405" width="0.0798%" height="15" fill="rgb(239,42,18)" fg:x="952" fg:w="1"/><text x="76.2277%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="75.8180%" y="597" width="0.3192%" height="15" fill="rgb(239,40,7)" fg:x="950" fg:w="4"/><text x="76.0680%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="75.8978%" y="581" width="0.2394%" height="15" fill="rgb(239,11,31)" fg:x="951" fg:w="3"/><text x="76.1478%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.0575%" y="565" width="0.0798%" height="15" fill="rgb(224,77,40)" fg:x="953" fg:w="1"/><text x="76.3075%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="76.0575%" y="549" width="0.0798%" height="15" fill="rgb(226,15,5)" fg:x="953" fg:w="1"/><text x="76.3075%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.0575%" y="533" width="0.0798%" height="15" fill="rgb(254,188,5)" fg:x="953" fg:w="1"/><text x="76.3075%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="76.0575%" y="517" width="0.0798%" height="15" fill="rgb(241,148,52)" fg:x="953" fg:w="1"/><text x="76.3075%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="76.1373%" y="597" width="0.2394%" height="15" fill="rgb(251,48,36)" fg:x="954" fg:w="3"/><text x="76.3873%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="76.1373%" y="581" width="0.2394%" height="15" fill="rgb(243,83,13)" fg:x="954" fg:w="3"/><text x="76.3873%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.1373%" y="565" width="0.2394%" height="15" fill="rgb(210,105,0)" fg:x="954" fg:w="3"/><text x="76.3873%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="76.1373%" y="549" width="0.2394%" height="15" fill="rgb(239,60,36)" fg:x="954" fg:w="3"/><text x="76.3873%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.1373%" y="533" width="0.2394%" height="15" fill="rgb(210,20,0)" fg:x="954" fg:w="3"/><text x="76.3873%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="76.1373%" y="517" width="0.2394%" height="15" fill="rgb(244,26,53)" fg:x="954" fg:w="3"/><text x="76.3873%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.1373%" y="501" width="0.2394%" height="15" fill="rgb(240,100,49)" fg:x="954" fg:w="3"/><text x="76.3873%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.2969%" y="485" width="0.0798%" height="15" fill="rgb(250,46,45)" fg:x="956" fg:w="1"/><text x="76.5469%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2969%" y="469" width="0.0798%" height="15" fill="rgb(220,181,29)" fg:x="956" fg:w="1"/><text x="76.5469%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.2969%" y="453" width="0.0798%" height="15" fill="rgb(213,137,33)" fg:x="956" fg:w="1"/><text x="76.5469%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.2969%" y="437" width="0.0798%" height="15" fill="rgb(213,27,48)" fg:x="956" fg:w="1"/><text x="76.5469%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="76.4565%" y="421" width="0.0798%" height="15" fill="rgb(245,180,39)" fg:x="958" fg:w="1"/><text x="76.7065%" y="431.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="76.3767%" y="581" width="0.3192%" height="15" fill="rgb(212,158,42)" fg:x="957" fg:w="4"/><text x="76.6267%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="76.3767%" y="565" width="0.3192%" height="15" fill="rgb(228,193,18)" fg:x="957" fg:w="4"/><text x="76.6267%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.3767%" y="549" width="0.3192%" height="15" fill="rgb(245,172,29)" fg:x="957" fg:w="4"/><text x="76.6267%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="76.3767%" y="533" width="0.3192%" height="15" fill="rgb(207,98,24)" fg:x="957" fg:w="4"/><text x="76.6267%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.3767%" y="517" width="0.3192%" height="15" fill="rgb(249,92,26)" fg:x="957" fg:w="4"/><text x="76.6267%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="76.3767%" y="501" width="0.3192%" height="15" fill="rgb(217,176,26)" fg:x="957" fg:w="4"/><text x="76.6267%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.3767%" y="485" width="0.3192%" height="15" fill="rgb(221,8,39)" fg:x="957" fg:w="4"/><text x="76.6267%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="76.3767%" y="469" width="0.3192%" height="15" fill="rgb(208,90,18)" fg:x="957" fg:w="4"/><text x="76.6267%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.3767%" y="453" width="0.3192%" height="15" fill="rgb(207,202,30)" fg:x="957" fg:w="4"/><text x="76.6267%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="76.4565%" y="437" width="0.2394%" height="15" fill="rgb(231,124,22)" fg:x="958" fg:w="3"/><text x="76.7065%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.5363%" y="421" width="0.1596%" height="15" fill="rgb(206,15,5)" fg:x="959" fg:w="2"/><text x="76.7863%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.5363%" y="405" width="0.1596%" height="15" fill="rgb(239,16,52)" fg:x="959" fg:w="2"/><text x="76.7863%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.5363%" y="389" width="0.1596%" height="15" fill="rgb(245,213,29)" fg:x="959" fg:w="2"/><text x="76.7863%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.5363%" y="373" width="0.1596%" height="15" fill="rgb(213,203,36)" fg:x="959" fg:w="2"/><text x="76.7863%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.6161%" y="357" width="0.0798%" height="15" fill="rgb(209,55,18)" fg:x="960" fg:w="1"/><text x="76.8661%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6161%" y="341" width="0.0798%" height="15" fill="rgb(207,133,49)" fg:x="960" fg:w="1"/><text x="76.8661%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.6959%" y="517" width="0.0798%" height="15" fill="rgb(240,33,46)" fg:x="961" fg:w="1"/><text x="76.9459%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.7757%" y="469" width="0.1596%" height="15" fill="rgb(212,35,2)" fg:x="962" fg:w="2"/><text x="77.0257%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.7757%" y="453" width="0.1596%" height="15" fill="rgb(231,119,28)" fg:x="962" fg:w="2"/><text x="77.0257%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="76.8555%" y="437" width="0.0798%" height="15" fill="rgb(252,178,7)" fg:x="963" fg:w="1"/><text x="77.1055%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8555%" y="421" width="0.0798%" height="15" fill="rgb(251,91,4)" fg:x="963" fg:w="1"/><text x="77.1055%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.7757%" y="501" width="0.2394%" height="15" fill="rgb(233,122,19)" fg:x="962" fg:w="3"/><text x="77.0257%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.7757%" y="485" width="0.2394%" height="15" fill="rgb(231,208,46)" fg:x="962" fg:w="3"/><text x="77.0257%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9354%" y="469" width="0.0798%" height="15" fill="rgb(243,15,41)" fg:x="964" fg:w="1"/><text x="77.1854%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9354%" y="453" width="0.0798%" height="15" fill="rgb(210,32,43)" fg:x="964" fg:w="1"/><text x="77.1854%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9354%" y="437" width="0.0798%" height="15" fill="rgb(222,177,15)" fg:x="964" fg:w="1"/><text x="77.1854%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="75.8180%" y="613" width="1.2769%" height="15" fill="rgb(244,121,34)" fg:x="950" fg:w="16"/><text x="76.0680%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::from_str (9 samples, 0.72%)</title><rect x="76.3767%" y="597" width="0.7183%" height="15" fill="rgb(234,138,4)" fg:x="957" fg:w="9"/><text x="76.6267%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="76.6959%" y="581" width="0.3990%" height="15" fill="rgb(240,97,48)" fg:x="961" fg:w="5"/><text x="76.9459%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="76.6959%" y="565" width="0.3990%" height="15" fill="rgb(237,65,54)" fg:x="961" fg:w="5"/><text x="76.9459%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="76.6959%" y="549" width="0.3990%" height="15" fill="rgb(214,25,24)" fg:x="961" fg:w="5"/><text x="76.9459%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="76.6959%" y="533" width="0.3990%" height="15" fill="rgb(213,5,3)" fg:x="961" fg:w="5"/><text x="76.9459%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="76.7757%" y="517" width="0.3192%" height="15" fill="rgb(219,81,29)" fg:x="962" fg:w="4"/><text x="77.0257%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.0152%" y="501" width="0.0798%" height="15" fill="rgb(220,43,48)" fg:x="965" fg:w="1"/><text x="77.2652%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.0152%" y="485" width="0.0798%" height="15" fill="rgb(239,157,2)" fg:x="965" fg:w="1"/><text x="77.2652%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.0152%" y="469" width="0.0798%" height="15" fill="rgb(213,104,43)" fg:x="965" fg:w="1"/><text x="77.2652%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.36%)</title><rect x="75.8180%" y="629" width="1.3567%" height="15" fill="rgb(237,84,9)" fg:x="950" fg:w="17"/><text x="76.0680%" y="639.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="77.0950%" y="613" width="0.0798%" height="15" fill="rgb(252,6,33)" fg:x="966" fg:w="1"/><text x="77.3450%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.0950%" y="597" width="0.0798%" height="15" fill="rgb(251,172,22)" fg:x="966" fg:w="1"/><text x="77.3450%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (21 samples, 1.68%)</title><rect x="75.5786%" y="645" width="1.6760%" height="15" fill="rgb(244,91,53)" fg:x="947" fg:w="21"/><text x="75.8286%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.1748%" y="629" width="0.0798%" height="15" fill="rgb(219,29,30)" fg:x="967" fg:w="1"/><text x="77.4248%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.1748%" y="613" width="0.0798%" height="15" fill="rgb(213,3,15)" fg:x="967" fg:w="1"/><text x="77.4248%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="597" width="0.0798%" height="15" fill="rgb(208,25,28)" fg:x="967" fg:w="1"/><text x="77.4248%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.1748%" y="581" width="0.0798%" height="15" fill="rgb(252,144,25)" fg:x="967" fg:w="1"/><text x="77.4248%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="565" width="0.0798%" height="15" fill="rgb(226,220,25)" fg:x="967" fg:w="1"/><text x="77.4248%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="77.1748%" y="549" width="0.0798%" height="15" fill="rgb(212,131,28)" fg:x="967" fg:w="1"/><text x="77.4248%" y="559.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.32%)</title><rect x="77.2546%" y="645" width="0.3192%" height="15" fill="rgb(219,143,52)" fg:x="968" fg:w="4"/><text x="77.5046%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="77.2546%" y="629" width="0.3192%" height="15" fill="rgb(215,56,7)" fg:x="968" fg:w="4"/><text x="77.5046%" y="639.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="77.3344%" y="613" width="0.2394%" height="15" fill="rgb(239,59,51)" fg:x="969" fg:w="3"/><text x="77.5844%" y="623.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="77.4142%" y="597" width="0.1596%" height="15" fill="rgb(209,215,4)" fg:x="970" fg:w="2"/><text x="77.6642%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="77.4142%" y="581" width="0.1596%" height="15" fill="rgb(221,118,39)" fg:x="970" fg:w="2"/><text x="77.6642%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.5738%" y="645" width="0.0798%" height="15" fill="rgb(236,6,44)" fg:x="972" fg:w="1"/><text x="77.8238%" y="655.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (417 samples, 33.28%)</title><rect x="44.4533%" y="661" width="33.2801%" height="15" fill="rgb(216,122,9)" fg:x="557" fg:w="417"/><text x="44.7033%" y="671.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="77.6536%" y="645" width="0.0798%" height="15" fill="rgb(244,134,42)" fg:x="973" fg:w="1"/><text x="77.9036%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="77.6536%" y="629" width="0.0798%" height="15" fill="rgb(209,189,35)" fg:x="973" fg:w="1"/><text x="77.9036%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.6536%" y="613" width="0.0798%" height="15" fill="rgb(250,47,36)" fg:x="973" fg:w="1"/><text x="77.9036%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6536%" y="597" width="0.0798%" height="15" fill="rgb(252,112,4)" fg:x="973" fg:w="1"/><text x="77.9036%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6536%" y="581" width="0.0798%" height="15" fill="rgb(221,79,51)" fg:x="973" fg:w="1"/><text x="77.9036%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.6536%" y="565" width="0.0798%" height="15" fill="rgb(232,65,53)" fg:x="973" fg:w="1"/><text x="77.9036%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6536%" y="549" width="0.0798%" height="15" fill="rgb(211,37,7)" fg:x="973" fg:w="1"/><text x="77.9036%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (975 samples, 77.81%)</title><rect x="0.0000%" y="709" width="77.8132%" height="15" fill="rgb(234,221,18)" fg:x="0" fg:w="975"/><text x="0.2500%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (975 samples, 77.81%)</title><rect x="0.0000%" y="693" width="77.8132%" height="15" fill="rgb(220,158,26)" fg:x="0" fg:w="975"/><text x="0.2500%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (975 samples, 77.81%)</title><rect x="0.0000%" y="677" width="77.8132%" height="15" fill="rgb(220,70,6)" fg:x="0" fg:w="975"/><text x="0.2500%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="77.7334%" y="661" width="0.0798%" height="15" fill="rgb(250,39,48)" fg:x="974" fg:w="1"/><text x="77.9834%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.9729%" y="549" width="0.0798%" height="15" fill="rgb(206,40,27)" fg:x="977" fg:w="1"/><text x="78.2229%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.9729%" y="533" width="0.0798%" height="15" fill="rgb(247,80,36)" fg:x="977" fg:w="1"/><text x="78.2229%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.0527%" y="533" width="0.0798%" height="15" fill="rgb(222,9,20)" fg:x="978" fg:w="1"/><text x="78.3027%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.0527%" y="517" width="0.0798%" height="15" fill="rgb(217,26,45)" fg:x="978" fg:w="1"/><text x="78.3027%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.0527%" y="501" width="0.0798%" height="15" fill="rgb(221,67,14)" fg:x="978" fg:w="1"/><text x="78.3027%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="77.9729%" y="565" width="0.2394%" height="15" fill="rgb(248,100,24)" fg:x="977" fg:w="3"/><text x="78.2229%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.0527%" y="549" width="0.1596%" height="15" fill="rgb(230,187,16)" fg:x="978" fg:w="2"/><text x="78.3027%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1325%" y="533" width="0.0798%" height="15" fill="rgb(205,108,13)" fg:x="979" fg:w="1"/><text x="78.3825%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="77.8931%" y="661" width="0.3990%" height="15" fill="rgb(235,71,51)" fg:x="976" fg:w="5"/><text x="78.1431%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (5 samples, 0.40%)</title><rect x="77.8931%" y="645" width="0.3990%" height="15" fill="rgb(251,172,48)" fg:x="976" fg:w="5"/><text x="78.1431%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="77.8931%" y="629" width="0.3990%" height="15" fill="rgb(240,96,49)" fg:x="976" fg:w="5"/><text x="78.1431%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (5 samples, 0.40%)</title><rect x="77.8931%" y="613" width="0.3990%" height="15" fill="rgb(235,46,36)" fg:x="976" fg:w="5"/><text x="78.1431%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="77.9729%" y="597" width="0.3192%" height="15" fill="rgb(244,3,49)" fg:x="977" fg:w="4"/><text x="78.2229%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="77.9729%" y="581" width="0.3192%" height="15" fill="rgb(206,78,54)" fg:x="977" fg:w="4"/><text x="78.2229%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2123%" y="565" width="0.0798%" height="15" fill="rgb(208,85,42)" fg:x="980" fg:w="1"/><text x="78.4623%" y="575.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="78.3719%" y="565" width="0.0798%" height="15" fill="rgb(219,196,21)" fg:x="982" fg:w="1"/><text x="78.6219%" y="575.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="78.3719%" y="549" width="0.0798%" height="15" fill="rgb(238,19,9)" fg:x="982" fg:w="1"/><text x="78.6219%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.48%)</title><rect x="78.2921%" y="613" width="0.4789%" height="15" fill="rgb(206,86,13)" fg:x="981" fg:w="6"/><text x="78.5421%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="78.2921%" y="597" width="0.4789%" height="15" fill="rgb(214,123,40)" fg:x="981" fg:w="6"/><text x="78.5421%" y="607.50"></text></g><g><title>libloading::os::unix::Library::open (6 samples, 0.48%)</title><rect x="78.2921%" y="581" width="0.4789%" height="15" fill="rgb(243,53,5)" fg:x="981" fg:w="6"/><text x="78.5421%" y="591.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="78.4517%" y="565" width="0.3192%" height="15" fill="rgb(254,186,31)" fg:x="983" fg:w="4"/><text x="78.7017%" y="575.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="78.4517%" y="549" width="0.3192%" height="15" fill="rgb(221,216,25)" fg:x="983" fg:w="4"/><text x="78.7017%" y="559.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="78.4517%" y="533" width="0.3192%" height="15" fill="rgb(248,107,42)" fg:x="983" fg:w="4"/><text x="78.7017%" y="543.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="78.4517%" y="517" width="0.3192%" height="15" fill="rgb(221,85,43)" fg:x="983" fg:w="4"/><text x="78.7017%" y="527.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="78.4517%" y="501" width="0.3192%" height="15" fill="rgb(225,34,24)" fg:x="983" fg:w="4"/><text x="78.7017%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (7 samples, 0.56%)</title><rect x="78.2921%" y="661" width="0.5587%" height="15" fill="rgb(211,119,1)" fg:x="981" fg:w="7"/><text x="78.5421%" y="671.50"></text></g><g><title>engine::session::Session::new (7 samples, 0.56%)</title><rect x="78.2921%" y="645" width="0.5587%" height="15" fill="rgb(254,216,46)" fg:x="981" fg:w="7"/><text x="78.5421%" y="655.50"></text></g><g><title>engine::session::Session::initialize (7 samples, 0.56%)</title><rect x="78.2921%" y="629" width="0.5587%" height="15" fill="rgb(238,11,38)" fg:x="981" fg:w="7"/><text x="78.5421%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="78.7709%" y="613" width="0.0798%" height="15" fill="rgb(233,50,15)" fg:x="987" fg:w="1"/><text x="79.0209%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="78.7709%" y="597" width="0.0798%" height="15" fill="rgb(217,181,29)" fg:x="987" fg:w="1"/><text x="79.0209%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.7709%" y="581" width="0.0798%" height="15" fill="rgb(214,56,3)" fg:x="987" fg:w="1"/><text x="79.0209%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.7709%" y="565" width="0.0798%" height="15" fill="rgb(230,69,45)" fg:x="987" fg:w="1"/><text x="79.0209%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.7709%" y="549" width="0.0798%" height="15" fill="rgb(224,201,50)" fg:x="987" fg:w="1"/><text x="79.0209%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.7709%" y="533" width="0.0798%" height="15" fill="rgb(217,228,18)" fg:x="987" fg:w="1"/><text x="79.0209%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.8508%" y="549" width="0.0798%" height="15" fill="rgb(239,33,44)" fg:x="988" fg:w="1"/><text x="79.1008%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8508%" y="533" width="0.0798%" height="15" fill="rgb(248,210,23)" fg:x="988" fg:w="1"/><text x="79.1008%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.9306%" y="533" width="0.0798%" height="15" fill="rgb(253,135,8)" fg:x="989" fg:w="1"/><text x="79.1806%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0902%" y="501" width="0.0798%" height="15" fill="rgb(217,98,21)" fg:x="991" fg:w="1"/><text x="79.3402%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.0902%" y="485" width="0.0798%" height="15" fill="rgb(253,130,21)" fg:x="991" fg:w="1"/><text x="79.3402%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.0902%" y="469" width="0.0798%" height="15" fill="rgb(207,81,54)" fg:x="991" fg:w="1"/><text x="79.3402%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.0902%" y="453" width="0.0798%" height="15" fill="rgb(232,48,33)" fg:x="991" fg:w="1"/><text x="79.3402%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.0902%" y="437" width="0.0798%" height="15" fill="rgb(211,9,35)" fg:x="991" fg:w="1"/><text x="79.3402%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="79.0902%" y="517" width="0.1596%" height="15" fill="rgb(205,152,21)" fg:x="991" fg:w="2"/><text x="79.3402%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1700%" y="501" width="0.0798%" height="15" fill="rgb(249,21,27)" fg:x="992" fg:w="1"/><text x="79.4200%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (7 samples, 0.56%)</title><rect x="78.8508%" y="565" width="0.5587%" height="15" fill="rgb(252,29,24)" fg:x="988" fg:w="7"/><text x="79.1008%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="78.9306%" y="549" width="0.4789%" height="15" fill="rgb(230,130,50)" fg:x="989" fg:w="6"/><text x="79.1806%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="79.0104%" y="533" width="0.3990%" height="15" fill="rgb(239,144,14)" fg:x="990" fg:w="5"/><text x="79.2604%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.2498%" y="517" width="0.1596%" height="15" fill="rgb(227,111,50)" fg:x="993" fg:w="2"/><text x="79.4998%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.2498%" y="501" width="0.1596%" height="15" fill="rgb(254,84,20)" fg:x="993" fg:w="2"/><text x="79.4998%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.3296%" y="485" width="0.0798%" height="15" fill="rgb(232,90,48)" fg:x="994" fg:w="1"/><text x="79.5796%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.3296%" y="469" width="0.0798%" height="15" fill="rgb(253,63,47)" fg:x="994" fg:w="1"/><text x="79.5796%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.4892%" y="533" width="0.0798%" height="15" fill="rgb(251,146,35)" fg:x="996" fg:w="1"/><text x="79.7392%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.4094%" y="565" width="0.2394%" height="15" fill="rgb(229,192,35)" fg:x="995" fg:w="3"/><text x="79.6594%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="79.4094%" y="549" width="0.2394%" height="15" fill="rgb(225,68,9)" fg:x="995" fg:w="3"/><text x="79.6594%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.5690%" y="533" width="0.0798%" height="15" fill="rgb(214,97,34)" fg:x="997" fg:w="1"/><text x="79.8190%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5690%" y="517" width="0.0798%" height="15" fill="rgb(253,31,26)" fg:x="997" fg:w="1"/><text x="79.8190%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="79.6488%" y="549" width="0.0798%" height="15" fill="rgb(225,151,47)" fg:x="998" fg:w="1"/><text x="79.8988%" y="559.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="79.6488%" y="533" width="0.0798%" height="15" fill="rgb(206,185,9)" fg:x="998" fg:w="1"/><text x="79.8988%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.6488%" y="517" width="0.0798%" height="15" fill="rgb(249,65,17)" fg:x="998" fg:w="1"/><text x="79.8988%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.6488%" y="501" width="0.0798%" height="15" fill="rgb(220,110,10)" fg:x="998" fg:w="1"/><text x="79.8988%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6488%" y="485" width="0.0798%" height="15" fill="rgb(222,198,49)" fg:x="998" fg:w="1"/><text x="79.8988%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.8085%" y="517" width="0.0798%" height="15" fill="rgb(239,81,13)" fg:x="1000" fg:w="1"/><text x="80.0585%" y="527.50"></text></g><g><title>engine::session::Session::flush (15 samples, 1.20%)</title><rect x="78.8508%" y="645" width="1.1971%" height="15" fill="rgb(216,128,11)" fg:x="988" fg:w="15"/><text x="79.1008%" y="655.50"></text></g><g><title>engine::session::state::State::close (15 samples, 1.20%)</title><rect x="78.8508%" y="629" width="1.1971%" height="15" fill="rgb(247,156,8)" fg:x="988" fg:w="15"/><text x="79.1008%" y="639.50"></text></g><g><title>engine::session::state::State::flush_entities (15 samples, 1.20%)</title><rect x="78.8508%" y="613" width="1.1971%" height="15" fill="rgb(219,173,1)" fg:x="988" fg:w="15"/><text x="79.1008%" y="623.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (15 samples, 1.20%)</title><rect x="78.8508%" y="597" width="1.1971%" height="15" fill="rgb(227,42,24)" fg:x="988" fg:w="15"/><text x="79.1008%" y="607.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (15 samples, 1.20%)</title><rect x="78.8508%" y="581" width="1.1971%" height="15" fill="rgb(253,219,50)" fg:x="988" fg:w="15"/><text x="79.1008%" y="591.50"></text></g><g><title>kernel::model::any_entity_changes (5 samples, 0.40%)</title><rect x="79.6488%" y="565" width="0.3990%" height="15" fill="rgb(215,191,54)" fg:x="998" fg:w="5"/><text x="79.8988%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="79.7287%" y="549" width="0.3192%" height="15" fill="rgb(238,83,12)" fg:x="999" fg:w="4"/><text x="79.9787%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="79.8085%" y="533" width="0.2394%" height="15" fill="rgb(205,124,9)" fg:x="1000" fg:w="3"/><text x="80.0585%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="79.8883%" y="517" width="0.1596%" height="15" fill="rgb(253,174,7)" fg:x="1001" fg:w="2"/><text x="80.1383%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="79.8883%" y="501" width="0.1596%" height="15" fill="rgb(206,134,49)" fg:x="1001" fg:w="2"/><text x="80.1383%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="79.8883%" y="485" width="0.1596%" height="15" fill="rgb(221,89,20)" fg:x="1001" fg:w="2"/><text x="80.1383%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="79.8883%" y="469" width="0.1596%" height="15" fill="rgb(240,205,13)" fg:x="1001" fg:w="2"/><text x="80.1383%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.9681%" y="453" width="0.0798%" height="15" fill="rgb(237,174,32)" fg:x="1002" fg:w="1"/><text x="80.2181%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9681%" y="437" width="0.0798%" height="15" fill="rgb(226,12,15)" fg:x="1002" fg:w="1"/><text x="80.2181%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.9681%" y="421" width="0.0798%" height="15" fill="rgb(245,160,52)" fg:x="1002" fg:w="1"/><text x="80.2181%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9681%" y="405" width="0.0798%" height="15" fill="rgb(253,80,21)" fg:x="1002" fg:w="1"/><text x="80.2181%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.9681%" y="389" width="0.0798%" height="15" fill="rgb(231,225,22)" fg:x="1002" fg:w="1"/><text x="80.2181%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9681%" y="373" width="0.0798%" height="15" fill="rgb(253,185,12)" fg:x="1002" fg:w="1"/><text x="80.2181%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.9681%" y="357" width="0.0798%" height="15" fill="rgb(234,197,21)" fg:x="1002" fg:w="1"/><text x="80.2181%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="80.0479%" y="629" width="0.6385%" height="15" fill="rgb(210,47,30)" fg:x="1003" fg:w="8"/><text x="80.2979%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="80.0479%" y="613" width="0.6385%" height="15" fill="rgb(246,139,27)" fg:x="1003" fg:w="8"/><text x="80.2979%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (8 samples, 0.64%)</title><rect x="80.0479%" y="597" width="0.6385%" height="15" fill="rgb(226,130,16)" fg:x="1003" fg:w="8"/><text x="80.2979%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="80.0479%" y="581" width="0.6385%" height="15" fill="rgb(237,208,20)" fg:x="1003" fg:w="8"/><text x="80.2979%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.64%)</title><rect x="80.0479%" y="565" width="0.6385%" height="15" fill="rgb(245,186,28)" fg:x="1003" fg:w="8"/><text x="80.2979%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.64%)</title><rect x="80.0479%" y="549" width="0.6385%" height="15" fill="rgb(238,105,39)" fg:x="1003" fg:w="8"/><text x="80.2979%" y="559.50"></text></g><g><title>__libc_malloc (8 samples, 0.64%)</title><rect x="80.0479%" y="533" width="0.6385%" height="15" fill="rgb(253,228,11)" fg:x="1003" fg:w="8"/><text x="80.2979%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.6864%" y="629" width="0.0798%" height="15" fill="rgb(224,136,38)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.7662%" y="533" width="0.0798%" height="15" fill="rgb(211,3,25)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.7662%" y="517" width="0.0798%" height="15" fill="rgb(238,66,34)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.7662%" y="501" width="0.0798%" height="15" fill="rgb(223,188,11)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.7662%" y="485" width="0.0798%" height="15" fill="rgb(221,10,35)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.7662%" y="469" width="0.0798%" height="15" fill="rgb(223,18,44)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.7662%" y="581" width="0.1596%" height="15" fill="rgb(220,97,41)" fg:x="1012" fg:w="2"/><text x="81.0162%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.7662%" y="565" width="0.1596%" height="15" fill="rgb(206,95,45)" fg:x="1012" fg:w="2"/><text x="81.0162%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.7662%" y="549" width="0.1596%" height="15" fill="rgb(209,96,13)" fg:x="1012" fg:w="2"/><text x="81.0162%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.8460%" y="533" width="0.0798%" height="15" fill="rgb(237,39,34)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8460%" y="517" width="0.0798%" height="15" fill="rgb(213,49,47)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="80.7662%" y="613" width="0.2394%" height="15" fill="rgb(205,107,27)" fg:x="1012" fg:w="3"/><text x="81.0162%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="80.7662%" y="597" width="0.2394%" height="15" fill="rgb(212,142,9)" fg:x="1012" fg:w="3"/><text x="81.0162%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.9258%" y="581" width="0.0798%" height="15" fill="rgb(226,182,0)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.9258%" y="565" width="0.0798%" height="15" fill="rgb(231,3,53)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.9258%" y="549" width="0.0798%" height="15" fill="rgb(246,111,28)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9258%" y="533" width="0.0798%" height="15" fill="rgb(254,183,7)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="81.0056%" y="597" width="0.0798%" height="15" fill="rgb(247,177,28)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="81.0056%" y="613" width="0.2394%" height="15" fill="rgb(244,43,1)" fg:x="1015" fg:w="3"/><text x="81.2556%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="81.0854%" y="597" width="0.1596%" height="15" fill="rgb(207,2,35)" fg:x="1016" fg:w="2"/><text x="81.3354%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="81.0854%" y="581" width="0.1596%" height="15" fill="rgb(213,83,22)" fg:x="1016" fg:w="2"/><text x="81.3354%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="81.0854%" y="565" width="0.1596%" height="15" fill="rgb(246,212,13)" fg:x="1016" fg:w="2"/><text x="81.3354%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="81.0854%" y="549" width="0.1596%" height="15" fill="rgb(213,127,46)" fg:x="1016" fg:w="2"/><text x="81.3354%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.1652%" y="533" width="0.0798%" height="15" fill="rgb(219,215,39)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (16 samples, 1.28%)</title><rect x="80.0479%" y="645" width="1.2769%" height="15" fill="rgb(227,99,17)" fg:x="1003" fg:w="16"/><text x="80.2979%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="80.7662%" y="629" width="0.5587%" height="15" fill="rgb(208,155,18)" fg:x="1012" fg:w="7"/><text x="81.0162%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="81.2450%" y="613" width="0.0798%" height="15" fill="rgb(223,204,38)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="81.2450%" y="597" width="0.0798%" height="15" fill="rgb(212,114,21)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="81.2450%" y="581" width="0.0798%" height="15" fill="rgb(250,74,13)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.2450%" y="565" width="0.0798%" height="15" fill="rgb(234,7,1)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.2450%" y="549" width="0.0798%" height="15" fill="rgb(207,138,31)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.2450%" y="533" width="0.0798%" height="15" fill="rgb(215,186,42)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2450%" y="517" width="0.0798%" height="15" fill="rgb(229,205,49)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2450%" y="501" width="0.0798%" height="15" fill="rgb(216,156,32)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2450%" y="485" width="0.0798%" height="15" fill="rgb(238,7,21)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2450%" y="469" width="0.0798%" height="15" fill="rgb(249,190,22)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.2450%" y="453" width="0.0798%" height="15" fill="rgb(253,51,31)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2450%" y="437" width="0.0798%" height="15" fill="rgb(237,90,54)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2450%" y="421" width="0.0798%" height="15" fill="rgb(250,214,33)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2450%" y="405" width="0.0798%" height="15" fill="rgb(237,10,49)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2450%" y="389" width="0.0798%" height="15" fill="rgb(241,56,36)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2450%" y="373" width="0.0798%" height="15" fill="rgb(227,164,12)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="81.2450%" y="357" width="0.0798%" height="15" fill="rgb(249,149,35)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="81.2450%" y="341" width="0.0798%" height="15" fill="rgb(238,227,50)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.3248%" y="613" width="0.0798%" height="15" fill="rgb(235,102,45)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.3248%" y="597" width="0.0798%" height="15" fill="rgb(211,10,38)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.3248%" y="581" width="0.0798%" height="15" fill="rgb(219,77,48)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3248%" y="565" width="0.0798%" height="15" fill="rgb(246,6,15)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3248%" y="549" width="0.0798%" height="15" fill="rgb(207,220,2)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3248%" y="533" width="0.0798%" height="15" fill="rgb(242,48,14)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="81.4046%" y="613" width="0.0798%" height="15" fill="rgb(218,19,27)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="81.4046%" y="597" width="0.0798%" height="15" fill="rgb(228,0,35)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4046%" y="581" width="0.0798%" height="15" fill="rgb(244,142,54)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="591.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="81.4844%" y="613" width="0.0798%" height="15" fill="rgb(243,217,40)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="81.4844%" y="597" width="0.0798%" height="15" fill="rgb(207,114,16)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.4844%" y="581" width="0.0798%" height="15" fill="rgb(224,33,25)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4844%" y="565" width="0.0798%" height="15" fill="rgb(230,93,54)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4844%" y="549" width="0.0798%" height="15" fill="rgb(224,56,24)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4844%" y="533" width="0.0798%" height="15" fill="rgb(235,189,50)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4844%" y="517" width="0.0798%" height="15" fill="rgb(242,173,8)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="527.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="81.4844%" y="501" width="0.0798%" height="15" fill="rgb(209,206,10)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="81.3248%" y="645" width="0.3192%" height="15" fill="rgb(213,182,44)" fg:x="1019" fg:w="4"/><text x="81.5748%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="81.3248%" y="629" width="0.3192%" height="15" fill="rgb(243,51,15)" fg:x="1019" fg:w="4"/><text x="81.5748%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.5642%" y="613" width="0.0798%" height="15" fill="rgb(241,13,14)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.5642%" y="597" width="0.0798%" height="15" fill="rgb(239,147,24)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.5642%" y="581" width="0.0798%" height="15" fill="rgb(223,129,16)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.5642%" y="565" width="0.0798%" height="15" fill="rgb(209,169,13)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.5642%" y="549" width="0.0798%" height="15" fill="rgb(235,159,41)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5642%" y="533" width="0.0798%" height="15" fill="rgb(223,219,48)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5642%" y="517" width="0.0798%" height="15" fill="rgb(236,80,13)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5642%" y="501" width="0.0798%" height="15" fill="rgb(213,5,6)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5642%" y="485" width="0.0798%" height="15" fill="rgb(205,59,21)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.5642%" y="469" width="0.0798%" height="15" fill="rgb(247,137,35)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.5642%" y="453" width="0.0798%" height="15" fill="rgb(242,208,28)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.5642%" y="437" width="0.0798%" height="15" fill="rgb(245,62,25)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.5642%" y="421" width="0.0798%" height="15" fill="rgb(233,99,54)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.5642%" y="405" width="0.0798%" height="15" fill="rgb(213,10,37)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.5642%" y="389" width="0.0798%" height="15" fill="rgb(235,143,30)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="81.5642%" y="373" width="0.0798%" height="15" fill="rgb(250,146,33)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="81.5642%" y="357" width="0.0798%" height="15" fill="rgb(226,198,42)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.6441%" y="565" width="0.0798%" height="15" fill="rgb(222,55,6)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.6441%" y="549" width="0.0798%" height="15" fill="rgb(213,224,31)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6441%" y="533" width="0.0798%" height="15" fill="rgb(226,103,35)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="81.6441%" y="629" width="0.1596%" height="15" fill="rgb(205,66,45)" fg:x="1023" fg:w="2"/><text x="81.8941%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.6441%" y="613" width="0.1596%" height="15" fill="rgb(226,51,42)" fg:x="1023" fg:w="2"/><text x="81.8941%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="81.6441%" y="597" width="0.1596%" height="15" fill="rgb(206,69,1)" fg:x="1023" fg:w="2"/><text x="81.8941%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.6441%" y="581" width="0.1596%" height="15" fill="rgb(213,228,47)" fg:x="1023" fg:w="2"/><text x="81.8941%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="81.7239%" y="565" width="0.0798%" height="15" fill="rgb(224,204,18)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.7239%" y="549" width="0.0798%" height="15" fill="rgb(253,187,47)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.7239%" y="533" width="0.0798%" height="15" fill="rgb(232,61,2)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.7239%" y="517" width="0.0798%" height="15" fill="rgb(213,132,35)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.7239%" y="501" width="0.0798%" height="15" fill="rgb(247,33,21)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.7239%" y="485" width="0.0798%" height="15" fill="rgb(233,71,46)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8037%" y="629" width="0.0798%" height="15" fill="rgb(222,173,43)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8037%" y="613" width="0.0798%" height="15" fill="rgb(249,218,47)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8037%" y="597" width="0.0798%" height="15" fill="rgb(254,185,48)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.8037%" y="581" width="0.0798%" height="15" fill="rgb(252,165,50)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.8037%" y="565" width="0.0798%" height="15" fill="rgb(206,219,6)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.8037%" y="549" width="0.0798%" height="15" fill="rgb(212,212,45)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="81.8037%" y="533" width="0.0798%" height="15" fill="rgb(221,31,9)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.8037%" y="517" width="0.0798%" height="15" fill="rgb(234,198,39)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="81.8835%" y="581" width="0.0798%" height="15" fill="rgb(252,145,46)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="81.8835%" y="565" width="0.0798%" height="15" fill="rgb(237,149,0)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="81.8835%" y="549" width="0.0798%" height="15" fill="rgb(229,65,5)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="81.8835%" y="533" width="0.0798%" height="15" fill="rgb(235,60,36)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8835%" y="517" width="0.0798%" height="15" fill="rgb(222,47,18)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8835%" y="501" width="0.0798%" height="15" fill="rgb(235,114,22)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.8835%" y="485" width="0.0798%" height="15" fill="rgb(209,167,11)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.8835%" y="469" width="0.0798%" height="15" fill="rgb(251,73,18)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.8835%" y="453" width="0.0798%" height="15" fill="rgb(217,60,17)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.8835%" y="437" width="0.0798%" height="15" fill="rgb(224,36,37)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.8835%" y="421" width="0.0798%" height="15" fill="rgb(211,21,32)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.8835%" y="405" width="0.0798%" height="15" fill="rgb(231,55,48)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.8835%" y="389" width="0.0798%" height="15" fill="rgb(227,42,18)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.8835%" y="373" width="0.0798%" height="15" fill="rgb(217,2,27)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.8835%" y="357" width="0.0798%" height="15" fill="rgb(251,138,23)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8835%" y="341" width="0.0798%" height="15" fill="rgb(226,184,11)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="81.9633%" y="549" width="0.0798%" height="15" fill="rgb(242,142,12)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.9633%" y="533" width="0.0798%" height="15" fill="rgb(234,187,18)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="81.9633%" y="517" width="0.0798%" height="15" fill="rgb(237,44,42)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="81.9633%" y="501" width="0.0798%" height="15" fill="rgb(211,90,23)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.9633%" y="485" width="0.0798%" height="15" fill="rgb(207,81,18)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="81.9633%" y="469" width="0.0798%" height="15" fill="rgb(222,107,28)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.0431%" y="549" width="0.0798%" height="15" fill="rgb(237,83,52)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.0431%" y="533" width="0.0798%" height="15" fill="rgb(208,67,11)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.0431%" y="517" width="0.0798%" height="15" fill="rgb(249,157,49)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0431%" y="501" width="0.0798%" height="15" fill="rgb(243,200,1)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0431%" y="485" width="0.0798%" height="15" fill="rgb(225,162,37)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0431%" y="469" width="0.0798%" height="15" fill="rgb(242,92,13)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0431%" y="453" width="0.0798%" height="15" fill="rgb(220,43,36)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.0431%" y="437" width="0.0798%" height="15" fill="rgb(213,165,48)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0431%" y="421" width="0.0798%" height="15" fill="rgb(227,200,9)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0431%" y="405" width="0.0798%" height="15" fill="rgb(221,222,28)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0431%" y="389" width="0.0798%" height="15" fill="rgb(223,142,26)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="399.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="82.1229%" y="549" width="0.0798%" height="15" fill="rgb(243,46,9)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="82.1229%" y="533" width="0.0798%" height="15" fill="rgb(250,56,11)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.1229%" y="517" width="0.0798%" height="15" fill="rgb(229,113,5)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.1229%" y="501" width="0.0798%" height="15" fill="rgb(244,108,28)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="81.9633%" y="565" width="0.3192%" height="15" fill="rgb(242,119,50)" fg:x="1027" fg:w="4"/><text x="82.2133%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="82.2027%" y="549" width="0.0798%" height="15" fill="rgb(224,164,23)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.2027%" y="533" width="0.0798%" height="15" fill="rgb(214,227,44)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.2027%" y="517" width="0.0798%" height="15" fill="rgb(238,202,4)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.2027%" y="501" width="0.0798%" height="15" fill="rgb(213,190,30)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.2027%" y="485" width="0.0798%" height="15" fill="rgb(239,15,2)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.2027%" y="469" width="0.0798%" height="15" fill="rgb(249,229,4)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.2027%" y="453" width="0.0798%" height="15" fill="rgb(239,75,44)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.2027%" y="437" width="0.0798%" height="15" fill="rgb(251,206,23)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.2027%" y="421" width="0.0798%" height="15" fill="rgb(215,208,0)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.2027%" y="405" width="0.0798%" height="15" fill="rgb(230,75,50)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2027%" y="389" width="0.0798%" height="15" fill="rgb(246,180,39)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="81.8835%" y="629" width="0.5587%" height="15" fill="rgb(249,175,24)" fg:x="1026" fg:w="7"/><text x="82.1335%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="81.8835%" y="613" width="0.5587%" height="15" fill="rgb(247,176,22)" fg:x="1026" fg:w="7"/><text x="82.1335%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="81.8835%" y="597" width="0.5587%" height="15" fill="rgb(241,100,24)" fg:x="1026" fg:w="7"/><text x="82.1335%" y="607.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="81.9633%" y="581" width="0.4789%" height="15" fill="rgb(233,4,35)" fg:x="1027" fg:w="6"/><text x="82.2133%" y="591.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="82.2825%" y="565" width="0.1596%" height="15" fill="rgb(211,164,46)" fg:x="1031" fg:w="2"/><text x="82.5325%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="82.2825%" y="549" width="0.1596%" height="15" fill="rgb(242,99,53)" fg:x="1031" fg:w="2"/><text x="82.5325%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="82.2825%" y="533" width="0.1596%" height="15" fill="rgb(243,45,33)" fg:x="1031" fg:w="2"/><text x="82.5325%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="82.2825%" y="517" width="0.1596%" height="15" fill="rgb(217,55,21)" fg:x="1031" fg:w="2"/><text x="82.5325%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.2825%" y="501" width="0.1596%" height="15" fill="rgb(245,145,46)" fg:x="1031" fg:w="2"/><text x="82.5325%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.2825%" y="485" width="0.1596%" height="15" fill="rgb(215,112,45)" fg:x="1031" fg:w="2"/><text x="82.5325%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.2825%" y="469" width="0.1596%" height="15" fill="rgb(228,104,16)" fg:x="1031" fg:w="2"/><text x="82.5325%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3623%" y="453" width="0.0798%" height="15" fill="rgb(239,186,38)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3623%" y="437" width="0.0798%" height="15" fill="rgb(228,38,35)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3623%" y="421" width="0.0798%" height="15" fill="rgb(251,42,40)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3623%" y="405" width="0.0798%" height="15" fill="rgb(210,51,19)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3623%" y="389" width="0.0798%" height="15" fill="rgb(236,94,42)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3623%" y="373" width="0.0798%" height="15" fill="rgb(239,167,16)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3623%" y="357" width="0.0798%" height="15" fill="rgb(252,175,31)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3623%" y="341" width="0.0798%" height="15" fill="rgb(206,166,30)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3623%" y="325" width="0.0798%" height="15" fill="rgb(206,209,37)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3623%" y="309" width="0.0798%" height="15" fill="rgb(226,91,4)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3623%" y="293" width="0.0798%" height="15" fill="rgb(222,167,0)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3623%" y="277" width="0.0798%" height="15" fill="rgb(211,70,14)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3623%" y="261" width="0.0798%" height="15" fill="rgb(214,84,42)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3623%" y="245" width="0.0798%" height="15" fill="rgb(235,157,37)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3623%" y="229" width="0.0798%" height="15" fill="rgb(225,13,6)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3623%" y="213" width="0.0798%" height="15" fill="rgb(205,202,1)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="223.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.5219%" y="517" width="0.0798%" height="15" fill="rgb(232,195,26)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.5219%" y="501" width="0.0798%" height="15" fill="rgb(208,102,26)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.5219%" y="485" width="0.0798%" height="15" fill="rgb(215,41,39)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.5219%" y="469" width="0.0798%" height="15" fill="rgb(247,139,11)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.5219%" y="453" width="0.0798%" height="15" fill="rgb(243,99,6)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.6018%" y="501" width="0.0798%" height="15" fill="rgb(230,168,48)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.6816%" y="437" width="0.0798%" height="15" fill="rgb(238,227,13)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.6816%" y="421" width="0.0798%" height="15" fill="rgb(209,109,13)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.6816%" y="405" width="0.0798%" height="15" fill="rgb(228,195,1)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.6816%" y="389" width="0.0798%" height="15" fill="rgb(230,218,0)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="82.6816%" y="453" width="0.2394%" height="15" fill="rgb(206,1,45)" fg:x="1036" fg:w="3"/><text x="82.9316%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.7614%" y="437" width="0.1596%" height="15" fill="rgb(209,124,26)" fg:x="1037" fg:w="2"/><text x="83.0114%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.7614%" y="421" width="0.1596%" height="15" fill="rgb(220,59,8)" fg:x="1037" fg:w="2"/><text x="83.0114%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.8412%" y="405" width="0.0798%" height="15" fill="rgb(251,41,37)" fg:x="1038" fg:w="1"/><text x="83.0912%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.48%)</title><rect x="82.5219%" y="533" width="0.4789%" height="15" fill="rgb(239,152,21)" fg:x="1034" fg:w="6"/><text x="82.7719%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="82.6018%" y="517" width="0.3990%" height="15" fill="rgb(226,32,1)" fg:x="1035" fg:w="5"/><text x="82.8518%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.6816%" y="501" width="0.3192%" height="15" fill="rgb(230,154,36)" fg:x="1036" fg:w="4"/><text x="82.9316%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.6816%" y="485" width="0.3192%" height="15" fill="rgb(208,228,43)" fg:x="1036" fg:w="4"/><text x="82.9316%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.6816%" y="469" width="0.3192%" height="15" fill="rgb(214,203,3)" fg:x="1036" fg:w="4"/><text x="82.9316%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.9210%" y="453" width="0.0798%" height="15" fill="rgb(207,149,29)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.9210%" y="437" width="0.0798%" height="15" fill="rgb(250,105,7)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9210%" y="421" width="0.0798%" height="15" fill="rgb(232,222,16)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0806%" y="469" width="0.0798%" height="15" fill="rgb(209,32,24)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="83.0008%" y="533" width="0.3192%" height="15" fill="rgb(225,13,6)" fg:x="1040" fg:w="4"/><text x="83.2508%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="83.0008%" y="517" width="0.3192%" height="15" fill="rgb(245,226,26)" fg:x="1040" fg:w="4"/><text x="83.2508%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.0806%" y="501" width="0.2394%" height="15" fill="rgb(229,178,27)" fg:x="1041" fg:w="3"/><text x="83.3306%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.0806%" y="485" width="0.2394%" height="15" fill="rgb(205,227,28)" fg:x="1041" fg:w="3"/><text x="83.3306%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="83.1604%" y="469" width="0.1596%" height="15" fill="rgb(210,191,45)" fg:x="1042" fg:w="2"/><text x="83.4104%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.2402%" y="453" width="0.0798%" height="15" fill="rgb(206,124,16)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="83.3998%" y="485" width="0.0798%" height="15" fill="rgb(210,162,0)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.3998%" y="469" width="0.0798%" height="15" fill="rgb(211,54,38)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3998%" y="453" width="0.0798%" height="15" fill="rgb(248,192,3)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.4796%" y="437" width="0.0798%" height="15" fill="rgb(233,187,18)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4796%" y="421" width="0.0798%" height="15" fill="rgb(237,208,14)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.4796%" y="405" width="0.0798%" height="15" fill="rgb(212,77,1)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4796%" y="389" width="0.0798%" height="15" fill="rgb(210,163,22)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4796%" y="373" width="0.0798%" height="15" fill="rgb(250,58,28)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4796%" y="357" width="0.0798%" height="15" fill="rgb(254,28,41)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="83.6393%" y="421" width="0.0798%" height="15" fill="rgb(237,162,36)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="83.4796%" y="469" width="0.3192%" height="15" fill="rgb(232,56,6)" fg:x="1046" fg:w="4"/><text x="83.7296%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="83.4796%" y="453" width="0.3192%" height="15" fill="rgb(216,127,42)" fg:x="1046" fg:w="4"/><text x="83.7296%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="83.5595%" y="437" width="0.2394%" height="15" fill="rgb(241,69,15)" fg:x="1047" fg:w="3"/><text x="83.8095%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.7191%" y="421" width="0.0798%" height="15" fill="rgb(227,180,19)" fg:x="1049" fg:w="1"/><text x="83.9691%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7191%" y="405" width="0.0798%" height="15" fill="rgb(231,188,29)" fg:x="1049" fg:w="1"/><text x="83.9691%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7191%" y="389" width="0.0798%" height="15" fill="rgb(224,176,27)" fg:x="1049" fg:w="1"/><text x="83.9691%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7191%" y="373" width="0.0798%" height="15" fill="rgb(249,214,19)" fg:x="1049" fg:w="1"/><text x="83.9691%" y="383.50"></text></g><g><title>engine::session::Session::flush (18 samples, 1.44%)</title><rect x="82.4421%" y="629" width="1.4366%" height="15" fill="rgb(240,0,4)" fg:x="1033" fg:w="18"/><text x="82.6921%" y="639.50"></text></g><g><title>engine::session::Session::save_changes (17 samples, 1.36%)</title><rect x="82.5219%" y="613" width="1.3567%" height="15" fill="rgb(233,28,41)" fg:x="1034" fg:w="17"/><text x="82.7719%" y="623.50"></text></g><g><title>engine::session::state::State::close (17 samples, 1.36%)</title><rect x="82.5219%" y="597" width="1.3567%" height="15" fill="rgb(220,90,51)" fg:x="1034" fg:w="17"/><text x="82.7719%" y="607.50"></text></g><g><title>engine::session::state::State::flush_entities (17 samples, 1.36%)</title><rect x="82.5219%" y="581" width="1.3567%" height="15" fill="rgb(250,52,22)" fg:x="1034" fg:w="17"/><text x="82.7719%" y="591.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (17 samples, 1.36%)</title><rect x="82.5219%" y="565" width="1.3567%" height="15" fill="rgb(231,152,36)" fg:x="1034" fg:w="17"/><text x="82.7719%" y="575.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (17 samples, 1.36%)</title><rect x="82.5219%" y="549" width="1.3567%" height="15" fill="rgb(250,218,4)" fg:x="1034" fg:w="17"/><text x="82.7719%" y="559.50"></text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="83.3200%" y="533" width="0.5587%" height="15" fill="rgb(210,38,21)" fg:x="1044" fg:w="7"/><text x="83.5700%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="83.3998%" y="517" width="0.4789%" height="15" fill="rgb(230,75,13)" fg:x="1045" fg:w="6"/><text x="83.6498%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="83.3998%" y="501" width="0.4789%" height="15" fill="rgb(250,68,53)" fg:x="1045" fg:w="6"/><text x="83.6498%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="83.4796%" y="485" width="0.3990%" height="15" fill="rgb(250,210,16)" fg:x="1046" fg:w="5"/><text x="83.7296%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7989%" y="469" width="0.0798%" height="15" fill="rgb(240,132,5)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7989%" y="453" width="0.0798%" height="15" fill="rgb(222,148,48)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.9585%" y="597" width="0.1596%" height="15" fill="rgb(247,181,24)" fg:x="1052" fg:w="2"/><text x="84.2085%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.0383%" y="581" width="0.0798%" height="15" fill="rgb(239,5,31)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.0383%" y="565" width="0.0798%" height="15" fill="rgb(241,152,38)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="83.8787%" y="613" width="0.3192%" height="15" fill="rgb(246,200,37)" fg:x="1051" fg:w="4"/><text x="84.1287%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="84.1181%" y="597" width="0.0798%" height="15" fill="rgb(243,210,26)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="84.1181%" y="581" width="0.0798%" height="15" fill="rgb(222,22,22)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.1181%" y="565" width="0.0798%" height="15" fill="rgb(208,129,28)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.1181%" y="549" width="0.0798%" height="15" fill="rgb(254,169,28)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.1181%" y="533" width="0.0798%" height="15" fill="rgb(225,45,17)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1181%" y="517" width="0.0798%" height="15" fill="rgb(232,199,2)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1181%" y="501" width="0.0798%" height="15" fill="rgb(235,33,40)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1181%" y="485" width="0.0798%" height="15" fill="rgb(237,89,50)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1181%" y="469" width="0.0798%" height="15" fill="rgb(238,126,5)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.1181%" y="453" width="0.0798%" height="15" fill="rgb(247,214,42)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1181%" y="437" width="0.0798%" height="15" fill="rgb(238,60,45)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1181%" y="421" width="0.0798%" height="15" fill="rgb(225,69,44)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1181%" y="405" width="0.0798%" height="15" fill="rgb(241,13,44)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1979%" y="517" width="0.0798%" height="15" fill="rgb(227,121,22)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1979%" y="501" width="0.0798%" height="15" fill="rgb(231,160,23)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1979%" y="485" width="0.0798%" height="15" fill="rgb(250,179,43)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1979%" y="469" width="0.0798%" height="15" fill="rgb(233,54,46)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="84.1979%" y="597" width="0.1596%" height="15" fill="rgb(247,120,42)" fg:x="1055" fg:w="2"/><text x="84.4479%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="84.1979%" y="581" width="0.1596%" height="15" fill="rgb(221,219,12)" fg:x="1055" fg:w="2"/><text x="84.4479%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.1979%" y="565" width="0.1596%" height="15" fill="rgb(211,126,8)" fg:x="1055" fg:w="2"/><text x="84.4479%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.1979%" y="549" width="0.1596%" height="15" fill="rgb(218,154,33)" fg:x="1055" fg:w="2"/><text x="84.4479%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.1979%" y="533" width="0.1596%" height="15" fill="rgb(212,199,16)" fg:x="1055" fg:w="2"/><text x="84.4479%" y="543.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="84.2777%" y="517" width="0.0798%" height="15" fill="rgb(236,215,46)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.3575%" y="597" width="0.0798%" height="15" fill="rgb(232,32,22)" fg:x="1057" fg:w="1"/><text x="84.6075%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3575%" y="581" width="0.0798%" height="15" fill="rgb(234,79,15)" fg:x="1057" fg:w="1"/><text x="84.6075%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3575%" y="565" width="0.0798%" height="15" fill="rgb(235,187,47)" fg:x="1057" fg:w="1"/><text x="84.6075%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.3575%" y="549" width="0.0798%" height="15" fill="rgb(244,69,37)" fg:x="1057" fg:w="1"/><text x="84.6075%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4374%" y="421" width="0.0798%" height="15" fill="rgb(249,140,25)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4374%" y="405" width="0.0798%" height="15" fill="rgb(213,69,8)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.4374%" y="389" width="0.0798%" height="15" fill="rgb(220,136,2)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.4374%" y="373" width="0.0798%" height="15" fill="rgb(237,50,36)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.4374%" y="357" width="0.0798%" height="15" fill="rgb(226,18,11)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4374%" y="341" width="0.0798%" height="15" fill="rgb(243,156,2)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4374%" y="325" width="0.0798%" height="15" fill="rgb(218,8,34)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.4374%" y="309" width="0.0798%" height="15" fill="rgb(250,94,35)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.4374%" y="293" width="0.0798%" height="15" fill="rgb(229,127,21)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.4374%" y="277" width="0.0798%" height="15" fill="rgb(234,49,5)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.4374%" y="261" width="0.0798%" height="15" fill="rgb(248,12,16)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4374%" y="245" width="0.0798%" height="15" fill="rgb(208,220,31)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="255.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.72%)</title><rect x="83.8787%" y="629" width="0.7183%" height="15" fill="rgb(243,184,0)" fg:x="1051" fg:w="9"/><text x="84.1287%" y="639.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="84.1979%" y="613" width="0.3990%" height="15" fill="rgb(217,38,21)" fg:x="1055" fg:w="5"/><text x="84.4479%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="84.4374%" y="597" width="0.1596%" height="15" fill="rgb(239,120,45)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="84.4374%" y="581" width="0.1596%" height="15" fill="rgb(235,33,2)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="84.4374%" y="565" width="0.1596%" height="15" fill="rgb(249,161,5)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.4374%" y="549" width="0.1596%" height="15" fill="rgb(250,165,48)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.4374%" y="533" width="0.1596%" height="15" fill="rgb(221,23,45)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.4374%" y="517" width="0.1596%" height="15" fill="rgb(217,108,46)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4374%" y="501" width="0.1596%" height="15" fill="rgb(254,26,35)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4374%" y="485" width="0.1596%" height="15" fill="rgb(218,223,28)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4374%" y="469" width="0.1596%" height="15" fill="rgb(242,27,47)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4374%" y="453" width="0.1596%" height="15" fill="rgb(218,39,35)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4374%" y="437" width="0.1596%" height="15" fill="rgb(232,127,16)" fg:x="1058" fg:w="2"/><text x="84.6874%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.5172%" y="421" width="0.0798%" height="15" fill="rgb(231,219,51)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="84.5970%" y="629" width="0.0798%" height="15" fill="rgb(217,220,46)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="84.5970%" y="613" width="0.0798%" height="15" fill="rgb(230,75,1)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="84.5970%" y="597" width="0.0798%" height="15" fill="rgb(218,2,8)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="84.5970%" y="581" width="0.0798%" height="15" fill="rgb(206,111,30)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="84.5970%" y="565" width="0.0798%" height="15" fill="rgb(209,135,6)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.5970%" y="549" width="0.0798%" height="15" fill="rgb(205,169,10)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.5970%" y="533" width="0.0798%" height="15" fill="rgb(212,204,38)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.5970%" y="517" width="0.0798%" height="15" fill="rgb(205,199,14)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="84.5970%" y="501" width="0.0798%" height="15" fill="rgb(212,4,6)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="84.6768%" y="629" width="0.0798%" height="15" fill="rgb(250,15,10)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="84.6768%" y="613" width="0.0798%" height="15" fill="rgb(212,49,51)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.6768%" y="597" width="0.0798%" height="15" fill="rgb(235,21,9)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.6768%" y="581" width="0.0798%" height="15" fill="rgb(251,31,32)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6768%" y="565" width="0.0798%" height="15" fill="rgb(246,23,9)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.6768%" y="549" width="0.0798%" height="15" fill="rgb(225,216,14)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6768%" y="533" width="0.0798%" height="15" fill="rgb(215,200,26)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.6768%" y="517" width="0.0798%" height="15" fill="rgb(237,130,47)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.6768%" y="501" width="0.0798%" height="15" fill="rgb(247,74,14)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6768%" y="485" width="0.0798%" height="15" fill="rgb(254,97,46)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.6768%" y="469" width="0.0798%" height="15" fill="rgb(234,191,1)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6768%" y="453" width="0.0798%" height="15" fill="rgb(215,165,14)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6768%" y="437" width="0.0798%" height="15" fill="rgb(230,182,6)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.6768%" y="421" width="0.0798%" height="15" fill="rgb(210,127,39)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="84.7566%" y="613" width="0.0798%" height="15" fill="rgb(223,212,51)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="84.7566%" y="597" width="0.0798%" height="15" fill="rgb(226,176,43)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="84.7566%" y="581" width="0.0798%" height="15" fill="rgb(222,155,4)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.7566%" y="565" width="0.0798%" height="15" fill="rgb(215,149,7)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.7566%" y="549" width="0.0798%" height="15" fill="rgb(252,199,23)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.7566%" y="533" width="0.0798%" height="15" fill="rgb(245,52,29)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7566%" y="517" width="0.0798%" height="15" fill="rgb(221,228,19)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7566%" y="501" width="0.0798%" height="15" fill="rgb(253,101,6)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7566%" y="485" width="0.0798%" height="15" fill="rgb(211,130,8)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7566%" y="469" width="0.0798%" height="15" fill="rgb(238,37,53)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7566%" y="453" width="0.0798%" height="15" fill="rgb(235,145,5)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7566%" y="437" width="0.0798%" height="15" fill="rgb(244,12,43)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="84.8364%" y="597" width="0.1596%" height="15" fill="rgb(246,195,24)" fg:x="1063" fg:w="2"/><text x="85.0864%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="84.8364%" y="581" width="0.1596%" height="15" fill="rgb(235,163,6)" fg:x="1063" fg:w="2"/><text x="85.0864%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.8364%" y="565" width="0.1596%" height="15" fill="rgb(236,218,17)" fg:x="1063" fg:w="2"/><text x="85.0864%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.8364%" y="549" width="0.1596%" height="15" fill="rgb(235,12,38)" fg:x="1063" fg:w="2"/><text x="85.0864%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.8364%" y="533" width="0.1596%" height="15" fill="rgb(225,195,33)" fg:x="1063" fg:w="2"/><text x="85.0864%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9162%" y="517" width="0.0798%" height="15" fill="rgb(238,54,35)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9162%" y="501" width="0.0798%" height="15" fill="rgb(238,33,7)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9162%" y="485" width="0.0798%" height="15" fill="rgb(245,5,14)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9162%" y="469" width="0.0798%" height="15" fill="rgb(251,95,31)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.9162%" y="453" width="0.0798%" height="15" fill="rgb(222,15,46)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9162%" y="437" width="0.0798%" height="15" fill="rgb(226,182,24)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.9162%" y="421" width="0.0798%" height="15" fill="rgb(229,105,41)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9162%" y="405" width="0.0798%" height="15" fill="rgb(216,99,53)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.9960%" y="597" width="0.0798%" height="15" fill="rgb(253,26,20)" fg:x="1065" fg:w="1"/><text x="85.2460%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (44 samples, 3.51%)</title><rect x="81.6441%" y="645" width="3.5116%" height="15" fill="rgb(249,155,28)" fg:x="1023" fg:w="44"/><text x="81.8941%" y="655.50">plu..</text></g><g><title>plugins_core::build::Build::occupying (5 samples, 0.40%)</title><rect x="84.7566%" y="629" width="0.3990%" height="15" fill="rgb(241,221,2)" fg:x="1062" fg:w="5"/><text x="85.0066%" y="639.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.32%)</title><rect x="84.8364%" y="613" width="0.3192%" height="15" fill="rgb(219,124,6)" fg:x="1063" fg:w="4"/><text x="85.0864%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="85.0758%" y="597" width="0.0798%" height="15" fill="rgb(233,37,6)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="85.0758%" y="581" width="0.0798%" height="15" fill="rgb(238,20,14)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="85.0758%" y="565" width="0.0798%" height="15" fill="rgb(232,106,27)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.0758%" y="549" width="0.0798%" height="15" fill="rgb(246,157,24)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.0758%" y="533" width="0.0798%" height="15" fill="rgb(214,153,10)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.0758%" y="517" width="0.0798%" height="15" fill="rgb(212,94,6)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.0758%" y="501" width="0.0798%" height="15" fill="rgb(254,25,27)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0758%" y="485" width="0.0798%" height="15" fill="rgb(250,43,52)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="85.1556%" y="645" width="0.0798%" height="15" fill="rgb(221,226,40)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="85.1556%" y="629" width="0.0798%" height="15" fill="rgb(235,162,34)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="639.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="85.1556%" y="613" width="0.0798%" height="15" fill="rgb(239,24,26)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="85.1556%" y="597" width="0.0798%" height="15" fill="rgb(244,226,11)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="607.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.1556%" y="581" width="0.0798%" height="15" fill="rgb(225,23,10)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1556%" y="565" width="0.0798%" height="15" fill="rgb(249,125,6)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.2354%" y="597" width="0.0798%" height="15" fill="rgb(246,212,12)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.2354%" y="581" width="0.0798%" height="15" fill="rgb(230,43,32)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.2354%" y="565" width="0.0798%" height="15" fill="rgb(210,95,23)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.2354%" y="549" width="0.0798%" height="15" fill="rgb(229,103,33)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.2354%" y="533" width="0.0798%" height="15" fill="rgb(222,104,27)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.2354%" y="517" width="0.0798%" height="15" fill="rgb(239,221,23)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.2354%" y="501" width="0.0798%" height="15" fill="rgb(222,98,21)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.2354%" y="485" width="0.0798%" height="15" fill="rgb(231,101,20)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.2354%" y="469" width="0.0798%" height="15" fill="rgb(215,150,22)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.2354%" y="453" width="0.0798%" height="15" fill="rgb(248,3,34)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.2354%" y="437" width="0.0798%" height="15" fill="rgb(220,141,21)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.2354%" y="421" width="0.0798%" height="15" fill="rgb(223,41,48)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="85.2354%" y="645" width="0.1596%" height="15" fill="rgb(247,12,5)" fg:x="1068" fg:w="2"/><text x="85.4854%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="85.2354%" y="629" width="0.1596%" height="15" fill="rgb(206,173,10)" fg:x="1068" fg:w="2"/><text x="85.4854%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.2354%" y="613" width="0.1596%" height="15" fill="rgb(233,214,37)" fg:x="1068" fg:w="2"/><text x="85.4854%" y="623.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="85.3152%" y="597" width="0.0798%" height="15" fill="rgb(238,86,43)" fg:x="1069" fg:w="1"/><text x="85.5652%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3152%" y="581" width="0.0798%" height="15" fill="rgb(212,182,8)" fg:x="1069" fg:w="1"/><text x="85.5652%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.3951%" y="565" width="0.0798%" height="15" fill="rgb(240,91,47)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3951%" y="549" width="0.0798%" height="15" fill="rgb(209,138,26)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3951%" y="533" width="0.0798%" height="15" fill="rgb(231,163,20)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3951%" y="517" width="0.0798%" height="15" fill="rgb(214,91,54)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3951%" y="501" width="0.0798%" height="15" fill="rgb(230,32,17)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3951%" y="485" width="0.0798%" height="15" fill="rgb(231,34,34)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.3951%" y="469" width="0.0798%" height="15" fill="rgb(224,228,27)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3951%" y="453" width="0.0798%" height="15" fill="rgb(219,35,40)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3951%" y="437" width="0.0798%" height="15" fill="rgb(234,42,8)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3951%" y="421" width="0.0798%" height="15" fill="rgb(226,75,22)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4749%" y="533" width="0.0798%" height="15" fill="rgb(242,203,28)" fg:x="1071" fg:w="1"/><text x="85.7249%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4749%" y="517" width="0.0798%" height="15" fill="rgb(221,3,9)" fg:x="1071" fg:w="1"/><text x="85.7249%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::props::Properties&gt; (1 samples, 0.08%)</title><rect x="85.5547%" y="533" width="0.0798%" height="15" fill="rgb(214,34,31)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="85.3951%" y="629" width="0.3192%" height="15" fill="rgb(252,119,15)" fg:x="1070" fg:w="4"/><text x="85.6451%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="85.3951%" y="613" width="0.3192%" height="15" fill="rgb(244,224,31)" fg:x="1070" fg:w="4"/><text x="85.6451%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="85.3951%" y="597" width="0.3192%" height="15" fill="rgb(215,8,51)" fg:x="1070" fg:w="4"/><text x="85.6451%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="85.3951%" y="581" width="0.3192%" height="15" fill="rgb(207,24,1)" fg:x="1070" fg:w="4"/><text x="85.6451%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="85.4749%" y="565" width="0.2394%" height="15" fill="rgb(245,90,0)" fg:x="1071" fg:w="3"/><text x="85.7249%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="85.4749%" y="549" width="0.2394%" height="15" fill="rgb(246,43,48)" fg:x="1071" fg:w="3"/><text x="85.7249%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6345%" y="533" width="0.0798%" height="15" fill="rgb(252,218,10)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.6345%" y="517" width="0.0798%" height="15" fill="rgb(231,24,35)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6345%" y="501" width="0.0798%" height="15" fill="rgb(225,66,19)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.6345%" y="485" width="0.0798%" height="15" fill="rgb(214,96,51)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.6345%" y="469" width="0.0798%" height="15" fill="rgb(251,151,47)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6345%" y="453" width="0.0798%" height="15" fill="rgb(236,79,14)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.6345%" y="437" width="0.0798%" height="15" fill="rgb(210,205,11)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6345%" y="421" width="0.0798%" height="15" fill="rgb(233,142,53)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="431.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (87 samples, 6.94%)</title><rect x="78.8508%" y="661" width="6.9433%" height="15" fill="rgb(212,116,48)" fg:x="988" fg:w="87"/><text x="79.1008%" y="671.50">&lt;tests::H..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (5 samples, 0.40%)</title><rect x="85.3951%" y="645" width="0.3990%" height="15" fill="rgb(234,55,33)" fg:x="1070" fg:w="5"/><text x="85.6451%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="85.7143%" y="629" width="0.0798%" height="15" fill="rgb(253,92,27)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="85.7143%" y="613" width="0.0798%" height="15" fill="rgb(220,7,35)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.7143%" y="597" width="0.0798%" height="15" fill="rgb(246,124,6)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.7143%" y="581" width="0.0798%" height="15" fill="rgb(212,111,51)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.7143%" y="565" width="0.0798%" height="15" fill="rgb(253,116,7)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="85.7941%" y="661" width="0.0798%" height="15" fill="rgb(213,145,18)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="85.7941%" y="645" width="0.0798%" height="15" fill="rgb(219,149,7)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7941%" y="629" width="0.0798%" height="15" fill="rgb(225,156,20)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.8739%" y="645" width="0.0798%" height="15" fill="rgb(211,98,19)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.8739%" y="629" width="0.0798%" height="15" fill="rgb(231,192,31)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.8739%" y="613" width="0.0798%" height="15" fill="rgb(249,95,19)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.8739%" y="597" width="0.0798%" height="15" fill="rgb(247,101,36)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.08%)</title><rect x="85.8739%" y="581" width="0.0798%" height="15" fill="rgb(221,45,43)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="85.9537%" y="597" width="0.0798%" height="15" fill="rgb(220,42,1)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.9537%" y="581" width="0.0798%" height="15" fill="rgb(236,19,24)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.9537%" y="565" width="0.0798%" height="15" fill="rgb(225,192,6)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.2729%" y="501" width="0.0798%" height="15" fill="rgb(242,30,19)" fg:x="1081" fg:w="1"/><text x="86.5229%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.2729%" y="549" width="0.1596%" height="15" fill="rgb(240,36,6)" fg:x="1081" fg:w="2"/><text x="86.5229%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.2729%" y="533" width="0.1596%" height="15" fill="rgb(246,40,28)" fg:x="1081" fg:w="2"/><text x="86.5229%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.2729%" y="517" width="0.1596%" height="15" fill="rgb(225,155,33)" fg:x="1081" fg:w="2"/><text x="86.5229%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="86.3528%" y="501" width="0.0798%" height="15" fill="rgb(240,65,18)" fg:x="1082" fg:w="1"/><text x="86.6028%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.5124%" y="533" width="0.0798%" height="15" fill="rgb(217,0,48)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.5124%" y="517" width="0.0798%" height="15" fill="rgb(217,80,15)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.5124%" y="501" width="0.0798%" height="15" fill="rgb(253,43,51)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.5922%" y="501" width="0.0798%" height="15" fill="rgb(246,60,4)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.5922%" y="485" width="0.0798%" height="15" fill="rgb(230,40,54)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.5922%" y="469" width="0.0798%" height="15" fill="rgb(208,20,44)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.6720%" y="469" width="0.0798%" height="15" fill="rgb(230,22,22)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.6720%" y="453" width="0.0798%" height="15" fill="rgb(207,57,4)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.6720%" y="437" width="0.0798%" height="15" fill="rgb(242,130,33)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="86.6720%" y="485" width="0.1596%" height="15" fill="rgb(218,66,43)" fg:x="1086" fg:w="2"/><text x="86.9220%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.7518%" y="469" width="0.0798%" height="15" fill="rgb(236,105,16)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="86.4326%" y="549" width="0.4789%" height="15" fill="rgb(230,46,15)" fg:x="1083" fg:w="6"/><text x="86.6826%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="86.5922%" y="533" width="0.3192%" height="15" fill="rgb(251,172,40)" fg:x="1085" fg:w="4"/><text x="86.8422%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="86.5922%" y="517" width="0.3192%" height="15" fill="rgb(225,217,32)" fg:x="1085" fg:w="4"/><text x="86.8422%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="86.6720%" y="501" width="0.2394%" height="15" fill="rgb(243,10,29)" fg:x="1086" fg:w="3"/><text x="86.9220%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.8316%" y="485" width="0.0798%" height="15" fill="rgb(207,102,10)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.8316%" y="469" width="0.0798%" height="15" fill="rgb(241,125,5)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="86.1931%" y="581" width="0.9577%" height="15" fill="rgb(230,125,29)" fg:x="1080" fg:w="12"/><text x="86.4431%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="86.2729%" y="565" width="0.8779%" height="15" fill="rgb(223,65,44)" fg:x="1081" fg:w="11"/><text x="86.5229%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="86.9114%" y="549" width="0.2394%" height="15" fill="rgb(224,188,28)" fg:x="1089" fg:w="3"/><text x="87.1614%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.9912%" y="533" width="0.1596%" height="15" fill="rgb(254,197,27)" fg:x="1090" fg:w="2"/><text x="87.2412%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="86.9912%" y="517" width="0.1596%" height="15" fill="rgb(220,200,25)" fg:x="1090" fg:w="2"/><text x="87.2412%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="86.9912%" y="501" width="0.1596%" height="15" fill="rgb(239,225,54)" fg:x="1090" fg:w="2"/><text x="87.2412%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="86.9912%" y="485" width="0.1596%" height="15" fill="rgb(211,59,40)" fg:x="1090" fg:w="2"/><text x="87.2412%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="86.9912%" y="469" width="0.1596%" height="15" fill="rgb(213,176,46)" fg:x="1090" fg:w="2"/><text x="87.2412%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1508%" y="549" width="0.0798%" height="15" fill="rgb(226,99,4)" fg:x="1092" fg:w="1"/><text x="87.4008%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2306%" y="533" width="0.0798%" height="15" fill="rgb(239,203,43)" fg:x="1093" fg:w="1"/><text x="87.4806%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3105%" y="517" width="0.0798%" height="15" fill="rgb(246,1,45)" fg:x="1094" fg:w="1"/><text x="87.5605%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3903%" y="501" width="0.0798%" height="15" fill="rgb(231,42,52)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="87.1508%" y="581" width="0.4789%" height="15" fill="rgb(240,13,50)" fg:x="1092" fg:w="6"/><text x="87.4008%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="87.1508%" y="565" width="0.4789%" height="15" fill="rgb(225,81,14)" fg:x="1092" fg:w="6"/><text x="87.4008%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="87.2306%" y="549" width="0.3990%" height="15" fill="rgb(216,182,23)" fg:x="1093" fg:w="5"/><text x="87.4806%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="87.3105%" y="533" width="0.3192%" height="15" fill="rgb(233,137,19)" fg:x="1094" fg:w="4"/><text x="87.5605%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.3903%" y="517" width="0.2394%" height="15" fill="rgb(242,61,46)" fg:x="1095" fg:w="3"/><text x="87.6403%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.4701%" y="501" width="0.1596%" height="15" fill="rgb(221,168,51)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.4701%" y="485" width="0.1596%" height="15" fill="rgb(238,48,15)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.5499%" y="469" width="0.0798%" height="15" fill="rgb(216,13,16)" fg:x="1097" fg:w="1"/><text x="87.7999%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6297%" y="549" width="0.0798%" height="15" fill="rgb(223,185,34)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.7095%" y="517" width="0.0798%" height="15" fill="rgb(228,94,42)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7095%" y="501" width="0.0798%" height="15" fill="rgb(218,166,43)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="87.7893%" y="501" width="0.1596%" height="15" fill="rgb(232,30,50)" fg:x="1100" fg:w="2"/><text x="88.0393%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.8691%" y="485" width="0.0798%" height="15" fill="rgb(245,206,45)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.9489%" y="485" width="0.0798%" height="15" fill="rgb(220,56,22)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="87.7095%" y="549" width="0.3990%" height="15" fill="rgb(239,129,38)" fg:x="1099" fg:w="5"/><text x="87.9595%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="87.7095%" y="533" width="0.3990%" height="15" fill="rgb(207,68,41)" fg:x="1099" fg:w="5"/><text x="87.9595%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="87.7893%" y="517" width="0.3192%" height="15" fill="rgb(221,21,7)" fg:x="1100" fg:w="4"/><text x="88.0393%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.9489%" y="501" width="0.1596%" height="15" fill="rgb(240,33,25)" fg:x="1102" fg:w="2"/><text x="88.1989%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.0287%" y="485" width="0.0798%" height="15" fill="rgb(242,119,10)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.0287%" y="469" width="0.0798%" height="15" fill="rgb(214,149,40)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.0287%" y="453" width="0.0798%" height="15" fill="rgb(228,25,36)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.0287%" y="437" width="0.0798%" height="15" fill="rgb(222,59,15)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0287%" y="421" width="0.0798%" height="15" fill="rgb(218,170,0)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="88.1085%" y="517" width="0.0798%" height="15" fill="rgb(232,173,23)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.64%)</title><rect x="87.6297%" y="565" width="0.6385%" height="15" fill="rgb(218,116,1)" fg:x="1098" fg:w="8"/><text x="87.8797%" y="575.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="88.1085%" y="549" width="0.1596%" height="15" fill="rgb(207,34,4)" fg:x="1104" fg:w="2"/><text x="88.3585%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="88.1085%" y="533" width="0.1596%" height="15" fill="rgb(229,54,52)" fg:x="1104" fg:w="2"/><text x="88.3585%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.1883%" y="517" width="0.0798%" height="15" fill="rgb(211,86,23)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4278%" y="533" width="0.0798%" height="15" fill="rgb(254,153,34)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.5874%" y="485" width="0.0798%" height="15" fill="rgb(219,220,14)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.5874%" y="469" width="0.0798%" height="15" fill="rgb(247,8,26)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5874%" y="453" width="0.0798%" height="15" fill="rgb(213,129,42)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.6672%" y="485" width="0.0798%" height="15" fill="rgb(225,95,41)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="88.6672%" y="469" width="0.0798%" height="15" fill="rgb(215,134,24)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6672%" y="453" width="0.0798%" height="15" fill="rgb(235,23,54)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.7470%" y="469" width="0.0798%" height="15" fill="rgb(229,96,31)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.9066%" y="453" width="0.1596%" height="15" fill="rgb(206,111,12)" fg:x="1114" fg:w="2"/><text x="89.1566%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.9066%" y="437" width="0.1596%" height="15" fill="rgb(222,177,8)" fg:x="1114" fg:w="2"/><text x="89.1566%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.9066%" y="421" width="0.1596%" height="15" fill="rgb(251,36,52)" fg:x="1114" fg:w="2"/><text x="89.1566%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="88.2682%" y="565" width="0.8779%" height="15" fill="rgb(216,182,29)" fg:x="1106" fg:w="11"/><text x="88.5182%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="88.2682%" y="549" width="0.8779%" height="15" fill="rgb(241,145,50)" fg:x="1106" fg:w="11"/><text x="88.5182%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="88.5076%" y="533" width="0.6385%" height="15" fill="rgb(231,71,35)" fg:x="1109" fg:w="8"/><text x="88.7576%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="88.5874%" y="517" width="0.5587%" height="15" fill="rgb(218,22,17)" fg:x="1110" fg:w="7"/><text x="88.8374%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="88.5874%" y="501" width="0.5587%" height="15" fill="rgb(225,227,6)" fg:x="1110" fg:w="7"/><text x="88.8374%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="88.7470%" y="485" width="0.3990%" height="15" fill="rgb(224,204,17)" fg:x="1112" fg:w="5"/><text x="88.9970%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="88.8268%" y="469" width="0.3192%" height="15" fill="rgb(227,61,28)" fg:x="1113" fg:w="4"/><text x="89.0768%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="89.0662%" y="453" width="0.0798%" height="15" fill="rgb(242,148,23)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.3855%" y="421" width="0.0798%" height="15" fill="rgb(237,105,33)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.3855%" y="405" width="0.0798%" height="15" fill="rgb(238,218,40)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.3855%" y="389" width="0.0798%" height="15" fill="rgb(209,126,11)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.3855%" y="373" width="0.0798%" height="15" fill="rgb(245,90,11)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="383.50"></text></g><g><title>engine::session::Session::close (47 samples, 3.75%)</title><rect x="85.8739%" y="661" width="3.7510%" height="15" fill="rgb(211,195,10)" fg:x="1076" fg:w="47"/><text x="86.1239%" y="671.50">engi..</text></g><g><title>engine::session::state::State::close (46 samples, 3.67%)</title><rect x="85.9537%" y="645" width="3.6712%" height="15" fill="rgb(231,45,45)" fg:x="1077" fg:w="46"/><text x="86.2037%" y="655.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (46 samples, 3.67%)</title><rect x="85.9537%" y="629" width="3.6712%" height="15" fill="rgb(246,100,43)" fg:x="1077" fg:w="46"/><text x="86.2037%" y="639.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (46 samples, 3.67%)</title><rect x="85.9537%" y="613" width="3.6712%" height="15" fill="rgb(241,193,8)" fg:x="1077" fg:w="46"/><text x="86.2037%" y="623.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (45 samples, 3.59%)</title><rect x="86.0335%" y="597" width="3.5914%" height="15" fill="rgb(208,76,19)" fg:x="1078" fg:w="45"/><text x="86.2835%" y="607.50">engi..</text></g><g><title>kernel::model::any_entity_changes (25 samples, 2.00%)</title><rect x="87.6297%" y="581" width="1.9952%" height="15" fill="rgb(223,69,40)" fg:x="1098" fg:w="25"/><text x="87.8797%" y="591.50">k..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="89.1460%" y="565" width="0.4789%" height="15" fill="rgb(207,120,39)" fg:x="1117" fg:w="6"/><text x="89.3960%" y="575.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="89.1460%" y="549" width="0.4789%" height="15" fill="rgb(212,209,28)" fg:x="1117" fg:w="6"/><text x="89.3960%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="89.1460%" y="533" width="0.4789%" height="15" fill="rgb(246,82,29)" fg:x="1117" fg:w="6"/><text x="89.3960%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="89.1460%" y="517" width="0.4789%" height="15" fill="rgb(239,6,40)" fg:x="1117" fg:w="6"/><text x="89.3960%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="89.2259%" y="501" width="0.3990%" height="15" fill="rgb(228,181,35)" fg:x="1118" fg:w="5"/><text x="89.4759%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="89.2259%" y="485" width="0.3990%" height="15" fill="rgb(238,151,2)" fg:x="1118" fg:w="5"/><text x="89.4759%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="89.2259%" y="469" width="0.3990%" height="15" fill="rgb(236,94,18)" fg:x="1118" fg:w="5"/><text x="89.4759%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="89.3855%" y="453" width="0.2394%" height="15" fill="rgb(208,38,14)" fg:x="1120" fg:w="3"/><text x="89.6355%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="89.3855%" y="437" width="0.2394%" height="15" fill="rgb(234,215,27)" fg:x="1120" fg:w="3"/><text x="89.6355%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.4653%" y="421" width="0.1596%" height="15" fill="rgb(254,211,53)" fg:x="1121" fg:w="2"/><text x="89.7153%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="89.4653%" y="405" width="0.1596%" height="15" fill="rgb(216,175,11)" fg:x="1121" fg:w="2"/><text x="89.7153%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.4653%" y="389" width="0.1596%" height="15" fill="rgb(246,179,26)" fg:x="1121" fg:w="2"/><text x="89.7153%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="89.4653%" y="373" width="0.1596%" height="15" fill="rgb(249,19,52)" fg:x="1121" fg:w="2"/><text x="89.7153%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.4653%" y="357" width="0.1596%" height="15" fill="rgb(230,42,52)" fg:x="1121" fg:w="2"/><text x="89.7153%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.4653%" y="341" width="0.1596%" height="15" fill="rgb(221,171,0)" fg:x="1121" fg:w="2"/><text x="89.7153%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.4653%" y="325" width="0.1596%" height="15" fill="rgb(222,177,40)" fg:x="1121" fg:w="2"/><text x="89.7153%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="89.7845%" y="597" width="0.0798%" height="15" fill="rgb(247,34,16)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="89.7845%" y="581" width="0.0798%" height="15" fill="rgb(213,217,37)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.7845%" y="565" width="0.0798%" height="15" fill="rgb(231,189,24)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.7845%" y="549" width="0.0798%" height="15" fill="rgb(214,22,9)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.7845%" y="533" width="0.0798%" height="15" fill="rgb(212,70,22)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.7845%" y="517" width="0.0798%" height="15" fill="rgb(249,64,51)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.7845%" y="501" width="0.0798%" height="15" fill="rgb(249,148,20)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.7845%" y="485" width="0.0798%" height="15" fill="rgb(246,46,48)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7845%" y="469" width="0.0798%" height="15" fill="rgb(217,34,48)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="89.8643%" y="517" width="0.0798%" height="15" fill="rgb(222,45,26)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="89.8643%" y="501" width="0.0798%" height="15" fill="rgb(230,201,36)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.8643%" y="485" width="0.0798%" height="15" fill="rgb(217,30,43)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.8643%" y="469" width="0.0798%" height="15" fill="rgb(230,197,40)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.8643%" y="453" width="0.0798%" height="15" fill="rgb(239,181,18)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.8643%" y="437" width="0.0798%" height="15" fill="rgb(222,60,39)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.8643%" y="421" width="0.0798%" height="15" fill="rgb(210,60,22)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="89.8643%" y="565" width="0.1596%" height="15" fill="rgb(239,213,48)" fg:x="1126" fg:w="2"/><text x="90.1143%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="89.8643%" y="549" width="0.1596%" height="15" fill="rgb(253,214,23)" fg:x="1126" fg:w="2"/><text x="90.1143%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (2 samples, 0.16%)</title><rect x="89.8643%" y="533" width="0.1596%" height="15" fill="rgb(211,98,45)" fg:x="1126" fg:w="2"/><text x="90.1143%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::from_str (1 samples, 0.08%)</title><rect x="89.9441%" y="517" width="0.0798%" height="15" fill="rgb(239,130,44)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.9441%" y="501" width="0.0798%" height="15" fill="rgb(222,181,35)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.9441%" y="485" width="0.0798%" height="15" fill="rgb(219,219,49)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.9441%" y="469" width="0.0798%" height="15" fill="rgb(227,161,51)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.9441%" y="453" width="0.0798%" height="15" fill="rgb(239,112,27)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0239%" y="565" width="0.0798%" height="15" fill="rgb(248,122,18)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0239%" y="549" width="0.0798%" height="15" fill="rgb(245,130,23)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0239%" y="533" width="0.0798%" height="15" fill="rgb(211,225,28)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0239%" y="517" width="0.0798%" height="15" fill="rgb(242,105,44)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0239%" y="501" width="0.0798%" height="15" fill="rgb(216,183,46)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.0239%" y="485" width="0.0798%" height="15" fill="rgb(227,112,9)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.0239%" y="469" width="0.0798%" height="15" fill="rgb(244,21,0)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.0239%" y="453" width="0.0798%" height="15" fill="rgb(236,185,14)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.0239%" y="437" width="0.0798%" height="15" fill="rgb(236,170,30)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.0239%" y="421" width="0.0798%" height="15" fill="rgb(209,198,51)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.0239%" y="405" width="0.0798%" height="15" fill="rgb(205,171,26)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.0239%" y="389" width="0.0798%" height="15" fill="rgb(246,41,49)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.0239%" y="373" width="0.0798%" height="15" fill="rgb(240,229,12)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.0239%" y="357" width="0.0798%" height="15" fill="rgb(212,8,54)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0239%" y="341" width="0.0798%" height="15" fill="rgb(230,114,13)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="351.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (7 samples, 0.56%)</title><rect x="89.6249%" y="629" width="0.5587%" height="15" fill="rgb(229,130,28)" fg:x="1123" fg:w="7"/><text x="89.8749%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (5 samples, 0.40%)</title><rect x="89.7845%" y="613" width="0.3990%" height="15" fill="rgb(206,139,15)" fg:x="1125" fg:w="5"/><text x="90.0345%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="89.8643%" y="597" width="0.3192%" height="15" fill="rgb(241,188,35)" fg:x="1126" fg:w="4"/><text x="90.1143%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="89.8643%" y="581" width="0.3192%" height="15" fill="rgb(208,224,26)" fg:x="1126" fg:w="4"/><text x="90.1143%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="90.1038%" y="565" width="0.0798%" height="15" fill="rgb(251,131,28)" fg:x="1129" fg:w="1"/><text x="90.3538%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.3432%" y="485" width="0.0798%" height="15" fill="rgb(208,153,1)" fg:x="1132" fg:w="1"/><text x="90.5932%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="90.3432%" y="501" width="0.1596%" height="15" fill="rgb(234,33,36)" fg:x="1132" fg:w="2"/><text x="90.5932%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.4230%" y="485" width="0.0798%" height="15" fill="rgb(246,42,29)" fg:x="1133" fg:w="1"/><text x="90.6730%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="90.3432%" y="517" width="0.2394%" height="15" fill="rgb(251,114,16)" fg:x="1132" fg:w="3"/><text x="90.5932%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.5028%" y="501" width="0.0798%" height="15" fill="rgb(233,13,38)" fg:x="1134" fg:w="1"/><text x="90.7528%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="90.2634%" y="565" width="0.4789%" height="15" fill="rgb(247,120,19)" fg:x="1131" fg:w="6"/><text x="90.5134%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="90.2634%" y="549" width="0.4789%" height="15" fill="rgb(205,11,16)" fg:x="1131" fg:w="6"/><text x="90.5134%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="90.3432%" y="533" width="0.3990%" height="15" fill="rgb(228,185,19)" fg:x="1132" fg:w="5"/><text x="90.5932%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.5826%" y="517" width="0.1596%" height="15" fill="rgb(239,88,52)" fg:x="1135" fg:w="2"/><text x="90.8326%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (8 samples, 0.64%)</title><rect x="90.2634%" y="597" width="0.6385%" height="15" fill="rgb(219,23,1)" fg:x="1131" fg:w="8"/><text x="90.5134%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="90.2634%" y="581" width="0.6385%" height="15" fill="rgb(253,177,16)" fg:x="1131" fg:w="8"/><text x="90.5134%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.7422%" y="565" width="0.1596%" height="15" fill="rgb(225,150,40)" fg:x="1137" fg:w="2"/><text x="90.9922%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9816%" y="549" width="0.0798%" height="15" fill="rgb(208,108,30)" fg:x="1140" fg:w="1"/><text x="91.2316%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.0615%" y="549" width="0.1596%" height="15" fill="rgb(214,122,4)" fg:x="1141" fg:w="2"/><text x="91.3115%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="90.9018%" y="565" width="0.4789%" height="15" fill="rgb(229,74,37)" fg:x="1139" fg:w="6"/><text x="91.1518%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.16%)</title><rect x="91.2211%" y="549" width="0.1596%" height="15" fill="rgb(233,61,41)" fg:x="1143" fg:w="2"/><text x="91.4711%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.3009%" y="533" width="0.0798%" height="15" fill="rgb(238,191,5)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.4605%" y="501" width="0.0798%" height="15" fill="rgb(233,78,24)" fg:x="1146" fg:w="1"/><text x="91.7105%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="91.4605%" y="485" width="0.0798%" height="15" fill="rgb(211,142,8)" fg:x="1146" fg:w="1"/><text x="91.7105%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.5403%" y="389" width="0.0798%" height="15" fill="rgb(253,38,53)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.5403%" y="373" width="0.0798%" height="15" fill="rgb(234,63,51)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.5403%" y="357" width="0.0798%" height="15" fill="rgb(205,23,31)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.5403%" y="341" width="0.0798%" height="15" fill="rgb(210,184,50)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5403%" y="325" width="0.0798%" height="15" fill="rgb(222,112,26)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.5403%" y="309" width="0.0798%" height="15" fill="rgb(250,98,18)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5403%" y="293" width="0.0798%" height="15" fill="rgb(250,34,12)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.5403%" y="277" width="0.0798%" height="15" fill="rgb(236,141,30)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5403%" y="261" width="0.0798%" height="15" fill="rgb(246,134,38)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.5403%" y="245" width="0.0798%" height="15" fill="rgb(240,114,4)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5403%" y="229" width="0.0798%" height="15" fill="rgb(243,113,39)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="239.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="91.6201%" y="373" width="0.1596%" height="15" fill="rgb(239,215,4)" fg:x="1148" fg:w="2"/><text x="91.8701%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.6201%" y="357" width="0.1596%" height="15" fill="rgb(236,229,45)" fg:x="1148" fg:w="2"/><text x="91.8701%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.6201%" y="341" width="0.1596%" height="15" fill="rgb(242,2,6)" fg:x="1148" fg:w="2"/><text x="91.8701%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.6999%" y="325" width="0.0798%" height="15" fill="rgb(239,108,21)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.6999%" y="309" width="0.0798%" height="15" fill="rgb(215,168,34)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.6999%" y="293" width="0.0798%" height="15" fill="rgb(238,31,17)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.6999%" y="277" width="0.0798%" height="15" fill="rgb(220,133,11)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.6999%" y="261" width="0.0798%" height="15" fill="rgb(212,158,23)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.6999%" y="245" width="0.0798%" height="15" fill="rgb(223,172,7)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.6999%" y="229" width="0.0798%" height="15" fill="rgb(244,3,52)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.6999%" y="213" width="0.0798%" height="15" fill="rgb(207,69,27)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.6999%" y="197" width="0.0798%" height="15" fill="rgb(213,136,45)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.6999%" y="181" width="0.0798%" height="15" fill="rgb(218,79,17)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.6999%" y="165" width="0.0798%" height="15" fill="rgb(216,106,36)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.6999%" y="149" width="0.0798%" height="15" fill="rgb(251,27,45)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.6999%" y="133" width="0.0798%" height="15" fill="rgb(232,21,34)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="91.5403%" y="437" width="0.3192%" height="15" fill="rgb(249,191,16)" fg:x="1147" fg:w="4"/><text x="91.7903%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.32%)</title><rect x="91.5403%" y="421" width="0.3192%" height="15" fill="rgb(224,88,20)" fg:x="1147" fg:w="4"/><text x="91.7903%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="91.5403%" y="405" width="0.3192%" height="15" fill="rgb(237,93,27)" fg:x="1147" fg:w="4"/><text x="91.7903%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::from_str (3 samples, 0.24%)</title><rect x="91.6201%" y="389" width="0.2394%" height="15" fill="rgb(226,198,48)" fg:x="1148" fg:w="3"/><text x="91.8701%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.7797%" y="373" width="0.0798%" height="15" fill="rgb(207,162,53)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7797%" y="357" width="0.0798%" height="15" fill="rgb(207,169,9)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.7797%" y="341" width="0.0798%" height="15" fill="rgb(224,166,46)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7797%" y="325" width="0.0798%" height="15" fill="rgb(233,26,6)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.7797%" y="309" width="0.0798%" height="15" fill="rgb(218,106,45)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7797%" y="293" width="0.0798%" height="15" fill="rgb(240,217,4)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="303.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="91.5403%" y="501" width="0.3990%" height="15" fill="rgb(246,171,10)" fg:x="1147" fg:w="5"/><text x="91.7903%" y="511.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (5 samples, 0.40%)</title><rect x="91.5403%" y="485" width="0.3990%" height="15" fill="rgb(223,197,30)" fg:x="1147" fg:w="5"/><text x="91.7903%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (5 samples, 0.40%)</title><rect x="91.5403%" y="469" width="0.3990%" height="15" fill="rgb(207,92,16)" fg:x="1147" fg:w="5"/><text x="91.7903%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="91.5403%" y="453" width="0.3990%" height="15" fill="rgb(211,6,44)" fg:x="1147" fg:w="5"/><text x="91.7903%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.8595%" y="437" width="0.0798%" height="15" fill="rgb(219,139,2)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.8595%" y="421" width="0.0798%" height="15" fill="rgb(224,103,21)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.8595%" y="405" width="0.0798%" height="15" fill="rgb(254,110,48)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.8595%" y="389" width="0.0798%" height="15" fill="rgb(212,88,19)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.8595%" y="373" width="0.0798%" height="15" fill="rgb(248,103,6)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9393%" y="421" width="0.0798%" height="15" fill="rgb(214,53,46)" fg:x="1152" fg:w="1"/><text x="92.1893%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9393%" y="405" width="0.0798%" height="15" fill="rgb(236,190,24)" fg:x="1152" fg:w="1"/><text x="92.1893%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.9393%" y="469" width="0.1596%" height="15" fill="rgb(254,58,28)" fg:x="1152" fg:w="2"/><text x="92.1893%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.9393%" y="453" width="0.1596%" height="15" fill="rgb(243,63,27)" fg:x="1152" fg:w="2"/><text x="92.1893%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.9393%" y="437" width="0.1596%" height="15" fill="rgb(206,81,20)" fg:x="1152" fg:w="2"/><text x="92.1893%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0192%" y="421" width="0.0798%" height="15" fill="rgb(252,69,51)" fg:x="1153" fg:w="1"/><text x="92.2692%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="92.0990%" y="469" width="0.1596%" height="15" fill="rgb(222,213,4)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="92.0990%" y="453" width="0.1596%" height="15" fill="rgb(226,198,12)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="92.0990%" y="437" width="0.1596%" height="15" fill="rgb(248,115,11)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="92.0990%" y="421" width="0.1596%" height="15" fill="rgb(221,148,54)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="92.0990%" y="405" width="0.1596%" height="15" fill="rgb(214,209,51)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="415.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (2 samples, 0.16%)</title><rect x="92.0990%" y="389" width="0.1596%" height="15" fill="rgb(249,116,53)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.0990%" y="373" width="0.1596%" height="15" fill="rgb(248,170,1)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.0990%" y="357" width="0.1596%" height="15" fill="rgb(244,105,10)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="92.0990%" y="341" width="0.1596%" height="15" fill="rgb(229,100,5)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="92.0990%" y="325" width="0.1596%" height="15" fill="rgb(233,221,39)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="92.0990%" y="309" width="0.1596%" height="15" fill="rgb(233,88,21)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="92.0990%" y="293" width="0.1596%" height="15" fill="rgb(206,13,0)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="92.0990%" y="277" width="0.1596%" height="15" fill="rgb(242,15,35)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="92.0990%" y="261" width="0.1596%" height="15" fill="rgb(247,142,41)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="92.0990%" y="245" width="0.1596%" height="15" fill="rgb(245,51,29)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="92.0990%" y="229" width="0.1596%" height="15" fill="rgb(228,209,43)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="92.0990%" y="213" width="0.1596%" height="15" fill="rgb(233,185,9)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.0990%" y="197" width="0.1596%" height="15" fill="rgb(226,93,0)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="207.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (11 samples, 0.88%)</title><rect x="91.4605%" y="517" width="0.8779%" height="15" fill="rgb(245,194,43)" fg:x="1146" fg:w="11"/><text x="91.7105%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="91.9393%" y="501" width="0.3990%" height="15" fill="rgb(211,145,34)" fg:x="1152" fg:w="5"/><text x="92.1893%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="91.9393%" y="485" width="0.3990%" height="15" fill="rgb(231,228,28)" fg:x="1152" fg:w="5"/><text x="92.1893%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.2586%" y="469" width="0.0798%" height="15" fill="rgb(236,149,4)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.2586%" y="453" width="0.0798%" height="15" fill="rgb(234,114,38)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.2586%" y="437" width="0.0798%" height="15" fill="rgb(246,132,51)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.2586%" y="421" width="0.0798%" height="15" fill="rgb(251,137,22)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.2586%" y="405" width="0.0798%" height="15" fill="rgb(243,59,52)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3384%" y="469" width="0.0798%" height="15" fill="rgb(239,56,28)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3384%" y="453" width="0.0798%" height="15" fill="rgb(218,168,27)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3384%" y="437" width="0.0798%" height="15" fill="rgb(232,165,11)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3384%" y="421" width="0.0798%" height="15" fill="rgb(253,55,41)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3384%" y="405" width="0.0798%" height="15" fill="rgb(233,206,24)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3384%" y="389" width="0.0798%" height="15" fill="rgb(220,199,8)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.3384%" y="373" width="0.0798%" height="15" fill="rgb(254,65,26)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.3384%" y="357" width="0.0798%" height="15" fill="rgb(253,102,23)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.3384%" y="341" width="0.0798%" height="15" fill="rgb(231,103,35)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.3384%" y="325" width="0.0798%" height="15" fill="rgb(238,26,10)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.3384%" y="309" width="0.0798%" height="15" fill="rgb(234,191,34)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.4980%" y="325" width="0.0798%" height="15" fill="rgb(206,210,9)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.4980%" y="309" width="0.0798%" height="15" fill="rgb(219,155,3)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.4980%" y="293" width="0.0798%" height="15" fill="rgb(221,62,52)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4980%" y="277" width="0.0798%" height="15" fill="rgb(215,197,36)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4980%" y="261" width="0.0798%" height="15" fill="rgb(226,222,6)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4980%" y="245" width="0.0798%" height="15" fill="rgb(215,58,28)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4980%" y="229" width="0.0798%" height="15" fill="rgb(212,148,2)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.4980%" y="213" width="0.0798%" height="15" fill="rgb(208,21,42)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4980%" y="197" width="0.0798%" height="15" fill="rgb(209,107,26)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4980%" y="181" width="0.0798%" height="15" fill="rgb(254,60,47)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4980%" y="165" width="0.0798%" height="15" fill="rgb(207,226,45)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4980%" y="149" width="0.0798%" height="15" fill="rgb(223,124,22)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4980%" y="133" width="0.0798%" height="15" fill="rgb(240,162,13)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4980%" y="117" width="0.0798%" height="15" fill="rgb(244,199,31)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="127.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="92.4980%" y="357" width="0.1596%" height="15" fill="rgb(207,92,16)" fg:x="1159" fg:w="2"/><text x="92.7480%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="92.4980%" y="341" width="0.1596%" height="15" fill="rgb(215,31,19)" fg:x="1159" fg:w="2"/><text x="92.7480%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="92.5778%" y="325" width="0.0798%" height="15" fill="rgb(245,118,14)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.5778%" y="309" width="0.0798%" height="15" fill="rgb(248,12,46)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.5778%" y="293" width="0.0798%" height="15" fill="rgb(209,119,0)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5778%" y="277" width="0.0798%" height="15" fill="rgb(254,51,44)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5778%" y="261" width="0.0798%" height="15" fill="rgb(253,182,35)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5778%" y="245" width="0.0798%" height="15" fill="rgb(205,198,39)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5778%" y="229" width="0.0798%" height="15" fill="rgb(251,175,48)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5778%" y="213" width="0.0798%" height="15" fill="rgb(239,38,17)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5778%" y="197" width="0.0798%" height="15" fill="rgb(212,101,8)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.5778%" y="181" width="0.0798%" height="15" fill="rgb(228,35,17)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.5778%" y="165" width="0.0798%" height="15" fill="rgb(214,95,8)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.5778%" y="149" width="0.0798%" height="15" fill="rgb(210,176,35)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5778%" y="133" width="0.0798%" height="15" fill="rgb(226,4,3)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5778%" y="117" width="0.0798%" height="15" fill="rgb(232,133,14)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.5778%" y="101" width="0.0798%" height="15" fill="rgb(250,191,8)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.5778%" y="85" width="0.0798%" height="15" fill="rgb(213,12,45)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.5778%" y="69" width="0.0798%" height="15" fill="rgb(233,78,26)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.5778%" y="53" width="0.0798%" height="15" fill="rgb(245,222,11)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5778%" y="37" width="0.0798%" height="15" fill="rgb(216,174,12)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.6576%" y="309" width="0.0798%" height="15" fill="rgb(213,15,9)" fg:x="1161" fg:w="1"/><text x="92.9076%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.6576%" y="293" width="0.0798%" height="15" fill="rgb(238,103,32)" fg:x="1161" fg:w="1"/><text x="92.9076%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.6576%" y="277" width="0.0798%" height="15" fill="rgb(245,85,15)" fg:x="1161" fg:w="1"/><text x="92.9076%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6576%" y="261" width="0.0798%" height="15" fill="rgb(254,204,5)" fg:x="1161" fg:w="1"/><text x="92.9076%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="92.6576%" y="357" width="0.2394%" height="15" fill="rgb(231,178,15)" fg:x="1161" fg:w="3"/><text x="92.9076%" y="367.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="92.6576%" y="341" width="0.2394%" height="15" fill="rgb(248,151,3)" fg:x="1161" fg:w="3"/><text x="92.9076%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="92.6576%" y="325" width="0.2394%" height="15" fill="rgb(250,139,13)" fg:x="1161" fg:w="3"/><text x="92.9076%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.7374%" y="309" width="0.1596%" height="15" fill="rgb(243,107,53)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7374%" y="293" width="0.1596%" height="15" fill="rgb(232,81,15)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.7374%" y="277" width="0.1596%" height="15" fill="rgb(225,187,48)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7374%" y="261" width="0.1596%" height="15" fill="rgb(205,116,12)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="92.7374%" y="245" width="0.1596%" height="15" fill="rgb(220,222,31)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7374%" y="229" width="0.1596%" height="15" fill="rgb(233,187,49)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.7374%" y="213" width="0.1596%" height="15" fill="rgb(211,168,53)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7374%" y="197" width="0.1596%" height="15" fill="rgb(206,160,16)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.8172%" y="181" width="0.0798%" height="15" fill="rgb(254,164,13)" fg:x="1163" fg:w="1"/><text x="93.0672%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8172%" y="165" width="0.0798%" height="15" fill="rgb(229,45,30)" fg:x="1163" fg:w="1"/><text x="93.0672%" y="175.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="92.8970%" y="357" width="0.3192%" height="15" fill="rgb(237,32,10)" fg:x="1164" fg:w="4"/><text x="93.1470%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="92.8970%" y="341" width="0.3192%" height="15" fill="rgb(251,20,47)" fg:x="1164" fg:w="4"/><text x="93.1470%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="92.8970%" y="325" width="0.3192%" height="15" fill="rgb(251,116,12)" fg:x="1164" fg:w="4"/><text x="93.1470%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="92.8970%" y="309" width="0.3192%" height="15" fill="rgb(214,227,27)" fg:x="1164" fg:w="4"/><text x="93.1470%" y="319.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="92.8970%" y="293" width="0.3192%" height="15" fill="rgb(248,10,53)" fg:x="1164" fg:w="4"/><text x="93.1470%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="93.2163%" y="293" width="0.1596%" height="15" fill="rgb(221,176,25)" fg:x="1168" fg:w="2"/><text x="93.4663%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="93.2163%" y="277" width="0.1596%" height="15" fill="rgb(205,70,46)" fg:x="1168" fg:w="2"/><text x="93.4663%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.3759%" y="293" width="0.1596%" height="15" fill="rgb(217,45,38)" fg:x="1170" fg:w="2"/><text x="93.6259%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.4557%" y="277" width="0.0798%" height="15" fill="rgb(243,6,54)" fg:x="1171" fg:w="1"/><text x="93.7057%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.6153%" y="213" width="0.0798%" height="15" fill="rgb(242,76,23)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="93.6153%" y="229" width="0.1596%" height="15" fill="rgb(239,166,0)" fg:x="1173" fg:w="2"/><text x="93.8653%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6951%" y="213" width="0.0798%" height="15" fill="rgb(238,174,32)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.7749%" y="197" width="0.0798%" height="15" fill="rgb(238,124,44)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7749%" y="181" width="0.0798%" height="15" fill="rgb(206,185,9)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.8547%" y="197" width="0.0798%" height="15" fill="rgb(215,157,17)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.8547%" y="181" width="0.0798%" height="15" fill="rgb(251,17,29)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8547%" y="165" width="0.0798%" height="15" fill="rgb(227,113,27)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="175.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="93.2163%" y="341" width="0.7981%" height="15" fill="rgb(217,226,24)" fg:x="1168" fg:w="10"/><text x="93.4663%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="93.2163%" y="325" width="0.7981%" height="15" fill="rgb(251,99,38)" fg:x="1168" fg:w="10"/><text x="93.4663%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="93.2163%" y="309" width="0.7981%" height="15" fill="rgb(231,147,19)" fg:x="1168" fg:w="10"/><text x="93.4663%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="93.5355%" y="293" width="0.4789%" height="15" fill="rgb(230,86,8)" fg:x="1172" fg:w="6"/><text x="93.7855%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="93.5355%" y="277" width="0.4789%" height="15" fill="rgb(237,159,39)" fg:x="1172" fg:w="6"/><text x="93.7855%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="93.6153%" y="261" width="0.3990%" height="15" fill="rgb(247,179,47)" fg:x="1173" fg:w="5"/><text x="93.8653%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="93.6153%" y="245" width="0.3990%" height="15" fill="rgb(253,152,26)" fg:x="1173" fg:w="5"/><text x="93.8653%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.7749%" y="229" width="0.2394%" height="15" fill="rgb(222,211,15)" fg:x="1175" fg:w="3"/><text x="94.0249%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.7749%" y="213" width="0.2394%" height="15" fill="rgb(236,193,6)" fg:x="1175" fg:w="3"/><text x="94.0249%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.9346%" y="197" width="0.0798%" height="15" fill="rgb(226,206,10)" fg:x="1177" fg:w="1"/><text x="94.1846%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.0942%" y="261" width="0.0798%" height="15" fill="rgb(213,125,22)" fg:x="1179" fg:w="1"/><text x="94.3442%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.0942%" y="245" width="0.0798%" height="15" fill="rgb(221,66,28)" fg:x="1179" fg:w="1"/><text x="94.3442%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (23 samples, 1.84%)</title><rect x="92.4182%" y="469" width="1.8356%" height="15" fill="rgb(222,84,53)" fg:x="1158" fg:w="23"/><text x="92.6682%" y="479.50">&lt;..</text></g><g><title>core::iter::adapters::try_process (23 samples, 1.84%)</title><rect x="92.4182%" y="453" width="1.8356%" height="15" fill="rgb(243,50,15)" fg:x="1158" fg:w="23"/><text x="92.6682%" y="463.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 1.84%)</title><rect x="92.4182%" y="437" width="1.8356%" height="15" fill="rgb(208,184,23)" fg:x="1158" fg:w="23"/><text x="92.6682%" y="447.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 1.84%)</title><rect x="92.4182%" y="421" width="1.8356%" height="15" fill="rgb(221,83,2)" fg:x="1158" fg:w="23"/><text x="92.6682%" y="431.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (23 samples, 1.84%)</title><rect x="92.4182%" y="405" width="1.8356%" height="15" fill="rgb(236,53,24)" fg:x="1158" fg:w="23"/><text x="92.6682%" y="415.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (23 samples, 1.84%)</title><rect x="92.4182%" y="389" width="1.8356%" height="15" fill="rgb(244,171,29)" fg:x="1158" fg:w="23"/><text x="92.6682%" y="399.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (22 samples, 1.76%)</title><rect x="92.4980%" y="373" width="1.7558%" height="15" fill="rgb(205,19,11)" fg:x="1159" fg:w="22"/><text x="92.7480%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_str (13 samples, 1.04%)</title><rect x="93.2163%" y="357" width="1.0375%" height="15" fill="rgb(207,108,29)" fg:x="1168" fg:w="13"/><text x="93.4663%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.0144%" y="341" width="0.2394%" height="15" fill="rgb(236,215,43)" fg:x="1178" fg:w="3"/><text x="94.2644%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.0144%" y="325" width="0.2394%" height="15" fill="rgb(213,58,35)" fg:x="1178" fg:w="3"/><text x="94.2644%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.0942%" y="309" width="0.1596%" height="15" fill="rgb(220,211,46)" fg:x="1179" fg:w="2"/><text x="94.3442%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.0942%" y="293" width="0.1596%" height="15" fill="rgb(212,134,16)" fg:x="1179" fg:w="2"/><text x="94.3442%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.0942%" y="277" width="0.1596%" height="15" fill="rgb(232,90,44)" fg:x="1179" fg:w="2"/><text x="94.3442%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1740%" y="261" width="0.0798%" height="15" fill="rgb(212,18,36)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.1740%" y="245" width="0.0798%" height="15" fill="rgb(206,112,24)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.1740%" y="229" width="0.0798%" height="15" fill="rgb(238,223,40)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1740%" y="213" width="0.0798%" height="15" fill="rgb(226,169,20)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.1740%" y="197" width="0.0798%" height="15" fill="rgb(241,64,52)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.1740%" y="181" width="0.0798%" height="15" fill="rgb(228,120,25)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1740%" y="165" width="0.0798%" height="15" fill="rgb(234,108,19)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.1740%" y="149" width="0.0798%" height="15" fill="rgb(236,133,29)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.1740%" y="133" width="0.0798%" height="15" fill="rgb(246,174,53)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1740%" y="117" width="0.0798%" height="15" fill="rgb(210,105,35)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.1740%" y="101" width="0.0798%" height="15" fill="rgb(225,27,26)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.1740%" y="85" width="0.0798%" height="15" fill="rgb(233,2,39)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="95.50"></text></g><g><title>plugins_core::tools::get_contained_keys (26 samples, 2.08%)</title><rect x="92.3384%" y="517" width="2.0750%" height="15" fill="rgb(219,164,26)" fg:x="1157" fg:w="26"/><text x="92.5884%" y="527.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (26 samples, 2.08%)</title><rect x="92.3384%" y="501" width="2.0750%" height="15" fill="rgb(236,211,5)" fg:x="1157" fg:w="26"/><text x="92.5884%" y="511.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (26 samples, 2.08%)</title><rect x="92.3384%" y="485" width="2.0750%" height="15" fill="rgb(244,227,23)" fg:x="1157" fg:w="26"/><text x="92.5884%" y="495.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.2538%" y="469" width="0.1596%" height="15" fill="rgb(230,184,8)" fg:x="1181" fg:w="2"/><text x="94.5038%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.2538%" y="453" width="0.1596%" height="15" fill="rgb(217,125,48)" fg:x="1181" fg:w="2"/><text x="94.5038%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.3336%" y="437" width="0.0798%" height="15" fill="rgb(223,192,47)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.3336%" y="421" width="0.0798%" height="15" fill="rgb(226,119,10)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="94.3336%" y="405" width="0.0798%" height="15" fill="rgb(221,49,29)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.3336%" y="389" width="0.0798%" height="15" fill="rgb(217,205,19)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3336%" y="373" width="0.0798%" height="15" fill="rgb(242,104,7)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.4932%" y="469" width="0.1596%" height="15" fill="rgb(209,154,48)" fg:x="1184" fg:w="2"/><text x="94.7432%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.5730%" y="453" width="0.0798%" height="15" fill="rgb(219,213,46)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5730%" y="437" width="0.0798%" height="15" fill="rgb(229,105,38)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.5730%" y="421" width="0.0798%" height="15" fill="rgb(205,151,5)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5730%" y="405" width="0.0798%" height="15" fill="rgb(248,115,40)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5730%" y="389" width="0.0798%" height="15" fill="rgb(206,179,2)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.5730%" y="373" width="0.0798%" height="15" fill="rgb(230,103,24)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.5730%" y="357" width="0.0798%" height="15" fill="rgb(218,152,4)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.5730%" y="341" width="0.0798%" height="15" fill="rgb(236,161,54)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5730%" y="325" width="0.0798%" height="15" fill="rgb(226,65,17)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5730%" y="309" width="0.0798%" height="15" fill="rgb(221,134,44)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.5730%" y="293" width="0.0798%" height="15" fill="rgb(251,129,4)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.5730%" y="277" width="0.0798%" height="15" fill="rgb(244,32,34)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.5730%" y="261" width="0.0798%" height="15" fill="rgb(251,224,37)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.5730%" y="245" width="0.0798%" height="15" fill="rgb(248,117,31)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5730%" y="229" width="0.0798%" height="15" fill="rgb(222,208,37)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 3.59%)</title><rect x="91.3807%" y="549" width="3.5914%" height="15" fill="rgb(234,211,25)" fg:x="1145" fg:w="45"/><text x="91.6307%" y="559.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (45 samples, 3.59%)</title><rect x="91.3807%" y="533" width="3.5914%" height="15" fill="rgb(211,72,6)" fg:x="1145" fg:w="45"/><text x="91.6307%" y="543.50">&lt;cor..</text></g><g><title>plugins_core::tools::get_occupant_keys (7 samples, 0.56%)</title><rect x="94.4134%" y="517" width="0.5587%" height="15" fill="rgb(249,198,38)" fg:x="1183" fg:w="7"/><text x="94.6634%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="94.4134%" y="501" width="0.5587%" height="15" fill="rgb(221,86,51)" fg:x="1183" fg:w="7"/><text x="94.6634%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="94.4134%" y="485" width="0.5587%" height="15" fill="rgb(226,178,43)" fg:x="1183" fg:w="7"/><text x="94.6634%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="94.6528%" y="469" width="0.3192%" height="15" fill="rgb(215,145,7)" fg:x="1186" fg:w="4"/><text x="94.9028%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.7326%" y="453" width="0.2394%" height="15" fill="rgb(250,202,36)" fg:x="1187" fg:w="3"/><text x="94.9826%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="94.8125%" y="437" width="0.1596%" height="15" fill="rgb(215,86,13)" fg:x="1188" fg:w="2"/><text x="95.0625%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="94.8125%" y="421" width="0.1596%" height="15" fill="rgb(221,134,12)" fg:x="1188" fg:w="2"/><text x="95.0625%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="94.8125%" y="405" width="0.1596%" height="15" fill="rgb(213,82,10)" fg:x="1188" fg:w="2"/><text x="95.0625%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.8125%" y="389" width="0.1596%" height="15" fill="rgb(214,142,0)" fg:x="1188" fg:w="2"/><text x="95.0625%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.8125%" y="373" width="0.1596%" height="15" fill="rgb(205,145,9)" fg:x="1188" fg:w="2"/><text x="95.0625%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="94.8125%" y="357" width="0.1596%" height="15" fill="rgb(244,214,8)" fg:x="1188" fg:w="2"/><text x="95.0625%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9721%" y="501" width="0.0798%" height="15" fill="rgb(224,72,51)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9721%" y="485" width="0.0798%" height="15" fill="rgb(233,137,37)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.9721%" y="469" width="0.0798%" height="15" fill="rgb(208,71,28)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.9721%" y="453" width="0.0798%" height="15" fill="rgb(226,31,7)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.9721%" y="437" width="0.0798%" height="15" fill="rgb(229,62,18)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.9721%" y="421" width="0.0798%" height="15" fill="rgb(226,74,28)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.9721%" y="405" width="0.0798%" height="15" fill="rgb(214,170,18)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.9721%" y="389" width="0.0798%" height="15" fill="rgb(227,229,35)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.9721%" y="373" width="0.0798%" height="15" fill="rgb(225,181,39)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.9721%" y="357" width="0.0798%" height="15" fill="rgb(253,124,44)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.9721%" y="341" width="0.0798%" height="15" fill="rgb(220,75,18)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9721%" y="325" width="0.0798%" height="15" fill="rgb(239,175,43)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0519%" y="469" width="0.0798%" height="15" fill="rgb(228,112,50)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0519%" y="453" width="0.0798%" height="15" fill="rgb(232,105,36)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.0519%" y="437" width="0.0798%" height="15" fill="rgb(227,137,47)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.0519%" y="421" width="0.0798%" height="15" fill="rgb(217,51,9)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.0519%" y="405" width="0.0798%" height="15" fill="rgb(245,117,0)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.0519%" y="389" width="0.0798%" height="15" fill="rgb(252,52,30)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.0519%" y="373" width="0.0798%" height="15" fill="rgb(227,85,33)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.0519%" y="357" width="0.0798%" height="15" fill="rgb(220,157,20)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.0519%" y="341" width="0.0798%" height="15" fill="rgb(254,14,34)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.0519%" y="325" width="0.0798%" height="15" fill="rgb(216,103,41)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.0519%" y="309" width="0.0798%" height="15" fill="rgb(245,221,9)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0519%" y="293" width="0.0798%" height="15" fill="rgb(254,136,47)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="95.0519%" y="501" width="0.1596%" height="15" fill="rgb(235,71,46)" fg:x="1191" fg:w="2"/><text x="95.3019%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="95.0519%" y="485" width="0.1596%" height="15" fill="rgb(242,154,29)" fg:x="1191" fg:w="2"/><text x="95.3019%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.1317%" y="469" width="0.0798%" height="15" fill="rgb(210,65,31)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.1317%" y="453" width="0.0798%" height="15" fill="rgb(244,9,50)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.1317%" y="437" width="0.0798%" height="15" fill="rgb(215,141,38)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.1317%" y="421" width="0.0798%" height="15" fill="rgb(241,129,6)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.1317%" y="405" width="0.0798%" height="15" fill="rgb(253,169,4)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.1317%" y="389" width="0.0798%" height="15" fill="rgb(237,82,36)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.1317%" y="373" width="0.0798%" height="15" fill="rgb(209,171,11)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.1317%" y="357" width="0.0798%" height="15" fill="rgb(242,19,22)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.1317%" y="341" width="0.0798%" height="15" fill="rgb(251,122,24)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="95.1317%" y="325" width="0.0798%" height="15" fill="rgb(226,166,42)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="95.1317%" y="309" width="0.0798%" height="15" fill="rgb(244,101,48)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="95.1317%" y="293" width="0.0798%" height="15" fill="rgb(227,125,1)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="95.1317%" y="277" width="0.0798%" height="15" fill="rgb(206,79,43)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="95.1317%" y="261" width="0.0798%" height="15" fill="rgb(241,109,41)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="95.1317%" y="245" width="0.0798%" height="15" fill="rgb(219,73,4)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="95.1317%" y="229" width="0.0798%" height="15" fill="rgb(239,25,41)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="95.1317%" y="213" width="0.0798%" height="15" fill="rgb(208,88,46)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.1317%" y="197" width="0.0798%" height="15" fill="rgb(239,184,9)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="95.6903%" y="197" width="0.1596%" height="15" fill="rgb(223,114,13)" fg:x="1199" fg:w="2"/><text x="95.9403%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="95.6903%" y="181" width="0.1596%" height="15" fill="rgb(214,28,42)" fg:x="1199" fg:w="2"/><text x="95.9403%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.7702%" y="165" width="0.0798%" height="15" fill="rgb(252,32,44)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.7702%" y="149" width="0.0798%" height="15" fill="rgb(231,159,4)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="159.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.7702%" y="133" width="0.0798%" height="15" fill="rgb(210,35,26)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.8500%" y="197" width="0.0798%" height="15" fill="rgb(208,190,37)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.8500%" y="181" width="0.0798%" height="15" fill="rgb(226,148,22)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="95.6903%" y="213" width="0.3192%" height="15" fill="rgb(242,153,24)" fg:x="1199" fg:w="4"/><text x="95.9403%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9298%" y="197" width="0.0798%" height="15" fill="rgb(213,133,7)" fg:x="1202" fg:w="1"/><text x="96.1798%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.9298%" y="181" width="0.0798%" height="15" fill="rgb(248,206,18)" fg:x="1202" fg:w="1"/><text x="96.1798%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.56%)</title><rect x="95.6903%" y="261" width="0.5587%" height="15" fill="rgb(233,157,4)" fg:x="1199" fg:w="7"/><text x="95.9403%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (7 samples, 0.56%)</title><rect x="95.6903%" y="245" width="0.5587%" height="15" fill="rgb(249,179,32)" fg:x="1199" fg:w="7"/><text x="95.9403%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="95.6903%" y="229" width="0.5587%" height="15" fill="rgb(248,69,35)" fg:x="1199" fg:w="7"/><text x="95.9403%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="96.0096%" y="213" width="0.2394%" height="15" fill="rgb(249,158,38)" fg:x="1203" fg:w="3"/><text x="96.2596%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.0894%" y="197" width="0.1596%" height="15" fill="rgb(223,18,43)" fg:x="1204" fg:w="2"/><text x="96.3394%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.64%)</title><rect x="95.6903%" y="309" width="0.6385%" height="15" fill="rgb(238,42,45)" fg:x="1199" fg:w="8"/><text x="95.9403%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (8 samples, 0.64%)</title><rect x="95.6903%" y="293" width="0.6385%" height="15" fill="rgb(219,65,47)" fg:x="1199" fg:w="8"/><text x="95.9403%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="95.6903%" y="277" width="0.6385%" height="15" fill="rgb(248,153,12)" fg:x="1199" fg:w="8"/><text x="95.9403%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="96.2490%" y="261" width="0.0798%" height="15" fill="rgb(240,118,4)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.2490%" y="245" width="0.0798%" height="15" fill="rgb(250,96,34)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="95.6903%" y="325" width="0.7183%" height="15" fill="rgb(221,15,4)" fg:x="1199" fg:w="9"/><text x="95.9403%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="96.3288%" y="309" width="0.0798%" height="15" fill="rgb(217,149,33)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3288%" y="293" width="0.0798%" height="15" fill="rgb(213,58,29)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (10 samples, 0.80%)</title><rect x="95.6903%" y="341" width="0.7981%" height="15" fill="rgb(236,218,9)" fg:x="1199" fg:w="10"/><text x="95.9403%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.4086%" y="325" width="0.0798%" height="15" fill="rgb(248,40,19)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="96.4086%" y="309" width="0.0798%" height="15" fill="rgb(212,17,6)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="96.4086%" y="293" width="0.0798%" height="15" fill="rgb(206,212,20)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.4086%" y="277" width="0.0798%" height="15" fill="rgb(229,80,37)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="96.4086%" y="261" width="0.0798%" height="15" fill="rgb(253,8,37)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="96.4884%" y="341" width="0.2394%" height="15" fill="rgb(215,16,43)" fg:x="1209" fg:w="3"/><text x="96.7384%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="96.5682%" y="325" width="0.1596%" height="15" fill="rgb(236,219,16)" fg:x="1210" fg:w="2"/><text x="96.8182%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 1.36%)</title><rect x="95.6105%" y="357" width="1.3567%" height="15" fill="rgb(251,0,3)" fg:x="1198" fg:w="17"/><text x="95.8605%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="96.7279%" y="341" width="0.2394%" height="15" fill="rgb(207,133,37)" fg:x="1212" fg:w="3"/><text x="96.9779%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="96.8077%" y="325" width="0.1596%" height="15" fill="rgb(250,143,20)" fg:x="1213" fg:w="2"/><text x="97.0577%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="96.8077%" y="309" width="0.1596%" height="15" fill="rgb(242,19,50)" fg:x="1213" fg:w="2"/><text x="97.0577%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (19 samples, 1.52%)</title><rect x="95.5307%" y="389" width="1.5164%" height="15" fill="rgb(206,124,43)" fg:x="1197" fg:w="19"/><text x="95.7807%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 1.44%)</title><rect x="95.6105%" y="373" width="1.4366%" height="15" fill="rgb(229,4,38)" fg:x="1198" fg:w="18"/><text x="95.8605%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="96.9673%" y="357" width="0.0798%" height="15" fill="rgb(247,220,45)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9673%" y="341" width="0.0798%" height="15" fill="rgb(247,195,0)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="97.0471%" y="389" width="0.1596%" height="15" fill="rgb(252,12,19)" fg:x="1216" fg:w="2"/><text x="97.2971%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1269%" y="373" width="0.0798%" height="15" fill="rgb(222,49,50)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (25 samples, 2.00%)</title><rect x="95.2913%" y="437" width="1.9952%" height="15" fill="rgb(209,157,28)" fg:x="1194" fg:w="25"/><text x="95.5413%" y="447.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (25 samples, 2.00%)</title><rect x="95.2913%" y="421" width="1.9952%" height="15" fill="rgb(238,174,24)" fg:x="1194" fg:w="25"/><text x="95.5413%" y="431.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 2.00%)</title><rect x="95.2913%" y="405" width="1.9952%" height="15" fill="rgb(224,17,28)" fg:x="1194" fg:w="25"/><text x="95.5413%" y="415.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2067%" y="389" width="0.0798%" height="15" fill="rgb(249,7,29)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.2865%" y="421" width="0.0798%" height="15" fill="rgb(243,178,4)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.2865%" y="405" width="0.0798%" height="15" fill="rgb(246,138,35)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.23%)</title><rect x="95.2115%" y="485" width="2.2346%" height="15" fill="rgb(251,85,18)" fg:x="1193" fg:w="28"/><text x="95.4615%" y="495.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (28 samples, 2.23%)</title><rect x="95.2115%" y="469" width="2.2346%" height="15" fill="rgb(254,55,9)" fg:x="1193" fg:w="28"/><text x="95.4615%" y="479.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 2.23%)</title><rect x="95.2115%" y="453" width="2.2346%" height="15" fill="rgb(248,4,50)" fg:x="1193" fg:w="28"/><text x="95.4615%" y="463.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.2865%" y="437" width="0.1596%" height="15" fill="rgb(215,208,14)" fg:x="1219" fg:w="2"/><text x="97.5365%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.3663%" y="421" width="0.0798%" height="15" fill="rgb(218,37,18)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5259%" y="437" width="0.0798%" height="15" fill="rgb(206,104,13)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="97.6057%" y="437" width="0.1596%" height="15" fill="rgb(248,94,22)" fg:x="1223" fg:w="2"/><text x="97.8557%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.6057%" y="421" width="0.1596%" height="15" fill="rgb(235,42,46)" fg:x="1223" fg:w="2"/><text x="97.8557%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.6057%" y="405" width="0.1596%" height="15" fill="rgb(220,228,48)" fg:x="1223" fg:w="2"/><text x="97.8557%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8452%" y="389" width="0.0798%" height="15" fill="rgb(216,58,12)" fg:x="1226" fg:w="1"/><text x="98.0952%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8452%" y="373" width="0.0798%" height="15" fill="rgb(223,97,52)" fg:x="1226" fg:w="1"/><text x="98.0952%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8452%" y="357" width="0.0798%" height="15" fill="rgb(208,159,17)" fg:x="1226" fg:w="1"/><text x="98.0952%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.0048%" y="357" width="0.1596%" height="15" fill="rgb(215,172,9)" fg:x="1228" fg:w="2"/><text x="98.2548%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.0048%" y="341" width="0.1596%" height="15" fill="rgb(252,175,30)" fg:x="1228" fg:w="2"/><text x="98.2548%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0846%" y="325" width="0.0798%" height="15" fill="rgb(209,159,10)" fg:x="1229" fg:w="1"/><text x="98.3346%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="98.2442%" y="277" width="0.0798%" height="15" fill="rgb(229,73,51)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="97.8452%" y="405" width="0.5587%" height="15" fill="rgb(208,212,43)" fg:x="1226" fg:w="7"/><text x="98.0952%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="97.9250%" y="389" width="0.4789%" height="15" fill="rgb(254,123,53)" fg:x="1227" fg:w="6"/><text x="98.1750%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="98.0048%" y="373" width="0.3990%" height="15" fill="rgb(254,128,49)" fg:x="1228" fg:w="5"/><text x="98.2548%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="98.1644%" y="357" width="0.2394%" height="15" fill="rgb(246,16,16)" fg:x="1230" fg:w="3"/><text x="98.4144%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="98.1644%" y="341" width="0.2394%" height="15" fill="rgb(209,200,1)" fg:x="1230" fg:w="3"/><text x="98.4144%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="98.2442%" y="325" width="0.1596%" height="15" fill="rgb(235,9,3)" fg:x="1231" fg:w="2"/><text x="98.4942%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="98.2442%" y="309" width="0.1596%" height="15" fill="rgb(233,121,54)" fg:x="1231" fg:w="2"/><text x="98.4942%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="98.2442%" y="293" width="0.1596%" height="15" fill="rgb(236,80,25)" fg:x="1231" fg:w="2"/><text x="98.4942%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3240%" y="277" width="0.0798%" height="15" fill="rgb(220,44,24)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="287.50"></text></g><g><title>plugins_rpc::querying::have_surroundings (95 samples, 7.58%)</title><rect x="90.9018%" y="597" width="7.5818%" height="15" fill="rgb(236,225,16)" fg:x="1139" fg:w="95"/><text x="91.1518%" y="607.50">plugins_rp..</text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (95 samples, 7.58%)</title><rect x="90.9018%" y="581" width="7.5818%" height="15" fill="rgb(237,140,0)" fg:x="1139" fg:w="95"/><text x="91.1518%" y="591.50">&lt;plugins_r..</text></g><g><title>core::iter::adapters::try_process (89 samples, 7.10%)</title><rect x="91.3807%" y="565" width="7.1030%" height="15" fill="rgb(243,225,53)" fg:x="1145" fg:w="89"/><text x="91.6307%" y="575.50">core::iter..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (44 samples, 3.51%)</title><rect x="94.9721%" y="549" width="3.5116%" height="15" fill="rgb(240,140,30)" fg:x="1190" fg:w="44"/><text x="95.2221%" y="559.50">all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (44 samples, 3.51%)</title><rect x="94.9721%" y="533" width="3.5116%" height="15" fill="rgb(217,51,16)" fg:x="1190" fg:w="44"/><text x="95.2221%" y="543.50">&lt;co..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (44 samples, 3.51%)</title><rect x="94.9721%" y="517" width="3.5116%" height="15" fill="rgb(245,75,50)" fg:x="1190" fg:w="44"/><text x="95.2221%" y="527.50">plu..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (41 samples, 3.27%)</title><rect x="95.2115%" y="501" width="3.2721%" height="15" fill="rgb(208,174,22)" fg:x="1193" fg:w="41"/><text x="95.4615%" y="511.50">&lt;rp..</text></g><g><title>kernel::model::EntityPtr::to_json_value (13 samples, 1.04%)</title><rect x="97.4461%" y="485" width="1.0375%" height="15" fill="rgb(219,98,50)" fg:x="1221" fg:w="13"/><text x="97.6961%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.04%)</title><rect x="97.4461%" y="469" width="1.0375%" height="15" fill="rgb(243,138,3)" fg:x="1221" fg:w="13"/><text x="97.6961%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.04%)</title><rect x="97.4461%" y="453" width="1.0375%" height="15" fill="rgb(243,132,26)" fg:x="1221" fg:w="13"/><text x="97.6961%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="97.7654%" y="437" width="0.7183%" height="15" fill="rgb(250,201,8)" fg:x="1225" fg:w="9"/><text x="98.0154%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="97.8452%" y="421" width="0.6385%" height="15" fill="rgb(213,91,26)" fg:x="1226" fg:w="8"/><text x="98.0952%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="98.4038%" y="405" width="0.0798%" height="15" fill="rgb(229,117,1)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4038%" y="389" width="0.0798%" height="15" fill="rgb(229,24,6)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="399.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (105 samples, 8.38%)</title><rect x="90.1836%" y="629" width="8.3799%" height="15" fill="rgb(206,69,11)" fg:x="1130" fg:w="105"/><text x="90.4336%" y="639.50">kernel::plug..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (105 samples, 8.38%)</title><rect x="90.1836%" y="613" width="8.3799%" height="15" fill="rgb(234,111,34)" fg:x="1130" fg:w="105"/><text x="90.4336%" y="623.50">&lt;plugins_dyn..</text></g><g><title>plugins_rpc::sessions::SessionServices::new_for_my_session (1 samples, 0.08%)</title><rect x="98.4836%" y="597" width="0.0798%" height="15" fill="rgb(213,187,51)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (114 samples, 9.10%)</title><rect x="89.6249%" y="645" width="9.0982%" height="15" fill="rgb(207,45,11)" fg:x="1123" fg:w="114"/><text x="89.8749%" y="655.50">&lt;engine::sess..</text></g><g><title>kernel::plugins::mw::apply_middleware (2 samples, 0.16%)</title><rect x="98.5634%" y="629" width="0.1596%" height="15" fill="rgb(225,151,47)" fg:x="1235" fg:w="2"/><text x="98.8134%" y="639.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="98.5634%" y="613" width="0.1596%" height="15" fill="rgb(211,226,5)" fg:x="1235" fg:w="2"/><text x="98.8134%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="98.6433%" y="597" width="0.0798%" height="15" fill="rgb(214,83,52)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7231%" y="565" width="0.0798%" height="15" fill="rgb(229,49,53)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7231%" y="549" width="0.0798%" height="15" fill="rgb(246,8,28)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7231%" y="533" width="0.0798%" height="15" fill="rgb(207,28,41)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7231%" y="517" width="0.0798%" height="15" fill="rgb(254,22,25)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.8029%" y="533" width="0.0798%" height="15" fill="rgb(209,120,42)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.8029%" y="517" width="0.0798%" height="15" fill="rgb(216,194,18)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="98.7231%" y="613" width="0.2394%" height="15" fill="rgb(213,70,17)" fg:x="1237" fg:w="3"/><text x="98.9731%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="98.7231%" y="597" width="0.2394%" height="15" fill="rgb(228,66,19)" fg:x="1237" fg:w="3"/><text x="98.9731%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="98.7231%" y="581" width="0.2394%" height="15" fill="rgb(236,221,54)" fg:x="1237" fg:w="3"/><text x="98.9731%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.8029%" y="565" width="0.1596%" height="15" fill="rgb(207,175,15)" fg:x="1238" fg:w="2"/><text x="99.0529%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.8029%" y="549" width="0.1596%" height="15" fill="rgb(234,76,8)" fg:x="1238" fg:w="2"/><text x="99.0529%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8827%" y="533" width="0.0798%" height="15" fill="rgb(243,106,0)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8827%" y="517" width="0.0798%" height="15" fill="rgb(208,48,19)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.8827%" y="501" width="0.0798%" height="15" fill="rgb(251,50,29)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8827%" y="485" width="0.0798%" height="15" fill="rgb(222,31,49)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8827%" y="469" width="0.0798%" height="15" fill="rgb(232,33,18)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.8827%" y="453" width="0.0798%" height="15" fill="rgb(209,1,44)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.8827%" y="437" width="0.0798%" height="15" fill="rgb(211,7,1)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="98.9625%" y="613" width="0.0798%" height="15" fill="rgb(224,111,27)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0423%" y="485" width="0.0798%" height="15" fill="rgb(252,195,39)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0423%" y="469" width="0.0798%" height="15" fill="rgb(237,198,5)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0423%" y="453" width="0.0798%" height="15" fill="rgb(232,148,1)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="98.7231%" y="645" width="0.4789%" height="15" fill="rgb(249,41,3)" fg:x="1237" fg:w="6"/><text x="98.9731%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="98.7231%" y="629" width="0.4789%" height="15" fill="rgb(215,14,33)" fg:x="1237" fg:w="6"/><text x="98.9731%" y="639.50"></text></g><g><title>kernel::model::entity::Entity::from_str (2 samples, 0.16%)</title><rect x="99.0423%" y="613" width="0.1596%" height="15" fill="rgb(209,146,24)" fg:x="1241" fg:w="2"/><text x="99.2923%" y="623.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.0423%" y="597" width="0.1596%" height="15" fill="rgb(219,51,47)" fg:x="1241" fg:w="2"/><text x="99.2923%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.0423%" y="581" width="0.1596%" height="15" fill="rgb(234,217,40)" fg:x="1241" fg:w="2"/><text x="99.2923%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.0423%" y="565" width="0.1596%" height="15" fill="rgb(228,34,26)" fg:x="1241" fg:w="2"/><text x="99.2923%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.0423%" y="549" width="0.1596%" height="15" fill="rgb(224,50,29)" fg:x="1241" fg:w="2"/><text x="99.2923%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.0423%" y="533" width="0.1596%" height="15" fill="rgb(205,79,51)" fg:x="1241" fg:w="2"/><text x="99.2923%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.0423%" y="517" width="0.1596%" height="15" fill="rgb(218,136,28)" fg:x="1241" fg:w="2"/><text x="99.2923%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.0423%" y="501" width="0.1596%" height="15" fill="rgb(220,150,10)" fg:x="1241" fg:w="2"/><text x="99.2923%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1221%" y="485" width="0.0798%" height="15" fill="rgb(242,158,47)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1221%" y="469" width="0.0798%" height="15" fill="rgb(209,68,0)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1221%" y="453" width="0.0798%" height="15" fill="rgb(208,13,41)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1221%" y="437" width="0.0798%" height="15" fill="rgb(226,201,7)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1221%" y="421" width="0.0798%" height="15" fill="rgb(236,103,26)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1221%" y="405" width="0.0798%" height="15" fill="rgb(243,162,8)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="99.3615%" y="469" width="0.0798%" height="15" fill="rgb(237,225,11)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.3615%" y="501" width="0.1596%" height="15" fill="rgb(247,186,32)" fg:x="1245" fg:w="2"/><text x="99.6115%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3615%" y="485" width="0.1596%" height="15" fill="rgb(215,26,28)" fg:x="1245" fg:w="2"/><text x="99.6115%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.4413%" y="469" width="0.0798%" height="15" fill="rgb(208,121,6)" fg:x="1246" fg:w="1"/><text x="99.6913%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="99.4413%" y="453" width="0.0798%" height="15" fill="rgb(225,91,3)" fg:x="1246" fg:w="1"/><text x="99.6913%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="99.2817%" y="613" width="0.3192%" height="15" fill="rgb(246,119,36)" fg:x="1244" fg:w="4"/><text x="99.5317%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::from_str (4 samples, 0.32%)</title><rect x="99.2817%" y="597" width="0.3192%" height="15" fill="rgb(254,173,2)" fg:x="1244" fg:w="4"/><text x="99.5317%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="99.2817%" y="581" width="0.3192%" height="15" fill="rgb(209,87,54)" fg:x="1244" fg:w="4"/><text x="99.5317%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.2817%" y="565" width="0.3192%" height="15" fill="rgb(223,216,20)" fg:x="1244" fg:w="4"/><text x="99.5317%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="99.3615%" y="549" width="0.2394%" height="15" fill="rgb(220,31,8)" fg:x="1245" fg:w="3"/><text x="99.6115%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.3615%" y="533" width="0.2394%" height="15" fill="rgb(220,185,15)" fg:x="1245" fg:w="3"/><text x="99.6115%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.3615%" y="517" width="0.2394%" height="15" fill="rgb(247,190,50)" fg:x="1245" fg:w="3"/><text x="99.6115%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5211%" y="501" width="0.0798%" height="15" fill="rgb(239,173,47)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5211%" y="485" width="0.0798%" height="15" fill="rgb(218,190,42)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5211%" y="469" width="0.0798%" height="15" fill="rgb(251,207,16)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5211%" y="453" width="0.0798%" height="15" fill="rgb(222,199,47)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5211%" y="437" width="0.0798%" height="15" fill="rgb(245,190,7)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.5211%" y="421" width="0.0798%" height="15" fill="rgb(239,85,38)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (6 samples, 0.48%)</title><rect x="99.2019%" y="645" width="0.4789%" height="15" fill="rgb(229,69,51)" fg:x="1243" fg:w="6"/><text x="99.4519%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="99.2019%" y="629" width="0.4789%" height="15" fill="rgb(231,104,51)" fg:x="1243" fg:w="6"/><text x="99.4519%" y="639.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.6010%" y="613" width="0.0798%" height="15" fill="rgb(235,49,4)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.6010%" y="597" width="0.0798%" height="15" fill="rgb(246,166,20)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="607.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.6808%" y="645" width="0.1596%" height="15" fill="rgb(230,119,37)" fg:x="1249" fg:w="2"/><text x="99.9308%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="99.6808%" y="629" width="0.1596%" height="15" fill="rgb(234,77,34)" fg:x="1249" fg:w="2"/><text x="99.9308%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.6808%" y="613" width="0.1596%" height="15" fill="rgb(211,222,33)" fg:x="1249" fg:w="2"/><text x="99.9308%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.6808%" y="597" width="0.1596%" height="15" fill="rgb(226,45,42)" fg:x="1249" fg:w="2"/><text x="99.9308%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.6808%" y="581" width="0.1596%" height="15" fill="rgb(215,174,28)" fg:x="1249" fg:w="2"/><text x="99.9308%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.7606%" y="565" width="0.0798%" height="15" fill="rgb(254,173,49)" fg:x="1250" fg:w="1"/><text x="100.0106%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.7606%" y="549" width="0.0798%" height="15" fill="rgb(229,191,6)" fg:x="1250" fg:w="1"/><text x="100.0106%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7606%" y="533" width="0.0798%" height="15" fill="rgb(212,145,22)" fg:x="1250" fg:w="1"/><text x="100.0106%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.8404%" y="629" width="0.0798%" height="15" fill="rgb(226,6,51)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.8404%" y="613" width="0.0798%" height="15" fill="rgb(227,128,8)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.8404%" y="597" width="0.0798%" height="15" fill="rgb(205,24,10)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.8404%" y="581" width="0.0798%" height="15" fill="rgb(217,147,27)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.8404%" y="565" width="0.0798%" height="15" fill="rgb(250,82,42)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="99.8404%" y="549" width="0.0798%" height="15" fill="rgb(248,93,17)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.8404%" y="533" width="0.0798%" height="15" fill="rgb(254,212,40)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="543.50"></text></g><g><title>all (1,253 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(229,209,2)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1023.50"></text></g><g><title>simple-484c7248 (1,253 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(211,50,43)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1007.50">simple-484c7248</text></g><g><title>_start (1,253 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(245,196,29)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="991.50">_start</text></g><g><title>__libc_start_main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(216,132,13)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="975.50">__libc_start_main</text></g><g><title>main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(251,108,21)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="959.50">main</text></g><g><title>std::rt::lang_start_internal (1,253 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(229,174,54)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(211,175,47)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(234,5,37)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(244,150,43)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(242,172,38)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(205,27,8)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(217,57,3)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(242,21,38)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,253 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(209,64,43)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(222,2,46)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="799.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,253 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(218,19,44)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(240,203,42)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="767.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,253 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(229,23,45)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="751.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,253 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(205,228,51)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="735.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (278 samples, 22.19%)</title><rect x="77.8132%" y="709" width="22.1868%" height="15" fill="rgb(239,36,20)" fg:x="975" fg:w="278"/><text x="78.0632%" y="719.50">&lt;criterion::routine::Function&lt;M,F,T..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (278 samples, 22.19%)</title><rect x="77.8132%" y="693" width="22.1868%" height="15" fill="rgb(248,172,27)" fg:x="975" fg:w="278"/><text x="78.0632%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (278 samples, 22.19%)</title><rect x="77.8132%" y="677" width="22.1868%" height="15" fill="rgb(244,55,32)" fg:x="975" fg:w="278"/><text x="78.0632%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (130 samples, 10.38%)</title><rect x="89.6249%" y="661" width="10.3751%" height="15" fill="rgb(215,97,16)" fg:x="1123" fg:w="130"/><text x="89.8749%" y="671.50">engine::session..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.8404%" y="645" width="0.1596%" height="15" fill="rgb(224,80,29)" fg:x="1251" fg:w="2"/><text x="100.0904%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.9202%" y="629" width="0.0798%" height="15" fill="rgb(216,93,47)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.9202%" y="613" width="0.0798%" height="15" fill="rgb(238,159,10)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9202%" y="597" width="0.0798%" height="15" fill="rgb(223,98,29)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.9202%" y="581" width="0.0798%" height="15" fill="rgb(210,176,23)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.9202%" y="565" width="0.0798%" height="15" fill="rgb(242,162,27)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.9202%" y="549" width="0.0798%" height="15" fill="rgb(245,109,32)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="559.50"></text></g></svg></svg>