<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1061.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="1252"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0000%" y="645" width="0.0799%" height="15" fill="rgb(226,17,20)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.4792%" y="565" width="0.2396%" height="15" fill="rgb(206,115,35)" fg:x="6" fg:w="3"/><text x="0.7292%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.7188%" y="565" width="0.1597%" height="15" fill="rgb(227,88,1)" fg:x="9" fg:w="2"/><text x="0.9688%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7987%" y="549" width="0.0799%" height="15" fill="rgb(230,222,24)" fg:x="10" fg:w="1"/><text x="1.0487%" y="559.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.9585%" y="549" width="0.3195%" height="15" fill="rgb(214,124,32)" fg:x="12" fg:w="4"/><text x="1.2085%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2780%" y="533" width="0.0799%" height="15" fill="rgb(240,41,36)" fg:x="16" fg:w="1"/><text x="1.5280%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.3578%" y="533" width="0.1597%" height="15" fill="rgb(221,17,52)" fg:x="17" fg:w="2"/><text x="1.6078%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.3578%" y="517" width="0.1597%" height="15" fill="rgb(252,70,16)" fg:x="17" fg:w="2"/><text x="1.6078%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5176%" y="517" width="0.0799%" height="15" fill="rgb(250,177,4)" fg:x="19" fg:w="1"/><text x="1.7676%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.5974%" y="517" width="0.0799%" height="15" fill="rgb(240,188,47)" fg:x="20" fg:w="1"/><text x="1.8474%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5974%" y="501" width="0.0799%" height="15" fill="rgb(215,92,12)" fg:x="20" fg:w="1"/><text x="1.8474%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="0.3994%" y="581" width="1.5176%" height="15" fill="rgb(242,110,29)" fg:x="5" fg:w="19"/><text x="0.6494%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="0.8786%" y="565" width="1.0383%" height="15" fill="rgb(208,211,26)" fg:x="11" fg:w="13"/><text x="1.1286%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="1.2780%" y="549" width="0.6390%" height="15" fill="rgb(244,147,6)" fg:x="16" fg:w="8"/><text x="1.5280%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.5176%" y="533" width="0.3994%" height="15" fill="rgb(211,130,42)" fg:x="19" fg:w="5"/><text x="1.7676%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.6773%" y="517" width="0.2396%" height="15" fill="rgb(220,63,1)" fg:x="21" fg:w="3"/><text x="1.9273%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8371%" y="501" width="0.0799%" height="15" fill="rgb(241,212,30)" fg:x="23" fg:w="1"/><text x="2.0871%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.92%)</title><rect x="0.0799%" y="613" width="1.9169%" height="15" fill="rgb(233,153,17)" fg:x="1" fg:w="24"/><text x="0.3299%" y="623.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.84%)</title><rect x="0.1597%" y="597" width="1.8371%" height="15" fill="rgb(236,3,10)" fg:x="2" fg:w="23"/><text x="0.4097%" y="607.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9169%" y="581" width="0.0799%" height="15" fill="rgb(232,41,21)" fg:x="24" fg:w="1"/><text x="2.1669%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.08%)</title><rect x="0.0000%" y="677" width="2.0767%" height="15" fill="rgb(206,63,51)" fg:x="0" fg:w="26"/><text x="0.2500%" y="687.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (26 samples, 2.08%)</title><rect x="0.0000%" y="661" width="2.0767%" height="15" fill="rgb(250,214,3)" fg:x="0" fg:w="26"/><text x="0.2500%" y="671.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.00%)</title><rect x="0.0799%" y="645" width="1.9968%" height="15" fill="rgb(254,89,27)" fg:x="1" fg:w="25"/><text x="0.3299%" y="655.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (25 samples, 2.00%)</title><rect x="0.0799%" y="629" width="1.9968%" height="15" fill="rgb(249,41,14)" fg:x="1" fg:w="25"/><text x="0.3299%" y="639.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9968%" y="613" width="0.0799%" height="15" fill="rgb(221,196,51)" fg:x="25" fg:w="1"/><text x="2.2468%" y="623.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="2.1565%" y="645" width="0.0799%" height="15" fill="rgb(214,116,26)" fg:x="27" fg:w="1"/><text x="2.4065%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.1565%" y="629" width="0.0799%" height="15" fill="rgb(236,67,7)" fg:x="27" fg:w="1"/><text x="2.4065%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2364%" y="597" width="0.0799%" height="15" fill="rgb(253,179,32)" fg:x="28" fg:w="1"/><text x="2.4864%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.3163%" y="597" width="0.0799%" height="15" fill="rgb(218,33,15)" fg:x="29" fg:w="1"/><text x="2.5663%" y="607.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="2.3163%" y="581" width="0.0799%" height="15" fill="rgb(217,202,41)" fg:x="29" fg:w="1"/><text x="2.5663%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="2.3163%" y="565" width="0.0799%" height="15" fill="rgb(234,133,5)" fg:x="29" fg:w="1"/><text x="2.5663%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.3163%" y="549" width="0.0799%" height="15" fill="rgb(240,47,40)" fg:x="29" fg:w="1"/><text x="2.5663%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.3163%" y="533" width="0.0799%" height="15" fill="rgb(234,166,26)" fg:x="29" fg:w="1"/><text x="2.5663%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="2.3163%" y="517" width="0.0799%" height="15" fill="rgb(244,125,51)" fg:x="29" fg:w="1"/><text x="2.5663%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="2.3163%" y="501" width="0.0799%" height="15" fill="rgb(229,171,11)" fg:x="29" fg:w="1"/><text x="2.5663%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="2.3163%" y="485" width="0.0799%" height="15" fill="rgb(224,38,45)" fg:x="29" fg:w="1"/><text x="2.5663%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="2.3163%" y="469" width="0.0799%" height="15" fill="rgb(237,27,7)" fg:x="29" fg:w="1"/><text x="2.5663%" y="479.50"></text></g><g><title>__asprintf (4 samples, 0.32%)</title><rect x="2.5559%" y="565" width="0.3195%" height="15" fill="rgb(216,52,7)" fg:x="32" fg:w="4"/><text x="2.8059%" y="575.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="2.7955%" y="549" width="0.0799%" height="15" fill="rgb(243,11,11)" fg:x="35" fg:w="1"/><text x="3.0455%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8754%" y="565" width="0.0799%" height="15" fill="rgb(253,167,20)" fg:x="36" fg:w="1"/><text x="3.1254%" y="575.50"></text></g><g><title>pthread_rwlock_rdlock (2 samples, 0.16%)</title><rect x="2.9553%" y="565" width="0.1597%" height="15" fill="rgb(215,207,5)" fg:x="37" fg:w="2"/><text x="3.2053%" y="575.50"></text></g><g><title>dlerror (8 samples, 0.64%)</title><rect x="2.5559%" y="581" width="0.6390%" height="15" fill="rgb(252,127,31)" fg:x="32" fg:w="8"/><text x="2.8059%" y="591.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="3.1150%" y="565" width="0.0799%" height="15" fill="rgb(209,106,27)" fg:x="39" fg:w="1"/><text x="3.3650%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (26 samples, 2.08%)</title><rect x="2.2364%" y="629" width="2.0767%" height="15" fill="rgb(214,220,18)" fg:x="28" fg:w="26"/><text x="2.4864%" y="639.50">k..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (26 samples, 2.08%)</title><rect x="2.2364%" y="613" width="2.0767%" height="15" fill="rgb(237,89,12)" fg:x="28" fg:w="26"/><text x="2.4864%" y="623.50">&lt;..</text></g><g><title>libloading::os::unix::Library::open (24 samples, 1.92%)</title><rect x="2.3962%" y="597" width="1.9169%" height="15" fill="rgb(209,167,36)" fg:x="30" fg:w="24"/><text x="2.6462%" y="607.50">l..</text></g><g><title>dlopen (14 samples, 1.12%)</title><rect x="3.1949%" y="581" width="1.1182%" height="15" fill="rgb(243,45,22)" fg:x="40" fg:w="14"/><text x="3.4449%" y="591.50"></text></g><g><title>_dl_catch_error (13 samples, 1.04%)</title><rect x="3.2748%" y="565" width="1.0383%" height="15" fill="rgb(239,2,46)" fg:x="41" fg:w="13"/><text x="3.5248%" y="575.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.04%)</title><rect x="3.2748%" y="549" width="1.0383%" height="15" fill="rgb(241,101,0)" fg:x="41" fg:w="13"/><text x="3.5248%" y="559.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.04%)</title><rect x="3.2748%" y="533" width="1.0383%" height="15" fill="rgb(244,34,31)" fg:x="41" fg:w="13"/><text x="3.5248%" y="543.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.04%)</title><rect x="3.2748%" y="517" width="1.0383%" height="15" fill="rgb(248,23,22)" fg:x="41" fg:w="13"/><text x="3.5248%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.3131%" y="613" width="0.1597%" height="15" fill="rgb(218,27,48)" fg:x="54" fg:w="2"/><text x="4.5631%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.3930%" y="597" width="0.0799%" height="15" fill="rgb(232,78,1)" fg:x="55" fg:w="1"/><text x="4.6430%" y="607.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (32 samples, 2.56%)</title><rect x="2.0767%" y="677" width="2.5559%" height="15" fill="rgb(233,169,12)" fg:x="26" fg:w="32"/><text x="2.3267%" y="687.50">&lt;e..</text></g><g><title>engine::session::Session::new (31 samples, 2.48%)</title><rect x="2.1565%" y="661" width="2.4760%" height="15" fill="rgb(225,222,54)" fg:x="27" fg:w="31"/><text x="2.4065%" y="671.50">en..</text></g><g><title>engine::session::Session::initialize (30 samples, 2.40%)</title><rect x="2.2364%" y="645" width="2.3962%" height="15" fill="rgb(245,126,29)" fg:x="28" fg:w="30"/><text x="2.4864%" y="655.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="4.3131%" y="629" width="0.3195%" height="15" fill="rgb(241,63,48)" fg:x="54" fg:w="4"/><text x="4.5631%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="4.4728%" y="613" width="0.1597%" height="15" fill="rgb(235,126,38)" fg:x="56" fg:w="2"/><text x="4.7228%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.5527%" y="597" width="0.0799%" height="15" fill="rgb(232,96,49)" fg:x="57" fg:w="1"/><text x="4.8027%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="4.7923%" y="661" width="0.0799%" height="15" fill="rgb(211,146,40)" fg:x="60" fg:w="1"/><text x="5.0423%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.7923%" y="645" width="0.0799%" height="15" fill="rgb(247,93,44)" fg:x="60" fg:w="1"/><text x="5.0423%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="4.8722%" y="645" width="0.0799%" height="15" fill="rgb(251,41,49)" fg:x="61" fg:w="1"/><text x="5.1222%" y="655.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="4.8722%" y="629" width="0.0799%" height="15" fill="rgb(218,155,12)" fg:x="61" fg:w="1"/><text x="5.1222%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.8722%" y="613" width="0.0799%" height="15" fill="rgb(221,161,30)" fg:x="61" fg:w="1"/><text x="5.1222%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.9521%" y="613" width="0.0799%" height="15" fill="rgb(221,179,11)" fg:x="62" fg:w="1"/><text x="5.2021%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.0319%" y="613" width="0.0799%" height="15" fill="rgb(224,170,48)" fg:x="63" fg:w="1"/><text x="5.2819%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="5.0319%" y="597" width="0.0799%" height="15" fill="rgb(223,117,5)" fg:x="63" fg:w="1"/><text x="5.2819%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="5.1917%" y="549" width="0.3994%" height="15" fill="rgb(209,52,20)" fg:x="65" fg:w="5"/><text x="5.4417%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="5.2716%" y="533" width="0.3195%" height="15" fill="rgb(209,19,41)" fg:x="66" fg:w="4"/><text x="5.5216%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.4313%" y="517" width="0.1597%" height="15" fill="rgb(210,177,12)" fg:x="68" fg:w="2"/><text x="5.6813%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.5112%" y="501" width="0.0799%" height="15" fill="rgb(211,159,37)" fg:x="69" fg:w="1"/><text x="5.7612%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="5.1917%" y="565" width="0.5591%" height="15" fill="rgb(209,20,2)" fg:x="65" fg:w="7"/><text x="5.4417%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.5911%" y="549" width="0.1597%" height="15" fill="rgb(244,3,46)" fg:x="70" fg:w="2"/><text x="5.8411%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.6709%" y="533" width="0.0799%" height="15" fill="rgb(220,94,38)" fg:x="71" fg:w="1"/><text x="5.9209%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.8307%" y="501" width="0.0799%" height="15" fill="rgb(253,14,31)" fg:x="73" fg:w="1"/><text x="6.0807%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.8307%" y="485" width="0.0799%" height="15" fill="rgb(234,176,13)" fg:x="73" fg:w="1"/><text x="6.0807%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.8307%" y="469" width="0.0799%" height="15" fill="rgb(218,62,25)" fg:x="73" fg:w="1"/><text x="6.0807%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.8307%" y="453" width="0.0799%" height="15" fill="rgb(216,124,40)" fg:x="73" fg:w="1"/><text x="6.0807%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.7508%" y="549" width="0.2396%" height="15" fill="rgb(228,170,12)" fg:x="72" fg:w="3"/><text x="6.0008%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.7508%" y="533" width="0.2396%" height="15" fill="rgb(231,226,5)" fg:x="72" fg:w="3"/><text x="6.0008%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.8307%" y="517" width="0.1597%" height="15" fill="rgb(237,122,22)" fg:x="73" fg:w="2"/><text x="6.0807%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="5.9105%" y="501" width="0.0799%" height="15" fill="rgb(209,185,25)" fg:x="74" fg:w="1"/><text x="6.1605%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="5.9904%" y="533" width="0.3195%" height="15" fill="rgb(228,200,32)" fg:x="75" fg:w="4"/><text x="6.2404%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.1502%" y="517" width="0.1597%" height="15" fill="rgb(217,140,10)" fg:x="77" fg:w="2"/><text x="6.4002%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.1502%" y="501" width="0.1597%" height="15" fill="rgb(253,17,24)" fg:x="77" fg:w="2"/><text x="6.4002%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.2300%" y="485" width="0.0799%" height="15" fill="rgb(212,61,6)" fg:x="78" fg:w="1"/><text x="6.4800%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.3898%" y="485" width="0.0799%" height="15" fill="rgb(205,14,25)" fg:x="80" fg:w="1"/><text x="6.6398%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.3898%" y="469" width="0.0799%" height="15" fill="rgb(232,69,41)" fg:x="80" fg:w="1"/><text x="6.6398%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.4696%" y="485" width="0.0799%" height="15" fill="rgb(241,106,47)" fg:x="81" fg:w="1"/><text x="6.7196%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.4696%" y="469" width="0.0799%" height="15" fill="rgb(210,213,53)" fg:x="81" fg:w="1"/><text x="6.7196%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.4696%" y="453" width="0.0799%" height="15" fill="rgb(253,175,27)" fg:x="81" fg:w="1"/><text x="6.7196%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="6.3898%" y="517" width="0.2396%" height="15" fill="rgb(211,171,24)" fg:x="80" fg:w="3"/><text x="6.6398%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="6.3898%" y="501" width="0.2396%" height="15" fill="rgb(229,80,7)" fg:x="80" fg:w="3"/><text x="6.6398%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.5495%" y="485" width="0.0799%" height="15" fill="rgb(212,46,39)" fg:x="82" fg:w="1"/><text x="6.7995%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="6.3099%" y="533" width="0.3994%" height="15" fill="rgb(240,80,45)" fg:x="79" fg:w="5"/><text x="6.5599%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.6294%" y="517" width="0.0799%" height="15" fill="rgb(253,177,40)" fg:x="83" fg:w="1"/><text x="6.8794%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="5.9904%" y="549" width="0.8786%" height="15" fill="rgb(249,200,15)" fg:x="75" fg:w="11"/><text x="6.2404%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.7093%" y="533" width="0.1597%" height="15" fill="rgb(217,78,26)" fg:x="84" fg:w="2"/><text x="6.9593%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.92%)</title><rect x="5.1118%" y="581" width="1.9169%" height="15" fill="rgb(254,151,32)" fg:x="64" fg:w="24"/><text x="5.3618%" y="591.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="5.7508%" y="565" width="1.2780%" height="15" fill="rgb(226,165,27)" fg:x="72" fg:w="16"/><text x="6.0008%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.8690%" y="549" width="0.1597%" height="15" fill="rgb(250,206,4)" fg:x="86" fg:w="2"/><text x="7.1190%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.8690%" y="533" width="0.1597%" height="15" fill="rgb(231,229,27)" fg:x="86" fg:w="2"/><text x="7.1190%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.9489%" y="517" width="0.0799%" height="15" fill="rgb(239,217,8)" fg:x="87" fg:w="1"/><text x="7.1989%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.9489%" y="501" width="0.0799%" height="15" fill="rgb(225,204,27)" fg:x="87" fg:w="1"/><text x="7.1989%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.9489%" y="485" width="0.0799%" height="15" fill="rgb(230,56,32)" fg:x="87" fg:w="1"/><text x="7.1989%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.9489%" y="469" width="0.0799%" height="15" fill="rgb(222,56,27)" fg:x="87" fg:w="1"/><text x="7.1989%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.0288%" y="549" width="0.0799%" height="15" fill="rgb(253,108,27)" fg:x="88" fg:w="1"/><text x="7.2788%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.2684%" y="533" width="0.0799%" height="15" fill="rgb(212,87,36)" fg:x="91" fg:w="1"/><text x="7.5184%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.3482%" y="533" width="0.0799%" height="15" fill="rgb(247,82,36)" fg:x="92" fg:w="1"/><text x="7.5982%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="7.4281%" y="517" width="0.1597%" height="15" fill="rgb(222,143,9)" fg:x="93" fg:w="2"/><text x="7.6781%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.5879%" y="501" width="0.0799%" height="15" fill="rgb(238,162,48)" fg:x="95" fg:w="1"/><text x="7.8379%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="7.6677%" y="501" width="0.0799%" height="15" fill="rgb(221,59,43)" fg:x="96" fg:w="1"/><text x="7.9177%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="7.6677%" y="485" width="0.0799%" height="15" fill="rgb(205,166,41)" fg:x="96" fg:w="1"/><text x="7.9177%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.6677%" y="469" width="0.0799%" height="15" fill="rgb(241,186,40)" fg:x="96" fg:w="1"/><text x="7.9177%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="7.0288%" y="581" width="0.8786%" height="15" fill="rgb(216,119,35)" fg:x="88" fg:w="11"/><text x="7.2788%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="7.0288%" y="565" width="0.8786%" height="15" fill="rgb(208,68,38)" fg:x="88" fg:w="11"/><text x="7.2788%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="7.1086%" y="549" width="0.7987%" height="15" fill="rgb(217,113,1)" fg:x="89" fg:w="10"/><text x="7.3586%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="7.4281%" y="533" width="0.4792%" height="15" fill="rgb(242,153,3)" fg:x="93" fg:w="6"/><text x="7.6781%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="7.5879%" y="517" width="0.3195%" height="15" fill="rgb(229,76,35)" fg:x="95" fg:w="4"/><text x="7.8379%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="7.7476%" y="501" width="0.1597%" height="15" fill="rgb(229,125,34)" fg:x="97" fg:w="2"/><text x="7.9976%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.8275%" y="485" width="0.0799%" height="15" fill="rgb(238,179,36)" fg:x="98" fg:w="1"/><text x="8.0775%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.9872%" y="533" width="0.1597%" height="15" fill="rgb(244,183,19)" fg:x="100" fg:w="2"/><text x="8.2372%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.0671%" y="517" width="0.0799%" height="15" fill="rgb(216,85,49)" fg:x="101" fg:w="1"/><text x="8.3171%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="8.0671%" y="501" width="0.0799%" height="15" fill="rgb(208,161,47)" fg:x="101" fg:w="1"/><text x="8.3171%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="8.0671%" y="485" width="0.0799%" height="15" fill="rgb(233,210,18)" fg:x="101" fg:w="1"/><text x="8.3171%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="8.1470%" y="533" width="0.0799%" height="15" fill="rgb(205,104,42)" fg:x="102" fg:w="1"/><text x="8.3970%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="8.2268%" y="533" width="0.0799%" height="15" fill="rgb(248,90,43)" fg:x="103" fg:w="1"/><text x="8.4768%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.2268%" y="517" width="0.0799%" height="15" fill="rgb(206,198,11)" fg:x="103" fg:w="1"/><text x="8.4768%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="8.3067%" y="501" width="0.1597%" height="15" fill="rgb(239,165,27)" fg:x="104" fg:w="2"/><text x="8.5567%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.5463%" y="453" width="0.0799%" height="15" fill="rgb(246,44,32)" fg:x="107" fg:w="1"/><text x="8.7963%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.4665%" y="485" width="0.2396%" height="15" fill="rgb(252,65,42)" fg:x="106" fg:w="3"/><text x="8.7165%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.4665%" y="469" width="0.2396%" height="15" fill="rgb(246,197,18)" fg:x="106" fg:w="3"/><text x="8.7165%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="8.6262%" y="453" width="0.0799%" height="15" fill="rgb(216,192,4)" fg:x="108" fg:w="1"/><text x="8.8762%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.7061%" y="485" width="0.0799%" height="15" fill="rgb(208,117,10)" fg:x="109" fg:w="1"/><text x="8.9561%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7061%" y="469" width="0.0799%" height="15" fill="rgb(240,61,47)" fg:x="109" fg:w="1"/><text x="8.9561%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="8.7061%" y="453" width="0.0799%" height="15" fill="rgb(228,178,21)" fg:x="109" fg:w="1"/><text x="8.9561%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="8.7859%" y="469" width="0.0799%" height="15" fill="rgb(219,96,54)" fg:x="110" fg:w="1"/><text x="9.0359%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="8.9457%" y="421" width="0.1597%" height="15" fill="rgb(250,177,24)" fg:x="112" fg:w="2"/><text x="9.1957%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="8.8658%" y="453" width="0.3195%" height="15" fill="rgb(242,154,46)" fg:x="111" fg:w="4"/><text x="9.1158%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="8.8658%" y="437" width="0.3195%" height="15" fill="rgb(226,176,29)" fg:x="111" fg:w="4"/><text x="9.1158%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="9.1054%" y="421" width="0.0799%" height="15" fill="rgb(226,29,2)" fg:x="114" fg:w="1"/><text x="9.3554%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.1853%" y="421" width="0.0799%" height="15" fill="rgb(237,104,14)" fg:x="115" fg:w="1"/><text x="9.4353%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.4249%" y="389" width="0.1597%" height="15" fill="rgb(245,207,31)" fg:x="118" fg:w="2"/><text x="9.6749%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.4249%" y="373" width="0.1597%" height="15" fill="rgb(229,211,45)" fg:x="118" fg:w="2"/><text x="9.6749%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="9.7444%" y="373" width="0.0799%" height="15" fill="rgb(229,113,15)" fg:x="122" fg:w="1"/><text x="9.9944%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.8243%" y="373" width="0.0799%" height="15" fill="rgb(237,147,15)" fg:x="123" fg:w="1"/><text x="10.0743%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.8243%" y="357" width="0.0799%" height="15" fill="rgb(244,120,12)" fg:x="123" fg:w="1"/><text x="10.0743%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.8243%" y="341" width="0.0799%" height="15" fill="rgb(205,120,12)" fg:x="123" fg:w="1"/><text x="10.0743%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.8243%" y="325" width="0.0799%" height="15" fill="rgb(231,26,45)" fg:x="123" fg:w="1"/><text x="10.0743%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.52%)</title><rect x="8.4665%" y="501" width="1.5176%" height="15" fill="rgb(246,98,1)" fg:x="106" fg:w="19"/><text x="8.7165%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.20%)</title><rect x="8.7859%" y="485" width="1.1981%" height="15" fill="rgb(207,68,45)" fg:x="110" fg:w="15"/><text x="9.0359%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.12%)</title><rect x="8.8658%" y="469" width="1.1182%" height="15" fill="rgb(231,27,38)" fg:x="111" fg:w="14"/><text x="9.1158%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="9.1853%" y="453" width="0.7987%" height="15" fill="rgb(214,223,3)" fg:x="115" fg:w="10"/><text x="9.4353%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="9.1853%" y="437" width="0.7987%" height="15" fill="rgb(228,195,46)" fg:x="115" fg:w="10"/><text x="9.4353%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="9.2652%" y="421" width="0.7188%" height="15" fill="rgb(231,100,42)" fg:x="116" fg:w="9"/><text x="9.5152%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="9.2652%" y="405" width="0.7188%" height="15" fill="rgb(236,53,4)" fg:x="116" fg:w="9"/><text x="9.5152%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="9.5847%" y="389" width="0.3994%" height="15" fill="rgb(230,152,12)" fg:x="120" fg:w="5"/><text x="9.8347%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="9.9042%" y="373" width="0.0799%" height="15" fill="rgb(226,101,19)" fg:x="124" fg:w="1"/><text x="10.1542%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 1.76%)</title><rect x="8.3067%" y="517" width="1.7572%" height="15" fill="rgb(250,149,32)" fg:x="104" fg:w="22"/><text x="8.5567%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="9.9840%" y="501" width="0.0799%" height="15" fill="rgb(232,178,12)" fg:x="125" fg:w="1"/><text x="10.2340%" y="511.50"></text></g><g><title>engine::session::Session::flush (66 samples, 5.27%)</title><rect x="4.8722%" y="661" width="5.2716%" height="15" fill="rgb(246,151,17)" fg:x="61" fg:w="66"/><text x="5.1222%" y="671.50">engine..</text></g><g><title>engine::session::state::State::close (65 samples, 5.19%)</title><rect x="4.9521%" y="645" width="5.1917%" height="15" fill="rgb(252,17,51)" fg:x="62" fg:w="65"/><text x="5.2021%" y="655.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (65 samples, 5.19%)</title><rect x="4.9521%" y="629" width="5.1917%" height="15" fill="rgb(250,207,23)" fg:x="62" fg:w="65"/><text x="5.2021%" y="639.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (63 samples, 5.03%)</title><rect x="5.1118%" y="613" width="5.0319%" height="15" fill="rgb(205,27,5)" fg:x="64" fg:w="63"/><text x="5.3618%" y="623.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (63 samples, 5.03%)</title><rect x="5.1118%" y="597" width="5.0319%" height="15" fill="rgb(224,32,19)" fg:x="64" fg:w="63"/><text x="5.3618%" y="607.50">engine..</text></g><g><title>kernel::model::any_entity_changes (28 samples, 2.24%)</title><rect x="7.9073%" y="581" width="2.2364%" height="15" fill="rgb(247,214,40)" fg:x="99" fg:w="28"/><text x="8.1573%" y="591.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (28 samples, 2.24%)</title><rect x="7.9073%" y="565" width="2.2364%" height="15" fill="rgb(239,199,17)" fg:x="99" fg:w="28"/><text x="8.1573%" y="575.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.24%)</title><rect x="7.9073%" y="549" width="2.2364%" height="15" fill="rgb(251,159,9)" fg:x="99" fg:w="28"/><text x="8.1573%" y="559.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.84%)</title><rect x="8.3067%" y="533" width="1.8371%" height="15" fill="rgb(225,78,32)" fg:x="104" fg:w="23"/><text x="8.5567%" y="543.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.0639%" y="517" width="0.0799%" height="15" fill="rgb(206,97,47)" fg:x="126" fg:w="1"/><text x="10.3139%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1438%" y="485" width="0.0799%" height="15" fill="rgb(227,107,4)" fg:x="127" fg:w="1"/><text x="10.3938%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1438%" y="469" width="0.0799%" height="15" fill="rgb(241,146,50)" fg:x="127" fg:w="1"/><text x="10.3938%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="10.1438%" y="453" width="0.0799%" height="15" fill="rgb(232,92,30)" fg:x="127" fg:w="1"/><text x="10.3938%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="10.1438%" y="437" width="0.0799%" height="15" fill="rgb(222,0,40)" fg:x="127" fg:w="1"/><text x="10.3938%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="10.1438%" y="421" width="0.0799%" height="15" fill="rgb(219,54,33)" fg:x="127" fg:w="1"/><text x="10.3938%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="10.1438%" y="405" width="0.0799%" height="15" fill="rgb(226,209,28)" fg:x="127" fg:w="1"/><text x="10.3938%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.1438%" y="389" width="0.0799%" height="15" fill="rgb(254,205,35)" fg:x="127" fg:w="1"/><text x="10.3938%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.1438%" y="373" width="0.0799%" height="15" fill="rgb(230,159,3)" fg:x="127" fg:w="1"/><text x="10.3938%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.1438%" y="357" width="0.0799%" height="15" fill="rgb(232,190,24)" fg:x="127" fg:w="1"/><text x="10.3938%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="10.1438%" y="341" width="0.0799%" height="15" fill="rgb(217,227,44)" fg:x="127" fg:w="1"/><text x="10.3938%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.1438%" y="325" width="0.0799%" height="15" fill="rgb(236,211,1)" fg:x="127" fg:w="1"/><text x="10.3938%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.1438%" y="309" width="0.0799%" height="15" fill="rgb(250,127,46)" fg:x="127" fg:w="1"/><text x="10.3938%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="10.1438%" y="629" width="0.1597%" height="15" fill="rgb(229,213,6)" fg:x="127" fg:w="2"/><text x="10.3938%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="10.1438%" y="613" width="0.1597%" height="15" fill="rgb(237,15,36)" fg:x="127" fg:w="2"/><text x="10.3938%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="10.1438%" y="597" width="0.1597%" height="15" fill="rgb(213,131,41)" fg:x="127" fg:w="2"/><text x="10.3938%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="10.1438%" y="581" width="0.1597%" height="15" fill="rgb(225,82,44)" fg:x="127" fg:w="2"/><text x="10.3938%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="10.1438%" y="565" width="0.1597%" height="15" fill="rgb(249,42,11)" fg:x="127" fg:w="2"/><text x="10.3938%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="10.1438%" y="549" width="0.1597%" height="15" fill="rgb(253,11,29)" fg:x="127" fg:w="2"/><text x="10.3938%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="10.1438%" y="533" width="0.1597%" height="15" fill="rgb(206,8,54)" fg:x="127" fg:w="2"/><text x="10.3938%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="10.1438%" y="517" width="0.1597%" height="15" fill="rgb(222,186,2)" fg:x="127" fg:w="2"/><text x="10.3938%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="10.1438%" y="501" width="0.1597%" height="15" fill="rgb(221,206,53)" fg:x="127" fg:w="2"/><text x="10.3938%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="10.2236%" y="485" width="0.0799%" height="15" fill="rgb(230,150,21)" fg:x="128" fg:w="1"/><text x="10.4736%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="10.2236%" y="469" width="0.0799%" height="15" fill="rgb(253,202,10)" fg:x="128" fg:w="1"/><text x="10.4736%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="10.2236%" y="453" width="0.0799%" height="15" fill="rgb(238,109,40)" fg:x="128" fg:w="1"/><text x="10.4736%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="10.2236%" y="437" width="0.0799%" height="15" fill="rgb(247,120,22)" fg:x="128" fg:w="1"/><text x="10.4736%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="10.2236%" y="421" width="0.0799%" height="15" fill="rgb(207,43,30)" fg:x="128" fg:w="1"/><text x="10.4736%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.2236%" y="405" width="0.0799%" height="15" fill="rgb(213,211,24)" fg:x="128" fg:w="1"/><text x="10.4736%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.2236%" y="389" width="0.0799%" height="15" fill="rgb(239,73,39)" fg:x="128" fg:w="1"/><text x="10.4736%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="10.2236%" y="373" width="0.0799%" height="15" fill="rgb(245,182,19)" fg:x="128" fg:w="1"/><text x="10.4736%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="10.2236%" y="357" width="0.0799%" height="15" fill="rgb(247,143,26)" fg:x="128" fg:w="1"/><text x="10.4736%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="10.2236%" y="341" width="0.0799%" height="15" fill="rgb(228,191,23)" fg:x="128" fg:w="1"/><text x="10.4736%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="10.2236%" y="325" width="0.0799%" height="15" fill="rgb(253,165,31)" fg:x="128" fg:w="1"/><text x="10.4736%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.2236%" y="309" width="0.0799%" height="15" fill="rgb(234,138,20)" fg:x="128" fg:w="1"/><text x="10.4736%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.2236%" y="293" width="0.0799%" height="15" fill="rgb(218,191,29)" fg:x="128" fg:w="1"/><text x="10.4736%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.2236%" y="277" width="0.0799%" height="15" fill="rgb(221,157,19)" fg:x="128" fg:w="1"/><text x="10.4736%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="10.2236%" y="261" width="0.0799%" height="15" fill="rgb(237,26,42)" fg:x="128" fg:w="1"/><text x="10.4736%" y="271.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="10.2236%" y="245" width="0.0799%" height="15" fill="rgb(220,163,24)" fg:x="128" fg:w="1"/><text x="10.4736%" y="255.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="10.2236%" y="229" width="0.0799%" height="15" fill="rgb(242,115,20)" fg:x="128" fg:w="1"/><text x="10.4736%" y="239.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="10.2236%" y="213" width="0.0799%" height="15" fill="rgb(210,206,9)" fg:x="128" fg:w="1"/><text x="10.4736%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="10.3035%" y="629" width="0.0799%" height="15" fill="rgb(208,71,17)" fg:x="129" fg:w="1"/><text x="10.5535%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="10.3035%" y="613" width="0.0799%" height="15" fill="rgb(233,7,5)" fg:x="129" fg:w="1"/><text x="10.5535%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.3035%" y="597" width="0.0799%" height="15" fill="rgb(207,92,33)" fg:x="129" fg:w="1"/><text x="10.5535%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.3035%" y="581" width="0.0799%" height="15" fill="rgb(218,87,9)" fg:x="129" fg:w="1"/><text x="10.5535%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="10.3834%" y="629" width="0.0799%" height="15" fill="rgb(219,47,37)" fg:x="130" fg:w="1"/><text x="10.6334%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.3834%" y="613" width="0.0799%" height="15" fill="rgb(221,152,34)" fg:x="130" fg:w="1"/><text x="10.6334%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="10.4633%" y="581" width="0.0799%" height="15" fill="rgb(235,176,21)" fg:x="131" fg:w="1"/><text x="10.7133%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.4633%" y="565" width="0.0799%" height="15" fill="rgb(232,212,21)" fg:x="131" fg:w="1"/><text x="10.7133%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4633%" y="549" width="0.0799%" height="15" fill="rgb(245,82,39)" fg:x="131" fg:w="1"/><text x="10.7133%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4633%" y="533" width="0.0799%" height="15" fill="rgb(241,52,51)" fg:x="131" fg:w="1"/><text x="10.7133%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4633%" y="517" width="0.0799%" height="15" fill="rgb(219,91,24)" fg:x="131" fg:w="1"/><text x="10.7133%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4633%" y="501" width="0.0799%" height="15" fill="rgb(241,142,12)" fg:x="131" fg:w="1"/><text x="10.7133%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.4633%" y="485" width="0.0799%" height="15" fill="rgb(230,27,9)" fg:x="131" fg:w="1"/><text x="10.7133%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4633%" y="469" width="0.0799%" height="15" fill="rgb(249,181,32)" fg:x="131" fg:w="1"/><text x="10.7133%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="10.4633%" y="453" width="0.0799%" height="15" fill="rgb(230,107,3)" fg:x="131" fg:w="1"/><text x="10.7133%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.4633%" y="437" width="0.0799%" height="15" fill="rgb(246,204,14)" fg:x="131" fg:w="1"/><text x="10.7133%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="10.5431%" y="565" width="0.0799%" height="15" fill="rgb(213,192,47)" fg:x="132" fg:w="1"/><text x="10.7931%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5431%" y="549" width="0.0799%" height="15" fill="rgb(240,44,36)" fg:x="132" fg:w="1"/><text x="10.7931%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="10.4633%" y="597" width="0.2396%" height="15" fill="rgb(244,209,38)" fg:x="131" fg:w="3"/><text x="10.7133%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="10.5431%" y="581" width="0.1597%" height="15" fill="rgb(219,34,37)" fg:x="132" fg:w="2"/><text x="10.7931%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.6230%" y="565" width="0.0799%" height="15" fill="rgb(210,28,6)" fg:x="133" fg:w="1"/><text x="10.8730%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.6230%" y="549" width="0.0799%" height="15" fill="rgb(244,110,52)" fg:x="133" fg:w="1"/><text x="10.8730%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.6230%" y="533" width="0.0799%" height="15" fill="rgb(254,124,47)" fg:x="133" fg:w="1"/><text x="10.8730%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.6230%" y="517" width="0.0799%" height="15" fill="rgb(254,110,13)" fg:x="133" fg:w="1"/><text x="10.8730%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.6230%" y="501" width="0.0799%" height="15" fill="rgb(252,57,21)" fg:x="133" fg:w="1"/><text x="10.8730%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.6230%" y="485" width="0.0799%" height="15" fill="rgb(242,60,45)" fg:x="133" fg:w="1"/><text x="10.8730%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.6230%" y="469" width="0.0799%" height="15" fill="rgb(234,49,30)" fg:x="133" fg:w="1"/><text x="10.8730%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="10.4633%" y="613" width="0.3195%" height="15" fill="rgb(218,98,6)" fg:x="131" fg:w="4"/><text x="10.7133%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="10.7029%" y="597" width="0.0799%" height="15" fill="rgb(220,174,29)" fg:x="134" fg:w="1"/><text x="10.9529%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.7029%" y="581" width="0.0799%" height="15" fill="rgb(236,163,23)" fg:x="134" fg:w="1"/><text x="10.9529%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.7029%" y="565" width="0.0799%" height="15" fill="rgb(242,114,45)" fg:x="134" fg:w="1"/><text x="10.9529%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.7029%" y="549" width="0.0799%" height="15" fill="rgb(232,10,53)" fg:x="134" fg:w="1"/><text x="10.9529%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.7029%" y="533" width="0.0799%" height="15" fill="rgb(245,108,29)" fg:x="134" fg:w="1"/><text x="10.9529%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.7029%" y="517" width="0.0799%" height="15" fill="rgb(240,89,53)" fg:x="134" fg:w="1"/><text x="10.9529%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="10.7029%" y="501" width="0.0799%" height="15" fill="rgb(226,60,45)" fg:x="134" fg:w="1"/><text x="10.9529%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="10.7029%" y="485" width="0.0799%" height="15" fill="rgb(230,41,44)" fg:x="134" fg:w="1"/><text x="10.9529%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.60%)</title><rect x="10.1438%" y="645" width="1.5974%" height="15" fill="rgb(230,26,20)" fg:x="127" fg:w="20"/><text x="10.3938%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (16 samples, 1.28%)</title><rect x="10.4633%" y="629" width="1.2780%" height="15" fill="rgb(237,170,32)" fg:x="131" fg:w="16"/><text x="10.7133%" y="639.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (12 samples, 0.96%)</title><rect x="10.7827%" y="613" width="0.9585%" height="15" fill="rgb(212,35,42)" fg:x="135" fg:w="12"/><text x="11.0327%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.96%)</title><rect x="10.7827%" y="597" width="0.9585%" height="15" fill="rgb(227,31,34)" fg:x="135" fg:w="12"/><text x="11.0327%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.96%)</title><rect x="10.7827%" y="581" width="0.9585%" height="15" fill="rgb(216,19,18)" fg:x="135" fg:w="12"/><text x="11.0327%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.96%)</title><rect x="10.7827%" y="565" width="0.9585%" height="15" fill="rgb(211,133,42)" fg:x="135" fg:w="12"/><text x="11.0327%" y="575.50"></text></g><g><title>__libc_malloc (12 samples, 0.96%)</title><rect x="10.7827%" y="549" width="0.9585%" height="15" fill="rgb(244,66,13)" fg:x="135" fg:w="12"/><text x="11.0327%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7412%" y="485" width="0.0799%" height="15" fill="rgb(218,185,50)" fg:x="147" fg:w="1"/><text x="11.9912%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.7412%" y="469" width="0.0799%" height="15" fill="rgb(219,149,13)" fg:x="147" fg:w="1"/><text x="11.9912%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.7412%" y="453" width="0.0799%" height="15" fill="rgb(221,125,0)" fg:x="147" fg:w="1"/><text x="11.9912%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.7412%" y="437" width="0.0799%" height="15" fill="rgb(247,126,27)" fg:x="147" fg:w="1"/><text x="11.9912%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.7412%" y="421" width="0.0799%" height="15" fill="rgb(250,138,30)" fg:x="147" fg:w="1"/><text x="11.9912%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.7412%" y="405" width="0.0799%" height="15" fill="rgb(230,151,9)" fg:x="147" fg:w="1"/><text x="11.9912%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="11.7412%" y="389" width="0.0799%" height="15" fill="rgb(233,80,38)" fg:x="147" fg:w="1"/><text x="11.9912%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="11.7412%" y="373" width="0.0799%" height="15" fill="rgb(232,68,43)" fg:x="147" fg:w="1"/><text x="11.9912%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.7412%" y="549" width="0.1597%" height="15" fill="rgb(254,5,50)" fg:x="147" fg:w="2"/><text x="11.9912%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.7412%" y="533" width="0.1597%" height="15" fill="rgb(225,45,5)" fg:x="147" fg:w="2"/><text x="11.9912%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.7412%" y="517" width="0.1597%" height="15" fill="rgb(239,22,3)" fg:x="147" fg:w="2"/><text x="11.9912%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.7412%" y="501" width="0.1597%" height="15" fill="rgb(243,129,0)" fg:x="147" fg:w="2"/><text x="11.9912%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="11.8211%" y="485" width="0.0799%" height="15" fill="rgb(223,164,0)" fg:x="148" fg:w="1"/><text x="12.0711%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="11.8211%" y="469" width="0.0799%" height="15" fill="rgb(221,46,29)" fg:x="148" fg:w="1"/><text x="12.0711%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.9010%" y="517" width="0.0799%" height="15" fill="rgb(205,97,47)" fg:x="149" fg:w="1"/><text x="12.1510%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.0607%" y="485" width="0.0799%" height="15" fill="rgb(249,14,8)" fg:x="151" fg:w="1"/><text x="12.3107%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="11.7412%" y="597" width="0.4792%" height="15" fill="rgb(216,77,3)" fg:x="147" fg:w="6"/><text x="11.9912%" y="607.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="11.7412%" y="581" width="0.4792%" height="15" fill="rgb(206,168,54)" fg:x="147" fg:w="6"/><text x="11.9912%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="11.7412%" y="565" width="0.4792%" height="15" fill="rgb(236,3,41)" fg:x="147" fg:w="6"/><text x="11.9912%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="11.9010%" y="549" width="0.3195%" height="15" fill="rgb(231,132,24)" fg:x="149" fg:w="4"/><text x="12.1510%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="11.9010%" y="533" width="0.3195%" height="15" fill="rgb(227,221,40)" fg:x="149" fg:w="4"/><text x="12.1510%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="11.9808%" y="517" width="0.2396%" height="15" fill="rgb(233,151,11)" fg:x="150" fg:w="3"/><text x="12.2308%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.9808%" y="501" width="0.2396%" height="15" fill="rgb(247,81,35)" fg:x="150" fg:w="3"/><text x="12.2308%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.1406%" y="485" width="0.0799%" height="15" fill="rgb(243,128,48)" fg:x="152" fg:w="1"/><text x="12.3906%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1406%" y="469" width="0.0799%" height="15" fill="rgb(253,16,10)" fg:x="152" fg:w="1"/><text x="12.3906%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="12.1406%" y="453" width="0.0799%" height="15" fill="rgb(228,67,27)" fg:x="152" fg:w="1"/><text x="12.3906%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.1406%" y="437" width="0.0799%" height="15" fill="rgb(231,105,25)" fg:x="152" fg:w="1"/><text x="12.3906%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2204%" y="501" width="0.0799%" height="15" fill="rgb(213,166,47)" fg:x="153" fg:w="1"/><text x="12.4704%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2204%" y="485" width="0.0799%" height="15" fill="rgb(209,27,10)" fg:x="153" fg:w="1"/><text x="12.4704%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.2204%" y="469" width="0.0799%" height="15" fill="rgb(241,44,30)" fg:x="153" fg:w="1"/><text x="12.4704%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.2204%" y="453" width="0.0799%" height="15" fill="rgb(223,216,15)" fg:x="153" fg:w="1"/><text x="12.4704%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.2204%" y="437" width="0.0799%" height="15" fill="rgb(227,14,7)" fg:x="153" fg:w="1"/><text x="12.4704%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2204%" y="421" width="0.0799%" height="15" fill="rgb(237,14,5)" fg:x="153" fg:w="1"/><text x="12.4704%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2204%" y="405" width="0.0799%" height="15" fill="rgb(232,14,36)" fg:x="153" fg:w="1"/><text x="12.4704%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.2204%" y="389" width="0.0799%" height="15" fill="rgb(234,0,38)" fg:x="153" fg:w="1"/><text x="12.4704%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.2204%" y="373" width="0.0799%" height="15" fill="rgb(207,170,14)" fg:x="153" fg:w="1"/><text x="12.4704%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.2204%" y="357" width="0.0799%" height="15" fill="rgb(252,45,13)" fg:x="153" fg:w="1"/><text x="12.4704%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.2204%" y="341" width="0.0799%" height="15" fill="rgb(213,142,7)" fg:x="153" fg:w="1"/><text x="12.4704%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2204%" y="325" width="0.0799%" height="15" fill="rgb(216,157,23)" fg:x="153" fg:w="1"/><text x="12.4704%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.2204%" y="549" width="0.1597%" height="15" fill="rgb(212,145,33)" fg:x="153" fg:w="2"/><text x="12.4704%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.2204%" y="533" width="0.1597%" height="15" fill="rgb(233,26,13)" fg:x="153" fg:w="2"/><text x="12.4704%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.2204%" y="517" width="0.1597%" height="15" fill="rgb(219,196,19)" fg:x="153" fg:w="2"/><text x="12.4704%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3003%" y="501" width="0.0799%" height="15" fill="rgb(246,56,21)" fg:x="154" fg:w="1"/><text x="12.5503%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.3802%" y="549" width="0.0799%" height="15" fill="rgb(222,28,53)" fg:x="155" fg:w="1"/><text x="12.6302%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.3802%" y="533" width="0.0799%" height="15" fill="rgb(224,5,27)" fg:x="155" fg:w="1"/><text x="12.6302%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.3802%" y="517" width="0.0799%" height="15" fill="rgb(220,153,33)" fg:x="155" fg:w="1"/><text x="12.6302%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3802%" y="501" width="0.0799%" height="15" fill="rgb(226,58,19)" fg:x="155" fg:w="1"/><text x="12.6302%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="11.7412%" y="629" width="0.8786%" height="15" fill="rgb(239,112,23)" fg:x="147" fg:w="11"/><text x="11.9912%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (11 samples, 0.88%)</title><rect x="11.7412%" y="613" width="0.8786%" height="15" fill="rgb(251,213,20)" fg:x="147" fg:w="11"/><text x="11.9912%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="12.2204%" y="597" width="0.3994%" height="15" fill="rgb(215,181,21)" fg:x="153" fg:w="5"/><text x="12.4704%" y="607.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="12.2204%" y="581" width="0.3994%" height="15" fill="rgb(240,8,35)" fg:x="153" fg:w="5"/><text x="12.4704%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="12.2204%" y="565" width="0.3994%" height="15" fill="rgb(232,203,3)" fg:x="153" fg:w="5"/><text x="12.4704%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.4601%" y="549" width="0.1597%" height="15" fill="rgb(214,202,43)" fg:x="156" fg:w="2"/><text x="12.7101%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.4601%" y="533" width="0.1597%" height="15" fill="rgb(254,35,11)" fg:x="156" fg:w="2"/><text x="12.7101%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5399%" y="517" width="0.0799%" height="15" fill="rgb(239,173,13)" fg:x="157" fg:w="1"/><text x="12.7899%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5399%" y="501" width="0.0799%" height="15" fill="rgb(220,141,0)" fg:x="157" fg:w="1"/><text x="12.7899%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.5399%" y="485" width="0.0799%" height="15" fill="rgb(210,98,12)" fg:x="157" fg:w="1"/><text x="12.7899%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5399%" y="469" width="0.0799%" height="15" fill="rgb(254,153,22)" fg:x="157" fg:w="1"/><text x="12.7899%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5399%" y="453" width="0.0799%" height="15" fill="rgb(247,223,17)" fg:x="157" fg:w="1"/><text x="12.7899%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5399%" y="437" width="0.0799%" height="15" fill="rgb(246,56,7)" fg:x="157" fg:w="1"/><text x="12.7899%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="12.6198%" y="629" width="0.0799%" height="15" fill="rgb(240,226,12)" fg:x="158" fg:w="1"/><text x="12.8698%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6997%" y="613" width="0.0799%" height="15" fill="rgb(205,87,46)" fg:x="159" fg:w="1"/><text x="12.9497%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7796%" y="581" width="0.0799%" height="15" fill="rgb(245,214,51)" fg:x="160" fg:w="1"/><text x="13.0296%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="12.8594%" y="581" width="0.0799%" height="15" fill="rgb(223,172,33)" fg:x="161" fg:w="1"/><text x="13.1094%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="12.8594%" y="565" width="0.0799%" height="15" fill="rgb(227,203,34)" fg:x="161" fg:w="1"/><text x="13.1094%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8594%" y="549" width="0.0799%" height="15" fill="rgb(248,143,44)" fg:x="161" fg:w="1"/><text x="13.1094%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="12.7796%" y="613" width="0.2396%" height="15" fill="rgb(226,162,5)" fg:x="160" fg:w="3"/><text x="13.0296%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="12.7796%" y="597" width="0.2396%" height="15" fill="rgb(211,143,1)" fg:x="160" fg:w="3"/><text x="13.0296%" y="607.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="12.9393%" y="581" width="0.0799%" height="15" fill="rgb(224,96,15)" fg:x="162" fg:w="1"/><text x="13.1893%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.9393%" y="565" width="0.0799%" height="15" fill="rgb(222,4,38)" fg:x="162" fg:w="1"/><text x="13.1893%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="12.6997%" y="629" width="0.3994%" height="15" fill="rgb(253,228,15)" fg:x="159" fg:w="5"/><text x="12.9497%" y="639.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="13.0192%" y="613" width="0.0799%" height="15" fill="rgb(242,194,12)" fg:x="163" fg:w="1"/><text x="13.2692%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.0192%" y="597" width="0.0799%" height="15" fill="rgb(214,177,31)" fg:x="163" fg:w="1"/><text x="13.2692%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.0192%" y="581" width="0.0799%" height="15" fill="rgb(226,58,51)" fg:x="163" fg:w="1"/><text x="13.2692%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.0192%" y="565" width="0.0799%" height="15" fill="rgb(250,119,16)" fg:x="163" fg:w="1"/><text x="13.2692%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.0990%" y="581" width="0.0799%" height="15" fill="rgb(223,128,53)" fg:x="164" fg:w="1"/><text x="13.3490%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.0990%" y="565" width="0.0799%" height="15" fill="rgb(251,199,15)" fg:x="164" fg:w="1"/><text x="13.3490%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.0990%" y="549" width="0.0799%" height="15" fill="rgb(235,168,42)" fg:x="164" fg:w="1"/><text x="13.3490%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0990%" y="533" width="0.0799%" height="15" fill="rgb(250,210,17)" fg:x="164" fg:w="1"/><text x="13.3490%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0990%" y="517" width="0.0799%" height="15" fill="rgb(226,36,41)" fg:x="164" fg:w="1"/><text x="13.3490%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0990%" y="501" width="0.0799%" height="15" fill="rgb(225,87,10)" fg:x="164" fg:w="1"/><text x="13.3490%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0990%" y="485" width="0.0799%" height="15" fill="rgb(228,83,9)" fg:x="164" fg:w="1"/><text x="13.3490%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.0990%" y="469" width="0.0799%" height="15" fill="rgb(225,16,36)" fg:x="164" fg:w="1"/><text x="13.3490%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0990%" y="453" width="0.0799%" height="15" fill="rgb(242,198,13)" fg:x="164" fg:w="1"/><text x="13.3490%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0990%" y="437" width="0.0799%" height="15" fill="rgb(239,25,51)" fg:x="164" fg:w="1"/><text x="13.3490%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0990%" y="421" width="0.0799%" height="15" fill="rgb(239,28,37)" fg:x="164" fg:w="1"/><text x="13.3490%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (2 samples, 0.16%)</title><rect x="13.2588%" y="565" width="0.1597%" height="15" fill="rgb(234,70,17)" fg:x="166" fg:w="2"/><text x="13.5088%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="13.2588%" y="549" width="0.1597%" height="15" fill="rgb(231,215,53)" fg:x="166" fg:w="2"/><text x="13.5088%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.4185%" y="533" width="0.0799%" height="15" fill="rgb(218,140,42)" fg:x="168" fg:w="1"/><text x="13.6685%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.4185%" y="517" width="0.0799%" height="15" fill="rgb(233,227,45)" fg:x="168" fg:w="1"/><text x="13.6685%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.4185%" y="501" width="0.0799%" height="15" fill="rgb(225,189,21)" fg:x="168" fg:w="1"/><text x="13.6685%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.4185%" y="485" width="0.0799%" height="15" fill="rgb(237,176,54)" fg:x="168" fg:w="1"/><text x="13.6685%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.4185%" y="469" width="0.0799%" height="15" fill="rgb(215,131,46)" fg:x="168" fg:w="1"/><text x="13.6685%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.4185%" y="453" width="0.0799%" height="15" fill="rgb(218,95,20)" fg:x="168" fg:w="1"/><text x="13.6685%" y="463.50"></text></g><g><title>plugins_core::build::Build::holding (44 samples, 3.51%)</title><rect x="10.1438%" y="661" width="3.5144%" height="15" fill="rgb(208,198,12)" fg:x="127" fg:w="44"/><text x="10.3938%" y="671.50">plu..</text></g><g><title>plugins_core::tools::set_container (24 samples, 1.92%)</title><rect x="11.7412%" y="645" width="1.9169%" height="15" fill="rgb(239,107,50)" fg:x="147" fg:w="24"/><text x="11.9912%" y="655.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="13.0990%" y="629" width="0.5591%" height="15" fill="rgb(240,217,37)" fg:x="164" fg:w="7"/><text x="13.3490%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="13.0990%" y="613" width="0.5591%" height="15" fill="rgb(242,197,49)" fg:x="164" fg:w="7"/><text x="13.3490%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="13.0990%" y="597" width="0.5591%" height="15" fill="rgb(219,171,17)" fg:x="164" fg:w="7"/><text x="13.3490%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="13.1789%" y="581" width="0.4792%" height="15" fill="rgb(209,81,40)" fg:x="165" fg:w="6"/><text x="13.4289%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="13.4185%" y="565" width="0.2396%" height="15" fill="rgb(237,156,30)" fg:x="168" fg:w="3"/><text x="13.6685%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.4185%" y="549" width="0.2396%" height="15" fill="rgb(212,127,16)" fg:x="168" fg:w="3"/><text x="13.6685%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.4984%" y="533" width="0.1597%" height="15" fill="rgb(226,66,32)" fg:x="169" fg:w="2"/><text x="13.7484%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.4984%" y="517" width="0.1597%" height="15" fill="rgb(245,22,46)" fg:x="169" fg:w="2"/><text x="13.7484%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.4984%" y="501" width="0.1597%" height="15" fill="rgb(210,112,21)" fg:x="169" fg:w="2"/><text x="13.7484%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.4984%" y="485" width="0.1597%" height="15" fill="rgb(207,118,39)" fg:x="169" fg:w="2"/><text x="13.7484%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="13.4984%" y="469" width="0.1597%" height="15" fill="rgb(205,206,35)" fg:x="169" fg:w="2"/><text x="13.7484%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.4984%" y="453" width="0.1597%" height="15" fill="rgb(222,120,2)" fg:x="169" fg:w="2"/><text x="13.7484%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.4984%" y="437" width="0.1597%" height="15" fill="rgb(205,38,18)" fg:x="169" fg:w="2"/><text x="13.7484%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.4984%" y="421" width="0.1597%" height="15" fill="rgb(226,61,2)" fg:x="169" fg:w="2"/><text x="13.7484%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="13.7380%" y="613" width="0.0799%" height="15" fill="rgb(242,161,23)" fg:x="172" fg:w="1"/><text x="13.9880%" y="623.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="13.8179%" y="549" width="0.0799%" height="15" fill="rgb(213,13,52)" fg:x="173" fg:w="1"/><text x="14.0679%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="13.6581%" y="629" width="0.3994%" height="15" fill="rgb(246,209,47)" fg:x="171" fg:w="5"/><text x="13.9081%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="13.8179%" y="613" width="0.2396%" height="15" fill="rgb(214,41,3)" fg:x="173" fg:w="3"/><text x="14.0679%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="13.8179%" y="597" width="0.2396%" height="15" fill="rgb(236,119,38)" fg:x="173" fg:w="3"/><text x="14.0679%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="13.8179%" y="581" width="0.2396%" height="15" fill="rgb(218,50,11)" fg:x="173" fg:w="3"/><text x="14.0679%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="13.8179%" y="565" width="0.2396%" height="15" fill="rgb(228,38,11)" fg:x="173" fg:w="3"/><text x="14.0679%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="13.8978%" y="549" width="0.1597%" height="15" fill="rgb(212,13,9)" fg:x="174" fg:w="2"/><text x="14.1478%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="13.8978%" y="533" width="0.1597%" height="15" fill="rgb(208,211,9)" fg:x="174" fg:w="2"/><text x="14.1478%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="13.8978%" y="517" width="0.1597%" height="15" fill="rgb(239,39,32)" fg:x="174" fg:w="2"/><text x="14.1478%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="13.8978%" y="501" width="0.1597%" height="15" fill="rgb(254,179,26)" fg:x="174" fg:w="2"/><text x="14.1478%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="13.8978%" y="485" width="0.1597%" height="15" fill="rgb(249,165,28)" fg:x="174" fg:w="2"/><text x="14.1478%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="13.8978%" y="469" width="0.1597%" height="15" fill="rgb(225,59,50)" fg:x="174" fg:w="2"/><text x="14.1478%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="13.8978%" y="453" width="0.1597%" height="15" fill="rgb(209,122,5)" fg:x="174" fg:w="2"/><text x="14.1478%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="13.8978%" y="437" width="0.1597%" height="15" fill="rgb(214,65,34)" fg:x="174" fg:w="2"/><text x="14.1478%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="13.8978%" y="421" width="0.1597%" height="15" fill="rgb(249,183,32)" fg:x="174" fg:w="2"/><text x="14.1478%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.8978%" y="405" width="0.1597%" height="15" fill="rgb(218,122,24)" fg:x="174" fg:w="2"/><text x="14.1478%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.8978%" y="389" width="0.1597%" height="15" fill="rgb(224,109,18)" fg:x="174" fg:w="2"/><text x="14.1478%" y="399.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="13.8978%" y="373" width="0.1597%" height="15" fill="rgb(210,68,50)" fg:x="174" fg:w="2"/><text x="14.1478%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="13.8978%" y="357" width="0.1597%" height="15" fill="rgb(212,184,34)" fg:x="174" fg:w="2"/><text x="14.1478%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="13.8978%" y="341" width="0.1597%" height="15" fill="rgb(238,105,48)" fg:x="174" fg:w="2"/><text x="14.1478%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="13.8978%" y="325" width="0.1597%" height="15" fill="rgb(222,134,54)" fg:x="174" fg:w="2"/><text x="14.1478%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.9776%" y="309" width="0.0799%" height="15" fill="rgb(246,24,43)" fg:x="175" fg:w="1"/><text x="14.2276%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.9776%" y="293" width="0.0799%" height="15" fill="rgb(227,169,22)" fg:x="175" fg:w="1"/><text x="14.2276%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.9776%" y="277" width="0.0799%" height="15" fill="rgb(253,152,4)" fg:x="175" fg:w="1"/><text x="14.2276%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="13.9776%" y="261" width="0.0799%" height="15" fill="rgb(219,158,36)" fg:x="175" fg:w="1"/><text x="14.2276%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.9776%" y="245" width="0.0799%" height="15" fill="rgb(251,128,40)" fg:x="175" fg:w="1"/><text x="14.2276%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="13.9776%" y="229" width="0.0799%" height="15" fill="rgb(254,101,39)" fg:x="175" fg:w="1"/><text x="14.2276%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="13.9776%" y="213" width="0.0799%" height="15" fill="rgb(221,168,40)" fg:x="175" fg:w="1"/><text x="14.2276%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="13.9776%" y="197" width="0.0799%" height="15" fill="rgb(221,14,27)" fg:x="175" fg:w="1"/><text x="14.2276%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.9776%" y="181" width="0.0799%" height="15" fill="rgb(207,36,43)" fg:x="175" fg:w="1"/><text x="14.2276%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0575%" y="581" width="0.0799%" height="15" fill="rgb(240,172,53)" fg:x="176" fg:w="1"/><text x="14.3075%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.0575%" y="565" width="0.0799%" height="15" fill="rgb(241,138,43)" fg:x="176" fg:w="1"/><text x="14.3075%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0575%" y="549" width="0.0799%" height="15" fill="rgb(227,78,19)" fg:x="176" fg:w="1"/><text x="14.3075%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0575%" y="533" width="0.0799%" height="15" fill="rgb(215,127,44)" fg:x="176" fg:w="1"/><text x="14.3075%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0575%" y="517" width="0.0799%" height="15" fill="rgb(227,13,10)" fg:x="176" fg:w="1"/><text x="14.3075%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1374%" y="485" width="0.0799%" height="15" fill="rgb(249,177,6)" fg:x="177" fg:w="1"/><text x="14.3874%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1374%" y="469" width="0.0799%" height="15" fill="rgb(215,154,26)" fg:x="177" fg:w="1"/><text x="14.3874%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="14.0575%" y="629" width="0.2396%" height="15" fill="rgb(250,168,20)" fg:x="176" fg:w="3"/><text x="14.3075%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="14.0575%" y="613" width="0.2396%" height="15" fill="rgb(222,53,38)" fg:x="176" fg:w="3"/><text x="14.3075%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.0575%" y="597" width="0.2396%" height="15" fill="rgb(245,154,5)" fg:x="176" fg:w="3"/><text x="14.3075%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.1374%" y="581" width="0.1597%" height="15" fill="rgb(214,89,50)" fg:x="177" fg:w="2"/><text x="14.3874%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.1374%" y="565" width="0.1597%" height="15" fill="rgb(232,73,14)" fg:x="177" fg:w="2"/><text x="14.3874%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.1374%" y="549" width="0.1597%" height="15" fill="rgb(230,101,20)" fg:x="177" fg:w="2"/><text x="14.3874%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.1374%" y="533" width="0.1597%" height="15" fill="rgb(208,56,28)" fg:x="177" fg:w="2"/><text x="14.3874%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.1374%" y="517" width="0.1597%" height="15" fill="rgb(247,205,22)" fg:x="177" fg:w="2"/><text x="14.3874%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.1374%" y="501" width="0.1597%" height="15" fill="rgb(252,109,51)" fg:x="177" fg:w="2"/><text x="14.3874%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.2173%" y="485" width="0.0799%" height="15" fill="rgb(220,40,24)" fg:x="178" fg:w="1"/><text x="14.4673%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2173%" y="469" width="0.0799%" height="15" fill="rgb(251,108,7)" fg:x="178" fg:w="1"/><text x="14.4673%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.2173%" y="453" width="0.0799%" height="15" fill="rgb(238,102,51)" fg:x="178" fg:w="1"/><text x="14.4673%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2173%" y="437" width="0.0799%" height="15" fill="rgb(219,149,34)" fg:x="178" fg:w="1"/><text x="14.4673%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="14.2173%" y="421" width="0.0799%" height="15" fill="rgb(239,70,0)" fg:x="178" fg:w="1"/><text x="14.4673%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="14.2173%" y="405" width="0.0799%" height="15" fill="rgb(246,214,23)" fg:x="178" fg:w="1"/><text x="14.4673%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="14.2971%" y="629" width="0.0799%" height="15" fill="rgb(239,221,51)" fg:x="179" fg:w="1"/><text x="14.5471%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="14.2971%" y="613" width="0.0799%" height="15" fill="rgb(254,62,14)" fg:x="179" fg:w="1"/><text x="14.5471%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="14.3770%" y="629" width="0.0799%" height="15" fill="rgb(253,57,33)" fg:x="180" fg:w="1"/><text x="14.6270%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.3770%" y="613" width="0.0799%" height="15" fill="rgb(229,34,6)" fg:x="180" fg:w="1"/><text x="14.6270%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.3770%" y="597" width="0.0799%" height="15" fill="rgb(235,191,23)" fg:x="180" fg:w="1"/><text x="14.6270%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.3770%" y="581" width="0.0799%" height="15" fill="rgb(217,207,27)" fg:x="180" fg:w="1"/><text x="14.6270%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.3770%" y="565" width="0.0799%" height="15" fill="rgb(232,41,44)" fg:x="180" fg:w="1"/><text x="14.6270%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.3770%" y="549" width="0.0799%" height="15" fill="rgb(221,188,19)" fg:x="180" fg:w="1"/><text x="14.6270%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (11 samples, 0.88%)</title><rect x="13.6581%" y="661" width="0.8786%" height="15" fill="rgb(245,180,45)" fg:x="171" fg:w="11"/><text x="13.9081%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="13.6581%" y="645" width="0.8786%" height="15" fill="rgb(250,220,42)" fg:x="171" fg:w="11"/><text x="13.9081%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="14.4569%" y="629" width="0.0799%" height="15" fill="rgb(234,16,34)" fg:x="181" fg:w="1"/><text x="14.7069%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="14.4569%" y="613" width="0.0799%" height="15" fill="rgb(233,217,23)" fg:x="181" fg:w="1"/><text x="14.7069%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="14.4569%" y="597" width="0.0799%" height="15" fill="rgb(209,22,46)" fg:x="181" fg:w="1"/><text x="14.7069%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.4569%" y="581" width="0.0799%" height="15" fill="rgb(213,101,18)" fg:x="181" fg:w="1"/><text x="14.7069%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.4569%" y="565" width="0.0799%" height="15" fill="rgb(215,179,52)" fg:x="181" fg:w="1"/><text x="14.7069%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4569%" y="549" width="0.0799%" height="15" fill="rgb(223,50,25)" fg:x="181" fg:w="1"/><text x="14.7069%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4569%" y="533" width="0.0799%" height="15" fill="rgb(224,51,44)" fg:x="181" fg:w="1"/><text x="14.7069%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4569%" y="517" width="0.0799%" height="15" fill="rgb(224,13,54)" fg:x="181" fg:w="1"/><text x="14.7069%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4569%" y="501" width="0.0799%" height="15" fill="rgb(219,58,47)" fg:x="181" fg:w="1"/><text x="14.7069%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.4569%" y="485" width="0.0799%" height="15" fill="rgb(246,124,34)" fg:x="181" fg:w="1"/><text x="14.7069%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4569%" y="469" width="0.0799%" height="15" fill="rgb(245,109,25)" fg:x="181" fg:w="1"/><text x="14.7069%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4569%" y="453" width="0.0799%" height="15" fill="rgb(235,48,23)" fg:x="181" fg:w="1"/><text x="14.7069%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4569%" y="437" width="0.0799%" height="15" fill="rgb(229,203,36)" fg:x="181" fg:w="1"/><text x="14.7069%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="14.7764%" y="645" width="0.0799%" height="15" fill="rgb(234,180,9)" fg:x="185" fg:w="1"/><text x="15.0264%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="14.7764%" y="629" width="0.0799%" height="15" fill="rgb(228,98,45)" fg:x="185" fg:w="1"/><text x="15.0264%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.7764%" y="613" width="0.0799%" height="15" fill="rgb(240,24,36)" fg:x="185" fg:w="1"/><text x="15.0264%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.7764%" y="597" width="0.0799%" height="15" fill="rgb(227,154,19)" fg:x="185" fg:w="1"/><text x="15.0264%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.7764%" y="581" width="0.0799%" height="15" fill="rgb(231,2,48)" fg:x="185" fg:w="1"/><text x="15.0264%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.7764%" y="565" width="0.0799%" height="15" fill="rgb(219,216,0)" fg:x="185" fg:w="1"/><text x="15.0264%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.7764%" y="549" width="0.0799%" height="15" fill="rgb(251,88,0)" fg:x="185" fg:w="1"/><text x="15.0264%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="14.7764%" y="533" width="0.0799%" height="15" fill="rgb(242,45,45)" fg:x="185" fg:w="1"/><text x="15.0264%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.7764%" y="517" width="0.0799%" height="15" fill="rgb(218,149,45)" fg:x="185" fg:w="1"/><text x="15.0264%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.7764%" y="501" width="0.0799%" height="15" fill="rgb(247,194,10)" fg:x="185" fg:w="1"/><text x="15.0264%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.7764%" y="485" width="0.0799%" height="15" fill="rgb(234,33,37)" fg:x="185" fg:w="1"/><text x="15.0264%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.7764%" y="469" width="0.0799%" height="15" fill="rgb(218,61,13)" fg:x="185" fg:w="1"/><text x="15.0264%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.7764%" y="453" width="0.0799%" height="15" fill="rgb(210,80,52)" fg:x="185" fg:w="1"/><text x="15.0264%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="14.7764%" y="437" width="0.0799%" height="15" fill="rgb(218,203,27)" fg:x="185" fg:w="1"/><text x="15.0264%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="14.7764%" y="421" width="0.0799%" height="15" fill="rgb(209,126,33)" fg:x="185" fg:w="1"/><text x="15.0264%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="14.7764%" y="405" width="0.0799%" height="15" fill="rgb(234,173,41)" fg:x="185" fg:w="1"/><text x="15.0264%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="14.7764%" y="389" width="0.0799%" height="15" fill="rgb(228,166,9)" fg:x="185" fg:w="1"/><text x="15.0264%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.7764%" y="373" width="0.0799%" height="15" fill="rgb(208,124,43)" fg:x="185" fg:w="1"/><text x="15.0264%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.7764%" y="357" width="0.0799%" height="15" fill="rgb(212,154,38)" fg:x="185" fg:w="1"/><text x="15.0264%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.7764%" y="341" width="0.0799%" height="15" fill="rgb(246,179,35)" fg:x="185" fg:w="1"/><text x="15.0264%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="14.7764%" y="325" width="0.0799%" height="15" fill="rgb(251,3,50)" fg:x="185" fg:w="1"/><text x="15.0264%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.7764%" y="309" width="0.0799%" height="15" fill="rgb(219,96,8)" fg:x="185" fg:w="1"/><text x="15.0264%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="14.7764%" y="293" width="0.0799%" height="15" fill="rgb(251,216,33)" fg:x="185" fg:w="1"/><text x="15.0264%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="14.7764%" y="277" width="0.0799%" height="15" fill="rgb(243,145,29)" fg:x="185" fg:w="1"/><text x="15.0264%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="14.7764%" y="261" width="0.0799%" height="15" fill="rgb(210,75,20)" fg:x="185" fg:w="1"/><text x="15.0264%" y="271.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.8562%" y="645" width="0.0799%" height="15" fill="rgb(235,56,8)" fg:x="186" fg:w="1"/><text x="15.1062%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="14.9361%" y="645" width="0.1597%" height="15" fill="rgb(226,175,49)" fg:x="187" fg:w="2"/><text x="15.1861%" y="655.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="14.9361%" y="629" width="0.1597%" height="15" fill="rgb(242,204,23)" fg:x="187" fg:w="2"/><text x="15.1861%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.9361%" y="613" width="0.1597%" height="15" fill="rgb(225,104,24)" fg:x="187" fg:w="2"/><text x="15.1861%" y="623.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="15.0160%" y="597" width="0.0799%" height="15" fill="rgb(253,34,1)" fg:x="188" fg:w="1"/><text x="15.2660%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.0160%" y="581" width="0.0799%" height="15" fill="rgb(233,199,23)" fg:x="188" fg:w="1"/><text x="15.2660%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.0160%" y="565" width="0.0799%" height="15" fill="rgb(247,7,51)" fg:x="188" fg:w="1"/><text x="15.2660%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="15.0160%" y="549" width="0.0799%" height="15" fill="rgb(214,146,12)" fg:x="188" fg:w="1"/><text x="15.2660%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1757%" y="597" width="0.0799%" height="15" fill="rgb(234,181,43)" fg:x="190" fg:w="1"/><text x="15.4257%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1757%" y="581" width="0.0799%" height="15" fill="rgb(239,148,6)" fg:x="190" fg:w="1"/><text x="15.4257%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1757%" y="565" width="0.0799%" height="15" fill="rgb(206,151,17)" fg:x="190" fg:w="1"/><text x="15.4257%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.1757%" y="549" width="0.0799%" height="15" fill="rgb(213,215,10)" fg:x="190" fg:w="1"/><text x="15.4257%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.1757%" y="533" width="0.0799%" height="15" fill="rgb(215,220,44)" fg:x="190" fg:w="1"/><text x="15.4257%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.1757%" y="517" width="0.0799%" height="15" fill="rgb(245,205,37)" fg:x="190" fg:w="1"/><text x="15.4257%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="15.1757%" y="501" width="0.0799%" height="15" fill="rgb(245,130,43)" fg:x="190" fg:w="1"/><text x="15.4257%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="15.1757%" y="485" width="0.0799%" height="15" fill="rgb(231,227,38)" fg:x="190" fg:w="1"/><text x="15.4257%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="15.2556%" y="597" width="0.0799%" height="15" fill="rgb(233,185,4)" fg:x="191" fg:w="1"/><text x="15.5056%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="15.2556%" y="581" width="0.0799%" height="15" fill="rgb(224,154,43)" fg:x="191" fg:w="1"/><text x="15.5056%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.2556%" y="565" width="0.0799%" height="15" fill="rgb(235,156,15)" fg:x="191" fg:w="1"/><text x="15.5056%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.2556%" y="549" width="0.0799%" height="15" fill="rgb(211,55,43)" fg:x="191" fg:w="1"/><text x="15.5056%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="15.4153%" y="565" width="0.0799%" height="15" fill="rgb(247,149,40)" fg:x="193" fg:w="1"/><text x="15.6653%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.4153%" y="549" width="0.0799%" height="15" fill="rgb(232,171,16)" fg:x="193" fg:w="1"/><text x="15.6653%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.4153%" y="533" width="0.0799%" height="15" fill="rgb(215,117,49)" fg:x="193" fg:w="1"/><text x="15.6653%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.4153%" y="517" width="0.0799%" height="15" fill="rgb(246,194,11)" fg:x="193" fg:w="1"/><text x="15.6653%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.4153%" y="501" width="0.0799%" height="15" fill="rgb(242,101,44)" fg:x="193" fg:w="1"/><text x="15.6653%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.4153%" y="485" width="0.0799%" height="15" fill="rgb(226,174,6)" fg:x="193" fg:w="1"/><text x="15.6653%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="15.4153%" y="469" width="0.0799%" height="15" fill="rgb(213,150,20)" fg:x="193" fg:w="1"/><text x="15.6653%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.4153%" y="453" width="0.0799%" height="15" fill="rgb(222,124,42)" fg:x="193" fg:w="1"/><text x="15.6653%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.4153%" y="437" width="0.0799%" height="15" fill="rgb(250,19,47)" fg:x="193" fg:w="1"/><text x="15.6653%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.4153%" y="421" width="0.0799%" height="15" fill="rgb(241,217,19)" fg:x="193" fg:w="1"/><text x="15.6653%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="15.4153%" y="405" width="0.0799%" height="15" fill="rgb(207,210,34)" fg:x="193" fg:w="1"/><text x="15.6653%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.4153%" y="389" width="0.0799%" height="15" fill="rgb(244,45,4)" fg:x="193" fg:w="1"/><text x="15.6653%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.4153%" y="373" width="0.0799%" height="15" fill="rgb(252,134,50)" fg:x="193" fg:w="1"/><text x="15.6653%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.4952%" y="485" width="0.0799%" height="15" fill="rgb(238,74,2)" fg:x="194" fg:w="1"/><text x="15.7452%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.4952%" y="469" width="0.0799%" height="15" fill="rgb(226,58,46)" fg:x="194" fg:w="1"/><text x="15.7452%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.4952%" y="517" width="0.1597%" height="15" fill="rgb(232,83,35)" fg:x="194" fg:w="2"/><text x="15.7452%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="15.4952%" y="501" width="0.1597%" height="15" fill="rgb(212,148,47)" fg:x="194" fg:w="2"/><text x="15.7452%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5751%" y="485" width="0.0799%" height="15" fill="rgb(235,29,1)" fg:x="195" fg:w="1"/><text x="15.8251%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.5751%" y="469" width="0.0799%" height="15" fill="rgb(247,55,37)" fg:x="195" fg:w="1"/><text x="15.8251%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5751%" y="453" width="0.0799%" height="15" fill="rgb(222,48,3)" fg:x="195" fg:w="1"/><text x="15.8251%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="15.4952%" y="565" width="0.3195%" height="15" fill="rgb(234,21,33)" fg:x="194" fg:w="4"/><text x="15.7452%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="15.4952%" y="549" width="0.3195%" height="15" fill="rgb(247,178,53)" fg:x="194" fg:w="4"/><text x="15.7452%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="15.4952%" y="533" width="0.3195%" height="15" fill="rgb(225,75,7)" fg:x="194" fg:w="4"/><text x="15.7452%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.6550%" y="517" width="0.1597%" height="15" fill="rgb(219,199,7)" fg:x="196" fg:w="2"/><text x="15.9050%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.6550%" y="501" width="0.1597%" height="15" fill="rgb(209,93,42)" fg:x="196" fg:w="2"/><text x="15.9050%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.6550%" y="485" width="0.1597%" height="15" fill="rgb(240,175,17)" fg:x="196" fg:w="2"/><text x="15.9050%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.6550%" y="469" width="0.1597%" height="15" fill="rgb(232,106,7)" fg:x="196" fg:w="2"/><text x="15.9050%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="15.6550%" y="453" width="0.1597%" height="15" fill="rgb(242,106,43)" fg:x="196" fg:w="2"/><text x="15.9050%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.6550%" y="437" width="0.1597%" height="15" fill="rgb(242,61,37)" fg:x="196" fg:w="2"/><text x="15.9050%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.6550%" y="421" width="0.1597%" height="15" fill="rgb(205,72,10)" fg:x="196" fg:w="2"/><text x="15.9050%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.6550%" y="405" width="0.1597%" height="15" fill="rgb(214,184,36)" fg:x="196" fg:w="2"/><text x="15.9050%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7348%" y="389" width="0.0799%" height="15" fill="rgb(206,107,18)" fg:x="197" fg:w="1"/><text x="15.9848%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="15.3355%" y="597" width="0.5591%" height="15" fill="rgb(210,75,5)" fg:x="192" fg:w="7"/><text x="15.5855%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="15.4153%" y="581" width="0.4792%" height="15" fill="rgb(205,3,19)" fg:x="193" fg:w="6"/><text x="15.6653%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="15.8147%" y="565" width="0.0799%" height="15" fill="rgb(207,181,42)" fg:x="198" fg:w="1"/><text x="16.0647%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8147%" y="549" width="0.0799%" height="15" fill="rgb(229,179,43)" fg:x="198" fg:w="1"/><text x="16.0647%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8147%" y="533" width="0.0799%" height="15" fill="rgb(246,95,30)" fg:x="198" fg:w="1"/><text x="16.0647%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.8147%" y="517" width="0.0799%" height="15" fill="rgb(234,144,45)" fg:x="198" fg:w="1"/><text x="16.0647%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.8147%" y="501" width="0.0799%" height="15" fill="rgb(250,54,25)" fg:x="198" fg:w="1"/><text x="16.0647%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.8147%" y="485" width="0.0799%" height="15" fill="rgb(215,195,40)" fg:x="198" fg:w="1"/><text x="16.0647%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.8147%" y="469" width="0.0799%" height="15" fill="rgb(233,188,42)" fg:x="198" fg:w="1"/><text x="16.0647%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.8147%" y="453" width="0.0799%" height="15" fill="rgb(247,227,35)" fg:x="198" fg:w="1"/><text x="16.0647%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.8147%" y="437" width="0.0799%" height="15" fill="rgb(249,124,27)" fg:x="198" fg:w="1"/><text x="16.0647%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.8147%" y="421" width="0.0799%" height="15" fill="rgb(219,207,25)" fg:x="198" fg:w="1"/><text x="16.0647%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.8147%" y="405" width="0.0799%" height="15" fill="rgb(241,216,47)" fg:x="198" fg:w="1"/><text x="16.0647%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.8147%" y="389" width="0.0799%" height="15" fill="rgb(233,82,50)" fg:x="198" fg:w="1"/><text x="16.0647%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8147%" y="373" width="0.0799%" height="15" fill="rgb(232,63,2)" fg:x="198" fg:w="1"/><text x="16.0647%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="15.9744%" y="565" width="0.0799%" height="15" fill="rgb(236,184,28)" fg:x="200" fg:w="1"/><text x="16.2244%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="15.9744%" y="549" width="0.0799%" height="15" fill="rgb(254,63,27)" fg:x="200" fg:w="1"/><text x="16.2244%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="15.9744%" y="533" width="0.0799%" height="15" fill="rgb(253,106,28)" fg:x="200" fg:w="1"/><text x="16.2244%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0543%" y="469" width="0.0799%" height="15" fill="rgb(225,141,39)" fg:x="201" fg:w="1"/><text x="16.3043%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0543%" y="453" width="0.0799%" height="15" fill="rgb(222,157,20)" fg:x="201" fg:w="1"/><text x="16.3043%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0543%" y="437" width="0.0799%" height="15" fill="rgb(210,190,9)" fg:x="201" fg:w="1"/><text x="16.3043%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.0543%" y="565" width="0.1597%" height="15" fill="rgb(242,167,7)" fg:x="201" fg:w="2"/><text x="16.3043%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.0543%" y="549" width="0.1597%" height="15" fill="rgb(227,82,41)" fg:x="201" fg:w="2"/><text x="16.3043%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.0543%" y="533" width="0.1597%" height="15" fill="rgb(222,131,13)" fg:x="201" fg:w="2"/><text x="16.3043%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.0543%" y="517" width="0.1597%" height="15" fill="rgb(221,98,26)" fg:x="201" fg:w="2"/><text x="16.3043%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.0543%" y="501" width="0.1597%" height="15" fill="rgb(251,63,52)" fg:x="201" fg:w="2"/><text x="16.3043%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.0543%" y="485" width="0.1597%" height="15" fill="rgb(246,25,43)" fg:x="201" fg:w="2"/><text x="16.3043%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1342%" y="469" width="0.0799%" height="15" fill="rgb(247,167,15)" fg:x="202" fg:w="1"/><text x="16.3842%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1342%" y="453" width="0.0799%" height="15" fill="rgb(240,104,42)" fg:x="202" fg:w="1"/><text x="16.3842%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.1342%" y="437" width="0.0799%" height="15" fill="rgb(224,54,6)" fg:x="202" fg:w="1"/><text x="16.3842%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.1342%" y="421" width="0.0799%" height="15" fill="rgb(244,108,35)" fg:x="202" fg:w="1"/><text x="16.3842%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.1342%" y="405" width="0.0799%" height="15" fill="rgb(216,154,2)" fg:x="202" fg:w="1"/><text x="16.3842%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.1342%" y="389" width="0.0799%" height="15" fill="rgb(222,8,47)" fg:x="202" fg:w="1"/><text x="16.3842%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.1342%" y="373" width="0.0799%" height="15" fill="rgb(252,93,1)" fg:x="202" fg:w="1"/><text x="16.3842%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.1342%" y="357" width="0.0799%" height="15" fill="rgb(223,226,51)" fg:x="202" fg:w="1"/><text x="16.3842%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.1342%" y="341" width="0.0799%" height="15" fill="rgb(206,147,9)" fg:x="202" fg:w="1"/><text x="16.3842%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.1342%" y="325" width="0.0799%" height="15" fill="rgb(248,180,41)" fg:x="202" fg:w="1"/><text x="16.3842%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.1342%" y="309" width="0.0799%" height="15" fill="rgb(209,47,50)" fg:x="202" fg:w="1"/><text x="16.3842%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1342%" y="293" width="0.0799%" height="15" fill="rgb(243,65,31)" fg:x="202" fg:w="1"/><text x="16.3842%" y="303.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="16.2141%" y="565" width="0.0799%" height="15" fill="rgb(228,128,1)" fg:x="203" fg:w="1"/><text x="16.4641%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.2141%" y="549" width="0.0799%" height="15" fill="rgb(231,192,16)" fg:x="203" fg:w="1"/><text x="16.4641%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="16.2141%" y="533" width="0.0799%" height="15" fill="rgb(224,26,40)" fg:x="203" fg:w="1"/><text x="16.4641%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.2141%" y="517" width="0.0799%" height="15" fill="rgb(214,192,17)" fg:x="203" fg:w="1"/><text x="16.4641%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.2141%" y="501" width="0.0799%" height="15" fill="rgb(225,147,18)" fg:x="203" fg:w="1"/><text x="16.4641%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.2939%" y="517" width="0.1597%" height="15" fill="rgb(205,35,11)" fg:x="204" fg:w="2"/><text x="16.5439%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.2939%" y="501" width="0.1597%" height="15" fill="rgb(242,40,42)" fg:x="204" fg:w="2"/><text x="16.5439%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.2939%" y="485" width="0.1597%" height="15" fill="rgb(250,170,13)" fg:x="204" fg:w="2"/><text x="16.5439%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.2939%" y="469" width="0.1597%" height="15" fill="rgb(240,161,28)" fg:x="204" fg:w="2"/><text x="16.5439%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.3738%" y="453" width="0.0799%" height="15" fill="rgb(245,179,12)" fg:x="205" fg:w="1"/><text x="16.6238%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3738%" y="437" width="0.0799%" height="15" fill="rgb(250,92,32)" fg:x="205" fg:w="1"/><text x="16.6238%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.3738%" y="421" width="0.0799%" height="15" fill="rgb(233,10,40)" fg:x="205" fg:w="1"/><text x="16.6238%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3738%" y="405" width="0.0799%" height="15" fill="rgb(217,98,1)" fg:x="205" fg:w="1"/><text x="16.6238%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.3738%" y="389" width="0.0799%" height="15" fill="rgb(238,202,7)" fg:x="205" fg:w="1"/><text x="16.6238%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3738%" y="373" width="0.0799%" height="15" fill="rgb(222,91,3)" fg:x="205" fg:w="1"/><text x="16.6238%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.3738%" y="357" width="0.0799%" height="15" fill="rgb(211,170,49)" fg:x="205" fg:w="1"/><text x="16.6238%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3738%" y="341" width="0.0799%" height="15" fill="rgb(253,139,18)" fg:x="205" fg:w="1"/><text x="16.6238%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.3738%" y="325" width="0.0799%" height="15" fill="rgb(222,4,43)" fg:x="205" fg:w="1"/><text x="16.6238%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.3738%" y="309" width="0.0799%" height="15" fill="rgb(207,205,12)" fg:x="205" fg:w="1"/><text x="16.6238%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="16.2939%" y="565" width="0.2396%" height="15" fill="rgb(216,159,46)" fg:x="204" fg:w="3"/><text x="16.5439%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="16.2939%" y="549" width="0.2396%" height="15" fill="rgb(236,115,1)" fg:x="204" fg:w="3"/><text x="16.5439%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="16.2939%" y="533" width="0.2396%" height="15" fill="rgb(251,35,33)" fg:x="204" fg:w="3"/><text x="16.5439%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.4537%" y="517" width="0.0799%" height="15" fill="rgb(248,62,51)" fg:x="206" fg:w="1"/><text x="16.7037%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.4537%" y="501" width="0.0799%" height="15" fill="rgb(254,180,19)" fg:x="206" fg:w="1"/><text x="16.7037%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4537%" y="485" width="0.0799%" height="15" fill="rgb(217,100,32)" fg:x="206" fg:w="1"/><text x="16.7037%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.4537%" y="469" width="0.0799%" height="15" fill="rgb(224,71,22)" fg:x="206" fg:w="1"/><text x="16.7037%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.4537%" y="453" width="0.0799%" height="15" fill="rgb(251,185,33)" fg:x="206" fg:w="1"/><text x="16.7037%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.4537%" y="437" width="0.0799%" height="15" fill="rgb(209,75,48)" fg:x="206" fg:w="1"/><text x="16.7037%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.4537%" y="421" width="0.0799%" height="15" fill="rgb(253,190,16)" fg:x="206" fg:w="1"/><text x="16.7037%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.4537%" y="405" width="0.0799%" height="15" fill="rgb(226,140,1)" fg:x="206" fg:w="1"/><text x="16.7037%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.4537%" y="389" width="0.0799%" height="15" fill="rgb(206,75,30)" fg:x="206" fg:w="1"/><text x="16.7037%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.4537%" y="373" width="0.0799%" height="15" fill="rgb(231,208,37)" fg:x="206" fg:w="1"/><text x="16.7037%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.4537%" y="357" width="0.0799%" height="15" fill="rgb(238,136,40)" fg:x="206" fg:w="1"/><text x="16.7037%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="15.9744%" y="581" width="0.6390%" height="15" fill="rgb(247,137,17)" fg:x="200" fg:w="8"/><text x="16.2244%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="16.5335%" y="565" width="0.0799%" height="15" fill="rgb(240,60,40)" fg:x="207" fg:w="1"/><text x="16.7835%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5335%" y="549" width="0.0799%" height="15" fill="rgb(236,68,50)" fg:x="207" fg:w="1"/><text x="16.7835%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5335%" y="533" width="0.0799%" height="15" fill="rgb(230,42,12)" fg:x="207" fg:w="1"/><text x="16.7835%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.5335%" y="517" width="0.0799%" height="15" fill="rgb(219,16,16)" fg:x="207" fg:w="1"/><text x="16.7835%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.5335%" y="501" width="0.0799%" height="15" fill="rgb(220,38,35)" fg:x="207" fg:w="1"/><text x="16.7835%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.5335%" y="485" width="0.0799%" height="15" fill="rgb(228,33,1)" fg:x="207" fg:w="1"/><text x="16.7835%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.5335%" y="469" width="0.0799%" height="15" fill="rgb(241,46,31)" fg:x="207" fg:w="1"/><text x="16.7835%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.5335%" y="453" width="0.0799%" height="15" fill="rgb(232,58,20)" fg:x="207" fg:w="1"/><text x="16.7835%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.5335%" y="437" width="0.0799%" height="15" fill="rgb(206,228,53)" fg:x="207" fg:w="1"/><text x="16.7835%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.5335%" y="421" width="0.0799%" height="15" fill="rgb(206,88,33)" fg:x="207" fg:w="1"/><text x="16.7835%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.5335%" y="405" width="0.0799%" height="15" fill="rgb(238,69,7)" fg:x="207" fg:w="1"/><text x="16.7835%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.5335%" y="389" width="0.0799%" height="15" fill="rgb(250,21,46)" fg:x="207" fg:w="1"/><text x="16.7835%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6933%" y="405" width="0.0799%" height="15" fill="rgb(215,212,21)" fg:x="209" fg:w="1"/><text x="16.9433%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6933%" y="389" width="0.0799%" height="15" fill="rgb(211,35,12)" fg:x="209" fg:w="1"/><text x="16.9433%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.6933%" y="373" width="0.0799%" height="15" fill="rgb(231,184,16)" fg:x="209" fg:w="1"/><text x="16.9433%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.6933%" y="357" width="0.0799%" height="15" fill="rgb(242,140,15)" fg:x="209" fg:w="1"/><text x="16.9433%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.6933%" y="341" width="0.0799%" height="15" fill="rgb(220,37,14)" fg:x="209" fg:w="1"/><text x="16.9433%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.6933%" y="325" width="0.0799%" height="15" fill="rgb(223,146,22)" fg:x="209" fg:w="1"/><text x="16.9433%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.6933%" y="309" width="0.0799%" height="15" fill="rgb(216,132,15)" fg:x="209" fg:w="1"/><text x="16.9433%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.6933%" y="293" width="0.0799%" height="15" fill="rgb(248,83,5)" fg:x="209" fg:w="1"/><text x="16.9433%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.6933%" y="277" width="0.0799%" height="15" fill="rgb(231,206,48)" fg:x="209" fg:w="1"/><text x="16.9433%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.6933%" y="261" width="0.0799%" height="15" fill="rgb(253,185,37)" fg:x="209" fg:w="1"/><text x="16.9433%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.6933%" y="245" width="0.0799%" height="15" fill="rgb(208,21,44)" fg:x="209" fg:w="1"/><text x="16.9433%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.6933%" y="229" width="0.0799%" height="15" fill="rgb(236,125,4)" fg:x="209" fg:w="1"/><text x="16.9433%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.6933%" y="421" width="0.1597%" height="15" fill="rgb(226,134,25)" fg:x="209" fg:w="2"/><text x="16.9433%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7732%" y="405" width="0.0799%" height="15" fill="rgb(250,201,12)" fg:x="210" fg:w="1"/><text x="17.0232%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.6933%" y="453" width="0.2396%" height="15" fill="rgb(225,92,18)" fg:x="209" fg:w="3"/><text x="16.9433%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.6933%" y="437" width="0.2396%" height="15" fill="rgb(227,35,22)" fg:x="209" fg:w="3"/><text x="16.9433%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.8530%" y="421" width="0.0799%" height="15" fill="rgb(214,180,52)" fg:x="211" fg:w="1"/><text x="17.1030%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.8530%" y="405" width="0.0799%" height="15" fill="rgb(233,55,38)" fg:x="211" fg:w="1"/><text x="17.1030%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.8530%" y="389" width="0.0799%" height="15" fill="rgb(249,171,43)" fg:x="211" fg:w="1"/><text x="17.1030%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.8530%" y="373" width="0.0799%" height="15" fill="rgb(239,87,2)" fg:x="211" fg:w="1"/><text x="17.1030%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.8530%" y="357" width="0.0799%" height="15" fill="rgb(248,141,5)" fg:x="211" fg:w="1"/><text x="17.1030%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.8530%" y="341" width="0.0799%" height="15" fill="rgb(238,33,42)" fg:x="211" fg:w="1"/><text x="17.1030%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.8530%" y="325" width="0.0799%" height="15" fill="rgb(231,57,19)" fg:x="211" fg:w="1"/><text x="17.1030%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.8530%" y="309" width="0.0799%" height="15" fill="rgb(214,78,53)" fg:x="211" fg:w="1"/><text x="17.1030%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.8530%" y="293" width="0.0799%" height="15" fill="rgb(206,132,29)" fg:x="211" fg:w="1"/><text x="17.1030%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.8530%" y="277" width="0.0799%" height="15" fill="rgb(248,174,31)" fg:x="211" fg:w="1"/><text x="17.1030%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.8530%" y="261" width="0.0799%" height="15" fill="rgb(221,87,13)" fg:x="211" fg:w="1"/><text x="17.1030%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.8530%" y="245" width="0.0799%" height="15" fill="rgb(223,197,17)" fg:x="211" fg:w="1"/><text x="17.1030%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="16.6933%" y="469" width="0.3195%" height="15" fill="rgb(220,144,50)" fg:x="209" fg:w="4"/><text x="16.9433%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9329%" y="453" width="0.0799%" height="15" fill="rgb(244,201,11)" fg:x="212" fg:w="1"/><text x="17.1829%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="16.6933%" y="485" width="0.3994%" height="15" fill="rgb(249,81,34)" fg:x="209" fg:w="5"/><text x="16.9433%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.0128%" y="469" width="0.0799%" height="15" fill="rgb(205,161,12)" fg:x="213" fg:w="1"/><text x="17.2628%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.0927%" y="485" width="0.0799%" height="15" fill="rgb(252,139,50)" fg:x="214" fg:w="1"/><text x="17.3427%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.0927%" y="469" width="0.0799%" height="15" fill="rgb(205,169,14)" fg:x="214" fg:w="1"/><text x="17.3427%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.0927%" y="453" width="0.0799%" height="15" fill="rgb(248,198,33)" fg:x="214" fg:w="1"/><text x="17.3427%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.0927%" y="437" width="0.0799%" height="15" fill="rgb(236,23,21)" fg:x="214" fg:w="1"/><text x="17.3427%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.0927%" y="421" width="0.0799%" height="15" fill="rgb(231,13,38)" fg:x="214" fg:w="1"/><text x="17.3427%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.0927%" y="405" width="0.0799%" height="15" fill="rgb(239,139,21)" fg:x="214" fg:w="1"/><text x="17.3427%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.0927%" y="389" width="0.0799%" height="15" fill="rgb(222,164,45)" fg:x="214" fg:w="1"/><text x="17.3427%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.0927%" y="373" width="0.0799%" height="15" fill="rgb(230,52,27)" fg:x="214" fg:w="1"/><text x="17.3427%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="17.1725%" y="389" width="0.0799%" height="15" fill="rgb(227,143,42)" fg:x="215" fg:w="1"/><text x="17.4225%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="16.6134%" y="533" width="0.7188%" height="15" fill="rgb(249,127,1)" fg:x="208" fg:w="9"/><text x="16.8634%" y="543.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="16.6134%" y="517" width="0.7188%" height="15" fill="rgb(243,107,26)" fg:x="208" fg:w="9"/><text x="16.8634%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="16.6134%" y="501" width="0.7188%" height="15" fill="rgb(225,7,45)" fg:x="208" fg:w="9"/><text x="16.8634%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.1725%" y="485" width="0.1597%" height="15" fill="rgb(241,88,38)" fg:x="215" fg:w="2"/><text x="17.4225%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.1725%" y="469" width="0.1597%" height="15" fill="rgb(226,121,9)" fg:x="215" fg:w="2"/><text x="17.4225%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.1725%" y="453" width="0.1597%" height="15" fill="rgb(253,60,29)" fg:x="215" fg:w="2"/><text x="17.4225%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.1725%" y="437" width="0.1597%" height="15" fill="rgb(244,181,39)" fg:x="215" fg:w="2"/><text x="17.4225%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="17.1725%" y="421" width="0.1597%" height="15" fill="rgb(252,203,31)" fg:x="215" fg:w="2"/><text x="17.4225%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.1725%" y="405" width="0.1597%" height="15" fill="rgb(224,120,8)" fg:x="215" fg:w="2"/><text x="17.4225%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.2524%" y="389" width="0.0799%" height="15" fill="rgb(205,171,54)" fg:x="216" fg:w="1"/><text x="17.5024%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.2524%" y="373" width="0.0799%" height="15" fill="rgb(235,89,11)" fg:x="216" fg:w="1"/><text x="17.5024%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.2524%" y="357" width="0.0799%" height="15" fill="rgb(212,180,28)" fg:x="216" fg:w="1"/><text x="17.5024%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3323%" y="357" width="0.0799%" height="15" fill="rgb(247,84,49)" fg:x="217" fg:w="1"/><text x="17.5823%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="16.6134%" y="565" width="0.8786%" height="15" fill="rgb(236,187,52)" fg:x="208" fg:w="11"/><text x="16.8634%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (11 samples, 0.88%)</title><rect x="16.6134%" y="549" width="0.8786%" height="15" fill="rgb(227,24,15)" fg:x="208" fg:w="11"/><text x="16.8634%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="17.3323%" y="533" width="0.1597%" height="15" fill="rgb(227,211,13)" fg:x="217" fg:w="2"/><text x="17.5823%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="17.3323%" y="517" width="0.1597%" height="15" fill="rgb(245,52,14)" fg:x="217" fg:w="2"/><text x="17.5823%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.3323%" y="501" width="0.1597%" height="15" fill="rgb(225,185,13)" fg:x="217" fg:w="2"/><text x="17.5823%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.3323%" y="485" width="0.1597%" height="15" fill="rgb(217,160,29)" fg:x="217" fg:w="2"/><text x="17.5823%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.3323%" y="469" width="0.1597%" height="15" fill="rgb(216,115,53)" fg:x="217" fg:w="2"/><text x="17.5823%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.3323%" y="453" width="0.1597%" height="15" fill="rgb(236,99,5)" fg:x="217" fg:w="2"/><text x="17.5823%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.3323%" y="437" width="0.1597%" height="15" fill="rgb(222,60,38)" fg:x="217" fg:w="2"/><text x="17.5823%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="17.3323%" y="421" width="0.1597%" height="15" fill="rgb(212,82,22)" fg:x="217" fg:w="2"/><text x="17.5823%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.3323%" y="405" width="0.1597%" height="15" fill="rgb(214,48,28)" fg:x="217" fg:w="2"/><text x="17.5823%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.3323%" y="389" width="0.1597%" height="15" fill="rgb(245,196,50)" fg:x="217" fg:w="2"/><text x="17.5823%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.3323%" y="373" width="0.1597%" height="15" fill="rgb(225,159,46)" fg:x="217" fg:w="2"/><text x="17.5823%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.4121%" y="357" width="0.0799%" height="15" fill="rgb(207,195,48)" fg:x="218" fg:w="1"/><text x="17.6621%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4121%" y="341" width="0.0799%" height="15" fill="rgb(240,73,3)" fg:x="218" fg:w="1"/><text x="17.6621%" y="351.50"></text></g><g><title>plugins_core::build::Build::leads_to (21 samples, 1.68%)</title><rect x="15.8946%" y="597" width="1.6773%" height="15" fill="rgb(245,57,23)" fg:x="199" fg:w="21"/><text x="16.1446%" y="607.50"></text></g><g><title>plugins_core::tools::leads_to (12 samples, 0.96%)</title><rect x="16.6134%" y="581" width="0.9585%" height="15" fill="rgb(240,75,18)" fg:x="208" fg:w="12"/><text x="16.8634%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.4920%" y="565" width="0.0799%" height="15" fill="rgb(238,168,12)" fg:x="219" fg:w="1"/><text x="17.7420%" y="575.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4920%" y="549" width="0.0799%" height="15" fill="rgb(226,20,40)" fg:x="219" fg:w="1"/><text x="17.7420%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.4920%" y="533" width="0.0799%" height="15" fill="rgb(224,130,35)" fg:x="219" fg:w="1"/><text x="17.7420%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4920%" y="517" width="0.0799%" height="15" fill="rgb(225,63,41)" fg:x="219" fg:w="1"/><text x="17.7420%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.4920%" y="501" width="0.0799%" height="15" fill="rgb(219,3,3)" fg:x="219" fg:w="1"/><text x="17.7420%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (33 samples, 2.64%)</title><rect x="15.0958%" y="645" width="2.6358%" height="15" fill="rgb(218,157,4)" fg:x="189" fg:w="33"/><text x="15.3458%" y="655.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 2.64%)</title><rect x="15.0958%" y="629" width="2.6358%" height="15" fill="rgb(232,76,36)" fg:x="189" fg:w="33"/><text x="15.3458%" y="639.50">&lt;a..</text></g><g><title>plugins_core::build::QuickThing::make (33 samples, 2.64%)</title><rect x="15.0958%" y="613" width="2.6358%" height="15" fill="rgb(247,36,0)" fg:x="189" fg:w="33"/><text x="15.3458%" y="623.50">pl..</text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="17.5719%" y="597" width="0.1597%" height="15" fill="rgb(205,2,34)" fg:x="220" fg:w="2"/><text x="17.8219%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="17.5719%" y="581" width="0.1597%" height="15" fill="rgb(239,136,13)" fg:x="220" fg:w="2"/><text x="17.8219%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="17.5719%" y="565" width="0.1597%" height="15" fill="rgb(253,122,12)" fg:x="220" fg:w="2"/><text x="17.8219%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.6518%" y="549" width="0.0799%" height="15" fill="rgb(222,174,7)" fg:x="221" fg:w="1"/><text x="17.9018%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="17.7316%" y="629" width="0.1597%" height="15" fill="rgb(208,191,42)" fg:x="222" fg:w="2"/><text x="17.9816%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8115%" y="613" width="0.0799%" height="15" fill="rgb(237,212,15)" fg:x="223" fg:w="1"/><text x="18.0615%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8115%" y="597" width="0.0799%" height="15" fill="rgb(215,65,20)" fg:x="223" fg:w="1"/><text x="18.0615%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="17.8115%" y="581" width="0.0799%" height="15" fill="rgb(232,103,11)" fg:x="223" fg:w="1"/><text x="18.0615%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="17.8914%" y="581" width="0.1597%" height="15" fill="rgb(235,148,18)" fg:x="224" fg:w="2"/><text x="18.1414%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="17.8914%" y="565" width="0.1597%" height="15" fill="rgb(240,173,7)" fg:x="224" fg:w="2"/><text x="18.1414%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="17.9712%" y="549" width="0.0799%" height="15" fill="rgb(228,182,25)" fg:x="225" fg:w="1"/><text x="18.2212%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.1310%" y="549" width="0.0799%" height="15" fill="rgb(247,3,52)" fg:x="227" fg:w="1"/><text x="18.3810%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.1310%" y="533" width="0.0799%" height="15" fill="rgb(226,155,8)" fg:x="227" fg:w="1"/><text x="18.3810%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.1310%" y="517" width="0.0799%" height="15" fill="rgb(243,195,38)" fg:x="227" fg:w="1"/><text x="18.3810%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.1310%" y="501" width="0.0799%" height="15" fill="rgb(254,181,33)" fg:x="227" fg:w="1"/><text x="18.3810%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.1310%" y="485" width="0.0799%" height="15" fill="rgb(232,98,23)" fg:x="227" fg:w="1"/><text x="18.3810%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.1310%" y="469" width="0.0799%" height="15" fill="rgb(205,23,10)" fg:x="227" fg:w="1"/><text x="18.3810%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.1310%" y="453" width="0.0799%" height="15" fill="rgb(212,124,38)" fg:x="227" fg:w="1"/><text x="18.3810%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.1310%" y="437" width="0.0799%" height="15" fill="rgb(228,207,2)" fg:x="227" fg:w="1"/><text x="18.3810%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.1310%" y="421" width="0.0799%" height="15" fill="rgb(215,120,22)" fg:x="227" fg:w="1"/><text x="18.3810%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.1310%" y="405" width="0.0799%" height="15" fill="rgb(251,172,33)" fg:x="227" fg:w="1"/><text x="18.3810%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.1310%" y="389" width="0.0799%" height="15" fill="rgb(250,83,2)" fg:x="227" fg:w="1"/><text x="18.3810%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1310%" y="373" width="0.0799%" height="15" fill="rgb(210,132,53)" fg:x="227" fg:w="1"/><text x="18.3810%" y="383.50"></text></g><g><title>core::fmt::Formatter::alternate (1 samples, 0.08%)</title><rect x="18.2109%" y="533" width="0.0799%" height="15" fill="rgb(221,208,36)" fg:x="228" fg:w="1"/><text x="18.4609%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="18.2907%" y="517" width="0.3994%" height="15" fill="rgb(205,192,46)" fg:x="229" fg:w="5"/><text x="18.5407%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="18.4505%" y="501" width="0.2396%" height="15" fill="rgb(223,163,14)" fg:x="231" fg:w="3"/><text x="18.7005%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.6102%" y="485" width="0.0799%" height="15" fill="rgb(218,41,28)" fg:x="233" fg:w="1"/><text x="18.8602%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6102%" y="469" width="0.0799%" height="15" fill="rgb(235,104,10)" fg:x="233" fg:w="1"/><text x="18.8602%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.6102%" y="453" width="0.0799%" height="15" fill="rgb(246,17,4)" fg:x="233" fg:w="1"/><text x="18.8602%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.6102%" y="437" width="0.0799%" height="15" fill="rgb(240,7,16)" fg:x="233" fg:w="1"/><text x="18.8602%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.6102%" y="421" width="0.0799%" height="15" fill="rgb(213,160,23)" fg:x="233" fg:w="1"/><text x="18.8602%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.72%)</title><rect x="18.2907%" y="533" width="0.7188%" height="15" fill="rgb(251,179,49)" fg:x="229" fg:w="9"/><text x="18.5407%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="18.6901%" y="517" width="0.3195%" height="15" fill="rgb(247,198,10)" fg:x="234" fg:w="4"/><text x="18.9401%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="18.7700%" y="501" width="0.2396%" height="15" fill="rgb(220,65,29)" fg:x="235" fg:w="3"/><text x="19.0200%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.9297%" y="485" width="0.0799%" height="15" fill="rgb(237,171,28)" fg:x="237" fg:w="1"/><text x="19.1797%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.0096%" y="517" width="0.0799%" height="15" fill="rgb(228,44,26)" fg:x="238" fg:w="1"/><text x="19.2596%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.0096%" y="501" width="0.0799%" height="15" fill="rgb(216,210,27)" fg:x="238" fg:w="1"/><text x="19.2596%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="19.0895%" y="517" width="0.4792%" height="15" fill="rgb(252,10,17)" fg:x="239" fg:w="6"/><text x="19.3395%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="19.3291%" y="501" width="0.2396%" height="15" fill="rgb(214,172,30)" fg:x="242" fg:w="3"/><text x="19.5791%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="19.4089%" y="485" width="0.1597%" height="15" fill="rgb(253,130,48)" fg:x="243" fg:w="2"/><text x="19.6589%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.4888%" y="469" width="0.0799%" height="15" fill="rgb(226,99,43)" fg:x="244" fg:w="1"/><text x="19.7388%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.4888%" y="453" width="0.0799%" height="15" fill="rgb(239,111,26)" fg:x="244" fg:w="1"/><text x="19.7388%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.4888%" y="437" width="0.0799%" height="15" fill="rgb(240,27,53)" fg:x="244" fg:w="1"/><text x="19.7388%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.4888%" y="421" width="0.0799%" height="15" fill="rgb(254,163,12)" fg:x="244" fg:w="1"/><text x="19.7388%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.6486%" y="501" width="0.0799%" height="15" fill="rgb(225,51,48)" fg:x="246" fg:w="1"/><text x="19.8986%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.6486%" y="485" width="0.0799%" height="15" fill="rgb(205,19,32)" fg:x="246" fg:w="1"/><text x="19.8986%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.6486%" y="469" width="0.0799%" height="15" fill="rgb(218,119,26)" fg:x="246" fg:w="1"/><text x="19.8986%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="19.7284%" y="501" width="0.3195%" height="15" fill="rgb(231,173,33)" fg:x="247" fg:w="4"/><text x="19.9784%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.8882%" y="485" width="0.1597%" height="15" fill="rgb(241,100,29)" fg:x="249" fg:w="2"/><text x="20.1382%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.9681%" y="469" width="0.0799%" height="15" fill="rgb(250,194,34)" fg:x="250" fg:w="1"/><text x="20.2181%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.9681%" y="453" width="0.0799%" height="15" fill="rgb(215,23,50)" fg:x="250" fg:w="1"/><text x="20.2181%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.1278%" y="469" width="0.0799%" height="15" fill="rgb(206,49,37)" fg:x="252" fg:w="1"/><text x="20.3778%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.1278%" y="453" width="0.0799%" height="15" fill="rgb(247,39,21)" fg:x="252" fg:w="1"/><text x="20.3778%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.1278%" y="437" width="0.0799%" height="15" fill="rgb(209,220,15)" fg:x="252" fg:w="1"/><text x="20.3778%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.1278%" y="421" width="0.0799%" height="15" fill="rgb(206,41,33)" fg:x="252" fg:w="1"/><text x="20.3778%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.2875%" y="453" width="0.1597%" height="15" fill="rgb(221,225,45)" fg:x="254" fg:w="2"/><text x="20.5375%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.2875%" y="437" width="0.1597%" height="15" fill="rgb(216,27,18)" fg:x="254" fg:w="2"/><text x="20.5375%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.3674%" y="421" width="0.0799%" height="15" fill="rgb(250,193,34)" fg:x="255" fg:w="1"/><text x="20.6174%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.5272%" y="437" width="0.0799%" height="15" fill="rgb(227,215,20)" fg:x="257" fg:w="1"/><text x="20.7772%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.6070%" y="437" width="0.0799%" height="15" fill="rgb(242,211,27)" fg:x="258" fg:w="1"/><text x="20.8570%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.6070%" y="421" width="0.0799%" height="15" fill="rgb(229,190,30)" fg:x="258" fg:w="1"/><text x="20.8570%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.6070%" y="405" width="0.0799%" height="15" fill="rgb(253,31,29)" fg:x="258" fg:w="1"/><text x="20.8570%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.6070%" y="389" width="0.0799%" height="15" fill="rgb(229,177,52)" fg:x="258" fg:w="1"/><text x="20.8570%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="20.4473%" y="453" width="0.3195%" height="15" fill="rgb(226,88,8)" fg:x="256" fg:w="4"/><text x="20.6973%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.6869%" y="437" width="0.0799%" height="15" fill="rgb(214,55,27)" fg:x="259" fg:w="1"/><text x="20.9369%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="20.2077%" y="469" width="0.6390%" height="15" fill="rgb(233,202,5)" fg:x="253" fg:w="8"/><text x="20.4577%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.7668%" y="453" width="0.0799%" height="15" fill="rgb(251,49,30)" fg:x="260" fg:w="1"/><text x="21.0168%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="20.1278%" y="485" width="0.8786%" height="15" fill="rgb(235,18,52)" fg:x="252" fg:w="11"/><text x="20.3778%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.8466%" y="469" width="0.1597%" height="15" fill="rgb(250,111,51)" fg:x="261" fg:w="2"/><text x="21.0966%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.9265%" y="453" width="0.0799%" height="15" fill="rgb(218,13,25)" fg:x="262" fg:w="1"/><text x="21.1765%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.9265%" y="437" width="0.0799%" height="15" fill="rgb(248,96,7)" fg:x="262" fg:w="1"/><text x="21.1765%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="19.5687%" y="517" width="1.5176%" height="15" fill="rgb(217,31,15)" fg:x="245" fg:w="19"/><text x="19.8187%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="20.0479%" y="501" width="1.0383%" height="15" fill="rgb(228,59,49)" fg:x="251" fg:w="13"/><text x="20.2979%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.0064%" y="485" width="0.0799%" height="15" fill="rgb(210,152,38)" fg:x="263" fg:w="1"/><text x="21.2564%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.0064%" y="469" width="0.0799%" height="15" fill="rgb(206,71,11)" fg:x="263" fg:w="1"/><text x="21.2564%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.0064%" y="453" width="0.0799%" height="15" fill="rgb(244,199,5)" fg:x="263" fg:w="1"/><text x="21.2564%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="21.0863%" y="485" width="0.3994%" height="15" fill="rgb(253,49,1)" fg:x="264" fg:w="5"/><text x="21.3363%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="21.2460%" y="469" width="0.2396%" height="15" fill="rgb(225,206,40)" fg:x="266" fg:w="3"/><text x="21.4960%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="21.3259%" y="453" width="0.1597%" height="15" fill="rgb(243,116,47)" fg:x="267" fg:w="2"/><text x="21.5759%" y="463.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="21.3259%" y="437" width="0.1597%" height="15" fill="rgb(219,225,16)" fg:x="267" fg:w="2"/><text x="21.5759%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.56%)</title><rect x="19.0096%" y="533" width="2.5559%" height="15" fill="rgb(233,29,47)" fg:x="238" fg:w="32"/><text x="19.2596%" y="543.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="21.0863%" y="517" width="0.4792%" height="15" fill="rgb(250,179,18)" fg:x="264" fg:w="6"/><text x="21.3363%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="21.0863%" y="501" width="0.4792%" height="15" fill="rgb(215,176,6)" fg:x="264" fg:w="6"/><text x="21.3363%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="21.4856%" y="485" width="0.0799%" height="15" fill="rgb(214,117,39)" fg:x="269" fg:w="1"/><text x="21.7356%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.6454%" y="501" width="0.0799%" height="15" fill="rgb(247,183,36)" fg:x="271" fg:w="1"/><text x="21.8954%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.6454%" y="485" width="0.0799%" height="15" fill="rgb(237,200,3)" fg:x="271" fg:w="1"/><text x="21.8954%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (45 samples, 3.59%)</title><rect x="18.2109%" y="549" width="3.5942%" height="15" fill="rgb(212,220,24)" fg:x="228" fg:w="45"/><text x="18.4609%" y="559.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.5655%" y="533" width="0.2396%" height="15" fill="rgb(245,216,20)" fg:x="270" fg:w="3"/><text x="21.8155%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.6454%" y="517" width="0.1597%" height="15" fill="rgb(219,124,7)" fg:x="271" fg:w="2"/><text x="21.8954%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="21.7252%" y="501" width="0.0799%" height="15" fill="rgb(227,167,8)" fg:x="272" fg:w="1"/><text x="21.9752%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8850%" y="517" width="0.0799%" height="15" fill="rgb(241,37,2)" fg:x="274" fg:w="1"/><text x="22.1350%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.9649%" y="517" width="0.0799%" height="15" fill="rgb(238,134,33)" fg:x="275" fg:w="1"/><text x="22.2149%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.9649%" y="501" width="0.0799%" height="15" fill="rgb(248,48,27)" fg:x="275" fg:w="1"/><text x="22.2149%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2045%" y="501" width="0.0799%" height="15" fill="rgb(212,14,16)" fg:x="278" fg:w="1"/><text x="22.4545%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.2843%" y="501" width="0.0799%" height="15" fill="rgb(217,205,37)" fg:x="279" fg:w="1"/><text x="22.5343%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2843%" y="485" width="0.0799%" height="15" fill="rgb(233,185,47)" fg:x="279" fg:w="1"/><text x="22.5343%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.4441%" y="485" width="0.0799%" height="15" fill="rgb(244,88,8)" fg:x="281" fg:w="1"/><text x="22.6941%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.4441%" y="469" width="0.0799%" height="15" fill="rgb(213,0,20)" fg:x="281" fg:w="1"/><text x="22.6941%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.5240%" y="469" width="0.0799%" height="15" fill="rgb(238,159,36)" fg:x="282" fg:w="1"/><text x="22.7740%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5240%" y="453" width="0.0799%" height="15" fill="rgb(253,173,17)" fg:x="282" fg:w="1"/><text x="22.7740%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="22.6038%" y="469" width="0.0799%" height="15" fill="rgb(221,23,28)" fg:x="283" fg:w="1"/><text x="22.8538%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.6038%" y="453" width="0.0799%" height="15" fill="rgb(218,113,15)" fg:x="283" fg:w="1"/><text x="22.8538%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.6038%" y="437" width="0.0799%" height="15" fill="rgb(233,58,3)" fg:x="283" fg:w="1"/><text x="22.8538%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6837%" y="437" width="0.0799%" height="15" fill="rgb(250,46,35)" fg:x="284" fg:w="1"/><text x="22.9337%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.7636%" y="437" width="0.0799%" height="15" fill="rgb(210,169,11)" fg:x="285" fg:w="1"/><text x="23.0136%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="21.8051%" y="549" width="1.1182%" height="15" fill="rgb(246,88,19)" fg:x="273" fg:w="14"/><text x="22.0551%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.12%)</title><rect x="21.8051%" y="533" width="1.1182%" height="15" fill="rgb(206,81,49)" fg:x="273" fg:w="14"/><text x="22.0551%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="22.0447%" y="517" width="0.8786%" height="15" fill="rgb(232,144,18)" fg:x="276" fg:w="11"/><text x="22.2947%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="22.3642%" y="501" width="0.5591%" height="15" fill="rgb(235,2,27)" fg:x="280" fg:w="7"/><text x="22.6142%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="22.5240%" y="485" width="0.3994%" height="15" fill="rgb(239,157,39)" fg:x="282" fg:w="5"/><text x="22.7740%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="22.6837%" y="469" width="0.2396%" height="15" fill="rgb(220,11,17)" fg:x="284" fg:w="3"/><text x="22.9337%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="22.6837%" y="453" width="0.2396%" height="15" fill="rgb(243,94,50)" fg:x="284" fg:w="3"/><text x="22.9337%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.8435%" y="437" width="0.0799%" height="15" fill="rgb(218,22,0)" fg:x="286" fg:w="1"/><text x="23.0935%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.8435%" y="421" width="0.0799%" height="15" fill="rgb(249,70,21)" fg:x="286" fg:w="1"/><text x="23.0935%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.8435%" y="405" width="0.0799%" height="15" fill="rgb(245,111,46)" fg:x="286" fg:w="1"/><text x="23.0935%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="22.9233%" y="517" width="0.1597%" height="15" fill="rgb(244,183,12)" fg:x="287" fg:w="2"/><text x="23.1733%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="22.9233%" y="533" width="0.2396%" height="15" fill="rgb(207,117,0)" fg:x="287" fg:w="3"/><text x="23.1733%" y="543.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="23.0831%" y="517" width="0.0799%" height="15" fill="rgb(206,20,43)" fg:x="289" fg:w="1"/><text x="23.3331%" y="527.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="23.0831%" y="501" width="0.0799%" height="15" fill="rgb(221,104,11)" fg:x="289" fg:w="1"/><text x="23.3331%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.0831%" y="485" width="0.0799%" height="15" fill="rgb(254,36,50)" fg:x="289" fg:w="1"/><text x="23.3331%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="23.3227%" y="501" width="0.1597%" height="15" fill="rgb(252,17,15)" fg:x="292" fg:w="2"/><text x="23.5727%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.3227%" y="485" width="0.1597%" height="15" fill="rgb(219,129,43)" fg:x="292" fg:w="2"/><text x="23.5727%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.3227%" y="469" width="0.1597%" height="15" fill="rgb(205,34,45)" fg:x="292" fg:w="2"/><text x="23.5727%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.4026%" y="453" width="0.0799%" height="15" fill="rgb(251,201,32)" fg:x="293" fg:w="1"/><text x="23.6526%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="23.4824%" y="421" width="0.1597%" height="15" fill="rgb(205,56,0)" fg:x="294" fg:w="2"/><text x="23.7324%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.4824%" y="405" width="0.1597%" height="15" fill="rgb(211,193,27)" fg:x="294" fg:w="2"/><text x="23.7324%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="23.4824%" y="453" width="0.2396%" height="15" fill="rgb(231,100,42)" fg:x="294" fg:w="3"/><text x="23.7324%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="23.4824%" y="437" width="0.2396%" height="15" fill="rgb(245,85,27)" fg:x="294" fg:w="3"/><text x="23.7324%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6422%" y="421" width="0.0799%" height="15" fill="rgb(241,76,24)" fg:x="296" fg:w="1"/><text x="23.8922%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="23.8818%" y="421" width="0.2396%" height="15" fill="rgb(249,157,15)" fg:x="299" fg:w="3"/><text x="24.1318%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.9617%" y="405" width="0.1597%" height="15" fill="rgb(222,218,25)" fg:x="300" fg:w="2"/><text x="24.2117%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="23.9617%" y="389" width="0.1597%" height="15" fill="rgb(252,156,52)" fg:x="300" fg:w="2"/><text x="24.2117%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2812%" y="389" width="0.0799%" height="15" fill="rgb(211,185,7)" fg:x="304" fg:w="1"/><text x="24.5312%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.4409%" y="357" width="0.1597%" height="15" fill="rgb(234,108,24)" fg:x="306" fg:w="2"/><text x="24.6909%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.4409%" y="341" width="0.1597%" height="15" fill="rgb(227,218,2)" fg:x="306" fg:w="2"/><text x="24.6909%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.4409%" y="325" width="0.1597%" height="15" fill="rgb(224,0,36)" fg:x="306" fg:w="2"/><text x="24.6909%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.04%)</title><rect x="23.8019%" y="437" width="1.0383%" height="15" fill="rgb(233,201,10)" fg:x="298" fg:w="13"/><text x="24.0519%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="24.1214%" y="421" width="0.7188%" height="15" fill="rgb(252,209,14)" fg:x="302" fg:w="9"/><text x="24.3714%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="24.2013%" y="405" width="0.6390%" height="15" fill="rgb(205,93,49)" fg:x="303" fg:w="8"/><text x="24.4513%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="24.3610%" y="389" width="0.4792%" height="15" fill="rgb(234,116,45)" fg:x="305" fg:w="6"/><text x="24.6110%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="24.3610%" y="373" width="0.4792%" height="15" fill="rgb(248,89,35)" fg:x="305" fg:w="6"/><text x="24.6110%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="24.6006%" y="357" width="0.2396%" height="15" fill="rgb(233,167,45)" fg:x="308" fg:w="3"/><text x="24.8506%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="24.6006%" y="341" width="0.2396%" height="15" fill="rgb(248,228,14)" fg:x="308" fg:w="3"/><text x="24.8506%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.6006%" y="325" width="0.2396%" height="15" fill="rgb(246,91,14)" fg:x="308" fg:w="3"/><text x="24.8506%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.6006%" y="309" width="0.2396%" height="15" fill="rgb(227,142,5)" fg:x="308" fg:w="3"/><text x="24.8506%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="24.6006%" y="293" width="0.2396%" height="15" fill="rgb(221,63,33)" fg:x="308" fg:w="3"/><text x="24.8506%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="24.8403%" y="437" width="0.0799%" height="15" fill="rgb(233,49,0)" fg:x="311" fg:w="1"/><text x="25.0903%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.52%)</title><rect x="23.4824%" y="469" width="1.5176%" height="15" fill="rgb(251,115,38)" fg:x="294" fg:w="19"/><text x="23.7324%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.28%)</title><rect x="23.7220%" y="453" width="1.2780%" height="15" fill="rgb(231,214,32)" fg:x="297" fg:w="16"/><text x="23.9720%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.9201%" y="437" width="0.0799%" height="15" fill="rgb(248,73,46)" fg:x="312" fg:w="1"/><text x="25.1701%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 1.60%)</title><rect x="23.4824%" y="485" width="1.5974%" height="15" fill="rgb(237,156,4)" fg:x="294" fg:w="20"/><text x="23.7324%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="25.0000%" y="469" width="0.0799%" height="15" fill="rgb(227,132,2)" fg:x="313" fg:w="1"/><text x="25.2500%" y="479.50"></text></g><g><title>engine::session::Session::flush (94 samples, 7.51%)</title><rect x="17.7316%" y="645" width="7.5080%" height="15" fill="rgb(248,161,9)" fg:x="222" fg:w="94"/><text x="17.9816%" y="655.50">engine::se..</text></g><g><title>engine::session::Session::save_changes (92 samples, 7.35%)</title><rect x="17.8914%" y="629" width="7.3482%" height="15" fill="rgb(238,77,38)" fg:x="224" fg:w="92"/><text x="18.1414%" y="639.50">engine::se..</text></g><g><title>engine::session::state::State::close (92 samples, 7.35%)</title><rect x="17.8914%" y="613" width="7.3482%" height="15" fill="rgb(222,166,40)" fg:x="224" fg:w="92"/><text x="18.1414%" y="623.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (92 samples, 7.35%)</title><rect x="17.8914%" y="597" width="7.3482%" height="15" fill="rgb(214,168,45)" fg:x="224" fg:w="92"/><text x="18.1414%" y="607.50">engine::se..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (90 samples, 7.19%)</title><rect x="18.0511%" y="581" width="7.1885%" height="15" fill="rgb(226,64,37)" fg:x="226" fg:w="90"/><text x="18.3011%" y="591.50">engine::se..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (90 samples, 7.19%)</title><rect x="18.0511%" y="565" width="7.1885%" height="15" fill="rgb(232,210,43)" fg:x="226" fg:w="90"/><text x="18.3011%" y="575.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (29 samples, 2.32%)</title><rect x="22.9233%" y="549" width="2.3163%" height="15" fill="rgb(214,76,33)" fg:x="287" fg:w="29"/><text x="23.1733%" y="559.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (26 samples, 2.08%)</title><rect x="23.1629%" y="533" width="2.0767%" height="15" fill="rgb(210,78,5)" fg:x="290" fg:w="26"/><text x="23.4129%" y="543.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (26 samples, 2.08%)</title><rect x="23.1629%" y="517" width="2.0767%" height="15" fill="rgb(211,107,37)" fg:x="290" fg:w="26"/><text x="23.4129%" y="527.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.76%)</title><rect x="23.4824%" y="501" width="1.7572%" height="15" fill="rgb(249,67,16)" fg:x="294" fg:w="22"/><text x="23.7324%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.0799%" y="485" width="0.1597%" height="15" fill="rgb(222,114,31)" fg:x="314" fg:w="2"/><text x="25.3299%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.0799%" y="469" width="0.1597%" height="15" fill="rgb(242,118,19)" fg:x="314" fg:w="2"/><text x="25.3299%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.1597%" y="453" width="0.0799%" height="15" fill="rgb(223,115,1)" fg:x="315" fg:w="1"/><text x="25.4097%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.2396%" y="565" width="0.0799%" height="15" fill="rgb(241,182,54)" fg:x="316" fg:w="1"/><text x="25.4896%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.2396%" y="549" width="0.0799%" height="15" fill="rgb(244,166,36)" fg:x="316" fg:w="1"/><text x="25.4896%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.2396%" y="533" width="0.0799%" height="15" fill="rgb(241,52,43)" fg:x="316" fg:w="1"/><text x="25.4896%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.2396%" y="517" width="0.0799%" height="15" fill="rgb(236,82,9)" fg:x="316" fg:w="1"/><text x="25.4896%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.2396%" y="501" width="0.0799%" height="15" fill="rgb(241,119,0)" fg:x="316" fg:w="1"/><text x="25.4896%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.2396%" y="485" width="0.0799%" height="15" fill="rgb(221,19,22)" fg:x="316" fg:w="1"/><text x="25.4896%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="25.2396%" y="469" width="0.0799%" height="15" fill="rgb(254,144,35)" fg:x="316" fg:w="1"/><text x="25.4896%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="25.2396%" y="453" width="0.0799%" height="15" fill="rgb(246,132,30)" fg:x="316" fg:w="1"/><text x="25.4896%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="25.2396%" y="613" width="0.1597%" height="15" fill="rgb(234,69,28)" fg:x="316" fg:w="2"/><text x="25.4896%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="25.2396%" y="597" width="0.1597%" height="15" fill="rgb(219,106,47)" fg:x="316" fg:w="2"/><text x="25.4896%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="25.2396%" y="581" width="0.1597%" height="15" fill="rgb(218,79,24)" fg:x="316" fg:w="2"/><text x="25.4896%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.3195%" y="565" width="0.0799%" height="15" fill="rgb(225,26,21)" fg:x="317" fg:w="1"/><text x="25.5695%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="25.3195%" y="549" width="0.0799%" height="15" fill="rgb(217,68,49)" fg:x="317" fg:w="1"/><text x="25.5695%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.4792%" y="549" width="0.2396%" height="15" fill="rgb(220,204,28)" fg:x="319" fg:w="3"/><text x="25.7292%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.5591%" y="533" width="0.1597%" height="15" fill="rgb(237,208,43)" fg:x="320" fg:w="2"/><text x="25.8091%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.5591%" y="517" width="0.1597%" height="15" fill="rgb(213,97,42)" fg:x="320" fg:w="2"/><text x="25.8091%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6390%" y="501" width="0.0799%" height="15" fill="rgb(238,96,52)" fg:x="321" fg:w="1"/><text x="25.8890%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6390%" y="485" width="0.0799%" height="15" fill="rgb(228,14,13)" fg:x="321" fg:w="1"/><text x="25.8890%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="25.4792%" y="565" width="0.3195%" height="15" fill="rgb(219,123,13)" fg:x="319" fg:w="4"/><text x="25.7292%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7188%" y="549" width="0.0799%" height="15" fill="rgb(216,144,17)" fg:x="322" fg:w="1"/><text x="25.9688%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.7987%" y="469" width="0.0799%" height="15" fill="rgb(230,228,29)" fg:x="323" fg:w="1"/><text x="26.0487%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="25.3994%" y="613" width="0.5591%" height="15" fill="rgb(233,18,5)" fg:x="318" fg:w="7"/><text x="25.6494%" y="623.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="25.3994%" y="597" width="0.5591%" height="15" fill="rgb(233,197,12)" fg:x="318" fg:w="7"/><text x="25.6494%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="25.3994%" y="581" width="0.5591%" height="15" fill="rgb(234,140,29)" fg:x="318" fg:w="7"/><text x="25.6494%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.7987%" y="565" width="0.1597%" height="15" fill="rgb(233,113,19)" fg:x="323" fg:w="2"/><text x="26.0487%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.7987%" y="549" width="0.1597%" height="15" fill="rgb(246,209,13)" fg:x="323" fg:w="2"/><text x="26.0487%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.7987%" y="533" width="0.1597%" height="15" fill="rgb(242,79,54)" fg:x="323" fg:w="2"/><text x="26.0487%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.7987%" y="517" width="0.1597%" height="15" fill="rgb(219,73,16)" fg:x="323" fg:w="2"/><text x="26.0487%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.7987%" y="501" width="0.1597%" height="15" fill="rgb(224,52,10)" fg:x="323" fg:w="2"/><text x="26.0487%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.7987%" y="485" width="0.1597%" height="15" fill="rgb(237,179,5)" fg:x="323" fg:w="2"/><text x="26.0487%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.8786%" y="469" width="0.0799%" height="15" fill="rgb(231,20,6)" fg:x="324" fg:w="1"/><text x="26.1286%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.8786%" y="453" width="0.0799%" height="15" fill="rgb(253,171,45)" fg:x="324" fg:w="1"/><text x="26.1286%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8786%" y="437" width="0.0799%" height="15" fill="rgb(230,75,49)" fg:x="324" fg:w="1"/><text x="26.1286%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="25.9585%" y="597" width="0.1597%" height="15" fill="rgb(216,83,46)" fg:x="325" fg:w="2"/><text x="26.2085%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.9585%" y="581" width="0.1597%" height="15" fill="rgb(236,56,9)" fg:x="325" fg:w="2"/><text x="26.2085%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="25.9585%" y="613" width="0.3195%" height="15" fill="rgb(215,28,34)" fg:x="325" fg:w="4"/><text x="26.2085%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="26.1182%" y="597" width="0.1597%" height="15" fill="rgb(230,222,20)" fg:x="327" fg:w="2"/><text x="26.3682%" y="607.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="26.1182%" y="581" width="0.1597%" height="15" fill="rgb(235,209,51)" fg:x="327" fg:w="2"/><text x="26.3682%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.1182%" y="565" width="0.1597%" height="15" fill="rgb(235,167,1)" fg:x="327" fg:w="2"/><text x="26.3682%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="26.1981%" y="549" width="0.0799%" height="15" fill="rgb(248,220,0)" fg:x="328" fg:w="1"/><text x="26.4481%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.1981%" y="533" width="0.0799%" height="15" fill="rgb(239,0,18)" fg:x="328" fg:w="1"/><text x="26.4481%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.2780%" y="565" width="0.0799%" height="15" fill="rgb(229,179,11)" fg:x="329" fg:w="1"/><text x="26.5280%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.2780%" y="549" width="0.0799%" height="15" fill="rgb(226,116,53)" fg:x="329" fg:w="1"/><text x="26.5280%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.2780%" y="533" width="0.0799%" height="15" fill="rgb(218,1,49)" fg:x="329" fg:w="1"/><text x="26.5280%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.2780%" y="517" width="0.0799%" height="15" fill="rgb(208,184,47)" fg:x="329" fg:w="1"/><text x="26.5280%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.2780%" y="501" width="0.0799%" height="15" fill="rgb(238,174,3)" fg:x="329" fg:w="1"/><text x="26.5280%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.2780%" y="485" width="0.0799%" height="15" fill="rgb(247,188,6)" fg:x="329" fg:w="1"/><text x="26.5280%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2780%" y="469" width="0.0799%" height="15" fill="rgb(211,165,46)" fg:x="329" fg:w="1"/><text x="26.5280%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3578%" y="533" width="0.0799%" height="15" fill="rgb(222,190,10)" fg:x="330" fg:w="1"/><text x="26.6078%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3578%" y="517" width="0.0799%" height="15" fill="rgb(206,185,3)" fg:x="330" fg:w="1"/><text x="26.6078%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3578%" y="501" width="0.0799%" height="15" fill="rgb(244,125,37)" fg:x="330" fg:w="1"/><text x="26.6078%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3578%" y="485" width="0.0799%" height="15" fill="rgb(211,43,7)" fg:x="330" fg:w="1"/><text x="26.6078%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3578%" y="469" width="0.0799%" height="15" fill="rgb(250,41,42)" fg:x="330" fg:w="1"/><text x="26.6078%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3578%" y="453" width="0.0799%" height="15" fill="rgb(254,54,42)" fg:x="330" fg:w="1"/><text x="26.6078%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.3578%" y="437" width="0.0799%" height="15" fill="rgb(213,71,43)" fg:x="330" fg:w="1"/><text x="26.6078%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.3578%" y="421" width="0.0799%" height="15" fill="rgb(249,3,44)" fg:x="330" fg:w="1"/><text x="26.6078%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.3578%" y="405" width="0.0799%" height="15" fill="rgb(229,80,41)" fg:x="330" fg:w="1"/><text x="26.6078%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.3578%" y="389" width="0.0799%" height="15" fill="rgb(231,25,28)" fg:x="330" fg:w="1"/><text x="26.6078%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.3578%" y="373" width="0.0799%" height="15" fill="rgb(208,79,48)" fg:x="330" fg:w="1"/><text x="26.6078%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.3578%" y="357" width="0.0799%" height="15" fill="rgb(207,196,38)" fg:x="330" fg:w="1"/><text x="26.6078%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.3578%" y="341" width="0.0799%" height="15" fill="rgb(228,105,49)" fg:x="330" fg:w="1"/><text x="26.6078%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.3578%" y="325" width="0.0799%" height="15" fill="rgb(237,99,15)" fg:x="330" fg:w="1"/><text x="26.6078%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.3578%" y="309" width="0.0799%" height="15" fill="rgb(224,207,46)" fg:x="330" fg:w="1"/><text x="26.6078%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.3578%" y="293" width="0.0799%" height="15" fill="rgb(249,117,50)" fg:x="330" fg:w="1"/><text x="26.6078%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="25.2396%" y="629" width="1.2780%" height="15" fill="rgb(248,17,13)" fg:x="316" fg:w="16"/><text x="25.4896%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="26.2780%" y="613" width="0.2396%" height="15" fill="rgb(228,187,36)" fg:x="329" fg:w="3"/><text x="26.5280%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="26.2780%" y="597" width="0.2396%" height="15" fill="rgb(234,132,20)" fg:x="329" fg:w="3"/><text x="26.5280%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="26.2780%" y="581" width="0.2396%" height="15" fill="rgb(209,170,46)" fg:x="329" fg:w="3"/><text x="26.5280%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="26.3578%" y="565" width="0.1597%" height="15" fill="rgb(237,23,19)" fg:x="330" fg:w="2"/><text x="26.6078%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="26.3578%" y="549" width="0.1597%" height="15" fill="rgb(227,21,26)" fg:x="330" fg:w="2"/><text x="26.6078%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="26.4377%" y="533" width="0.0799%" height="15" fill="rgb(222,220,48)" fg:x="331" fg:w="1"/><text x="26.6877%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.4377%" y="517" width="0.0799%" height="15" fill="rgb(214,9,16)" fg:x="331" fg:w="1"/><text x="26.6877%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.4377%" y="501" width="0.0799%" height="15" fill="rgb(209,73,30)" fg:x="331" fg:w="1"/><text x="26.6877%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.4377%" y="485" width="0.0799%" height="15" fill="rgb(207,20,33)" fg:x="331" fg:w="1"/><text x="26.6877%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4377%" y="469" width="0.0799%" height="15" fill="rgb(219,153,12)" fg:x="331" fg:w="1"/><text x="26.6877%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5176%" y="517" width="0.1597%" height="15" fill="rgb(235,97,25)" fg:x="332" fg:w="2"/><text x="26.7676%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5176%" y="501" width="0.1597%" height="15" fill="rgb(244,30,34)" fg:x="332" fg:w="2"/><text x="26.7676%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5176%" y="485" width="0.1597%" height="15" fill="rgb(214,106,45)" fg:x="332" fg:w="2"/><text x="26.7676%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.5974%" y="469" width="0.0799%" height="15" fill="rgb(226,41,9)" fg:x="333" fg:w="1"/><text x="26.8474%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5974%" y="453" width="0.0799%" height="15" fill="rgb(253,139,29)" fg:x="333" fg:w="1"/><text x="26.8474%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5974%" y="437" width="0.0799%" height="15" fill="rgb(213,205,39)" fg:x="333" fg:w="1"/><text x="26.8474%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.5974%" y="421" width="0.0799%" height="15" fill="rgb(209,27,10)" fg:x="333" fg:w="1"/><text x="26.8474%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.5974%" y="405" width="0.0799%" height="15" fill="rgb(249,142,16)" fg:x="333" fg:w="1"/><text x="26.8474%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.5974%" y="389" width="0.0799%" height="15" fill="rgb(242,65,12)" fg:x="333" fg:w="1"/><text x="26.8474%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.5974%" y="373" width="0.0799%" height="15" fill="rgb(232,48,10)" fg:x="333" fg:w="1"/><text x="26.8474%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.5974%" y="357" width="0.0799%" height="15" fill="rgb(253,67,19)" fg:x="333" fg:w="1"/><text x="26.8474%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.5176%" y="533" width="0.2396%" height="15" fill="rgb(227,93,29)" fg:x="332" fg:w="3"/><text x="26.7676%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6773%" y="517" width="0.0799%" height="15" fill="rgb(226,189,53)" fg:x="334" fg:w="1"/><text x="26.9273%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6773%" y="501" width="0.0799%" height="15" fill="rgb(223,224,1)" fg:x="334" fg:w="1"/><text x="26.9273%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.6773%" y="485" width="0.0799%" height="15" fill="rgb(221,84,32)" fg:x="334" fg:w="1"/><text x="26.9273%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.6773%" y="469" width="0.0799%" height="15" fill="rgb(214,189,28)" fg:x="334" fg:w="1"/><text x="26.9273%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.6773%" y="453" width="0.0799%" height="15" fill="rgb(234,7,52)" fg:x="334" fg:w="1"/><text x="26.9273%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6773%" y="437" width="0.0799%" height="15" fill="rgb(249,73,31)" fg:x="334" fg:w="1"/><text x="26.9273%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6773%" y="421" width="0.0799%" height="15" fill="rgb(253,153,41)" fg:x="334" fg:w="1"/><text x="26.9273%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.6773%" y="405" width="0.0799%" height="15" fill="rgb(249,52,34)" fg:x="334" fg:w="1"/><text x="26.9273%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.6773%" y="389" width="0.0799%" height="15" fill="rgb(236,177,47)" fg:x="334" fg:w="1"/><text x="26.9273%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.6773%" y="373" width="0.0799%" height="15" fill="rgb(252,185,45)" fg:x="334" fg:w="1"/><text x="26.9273%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.6773%" y="357" width="0.0799%" height="15" fill="rgb(251,15,30)" fg:x="334" fg:w="1"/><text x="26.9273%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="26.6773%" y="341" width="0.0799%" height="15" fill="rgb(233,31,4)" fg:x="334" fg:w="1"/><text x="26.9273%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.6773%" y="325" width="0.0799%" height="15" fill="rgb(254,44,24)" fg:x="334" fg:w="1"/><text x="26.9273%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.7572%" y="533" width="0.0799%" height="15" fill="rgb(218,54,1)" fg:x="335" fg:w="1"/><text x="27.0072%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.8371%" y="533" width="0.0799%" height="15" fill="rgb(243,209,39)" fg:x="336" fg:w="1"/><text x="27.0871%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.8371%" y="517" width="0.0799%" height="15" fill="rgb(206,75,33)" fg:x="336" fg:w="1"/><text x="27.0871%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.8371%" y="501" width="0.0799%" height="15" fill="rgb(223,108,18)" fg:x="336" fg:w="1"/><text x="27.0871%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.8371%" y="485" width="0.0799%" height="15" fill="rgb(244,89,31)" fg:x="336" fg:w="1"/><text x="27.0871%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.8371%" y="469" width="0.0799%" height="15" fill="rgb(222,167,27)" fg:x="336" fg:w="1"/><text x="27.0871%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="26.5176%" y="581" width="0.4792%" height="15" fill="rgb(247,41,16)" fg:x="332" fg:w="6"/><text x="26.7676%" y="591.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="26.5176%" y="565" width="0.4792%" height="15" fill="rgb(233,168,40)" fg:x="332" fg:w="6"/><text x="26.7676%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="26.5176%" y="549" width="0.4792%" height="15" fill="rgb(205,211,8)" fg:x="332" fg:w="6"/><text x="26.7676%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.9169%" y="533" width="0.0799%" height="15" fill="rgb(238,105,11)" fg:x="337" fg:w="1"/><text x="27.1669%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.9169%" y="517" width="0.0799%" height="15" fill="rgb(223,142,52)" fg:x="337" fg:w="1"/><text x="27.1669%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.9169%" y="501" width="0.0799%" height="15" fill="rgb(238,51,33)" fg:x="337" fg:w="1"/><text x="27.1669%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.9169%" y="485" width="0.0799%" height="15" fill="rgb(231,188,43)" fg:x="337" fg:w="1"/><text x="27.1669%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.9169%" y="469" width="0.0799%" height="15" fill="rgb(216,92,17)" fg:x="337" fg:w="1"/><text x="27.1669%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.9169%" y="453" width="0.0799%" height="15" fill="rgb(228,2,40)" fg:x="337" fg:w="1"/><text x="27.1669%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.9169%" y="437" width="0.0799%" height="15" fill="rgb(226,73,15)" fg:x="337" fg:w="1"/><text x="27.1669%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.9169%" y="421" width="0.0799%" height="15" fill="rgb(227,66,46)" fg:x="337" fg:w="1"/><text x="27.1669%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.9169%" y="405" width="0.0799%" height="15" fill="rgb(209,71,6)" fg:x="337" fg:w="1"/><text x="27.1669%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.9968%" y="565" width="0.0799%" height="15" fill="rgb(246,100,25)" fg:x="338" fg:w="1"/><text x="27.2468%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.9968%" y="549" width="0.0799%" height="15" fill="rgb(248,185,27)" fg:x="338" fg:w="1"/><text x="27.2468%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.9968%" y="533" width="0.0799%" height="15" fill="rgb(225,118,47)" fg:x="338" fg:w="1"/><text x="27.2468%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.9968%" y="517" width="0.0799%" height="15" fill="rgb(220,185,44)" fg:x="338" fg:w="1"/><text x="27.2468%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.9968%" y="501" width="0.0799%" height="15" fill="rgb(227,95,24)" fg:x="338" fg:w="1"/><text x="27.2468%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.9968%" y="485" width="0.0799%" height="15" fill="rgb(252,84,24)" fg:x="338" fg:w="1"/><text x="27.2468%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.9968%" y="469" width="0.0799%" height="15" fill="rgb(240,34,44)" fg:x="338" fg:w="1"/><text x="27.2468%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0767%" y="533" width="0.0799%" height="15" fill="rgb(209,72,54)" fg:x="339" fg:w="1"/><text x="27.3267%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0767%" y="517" width="0.0799%" height="15" fill="rgb(226,19,45)" fg:x="339" fg:w="1"/><text x="27.3267%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0767%" y="501" width="0.0799%" height="15" fill="rgb(246,7,45)" fg:x="339" fg:w="1"/><text x="27.3267%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0767%" y="485" width="0.0799%" height="15" fill="rgb(225,45,2)" fg:x="339" fg:w="1"/><text x="27.3267%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0767%" y="469" width="0.0799%" height="15" fill="rgb(221,80,29)" fg:x="339" fg:w="1"/><text x="27.3267%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0767%" y="453" width="0.0799%" height="15" fill="rgb(228,11,19)" fg:x="339" fg:w="1"/><text x="27.3267%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.0767%" y="437" width="0.0799%" height="15" fill="rgb(243,17,21)" fg:x="339" fg:w="1"/><text x="27.3267%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.0767%" y="421" width="0.0799%" height="15" fill="rgb(243,88,8)" fg:x="339" fg:w="1"/><text x="27.3267%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.0767%" y="405" width="0.0799%" height="15" fill="rgb(214,17,9)" fg:x="339" fg:w="1"/><text x="27.3267%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.0767%" y="389" width="0.0799%" height="15" fill="rgb(232,169,15)" fg:x="339" fg:w="1"/><text x="27.3267%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.0767%" y="373" width="0.0799%" height="15" fill="rgb(232,86,53)" fg:x="339" fg:w="1"/><text x="27.3267%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.0767%" y="357" width="0.0799%" height="15" fill="rgb(222,100,4)" fg:x="339" fg:w="1"/><text x="27.3267%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.0767%" y="341" width="0.0799%" height="15" fill="rgb(253,151,38)" fg:x="339" fg:w="1"/><text x="27.3267%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.0767%" y="325" width="0.0799%" height="15" fill="rgb(238,215,29)" fg:x="339" fg:w="1"/><text x="27.3267%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.0767%" y="309" width="0.0799%" height="15" fill="rgb(205,128,53)" fg:x="339" fg:w="1"/><text x="27.3267%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0767%" y="293" width="0.0799%" height="15" fill="rgb(248,183,14)" fg:x="339" fg:w="1"/><text x="27.3267%" y="303.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="26.5176%" y="613" width="0.7188%" height="15" fill="rgb(244,172,35)" fg:x="332" fg:w="9"/><text x="26.7676%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.72%)</title><rect x="26.5176%" y="597" width="0.7188%" height="15" fill="rgb(234,93,19)" fg:x="332" fg:w="9"/><text x="26.7676%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="26.9968%" y="581" width="0.2396%" height="15" fill="rgb(227,109,7)" fg:x="338" fg:w="3"/><text x="27.2468%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="27.0767%" y="565" width="0.1597%" height="15" fill="rgb(233,136,54)" fg:x="339" fg:w="2"/><text x="27.3267%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.0767%" y="549" width="0.1597%" height="15" fill="rgb(233,19,40)" fg:x="339" fg:w="2"/><text x="27.3267%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.1565%" y="533" width="0.0799%" height="15" fill="rgb(247,41,18)" fg:x="340" fg:w="1"/><text x="27.4065%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.1565%" y="517" width="0.0799%" height="15" fill="rgb(220,34,34)" fg:x="340" fg:w="1"/><text x="27.4065%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.1565%" y="501" width="0.0799%" height="15" fill="rgb(222,135,32)" fg:x="340" fg:w="1"/><text x="27.4065%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.2364%" y="597" width="0.0799%" height="15" fill="rgb(214,80,19)" fg:x="341" fg:w="1"/><text x="27.4864%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.2364%" y="581" width="0.0799%" height="15" fill="rgb(234,54,46)" fg:x="341" fg:w="1"/><text x="27.4864%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="27.2364%" y="565" width="0.0799%" height="15" fill="rgb(251,48,23)" fg:x="341" fg:w="1"/><text x="27.4864%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="27.2364%" y="613" width="0.1597%" height="15" fill="rgb(254,109,52)" fg:x="341" fg:w="2"/><text x="27.4864%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="27.3163%" y="597" width="0.0799%" height="15" fill="rgb(240,186,19)" fg:x="342" fg:w="1"/><text x="27.5663%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.3163%" y="581" width="0.0799%" height="15" fill="rgb(246,187,17)" fg:x="342" fg:w="1"/><text x="27.5663%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3163%" y="565" width="0.0799%" height="15" fill="rgb(212,21,5)" fg:x="342" fg:w="1"/><text x="27.5663%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3163%" y="549" width="0.0799%" height="15" fill="rgb(225,185,18)" fg:x="342" fg:w="1"/><text x="27.5663%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.3962%" y="517" width="0.0799%" height="15" fill="rgb(245,114,17)" fg:x="343" fg:w="1"/><text x="27.6462%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.3962%" y="501" width="0.0799%" height="15" fill="rgb(223,164,24)" fg:x="343" fg:w="1"/><text x="27.6462%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.3962%" y="485" width="0.0799%" height="15" fill="rgb(211,228,3)" fg:x="343" fg:w="1"/><text x="27.6462%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.3962%" y="469" width="0.0799%" height="15" fill="rgb(223,16,38)" fg:x="343" fg:w="1"/><text x="27.6462%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.3962%" y="453" width="0.0799%" height="15" fill="rgb(207,31,54)" fg:x="343" fg:w="1"/><text x="27.6462%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="27.3962%" y="565" width="0.1597%" height="15" fill="rgb(220,39,11)" fg:x="343" fg:w="2"/><text x="27.6462%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="27.3962%" y="549" width="0.1597%" height="15" fill="rgb(235,185,0)" fg:x="343" fg:w="2"/><text x="27.6462%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.3962%" y="533" width="0.1597%" height="15" fill="rgb(249,39,18)" fg:x="343" fg:w="2"/><text x="27.6462%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.4760%" y="517" width="0.0799%" height="15" fill="rgb(240,110,33)" fg:x="344" fg:w="1"/><text x="27.7260%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.4760%" y="501" width="0.0799%" height="15" fill="rgb(210,92,42)" fg:x="344" fg:w="1"/><text x="27.7260%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.4760%" y="485" width="0.0799%" height="15" fill="rgb(218,215,28)" fg:x="344" fg:w="1"/><text x="27.7260%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.4760%" y="469" width="0.0799%" height="15" fill="rgb(238,215,36)" fg:x="344" fg:w="1"/><text x="27.7260%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.4760%" y="453" width="0.0799%" height="15" fill="rgb(220,31,10)" fg:x="344" fg:w="1"/><text x="27.7260%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.4760%" y="437" width="0.0799%" height="15" fill="rgb(212,93,14)" fg:x="344" fg:w="1"/><text x="27.7260%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.4760%" y="421" width="0.0799%" height="15" fill="rgb(254,207,2)" fg:x="344" fg:w="1"/><text x="27.7260%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.4760%" y="405" width="0.0799%" height="15" fill="rgb(205,57,44)" fg:x="344" fg:w="1"/><text x="27.7260%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.4760%" y="389" width="0.0799%" height="15" fill="rgb(226,151,19)" fg:x="344" fg:w="1"/><text x="27.7260%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.4760%" y="373" width="0.0799%" height="15" fill="rgb(230,72,30)" fg:x="344" fg:w="1"/><text x="27.7260%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="27.4760%" y="357" width="0.0799%" height="15" fill="rgb(244,0,8)" fg:x="344" fg:w="1"/><text x="27.7260%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="27.4760%" y="341" width="0.0799%" height="15" fill="rgb(230,192,6)" fg:x="344" fg:w="1"/><text x="27.7260%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.6358%" y="453" width="0.0799%" height="15" fill="rgb(233,207,13)" fg:x="346" fg:w="1"/><text x="27.8858%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6358%" y="437" width="0.0799%" height="15" fill="rgb(206,227,7)" fg:x="346" fg:w="1"/><text x="27.8858%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.7157%" y="453" width="0.0799%" height="15" fill="rgb(213,217,25)" fg:x="347" fg:w="1"/><text x="27.9657%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.7157%" y="437" width="0.0799%" height="15" fill="rgb(249,75,4)" fg:x="347" fg:w="1"/><text x="27.9657%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.7157%" y="421" width="0.0799%" height="15" fill="rgb(225,114,18)" fg:x="347" fg:w="1"/><text x="27.9657%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.7157%" y="405" width="0.0799%" height="15" fill="rgb(211,162,40)" fg:x="347" fg:w="1"/><text x="27.9657%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.7157%" y="389" width="0.0799%" height="15" fill="rgb(206,49,29)" fg:x="347" fg:w="1"/><text x="27.9657%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.7157%" y="373" width="0.0799%" height="15" fill="rgb(244,8,6)" fg:x="347" fg:w="1"/><text x="27.9657%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.7157%" y="357" width="0.0799%" height="15" fill="rgb(231,194,28)" fg:x="347" fg:w="1"/><text x="27.9657%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.7157%" y="341" width="0.0799%" height="15" fill="rgb(210,69,5)" fg:x="347" fg:w="1"/><text x="27.9657%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.7157%" y="325" width="0.0799%" height="15" fill="rgb(216,186,12)" fg:x="347" fg:w="1"/><text x="27.9657%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.7157%" y="309" width="0.0799%" height="15" fill="rgb(238,61,15)" fg:x="347" fg:w="1"/><text x="27.9657%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.7157%" y="293" width="0.0799%" height="15" fill="rgb(226,104,1)" fg:x="347" fg:w="1"/><text x="27.9657%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.7157%" y="277" width="0.0799%" height="15" fill="rgb(229,128,15)" fg:x="347" fg:w="1"/><text x="27.9657%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.6358%" y="485" width="0.2396%" height="15" fill="rgb(247,110,15)" fg:x="346" fg:w="3"/><text x="27.8858%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.6358%" y="469" width="0.2396%" height="15" fill="rgb(210,74,48)" fg:x="346" fg:w="3"/><text x="27.8858%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.7955%" y="453" width="0.0799%" height="15" fill="rgb(246,121,10)" fg:x="348" fg:w="1"/><text x="28.0455%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8754%" y="485" width="0.0799%" height="15" fill="rgb(214,156,37)" fg:x="349" fg:w="1"/><text x="28.1254%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8754%" y="469" width="0.0799%" height="15" fill="rgb(214,210,34)" fg:x="349" fg:w="1"/><text x="28.1254%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.8754%" y="453" width="0.0799%" height="15" fill="rgb(237,93,35)" fg:x="349" fg:w="1"/><text x="28.1254%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.8754%" y="437" width="0.0799%" height="15" fill="rgb(206,36,8)" fg:x="349" fg:w="1"/><text x="28.1254%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.8754%" y="421" width="0.0799%" height="15" fill="rgb(208,151,12)" fg:x="349" fg:w="1"/><text x="28.1254%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.8754%" y="405" width="0.0799%" height="15" fill="rgb(225,133,52)" fg:x="349" fg:w="1"/><text x="28.1254%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.8754%" y="389" width="0.0799%" height="15" fill="rgb(231,71,53)" fg:x="349" fg:w="1"/><text x="28.1254%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.8754%" y="373" width="0.0799%" height="15" fill="rgb(243,76,21)" fg:x="349" fg:w="1"/><text x="28.1254%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.8754%" y="357" width="0.0799%" height="15" fill="rgb(252,144,3)" fg:x="349" fg:w="1"/><text x="28.1254%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.8754%" y="341" width="0.0799%" height="15" fill="rgb(231,199,10)" fg:x="349" fg:w="1"/><text x="28.1254%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.8754%" y="325" width="0.0799%" height="15" fill="rgb(215,18,11)" fg:x="349" fg:w="1"/><text x="28.1254%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.8754%" y="309" width="0.0799%" height="15" fill="rgb(241,65,24)" fg:x="349" fg:w="1"/><text x="28.1254%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="27.6358%" y="501" width="0.3994%" height="15" fill="rgb(251,192,38)" fg:x="346" fg:w="5"/><text x="27.8858%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.9553%" y="485" width="0.0799%" height="15" fill="rgb(205,9,35)" fg:x="350" fg:w="1"/><text x="28.2053%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="27.6358%" y="517" width="0.4792%" height="15" fill="rgb(229,225,49)" fg:x="346" fg:w="6"/><text x="27.8858%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.0351%" y="501" width="0.0799%" height="15" fill="rgb(207,125,39)" fg:x="351" fg:w="1"/><text x="28.2851%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.1150%" y="517" width="0.0799%" height="15" fill="rgb(222,78,19)" fg:x="352" fg:w="1"/><text x="28.3650%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.1150%" y="501" width="0.0799%" height="15" fill="rgb(248,207,20)" fg:x="352" fg:w="1"/><text x="28.3650%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.1150%" y="485" width="0.0799%" height="15" fill="rgb(205,103,49)" fg:x="352" fg:w="1"/><text x="28.3650%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.1150%" y="469" width="0.0799%" height="15" fill="rgb(216,42,28)" fg:x="352" fg:w="1"/><text x="28.3650%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.1150%" y="453" width="0.0799%" height="15" fill="rgb(213,205,53)" fg:x="352" fg:w="1"/><text x="28.3650%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.1150%" y="437" width="0.0799%" height="15" fill="rgb(239,140,53)" fg:x="352" fg:w="1"/><text x="28.3650%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.1150%" y="421" width="0.0799%" height="15" fill="rgb(248,95,9)" fg:x="352" fg:w="1"/><text x="28.3650%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1150%" y="405" width="0.0799%" height="15" fill="rgb(254,58,47)" fg:x="352" fg:w="1"/><text x="28.3650%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.04%)</title><rect x="27.3962%" y="597" width="1.0383%" height="15" fill="rgb(234,227,14)" fg:x="343" fg:w="13"/><text x="27.6462%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (13 samples, 1.04%)</title><rect x="27.3962%" y="581" width="1.0383%" height="15" fill="rgb(205,192,45)" fg:x="343" fg:w="13"/><text x="27.6462%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="27.5559%" y="565" width="0.8786%" height="15" fill="rgb(253,187,31)" fg:x="345" fg:w="11"/><text x="27.8059%" y="575.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="27.6358%" y="549" width="0.7987%" height="15" fill="rgb(222,6,32)" fg:x="346" fg:w="10"/><text x="27.8858%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="27.6358%" y="533" width="0.7987%" height="15" fill="rgb(249,190,19)" fg:x="346" fg:w="10"/><text x="27.8858%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.1949%" y="517" width="0.2396%" height="15" fill="rgb(251,28,20)" fg:x="353" fg:w="3"/><text x="28.4449%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.1949%" y="501" width="0.2396%" height="15" fill="rgb(210,223,40)" fg:x="353" fg:w="3"/><text x="28.4449%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.1949%" y="485" width="0.2396%" height="15" fill="rgb(216,137,22)" fg:x="353" fg:w="3"/><text x="28.4449%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.1949%" y="469" width="0.2396%" height="15" fill="rgb(247,39,34)" fg:x="353" fg:w="3"/><text x="28.4449%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="28.1949%" y="453" width="0.2396%" height="15" fill="rgb(239,43,50)" fg:x="353" fg:w="3"/><text x="28.4449%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.1949%" y="437" width="0.2396%" height="15" fill="rgb(241,212,9)" fg:x="353" fg:w="3"/><text x="28.4449%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.1949%" y="421" width="0.2396%" height="15" fill="rgb(205,8,2)" fg:x="353" fg:w="3"/><text x="28.4449%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.1949%" y="405" width="0.2396%" height="15" fill="rgb(217,173,54)" fg:x="353" fg:w="3"/><text x="28.4449%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.2748%" y="389" width="0.1597%" height="15" fill="rgb(208,149,52)" fg:x="354" fg:w="2"/><text x="28.5248%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.2748%" y="373" width="0.1597%" height="15" fill="rgb(239,99,40)" fg:x="354" fg:w="2"/><text x="28.5248%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.3546%" y="357" width="0.0799%" height="15" fill="rgb(233,214,26)" fg:x="355" fg:w="1"/><text x="28.6046%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (41 samples, 3.27%)</title><rect x="25.2396%" y="645" width="3.2748%" height="15" fill="rgb(231,225,37)" fg:x="316" fg:w="41"/><text x="25.4896%" y="655.50">plu..</text></g><g><title>plugins_core::tools::set_container (25 samples, 2.00%)</title><rect x="26.5176%" y="629" width="1.9968%" height="15" fill="rgb(252,55,35)" fg:x="332" fg:w="25"/><text x="26.7676%" y="639.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (14 samples, 1.12%)</title><rect x="27.3962%" y="613" width="1.1182%" height="15" fill="rgb(239,43,18)" fg:x="343" fg:w="14"/><text x="27.6462%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="28.4345%" y="597" width="0.0799%" height="15" fill="rgb(251,125,49)" fg:x="356" fg:w="1"/><text x="28.6845%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.4345%" y="581" width="0.0799%" height="15" fill="rgb(212,83,54)" fg:x="356" fg:w="1"/><text x="28.6845%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="28.4345%" y="565" width="0.0799%" height="15" fill="rgb(250,75,6)" fg:x="356" fg:w="1"/><text x="28.6845%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="28.4345%" y="549" width="0.0799%" height="15" fill="rgb(252,36,40)" fg:x="356" fg:w="1"/><text x="28.6845%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="28.5144%" y="597" width="0.0799%" height="15" fill="rgb(230,91,51)" fg:x="357" fg:w="1"/><text x="28.7644%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.5144%" y="581" width="0.0799%" height="15" fill="rgb(212,92,28)" fg:x="357" fg:w="1"/><text x="28.7644%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="28.5144%" y="645" width="0.1597%" height="15" fill="rgb(227,13,22)" fg:x="357" fg:w="2"/><text x="28.7644%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="28.5144%" y="629" width="0.1597%" height="15" fill="rgb(239,204,32)" fg:x="357" fg:w="2"/><text x="28.7644%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.5144%" y="613" width="0.1597%" height="15" fill="rgb(228,49,41)" fg:x="357" fg:w="2"/><text x="28.7644%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="28.5942%" y="597" width="0.0799%" height="15" fill="rgb(206,95,6)" fg:x="358" fg:w="1"/><text x="28.8442%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.5942%" y="581" width="0.0799%" height="15" fill="rgb(251,20,14)" fg:x="358" fg:w="1"/><text x="28.8442%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5942%" y="565" width="0.0799%" height="15" fill="rgb(214,99,28)" fg:x="358" fg:w="1"/><text x="28.8442%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5942%" y="549" width="0.0799%" height="15" fill="rgb(239,122,54)" fg:x="358" fg:w="1"/><text x="28.8442%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5942%" y="533" width="0.0799%" height="15" fill="rgb(218,217,46)" fg:x="358" fg:w="1"/><text x="28.8442%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5942%" y="517" width="0.0799%" height="15" fill="rgb(249,106,28)" fg:x="358" fg:w="1"/><text x="28.8442%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.5942%" y="501" width="0.0799%" height="15" fill="rgb(250,158,18)" fg:x="358" fg:w="1"/><text x="28.8442%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.5942%" y="485" width="0.0799%" height="15" fill="rgb(226,137,29)" fg:x="358" fg:w="1"/><text x="28.8442%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.5942%" y="469" width="0.0799%" height="15" fill="rgb(210,188,1)" fg:x="358" fg:w="1"/><text x="28.8442%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.5942%" y="453" width="0.0799%" height="15" fill="rgb(227,84,42)" fg:x="358" fg:w="1"/><text x="28.8442%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.5942%" y="437" width="0.0799%" height="15" fill="rgb(222,147,48)" fg:x="358" fg:w="1"/><text x="28.8442%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.5942%" y="421" width="0.0799%" height="15" fill="rgb(241,150,43)" fg:x="358" fg:w="1"/><text x="28.8442%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.5942%" y="405" width="0.0799%" height="15" fill="rgb(206,139,52)" fg:x="358" fg:w="1"/><text x="28.8442%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.5942%" y="389" width="0.0799%" height="15" fill="rgb(230,63,14)" fg:x="358" fg:w="1"/><text x="28.8442%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.5942%" y="373" width="0.0799%" height="15" fill="rgb(247,8,20)" fg:x="358" fg:w="1"/><text x="28.8442%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.5942%" y="357" width="0.0799%" height="15" fill="rgb(213,115,4)" fg:x="358" fg:w="1"/><text x="28.8442%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.5942%" y="341" width="0.0799%" height="15" fill="rgb(241,79,49)" fg:x="358" fg:w="1"/><text x="28.8442%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.5942%" y="325" width="0.0799%" height="15" fill="rgb(222,42,35)" fg:x="358" fg:w="1"/><text x="28.8442%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.6741%" y="581" width="0.0799%" height="15" fill="rgb(247,59,23)" fg:x="359" fg:w="1"/><text x="28.9241%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.6741%" y="565" width="0.0799%" height="15" fill="rgb(247,93,18)" fg:x="359" fg:w="1"/><text x="28.9241%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="28.6741%" y="645" width="0.1597%" height="15" fill="rgb(249,107,47)" fg:x="359" fg:w="2"/><text x="28.9241%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="28.6741%" y="629" width="0.1597%" height="15" fill="rgb(219,27,1)" fg:x="359" fg:w="2"/><text x="28.9241%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="28.6741%" y="613" width="0.1597%" height="15" fill="rgb(217,82,32)" fg:x="359" fg:w="2"/><text x="28.9241%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="28.6741%" y="597" width="0.1597%" height="15" fill="rgb(250,129,47)" fg:x="359" fg:w="2"/><text x="28.9241%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="28.7540%" y="581" width="0.0799%" height="15" fill="rgb(253,88,35)" fg:x="360" fg:w="1"/><text x="29.0040%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.7540%" y="565" width="0.0799%" height="15" fill="rgb(245,221,14)" fg:x="360" fg:w="1"/><text x="29.0040%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="28.7540%" y="549" width="0.0799%" height="15" fill="rgb(217,119,54)" fg:x="360" fg:w="1"/><text x="29.0040%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.7540%" y="533" width="0.0799%" height="15" fill="rgb(247,128,31)" fg:x="360" fg:w="1"/><text x="29.0040%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="28.7540%" y="517" width="0.0799%" height="15" fill="rgb(211,99,22)" fg:x="360" fg:w="1"/><text x="29.0040%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="28.7540%" y="501" width="0.0799%" height="15" fill="rgb(212,20,17)" fg:x="360" fg:w="1"/><text x="29.0040%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.7540%" y="485" width="0.0799%" height="15" fill="rgb(209,159,29)" fg:x="360" fg:w="1"/><text x="29.0040%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.7540%" y="469" width="0.0799%" height="15" fill="rgb(222,177,53)" fg:x="360" fg:w="1"/><text x="29.0040%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.7540%" y="453" width="0.0799%" height="15" fill="rgb(234,46,43)" fg:x="360" fg:w="1"/><text x="29.0040%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="28.8339%" y="613" width="0.0799%" height="15" fill="rgb(208,108,14)" fg:x="361" fg:w="1"/><text x="29.0839%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="28.8339%" y="597" width="0.0799%" height="15" fill="rgb(226,78,53)" fg:x="361" fg:w="1"/><text x="29.0839%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="28.8339%" y="581" width="0.0799%" height="15" fill="rgb(230,20,41)" fg:x="361" fg:w="1"/><text x="29.0839%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="28.8339%" y="565" width="0.0799%" height="15" fill="rgb(213,195,35)" fg:x="361" fg:w="1"/><text x="29.0839%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.8339%" y="549" width="0.0799%" height="15" fill="rgb(242,62,36)" fg:x="361" fg:w="1"/><text x="29.0839%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.8339%" y="533" width="0.0799%" height="15" fill="rgb(222,210,37)" fg:x="361" fg:w="1"/><text x="29.0839%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="28.8339%" y="517" width="0.0799%" height="15" fill="rgb(232,107,19)" fg:x="361" fg:w="1"/><text x="29.0839%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="28.8339%" y="501" width="0.0799%" height="15" fill="rgb(235,85,17)" fg:x="361" fg:w="1"/><text x="29.0839%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.8339%" y="485" width="0.0799%" height="15" fill="rgb(219,195,31)" fg:x="361" fg:w="1"/><text x="29.0839%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.8339%" y="469" width="0.0799%" height="15" fill="rgb(231,183,30)" fg:x="361" fg:w="1"/><text x="29.0839%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.8339%" y="453" width="0.0799%" height="15" fill="rgb(212,0,11)" fg:x="361" fg:w="1"/><text x="29.0839%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="28.8339%" y="437" width="0.0799%" height="15" fill="rgb(249,53,54)" fg:x="361" fg:w="1"/><text x="29.0839%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="28.8339%" y="421" width="0.0799%" height="15" fill="rgb(211,118,13)" fg:x="361" fg:w="1"/><text x="29.0839%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="28.8339%" y="405" width="0.0799%" height="15" fill="rgb(237,42,9)" fg:x="361" fg:w="1"/><text x="29.0839%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="28.8339%" y="389" width="0.0799%" height="15" fill="rgb(227,68,32)" fg:x="361" fg:w="1"/><text x="29.0839%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="28.8339%" y="373" width="0.0799%" height="15" fill="rgb(238,10,7)" fg:x="361" fg:w="1"/><text x="29.0839%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="28.8339%" y="357" width="0.0799%" height="15" fill="rgb(224,42,12)" fg:x="361" fg:w="1"/><text x="29.0839%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="28.8339%" y="341" width="0.0799%" height="15" fill="rgb(252,190,5)" fg:x="361" fg:w="1"/><text x="29.0839%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.08%)</title><rect x="28.8339%" y="325" width="0.0799%" height="15" fill="rgb(220,214,39)" fg:x="361" fg:w="1"/><text x="29.0839%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.9137%" y="549" width="0.0799%" height="15" fill="rgb(247,98,4)" fg:x="362" fg:w="1"/><text x="29.1637%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="28.9137%" y="613" width="0.1597%" height="15" fill="rgb(211,60,12)" fg:x="362" fg:w="2"/><text x="29.1637%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="28.9137%" y="597" width="0.1597%" height="15" fill="rgb(224,42,10)" fg:x="362" fg:w="2"/><text x="29.1637%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="28.9137%" y="581" width="0.1597%" height="15" fill="rgb(217,167,4)" fg:x="362" fg:w="2"/><text x="29.1637%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="28.9137%" y="565" width="0.1597%" height="15" fill="rgb(253,18,17)" fg:x="362" fg:w="2"/><text x="29.1637%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.9936%" y="549" width="0.0799%" height="15" fill="rgb(249,186,44)" fg:x="363" fg:w="1"/><text x="29.2436%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.0735%" y="565" width="0.0799%" height="15" fill="rgb(254,124,54)" fg:x="364" fg:w="1"/><text x="29.3235%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.0735%" y="549" width="0.0799%" height="15" fill="rgb(220,124,39)" fg:x="364" fg:w="1"/><text x="29.3235%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="29.2332%" y="549" width="0.0799%" height="15" fill="rgb(225,96,46)" fg:x="366" fg:w="1"/><text x="29.4832%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.2332%" y="533" width="0.0799%" height="15" fill="rgb(221,106,12)" fg:x="366" fg:w="1"/><text x="29.4832%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.3131%" y="437" width="0.0799%" height="15" fill="rgb(227,133,23)" fg:x="367" fg:w="1"/><text x="29.5631%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.3131%" y="421" width="0.0799%" height="15" fill="rgb(216,44,52)" fg:x="367" fg:w="1"/><text x="29.5631%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="28.8339%" y="629" width="0.6390%" height="15" fill="rgb(239,149,7)" fg:x="361" fg:w="8"/><text x="29.0839%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="29.0735%" y="613" width="0.3994%" height="15" fill="rgb(211,157,31)" fg:x="364" fg:w="5"/><text x="29.3235%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="29.0735%" y="597" width="0.3994%" height="15" fill="rgb(206,215,22)" fg:x="364" fg:w="5"/><text x="29.3235%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="29.0735%" y="581" width="0.3994%" height="15" fill="rgb(208,113,15)" fg:x="364" fg:w="5"/><text x="29.3235%" y="591.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="29.1534%" y="565" width="0.3195%" height="15" fill="rgb(207,189,15)" fg:x="365" fg:w="4"/><text x="29.4034%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="29.3131%" y="549" width="0.1597%" height="15" fill="rgb(231,115,4)" fg:x="367" fg:w="2"/><text x="29.5631%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="29.3131%" y="533" width="0.1597%" height="15" fill="rgb(253,117,2)" fg:x="367" fg:w="2"/><text x="29.5631%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.3131%" y="517" width="0.1597%" height="15" fill="rgb(248,48,24)" fg:x="367" fg:w="2"/><text x="29.5631%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="29.3131%" y="501" width="0.1597%" height="15" fill="rgb(241,28,46)" fg:x="367" fg:w="2"/><text x="29.5631%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.3131%" y="485" width="0.1597%" height="15" fill="rgb(216,165,52)" fg:x="367" fg:w="2"/><text x="29.5631%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="29.3131%" y="469" width="0.1597%" height="15" fill="rgb(220,222,34)" fg:x="367" fg:w="2"/><text x="29.5631%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="29.3131%" y="453" width="0.1597%" height="15" fill="rgb(247,222,49)" fg:x="367" fg:w="2"/><text x="29.5631%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.3930%" y="437" width="0.0799%" height="15" fill="rgb(240,10,31)" fg:x="368" fg:w="1"/><text x="29.6430%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5527%" y="501" width="0.0799%" height="15" fill="rgb(221,199,35)" fg:x="370" fg:w="1"/><text x="29.8027%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5527%" y="485" width="0.0799%" height="15" fill="rgb(230,223,11)" fg:x="370" fg:w="1"/><text x="29.8027%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.5527%" y="469" width="0.0799%" height="15" fill="rgb(218,82,45)" fg:x="370" fg:w="1"/><text x="29.8027%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.5527%" y="453" width="0.0799%" height="15" fill="rgb(233,213,33)" fg:x="370" fg:w="1"/><text x="29.8027%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.5527%" y="437" width="0.0799%" height="15" fill="rgb(210,143,52)" fg:x="370" fg:w="1"/><text x="29.8027%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.5527%" y="421" width="0.0799%" height="15" fill="rgb(206,95,4)" fg:x="370" fg:w="1"/><text x="29.8027%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.5527%" y="405" width="0.0799%" height="15" fill="rgb(246,164,46)" fg:x="370" fg:w="1"/><text x="29.8027%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.5527%" y="389" width="0.0799%" height="15" fill="rgb(213,210,47)" fg:x="370" fg:w="1"/><text x="29.8027%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.5527%" y="373" width="0.0799%" height="15" fill="rgb(210,12,38)" fg:x="370" fg:w="1"/><text x="29.8027%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.5527%" y="357" width="0.0799%" height="15" fill="rgb(252,192,54)" fg:x="370" fg:w="1"/><text x="29.8027%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.5527%" y="341" width="0.0799%" height="15" fill="rgb(242,92,6)" fg:x="370" fg:w="1"/><text x="29.8027%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.5527%" y="325" width="0.0799%" height="15" fill="rgb(253,154,15)" fg:x="370" fg:w="1"/><text x="29.8027%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.5527%" y="309" width="0.0799%" height="15" fill="rgb(209,20,43)" fg:x="370" fg:w="1"/><text x="29.8027%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.5527%" y="293" width="0.0799%" height="15" fill="rgb(232,28,49)" fg:x="370" fg:w="1"/><text x="29.8027%" y="303.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="29.5527%" y="613" width="0.1597%" height="15" fill="rgb(248,131,53)" fg:x="370" fg:w="2"/><text x="29.8027%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="29.5527%" y="597" width="0.1597%" height="15" fill="rgb(214,16,30)" fg:x="370" fg:w="2"/><text x="29.8027%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="29.5527%" y="581" width="0.1597%" height="15" fill="rgb(245,16,0)" fg:x="370" fg:w="2"/><text x="29.8027%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="29.5527%" y="565" width="0.1597%" height="15" fill="rgb(245,17,35)" fg:x="370" fg:w="2"/><text x="29.8027%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.5527%" y="549" width="0.1597%" height="15" fill="rgb(249,27,53)" fg:x="370" fg:w="2"/><text x="29.8027%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.5527%" y="533" width="0.1597%" height="15" fill="rgb(214,73,24)" fg:x="370" fg:w="2"/><text x="29.8027%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.5527%" y="517" width="0.1597%" height="15" fill="rgb(223,84,37)" fg:x="370" fg:w="2"/><text x="29.8027%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.6326%" y="501" width="0.0799%" height="15" fill="rgb(210,109,28)" fg:x="371" fg:w="1"/><text x="29.8826%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="29.7125%" y="613" width="0.0799%" height="15" fill="rgb(208,186,6)" fg:x="372" fg:w="1"/><text x="29.9625%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.8722%" y="597" width="0.0799%" height="15" fill="rgb(235,201,30)" fg:x="374" fg:w="1"/><text x="30.1222%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="29.9521%" y="597" width="0.0799%" height="15" fill="rgb(216,198,48)" fg:x="375" fg:w="1"/><text x="30.2021%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.9521%" y="581" width="0.0799%" height="15" fill="rgb(254,186,25)" fg:x="375" fg:w="1"/><text x="30.2021%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.9521%" y="565" width="0.0799%" height="15" fill="rgb(227,87,5)" fg:x="375" fg:w="1"/><text x="30.2021%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.9521%" y="549" width="0.0799%" height="15" fill="rgb(236,205,25)" fg:x="375" fg:w="1"/><text x="30.2021%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="29.7923%" y="613" width="0.3195%" height="15" fill="rgb(229,99,32)" fg:x="373" fg:w="4"/><text x="30.0423%" y="623.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0319%" y="597" width="0.0799%" height="15" fill="rgb(231,177,31)" fg:x="376" fg:w="1"/><text x="30.2819%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.1118%" y="501" width="0.1597%" height="15" fill="rgb(246,15,2)" fg:x="377" fg:w="2"/><text x="30.3618%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.1118%" y="485" width="0.1597%" height="15" fill="rgb(207,39,15)" fg:x="377" fg:w="2"/><text x="30.3618%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.1118%" y="469" width="0.1597%" height="15" fill="rgb(207,44,9)" fg:x="377" fg:w="2"/><text x="30.3618%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1917%" y="453" width="0.0799%" height="15" fill="rgb(225,224,33)" fg:x="378" fg:w="1"/><text x="30.4417%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="30.1118%" y="517" width="0.2396%" height="15" fill="rgb(252,151,3)" fg:x="377" fg:w="3"/><text x="30.3618%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2716%" y="501" width="0.0799%" height="15" fill="rgb(211,140,13)" fg:x="379" fg:w="1"/><text x="30.5216%" y="511.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="30.3514%" y="517" width="0.0799%" height="15" fill="rgb(239,225,17)" fg:x="380" fg:w="1"/><text x="30.6014%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="30.1118%" y="565" width="0.3994%" height="15" fill="rgb(223,170,52)" fg:x="377" fg:w="5"/><text x="30.3618%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="30.1118%" y="549" width="0.3994%" height="15" fill="rgb(212,64,21)" fg:x="377" fg:w="5"/><text x="30.3618%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="30.1118%" y="533" width="0.3994%" height="15" fill="rgb(236,126,48)" fg:x="377" fg:w="5"/><text x="30.3618%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.4313%" y="517" width="0.0799%" height="15" fill="rgb(209,135,11)" fg:x="381" fg:w="1"/><text x="30.6813%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.4313%" y="501" width="0.0799%" height="15" fill="rgb(228,126,40)" fg:x="381" fg:w="1"/><text x="30.6813%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.4313%" y="485" width="0.0799%" height="15" fill="rgb(205,196,36)" fg:x="381" fg:w="1"/><text x="30.6813%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.4313%" y="469" width="0.0799%" height="15" fill="rgb(243,160,33)" fg:x="381" fg:w="1"/><text x="30.6813%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.4313%" y="453" width="0.0799%" height="15" fill="rgb(210,84,20)" fg:x="381" fg:w="1"/><text x="30.6813%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.4313%" y="437" width="0.0799%" height="15" fill="rgb(228,213,30)" fg:x="381" fg:w="1"/><text x="30.6813%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.4313%" y="421" width="0.0799%" height="15" fill="rgb(252,33,45)" fg:x="381" fg:w="1"/><text x="30.6813%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.4313%" y="405" width="0.0799%" height="15" fill="rgb(254,227,20)" fg:x="381" fg:w="1"/><text x="30.6813%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="30.4313%" y="389" width="0.0799%" height="15" fill="rgb(228,192,2)" fg:x="381" fg:w="1"/><text x="30.6813%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5112%" y="517" width="0.0799%" height="15" fill="rgb(233,32,8)" fg:x="382" fg:w="1"/><text x="30.7612%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5112%" y="501" width="0.0799%" height="15" fill="rgb(220,146,47)" fg:x="382" fg:w="1"/><text x="30.7612%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5112%" y="485" width="0.0799%" height="15" fill="rgb(246,194,1)" fg:x="382" fg:w="1"/><text x="30.7612%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5112%" y="469" width="0.0799%" height="15" fill="rgb(218,203,9)" fg:x="382" fg:w="1"/><text x="30.7612%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (202 samples, 16.13%)</title><rect x="14.5367%" y="661" width="16.1342%" height="15" fill="rgb(237,97,14)" fg:x="182" fg:w="202"/><text x="14.7867%" y="671.50">plugins_core::build::Buil..</text></g><g><title>plugins_core::build::Build::occupying (23 samples, 1.84%)</title><rect x="28.8339%" y="645" width="1.8371%" height="15" fill="rgb(239,76,15)" fg:x="361" fg:w="23"/><text x="29.0839%" y="655.50">p..</text></g><g><title>plugins_core::tools::set_occupying (15 samples, 1.20%)</title><rect x="29.4728%" y="629" width="1.1981%" height="15" fill="rgb(222,53,45)" fg:x="369" fg:w="15"/><text x="29.7228%" y="639.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (7 samples, 0.56%)</title><rect x="30.1118%" y="613" width="0.5591%" height="15" fill="rgb(237,88,5)" fg:x="377" fg:w="7"/><text x="30.3618%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="30.1118%" y="597" width="0.5591%" height="15" fill="rgb(218,223,35)" fg:x="377" fg:w="7"/><text x="30.3618%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="30.1118%" y="581" width="0.5591%" height="15" fill="rgb(243,229,38)" fg:x="377" fg:w="7"/><text x="30.3618%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="30.5112%" y="565" width="0.1597%" height="15" fill="rgb(240,75,41)" fg:x="382" fg:w="2"/><text x="30.7612%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.5112%" y="549" width="0.1597%" height="15" fill="rgb(209,110,37)" fg:x="382" fg:w="2"/><text x="30.7612%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.5112%" y="533" width="0.1597%" height="15" fill="rgb(221,130,46)" fg:x="382" fg:w="2"/><text x="30.7612%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5911%" y="517" width="0.0799%" height="15" fill="rgb(237,160,20)" fg:x="383" fg:w="1"/><text x="30.8411%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5911%" y="501" width="0.0799%" height="15" fill="rgb(234,126,24)" fg:x="383" fg:w="1"/><text x="30.8411%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5911%" y="485" width="0.0799%" height="15" fill="rgb(207,177,9)" fg:x="383" fg:w="1"/><text x="30.8411%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5911%" y="469" width="0.0799%" height="15" fill="rgb(231,191,33)" fg:x="383" fg:w="1"/><text x="30.8411%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.5911%" y="453" width="0.0799%" height="15" fill="rgb(207,42,1)" fg:x="383" fg:w="1"/><text x="30.8411%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5911%" y="437" width="0.0799%" height="15" fill="rgb(218,34,50)" fg:x="383" fg:w="1"/><text x="30.8411%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5911%" y="421" width="0.0799%" height="15" fill="rgb(254,126,39)" fg:x="383" fg:w="1"/><text x="30.8411%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5911%" y="405" width="0.0799%" height="15" fill="rgb(251,17,26)" fg:x="383" fg:w="1"/><text x="30.8411%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5911%" y="389" width="0.0799%" height="15" fill="rgb(252,215,34)" fg:x="383" fg:w="1"/><text x="30.8411%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5911%" y="373" width="0.0799%" height="15" fill="rgb(217,120,44)" fg:x="383" fg:w="1"/><text x="30.8411%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="30.6709%" y="629" width="0.0799%" height="15" fill="rgb(211,31,11)" fg:x="384" fg:w="1"/><text x="30.9209%" y="639.50"></text></g><g><title>kernel::model::entity::Entity::new_with_key (1 samples, 0.08%)</title><rect x="30.6709%" y="613" width="0.0799%" height="15" fill="rgb(222,69,51)" fg:x="384" fg:w="1"/><text x="30.9209%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="30.6709%" y="661" width="0.1597%" height="15" fill="rgb(215,229,42)" fg:x="384" fg:w="2"/><text x="30.9209%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="30.6709%" y="645" width="0.1597%" height="15" fill="rgb(212,102,15)" fg:x="384" fg:w="2"/><text x="30.9209%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="30.7508%" y="629" width="0.0799%" height="15" fill="rgb(205,179,41)" fg:x="385" fg:w="1"/><text x="31.0008%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7508%" y="613" width="0.0799%" height="15" fill="rgb(219,148,46)" fg:x="385" fg:w="1"/><text x="31.0008%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7508%" y="597" width="0.0799%" height="15" fill="rgb(243,40,19)" fg:x="385" fg:w="1"/><text x="31.0008%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.7508%" y="581" width="0.0799%" height="15" fill="rgb(208,206,34)" fg:x="385" fg:w="1"/><text x="31.0008%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.7508%" y="565" width="0.0799%" height="15" fill="rgb(244,184,38)" fg:x="385" fg:w="1"/><text x="31.0008%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.7508%" y="549" width="0.0799%" height="15" fill="rgb(244,151,47)" fg:x="385" fg:w="1"/><text x="31.0008%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7508%" y="533" width="0.0799%" height="15" fill="rgb(236,134,42)" fg:x="385" fg:w="1"/><text x="31.0008%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7508%" y="517" width="0.0799%" height="15" fill="rgb(233,93,22)" fg:x="385" fg:w="1"/><text x="31.0008%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.7508%" y="501" width="0.0799%" height="15" fill="rgb(211,202,10)" fg:x="385" fg:w="1"/><text x="31.0008%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.7508%" y="485" width="0.0799%" height="15" fill="rgb(240,63,8)" fg:x="385" fg:w="1"/><text x="31.0008%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.7508%" y="469" width="0.0799%" height="15" fill="rgb(214,9,4)" fg:x="385" fg:w="1"/><text x="31.0008%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.7508%" y="453" width="0.0799%" height="15" fill="rgb(243,66,45)" fg:x="385" fg:w="1"/><text x="31.0008%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="30.9904%" y="613" width="0.0799%" height="15" fill="rgb(220,50,42)" fg:x="388" fg:w="1"/><text x="31.2404%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="30.9904%" y="597" width="0.0799%" height="15" fill="rgb(220,134,27)" fg:x="388" fg:w="1"/><text x="31.2404%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.9904%" y="581" width="0.0799%" height="15" fill="rgb(246,151,50)" fg:x="388" fg:w="1"/><text x="31.2404%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.9904%" y="565" width="0.0799%" height="15" fill="rgb(238,216,27)" fg:x="388" fg:w="1"/><text x="31.2404%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.9904%" y="549" width="0.0799%" height="15" fill="rgb(250,92,11)" fg:x="388" fg:w="1"/><text x="31.2404%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.9904%" y="533" width="0.0799%" height="15" fill="rgb(248,183,6)" fg:x="388" fg:w="1"/><text x="31.2404%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.9904%" y="517" width="0.0799%" height="15" fill="rgb(211,204,50)" fg:x="388" fg:w="1"/><text x="31.2404%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.9904%" y="501" width="0.0799%" height="15" fill="rgb(252,55,47)" fg:x="388" fg:w="1"/><text x="31.2404%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="31.0703%" y="613" width="0.0799%" height="15" fill="rgb(240,198,32)" fg:x="389" fg:w="1"/><text x="31.3203%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.0703%" y="597" width="0.0799%" height="15" fill="rgb(224,203,19)" fg:x="389" fg:w="1"/><text x="31.3203%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.2300%" y="597" width="0.0799%" height="15" fill="rgb(205,27,16)" fg:x="391" fg:w="1"/><text x="31.4800%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.3099%" y="501" width="0.0799%" height="15" fill="rgb(224,226,17)" fg:x="392" fg:w="1"/><text x="31.5599%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="31.3099%" y="565" width="0.1597%" height="15" fill="rgb(205,216,54)" fg:x="392" fg:w="2"/><text x="31.5599%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.3099%" y="549" width="0.1597%" height="15" fill="rgb(248,168,46)" fg:x="392" fg:w="2"/><text x="31.5599%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.3099%" y="533" width="0.1597%" height="15" fill="rgb(226,111,45)" fg:x="392" fg:w="2"/><text x="31.5599%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.3099%" y="517" width="0.1597%" height="15" fill="rgb(231,15,9)" fg:x="392" fg:w="2"/><text x="31.5599%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.3898%" y="501" width="0.0799%" height="15" fill="rgb(243,168,3)" fg:x="393" fg:w="1"/><text x="31.6398%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.3898%" y="485" width="0.0799%" height="15" fill="rgb(221,220,54)" fg:x="393" fg:w="1"/><text x="31.6398%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.3898%" y="469" width="0.0799%" height="15" fill="rgb(232,174,38)" fg:x="393" fg:w="1"/><text x="31.6398%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.3898%" y="453" width="0.0799%" height="15" fill="rgb(205,14,38)" fg:x="393" fg:w="1"/><text x="31.6398%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.3898%" y="437" width="0.0799%" height="15" fill="rgb(234,89,19)" fg:x="393" fg:w="1"/><text x="31.6398%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.3898%" y="421" width="0.0799%" height="15" fill="rgb(216,68,51)" fg:x="393" fg:w="1"/><text x="31.6398%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.5495%" y="533" width="0.0799%" height="15" fill="rgb(213,49,2)" fg:x="395" fg:w="1"/><text x="31.7995%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.5495%" y="517" width="0.0799%" height="15" fill="rgb(242,146,30)" fg:x="395" fg:w="1"/><text x="31.7995%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="30.9904%" y="629" width="0.7188%" height="15" fill="rgb(224,188,11)" fg:x="388" fg:w="9"/><text x="31.2404%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="31.1502%" y="613" width="0.5591%" height="15" fill="rgb(213,159,11)" fg:x="390" fg:w="7"/><text x="31.4002%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="31.3099%" y="597" width="0.3994%" height="15" fill="rgb(229,13,31)" fg:x="392" fg:w="5"/><text x="31.5599%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="31.3099%" y="581" width="0.3994%" height="15" fill="rgb(209,103,11)" fg:x="392" fg:w="5"/><text x="31.5599%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="31.4696%" y="565" width="0.2396%" height="15" fill="rgb(206,3,4)" fg:x="394" fg:w="3"/><text x="31.7196%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="31.5495%" y="549" width="0.1597%" height="15" fill="rgb(252,10,49)" fg:x="395" fg:w="2"/><text x="31.7995%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6294%" y="533" width="0.0799%" height="15" fill="rgb(217,160,32)" fg:x="396" fg:w="1"/><text x="31.8794%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.6294%" y="517" width="0.0799%" height="15" fill="rgb(249,196,0)" fg:x="396" fg:w="1"/><text x="31.8794%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6294%" y="501" width="0.0799%" height="15" fill="rgb(213,17,48)" fg:x="396" fg:w="1"/><text x="31.8794%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.6294%" y="485" width="0.0799%" height="15" fill="rgb(206,42,46)" fg:x="396" fg:w="1"/><text x="31.8794%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.6294%" y="469" width="0.0799%" height="15" fill="rgb(212,105,24)" fg:x="396" fg:w="1"/><text x="31.8794%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6294%" y="453" width="0.0799%" height="15" fill="rgb(243,216,30)" fg:x="396" fg:w="1"/><text x="31.8794%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.6294%" y="437" width="0.0799%" height="15" fill="rgb(207,121,3)" fg:x="396" fg:w="1"/><text x="31.8794%" y="447.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="31.7093%" y="549" width="0.0799%" height="15" fill="rgb(249,78,0)" fg:x="397" fg:w="1"/><text x="31.9593%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="31.7093%" y="533" width="0.0799%" height="15" fill="rgb(244,151,32)" fg:x="397" fg:w="1"/><text x="31.9593%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.7093%" y="517" width="0.0799%" height="15" fill="rgb(228,63,25)" fg:x="397" fg:w="1"/><text x="31.9593%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.7093%" y="501" width="0.0799%" height="15" fill="rgb(231,158,23)" fg:x="397" fg:w="1"/><text x="31.9593%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.7093%" y="485" width="0.0799%" height="15" fill="rgb(248,107,23)" fg:x="397" fg:w="1"/><text x="31.9593%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.7093%" y="469" width="0.0799%" height="15" fill="rgb(215,168,21)" fg:x="397" fg:w="1"/><text x="31.9593%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.7093%" y="453" width="0.0799%" height="15" fill="rgb(227,83,22)" fg:x="397" fg:w="1"/><text x="31.9593%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.7093%" y="437" width="0.0799%" height="15" fill="rgb(217,118,43)" fg:x="397" fg:w="1"/><text x="31.9593%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7093%" y="421" width="0.0799%" height="15" fill="rgb(229,220,41)" fg:x="397" fg:w="1"/><text x="31.9593%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="31.7093%" y="629" width="0.1597%" height="15" fill="rgb(254,146,46)" fg:x="397" fg:w="2"/><text x="31.9593%" y="639.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (2 samples, 0.16%)</title><rect x="31.7093%" y="613" width="0.1597%" height="15" fill="rgb(233,208,31)" fg:x="397" fg:w="2"/><text x="31.9593%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="31.7093%" y="597" width="0.1597%" height="15" fill="rgb(222,162,7)" fg:x="397" fg:w="2"/><text x="31.9593%" y="607.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="31.7093%" y="581" width="0.1597%" height="15" fill="rgb(230,117,45)" fg:x="397" fg:w="2"/><text x="31.9593%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="31.7093%" y="565" width="0.1597%" height="15" fill="rgb(239,163,6)" fg:x="397" fg:w="2"/><text x="31.9593%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="31.7891%" y="549" width="0.0799%" height="15" fill="rgb(246,130,17)" fg:x="398" fg:w="1"/><text x="32.0391%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.7891%" y="533" width="0.0799%" height="15" fill="rgb(216,84,5)" fg:x="398" fg:w="1"/><text x="32.0391%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.7891%" y="517" width="0.0799%" height="15" fill="rgb(230,200,21)" fg:x="398" fg:w="1"/><text x="32.0391%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="31.7891%" y="501" width="0.0799%" height="15" fill="rgb(224,2,8)" fg:x="398" fg:w="1"/><text x="32.0391%" y="511.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="31.7891%" y="485" width="0.0799%" height="15" fill="rgb(238,178,10)" fg:x="398" fg:w="1"/><text x="32.0391%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.7891%" y="469" width="0.0799%" height="15" fill="rgb(242,153,24)" fg:x="398" fg:w="1"/><text x="32.0391%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.7891%" y="453" width="0.0799%" height="15" fill="rgb(242,32,48)" fg:x="398" fg:w="1"/><text x="32.0391%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="31.7891%" y="437" width="0.0799%" height="15" fill="rgb(227,36,0)" fg:x="398" fg:w="1"/><text x="32.0391%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="31.7891%" y="421" width="0.0799%" height="15" fill="rgb(251,33,35)" fg:x="398" fg:w="1"/><text x="32.0391%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="31.7891%" y="405" width="0.0799%" height="15" fill="rgb(232,168,51)" fg:x="398" fg:w="1"/><text x="32.0391%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="31.7891%" y="389" width="0.0799%" height="15" fill="rgb(228,56,10)" fg:x="398" fg:w="1"/><text x="32.0391%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.7891%" y="373" width="0.0799%" height="15" fill="rgb(231,10,26)" fg:x="398" fg:w="1"/><text x="32.0391%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.8690%" y="581" width="0.0799%" height="15" fill="rgb(226,202,12)" fg:x="399" fg:w="1"/><text x="32.1190%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9489%" y="565" width="0.0799%" height="15" fill="rgb(251,49,21)" fg:x="400" fg:w="1"/><text x="32.1989%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9489%" y="549" width="0.0799%" height="15" fill="rgb(206,228,28)" fg:x="400" fg:w="1"/><text x="32.1989%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (16 samples, 1.28%)</title><rect x="30.8307%" y="661" width="1.2780%" height="15" fill="rgb(205,198,31)" fg:x="386" fg:w="16"/><text x="31.0807%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (15 samples, 1.20%)</title><rect x="30.9105%" y="645" width="1.1981%" height="15" fill="rgb(213,69,1)" fg:x="387" fg:w="15"/><text x="31.1605%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="31.8690%" y="629" width="0.2396%" height="15" fill="rgb(209,177,9)" fg:x="399" fg:w="3"/><text x="32.1190%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="31.8690%" y="613" width="0.2396%" height="15" fill="rgb(227,119,30)" fg:x="399" fg:w="3"/><text x="32.1190%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="31.8690%" y="597" width="0.2396%" height="15" fill="rgb(234,106,41)" fg:x="399" fg:w="3"/><text x="32.1190%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="31.9489%" y="581" width="0.1597%" height="15" fill="rgb(244,103,47)" fg:x="400" fg:w="2"/><text x="32.1989%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="32.0288%" y="565" width="0.0799%" height="15" fill="rgb(212,211,25)" fg:x="401" fg:w="1"/><text x="32.2788%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.0288%" y="549" width="0.0799%" height="15" fill="rgb(208,63,53)" fg:x="401" fg:w="1"/><text x="32.2788%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="32.0288%" y="533" width="0.0799%" height="15" fill="rgb(213,176,21)" fg:x="401" fg:w="1"/><text x="32.2788%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.0288%" y="517" width="0.0799%" height="15" fill="rgb(243,124,12)" fg:x="401" fg:w="1"/><text x="32.2788%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="32.0288%" y="501" width="0.0799%" height="15" fill="rgb(239,2,35)" fg:x="401" fg:w="1"/><text x="32.2788%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="32.0288%" y="485" width="0.0799%" height="15" fill="rgb(253,169,22)" fg:x="401" fg:w="1"/><text x="32.2788%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.0288%" y="469" width="0.0799%" height="15" fill="rgb(254,51,12)" fg:x="401" fg:w="1"/><text x="32.2788%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.0288%" y="453" width="0.0799%" height="15" fill="rgb(244,17,47)" fg:x="401" fg:w="1"/><text x="32.2788%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.0288%" y="437" width="0.0799%" height="15" fill="rgb(251,45,46)" fg:x="401" fg:w="1"/><text x="32.2788%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.0288%" y="421" width="0.0799%" height="15" fill="rgb(223,87,43)" fg:x="401" fg:w="1"/><text x="32.2788%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="32.1086%" y="629" width="0.0799%" height="15" fill="rgb(230,132,31)" fg:x="402" fg:w="1"/><text x="32.3586%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="32.1086%" y="613" width="0.0799%" height="15" fill="rgb(206,99,1)" fg:x="402" fg:w="1"/><text x="32.3586%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.1086%" y="597" width="0.0799%" height="15" fill="rgb(227,110,25)" fg:x="402" fg:w="1"/><text x="32.3586%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="32.1086%" y="581" width="0.0799%" height="15" fill="rgb(217,182,7)" fg:x="402" fg:w="1"/><text x="32.3586%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.1086%" y="565" width="0.0799%" height="15" fill="rgb(250,176,4)" fg:x="402" fg:w="1"/><text x="32.3586%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.1086%" y="549" width="0.0799%" height="15" fill="rgb(244,98,30)" fg:x="402" fg:w="1"/><text x="32.3586%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="32.1086%" y="533" width="0.0799%" height="15" fill="rgb(228,150,42)" fg:x="402" fg:w="1"/><text x="32.3586%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="32.1086%" y="517" width="0.0799%" height="15" fill="rgb(231,91,46)" fg:x="402" fg:w="1"/><text x="32.3586%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.1086%" y="501" width="0.0799%" height="15" fill="rgb(252,161,32)" fg:x="402" fg:w="1"/><text x="32.3586%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.1086%" y="485" width="0.0799%" height="15" fill="rgb(236,69,41)" fg:x="402" fg:w="1"/><text x="32.3586%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.1885%" y="629" width="0.0799%" height="15" fill="rgb(212,160,3)" fg:x="403" fg:w="1"/><text x="32.4385%" y="639.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="32.1885%" y="613" width="0.0799%" height="15" fill="rgb(216,5,50)" fg:x="403" fg:w="1"/><text x="32.4385%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2684%" y="613" width="0.0799%" height="15" fill="rgb(241,138,25)" fg:x="404" fg:w="1"/><text x="32.5184%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.5080%" y="533" width="0.2396%" height="15" fill="rgb(239,42,18)" fg:x="407" fg:w="3"/><text x="32.7580%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5879%" y="517" width="0.1597%" height="15" fill="rgb(239,40,7)" fg:x="408" fg:w="2"/><text x="32.8379%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5879%" y="501" width="0.1597%" height="15" fill="rgb(239,11,31)" fg:x="408" fg:w="2"/><text x="32.8379%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.6677%" y="485" width="0.0799%" height="15" fill="rgb(224,77,40)" fg:x="409" fg:w="1"/><text x="32.9177%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.6677%" y="469" width="0.0799%" height="15" fill="rgb(226,15,5)" fg:x="409" fg:w="1"/><text x="32.9177%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.6677%" y="453" width="0.0799%" height="15" fill="rgb(254,188,5)" fg:x="409" fg:w="1"/><text x="32.9177%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.6677%" y="437" width="0.0799%" height="15" fill="rgb(241,148,52)" fg:x="409" fg:w="1"/><text x="32.9177%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.6677%" y="421" width="0.0799%" height="15" fill="rgb(251,48,36)" fg:x="409" fg:w="1"/><text x="32.9177%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.6677%" y="405" width="0.0799%" height="15" fill="rgb(243,83,13)" fg:x="409" fg:w="1"/><text x="32.9177%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.6677%" y="389" width="0.0799%" height="15" fill="rgb(210,105,0)" fg:x="409" fg:w="1"/><text x="32.9177%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.6677%" y="373" width="0.0799%" height="15" fill="rgb(239,60,36)" fg:x="409" fg:w="1"/><text x="32.9177%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.6677%" y="357" width="0.0799%" height="15" fill="rgb(210,20,0)" fg:x="409" fg:w="1"/><text x="32.9177%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.6677%" y="341" width="0.0799%" height="15" fill="rgb(244,26,53)" fg:x="409" fg:w="1"/><text x="32.9177%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.6677%" y="325" width="0.0799%" height="15" fill="rgb(240,100,49)" fg:x="409" fg:w="1"/><text x="32.9177%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.6677%" y="309" width="0.0799%" height="15" fill="rgb(250,46,45)" fg:x="409" fg:w="1"/><text x="32.9177%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="32.5080%" y="549" width="0.3994%" height="15" fill="rgb(220,181,29)" fg:x="407" fg:w="5"/><text x="32.7580%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.7476%" y="533" width="0.1597%" height="15" fill="rgb(213,137,33)" fg:x="410" fg:w="2"/><text x="32.9976%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.9073%" y="549" width="0.0799%" height="15" fill="rgb(213,27,48)" fg:x="412" fg:w="1"/><text x="33.1573%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="32.1086%" y="645" width="0.9585%" height="15" fill="rgb(245,180,39)" fg:x="402" fg:w="12"/><text x="32.3586%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="32.2684%" y="629" width="0.7987%" height="15" fill="rgb(212,158,42)" fg:x="404" fg:w="10"/><text x="32.5184%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.72%)</title><rect x="32.3482%" y="613" width="0.7188%" height="15" fill="rgb(228,193,18)" fg:x="405" fg:w="9"/><text x="32.5982%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (9 samples, 0.72%)</title><rect x="32.3482%" y="597" width="0.7188%" height="15" fill="rgb(245,172,29)" fg:x="405" fg:w="9"/><text x="32.5982%" y="607.50"></text></g><g><title>kernel::model::props::save_props (8 samples, 0.64%)</title><rect x="32.4281%" y="581" width="0.6390%" height="15" fill="rgb(207,98,24)" fg:x="406" fg:w="8"/><text x="32.6781%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="32.5080%" y="565" width="0.5591%" height="15" fill="rgb(249,92,26)" fg:x="407" fg:w="7"/><text x="32.7580%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="32.9872%" y="549" width="0.0799%" height="15" fill="rgb(217,176,26)" fg:x="413" fg:w="1"/><text x="33.2372%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.9872%" y="533" width="0.0799%" height="15" fill="rgb(221,8,39)" fg:x="413" fg:w="1"/><text x="33.2372%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.9872%" y="517" width="0.0799%" height="15" fill="rgb(208,90,18)" fg:x="413" fg:w="1"/><text x="33.2372%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (357 samples, 28.51%)</title><rect x="4.6326%" y="677" width="28.5144%" height="15" fill="rgb(207,202,30)" fg:x="58" fg:w="357"/><text x="4.8826%" y="687.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixt..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (13 samples, 1.04%)</title><rect x="32.1086%" y="661" width="1.0383%" height="15" fill="rgb(231,124,22)" fg:x="402" fg:w="13"/><text x="32.3586%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="33.0671%" y="645" width="0.0799%" height="15" fill="rgb(206,15,5)" fg:x="414" fg:w="1"/><text x="33.3171%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="33.0671%" y="629" width="0.0799%" height="15" fill="rgb(239,16,52)" fg:x="414" fg:w="1"/><text x="33.3171%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="33.0671%" y="613" width="0.0799%" height="15" fill="rgb(245,213,29)" fg:x="414" fg:w="1"/><text x="33.3171%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="33.1470%" y="677" width="0.0799%" height="15" fill="rgb(213,203,36)" fg:x="415" fg:w="1"/><text x="33.3970%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="33.1470%" y="661" width="0.0799%" height="15" fill="rgb(209,55,18)" fg:x="415" fg:w="1"/><text x="33.3970%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="33.1470%" y="645" width="0.0799%" height="15" fill="rgb(207,133,49)" fg:x="415" fg:w="1"/><text x="33.3970%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.1470%" y="629" width="0.0799%" height="15" fill="rgb(240,33,46)" fg:x="415" fg:w="1"/><text x="33.3970%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="33.3067%" y="661" width="0.0799%" height="15" fill="rgb(212,35,2)" fg:x="417" fg:w="1"/><text x="33.5567%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.3866%" y="629" width="0.0799%" height="15" fill="rgb(231,119,28)" fg:x="418" fg:w="1"/><text x="33.6366%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="33.3866%" y="613" width="0.0799%" height="15" fill="rgb(252,178,7)" fg:x="418" fg:w="1"/><text x="33.6366%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="33.3866%" y="597" width="0.0799%" height="15" fill="rgb(251,91,4)" fg:x="418" fg:w="1"/><text x="33.6366%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4665%" y="517" width="0.0799%" height="15" fill="rgb(233,122,19)" fg:x="419" fg:w="1"/><text x="33.7165%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4665%" y="501" width="0.0799%" height="15" fill="rgb(231,208,46)" fg:x="419" fg:w="1"/><text x="33.7165%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.4665%" y="485" width="0.0799%" height="15" fill="rgb(243,15,41)" fg:x="419" fg:w="1"/><text x="33.7165%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.4665%" y="469" width="0.0799%" height="15" fill="rgb(210,32,43)" fg:x="419" fg:w="1"/><text x="33.7165%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.4665%" y="453" width="0.0799%" height="15" fill="rgb(222,177,15)" fg:x="419" fg:w="1"/><text x="33.7165%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.4665%" y="437" width="0.0799%" height="15" fill="rgb(244,121,34)" fg:x="419" fg:w="1"/><text x="33.7165%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4665%" y="421" width="0.0799%" height="15" fill="rgb(234,138,4)" fg:x="419" fg:w="1"/><text x="33.7165%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.4665%" y="597" width="0.1597%" height="15" fill="rgb(240,97,48)" fg:x="419" fg:w="2"/><text x="33.7165%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.4665%" y="581" width="0.1597%" height="15" fill="rgb(237,65,54)" fg:x="419" fg:w="2"/><text x="33.7165%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="33.4665%" y="565" width="0.1597%" height="15" fill="rgb(214,25,24)" fg:x="419" fg:w="2"/><text x="33.7165%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="33.4665%" y="549" width="0.1597%" height="15" fill="rgb(213,5,3)" fg:x="419" fg:w="2"/><text x="33.7165%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="33.4665%" y="533" width="0.1597%" height="15" fill="rgb(219,81,29)" fg:x="419" fg:w="2"/><text x="33.7165%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.5463%" y="517" width="0.0799%" height="15" fill="rgb(220,43,48)" fg:x="420" fg:w="1"/><text x="33.7963%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.5463%" y="501" width="0.0799%" height="15" fill="rgb(239,157,2)" fg:x="420" fg:w="1"/><text x="33.7963%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="33.6262%" y="581" width="0.1597%" height="15" fill="rgb(213,104,43)" fg:x="421" fg:w="2"/><text x="33.8762%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="33.6262%" y="565" width="0.1597%" height="15" fill="rgb(237,84,9)" fg:x="421" fg:w="2"/><text x="33.8762%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="33.6262%" y="549" width="0.1597%" height="15" fill="rgb(252,6,33)" fg:x="421" fg:w="2"/><text x="33.8762%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.8658%" y="565" width="0.0799%" height="15" fill="rgb(251,172,22)" fg:x="424" fg:w="1"/><text x="34.1158%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="33.9457%" y="565" width="0.0799%" height="15" fill="rgb(244,91,53)" fg:x="425" fg:w="1"/><text x="34.1957%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.9457%" y="549" width="0.0799%" height="15" fill="rgb(219,29,30)" fg:x="425" fg:w="1"/><text x="34.1957%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="33.9457%" y="533" width="0.0799%" height="15" fill="rgb(213,3,15)" fg:x="425" fg:w="1"/><text x="34.1957%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="34.0256%" y="565" width="0.6390%" height="15" fill="rgb(208,25,28)" fg:x="426" fg:w="8"/><text x="34.2756%" y="575.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="34.2652%" y="549" width="0.3994%" height="15" fill="rgb(252,144,25)" fg:x="429" fg:w="5"/><text x="34.5152%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="34.3450%" y="533" width="0.3195%" height="15" fill="rgb(226,220,25)" fg:x="430" fg:w="4"/><text x="34.5950%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="34.3450%" y="517" width="0.3195%" height="15" fill="rgb(212,131,28)" fg:x="430" fg:w="4"/><text x="34.5950%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.5847%" y="501" width="0.0799%" height="15" fill="rgb(219,143,52)" fg:x="433" fg:w="1"/><text x="34.8347%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.5847%" y="485" width="0.0799%" height="15" fill="rgb(215,56,7)" fg:x="433" fg:w="1"/><text x="34.8347%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.5847%" y="469" width="0.0799%" height="15" fill="rgb(239,59,51)" fg:x="433" fg:w="1"/><text x="34.8347%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="34.6645%" y="501" width="0.0799%" height="15" fill="rgb(209,215,4)" fg:x="434" fg:w="1"/><text x="34.9145%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.6645%" y="485" width="0.0799%" height="15" fill="rgb(221,118,39)" fg:x="434" fg:w="1"/><text x="34.9145%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="34.6645%" y="517" width="0.1597%" height="15" fill="rgb(236,6,44)" fg:x="434" fg:w="2"/><text x="34.9145%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.7444%" y="501" width="0.0799%" height="15" fill="rgb(216,122,9)" fg:x="435" fg:w="1"/><text x="34.9944%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="34.6645%" y="549" width="0.2396%" height="15" fill="rgb(244,134,42)" fg:x="434" fg:w="3"/><text x="34.9145%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="34.6645%" y="533" width="0.2396%" height="15" fill="rgb(209,189,35)" fg:x="434" fg:w="3"/><text x="34.9145%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.8243%" y="517" width="0.0799%" height="15" fill="rgb(250,47,36)" fg:x="436" fg:w="1"/><text x="35.0743%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.8243%" y="501" width="0.0799%" height="15" fill="rgb(252,112,4)" fg:x="436" fg:w="1"/><text x="35.0743%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="34.8243%" y="485" width="0.0799%" height="15" fill="rgb(221,79,51)" fg:x="436" fg:w="1"/><text x="35.0743%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="34.9042%" y="549" width="0.2396%" height="15" fill="rgb(232,65,53)" fg:x="437" fg:w="3"/><text x="35.1542%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.9840%" y="533" width="0.1597%" height="15" fill="rgb(211,37,7)" fg:x="438" fg:w="2"/><text x="35.2340%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.0639%" y="517" width="0.0799%" height="15" fill="rgb(234,221,18)" fg:x="439" fg:w="1"/><text x="35.3139%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.0639%" y="501" width="0.0799%" height="15" fill="rgb(220,158,26)" fg:x="439" fg:w="1"/><text x="35.3139%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.3035%" y="533" width="0.0799%" height="15" fill="rgb(220,70,6)" fg:x="442" fg:w="1"/><text x="35.5535%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="35.3834%" y="533" width="0.1597%" height="15" fill="rgb(250,39,48)" fg:x="443" fg:w="2"/><text x="35.6334%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="35.5431%" y="517" width="0.3195%" height="15" fill="rgb(206,40,27)" fg:x="445" fg:w="4"/><text x="35.7931%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="35.6230%" y="501" width="0.2396%" height="15" fill="rgb(247,80,36)" fg:x="446" fg:w="3"/><text x="35.8730%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="35.6230%" y="485" width="0.2396%" height="15" fill="rgb(222,9,20)" fg:x="446" fg:w="3"/><text x="35.8730%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7827%" y="469" width="0.0799%" height="15" fill="rgb(217,26,45)" fg:x="448" fg:w="1"/><text x="36.0327%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="35.8626%" y="501" width="0.3195%" height="15" fill="rgb(221,67,14)" fg:x="449" fg:w="4"/><text x="36.1126%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.0224%" y="485" width="0.1597%" height="15" fill="rgb(248,100,24)" fg:x="451" fg:w="2"/><text x="36.2724%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.1022%" y="469" width="0.0799%" height="15" fill="rgb(230,187,16)" fg:x="452" fg:w="1"/><text x="36.3522%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="36.1022%" y="453" width="0.0799%" height="15" fill="rgb(205,108,13)" fg:x="452" fg:w="1"/><text x="36.3522%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="36.1821%" y="501" width="0.0799%" height="15" fill="rgb(235,71,51)" fg:x="453" fg:w="1"/><text x="36.4321%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.1821%" y="485" width="0.0799%" height="15" fill="rgb(251,172,48)" fg:x="453" fg:w="1"/><text x="36.4321%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="35.8626%" y="517" width="0.4792%" height="15" fill="rgb(240,96,49)" fg:x="449" fg:w="6"/><text x="36.1126%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.2620%" y="501" width="0.0799%" height="15" fill="rgb(235,46,36)" fg:x="454" fg:w="1"/><text x="36.5120%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.2620%" y="485" width="0.0799%" height="15" fill="rgb(244,3,49)" fg:x="454" fg:w="1"/><text x="36.5120%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.2620%" y="469" width="0.0799%" height="15" fill="rgb(206,78,54)" fg:x="454" fg:w="1"/><text x="36.5120%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="35.5431%" y="533" width="0.8786%" height="15" fill="rgb(208,85,42)" fg:x="445" fg:w="11"/><text x="35.7931%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.3419%" y="517" width="0.0799%" height="15" fill="rgb(219,196,21)" fg:x="455" fg:w="1"/><text x="36.5919%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.3419%" y="501" width="0.0799%" height="15" fill="rgb(238,19,9)" fg:x="455" fg:w="1"/><text x="36.5919%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.3419%" y="485" width="0.0799%" height="15" fill="rgb(206,86,13)" fg:x="455" fg:w="1"/><text x="36.5919%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (37 samples, 2.96%)</title><rect x="33.6262%" y="597" width="2.9553%" height="15" fill="rgb(214,123,40)" fg:x="421" fg:w="37"/><text x="33.8762%" y="607.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.80%)</title><rect x="33.7859%" y="581" width="2.7955%" height="15" fill="rgb(243,53,5)" fg:x="423" fg:w="35"/><text x="34.0359%" y="591.50">se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.92%)</title><rect x="34.6645%" y="565" width="1.9169%" height="15" fill="rgb(254,186,31)" fg:x="434" fg:w="24"/><text x="34.9145%" y="575.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.44%)</title><rect x="35.1438%" y="549" width="1.4377%" height="15" fill="rgb(221,216,25)" fg:x="440" fg:w="18"/><text x="35.3938%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.4217%" y="533" width="0.1597%" height="15" fill="rgb(248,107,42)" fg:x="456" fg:w="2"/><text x="36.6717%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="36.5815%" y="565" width="0.1597%" height="15" fill="rgb(221,85,43)" fg:x="458" fg:w="2"/><text x="36.8315%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="36.5815%" y="549" width="0.1597%" height="15" fill="rgb(225,34,24)" fg:x="458" fg:w="2"/><text x="36.8315%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.7412%" y="549" width="0.0799%" height="15" fill="rgb(211,119,1)" fg:x="460" fg:w="1"/><text x="36.9912%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="36.8211%" y="549" width="0.1597%" height="15" fill="rgb(254,216,46)" fg:x="461" fg:w="2"/><text x="37.0711%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="37.0607%" y="533" width="0.1597%" height="15" fill="rgb(238,11,38)" fg:x="464" fg:w="2"/><text x="37.3107%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1406%" y="517" width="0.0799%" height="15" fill="rgb(233,50,15)" fg:x="465" fg:w="1"/><text x="37.3906%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="36.5815%" y="597" width="0.7987%" height="15" fill="rgb(217,181,29)" fg:x="458" fg:w="10"/><text x="36.8315%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="36.5815%" y="581" width="0.7987%" height="15" fill="rgb(214,56,3)" fg:x="458" fg:w="10"/><text x="36.8315%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="36.7412%" y="565" width="0.6390%" height="15" fill="rgb(230,69,45)" fg:x="460" fg:w="8"/><text x="36.9912%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="36.9808%" y="549" width="0.3994%" height="15" fill="rgb(224,201,50)" fg:x="463" fg:w="5"/><text x="37.2308%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="37.2204%" y="533" width="0.1597%" height="15" fill="rgb(217,228,18)" fg:x="466" fg:w="2"/><text x="37.4704%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.3003%" y="517" width="0.0799%" height="15" fill="rgb(239,33,44)" fg:x="467" fg:w="1"/><text x="37.5503%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.3003%" y="501" width="0.0799%" height="15" fill="rgb(248,210,23)" fg:x="467" fg:w="1"/><text x="37.5503%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.3003%" y="485" width="0.0799%" height="15" fill="rgb(253,135,8)" fg:x="467" fg:w="1"/><text x="37.5503%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.3003%" y="469" width="0.0799%" height="15" fill="rgb(217,98,21)" fg:x="467" fg:w="1"/><text x="37.5503%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.6198%" y="565" width="0.0799%" height="15" fill="rgb(253,130,21)" fg:x="471" fg:w="1"/><text x="37.8698%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.6997%" y="533" width="0.0799%" height="15" fill="rgb(207,81,54)" fg:x="472" fg:w="1"/><text x="37.9497%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="37.7796%" y="533" width="0.1597%" height="15" fill="rgb(232,48,33)" fg:x="473" fg:w="2"/><text x="38.0296%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.9393%" y="517" width="0.0799%" height="15" fill="rgb(211,9,35)" fg:x="475" fg:w="1"/><text x="38.1893%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="38.0990%" y="501" width="0.3195%" height="15" fill="rgb(205,152,21)" fg:x="477" fg:w="4"/><text x="38.3490%" y="511.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="38.0990%" y="485" width="0.3195%" height="15" fill="rgb(249,21,27)" fg:x="477" fg:w="4"/><text x="38.3490%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.4185%" y="485" width="0.0799%" height="15" fill="rgb(252,29,24)" fg:x="481" fg:w="1"/><text x="38.6685%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="38.4984%" y="485" width="0.1597%" height="15" fill="rgb(230,130,50)" fg:x="482" fg:w="2"/><text x="38.7484%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.6581%" y="453" width="0.1597%" height="15" fill="rgb(239,144,14)" fg:x="484" fg:w="2"/><text x="38.9081%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="37.6997%" y="565" width="1.1981%" height="15" fill="rgb(227,111,50)" fg:x="472" fg:w="15"/><text x="37.9497%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="37.6997%" y="549" width="1.1981%" height="15" fill="rgb(254,84,20)" fg:x="472" fg:w="15"/><text x="37.9497%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="37.9393%" y="533" width="0.9585%" height="15" fill="rgb(232,90,48)" fg:x="475" fg:w="12"/><text x="38.1893%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="38.0192%" y="517" width="0.8786%" height="15" fill="rgb(253,63,47)" fg:x="476" fg:w="11"/><text x="38.2692%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="38.4185%" y="501" width="0.4792%" height="15" fill="rgb(251,146,35)" fg:x="481" fg:w="6"/><text x="38.6685%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.6581%" y="485" width="0.2396%" height="15" fill="rgb(229,192,35)" fg:x="484" fg:w="3"/><text x="38.9081%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.6581%" y="469" width="0.2396%" height="15" fill="rgb(225,68,9)" fg:x="484" fg:w="3"/><text x="38.9081%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.8179%" y="453" width="0.0799%" height="15" fill="rgb(214,97,34)" fg:x="486" fg:w="1"/><text x="39.0679%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.8179%" y="437" width="0.0799%" height="15" fill="rgb(253,31,26)" fg:x="486" fg:w="1"/><text x="39.0679%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.8179%" y="421" width="0.0799%" height="15" fill="rgb(225,151,47)" fg:x="486" fg:w="1"/><text x="39.0679%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="39.0575%" y="549" width="0.3994%" height="15" fill="rgb(206,185,9)" fg:x="489" fg:w="5"/><text x="39.3075%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="39.0575%" y="533" width="0.3994%" height="15" fill="rgb(249,65,17)" fg:x="489" fg:w="5"/><text x="39.3075%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="39.2173%" y="517" width="0.2396%" height="15" fill="rgb(220,110,10)" fg:x="491" fg:w="3"/><text x="39.4673%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="39.2173%" y="501" width="0.2396%" height="15" fill="rgb(222,198,49)" fg:x="491" fg:w="3"/><text x="39.4673%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="39.2971%" y="485" width="0.1597%" height="15" fill="rgb(239,81,13)" fg:x="492" fg:w="2"/><text x="39.5471%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (24 samples, 1.92%)</title><rect x="37.6198%" y="581" width="1.9169%" height="15" fill="rgb(216,128,11)" fg:x="471" fg:w="24"/><text x="37.8698%" y="591.50">&lt;..</text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="38.8978%" y="565" width="0.6390%" height="15" fill="rgb(247,156,8)" fg:x="487" fg:w="8"/><text x="39.1478%" y="575.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="39.4569%" y="549" width="0.0799%" height="15" fill="rgb(219,173,1)" fg:x="494" fg:w="1"/><text x="39.7069%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4569%" y="533" width="0.0799%" height="15" fill="rgb(227,42,24)" fg:x="494" fg:w="1"/><text x="39.7069%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6965%" y="549" width="0.0799%" height="15" fill="rgb(253,219,50)" fg:x="497" fg:w="1"/><text x="39.9465%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9361%" y="517" width="0.0799%" height="15" fill="rgb(215,191,54)" fg:x="500" fg:w="1"/><text x="40.1861%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="39.7764%" y="549" width="0.3994%" height="15" fill="rgb(238,83,12)" fg:x="498" fg:w="5"/><text x="40.0264%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="39.9361%" y="533" width="0.2396%" height="15" fill="rgb(205,124,9)" fg:x="500" fg:w="3"/><text x="40.1861%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="40.0160%" y="517" width="0.1597%" height="15" fill="rgb(253,174,7)" fg:x="501" fg:w="2"/><text x="40.2660%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="40.1757%" y="549" width="0.1597%" height="15" fill="rgb(206,134,49)" fg:x="503" fg:w="2"/><text x="40.4257%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="40.3355%" y="549" width="0.3994%" height="15" fill="rgb(221,89,20)" fg:x="505" fg:w="5"/><text x="40.5855%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="40.3355%" y="533" width="0.3994%" height="15" fill="rgb(240,205,13)" fg:x="505" fg:w="5"/><text x="40.5855%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="40.3355%" y="517" width="0.3994%" height="15" fill="rgb(237,174,32)" fg:x="505" fg:w="5"/><text x="40.5855%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.5751%" y="501" width="0.1597%" height="15" fill="rgb(226,12,15)" fg:x="508" fg:w="2"/><text x="40.8251%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="40.6550%" y="485" width="0.0799%" height="15" fill="rgb(245,160,52)" fg:x="509" fg:w="1"/><text x="40.9050%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.0543%" y="501" width="0.2396%" height="15" fill="rgb(253,80,21)" fg:x="514" fg:w="3"/><text x="41.3043%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.0543%" y="485" width="0.2396%" height="15" fill="rgb(231,225,22)" fg:x="514" fg:w="3"/><text x="41.3043%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.2141%" y="469" width="0.0799%" height="15" fill="rgb(253,185,12)" fg:x="516" fg:w="1"/><text x="41.4641%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="41.3738%" y="485" width="0.1597%" height="15" fill="rgb(234,197,21)" fg:x="518" fg:w="2"/><text x="41.6238%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="41.5335%" y="469" width="0.3195%" height="15" fill="rgb(210,47,30)" fg:x="520" fg:w="4"/><text x="41.7835%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.7732%" y="453" width="0.0799%" height="15" fill="rgb(246,139,27)" fg:x="523" fg:w="1"/><text x="42.0232%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.7732%" y="437" width="0.0799%" height="15" fill="rgb(226,130,16)" fg:x="523" fg:w="1"/><text x="42.0232%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="41.9329%" y="453" width="0.0799%" height="15" fill="rgb(237,208,20)" fg:x="525" fg:w="1"/><text x="42.1829%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.0128%" y="421" width="0.0799%" height="15" fill="rgb(245,186,28)" fg:x="526" fg:w="1"/><text x="42.2628%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="42.2524%" y="405" width="0.3195%" height="15" fill="rgb(238,105,39)" fg:x="529" fg:w="4"/><text x="42.5024%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4920%" y="389" width="0.0799%" height="15" fill="rgb(253,228,11)" fg:x="532" fg:w="1"/><text x="42.7420%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.4920%" y="373" width="0.0799%" height="15" fill="rgb(224,136,38)" fg:x="532" fg:w="1"/><text x="42.7420%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="42.0128%" y="453" width="0.7987%" height="15" fill="rgb(211,3,25)" fg:x="526" fg:w="10"/><text x="42.2628%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="42.0128%" y="437" width="0.7987%" height="15" fill="rgb(238,66,34)" fg:x="526" fg:w="10"/><text x="42.2628%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="42.0927%" y="421" width="0.7188%" height="15" fill="rgb(223,188,11)" fg:x="527" fg:w="9"/><text x="42.3427%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="42.5719%" y="405" width="0.2396%" height="15" fill="rgb(221,10,35)" fg:x="533" fg:w="3"/><text x="42.8219%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="42.6518%" y="389" width="0.1597%" height="15" fill="rgb(223,18,44)" fg:x="534" fg:w="2"/><text x="42.9018%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.6518%" y="373" width="0.1597%" height="15" fill="rgb(220,97,41)" fg:x="534" fg:w="2"/><text x="42.9018%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.6518%" y="357" width="0.1597%" height="15" fill="rgb(206,95,45)" fg:x="534" fg:w="2"/><text x="42.9018%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="42.6518%" y="341" width="0.1597%" height="15" fill="rgb(209,96,13)" fg:x="534" fg:w="2"/><text x="42.9018%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.92%)</title><rect x="40.9744%" y="517" width="1.9169%" height="15" fill="rgb(237,39,34)" fg:x="513" fg:w="24"/><text x="41.2244%" y="527.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.60%)</title><rect x="41.2939%" y="501" width="1.5974%" height="15" fill="rgb(213,49,47)" fg:x="517" fg:w="20"/><text x="41.5439%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="41.5335%" y="485" width="1.3578%" height="15" fill="rgb(205,107,27)" fg:x="520" fg:w="17"/><text x="41.7835%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="41.8530%" y="469" width="1.0383%" height="15" fill="rgb(212,142,9)" fg:x="524" fg:w="13"/><text x="42.1030%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8115%" y="453" width="0.0799%" height="15" fill="rgb(226,182,0)" fg:x="536" fg:w="1"/><text x="43.0615%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (25 samples, 2.00%)</title><rect x="40.9744%" y="533" width="1.9968%" height="15" fill="rgb(231,3,53)" fg:x="513" fg:w="25"/><text x="41.2244%" y="543.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="42.8914%" y="517" width="0.0799%" height="15" fill="rgb(246,111,28)" fg:x="537" fg:w="1"/><text x="43.1414%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9712%" y="533" width="0.0799%" height="15" fill="rgb(254,183,7)" fg:x="538" fg:w="1"/><text x="43.2212%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (45 samples, 3.59%)</title><rect x="39.5367%" y="581" width="3.5942%" height="15" fill="rgb(247,177,28)" fg:x="495" fg:w="45"/><text x="39.7867%" y="591.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (43 samples, 3.43%)</title><rect x="39.6965%" y="565" width="3.4345%" height="15" fill="rgb(244,43,1)" fg:x="497" fg:w="43"/><text x="39.9465%" y="575.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (30 samples, 2.40%)</title><rect x="40.7348%" y="549" width="2.3962%" height="15" fill="rgb(207,2,35)" fg:x="510" fg:w="30"/><text x="40.9848%" y="559.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0511%" y="533" width="0.0799%" height="15" fill="rgb(213,83,22)" fg:x="539" fg:w="1"/><text x="43.3011%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0511%" y="517" width="0.0799%" height="15" fill="rgb(246,212,13)" fg:x="539" fg:w="1"/><text x="43.3011%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0511%" y="501" width="0.0799%" height="15" fill="rgb(213,127,46)" fg:x="539" fg:w="1"/><text x="43.3011%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.4505%" y="469" width="0.0799%" height="15" fill="rgb(219,215,39)" fg:x="544" fg:w="1"/><text x="43.7005%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="43.6901%" y="437" width="0.3195%" height="15" fill="rgb(227,99,17)" fg:x="547" fg:w="4"/><text x="43.9401%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="43.6901%" y="421" width="0.3195%" height="15" fill="rgb(208,155,18)" fg:x="547" fg:w="4"/><text x="43.9401%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.8498%" y="405" width="0.1597%" height="15" fill="rgb(223,204,38)" fg:x="549" fg:w="2"/><text x="44.0998%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="44.1693%" y="357" width="0.2396%" height="15" fill="rgb(212,114,21)" fg:x="553" fg:w="3"/><text x="44.4193%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.2492%" y="341" width="0.1597%" height="15" fill="rgb(250,74,13)" fg:x="554" fg:w="2"/><text x="44.4992%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.2492%" y="325" width="0.1597%" height="15" fill="rgb(234,7,1)" fg:x="554" fg:w="2"/><text x="44.4992%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.2492%" y="309" width="0.1597%" height="15" fill="rgb(207,138,31)" fg:x="554" fg:w="2"/><text x="44.4992%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.2492%" y="293" width="0.1597%" height="15" fill="rgb(215,186,42)" fg:x="554" fg:w="2"/><text x="44.4992%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="44.4089%" y="357" width="0.1597%" height="15" fill="rgb(229,205,49)" fg:x="556" fg:w="2"/><text x="44.6589%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="44.4888%" y="341" width="0.0799%" height="15" fill="rgb(216,156,32)" fg:x="557" fg:w="1"/><text x="44.7388%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="44.0096%" y="389" width="0.6390%" height="15" fill="rgb(238,7,21)" fg:x="551" fg:w="8"/><text x="44.2596%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="44.0895%" y="373" width="0.5591%" height="15" fill="rgb(249,190,22)" fg:x="552" fg:w="7"/><text x="44.3395%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.5687%" y="357" width="0.0799%" height="15" fill="rgb(253,51,31)" fg:x="558" fg:w="1"/><text x="44.8187%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.5687%" y="341" width="0.0799%" height="15" fill="rgb(237,90,54)" fg:x="558" fg:w="1"/><text x="44.8187%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.5687%" y="325" width="0.0799%" height="15" fill="rgb(250,214,33)" fg:x="558" fg:w="1"/><text x="44.8187%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.6486%" y="389" width="0.0799%" height="15" fill="rgb(237,10,49)" fg:x="559" fg:w="1"/><text x="44.8986%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="44.6486%" y="373" width="0.0799%" height="15" fill="rgb(241,56,36)" fg:x="559" fg:w="1"/><text x="44.8986%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="44.0096%" y="421" width="0.7987%" height="15" fill="rgb(227,164,12)" fg:x="551" fg:w="10"/><text x="44.2596%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="44.0096%" y="405" width="0.7987%" height="15" fill="rgb(249,149,35)" fg:x="551" fg:w="10"/><text x="44.2596%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7284%" y="389" width="0.0799%" height="15" fill="rgb(238,227,50)" fg:x="560" fg:w="1"/><text x="44.9784%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.8083%" y="421" width="0.0799%" height="15" fill="rgb(235,102,45)" fg:x="561" fg:w="1"/><text x="45.0583%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="44.8083%" y="405" width="0.0799%" height="15" fill="rgb(211,10,38)" fg:x="561" fg:w="1"/><text x="45.0583%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.36%)</title><rect x="43.6102%" y="453" width="1.3578%" height="15" fill="rgb(219,77,48)" fg:x="546" fg:w="17"/><text x="43.8602%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="44.0096%" y="437" width="0.9585%" height="15" fill="rgb(246,6,15)" fg:x="551" fg:w="12"/><text x="44.2596%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.8882%" y="421" width="0.0799%" height="15" fill="rgb(207,220,2)" fg:x="562" fg:w="1"/><text x="45.1382%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.8882%" y="405" width="0.0799%" height="15" fill="rgb(242,48,14)" fg:x="562" fg:w="1"/><text x="45.1382%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8882%" y="389" width="0.0799%" height="15" fill="rgb(218,19,27)" fg:x="562" fg:w="1"/><text x="45.1382%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="44.9681%" y="453" width="0.1597%" height="15" fill="rgb(228,0,35)" fg:x="563" fg:w="2"/><text x="45.2181%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0479%" y="437" width="0.0799%" height="15" fill="rgb(244,142,54)" fg:x="564" fg:w="1"/><text x="45.2979%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.76%)</title><rect x="43.4505%" y="485" width="1.7572%" height="15" fill="rgb(243,217,40)" fg:x="544" fg:w="22"/><text x="43.7005%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 1.68%)</title><rect x="43.5304%" y="469" width="1.6773%" height="15" fill="rgb(207,114,16)" fg:x="545" fg:w="21"/><text x="43.7804%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.1278%" y="453" width="0.0799%" height="15" fill="rgb(224,33,25)" fg:x="565" fg:w="1"/><text x="45.3778%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.1278%" y="437" width="0.0799%" height="15" fill="rgb(230,93,54)" fg:x="565" fg:w="1"/><text x="45.3778%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.1278%" y="421" width="0.0799%" height="15" fill="rgb(224,56,24)" fg:x="565" fg:w="1"/><text x="45.3778%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="45.2077%" y="485" width="0.1597%" height="15" fill="rgb(235,189,50)" fg:x="566" fg:w="2"/><text x="45.4577%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.2875%" y="469" width="0.0799%" height="15" fill="rgb(242,173,8)" fg:x="567" fg:w="1"/><text x="45.5375%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.24%)</title><rect x="43.2109%" y="517" width="2.2364%" height="15" fill="rgb(209,206,10)" fg:x="541" fg:w="28"/><text x="43.4609%" y="527.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (27 samples, 2.16%)</title><rect x="43.2907%" y="501" width="2.1565%" height="15" fill="rgb(213,182,44)" fg:x="542" fg:w="27"/><text x="43.5407%" y="511.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.3674%" y="485" width="0.0799%" height="15" fill="rgb(243,51,15)" fg:x="568" fg:w="1"/><text x="45.6174%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.3674%" y="469" width="0.0799%" height="15" fill="rgb(241,13,14)" fg:x="568" fg:w="1"/><text x="45.6174%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.3674%" y="453" width="0.0799%" height="15" fill="rgb(239,147,24)" fg:x="568" fg:w="1"/><text x="45.6174%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.4473%" y="501" width="0.0799%" height="15" fill="rgb(223,129,16)" fg:x="569" fg:w="1"/><text x="45.6973%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.5272%" y="501" width="0.0799%" height="15" fill="rgb(209,169,13)" fg:x="570" fg:w="1"/><text x="45.7772%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="45.4473%" y="517" width="0.2396%" height="15" fill="rgb(235,159,41)" fg:x="569" fg:w="3"/><text x="45.6973%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="45.6070%" y="501" width="0.0799%" height="15" fill="rgb(223,219,48)" fg:x="571" fg:w="1"/><text x="45.8570%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="45.6070%" y="485" width="0.0799%" height="15" fill="rgb(236,80,13)" fg:x="571" fg:w="1"/><text x="45.8570%" y="495.50"></text></g><g><title>engine::session::Session::close (159 samples, 12.70%)</title><rect x="33.2268%" y="677" width="12.6997%" height="15" fill="rgb(213,5,6)" fg:x="416" fg:w="159"/><text x="33.4768%" y="687.50">engine::session::Se..</text></g><g><title>engine::session::state::State::close (157 samples, 12.54%)</title><rect x="33.3866%" y="661" width="12.5399%" height="15" fill="rgb(205,59,21)" fg:x="418" fg:w="157"/><text x="33.6366%" y="671.50">engine::session::st..</text></g><g><title>engine::session::state::State::flush_entities (157 samples, 12.54%)</title><rect x="33.3866%" y="645" width="12.5399%" height="15" fill="rgb(247,137,35)" fg:x="418" fg:w="157"/><text x="33.6366%" y="655.50">engine::session::st..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (156 samples, 12.46%)</title><rect x="33.4665%" y="629" width="12.4601%" height="15" fill="rgb(242,208,28)" fg:x="419" fg:w="156"/><text x="33.7165%" y="639.50">engine::session::in..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (156 samples, 12.46%)</title><rect x="33.4665%" y="613" width="12.4601%" height="15" fill="rgb(245,62,25)" fg:x="419" fg:w="156"/><text x="33.7165%" y="623.50">engine::session::st..</text></g><g><title>kernel::model::any_entity_changes (107 samples, 8.55%)</title><rect x="37.3802%" y="597" width="8.5463%" height="15" fill="rgb(233,99,54)" fg:x="468" fg:w="107"/><text x="37.6302%" y="607.50">kernel::mode..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (35 samples, 2.80%)</title><rect x="43.1310%" y="581" width="2.7955%" height="15" fill="rgb(213,10,37)" fg:x="540" fg:w="35"/><text x="43.3810%" y="591.50">se..</text></g><g><title>serde_json::de::from_trait (35 samples, 2.80%)</title><rect x="43.1310%" y="565" width="2.7955%" height="15" fill="rgb(235,143,30)" fg:x="540" fg:w="35"/><text x="43.3810%" y="575.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (35 samples, 2.80%)</title><rect x="43.1310%" y="549" width="2.7955%" height="15" fill="rgb(250,146,33)" fg:x="540" fg:w="35"/><text x="43.3810%" y="559.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (35 samples, 2.80%)</title><rect x="43.1310%" y="533" width="2.7955%" height="15" fill="rgb(226,198,42)" fg:x="540" fg:w="35"/><text x="43.3810%" y="543.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.6869%" y="517" width="0.2396%" height="15" fill="rgb(222,55,6)" fg:x="572" fg:w="3"/><text x="45.9369%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.7668%" y="501" width="0.1597%" height="15" fill="rgb(213,224,31)" fg:x="573" fg:w="2"/><text x="46.0168%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.7668%" y="485" width="0.1597%" height="15" fill="rgb(226,103,35)" fg:x="573" fg:w="2"/><text x="46.0168%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0863%" y="629" width="0.0799%" height="15" fill="rgb(205,66,45)" fg:x="577" fg:w="1"/><text x="46.3363%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="46.1661%" y="613" width="0.0799%" height="15" fill="rgb(226,51,42)" fg:x="578" fg:w="1"/><text x="46.4161%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="46.4856%" y="533" width="0.0799%" height="15" fill="rgb(206,69,1)" fg:x="582" fg:w="1"/><text x="46.7356%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="46.4856%" y="517" width="0.0799%" height="15" fill="rgb(213,228,47)" fg:x="582" fg:w="1"/><text x="46.7356%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="46.4856%" y="501" width="0.0799%" height="15" fill="rgb(224,204,18)" fg:x="582" fg:w="1"/><text x="46.7356%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="46.4856%" y="485" width="0.0799%" height="15" fill="rgb(253,187,47)" fg:x="582" fg:w="1"/><text x="46.7356%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.4856%" y="469" width="0.0799%" height="15" fill="rgb(232,61,2)" fg:x="582" fg:w="1"/><text x="46.7356%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.4856%" y="453" width="0.0799%" height="15" fill="rgb(213,132,35)" fg:x="582" fg:w="1"/><text x="46.7356%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.4856%" y="437" width="0.0799%" height="15" fill="rgb(247,33,21)" fg:x="582" fg:w="1"/><text x="46.7356%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.4856%" y="421" width="0.0799%" height="15" fill="rgb(233,71,46)" fg:x="582" fg:w="1"/><text x="46.7356%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.4856%" y="405" width="0.0799%" height="15" fill="rgb(222,173,43)" fg:x="582" fg:w="1"/><text x="46.7356%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.4856%" y="389" width="0.0799%" height="15" fill="rgb(249,218,47)" fg:x="582" fg:w="1"/><text x="46.7356%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.4856%" y="373" width="0.0799%" height="15" fill="rgb(254,185,48)" fg:x="582" fg:w="1"/><text x="46.7356%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.5655%" y="437" width="0.0799%" height="15" fill="rgb(252,165,50)" fg:x="583" fg:w="1"/><text x="46.8155%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.5655%" y="421" width="0.0799%" height="15" fill="rgb(206,219,6)" fg:x="583" fg:w="1"/><text x="46.8155%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.6454%" y="405" width="0.0799%" height="15" fill="rgb(212,212,45)" fg:x="584" fg:w="1"/><text x="46.8954%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6454%" y="389" width="0.0799%" height="15" fill="rgb(221,31,9)" fg:x="584" fg:w="1"/><text x="46.8954%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.7252%" y="373" width="0.0799%" height="15" fill="rgb(234,198,39)" fg:x="585" fg:w="1"/><text x="46.9752%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.7252%" y="357" width="0.0799%" height="15" fill="rgb(252,145,46)" fg:x="585" fg:w="1"/><text x="46.9752%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7252%" y="341" width="0.0799%" height="15" fill="rgb(237,149,0)" fg:x="585" fg:w="1"/><text x="46.9752%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.7252%" y="389" width="0.1597%" height="15" fill="rgb(229,65,5)" fg:x="585" fg:w="2"/><text x="46.9752%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8051%" y="373" width="0.0799%" height="15" fill="rgb(235,60,36)" fg:x="586" fg:w="1"/><text x="47.0551%" y="383.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="46.5655%" y="517" width="0.3994%" height="15" fill="rgb(222,47,18)" fg:x="583" fg:w="5"/><text x="46.8155%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="46.5655%" y="501" width="0.3994%" height="15" fill="rgb(235,114,22)" fg:x="583" fg:w="5"/><text x="46.8155%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="46.5655%" y="485" width="0.3994%" height="15" fill="rgb(209,167,11)" fg:x="583" fg:w="5"/><text x="46.8155%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="46.5655%" y="469" width="0.3994%" height="15" fill="rgb(251,73,18)" fg:x="583" fg:w="5"/><text x="46.8155%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="46.5655%" y="453" width="0.3994%" height="15" fill="rgb(217,60,17)" fg:x="583" fg:w="5"/><text x="46.8155%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="46.6454%" y="437" width="0.3195%" height="15" fill="rgb(224,36,37)" fg:x="584" fg:w="4"/><text x="46.8954%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="46.6454%" y="421" width="0.3195%" height="15" fill="rgb(211,21,32)" fg:x="584" fg:w="4"/><text x="46.8954%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="46.7252%" y="405" width="0.2396%" height="15" fill="rgb(231,55,48)" fg:x="585" fg:w="3"/><text x="46.9752%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8850%" y="389" width="0.0799%" height="15" fill="rgb(227,42,18)" fg:x="587" fg:w="1"/><text x="47.1350%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.8850%" y="373" width="0.0799%" height="15" fill="rgb(217,2,27)" fg:x="587" fg:w="1"/><text x="47.1350%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8850%" y="357" width="0.0799%" height="15" fill="rgb(251,138,23)" fg:x="587" fg:w="1"/><text x="47.1350%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.8850%" y="341" width="0.0799%" height="15" fill="rgb(226,184,11)" fg:x="587" fg:w="1"/><text x="47.1350%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.9649%" y="437" width="0.1597%" height="15" fill="rgb(242,142,12)" fg:x="588" fg:w="2"/><text x="47.2149%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.9649%" y="421" width="0.1597%" height="15" fill="rgb(234,187,18)" fg:x="588" fg:w="2"/><text x="47.2149%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="46.9649%" y="405" width="0.1597%" height="15" fill="rgb(237,44,42)" fg:x="588" fg:w="2"/><text x="47.2149%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.9649%" y="389" width="0.1597%" height="15" fill="rgb(211,90,23)" fg:x="588" fg:w="2"/><text x="47.2149%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="47.0447%" y="373" width="0.0799%" height="15" fill="rgb(207,81,18)" fg:x="589" fg:w="1"/><text x="47.2947%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.0447%" y="357" width="0.0799%" height="15" fill="rgb(222,107,28)" fg:x="589" fg:w="1"/><text x="47.2947%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="47.0447%" y="341" width="0.0799%" height="15" fill="rgb(237,83,52)" fg:x="589" fg:w="1"/><text x="47.2947%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="47.0447%" y="325" width="0.0799%" height="15" fill="rgb(208,67,11)" fg:x="589" fg:w="1"/><text x="47.2947%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="47.1246%" y="437" width="0.2396%" height="15" fill="rgb(249,157,49)" fg:x="590" fg:w="3"/><text x="47.3746%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="47.1246%" y="421" width="0.2396%" height="15" fill="rgb(243,200,1)" fg:x="590" fg:w="3"/><text x="47.3746%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="47.1246%" y="405" width="0.2396%" height="15" fill="rgb(225,162,37)" fg:x="590" fg:w="3"/><text x="47.3746%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="47.2045%" y="389" width="0.1597%" height="15" fill="rgb(242,92,13)" fg:x="591" fg:w="2"/><text x="47.4545%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="47.2045%" y="373" width="0.1597%" height="15" fill="rgb(220,43,36)" fg:x="591" fg:w="2"/><text x="47.4545%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="47.3642%" y="389" width="0.1597%" height="15" fill="rgb(213,165,48)" fg:x="593" fg:w="2"/><text x="47.6142%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="47.3642%" y="373" width="0.1597%" height="15" fill="rgb(227,200,9)" fg:x="593" fg:w="2"/><text x="47.6142%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.3642%" y="357" width="0.1597%" height="15" fill="rgb(221,222,28)" fg:x="593" fg:w="2"/><text x="47.6142%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="47.3642%" y="341" width="0.1597%" height="15" fill="rgb(223,142,26)" fg:x="593" fg:w="2"/><text x="47.6142%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.4441%" y="325" width="0.0799%" height="15" fill="rgb(243,46,9)" fg:x="594" fg:w="1"/><text x="47.6941%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.4441%" y="309" width="0.0799%" height="15" fill="rgb(250,56,11)" fg:x="594" fg:w="1"/><text x="47.6941%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (13 samples, 1.04%)</title><rect x="46.5655%" y="533" width="1.0383%" height="15" fill="rgb(229,113,5)" fg:x="583" fg:w="13"/><text x="46.8155%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="46.9649%" y="517" width="0.6390%" height="15" fill="rgb(244,108,28)" fg:x="588" fg:w="8"/><text x="47.2149%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="46.9649%" y="501" width="0.6390%" height="15" fill="rgb(242,119,50)" fg:x="588" fg:w="8"/><text x="47.2149%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="46.9649%" y="485" width="0.6390%" height="15" fill="rgb(224,164,23)" fg:x="588" fg:w="8"/><text x="47.2149%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="46.9649%" y="469" width="0.6390%" height="15" fill="rgb(214,227,44)" fg:x="588" fg:w="8"/><text x="47.2149%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="46.9649%" y="453" width="0.6390%" height="15" fill="rgb(238,202,4)" fg:x="588" fg:w="8"/><text x="47.2149%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="47.3642%" y="437" width="0.2396%" height="15" fill="rgb(213,190,30)" fg:x="593" fg:w="3"/><text x="47.6142%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="47.3642%" y="421" width="0.2396%" height="15" fill="rgb(239,15,2)" fg:x="593" fg:w="3"/><text x="47.6142%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="47.3642%" y="405" width="0.2396%" height="15" fill="rgb(249,229,4)" fg:x="593" fg:w="3"/><text x="47.6142%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.5240%" y="389" width="0.0799%" height="15" fill="rgb(239,75,44)" fg:x="595" fg:w="1"/><text x="47.7740%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.5240%" y="373" width="0.0799%" height="15" fill="rgb(251,206,23)" fg:x="595" fg:w="1"/><text x="47.7740%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="47.5240%" y="357" width="0.0799%" height="15" fill="rgb(215,208,0)" fg:x="595" fg:w="1"/><text x="47.7740%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.5240%" y="341" width="0.0799%" height="15" fill="rgb(230,75,50)" fg:x="595" fg:w="1"/><text x="47.7740%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.5240%" y="325" width="0.0799%" height="15" fill="rgb(246,180,39)" fg:x="595" fg:w="1"/><text x="47.7740%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="47.5240%" y="309" width="0.0799%" height="15" fill="rgb(249,175,24)" fg:x="595" fg:w="1"/><text x="47.7740%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.5240%" y="293" width="0.0799%" height="15" fill="rgb(247,176,22)" fg:x="595" fg:w="1"/><text x="47.7740%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.5240%" y="277" width="0.0799%" height="15" fill="rgb(241,100,24)" fg:x="595" fg:w="1"/><text x="47.7740%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.5240%" y="261" width="0.0799%" height="15" fill="rgb(233,4,35)" fg:x="595" fg:w="1"/><text x="47.7740%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (17 samples, 1.36%)</title><rect x="46.3259%" y="581" width="1.3578%" height="15" fill="rgb(211,164,46)" fg:x="580" fg:w="17"/><text x="46.5759%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.28%)</title><rect x="46.4058%" y="565" width="1.2780%" height="15" fill="rgb(242,99,53)" fg:x="581" fg:w="16"/><text x="46.6558%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="46.4058%" y="549" width="1.2780%" height="15" fill="rgb(243,45,33)" fg:x="581" fg:w="16"/><text x="46.6558%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="47.6038%" y="533" width="0.0799%" height="15" fill="rgb(217,55,21)" fg:x="596" fg:w="1"/><text x="47.8538%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="47.6038%" y="517" width="0.0799%" height="15" fill="rgb(245,145,46)" fg:x="596" fg:w="1"/><text x="47.8538%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="47.6038%" y="501" width="0.0799%" height="15" fill="rgb(215,112,45)" fg:x="596" fg:w="1"/><text x="47.8538%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.6038%" y="485" width="0.0799%" height="15" fill="rgb(228,104,16)" fg:x="596" fg:w="1"/><text x="47.8538%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.6038%" y="469" width="0.0799%" height="15" fill="rgb(239,186,38)" fg:x="596" fg:w="1"/><text x="47.8538%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.6038%" y="453" width="0.0799%" height="15" fill="rgb(228,38,35)" fg:x="596" fg:w="1"/><text x="47.8538%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.6038%" y="437" width="0.0799%" height="15" fill="rgb(251,42,40)" fg:x="596" fg:w="1"/><text x="47.8538%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="47.6038%" y="421" width="0.0799%" height="15" fill="rgb(210,51,19)" fg:x="596" fg:w="1"/><text x="47.8538%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.6038%" y="405" width="0.0799%" height="15" fill="rgb(236,94,42)" fg:x="596" fg:w="1"/><text x="47.8538%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.6038%" y="389" width="0.0799%" height="15" fill="rgb(239,167,16)" fg:x="596" fg:w="1"/><text x="47.8538%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.6038%" y="373" width="0.0799%" height="15" fill="rgb(252,175,31)" fg:x="596" fg:w="1"/><text x="47.8538%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.6038%" y="357" width="0.0799%" height="15" fill="rgb(206,166,30)" fg:x="596" fg:w="1"/><text x="47.8538%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.6038%" y="341" width="0.0799%" height="15" fill="rgb(206,209,37)" fg:x="596" fg:w="1"/><text x="47.8538%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.6837%" y="581" width="0.0799%" height="15" fill="rgb(226,91,4)" fg:x="597" fg:w="1"/><text x="47.9337%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="47.6837%" y="565" width="0.0799%" height="15" fill="rgb(222,167,0)" fg:x="597" fg:w="1"/><text x="47.9337%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (25 samples, 2.00%)</title><rect x="46.1661%" y="629" width="1.9968%" height="15" fill="rgb(211,70,14)" fg:x="578" fg:w="25"/><text x="46.4161%" y="639.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (24 samples, 1.92%)</title><rect x="46.2460%" y="613" width="1.9169%" height="15" fill="rgb(214,84,42)" fg:x="579" fg:w="24"/><text x="46.4960%" y="623.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (24 samples, 1.92%)</title><rect x="46.2460%" y="597" width="1.9169%" height="15" fill="rgb(235,157,37)" fg:x="579" fg:w="24"/><text x="46.4960%" y="607.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="47.7636%" y="581" width="0.3994%" height="15" fill="rgb(225,13,6)" fg:x="598" fg:w="5"/><text x="48.0136%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="47.7636%" y="565" width="0.3994%" height="15" fill="rgb(205,202,1)" fg:x="598" fg:w="5"/><text x="48.0136%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="47.7636%" y="549" width="0.3994%" height="15" fill="rgb(232,195,26)" fg:x="598" fg:w="5"/><text x="48.0136%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="47.7636%" y="533" width="0.3994%" height="15" fill="rgb(208,102,26)" fg:x="598" fg:w="5"/><text x="48.0136%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.3227%" y="581" width="0.0799%" height="15" fill="rgb(215,41,39)" fg:x="605" fg:w="1"/><text x="48.5727%" y="591.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (30 samples, 2.40%)</title><rect x="46.0863%" y="645" width="2.3962%" height="15" fill="rgb(247,139,11)" fg:x="577" fg:w="30"/><text x="46.3363%" y="655.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (4 samples, 0.32%)</title><rect x="48.1629%" y="629" width="0.3195%" height="15" fill="rgb(243,99,6)" fg:x="603" fg:w="4"/><text x="48.4129%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="48.3227%" y="613" width="0.1597%" height="15" fill="rgb(230,168,48)" fg:x="605" fg:w="2"/><text x="48.5727%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="48.3227%" y="597" width="0.1597%" height="15" fill="rgb(238,227,13)" fg:x="605" fg:w="2"/><text x="48.5727%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="48.4026%" y="581" width="0.0799%" height="15" fill="rgb(209,109,13)" fg:x="606" fg:w="1"/><text x="48.6526%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4026%" y="565" width="0.0799%" height="15" fill="rgb(228,195,1)" fg:x="606" fg:w="1"/><text x="48.6526%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4026%" y="549" width="0.0799%" height="15" fill="rgb(230,218,0)" fg:x="606" fg:w="1"/><text x="48.6526%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.4026%" y="533" width="0.0799%" height="15" fill="rgb(206,1,45)" fg:x="606" fg:w="1"/><text x="48.6526%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.4026%" y="517" width="0.0799%" height="15" fill="rgb(209,124,26)" fg:x="606" fg:w="1"/><text x="48.6526%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.4026%" y="501" width="0.0799%" height="15" fill="rgb(220,59,8)" fg:x="606" fg:w="1"/><text x="48.6526%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.4026%" y="485" width="0.0799%" height="15" fill="rgb(251,41,37)" fg:x="606" fg:w="1"/><text x="48.6526%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.4026%" y="469" width="0.0799%" height="15" fill="rgb(239,152,21)" fg:x="606" fg:w="1"/><text x="48.6526%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.4026%" y="453" width="0.0799%" height="15" fill="rgb(226,32,1)" fg:x="606" fg:w="1"/><text x="48.6526%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.4026%" y="437" width="0.0799%" height="15" fill="rgb(230,154,36)" fg:x="606" fg:w="1"/><text x="48.6526%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.4026%" y="421" width="0.0799%" height="15" fill="rgb(208,228,43)" fg:x="606" fg:w="1"/><text x="48.6526%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.4026%" y="405" width="0.0799%" height="15" fill="rgb(214,203,3)" fg:x="606" fg:w="1"/><text x="48.6526%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4026%" y="389" width="0.0799%" height="15" fill="rgb(207,149,29)" fg:x="606" fg:w="1"/><text x="48.6526%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.5623%" y="597" width="0.0799%" height="15" fill="rgb(250,105,7)" fg:x="608" fg:w="1"/><text x="48.8123%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="48.8818%" y="485" width="0.0799%" height="15" fill="rgb(232,222,16)" fg:x="612" fg:w="1"/><text x="49.1318%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.8818%" y="469" width="0.0799%" height="15" fill="rgb(209,32,24)" fg:x="612" fg:w="1"/><text x="49.1318%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="48.9617%" y="469" width="0.0799%" height="15" fill="rgb(225,13,6)" fg:x="613" fg:w="1"/><text x="49.2117%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (6 samples, 0.48%)</title><rect x="48.6422%" y="597" width="0.4792%" height="15" fill="rgb(245,226,26)" fg:x="609" fg:w="6"/><text x="48.8922%" y="607.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="48.7220%" y="581" width="0.3994%" height="15" fill="rgb(229,178,27)" fg:x="610" fg:w="5"/><text x="48.9720%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.40%)</title><rect x="48.7220%" y="565" width="0.3994%" height="15" fill="rgb(205,227,28)" fg:x="610" fg:w="5"/><text x="48.9720%" y="575.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="48.8019%" y="549" width="0.3195%" height="15" fill="rgb(210,191,45)" fg:x="611" fg:w="4"/><text x="49.0519%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="48.8019%" y="533" width="0.3195%" height="15" fill="rgb(206,124,16)" fg:x="611" fg:w="4"/><text x="49.0519%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.32%)</title><rect x="48.8019%" y="517" width="0.3195%" height="15" fill="rgb(210,162,0)" fg:x="611" fg:w="4"/><text x="49.0519%" y="527.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (4 samples, 0.32%)</title><rect x="48.8019%" y="501" width="0.3195%" height="15" fill="rgb(211,54,38)" fg:x="611" fg:w="4"/><text x="49.0519%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="48.9617%" y="485" width="0.1597%" height="15" fill="rgb(248,192,3)" fg:x="613" fg:w="2"/><text x="49.2117%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.0415%" y="469" width="0.0799%" height="15" fill="rgb(233,187,18)" fg:x="614" fg:w="1"/><text x="49.2915%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (9 samples, 0.72%)</title><rect x="48.4824%" y="645" width="0.7188%" height="15" fill="rgb(237,208,14)" fg:x="607" fg:w="9"/><text x="48.7324%" y="655.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (9 samples, 0.72%)</title><rect x="48.4824%" y="629" width="0.7188%" height="15" fill="rgb(212,77,1)" fg:x="607" fg:w="9"/><text x="48.7324%" y="639.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (8 samples, 0.64%)</title><rect x="48.5623%" y="613" width="0.6390%" height="15" fill="rgb(210,163,22)" fg:x="608" fg:w="8"/><text x="48.8123%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::LibraryMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="49.1214%" y="597" width="0.0799%" height="15" fill="rgb(250,58,28)" fg:x="615" fg:w="1"/><text x="49.3714%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="49.5208%" y="501" width="0.0799%" height="15" fill="rgb(254,28,41)" fg:x="620" fg:w="1"/><text x="49.7708%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.5208%" y="485" width="0.0799%" height="15" fill="rgb(237,162,36)" fg:x="620" fg:w="1"/><text x="49.7708%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="49.5208%" y="533" width="0.1597%" height="15" fill="rgb(232,56,6)" fg:x="620" fg:w="2"/><text x="49.7708%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="49.5208%" y="517" width="0.1597%" height="15" fill="rgb(216,127,42)" fg:x="620" fg:w="2"/><text x="49.7708%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.6006%" y="501" width="0.0799%" height="15" fill="rgb(241,69,15)" fg:x="621" fg:w="1"/><text x="49.8506%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="49.2812%" y="549" width="0.5591%" height="15" fill="rgb(227,180,19)" fg:x="617" fg:w="7"/><text x="49.5312%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="49.6805%" y="533" width="0.1597%" height="15" fill="rgb(231,188,29)" fg:x="622" fg:w="2"/><text x="49.9305%" y="543.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="49.8403%" y="549" width="0.3195%" height="15" fill="rgb(224,176,27)" fg:x="624" fg:w="4"/><text x="50.0903%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="49.2812%" y="565" width="1.1182%" height="15" fill="rgb(249,214,19)" fg:x="617" fg:w="14"/><text x="49.5312%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (3 samples, 0.24%)</title><rect x="50.1597%" y="549" width="0.2396%" height="15" fill="rgb(240,0,4)" fg:x="628" fg:w="3"/><text x="50.4097%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="50.2396%" y="533" width="0.1597%" height="15" fill="rgb(233,28,41)" fg:x="629" fg:w="2"/><text x="50.4896%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.3195%" y="517" width="0.0799%" height="15" fill="rgb(220,90,51)" fg:x="630" fg:w="1"/><text x="50.5695%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="49.2812%" y="581" width="1.3578%" height="15" fill="rgb(250,52,22)" fg:x="617" fg:w="17"/><text x="49.5312%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="50.3994%" y="565" width="0.2396%" height="15" fill="rgb(231,152,36)" fg:x="631" fg:w="3"/><text x="50.6494%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.84%)</title><rect x="49.2013%" y="597" width="1.8371%" height="15" fill="rgb(250,218,4)" fg:x="616" fg:w="23"/><text x="49.4513%" y="607.50">&lt;..</text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="50.6390%" y="581" width="0.3994%" height="15" fill="rgb(210,38,21)" fg:x="634" fg:w="5"/><text x="50.8890%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (24 samples, 1.92%)</title><rect x="49.2013%" y="613" width="1.9169%" height="15" fill="rgb(230,75,13)" fg:x="616" fg:w="24"/><text x="49.4513%" y="623.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.0383%" y="597" width="0.0799%" height="15" fill="rgb(250,68,53)" fg:x="639" fg:w="1"/><text x="51.2883%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.2780%" y="565" width="0.1597%" height="15" fill="rgb(250,210,16)" fg:x="642" fg:w="2"/><text x="51.5280%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="51.2780%" y="581" width="0.2396%" height="15" fill="rgb(240,132,5)" fg:x="642" fg:w="3"/><text x="51.5280%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="51.4377%" y="565" width="0.0799%" height="15" fill="rgb(222,148,48)" fg:x="644" fg:w="1"/><text x="51.6877%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="51.4377%" y="549" width="0.0799%" height="15" fill="rgb(247,181,24)" fg:x="644" fg:w="1"/><text x="51.6877%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="51.4377%" y="533" width="0.0799%" height="15" fill="rgb(239,5,31)" fg:x="644" fg:w="1"/><text x="51.6877%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.4377%" y="517" width="0.0799%" height="15" fill="rgb(241,152,38)" fg:x="644" fg:w="1"/><text x="51.6877%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.4377%" y="501" width="0.0799%" height="15" fill="rgb(246,200,37)" fg:x="644" fg:w="1"/><text x="51.6877%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.4377%" y="485" width="0.0799%" height="15" fill="rgb(243,210,26)" fg:x="644" fg:w="1"/><text x="51.6877%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="51.5176%" y="549" width="0.1597%" height="15" fill="rgb(222,22,22)" fg:x="645" fg:w="2"/><text x="51.7676%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="51.5176%" y="533" width="0.1597%" height="15" fill="rgb(208,129,28)" fg:x="645" fg:w="2"/><text x="51.7676%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.6773%" y="517" width="0.0799%" height="15" fill="rgb(254,169,28)" fg:x="647" fg:w="1"/><text x="51.9273%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.32%)</title><rect x="51.5176%" y="581" width="0.3195%" height="15" fill="rgb(225,45,17)" fg:x="645" fg:w="4"/><text x="51.7676%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="51.5176%" y="565" width="0.3195%" height="15" fill="rgb(232,199,2)" fg:x="645" fg:w="4"/><text x="51.7676%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.6773%" y="549" width="0.1597%" height="15" fill="rgb(235,33,40)" fg:x="647" fg:w="2"/><text x="51.9273%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="51.6773%" y="533" width="0.1597%" height="15" fill="rgb(237,89,50)" fg:x="647" fg:w="2"/><text x="51.9273%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.7572%" y="517" width="0.0799%" height="15" fill="rgb(238,126,5)" fg:x="648" fg:w="1"/><text x="52.0072%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.8371%" y="581" width="0.1597%" height="15" fill="rgb(247,214,42)" fg:x="649" fg:w="2"/><text x="52.0871%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0767%" y="549" width="0.0799%" height="15" fill="rgb(238,60,45)" fg:x="652" fg:w="1"/><text x="52.3267%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="51.9968%" y="565" width="0.2396%" height="15" fill="rgb(225,69,44)" fg:x="651" fg:w="3"/><text x="52.2468%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="52.1565%" y="549" width="0.0799%" height="15" fill="rgb(241,13,44)" fg:x="653" fg:w="1"/><text x="52.4065%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="52.1565%" y="533" width="0.0799%" height="15" fill="rgb(227,121,22)" fg:x="653" fg:w="1"/><text x="52.4065%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.1565%" y="517" width="0.0799%" height="15" fill="rgb(231,160,23)" fg:x="653" fg:w="1"/><text x="52.4065%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2364%" y="565" width="0.0799%" height="15" fill="rgb(250,179,43)" fg:x="654" fg:w="1"/><text x="52.4864%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="51.9968%" y="581" width="0.3994%" height="15" fill="rgb(233,54,46)" fg:x="651" fg:w="5"/><text x="52.2468%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="52.3163%" y="565" width="0.0799%" height="15" fill="rgb(247,120,42)" fg:x="655" fg:w="1"/><text x="52.5663%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="52.7157%" y="469" width="0.0799%" height="15" fill="rgb(221,219,12)" fg:x="660" fg:w="1"/><text x="52.9657%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="52.7157%" y="453" width="0.0799%" height="15" fill="rgb(211,126,8)" fg:x="660" fg:w="1"/><text x="52.9657%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7157%" y="437" width="0.0799%" height="15" fill="rgb(218,154,33)" fg:x="660" fg:w="1"/><text x="52.9657%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7157%" y="421" width="0.0799%" height="15" fill="rgb(212,199,16)" fg:x="660" fg:w="1"/><text x="52.9657%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7157%" y="405" width="0.0799%" height="15" fill="rgb(236,215,46)" fg:x="660" fg:w="1"/><text x="52.9657%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.7157%" y="389" width="0.0799%" height="15" fill="rgb(232,32,22)" fg:x="660" fg:w="1"/><text x="52.9657%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.7157%" y="373" width="0.0799%" height="15" fill="rgb(234,79,15)" fg:x="660" fg:w="1"/><text x="52.9657%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.7157%" y="357" width="0.0799%" height="15" fill="rgb(235,187,47)" fg:x="660" fg:w="1"/><text x="52.9657%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7157%" y="341" width="0.0799%" height="15" fill="rgb(244,69,37)" fg:x="660" fg:w="1"/><text x="52.9657%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7157%" y="325" width="0.0799%" height="15" fill="rgb(249,140,25)" fg:x="660" fg:w="1"/><text x="52.9657%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.7157%" y="309" width="0.0799%" height="15" fill="rgb(213,69,8)" fg:x="660" fg:w="1"/><text x="52.9657%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.7157%" y="293" width="0.0799%" height="15" fill="rgb(220,136,2)" fg:x="660" fg:w="1"/><text x="52.9657%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.7157%" y="277" width="0.0799%" height="15" fill="rgb(237,50,36)" fg:x="660" fg:w="1"/><text x="52.9657%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.7157%" y="261" width="0.0799%" height="15" fill="rgb(226,18,11)" fg:x="660" fg:w="1"/><text x="52.9657%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7157%" y="245" width="0.0799%" height="15" fill="rgb(243,156,2)" fg:x="660" fg:w="1"/><text x="52.9657%" y="255.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="52.7955%" y="469" width="0.0799%" height="15" fill="rgb(218,8,34)" fg:x="661" fg:w="1"/><text x="53.0455%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8754%" y="453" width="0.0799%" height="15" fill="rgb(250,94,35)" fg:x="662" fg:w="1"/><text x="53.1254%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8754%" y="437" width="0.0799%" height="15" fill="rgb(229,127,21)" fg:x="662" fg:w="1"/><text x="53.1254%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.8754%" y="421" width="0.0799%" height="15" fill="rgb(234,49,5)" fg:x="662" fg:w="1"/><text x="53.1254%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.8754%" y="405" width="0.0799%" height="15" fill="rgb(248,12,16)" fg:x="662" fg:w="1"/><text x="53.1254%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.8754%" y="389" width="0.0799%" height="15" fill="rgb(208,220,31)" fg:x="662" fg:w="1"/><text x="53.1254%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8754%" y="373" width="0.0799%" height="15" fill="rgb(243,184,0)" fg:x="662" fg:w="1"/><text x="53.1254%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8754%" y="357" width="0.0799%" height="15" fill="rgb(217,38,21)" fg:x="662" fg:w="1"/><text x="53.1254%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.8754%" y="341" width="0.0799%" height="15" fill="rgb(239,120,45)" fg:x="662" fg:w="1"/><text x="53.1254%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.8754%" y="325" width="0.0799%" height="15" fill="rgb(235,33,2)" fg:x="662" fg:w="1"/><text x="53.1254%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.8754%" y="309" width="0.0799%" height="15" fill="rgb(249,161,5)" fg:x="662" fg:w="1"/><text x="53.1254%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.8754%" y="293" width="0.0799%" height="15" fill="rgb(250,165,48)" fg:x="662" fg:w="1"/><text x="53.1254%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.8754%" y="277" width="0.0799%" height="15" fill="rgb(221,23,45)" fg:x="662" fg:w="1"/><text x="53.1254%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="53.0351%" y="341" width="0.1597%" height="15" fill="rgb(217,108,46)" fg:x="664" fg:w="2"/><text x="53.2851%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.1150%" y="325" width="0.0799%" height="15" fill="rgb(254,26,35)" fg:x="665" fg:w="1"/><text x="53.3650%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="53.1150%" y="309" width="0.0799%" height="15" fill="rgb(218,223,28)" fg:x="665" fg:w="1"/><text x="53.3650%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="53.1150%" y="293" width="0.0799%" height="15" fill="rgb(242,27,47)" fg:x="665" fg:w="1"/><text x="53.3650%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="53.1150%" y="277" width="0.0799%" height="15" fill="rgb(218,39,35)" fg:x="665" fg:w="1"/><text x="53.3650%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="53.1150%" y="261" width="0.0799%" height="15" fill="rgb(232,127,16)" fg:x="665" fg:w="1"/><text x="53.3650%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.1150%" y="245" width="0.0799%" height="15" fill="rgb(231,219,51)" fg:x="665" fg:w="1"/><text x="53.3650%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.1150%" y="229" width="0.0799%" height="15" fill="rgb(217,220,46)" fg:x="665" fg:w="1"/><text x="53.3650%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.1150%" y="213" width="0.0799%" height="15" fill="rgb(230,75,1)" fg:x="665" fg:w="1"/><text x="53.3650%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="53.1150%" y="197" width="0.0799%" height="15" fill="rgb(218,2,8)" fg:x="665" fg:w="1"/><text x="53.3650%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.1150%" y="181" width="0.0799%" height="15" fill="rgb(206,111,30)" fg:x="665" fg:w="1"/><text x="53.3650%" y="191.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="53.1949%" y="325" width="0.0799%" height="15" fill="rgb(209,135,6)" fg:x="666" fg:w="1"/><text x="53.4449%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="53.1949%" y="309" width="0.0799%" height="15" fill="rgb(205,169,10)" fg:x="666" fg:w="1"/><text x="53.4449%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.1949%" y="293" width="0.0799%" height="15" fill="rgb(212,204,38)" fg:x="666" fg:w="1"/><text x="53.4449%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.1949%" y="277" width="0.0799%" height="15" fill="rgb(205,199,14)" fg:x="666" fg:w="1"/><text x="53.4449%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.1949%" y="261" width="0.0799%" height="15" fill="rgb(212,4,6)" fg:x="666" fg:w="1"/><text x="53.4449%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.1949%" y="245" width="0.0799%" height="15" fill="rgb(250,15,10)" fg:x="666" fg:w="1"/><text x="53.4449%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="53.1949%" y="229" width="0.0799%" height="15" fill="rgb(212,49,51)" fg:x="666" fg:w="1"/><text x="53.4449%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="53.1949%" y="213" width="0.0799%" height="15" fill="rgb(235,21,9)" fg:x="666" fg:w="1"/><text x="53.4449%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="53.1949%" y="197" width="0.0799%" height="15" fill="rgb(251,31,32)" fg:x="666" fg:w="1"/><text x="53.4449%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="53.1949%" y="181" width="0.0799%" height="15" fill="rgb(246,23,9)" fg:x="666" fg:w="1"/><text x="53.4449%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.1949%" y="165" width="0.0799%" height="15" fill="rgb(225,216,14)" fg:x="666" fg:w="1"/><text x="53.4449%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.1949%" y="149" width="0.0799%" height="15" fill="rgb(215,200,26)" fg:x="666" fg:w="1"/><text x="53.4449%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.1949%" y="133" width="0.0799%" height="15" fill="rgb(237,130,47)" fg:x="666" fg:w="1"/><text x="53.4449%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="53.1949%" y="117" width="0.0799%" height="15" fill="rgb(247,74,14)" fg:x="666" fg:w="1"/><text x="53.4449%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.1949%" y="101" width="0.0799%" height="15" fill="rgb(254,97,46)" fg:x="666" fg:w="1"/><text x="53.4449%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="53.1949%" y="85" width="0.0799%" height="15" fill="rgb(234,191,1)" fg:x="666" fg:w="1"/><text x="53.4449%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="53.1949%" y="69" width="0.0799%" height="15" fill="rgb(215,165,14)" fg:x="666" fg:w="1"/><text x="53.4449%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="53.1949%" y="53" width="0.0799%" height="15" fill="rgb(230,182,6)" fg:x="666" fg:w="1"/><text x="53.4449%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="53.1949%" y="37" width="0.0799%" height="15" fill="rgb(210,127,39)" fg:x="666" fg:w="1"/><text x="53.4449%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.2748%" y="229" width="0.0799%" height="15" fill="rgb(223,212,51)" fg:x="667" fg:w="1"/><text x="53.5248%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.2748%" y="213" width="0.0799%" height="15" fill="rgb(226,176,43)" fg:x="667" fg:w="1"/><text x="53.5248%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.2748%" y="197" width="0.0799%" height="15" fill="rgb(222,155,4)" fg:x="667" fg:w="1"/><text x="53.5248%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="53.2748%" y="181" width="0.0799%" height="15" fill="rgb(215,149,7)" fg:x="667" fg:w="1"/><text x="53.5248%" y="191.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="53.2748%" y="165" width="0.0799%" height="15" fill="rgb(252,199,23)" fg:x="667" fg:w="1"/><text x="53.5248%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="52.4760%" y="517" width="0.9585%" height="15" fill="rgb(245,52,29)" fg:x="657" fg:w="12"/><text x="52.7260%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (10 samples, 0.80%)</title><rect x="52.6358%" y="501" width="0.7987%" height="15" fill="rgb(221,228,19)" fg:x="659" fg:w="10"/><text x="52.8858%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (10 samples, 0.80%)</title><rect x="52.6358%" y="485" width="0.7987%" height="15" fill="rgb(253,101,6)" fg:x="659" fg:w="10"/><text x="52.8858%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="52.8754%" y="469" width="0.5591%" height="15" fill="rgb(211,130,8)" fg:x="662" fg:w="7"/><text x="53.1254%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.48%)</title><rect x="52.9553%" y="453" width="0.4792%" height="15" fill="rgb(238,37,53)" fg:x="663" fg:w="6"/><text x="53.2053%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.48%)</title><rect x="52.9553%" y="437" width="0.4792%" height="15" fill="rgb(235,145,5)" fg:x="663" fg:w="6"/><text x="53.2053%" y="447.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="52.9553%" y="421" width="0.4792%" height="15" fill="rgb(244,12,43)" fg:x="663" fg:w="6"/><text x="53.2053%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.48%)</title><rect x="52.9553%" y="405" width="0.4792%" height="15" fill="rgb(246,195,24)" fg:x="663" fg:w="6"/><text x="53.2053%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (6 samples, 0.48%)</title><rect x="52.9553%" y="389" width="0.4792%" height="15" fill="rgb(235,163,6)" fg:x="663" fg:w="6"/><text x="53.2053%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.48%)</title><rect x="52.9553%" y="373" width="0.4792%" height="15" fill="rgb(236,218,17)" fg:x="663" fg:w="6"/><text x="53.2053%" y="383.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="53.0351%" y="357" width="0.3994%" height="15" fill="rgb(235,12,38)" fg:x="664" fg:w="5"/><text x="53.2851%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="53.1949%" y="341" width="0.2396%" height="15" fill="rgb(225,195,33)" fg:x="666" fg:w="3"/><text x="53.4449%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="53.2748%" y="325" width="0.1597%" height="15" fill="rgb(238,54,35)" fg:x="667" fg:w="2"/><text x="53.5248%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="53.2748%" y="309" width="0.1597%" height="15" fill="rgb(238,33,7)" fg:x="667" fg:w="2"/><text x="53.5248%" y="319.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="53.2748%" y="293" width="0.1597%" height="15" fill="rgb(245,5,14)" fg:x="667" fg:w="2"/><text x="53.5248%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="53.2748%" y="277" width="0.1597%" height="15" fill="rgb(251,95,31)" fg:x="667" fg:w="2"/><text x="53.5248%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="53.2748%" y="261" width="0.1597%" height="15" fill="rgb(222,15,46)" fg:x="667" fg:w="2"/><text x="53.5248%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="53.2748%" y="245" width="0.1597%" height="15" fill="rgb(226,182,24)" fg:x="667" fg:w="2"/><text x="53.5248%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.3546%" y="229" width="0.0799%" height="15" fill="rgb(229,105,41)" fg:x="668" fg:w="1"/><text x="53.6046%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.5144%" y="485" width="0.0799%" height="15" fill="rgb(216,99,53)" fg:x="670" fg:w="1"/><text x="53.7644%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="53.4345%" y="501" width="0.2396%" height="15" fill="rgb(253,26,20)" fg:x="669" fg:w="3"/><text x="53.6845%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="53.5942%" y="485" width="0.0799%" height="15" fill="rgb(249,155,28)" fg:x="671" fg:w="1"/><text x="53.8442%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.6741%" y="325" width="0.0799%" height="15" fill="rgb(241,221,2)" fg:x="672" fg:w="1"/><text x="53.9241%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.6741%" y="309" width="0.0799%" height="15" fill="rgb(219,124,6)" fg:x="672" fg:w="1"/><text x="53.9241%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.6741%" y="293" width="0.0799%" height="15" fill="rgb(233,37,6)" fg:x="672" fg:w="1"/><text x="53.9241%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.6741%" y="277" width="0.0799%" height="15" fill="rgb(238,20,14)" fg:x="672" fg:w="1"/><text x="53.9241%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.6741%" y="261" width="0.0799%" height="15" fill="rgb(232,106,27)" fg:x="672" fg:w="1"/><text x="53.9241%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.6741%" y="245" width="0.0799%" height="15" fill="rgb(246,157,24)" fg:x="672" fg:w="1"/><text x="53.9241%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.6741%" y="229" width="0.0799%" height="15" fill="rgb(214,153,10)" fg:x="672" fg:w="1"/><text x="53.9241%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.6741%" y="213" width="0.0799%" height="15" fill="rgb(212,94,6)" fg:x="672" fg:w="1"/><text x="53.9241%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.6741%" y="197" width="0.0799%" height="15" fill="rgb(254,25,27)" fg:x="672" fg:w="1"/><text x="53.9241%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.6741%" y="181" width="0.0799%" height="15" fill="rgb(250,43,52)" fg:x="672" fg:w="1"/><text x="53.9241%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.6741%" y="165" width="0.0799%" height="15" fill="rgb(221,226,40)" fg:x="672" fg:w="1"/><text x="53.9241%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.6741%" y="149" width="0.0799%" height="15" fill="rgb(235,162,34)" fg:x="672" fg:w="1"/><text x="53.9241%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.6741%" y="133" width="0.0799%" height="15" fill="rgb(239,24,26)" fg:x="672" fg:w="1"/><text x="53.9241%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.6741%" y="117" width="0.0799%" height="15" fill="rgb(244,226,11)" fg:x="672" fg:w="1"/><text x="53.9241%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.6741%" y="101" width="0.0799%" height="15" fill="rgb(225,23,10)" fg:x="672" fg:w="1"/><text x="53.9241%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="53.6741%" y="373" width="0.1597%" height="15" fill="rgb(249,125,6)" fg:x="672" fg:w="2"/><text x="53.9241%" y="383.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="53.6741%" y="357" width="0.1597%" height="15" fill="rgb(246,212,12)" fg:x="672" fg:w="2"/><text x="53.9241%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="53.6741%" y="341" width="0.1597%" height="15" fill="rgb(230,43,32)" fg:x="672" fg:w="2"/><text x="53.9241%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.7540%" y="325" width="0.0799%" height="15" fill="rgb(210,95,23)" fg:x="673" fg:w="1"/><text x="54.0040%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.7540%" y="309" width="0.0799%" height="15" fill="rgb(229,103,33)" fg:x="673" fg:w="1"/><text x="54.0040%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.7540%" y="293" width="0.0799%" height="15" fill="rgb(222,104,27)" fg:x="673" fg:w="1"/><text x="54.0040%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.7540%" y="277" width="0.0799%" height="15" fill="rgb(239,221,23)" fg:x="673" fg:w="1"/><text x="54.0040%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="53.6741%" y="405" width="0.2396%" height="15" fill="rgb(222,98,21)" fg:x="672" fg:w="3"/><text x="53.9241%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="53.6741%" y="389" width="0.2396%" height="15" fill="rgb(231,101,20)" fg:x="672" fg:w="3"/><text x="53.9241%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="53.8339%" y="373" width="0.0799%" height="15" fill="rgb(215,150,22)" fg:x="674" fg:w="1"/><text x="54.0839%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="53.8339%" y="357" width="0.0799%" height="15" fill="rgb(248,3,34)" fg:x="674" fg:w="1"/><text x="54.0839%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="53.8339%" y="341" width="0.0799%" height="15" fill="rgb(220,141,21)" fg:x="674" fg:w="1"/><text x="54.0839%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.8339%" y="325" width="0.0799%" height="15" fill="rgb(223,41,48)" fg:x="674" fg:w="1"/><text x="54.0839%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.8339%" y="309" width="0.0799%" height="15" fill="rgb(247,12,5)" fg:x="674" fg:w="1"/><text x="54.0839%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.8339%" y="293" width="0.0799%" height="15" fill="rgb(206,173,10)" fg:x="674" fg:w="1"/><text x="54.0839%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.8339%" y="277" width="0.0799%" height="15" fill="rgb(233,214,37)" fg:x="674" fg:w="1"/><text x="54.0839%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="53.8339%" y="261" width="0.0799%" height="15" fill="rgb(238,86,43)" fg:x="674" fg:w="1"/><text x="54.0839%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.8339%" y="245" width="0.0799%" height="15" fill="rgb(212,182,8)" fg:x="674" fg:w="1"/><text x="54.0839%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.8339%" y="229" width="0.0799%" height="15" fill="rgb(240,91,47)" fg:x="674" fg:w="1"/><text x="54.0839%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.9137%" y="341" width="0.0799%" height="15" fill="rgb(209,138,26)" fg:x="675" fg:w="1"/><text x="54.1637%" y="351.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="53.9137%" y="389" width="0.2396%" height="15" fill="rgb(231,163,20)" fg:x="675" fg:w="3"/><text x="54.1637%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="53.9137%" y="373" width="0.2396%" height="15" fill="rgb(214,91,54)" fg:x="675" fg:w="3"/><text x="54.1637%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="53.9137%" y="357" width="0.2396%" height="15" fill="rgb(230,32,17)" fg:x="675" fg:w="3"/><text x="54.1637%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.9936%" y="341" width="0.1597%" height="15" fill="rgb(231,34,34)" fg:x="676" fg:w="2"/><text x="54.2436%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.9936%" y="325" width="0.1597%" height="15" fill="rgb(224,228,27)" fg:x="676" fg:w="2"/><text x="54.2436%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.9936%" y="309" width="0.1597%" height="15" fill="rgb(219,35,40)" fg:x="676" fg:w="2"/><text x="54.2436%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.9936%" y="293" width="0.1597%" height="15" fill="rgb(234,42,8)" fg:x="676" fg:w="2"/><text x="54.2436%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.9936%" y="277" width="0.1597%" height="15" fill="rgb(226,75,22)" fg:x="676" fg:w="2"/><text x="54.2436%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.9936%" y="261" width="0.1597%" height="15" fill="rgb(242,203,28)" fg:x="676" fg:w="2"/><text x="54.2436%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.9936%" y="245" width="0.1597%" height="15" fill="rgb(221,3,9)" fg:x="676" fg:w="2"/><text x="54.2436%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.9936%" y="229" width="0.1597%" height="15" fill="rgb(214,34,31)" fg:x="676" fg:w="2"/><text x="54.2436%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.9936%" y="213" width="0.1597%" height="15" fill="rgb(252,119,15)" fg:x="676" fg:w="2"/><text x="54.2436%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.9936%" y="197" width="0.1597%" height="15" fill="rgb(244,224,31)" fg:x="676" fg:w="2"/><text x="54.2436%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.0735%" y="181" width="0.0799%" height="15" fill="rgb(215,8,51)" fg:x="677" fg:w="1"/><text x="54.3235%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.0735%" y="165" width="0.0799%" height="15" fill="rgb(207,24,1)" fg:x="677" fg:w="1"/><text x="54.3235%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.1534%" y="325" width="0.0799%" height="15" fill="rgb(245,90,0)" fg:x="678" fg:w="1"/><text x="54.4034%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.1534%" y="309" width="0.0799%" height="15" fill="rgb(246,43,48)" fg:x="678" fg:w="1"/><text x="54.4034%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.2332%" y="309" width="0.0799%" height="15" fill="rgb(252,218,10)" fg:x="679" fg:w="1"/><text x="54.4832%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.2332%" y="293" width="0.0799%" height="15" fill="rgb(231,24,35)" fg:x="679" fg:w="1"/><text x="54.4832%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.2332%" y="277" width="0.0799%" height="15" fill="rgb(225,66,19)" fg:x="679" fg:w="1"/><text x="54.4832%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.2332%" y="261" width="0.0799%" height="15" fill="rgb(214,96,51)" fg:x="679" fg:w="1"/><text x="54.4832%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="53.9137%" y="405" width="0.4792%" height="15" fill="rgb(251,151,47)" fg:x="675" fg:w="6"/><text x="54.1637%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.1534%" y="389" width="0.2396%" height="15" fill="rgb(236,79,14)" fg:x="678" fg:w="3"/><text x="54.4034%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.1534%" y="373" width="0.2396%" height="15" fill="rgb(210,205,11)" fg:x="678" fg:w="3"/><text x="54.4034%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="54.1534%" y="357" width="0.2396%" height="15" fill="rgb(233,142,53)" fg:x="678" fg:w="3"/><text x="54.4034%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.1534%" y="341" width="0.2396%" height="15" fill="rgb(212,116,48)" fg:x="678" fg:w="3"/><text x="54.4034%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="54.2332%" y="325" width="0.1597%" height="15" fill="rgb(234,55,33)" fg:x="679" fg:w="2"/><text x="54.4832%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3131%" y="309" width="0.0799%" height="15" fill="rgb(253,92,27)" fg:x="680" fg:w="1"/><text x="54.5631%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.3131%" y="293" width="0.0799%" height="15" fill="rgb(220,7,35)" fg:x="680" fg:w="1"/><text x="54.5631%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.3131%" y="277" width="0.0799%" height="15" fill="rgb(246,124,6)" fg:x="680" fg:w="1"/><text x="54.5631%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3131%" y="261" width="0.0799%" height="15" fill="rgb(212,111,51)" fg:x="680" fg:w="1"/><text x="54.5631%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.3131%" y="245" width="0.0799%" height="15" fill="rgb(253,116,7)" fg:x="680" fg:w="1"/><text x="54.5631%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.3131%" y="229" width="0.0799%" height="15" fill="rgb(213,145,18)" fg:x="680" fg:w="1"/><text x="54.5631%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3131%" y="213" width="0.0799%" height="15" fill="rgb(219,149,7)" fg:x="680" fg:w="1"/><text x="54.5631%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.3131%" y="197" width="0.0799%" height="15" fill="rgb(225,156,20)" fg:x="680" fg:w="1"/><text x="54.5631%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.3131%" y="181" width="0.0799%" height="15" fill="rgb(211,98,19)" fg:x="680" fg:w="1"/><text x="54.5631%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3131%" y="165" width="0.0799%" height="15" fill="rgb(231,192,31)" fg:x="680" fg:w="1"/><text x="54.5631%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.3131%" y="149" width="0.0799%" height="15" fill="rgb(249,95,19)" fg:x="680" fg:w="1"/><text x="54.5631%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.3131%" y="133" width="0.0799%" height="15" fill="rgb(247,101,36)" fg:x="680" fg:w="1"/><text x="54.5631%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3131%" y="117" width="0.0799%" height="15" fill="rgb(221,45,43)" fg:x="680" fg:w="1"/><text x="54.5631%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.3131%" y="101" width="0.0799%" height="15" fill="rgb(220,42,1)" fg:x="680" fg:w="1"/><text x="54.5631%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.3131%" y="85" width="0.0799%" height="15" fill="rgb(236,19,24)" fg:x="680" fg:w="1"/><text x="54.5631%" y="95.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="54.3131%" y="69" width="0.0799%" height="15" fill="rgb(225,192,6)" fg:x="680" fg:w="1"/><text x="54.5631%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.3930%" y="357" width="0.0799%" height="15" fill="rgb(242,30,19)" fg:x="681" fg:w="1"/><text x="54.6430%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.3930%" y="341" width="0.0799%" height="15" fill="rgb(240,36,6)" fg:x="681" fg:w="1"/><text x="54.6430%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.3930%" y="325" width="0.0799%" height="15" fill="rgb(246,40,28)" fg:x="681" fg:w="1"/><text x="54.6430%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.3930%" y="309" width="0.0799%" height="15" fill="rgb(225,155,33)" fg:x="681" fg:w="1"/><text x="54.6430%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3930%" y="293" width="0.0799%" height="15" fill="rgb(240,65,18)" fg:x="681" fg:w="1"/><text x="54.6430%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3930%" y="277" width="0.0799%" height="15" fill="rgb(217,0,48)" fg:x="681" fg:w="1"/><text x="54.6430%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.3930%" y="261" width="0.0799%" height="15" fill="rgb(217,80,15)" fg:x="681" fg:w="1"/><text x="54.6430%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.3930%" y="245" width="0.0799%" height="15" fill="rgb(253,43,51)" fg:x="681" fg:w="1"/><text x="54.6430%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.3930%" y="229" width="0.0799%" height="15" fill="rgb(246,60,4)" fg:x="681" fg:w="1"/><text x="54.6430%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.3930%" y="213" width="0.0799%" height="15" fill="rgb(230,40,54)" fg:x="681" fg:w="1"/><text x="54.6430%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.3930%" y="197" width="0.0799%" height="15" fill="rgb(208,20,44)" fg:x="681" fg:w="1"/><text x="54.6430%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.3930%" y="181" width="0.0799%" height="15" fill="rgb(230,22,22)" fg:x="681" fg:w="1"/><text x="54.6430%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.3930%" y="165" width="0.0799%" height="15" fill="rgb(207,57,4)" fg:x="681" fg:w="1"/><text x="54.6430%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.3930%" y="149" width="0.0799%" height="15" fill="rgb(242,130,33)" fg:x="681" fg:w="1"/><text x="54.6430%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.3930%" y="133" width="0.0799%" height="15" fill="rgb(218,66,43)" fg:x="681" fg:w="1"/><text x="54.6430%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.3930%" y="117" width="0.0799%" height="15" fill="rgb(236,105,16)" fg:x="681" fg:w="1"/><text x="54.6430%" y="127.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (13 samples, 1.04%)</title><rect x="53.6741%" y="453" width="1.0383%" height="15" fill="rgb(230,46,15)" fg:x="672" fg:w="13"/><text x="53.9241%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.04%)</title><rect x="53.6741%" y="437" width="1.0383%" height="15" fill="rgb(251,172,40)" fg:x="672" fg:w="13"/><text x="53.9241%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.04%)</title><rect x="53.6741%" y="421" width="1.0383%" height="15" fill="rgb(225,217,32)" fg:x="672" fg:w="13"/><text x="53.9241%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="54.3930%" y="405" width="0.3195%" height="15" fill="rgb(243,10,29)" fg:x="681" fg:w="4"/><text x="54.6430%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="54.3930%" y="389" width="0.3195%" height="15" fill="rgb(207,102,10)" fg:x="681" fg:w="4"/><text x="54.6430%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="54.3930%" y="373" width="0.3195%" height="15" fill="rgb(241,125,5)" fg:x="681" fg:w="4"/><text x="54.6430%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.4728%" y="357" width="0.2396%" height="15" fill="rgb(230,125,29)" fg:x="682" fg:w="3"/><text x="54.7228%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.4728%" y="341" width="0.2396%" height="15" fill="rgb(223,65,44)" fg:x="682" fg:w="3"/><text x="54.7228%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.4728%" y="325" width="0.2396%" height="15" fill="rgb(224,188,28)" fg:x="682" fg:w="3"/><text x="54.7228%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.4728%" y="309" width="0.2396%" height="15" fill="rgb(254,197,27)" fg:x="682" fg:w="3"/><text x="54.7228%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="54.5527%" y="293" width="0.1597%" height="15" fill="rgb(220,200,25)" fg:x="683" fg:w="2"/><text x="54.8027%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.5527%" y="277" width="0.1597%" height="15" fill="rgb(239,225,54)" fg:x="683" fg:w="2"/><text x="54.8027%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.6326%" y="261" width="0.0799%" height="15" fill="rgb(211,59,40)" fg:x="684" fg:w="1"/><text x="54.8826%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6326%" y="245" width="0.0799%" height="15" fill="rgb(213,176,46)" fg:x="684" fg:w="1"/><text x="54.8826%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.6326%" y="229" width="0.0799%" height="15" fill="rgb(226,99,4)" fg:x="684" fg:w="1"/><text x="54.8826%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6326%" y="213" width="0.0799%" height="15" fill="rgb(239,203,43)" fg:x="684" fg:w="1"/><text x="54.8826%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.6326%" y="197" width="0.0799%" height="15" fill="rgb(246,1,45)" fg:x="684" fg:w="1"/><text x="54.8826%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.6326%" y="181" width="0.0799%" height="15" fill="rgb(231,42,52)" fg:x="684" fg:w="1"/><text x="54.8826%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (17 samples, 1.36%)</title><rect x="53.4345%" y="517" width="1.3578%" height="15" fill="rgb(240,13,50)" fg:x="669" fg:w="17"/><text x="53.6845%" y="527.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (14 samples, 1.12%)</title><rect x="53.6741%" y="501" width="1.1182%" height="15" fill="rgb(225,81,14)" fg:x="672" fg:w="14"/><text x="53.9241%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (14 samples, 1.12%)</title><rect x="53.6741%" y="485" width="1.1182%" height="15" fill="rgb(216,182,23)" fg:x="672" fg:w="14"/><text x="53.9241%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.12%)</title><rect x="53.6741%" y="469" width="1.1182%" height="15" fill="rgb(233,137,19)" fg:x="672" fg:w="14"/><text x="53.9241%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.7125%" y="453" width="0.0799%" height="15" fill="rgb(242,61,46)" fg:x="685" fg:w="1"/><text x="54.9625%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.7923%" y="485" width="0.1597%" height="15" fill="rgb(221,168,51)" fg:x="686" fg:w="2"/><text x="55.0423%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.7923%" y="469" width="0.1597%" height="15" fill="rgb(238,48,15)" fg:x="686" fg:w="2"/><text x="55.0423%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.7923%" y="453" width="0.1597%" height="15" fill="rgb(216,13,16)" fg:x="686" fg:w="2"/><text x="55.0423%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.7923%" y="437" width="0.1597%" height="15" fill="rgb(223,185,34)" fg:x="686" fg:w="2"/><text x="55.0423%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.8722%" y="421" width="0.0799%" height="15" fill="rgb(228,94,42)" fg:x="687" fg:w="1"/><text x="55.1222%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.8722%" y="405" width="0.0799%" height="15" fill="rgb(218,166,43)" fg:x="687" fg:w="1"/><text x="55.1222%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.8722%" y="389" width="0.0799%" height="15" fill="rgb(232,30,50)" fg:x="687" fg:w="1"/><text x="55.1222%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.8722%" y="373" width="0.0799%" height="15" fill="rgb(245,206,45)" fg:x="687" fg:w="1"/><text x="55.1222%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.8722%" y="357" width="0.0799%" height="15" fill="rgb(220,56,22)" fg:x="687" fg:w="1"/><text x="55.1222%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.8722%" y="341" width="0.0799%" height="15" fill="rgb(239,129,38)" fg:x="687" fg:w="1"/><text x="55.1222%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.8722%" y="325" width="0.0799%" height="15" fill="rgb(207,68,41)" fg:x="687" fg:w="1"/><text x="55.1222%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.8722%" y="309" width="0.0799%" height="15" fill="rgb(221,21,7)" fg:x="687" fg:w="1"/><text x="55.1222%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.8722%" y="293" width="0.0799%" height="15" fill="rgb(240,33,25)" fg:x="687" fg:w="1"/><text x="55.1222%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.8722%" y="277" width="0.0799%" height="15" fill="rgb(242,119,10)" fg:x="687" fg:w="1"/><text x="55.1222%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.8722%" y="261" width="0.0799%" height="15" fill="rgb(214,149,40)" fg:x="687" fg:w="1"/><text x="55.1222%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.8722%" y="245" width="0.0799%" height="15" fill="rgb(228,25,36)" fg:x="687" fg:w="1"/><text x="55.1222%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="54.9521%" y="421" width="0.0799%" height="15" fill="rgb(222,59,15)" fg:x="688" fg:w="1"/><text x="55.2021%" y="431.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="54.9521%" y="405" width="0.0799%" height="15" fill="rgb(218,170,0)" fg:x="688" fg:w="1"/><text x="55.2021%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9521%" y="389" width="0.0799%" height="15" fill="rgb(232,173,23)" fg:x="688" fg:w="1"/><text x="55.2021%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="54.9521%" y="485" width="0.1597%" height="15" fill="rgb(218,116,1)" fg:x="688" fg:w="2"/><text x="55.2021%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="54.9521%" y="469" width="0.1597%" height="15" fill="rgb(207,34,4)" fg:x="688" fg:w="2"/><text x="55.2021%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="54.9521%" y="453" width="0.1597%" height="15" fill="rgb(229,54,52)" fg:x="688" fg:w="2"/><text x="55.2021%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="54.9521%" y="437" width="0.1597%" height="15" fill="rgb(211,86,23)" fg:x="688" fg:w="2"/><text x="55.2021%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.0319%" y="421" width="0.0799%" height="15" fill="rgb(254,153,34)" fg:x="689" fg:w="1"/><text x="55.2819%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.1118%" y="485" width="0.0799%" height="15" fill="rgb(219,220,14)" fg:x="690" fg:w="1"/><text x="55.3618%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.3514%" y="453" width="0.0799%" height="15" fill="rgb(247,8,26)" fg:x="693" fg:w="1"/><text x="55.6014%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.4313%" y="453" width="0.0799%" height="15" fill="rgb(213,129,42)" fg:x="694" fg:w="1"/><text x="55.6813%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="55.5112%" y="453" width="0.0799%" height="15" fill="rgb(225,95,41)" fg:x="695" fg:w="1"/><text x="55.7612%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.5112%" y="437" width="0.0799%" height="15" fill="rgb(215,134,24)" fg:x="695" fg:w="1"/><text x="55.7612%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.9105%" y="373" width="0.0799%" height="15" fill="rgb(235,23,54)" fg:x="700" fg:w="1"/><text x="56.1605%" y="383.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (45 samples, 3.59%)</title><rect x="52.4760%" y="533" width="3.5942%" height="15" fill="rgb(229,96,31)" fg:x="657" fg:w="45"/><text x="52.7260%" y="543.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.28%)</title><rect x="54.7923%" y="517" width="1.2780%" height="15" fill="rgb(206,111,12)" fg:x="686" fg:w="16"/><text x="55.0423%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.28%)</title><rect x="54.7923%" y="501" width="1.2780%" height="15" fill="rgb(222,177,8)" fg:x="686" fg:w="16"/><text x="55.0423%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="55.1917%" y="485" width="0.8786%" height="15" fill="rgb(251,36,52)" fg:x="691" fg:w="11"/><text x="55.4417%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="55.1917%" y="469" width="0.8786%" height="15" fill="rgb(216,182,29)" fg:x="691" fg:w="11"/><text x="55.4417%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (6 samples, 0.48%)</title><rect x="55.5911%" y="453" width="0.4792%" height="15" fill="rgb(241,145,50)" fg:x="696" fg:w="6"/><text x="55.8411%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (6 samples, 0.48%)</title><rect x="55.5911%" y="437" width="0.4792%" height="15" fill="rgb(231,71,35)" fg:x="696" fg:w="6"/><text x="55.8411%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.40%)</title><rect x="55.6709%" y="421" width="0.3994%" height="15" fill="rgb(218,22,17)" fg:x="697" fg:w="5"/><text x="55.9209%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="55.6709%" y="405" width="0.3994%" height="15" fill="rgb(225,227,6)" fg:x="697" fg:w="5"/><text x="55.9209%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="55.6709%" y="389" width="0.3994%" height="15" fill="rgb(224,204,17)" fg:x="697" fg:w="5"/><text x="55.9209%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="55.9904%" y="373" width="0.0799%" height="15" fill="rgb(227,61,28)" fg:x="701" fg:w="1"/><text x="56.2404%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.3099%" y="373" width="0.0799%" height="15" fill="rgb(242,148,23)" fg:x="705" fg:w="1"/><text x="56.5599%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.3099%" y="357" width="0.0799%" height="15" fill="rgb(237,105,33)" fg:x="705" fg:w="1"/><text x="56.5599%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.3099%" y="341" width="0.0799%" height="15" fill="rgb(238,218,40)" fg:x="705" fg:w="1"/><text x="56.5599%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.3099%" y="325" width="0.0799%" height="15" fill="rgb(209,126,11)" fg:x="705" fg:w="1"/><text x="56.5599%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.3099%" y="309" width="0.0799%" height="15" fill="rgb(245,90,11)" fg:x="705" fg:w="1"/><text x="56.5599%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.3099%" y="293" width="0.0799%" height="15" fill="rgb(211,195,10)" fg:x="705" fg:w="1"/><text x="56.5599%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.3099%" y="277" width="0.0799%" height="15" fill="rgb(231,45,45)" fg:x="705" fg:w="1"/><text x="56.5599%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.3099%" y="453" width="0.1597%" height="15" fill="rgb(246,100,43)" fg:x="705" fg:w="2"/><text x="56.5599%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.3099%" y="437" width="0.1597%" height="15" fill="rgb(241,193,8)" fg:x="705" fg:w="2"/><text x="56.5599%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="56.3099%" y="421" width="0.1597%" height="15" fill="rgb(208,76,19)" fg:x="705" fg:w="2"/><text x="56.5599%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="56.3099%" y="405" width="0.1597%" height="15" fill="rgb(223,69,40)" fg:x="705" fg:w="2"/><text x="56.5599%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="56.3099%" y="389" width="0.1597%" height="15" fill="rgb(207,120,39)" fg:x="705" fg:w="2"/><text x="56.5599%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.3898%" y="373" width="0.0799%" height="15" fill="rgb(212,209,28)" fg:x="706" fg:w="1"/><text x="56.6398%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.3898%" y="357" width="0.0799%" height="15" fill="rgb(246,82,29)" fg:x="706" fg:w="1"/><text x="56.6398%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4696%" y="341" width="0.0799%" height="15" fill="rgb(239,6,40)" fg:x="707" fg:w="1"/><text x="56.7196%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4696%" y="325" width="0.0799%" height="15" fill="rgb(228,181,35)" fg:x="707" fg:w="1"/><text x="56.7196%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.4696%" y="309" width="0.0799%" height="15" fill="rgb(238,151,2)" fg:x="707" fg:w="1"/><text x="56.7196%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.4696%" y="293" width="0.0799%" height="15" fill="rgb(236,94,18)" fg:x="707" fg:w="1"/><text x="56.7196%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.4696%" y="277" width="0.0799%" height="15" fill="rgb(208,38,14)" fg:x="707" fg:w="1"/><text x="56.7196%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.4696%" y="261" width="0.0799%" height="15" fill="rgb(234,215,27)" fg:x="707" fg:w="1"/><text x="56.7196%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.4696%" y="245" width="0.0799%" height="15" fill="rgb(254,211,53)" fg:x="707" fg:w="1"/><text x="56.7196%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.4696%" y="437" width="0.1597%" height="15" fill="rgb(216,175,11)" fg:x="707" fg:w="2"/><text x="56.7196%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.4696%" y="421" width="0.1597%" height="15" fill="rgb(246,179,26)" fg:x="707" fg:w="2"/><text x="56.7196%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.4696%" y="405" width="0.1597%" height="15" fill="rgb(249,19,52)" fg:x="707" fg:w="2"/><text x="56.7196%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="56.4696%" y="389" width="0.1597%" height="15" fill="rgb(230,42,52)" fg:x="707" fg:w="2"/><text x="56.7196%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="56.4696%" y="373" width="0.1597%" height="15" fill="rgb(221,171,0)" fg:x="707" fg:w="2"/><text x="56.7196%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="56.4696%" y="357" width="0.1597%" height="15" fill="rgb(222,177,40)" fg:x="707" fg:w="2"/><text x="56.7196%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.5495%" y="341" width="0.0799%" height="15" fill="rgb(247,34,16)" fg:x="708" fg:w="1"/><text x="56.7995%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.5495%" y="325" width="0.0799%" height="15" fill="rgb(213,217,37)" fg:x="708" fg:w="1"/><text x="56.7995%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="56.2300%" y="485" width="0.4792%" height="15" fill="rgb(231,189,24)" fg:x="704" fg:w="6"/><text x="56.4800%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="56.2300%" y="469" width="0.4792%" height="15" fill="rgb(214,22,9)" fg:x="704" fg:w="6"/><text x="56.4800%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.4696%" y="453" width="0.2396%" height="15" fill="rgb(212,70,22)" fg:x="707" fg:w="3"/><text x="56.7196%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6294%" y="437" width="0.0799%" height="15" fill="rgb(249,64,51)" fg:x="709" fg:w="1"/><text x="56.8794%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="56.8690%" y="341" width="0.1597%" height="15" fill="rgb(249,148,20)" fg:x="712" fg:w="2"/><text x="57.1190%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.9489%" y="325" width="0.0799%" height="15" fill="rgb(246,46,48)" fg:x="713" fg:w="1"/><text x="57.1989%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2684%" y="213" width="0.0799%" height="15" fill="rgb(217,34,48)" fg:x="717" fg:w="1"/><text x="57.5184%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="56.8690%" y="357" width="0.5591%" height="15" fill="rgb(222,45,26)" fg:x="712" fg:w="7"/><text x="57.1190%" y="367.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="57.0288%" y="341" width="0.3994%" height="15" fill="rgb(230,201,36)" fg:x="714" fg:w="5"/><text x="57.2788%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="57.0288%" y="325" width="0.3994%" height="15" fill="rgb(217,30,43)" fg:x="714" fg:w="5"/><text x="57.2788%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="57.0288%" y="309" width="0.3994%" height="15" fill="rgb(230,197,40)" fg:x="714" fg:w="5"/><text x="57.2788%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="57.0288%" y="293" width="0.3994%" height="15" fill="rgb(239,181,18)" fg:x="714" fg:w="5"/><text x="57.2788%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.1885%" y="277" width="0.2396%" height="15" fill="rgb(222,60,39)" fg:x="716" fg:w="3"/><text x="57.4385%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.1885%" y="261" width="0.2396%" height="15" fill="rgb(210,60,22)" fg:x="716" fg:w="3"/><text x="57.4385%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="57.1885%" y="245" width="0.2396%" height="15" fill="rgb(239,213,48)" fg:x="716" fg:w="3"/><text x="57.4385%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.1885%" y="229" width="0.2396%" height="15" fill="rgb(253,214,23)" fg:x="716" fg:w="3"/><text x="57.4385%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.3482%" y="213" width="0.0799%" height="15" fill="rgb(211,98,45)" fg:x="718" fg:w="1"/><text x="57.5982%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.3482%" y="197" width="0.0799%" height="15" fill="rgb(239,130,44)" fg:x="718" fg:w="1"/><text x="57.5982%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.3482%" y="181" width="0.0799%" height="15" fill="rgb(222,181,35)" fg:x="718" fg:w="1"/><text x="57.5982%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.3482%" y="165" width="0.0799%" height="15" fill="rgb(219,219,49)" fg:x="718" fg:w="1"/><text x="57.5982%" y="175.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="57.3482%" y="149" width="0.0799%" height="15" fill="rgb(227,161,51)" fg:x="718" fg:w="1"/><text x="57.5982%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.4281%" y="181" width="0.0799%" height="15" fill="rgb(239,112,27)" fg:x="719" fg:w="1"/><text x="57.6781%" y="191.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (10 samples, 0.80%)</title><rect x="56.7891%" y="389" width="0.7987%" height="15" fill="rgb(248,122,18)" fg:x="711" fg:w="10"/><text x="57.0391%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.80%)</title><rect x="56.7891%" y="373" width="0.7987%" height="15" fill="rgb(245,130,23)" fg:x="711" fg:w="10"/><text x="57.0391%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="57.4281%" y="357" width="0.1597%" height="15" fill="rgb(211,225,28)" fg:x="719" fg:w="2"/><text x="57.6781%" y="367.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="57.4281%" y="341" width="0.1597%" height="15" fill="rgb(242,105,44)" fg:x="719" fg:w="2"/><text x="57.6781%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="57.4281%" y="325" width="0.1597%" height="15" fill="rgb(216,183,46)" fg:x="719" fg:w="2"/><text x="57.6781%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.4281%" y="309" width="0.1597%" height="15" fill="rgb(227,112,9)" fg:x="719" fg:w="2"/><text x="57.6781%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.4281%" y="293" width="0.1597%" height="15" fill="rgb(244,21,0)" fg:x="719" fg:w="2"/><text x="57.6781%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.4281%" y="277" width="0.1597%" height="15" fill="rgb(236,185,14)" fg:x="719" fg:w="2"/><text x="57.6781%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.4281%" y="261" width="0.1597%" height="15" fill="rgb(236,170,30)" fg:x="719" fg:w="2"/><text x="57.6781%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="57.4281%" y="245" width="0.1597%" height="15" fill="rgb(209,198,51)" fg:x="719" fg:w="2"/><text x="57.6781%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.4281%" y="229" width="0.1597%" height="15" fill="rgb(205,171,26)" fg:x="719" fg:w="2"/><text x="57.6781%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.4281%" y="213" width="0.1597%" height="15" fill="rgb(246,41,49)" fg:x="719" fg:w="2"/><text x="57.6781%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.4281%" y="197" width="0.1597%" height="15" fill="rgb(240,229,12)" fg:x="719" fg:w="2"/><text x="57.6781%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.5080%" y="181" width="0.0799%" height="15" fill="rgb(212,8,54)" fg:x="720" fg:w="1"/><text x="57.7580%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.5080%" y="165" width="0.0799%" height="15" fill="rgb(230,114,13)" fg:x="720" fg:w="1"/><text x="57.7580%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.6677%" y="325" width="0.0799%" height="15" fill="rgb(229,130,28)" fg:x="722" fg:w="1"/><text x="57.9177%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.6677%" y="309" width="0.0799%" height="15" fill="rgb(206,139,15)" fg:x="722" fg:w="1"/><text x="57.9177%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.7476%" y="293" width="0.0799%" height="15" fill="rgb(241,188,35)" fg:x="723" fg:w="1"/><text x="57.9976%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="57.7476%" y="277" width="0.0799%" height="15" fill="rgb(208,224,26)" fg:x="723" fg:w="1"/><text x="57.9976%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="57.8275%" y="261" width="0.2396%" height="15" fill="rgb(251,131,28)" fg:x="724" fg:w="3"/><text x="58.0775%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.9073%" y="245" width="0.1597%" height="15" fill="rgb(208,153,1)" fg:x="725" fg:w="2"/><text x="58.1573%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.1470%" y="229" width="0.0799%" height="15" fill="rgb(234,33,36)" fg:x="728" fg:w="1"/><text x="58.3970%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.1470%" y="213" width="0.0799%" height="15" fill="rgb(246,42,29)" fg:x="728" fg:w="1"/><text x="58.3970%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.2268%" y="229" width="0.0799%" height="15" fill="rgb(251,114,16)" fg:x="729" fg:w="1"/><text x="58.4768%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.2268%" y="213" width="0.0799%" height="15" fill="rgb(233,13,38)" fg:x="729" fg:w="1"/><text x="58.4768%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2268%" y="197" width="0.0799%" height="15" fill="rgb(247,120,19)" fg:x="729" fg:w="1"/><text x="58.4768%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.3067%" y="197" width="0.0799%" height="15" fill="rgb(205,11,16)" fg:x="730" fg:w="1"/><text x="58.5567%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.3067%" y="181" width="0.0799%" height="15" fill="rgb(228,185,19)" fg:x="730" fg:w="1"/><text x="58.5567%" y="191.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="57.5879%" y="373" width="0.8786%" height="15" fill="rgb(239,88,52)" fg:x="721" fg:w="11"/><text x="57.8379%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="57.5879%" y="357" width="0.8786%" height="15" fill="rgb(219,23,1)" fg:x="721" fg:w="11"/><text x="57.8379%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="57.5879%" y="341" width="0.8786%" height="15" fill="rgb(253,177,16)" fg:x="721" fg:w="11"/><text x="57.8379%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="57.7476%" y="325" width="0.7188%" height="15" fill="rgb(225,150,40)" fg:x="723" fg:w="9"/><text x="57.9976%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="57.7476%" y="309" width="0.7188%" height="15" fill="rgb(208,108,30)" fg:x="723" fg:w="9"/><text x="57.9976%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="57.8275%" y="293" width="0.6390%" height="15" fill="rgb(214,122,4)" fg:x="724" fg:w="8"/><text x="58.0775%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="57.8275%" y="277" width="0.6390%" height="15" fill="rgb(229,74,37)" fg:x="724" fg:w="8"/><text x="58.0775%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="58.0671%" y="261" width="0.3994%" height="15" fill="rgb(233,61,41)" fg:x="727" fg:w="5"/><text x="58.3171%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="58.0671%" y="245" width="0.3994%" height="15" fill="rgb(238,191,5)" fg:x="727" fg:w="5"/><text x="58.3171%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="58.3067%" y="229" width="0.1597%" height="15" fill="rgb(233,78,24)" fg:x="730" fg:w="2"/><text x="58.5567%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.3067%" y="213" width="0.1597%" height="15" fill="rgb(211,142,8)" fg:x="730" fg:w="2"/><text x="58.5567%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="58.3866%" y="197" width="0.0799%" height="15" fill="rgb(253,38,53)" fg:x="731" fg:w="1"/><text x="58.6366%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.3866%" y="181" width="0.0799%" height="15" fill="rgb(234,63,51)" fg:x="731" fg:w="1"/><text x="58.6366%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.3866%" y="165" width="0.0799%" height="15" fill="rgb(205,23,31)" fg:x="731" fg:w="1"/><text x="58.6366%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.3866%" y="149" width="0.0799%" height="15" fill="rgb(210,184,50)" fg:x="731" fg:w="1"/><text x="58.6366%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.16%)</title><rect x="58.7061%" y="341" width="0.1597%" height="15" fill="rgb(222,112,26)" fg:x="735" fg:w="2"/><text x="58.9561%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8658%" y="341" width="0.0799%" height="15" fill="rgb(250,98,18)" fg:x="737" fg:w="1"/><text x="59.1158%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.9457%" y="309" width="0.1597%" height="15" fill="rgb(250,34,12)" fg:x="738" fg:w="2"/><text x="59.1957%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.1054%" y="309" width="0.0799%" height="15" fill="rgb(236,141,30)" fg:x="740" fg:w="1"/><text x="59.3554%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.3450%" y="197" width="0.0799%" height="15" fill="rgb(246,134,38)" fg:x="743" fg:w="1"/><text x="59.5950%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.3450%" y="181" width="0.0799%" height="15" fill="rgb(240,114,4)" fg:x="743" fg:w="1"/><text x="59.5950%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="59.3450%" y="165" width="0.0799%" height="15" fill="rgb(243,113,39)" fg:x="743" fg:w="1"/><text x="59.5950%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="59.1853%" y="261" width="0.3195%" height="15" fill="rgb(239,215,4)" fg:x="741" fg:w="4"/><text x="59.4353%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="59.1853%" y="245" width="0.3195%" height="15" fill="rgb(236,229,45)" fg:x="741" fg:w="4"/><text x="59.4353%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="59.3450%" y="229" width="0.1597%" height="15" fill="rgb(242,2,6)" fg:x="743" fg:w="2"/><text x="59.5950%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.3450%" y="213" width="0.1597%" height="15" fill="rgb(239,108,21)" fg:x="743" fg:w="2"/><text x="59.5950%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="59.4249%" y="197" width="0.0799%" height="15" fill="rgb(215,168,34)" fg:x="744" fg:w="1"/><text x="59.6749%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.4249%" y="181" width="0.0799%" height="15" fill="rgb(238,31,17)" fg:x="744" fg:w="1"/><text x="59.6749%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.4249%" y="165" width="0.0799%" height="15" fill="rgb(220,133,11)" fg:x="744" fg:w="1"/><text x="59.6749%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.4249%" y="149" width="0.0799%" height="15" fill="rgb(212,158,23)" fg:x="744" fg:w="1"/><text x="59.6749%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="59.1853%" y="293" width="0.3994%" height="15" fill="rgb(223,172,7)" fg:x="741" fg:w="5"/><text x="59.4353%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="59.1853%" y="277" width="0.3994%" height="15" fill="rgb(244,3,52)" fg:x="741" fg:w="5"/><text x="59.4353%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.5048%" y="261" width="0.0799%" height="15" fill="rgb(207,69,27)" fg:x="745" fg:w="1"/><text x="59.7548%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.5847%" y="261" width="0.0799%" height="15" fill="rgb(213,136,45)" fg:x="746" fg:w="1"/><text x="59.8347%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.5847%" y="245" width="0.0799%" height="15" fill="rgb(218,79,17)" fg:x="746" fg:w="1"/><text x="59.8347%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.5847%" y="229" width="0.0799%" height="15" fill="rgb(216,106,36)" fg:x="746" fg:w="1"/><text x="59.8347%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.88%)</title><rect x="58.9457%" y="341" width="0.8786%" height="15" fill="rgb(251,27,45)" fg:x="738" fg:w="11"/><text x="59.1957%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="58.9457%" y="325" width="0.8786%" height="15" fill="rgb(232,21,34)" fg:x="738" fg:w="11"/><text x="59.1957%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="59.1853%" y="309" width="0.6390%" height="15" fill="rgb(249,191,16)" fg:x="741" fg:w="8"/><text x="59.4353%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.5847%" y="293" width="0.2396%" height="15" fill="rgb(224,88,20)" fg:x="746" fg:w="3"/><text x="59.8347%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.5847%" y="277" width="0.2396%" height="15" fill="rgb(237,93,27)" fg:x="746" fg:w="3"/><text x="59.8347%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="59.6645%" y="261" width="0.1597%" height="15" fill="rgb(226,198,48)" fg:x="747" fg:w="2"/><text x="59.9145%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.6645%" y="245" width="0.1597%" height="15" fill="rgb(207,162,53)" fg:x="747" fg:w="2"/><text x="59.9145%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.6645%" y="229" width="0.1597%" height="15" fill="rgb(207,169,9)" fg:x="747" fg:w="2"/><text x="59.9145%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="59.6645%" y="213" width="0.1597%" height="15" fill="rgb(224,166,46)" fg:x="747" fg:w="2"/><text x="59.9145%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.7444%" y="197" width="0.0799%" height="15" fill="rgb(233,26,6)" fg:x="748" fg:w="1"/><text x="59.9944%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.7444%" y="181" width="0.0799%" height="15" fill="rgb(218,106,45)" fg:x="748" fg:w="1"/><text x="59.9944%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="59.7444%" y="165" width="0.0799%" height="15" fill="rgb(240,217,4)" fg:x="748" fg:w="1"/><text x="59.9944%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.7444%" y="149" width="0.0799%" height="15" fill="rgb(246,171,10)" fg:x="748" fg:w="1"/><text x="59.9944%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.7444%" y="133" width="0.0799%" height="15" fill="rgb(223,197,30)" fg:x="748" fg:w="1"/><text x="59.9944%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.7444%" y="117" width="0.0799%" height="15" fill="rgb(207,92,16)" fg:x="748" fg:w="1"/><text x="59.9944%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (29 samples, 2.32%)</title><rect x="57.5879%" y="389" width="2.3163%" height="15" fill="rgb(211,6,44)" fg:x="721" fg:w="29"/><text x="57.8379%" y="399.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (18 samples, 1.44%)</title><rect x="58.4665%" y="373" width="1.4377%" height="15" fill="rgb(219,139,2)" fg:x="732" fg:w="18"/><text x="58.7165%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (18 samples, 1.44%)</title><rect x="58.4665%" y="357" width="1.4377%" height="15" fill="rgb(224,103,21)" fg:x="732" fg:w="18"/><text x="58.7165%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.8243%" y="341" width="0.0799%" height="15" fill="rgb(254,110,48)" fg:x="749" fg:w="1"/><text x="60.0743%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.8243%" y="325" width="0.0799%" height="15" fill="rgb(212,88,19)" fg:x="749" fg:w="1"/><text x="60.0743%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.9042%" y="245" width="0.0799%" height="15" fill="rgb(248,103,6)" fg:x="750" fg:w="1"/><text x="60.1542%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.9840%" y="245" width="0.0799%" height="15" fill="rgb(214,53,46)" fg:x="751" fg:w="1"/><text x="60.2340%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="59.9042%" y="389" width="0.2396%" height="15" fill="rgb(236,190,24)" fg:x="750" fg:w="3"/><text x="60.1542%" y="399.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="59.9042%" y="373" width="0.2396%" height="15" fill="rgb(254,58,28)" fg:x="750" fg:w="3"/><text x="60.1542%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="59.9042%" y="357" width="0.2396%" height="15" fill="rgb(243,63,27)" fg:x="750" fg:w="3"/><text x="60.1542%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.9042%" y="341" width="0.2396%" height="15" fill="rgb(206,81,20)" fg:x="750" fg:w="3"/><text x="60.1542%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.9042%" y="325" width="0.2396%" height="15" fill="rgb(252,69,51)" fg:x="750" fg:w="3"/><text x="60.1542%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.9042%" y="309" width="0.2396%" height="15" fill="rgb(222,213,4)" fg:x="750" fg:w="3"/><text x="60.1542%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.9042%" y="293" width="0.2396%" height="15" fill="rgb(226,198,12)" fg:x="750" fg:w="3"/><text x="60.1542%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="59.9042%" y="277" width="0.2396%" height="15" fill="rgb(248,115,11)" fg:x="750" fg:w="3"/><text x="60.1542%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.9042%" y="261" width="0.2396%" height="15" fill="rgb(221,148,54)" fg:x="750" fg:w="3"/><text x="60.1542%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.0639%" y="245" width="0.0799%" height="15" fill="rgb(214,209,51)" fg:x="752" fg:w="1"/><text x="60.3139%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.0639%" y="229" width="0.0799%" height="15" fill="rgb(249,116,53)" fg:x="752" fg:w="1"/><text x="60.3139%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.1438%" y="373" width="0.0799%" height="15" fill="rgb(248,170,1)" fg:x="753" fg:w="1"/><text x="60.3938%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.1438%" y="357" width="0.0799%" height="15" fill="rgb(244,105,10)" fg:x="753" fg:w="1"/><text x="60.3938%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.1438%" y="341" width="0.0799%" height="15" fill="rgb(229,100,5)" fg:x="753" fg:w="1"/><text x="60.3938%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.1438%" y="325" width="0.0799%" height="15" fill="rgb(233,221,39)" fg:x="753" fg:w="1"/><text x="60.3938%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.1438%" y="309" width="0.0799%" height="15" fill="rgb(233,88,21)" fg:x="753" fg:w="1"/><text x="60.3938%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.1438%" y="293" width="0.0799%" height="15" fill="rgb(206,13,0)" fg:x="753" fg:w="1"/><text x="60.3938%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.1438%" y="277" width="0.0799%" height="15" fill="rgb(242,15,35)" fg:x="753" fg:w="1"/><text x="60.3938%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.1438%" y="261" width="0.0799%" height="15" fill="rgb(247,142,41)" fg:x="753" fg:w="1"/><text x="60.3938%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.1438%" y="245" width="0.0799%" height="15" fill="rgb(245,51,29)" fg:x="753" fg:w="1"/><text x="60.3938%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.1438%" y="229" width="0.0799%" height="15" fill="rgb(228,209,43)" fg:x="753" fg:w="1"/><text x="60.3938%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.1438%" y="213" width="0.0799%" height="15" fill="rgb(233,185,9)" fg:x="753" fg:w="1"/><text x="60.3938%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.1438%" y="197" width="0.0799%" height="15" fill="rgb(226,93,0)" fg:x="753" fg:w="1"/><text x="60.3938%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (50 samples, 3.99%)</title><rect x="56.7093%" y="421" width="3.9936%" height="15" fill="rgb(245,194,43)" fg:x="710" fg:w="50"/><text x="56.9593%" y="431.50">&lt;eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (50 samples, 3.99%)</title><rect x="56.7093%" y="405" width="3.9936%" height="15" fill="rgb(211,145,34)" fg:x="710" fg:w="50"/><text x="56.9593%" y="415.50">engi..</text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="60.1438%" y="389" width="0.5591%" height="15" fill="rgb(231,228,28)" fg:x="753" fg:w="7"/><text x="60.3938%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="60.2236%" y="373" width="0.4792%" height="15" fill="rgb(236,149,4)" fg:x="754" fg:w="6"/><text x="60.4736%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="60.2236%" y="357" width="0.4792%" height="15" fill="rgb(234,114,38)" fg:x="754" fg:w="6"/><text x="60.4736%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="60.2236%" y="341" width="0.4792%" height="15" fill="rgb(246,132,51)" fg:x="754" fg:w="6"/><text x="60.4736%" y="351.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="60.2236%" y="325" width="0.4792%" height="15" fill="rgb(251,137,22)" fg:x="754" fg:w="6"/><text x="60.4736%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (51 samples, 4.07%)</title><rect x="56.7093%" y="469" width="4.0735%" height="15" fill="rgb(243,59,52)" fg:x="710" fg:w="51"/><text x="56.9593%" y="479.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 4.07%)</title><rect x="56.7093%" y="453" width="4.0735%" height="15" fill="rgb(239,56,28)" fg:x="710" fg:w="51"/><text x="56.9593%" y="463.50">&lt;all..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (51 samples, 4.07%)</title><rect x="56.7093%" y="437" width="4.0735%" height="15" fill="rgb(218,168,27)" fg:x="710" fg:w="51"/><text x="56.9593%" y="447.50">&lt;eng..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="60.7029%" y="421" width="0.0799%" height="15" fill="rgb(232,165,11)" fg:x="760" fg:w="1"/><text x="60.9529%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7029%" y="405" width="0.0799%" height="15" fill="rgb(253,55,41)" fg:x="760" fg:w="1"/><text x="60.9529%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7029%" y="389" width="0.0799%" height="15" fill="rgb(233,206,24)" fg:x="760" fg:w="1"/><text x="60.9529%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.7029%" y="373" width="0.0799%" height="15" fill="rgb(220,199,8)" fg:x="760" fg:w="1"/><text x="60.9529%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.7029%" y="357" width="0.0799%" height="15" fill="rgb(254,65,26)" fg:x="760" fg:w="1"/><text x="60.9529%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.7029%" y="341" width="0.0799%" height="15" fill="rgb(253,102,23)" fg:x="760" fg:w="1"/><text x="60.9529%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="60.7029%" y="325" width="0.0799%" height="15" fill="rgb(231,103,35)" fg:x="760" fg:w="1"/><text x="60.9529%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.7029%" y="309" width="0.0799%" height="15" fill="rgb(238,26,10)" fg:x="760" fg:w="1"/><text x="60.9529%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (52 samples, 4.15%)</title><rect x="56.7093%" y="485" width="4.1534%" height="15" fill="rgb(234,191,34)" fg:x="710" fg:w="52"/><text x="56.9593%" y="495.50">&lt;plug..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="60.7827%" y="469" width="0.0799%" height="15" fill="rgb(206,210,9)" fg:x="761" fg:w="1"/><text x="61.0327%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.7827%" y="453" width="0.0799%" height="15" fill="rgb(219,155,3)" fg:x="761" fg:w="1"/><text x="61.0327%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.8626%" y="485" width="0.0799%" height="15" fill="rgb(221,62,52)" fg:x="762" fg:w="1"/><text x="61.1126%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="60.8626%" y="469" width="0.0799%" height="15" fill="rgb(215,197,36)" fg:x="762" fg:w="1"/><text x="61.1126%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="60.9425%" y="453" width="0.1597%" height="15" fill="rgb(226,222,6)" fg:x="763" fg:w="2"/><text x="61.1925%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.1022%" y="453" width="0.0799%" height="15" fill="rgb(215,58,28)" fg:x="765" fg:w="1"/><text x="61.3522%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.1821%" y="453" width="0.0799%" height="15" fill="rgb(212,148,2)" fg:x="766" fg:w="1"/><text x="61.4321%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.1821%" y="437" width="0.0799%" height="15" fill="rgb(208,21,42)" fg:x="766" fg:w="1"/><text x="61.4321%" y="447.50"></text></g><g><title>plugins_core::tools::get_contained_keys (66 samples, 5.27%)</title><rect x="56.0703%" y="533" width="5.2716%" height="15" fill="rgb(209,107,26)" fg:x="702" fg:w="66"/><text x="56.3203%" y="543.50">plugin..</text></g><g><title>kernel::model::entry::Entry::scope (66 samples, 5.27%)</title><rect x="56.0703%" y="517" width="5.2716%" height="15" fill="rgb(254,60,47)" fg:x="702" fg:w="66"/><text x="56.3203%" y="527.50">kernel..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (66 samples, 5.27%)</title><rect x="56.0703%" y="501" width="5.2716%" height="15" fill="rgb(207,226,45)" fg:x="702" fg:w="66"/><text x="56.3203%" y="511.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="60.9425%" y="485" width="0.3994%" height="15" fill="rgb(223,124,22)" fg:x="763" fg:w="5"/><text x="61.1925%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="60.9425%" y="469" width="0.3994%" height="15" fill="rgb(240,162,13)" fg:x="763" fg:w="5"/><text x="61.1925%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.2620%" y="453" width="0.0799%" height="15" fill="rgb(244,199,31)" fg:x="767" fg:w="1"/><text x="61.5120%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.2620%" y="437" width="0.0799%" height="15" fill="rgb(207,92,16)" fg:x="767" fg:w="1"/><text x="61.5120%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.2620%" y="421" width="0.0799%" height="15" fill="rgb(215,31,19)" fg:x="767" fg:w="1"/><text x="61.5120%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.2620%" y="405" width="0.0799%" height="15" fill="rgb(245,118,14)" fg:x="767" fg:w="1"/><text x="61.5120%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.2620%" y="389" width="0.0799%" height="15" fill="rgb(248,12,46)" fg:x="767" fg:w="1"/><text x="61.5120%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.2620%" y="373" width="0.0799%" height="15" fill="rgb(209,119,0)" fg:x="767" fg:w="1"/><text x="61.5120%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.3419%" y="517" width="0.0799%" height="15" fill="rgb(254,51,44)" fg:x="768" fg:w="1"/><text x="61.5919%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="61.4217%" y="517" width="0.0799%" height="15" fill="rgb(253,182,35)" fg:x="769" fg:w="1"/><text x="61.6717%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="61.5815%" y="485" width="0.0799%" height="15" fill="rgb(205,198,39)" fg:x="771" fg:w="1"/><text x="61.8315%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.5815%" y="469" width="0.0799%" height="15" fill="rgb(251,175,48)" fg:x="771" fg:w="1"/><text x="61.8315%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="61.5815%" y="453" width="0.0799%" height="15" fill="rgb(239,38,17)" fg:x="771" fg:w="1"/><text x="61.8315%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="61.5815%" y="437" width="0.0799%" height="15" fill="rgb(212,101,8)" fg:x="771" fg:w="1"/><text x="61.8315%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.6613%" y="485" width="0.0799%" height="15" fill="rgb(228,35,17)" fg:x="772" fg:w="1"/><text x="61.9113%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (118 samples, 9.42%)</title><rect x="52.3962%" y="565" width="9.4249%" height="15" fill="rgb(214,95,8)" fg:x="656" fg:w="118"/><text x="52.6462%" y="575.50">&lt;alloc::vec::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (118 samples, 9.42%)</title><rect x="52.3962%" y="549" width="9.4249%" height="15" fill="rgb(210,176,35)" fg:x="656" fg:w="118"/><text x="52.6462%" y="559.50">&lt;core::iter::..</text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.48%)</title><rect x="61.3419%" y="533" width="0.4792%" height="15" fill="rgb(226,4,3)" fg:x="768" fg:w="6"/><text x="61.5919%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="61.5016%" y="517" width="0.3195%" height="15" fill="rgb(232,133,14)" fg:x="770" fg:w="4"/><text x="61.7516%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="61.5815%" y="501" width="0.2396%" height="15" fill="rgb(250,191,8)" fg:x="771" fg:w="3"/><text x="61.8315%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.7412%" y="485" width="0.0799%" height="15" fill="rgb(213,12,45)" fg:x="773" fg:w="1"/><text x="61.9912%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.7412%" y="469" width="0.0799%" height="15" fill="rgb(233,78,26)" fg:x="773" fg:w="1"/><text x="61.9912%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.7412%" y="453" width="0.0799%" height="15" fill="rgb(245,222,11)" fg:x="773" fg:w="1"/><text x="61.9912%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.7412%" y="437" width="0.0799%" height="15" fill="rgb(216,174,12)" fg:x="773" fg:w="1"/><text x="61.9912%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.7412%" y="421" width="0.0799%" height="15" fill="rgb(213,15,9)" fg:x="773" fg:w="1"/><text x="61.9912%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7412%" y="405" width="0.0799%" height="15" fill="rgb(238,103,32)" fg:x="773" fg:w="1"/><text x="61.9912%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.8211%" y="533" width="0.0799%" height="15" fill="rgb(245,85,15)" fg:x="774" fg:w="1"/><text x="62.0711%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.3003%" y="341" width="0.0799%" height="15" fill="rgb(254,204,5)" fg:x="780" fg:w="1"/><text x="62.5503%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.3003%" y="437" width="0.1597%" height="15" fill="rgb(231,178,15)" fg:x="780" fg:w="2"/><text x="62.5503%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.3003%" y="421" width="0.1597%" height="15" fill="rgb(248,151,3)" fg:x="780" fg:w="2"/><text x="62.5503%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="62.3003%" y="405" width="0.1597%" height="15" fill="rgb(250,139,13)" fg:x="780" fg:w="2"/><text x="62.5503%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="62.3003%" y="389" width="0.1597%" height="15" fill="rgb(243,107,53)" fg:x="780" fg:w="2"/><text x="62.5503%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="62.3003%" y="373" width="0.1597%" height="15" fill="rgb(232,81,15)" fg:x="780" fg:w="2"/><text x="62.5503%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="62.3003%" y="357" width="0.1597%" height="15" fill="rgb(225,187,48)" fg:x="780" fg:w="2"/><text x="62.5503%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="62.3802%" y="341" width="0.0799%" height="15" fill="rgb(205,116,12)" fg:x="781" fg:w="1"/><text x="62.6302%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.3802%" y="325" width="0.0799%" height="15" fill="rgb(220,222,31)" fg:x="781" fg:w="1"/><text x="62.6302%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="62.2204%" y="517" width="0.3195%" height="15" fill="rgb(233,187,49)" fg:x="779" fg:w="4"/><text x="62.4704%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="62.3003%" y="501" width="0.2396%" height="15" fill="rgb(211,168,53)" fg:x="780" fg:w="3"/><text x="62.5503%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="62.3003%" y="485" width="0.2396%" height="15" fill="rgb(206,160,16)" fg:x="780" fg:w="3"/><text x="62.5503%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="62.3003%" y="469" width="0.2396%" height="15" fill="rgb(254,164,13)" fg:x="780" fg:w="3"/><text x="62.5503%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="62.3003%" y="453" width="0.2396%" height="15" fill="rgb(229,45,30)" fg:x="780" fg:w="3"/><text x="62.5503%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.4601%" y="437" width="0.0799%" height="15" fill="rgb(237,32,10)" fg:x="782" fg:w="1"/><text x="62.7101%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.4601%" y="421" width="0.0799%" height="15" fill="rgb(251,20,47)" fg:x="782" fg:w="1"/><text x="62.7101%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="62.6997%" y="501" width="0.0799%" height="15" fill="rgb(251,116,12)" fg:x="785" fg:w="1"/><text x="62.9497%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="62.6997%" y="485" width="0.0799%" height="15" fill="rgb(214,227,27)" fg:x="785" fg:w="1"/><text x="62.9497%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6997%" y="469" width="0.0799%" height="15" fill="rgb(248,10,53)" fg:x="785" fg:w="1"/><text x="62.9497%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6997%" y="453" width="0.0799%" height="15" fill="rgb(221,176,25)" fg:x="785" fg:w="1"/><text x="62.9497%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6997%" y="437" width="0.0799%" height="15" fill="rgb(205,70,46)" fg:x="785" fg:w="1"/><text x="62.9497%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.6997%" y="421" width="0.0799%" height="15" fill="rgb(217,45,38)" fg:x="785" fg:w="1"/><text x="62.9497%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.6997%" y="405" width="0.0799%" height="15" fill="rgb(243,6,54)" fg:x="785" fg:w="1"/><text x="62.9497%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.6997%" y="389" width="0.0799%" height="15" fill="rgb(242,76,23)" fg:x="785" fg:w="1"/><text x="62.9497%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.6997%" y="373" width="0.0799%" height="15" fill="rgb(239,166,0)" fg:x="785" fg:w="1"/><text x="62.9497%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.6997%" y="357" width="0.0799%" height="15" fill="rgb(238,174,32)" fg:x="785" fg:w="1"/><text x="62.9497%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.6997%" y="341" width="0.0799%" height="15" fill="rgb(238,124,44)" fg:x="785" fg:w="1"/><text x="62.9497%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.6997%" y="325" width="0.0799%" height="15" fill="rgb(206,185,9)" fg:x="785" fg:w="1"/><text x="62.9497%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.6997%" y="309" width="0.0799%" height="15" fill="rgb(215,157,17)" fg:x="785" fg:w="1"/><text x="62.9497%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.6997%" y="293" width="0.0799%" height="15" fill="rgb(251,17,29)" fg:x="785" fg:w="1"/><text x="62.9497%" y="303.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="62.6997%" y="277" width="0.0799%" height="15" fill="rgb(227,113,27)" fg:x="785" fg:w="1"/><text x="62.9497%" y="287.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.6997%" y="261" width="0.0799%" height="15" fill="rgb(217,226,24)" fg:x="785" fg:w="1"/><text x="62.9497%" y="271.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="62.7796%" y="501" width="0.0799%" height="15" fill="rgb(251,99,38)" fg:x="786" fg:w="1"/><text x="63.0296%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7796%" y="485" width="0.0799%" height="15" fill="rgb(231,147,19)" fg:x="786" fg:w="1"/><text x="63.0296%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7796%" y="469" width="0.0799%" height="15" fill="rgb(230,86,8)" fg:x="786" fg:w="1"/><text x="63.0296%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.7796%" y="453" width="0.0799%" height="15" fill="rgb(237,159,39)" fg:x="786" fg:w="1"/><text x="63.0296%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.7796%" y="437" width="0.0799%" height="15" fill="rgb(247,179,47)" fg:x="786" fg:w="1"/><text x="63.0296%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.7796%" y="421" width="0.0799%" height="15" fill="rgb(253,152,26)" fg:x="786" fg:w="1"/><text x="63.0296%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.7796%" y="405" width="0.0799%" height="15" fill="rgb(222,211,15)" fg:x="786" fg:w="1"/><text x="63.0296%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.7796%" y="389" width="0.0799%" height="15" fill="rgb(236,193,6)" fg:x="786" fg:w="1"/><text x="63.0296%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.7796%" y="373" width="0.0799%" height="15" fill="rgb(226,206,10)" fg:x="786" fg:w="1"/><text x="63.0296%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.7796%" y="357" width="0.0799%" height="15" fill="rgb(213,125,22)" fg:x="786" fg:w="1"/><text x="63.0296%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.7796%" y="341" width="0.0799%" height="15" fill="rgb(221,66,28)" fg:x="786" fg:w="1"/><text x="63.0296%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.7796%" y="325" width="0.0799%" height="15" fill="rgb(222,84,53)" fg:x="786" fg:w="1"/><text x="63.0296%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7796%" y="309" width="0.0799%" height="15" fill="rgb(243,50,15)" fg:x="786" fg:w="1"/><text x="63.0296%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8594%" y="405" width="0.0799%" height="15" fill="rgb(208,184,23)" fg:x="787" fg:w="1"/><text x="63.1094%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8594%" y="389" width="0.0799%" height="15" fill="rgb(221,83,2)" fg:x="787" fg:w="1"/><text x="63.1094%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.8594%" y="373" width="0.0799%" height="15" fill="rgb(236,53,24)" fg:x="787" fg:w="1"/><text x="63.1094%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.8594%" y="357" width="0.0799%" height="15" fill="rgb(244,171,29)" fg:x="787" fg:w="1"/><text x="63.1094%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.8594%" y="341" width="0.0799%" height="15" fill="rgb(205,19,11)" fg:x="787" fg:w="1"/><text x="63.1094%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.8594%" y="325" width="0.0799%" height="15" fill="rgb(207,108,29)" fg:x="787" fg:w="1"/><text x="63.1094%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.8594%" y="309" width="0.0799%" height="15" fill="rgb(236,215,43)" fg:x="787" fg:w="1"/><text x="63.1094%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.8594%" y="293" width="0.0799%" height="15" fill="rgb(213,58,35)" fg:x="787" fg:w="1"/><text x="63.1094%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.8594%" y="277" width="0.0799%" height="15" fill="rgb(220,211,46)" fg:x="787" fg:w="1"/><text x="63.1094%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.8594%" y="261" width="0.0799%" height="15" fill="rgb(212,134,16)" fg:x="787" fg:w="1"/><text x="63.1094%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.8594%" y="245" width="0.0799%" height="15" fill="rgb(232,90,44)" fg:x="787" fg:w="1"/><text x="63.1094%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8594%" y="229" width="0.0799%" height="15" fill="rgb(212,18,36)" fg:x="787" fg:w="1"/><text x="63.1094%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9393%" y="405" width="0.0799%" height="15" fill="rgb(206,112,24)" fg:x="788" fg:w="1"/><text x="63.1893%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.0192%" y="405" width="0.0799%" height="15" fill="rgb(238,223,40)" fg:x="789" fg:w="1"/><text x="63.2692%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="63.0990%" y="213" width="0.0799%" height="15" fill="rgb(226,169,20)" fg:x="790" fg:w="1"/><text x="63.3490%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="63.0990%" y="373" width="0.1597%" height="15" fill="rgb(241,64,52)" fg:x="790" fg:w="2"/><text x="63.3490%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="63.0990%" y="357" width="0.1597%" height="15" fill="rgb(228,120,25)" fg:x="790" fg:w="2"/><text x="63.3490%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="63.0990%" y="341" width="0.1597%" height="15" fill="rgb(234,108,19)" fg:x="790" fg:w="2"/><text x="63.3490%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="63.0990%" y="325" width="0.1597%" height="15" fill="rgb(236,133,29)" fg:x="790" fg:w="2"/><text x="63.3490%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="63.0990%" y="309" width="0.1597%" height="15" fill="rgb(246,174,53)" fg:x="790" fg:w="2"/><text x="63.3490%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="63.0990%" y="293" width="0.1597%" height="15" fill="rgb(210,105,35)" fg:x="790" fg:w="2"/><text x="63.3490%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="63.0990%" y="277" width="0.1597%" height="15" fill="rgb(225,27,26)" fg:x="790" fg:w="2"/><text x="63.3490%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="63.0990%" y="261" width="0.1597%" height="15" fill="rgb(233,2,39)" fg:x="790" fg:w="2"/><text x="63.3490%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="63.0990%" y="245" width="0.1597%" height="15" fill="rgb(219,164,26)" fg:x="790" fg:w="2"/><text x="63.3490%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="63.0990%" y="229" width="0.1597%" height="15" fill="rgb(236,211,5)" fg:x="790" fg:w="2"/><text x="63.3490%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.1789%" y="213" width="0.0799%" height="15" fill="rgb(244,227,23)" fg:x="791" fg:w="1"/><text x="63.4289%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.1789%" y="197" width="0.0799%" height="15" fill="rgb(230,184,8)" fg:x="791" fg:w="1"/><text x="63.4289%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (11 samples, 0.88%)</title><rect x="62.5399%" y="517" width="0.8786%" height="15" fill="rgb(217,125,48)" fg:x="783" fg:w="11"/><text x="62.7899%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="62.8594%" y="501" width="0.5591%" height="15" fill="rgb(223,192,47)" fg:x="787" fg:w="7"/><text x="63.1094%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.56%)</title><rect x="62.8594%" y="485" width="0.5591%" height="15" fill="rgb(226,119,10)" fg:x="787" fg:w="7"/><text x="63.1094%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.56%)</title><rect x="62.8594%" y="469" width="0.5591%" height="15" fill="rgb(221,49,29)" fg:x="787" fg:w="7"/><text x="63.1094%" y="479.50"></text></g><g><title>core::fmt::write (7 samples, 0.56%)</title><rect x="62.8594%" y="453" width="0.5591%" height="15" fill="rgb(217,205,19)" fg:x="787" fg:w="7"/><text x="63.1094%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.56%)</title><rect x="62.8594%" y="437" width="0.5591%" height="15" fill="rgb(242,104,7)" fg:x="787" fg:w="7"/><text x="63.1094%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (7 samples, 0.56%)</title><rect x="62.8594%" y="421" width="0.5591%" height="15" fill="rgb(209,154,48)" fg:x="787" fg:w="7"/><text x="63.1094%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="63.0990%" y="405" width="0.3195%" height="15" fill="rgb(219,213,46)" fg:x="790" fg:w="4"/><text x="63.3490%" y="415.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="63.0990%" y="389" width="0.3195%" height="15" fill="rgb(229,105,38)" fg:x="790" fg:w="4"/><text x="63.3490%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="63.2588%" y="373" width="0.1597%" height="15" fill="rgb(205,151,5)" fg:x="792" fg:w="2"/><text x="63.5088%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="63.2588%" y="357" width="0.1597%" height="15" fill="rgb(248,115,40)" fg:x="792" fg:w="2"/><text x="63.5088%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="63.2588%" y="341" width="0.1597%" height="15" fill="rgb(206,179,2)" fg:x="792" fg:w="2"/><text x="63.5088%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="63.2588%" y="325" width="0.1597%" height="15" fill="rgb(230,103,24)" fg:x="792" fg:w="2"/><text x="63.5088%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="63.3387%" y="309" width="0.0799%" height="15" fill="rgb(218,152,4)" fg:x="793" fg:w="1"/><text x="63.5887%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.3387%" y="293" width="0.0799%" height="15" fill="rgb(236,161,54)" fg:x="793" fg:w="1"/><text x="63.5887%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.3387%" y="277" width="0.0799%" height="15" fill="rgb(226,65,17)" fg:x="793" fg:w="1"/><text x="63.5887%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="63.3387%" y="261" width="0.0799%" height="15" fill="rgb(221,134,44)" fg:x="793" fg:w="1"/><text x="63.5887%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="63.3387%" y="245" width="0.0799%" height="15" fill="rgb(251,129,4)" fg:x="793" fg:w="1"/><text x="63.5887%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="63.3387%" y="229" width="0.0799%" height="15" fill="rgb(244,32,34)" fg:x="793" fg:w="1"/><text x="63.5887%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="63.3387%" y="213" width="0.0799%" height="15" fill="rgb(251,224,37)" fg:x="793" fg:w="1"/><text x="63.5887%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="63.3387%" y="197" width="0.0799%" height="15" fill="rgb(248,117,31)" fg:x="793" fg:w="1"/><text x="63.5887%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="63.3387%" y="181" width="0.0799%" height="15" fill="rgb(222,208,37)" fg:x="793" fg:w="1"/><text x="63.5887%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="63.3387%" y="165" width="0.0799%" height="15" fill="rgb(234,211,25)" fg:x="793" fg:w="1"/><text x="63.5887%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="63.3387%" y="149" width="0.0799%" height="15" fill="rgb(211,72,6)" fg:x="793" fg:w="1"/><text x="63.5887%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.3387%" y="133" width="0.0799%" height="15" fill="rgb(249,198,38)" fg:x="793" fg:w="1"/><text x="63.5887%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="63.3387%" y="117" width="0.0799%" height="15" fill="rgb(221,86,51)" fg:x="793" fg:w="1"/><text x="63.5887%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="63.3387%" y="101" width="0.0799%" height="15" fill="rgb(226,178,43)" fg:x="793" fg:w="1"/><text x="63.5887%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="63.3387%" y="85" width="0.0799%" height="15" fill="rgb(215,145,7)" fg:x="793" fg:w="1"/><text x="63.5887%" y="95.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="63.3387%" y="69" width="0.0799%" height="15" fill="rgb(250,202,36)" fg:x="793" fg:w="1"/><text x="63.5887%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.1374%" y="405" width="0.0799%" height="15" fill="rgb(215,86,13)" fg:x="803" fg:w="1"/><text x="64.3874%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="65.1757%" y="181" width="0.1597%" height="15" fill="rgb(221,134,12)" fg:x="816" fg:w="2"/><text x="65.4257%" y="191.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="65.1757%" y="213" width="0.3195%" height="15" fill="rgb(213,82,10)" fg:x="816" fg:w="4"/><text x="65.4257%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="65.1757%" y="197" width="0.3195%" height="15" fill="rgb(214,142,0)" fg:x="816" fg:w="4"/><text x="65.4257%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="65.3355%" y="181" width="0.1597%" height="15" fill="rgb(205,145,9)" fg:x="818" fg:w="2"/><text x="65.5855%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.64%)</title><rect x="65.0160%" y="229" width="0.6390%" height="15" fill="rgb(244,214,8)" fg:x="814" fg:w="8"/><text x="65.2660%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.4952%" y="213" width="0.1597%" height="15" fill="rgb(224,72,51)" fg:x="820" fg:w="2"/><text x="65.7452%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="65.4952%" y="197" width="0.1597%" height="15" fill="rgb(233,137,37)" fg:x="820" fg:w="2"/><text x="65.7452%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.5751%" y="181" width="0.0799%" height="15" fill="rgb(208,71,28)" fg:x="821" fg:w="1"/><text x="65.8251%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.20%)</title><rect x="64.6965%" y="277" width="1.1981%" height="15" fill="rgb(226,31,7)" fg:x="810" fg:w="15"/><text x="64.9465%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.96%)</title><rect x="64.9361%" y="261" width="0.9585%" height="15" fill="rgb(229,62,18)" fg:x="813" fg:w="12"/><text x="65.1861%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="64.9361%" y="245" width="0.9585%" height="15" fill="rgb(226,74,28)" fg:x="813" fg:w="12"/><text x="65.1861%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="65.6550%" y="229" width="0.2396%" height="15" fill="rgb(214,170,18)" fg:x="822" fg:w="3"/><text x="65.9050%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.7348%" y="213" width="0.1597%" height="15" fill="rgb(227,229,35)" fg:x="823" fg:w="2"/><text x="65.9848%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (19 samples, 1.52%)</title><rect x="64.5367%" y="309" width="1.5176%" height="15" fill="rgb(225,181,39)" fg:x="808" fg:w="19"/><text x="64.7867%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.36%)</title><rect x="64.6965%" y="293" width="1.3578%" height="15" fill="rgb(253,124,44)" fg:x="810" fg:w="17"/><text x="64.9465%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="65.8946%" y="277" width="0.1597%" height="15" fill="rgb(220,75,18)" fg:x="825" fg:w="2"/><text x="66.1446%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.8946%" y="261" width="0.1597%" height="15" fill="rgb(239,175,43)" fg:x="825" fg:w="2"/><text x="66.1446%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.0543%" y="309" width="0.0799%" height="15" fill="rgb(228,112,50)" fg:x="827" fg:w="1"/><text x="66.3043%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.0543%" y="293" width="0.0799%" height="15" fill="rgb(232,105,36)" fg:x="827" fg:w="1"/><text x="66.3043%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 1.84%)</title><rect x="64.5367%" y="325" width="1.8371%" height="15" fill="rgb(227,137,47)" fg:x="808" fg:w="23"/><text x="64.7867%" y="335.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="66.1342%" y="309" width="0.2396%" height="15" fill="rgb(217,51,9)" fg:x="828" fg:w="3"/><text x="66.3842%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.2939%" y="293" width="0.0799%" height="15" fill="rgb(245,117,0)" fg:x="830" fg:w="1"/><text x="66.5439%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (28 samples, 2.24%)</title><rect x="64.4569%" y="341" width="2.2364%" height="15" fill="rgb(252,52,30)" fg:x="807" fg:w="28"/><text x="64.7069%" y="351.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="66.3738%" y="325" width="0.3195%" height="15" fill="rgb(227,85,33)" fg:x="831" fg:w="4"/><text x="66.6238%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="66.4537%" y="309" width="0.2396%" height="15" fill="rgb(220,157,20)" fg:x="832" fg:w="3"/><text x="66.7037%" y="319.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.6933%" y="309" width="0.0799%" height="15" fill="rgb(254,14,34)" fg:x="835" fg:w="1"/><text x="66.9433%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.9329%" y="261" width="0.0799%" height="15" fill="rgb(216,103,41)" fg:x="838" fg:w="1"/><text x="67.1829%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (34 samples, 2.72%)</title><rect x="64.4569%" y="357" width="2.7157%" height="15" fill="rgb(245,221,9)" fg:x="807" fg:w="34"/><text x="64.7069%" y="367.50">&lt;r..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="66.6933%" y="341" width="0.4792%" height="15" fill="rgb(254,136,47)" fg:x="835" fg:w="6"/><text x="66.9433%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.48%)</title><rect x="66.6933%" y="325" width="0.4792%" height="15" fill="rgb(235,71,46)" fg:x="835" fg:w="6"/><text x="66.9433%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.40%)</title><rect x="66.7732%" y="309" width="0.3994%" height="15" fill="rgb(242,154,29)" fg:x="836" fg:w="5"/><text x="67.0232%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="66.7732%" y="293" width="0.3994%" height="15" fill="rgb(210,65,31)" fg:x="836" fg:w="5"/><text x="67.0232%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.40%)</title><rect x="66.7732%" y="277" width="0.3994%" height="15" fill="rgb(244,9,50)" fg:x="836" fg:w="5"/><text x="67.0232%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.0128%" y="261" width="0.1597%" height="15" fill="rgb(215,141,38)" fg:x="839" fg:w="2"/><text x="67.2628%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="67.0128%" y="245" width="0.1597%" height="15" fill="rgb(241,129,6)" fg:x="839" fg:w="2"/><text x="67.2628%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="67.0927%" y="229" width="0.0799%" height="15" fill="rgb(253,169,4)" fg:x="840" fg:w="1"/><text x="67.3427%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 2.96%)</title><rect x="64.3770%" y="373" width="2.9553%" height="15" fill="rgb(237,82,36)" fg:x="806" fg:w="37"/><text x="64.6270%" y="383.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.1725%" y="357" width="0.1597%" height="15" fill="rgb(209,171,11)" fg:x="841" fg:w="2"/><text x="67.4225%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.2524%" y="341" width="0.0799%" height="15" fill="rgb(242,19,22)" fg:x="842" fg:w="1"/><text x="67.5024%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="67.2524%" y="325" width="0.0799%" height="15" fill="rgb(251,122,24)" fg:x="842" fg:w="1"/><text x="67.5024%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (40 samples, 3.19%)</title><rect x="64.2173%" y="389" width="3.1949%" height="15" fill="rgb(226,166,42)" fg:x="804" fg:w="40"/><text x="64.4673%" y="399.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="67.3323%" y="373" width="0.0799%" height="15" fill="rgb(244,101,48)" fg:x="843" fg:w="1"/><text x="67.5823%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3323%" y="357" width="0.0799%" height="15" fill="rgb(227,125,1)" fg:x="843" fg:w="1"/><text x="67.5823%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (42 samples, 3.35%)</title><rect x="64.2173%" y="405" width="3.3546%" height="15" fill="rgb(206,79,43)" fg:x="804" fg:w="42"/><text x="64.4673%" y="415.50">&lt;rp..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="67.4121%" y="389" width="0.1597%" height="15" fill="rgb(241,109,41)" fg:x="844" fg:w="2"/><text x="67.6621%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="67.4920%" y="373" width="0.0799%" height="15" fill="rgb(219,73,4)" fg:x="845" fg:w="1"/><text x="67.7420%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.4920%" y="357" width="0.0799%" height="15" fill="rgb(239,25,41)" fg:x="845" fg:w="1"/><text x="67.7420%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.5719%" y="405" width="0.0799%" height="15" fill="rgb(208,88,46)" fg:x="846" fg:w="1"/><text x="67.8219%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5719%" y="389" width="0.0799%" height="15" fill="rgb(239,184,9)" fg:x="846" fg:w="1"/><text x="67.8219%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="68.0511%" y="389" width="0.2396%" height="15" fill="rgb(223,114,13)" fg:x="852" fg:w="3"/><text x="68.3011%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="68.1310%" y="373" width="0.1597%" height="15" fill="rgb(214,28,42)" fg:x="853" fg:w="2"/><text x="68.3810%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (60 samples, 4.79%)</title><rect x="63.6581%" y="421" width="4.7923%" height="15" fill="rgb(252,32,44)" fg:x="797" fg:w="60"/><text x="63.9081%" y="431.50">&lt;core:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.80%)</title><rect x="67.6518%" y="405" width="0.7987%" height="15" fill="rgb(231,159,4)" fg:x="847" fg:w="10"/><text x="67.9018%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.2907%" y="389" width="0.1597%" height="15" fill="rgb(210,35,26)" fg:x="855" fg:w="2"/><text x="68.5407%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (61 samples, 4.87%)</title><rect x="63.6581%" y="453" width="4.8722%" height="15" fill="rgb(208,190,37)" fg:x="797" fg:w="61"/><text x="63.9081%" y="463.50">&lt;rpc_p..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (61 samples, 4.87%)</title><rect x="63.6581%" y="437" width="4.8722%" height="15" fill="rgb(226,148,22)" fg:x="797" fg:w="61"/><text x="63.9081%" y="447.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="68.4505%" y="421" width="0.0799%" height="15" fill="rgb(242,153,24)" fg:x="857" fg:w="1"/><text x="68.7005%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4505%" y="405" width="0.0799%" height="15" fill="rgb(213,133,7)" fg:x="857" fg:w="1"/><text x="68.7005%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.40%)</title><rect x="68.7700%" y="437" width="0.3994%" height="15" fill="rgb(248,206,18)" fg:x="861" fg:w="5"/><text x="69.0200%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="69.0096%" y="421" width="0.1597%" height="15" fill="rgb(233,157,4)" fg:x="864" fg:w="2"/><text x="69.2596%" y="431.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (72 samples, 5.75%)</title><rect x="63.4984%" y="501" width="5.7508%" height="15" fill="rgb(249,179,32)" fg:x="795" fg:w="72"/><text x="63.7484%" y="511.50">&lt;rpc_pr..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (72 samples, 5.75%)</title><rect x="63.4984%" y="485" width="5.7508%" height="15" fill="rgb(248,69,35)" fg:x="795" fg:w="72"/><text x="63.7484%" y="495.50">&lt;std::c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72 samples, 5.75%)</title><rect x="63.4984%" y="469" width="5.7508%" height="15" fill="rgb(249,158,38)" fg:x="795" fg:w="72"/><text x="63.7484%" y="479.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.72%)</title><rect x="68.5304%" y="453" width="0.7188%" height="15" fill="rgb(223,18,43)" fg:x="858" fg:w="9"/><text x="68.7804%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1693%" y="437" width="0.0799%" height="15" fill="rgb(238,42,45)" fg:x="866" fg:w="1"/><text x="69.4193%" y="447.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="69.5687%" y="453" width="0.5591%" height="15" fill="rgb(219,65,47)" fg:x="871" fg:w="7"/><text x="69.8187%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5272%" y="421" width="0.0799%" height="15" fill="rgb(248,153,12)" fg:x="883" fg:w="1"/><text x="70.7772%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="70.1278%" y="453" width="0.5591%" height="15" fill="rgb(240,118,4)" fg:x="878" fg:w="7"/><text x="70.3778%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="70.4473%" y="437" width="0.2396%" height="15" fill="rgb(250,96,34)" fg:x="882" fg:w="3"/><text x="70.6973%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="70.6070%" y="421" width="0.0799%" height="15" fill="rgb(221,15,4)" fg:x="884" fg:w="1"/><text x="70.8570%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="70.6869%" y="453" width="0.0799%" height="15" fill="rgb(217,149,33)" fg:x="885" fg:w="1"/><text x="70.9369%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8466%" y="421" width="0.0799%" height="15" fill="rgb(213,58,29)" fg:x="887" fg:w="1"/><text x="71.0966%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (3 samples, 0.24%)</title><rect x="70.7668%" y="453" width="0.2396%" height="15" fill="rgb(236,218,9)" fg:x="886" fg:w="3"/><text x="71.0168%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="70.7668%" y="437" width="0.2396%" height="15" fill="rgb(248,40,19)" fg:x="886" fg:w="3"/><text x="71.0168%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9265%" y="421" width="0.0799%" height="15" fill="rgb(212,17,6)" fg:x="888" fg:w="1"/><text x="71.1765%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="71.0064%" y="421" width="0.2396%" height="15" fill="rgb(206,212,20)" fg:x="889" fg:w="3"/><text x="71.2564%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="71.0064%" y="453" width="0.3994%" height="15" fill="rgb(229,80,37)" fg:x="889" fg:w="5"/><text x="71.2564%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="71.0064%" y="437" width="0.3994%" height="15" fill="rgb(253,8,37)" fg:x="889" fg:w="5"/><text x="71.2564%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.2460%" y="421" width="0.1597%" height="15" fill="rgb(215,16,43)" fg:x="892" fg:w="2"/><text x="71.4960%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.3259%" y="405" width="0.0799%" height="15" fill="rgb(236,219,16)" fg:x="893" fg:w="1"/><text x="71.5759%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3259%" y="389" width="0.0799%" height="15" fill="rgb(251,0,3)" fg:x="893" fg:w="1"/><text x="71.5759%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="71.4856%" y="421" width="0.1597%" height="15" fill="rgb(207,133,37)" fg:x="895" fg:w="2"/><text x="71.7356%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="71.6454%" y="405" width="0.2396%" height="15" fill="rgb(250,143,20)" fg:x="897" fg:w="3"/><text x="71.8954%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="71.6454%" y="389" width="0.2396%" height="15" fill="rgb(242,19,50)" fg:x="897" fg:w="3"/><text x="71.8954%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="71.6454%" y="373" width="0.2396%" height="15" fill="rgb(206,124,43)" fg:x="897" fg:w="3"/><text x="71.8954%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="71.8850%" y="373" width="0.0799%" height="15" fill="rgb(229,4,38)" fg:x="900" fg:w="1"/><text x="72.1350%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.8850%" y="357" width="0.0799%" height="15" fill="rgb(247,220,45)" fg:x="900" fg:w="1"/><text x="72.1350%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.8850%" y="341" width="0.0799%" height="15" fill="rgb(247,195,0)" fg:x="900" fg:w="1"/><text x="72.1350%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="71.8850%" y="325" width="0.0799%" height="15" fill="rgb(252,12,19)" fg:x="900" fg:w="1"/><text x="72.1350%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="71.8850%" y="405" width="0.1597%" height="15" fill="rgb(222,49,50)" fg:x="900" fg:w="2"/><text x="72.1350%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="71.8850%" y="389" width="0.1597%" height="15" fill="rgb(209,157,28)" fg:x="900" fg:w="2"/><text x="72.1350%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.9649%" y="373" width="0.0799%" height="15" fill="rgb(238,174,24)" fg:x="901" fg:w="1"/><text x="72.2149%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.1246%" y="373" width="0.0799%" height="15" fill="rgb(224,17,28)" fg:x="903" fg:w="1"/><text x="72.3746%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.3642%" y="341" width="0.1597%" height="15" fill="rgb(249,7,29)" fg:x="906" fg:w="2"/><text x="72.6142%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.4441%" y="325" width="0.0799%" height="15" fill="rgb(243,178,4)" fg:x="907" fg:w="1"/><text x="72.6941%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.4441%" y="309" width="0.0799%" height="15" fill="rgb(246,138,35)" fg:x="907" fg:w="1"/><text x="72.6941%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.5240%" y="325" width="0.0799%" height="15" fill="rgb(251,85,18)" fg:x="908" fg:w="1"/><text x="72.7740%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="72.6038%" y="325" width="0.0799%" height="15" fill="rgb(254,55,9)" fg:x="909" fg:w="1"/><text x="72.8538%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.8435%" y="309" width="0.0799%" height="15" fill="rgb(248,4,50)" fg:x="912" fg:w="1"/><text x="73.0935%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="72.9233%" y="293" width="0.0799%" height="15" fill="rgb(215,208,14)" fg:x="913" fg:w="1"/><text x="73.1733%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.9233%" y="277" width="0.0799%" height="15" fill="rgb(218,37,18)" fg:x="913" fg:w="1"/><text x="73.1733%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.9233%" y="261" width="0.0799%" height="15" fill="rgb(206,104,13)" fg:x="913" fg:w="1"/><text x="73.1733%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.9233%" y="245" width="0.0799%" height="15" fill="rgb(248,94,22)" fg:x="913" fg:w="1"/><text x="73.1733%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="72.6837%" y="325" width="0.4792%" height="15" fill="rgb(235,42,46)" fg:x="910" fg:w="6"/><text x="72.9337%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="72.9233%" y="309" width="0.2396%" height="15" fill="rgb(220,228,48)" fg:x="913" fg:w="3"/><text x="73.1733%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.0032%" y="293" width="0.1597%" height="15" fill="rgb(216,58,12)" fg:x="914" fg:w="2"/><text x="73.2532%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="72.1246%" y="389" width="1.2780%" height="15" fill="rgb(223,97,52)" fg:x="903" fg:w="16"/><text x="72.3746%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.20%)</title><rect x="72.2045%" y="373" width="1.1981%" height="15" fill="rgb(208,159,17)" fg:x="904" fg:w="15"/><text x="72.4545%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.04%)</title><rect x="72.3642%" y="357" width="1.0383%" height="15" fill="rgb(215,172,9)" fg:x="906" fg:w="13"/><text x="72.6142%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="72.5240%" y="341" width="0.8786%" height="15" fill="rgb(252,175,30)" fg:x="908" fg:w="11"/><text x="72.7740%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="73.1629%" y="325" width="0.2396%" height="15" fill="rgb(209,159,10)" fg:x="916" fg:w="3"/><text x="73.4129%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 2.00%)</title><rect x="71.6454%" y="421" width="1.9968%" height="15" fill="rgb(229,73,51)" fg:x="897" fg:w="25"/><text x="71.8954%" y="431.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.60%)</title><rect x="72.0447%" y="405" width="1.5974%" height="15" fill="rgb(208,212,43)" fg:x="902" fg:w="20"/><text x="72.2947%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="73.4026%" y="389" width="0.2396%" height="15" fill="rgb(254,123,53)" fg:x="919" fg:w="3"/><text x="73.6526%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 2.24%)</title><rect x="71.4856%" y="437" width="2.2364%" height="15" fill="rgb(254,128,49)" fg:x="895" fg:w="28"/><text x="71.7356%" y="447.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="73.6422%" y="421" width="0.0799%" height="15" fill="rgb(246,16,16)" fg:x="922" fg:w="1"/><text x="73.8922%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.6422%" y="405" width="0.0799%" height="15" fill="rgb(209,200,1)" fg:x="922" fg:w="1"/><text x="73.8922%" y="415.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (130 samples, 10.38%)</title><rect x="63.4185%" y="517" width="10.3834%" height="15" fill="rgb(235,9,3)" fg:x="794" fg:w="130"/><text x="63.6685%" y="527.50">&lt;rpc_proto::Jso..</text></g><g><title>kernel::model::EntityPtr::to_json_value (57 samples, 4.55%)</title><rect x="69.2492%" y="501" width="4.5527%" height="15" fill="rgb(233,121,54)" fg:x="867" fg:w="57"/><text x="69.4992%" y="511.50">kerne..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (56 samples, 4.47%)</title><rect x="69.3291%" y="485" width="4.4728%" height="15" fill="rgb(236,80,25)" fg:x="868" fg:w="56"/><text x="69.5791%" y="495.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (55 samples, 4.39%)</title><rect x="69.4089%" y="469" width="4.3930%" height="15" fill="rgb(220,44,24)" fg:x="869" fg:w="55"/><text x="69.6589%" y="479.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (30 samples, 2.40%)</title><rect x="71.4058%" y="453" width="2.3962%" height="15" fill="rgb(236,225,16)" fg:x="894" fg:w="30"/><text x="71.6558%" y="463.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.7220%" y="437" width="0.0799%" height="15" fill="rgb(237,140,0)" fg:x="923" fg:w="1"/><text x="73.9720%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.7220%" y="421" width="0.0799%" height="15" fill="rgb(243,225,53)" fg:x="923" fg:w="1"/><text x="73.9720%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.7220%" y="405" width="0.0799%" height="15" fill="rgb(240,140,30)" fg:x="923" fg:w="1"/><text x="73.9720%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="73.8019%" y="517" width="0.0799%" height="15" fill="rgb(217,51,16)" fg:x="924" fg:w="1"/><text x="74.0519%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="73.8019%" y="501" width="0.0799%" height="15" fill="rgb(245,75,50)" fg:x="924" fg:w="1"/><text x="74.0519%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8019%" y="485" width="0.0799%" height="15" fill="rgb(208,174,22)" fg:x="924" fg:w="1"/><text x="74.0519%" y="495.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (286 samples, 22.84%)</title><rect x="51.1182%" y="597" width="22.8435%" height="15" fill="rgb(219,98,50)" fg:x="640" fg:w="286"/><text x="51.3682%" y="607.50">&lt;plugins_rpc::sessions::SessionServi..</text></g><g><title>core::iter::adapters::try_process (270 samples, 21.57%)</title><rect x="52.3962%" y="581" width="21.5655%" height="15" fill="rgb(243,138,3)" fg:x="656" fg:w="270"/><text x="52.6462%" y="591.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (152 samples, 12.14%)</title><rect x="61.8211%" y="565" width="12.1406%" height="15" fill="rgb(243,132,26)" fg:x="774" fg:w="152"/><text x="62.0711%" y="575.50">alloc::vec::in_pla..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (152 samples, 12.14%)</title><rect x="61.8211%" y="549" width="12.1406%" height="15" fill="rgb(250,201,8)" fg:x="774" fg:w="152"/><text x="62.0711%" y="559.50">&lt;core::iter::adapt..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (151 samples, 12.06%)</title><rect x="61.9010%" y="533" width="12.0607%" height="15" fill="rgb(213,91,26)" fg:x="775" fg:w="151"/><text x="62.1510%" y="543.50">plugins_rpc::sessi..</text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="73.8818%" y="517" width="0.0799%" height="15" fill="rgb(229,117,1)" fg:x="925" fg:w="1"/><text x="74.1318%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.9617%" y="597" width="0.0799%" height="15" fill="rgb(229,24,6)" fg:x="926" fg:w="1"/><text x="74.2117%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.9617%" y="581" width="0.0799%" height="15" fill="rgb(206,69,11)" fg:x="926" fg:w="1"/><text x="74.2117%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9617%" y="565" width="0.0799%" height="15" fill="rgb(234,111,34)" fg:x="926" fg:w="1"/><text x="74.2117%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (352 samples, 28.12%)</title><rect x="46.0064%" y="661" width="28.1150%" height="15" fill="rgb(213,187,51)" fg:x="576" fg:w="352"/><text x="46.2564%" y="671.50">&lt;engine::session::Session as kernel::actions:..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (312 samples, 24.92%)</title><rect x="49.2013%" y="645" width="24.9201%" height="15" fill="rgb(207,45,11)" fg:x="616" fg:w="312"/><text x="49.4513%" y="655.50">kernel::plugins::SessionPlugins::have_su..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (312 samples, 24.92%)</title><rect x="49.2013%" y="629" width="24.9201%" height="15" fill="rgb(225,151,47)" fg:x="616" fg:w="312"/><text x="49.4513%" y="639.50">&lt;plugins_dynlib::DynamicPlugin as kernel..</text></g><g><title>plugins_rpc::querying::have_surroundings (288 samples, 23.00%)</title><rect x="51.1182%" y="613" width="23.0032%" height="15" fill="rgb(211,226,5)" fg:x="640" fg:w="288"/><text x="51.3682%" y="623.50">plugins_rpc::querying::have_surround..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.0415%" y="597" width="0.0799%" height="15" fill="rgb(214,83,52)" fg:x="927" fg:w="1"/><text x="74.2915%" y="607.50"></text></g><g><title>&lt;rpc_proto::EntityKey as core::convert::From&lt;kernel::model::base::EntityKey&gt;&gt;::from (1 samples, 0.08%)</title><rect x="74.0415%" y="581" width="0.0799%" height="15" fill="rgb(229,49,53)" fg:x="927" fg:w="1"/><text x="74.2915%" y="591.50"></text></g><g><title>kernel::model::base::&lt;impl core::convert::From&lt;kernel::model::base::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="74.0415%" y="565" width="0.0799%" height="15" fill="rgb(246,8,28)" fg:x="927" fg:w="1"/><text x="74.2915%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.0415%" y="549" width="0.0799%" height="15" fill="rgb(207,28,41)" fg:x="927" fg:w="1"/><text x="74.2915%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.0415%" y="533" width="0.0799%" height="15" fill="rgb(254,22,25)" fg:x="927" fg:w="1"/><text x="74.2915%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.0415%" y="517" width="0.0799%" height="15" fill="rgb(209,120,42)" fg:x="927" fg:w="1"/><text x="74.2915%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.0415%" y="501" width="0.0799%" height="15" fill="rgb(216,194,18)" fg:x="927" fg:w="1"/><text x="74.2915%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="74.1214%" y="645" width="0.1597%" height="15" fill="rgb(213,70,17)" fg:x="928" fg:w="2"/><text x="74.3714%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2013%" y="629" width="0.0799%" height="15" fill="rgb(228,66,19)" fg:x="929" fg:w="1"/><text x="74.4513%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2013%" y="613" width="0.0799%" height="15" fill="rgb(236,221,54)" fg:x="929" fg:w="1"/><text x="74.4513%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.2013%" y="597" width="0.0799%" height="15" fill="rgb(207,175,15)" fg:x="929" fg:w="1"/><text x="74.4513%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.2013%" y="581" width="0.0799%" height="15" fill="rgb(234,76,8)" fg:x="929" fg:w="1"/><text x="74.4513%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.2013%" y="565" width="0.0799%" height="15" fill="rgb(243,106,0)" fg:x="929" fg:w="1"/><text x="74.4513%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.2013%" y="549" width="0.0799%" height="15" fill="rgb(208,48,19)" fg:x="929" fg:w="1"/><text x="74.4513%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.2013%" y="533" width="0.0799%" height="15" fill="rgb(251,50,29)" fg:x="929" fg:w="1"/><text x="74.4513%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.2013%" y="517" width="0.0799%" height="15" fill="rgb(222,31,49)" fg:x="929" fg:w="1"/><text x="74.4513%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.2013%" y="501" width="0.0799%" height="15" fill="rgb(232,33,18)" fg:x="929" fg:w="1"/><text x="74.4513%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.2013%" y="485" width="0.0799%" height="15" fill="rgb(209,1,44)" fg:x="929" fg:w="1"/><text x="74.4513%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.2013%" y="469" width="0.0799%" height="15" fill="rgb(211,7,1)" fg:x="929" fg:w="1"/><text x="74.4513%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2013%" y="453" width="0.0799%" height="15" fill="rgb(224,111,27)" fg:x="929" fg:w="1"/><text x="74.4513%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.5208%" y="549" width="0.0799%" height="15" fill="rgb(252,195,39)" fg:x="933" fg:w="1"/><text x="74.7708%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.5208%" y="533" width="0.0799%" height="15" fill="rgb(237,198,5)" fg:x="933" fg:w="1"/><text x="74.7708%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.5208%" y="517" width="0.0799%" height="15" fill="rgb(232,148,1)" fg:x="933" fg:w="1"/><text x="74.7708%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.5208%" y="501" width="0.0799%" height="15" fill="rgb(249,41,3)" fg:x="933" fg:w="1"/><text x="74.7708%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="74.4409%" y="597" width="0.2396%" height="15" fill="rgb(215,14,33)" fg:x="932" fg:w="3"/><text x="74.6909%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.5208%" y="581" width="0.1597%" height="15" fill="rgb(209,146,24)" fg:x="933" fg:w="2"/><text x="74.7708%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.5208%" y="565" width="0.1597%" height="15" fill="rgb(219,51,47)" fg:x="933" fg:w="2"/><text x="74.7708%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6006%" y="549" width="0.0799%" height="15" fill="rgb(234,217,40)" fg:x="934" fg:w="1"/><text x="74.8506%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6006%" y="533" width="0.0799%" height="15" fill="rgb(228,34,26)" fg:x="934" fg:w="1"/><text x="74.8506%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6006%" y="517" width="0.0799%" height="15" fill="rgb(224,50,29)" fg:x="934" fg:w="1"/><text x="74.8506%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6006%" y="501" width="0.0799%" height="15" fill="rgb(205,79,51)" fg:x="934" fg:w="1"/><text x="74.8506%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.6006%" y="485" width="0.0799%" height="15" fill="rgb(218,136,28)" fg:x="934" fg:w="1"/><text x="74.8506%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6006%" y="469" width="0.0799%" height="15" fill="rgb(220,150,10)" fg:x="934" fg:w="1"/><text x="74.8506%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6006%" y="453" width="0.0799%" height="15" fill="rgb(242,158,47)" fg:x="934" fg:w="1"/><text x="74.8506%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6006%" y="437" width="0.0799%" height="15" fill="rgb(209,68,0)" fg:x="934" fg:w="1"/><text x="74.8506%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6006%" y="421" width="0.0799%" height="15" fill="rgb(208,13,41)" fg:x="934" fg:w="1"/><text x="74.8506%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="74.6805%" y="581" width="0.0799%" height="15" fill="rgb(226,201,7)" fg:x="935" fg:w="1"/><text x="74.9305%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="74.3610%" y="629" width="0.4792%" height="15" fill="rgb(236,103,26)" fg:x="931" fg:w="6"/><text x="74.6110%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="74.3610%" y="613" width="0.4792%" height="15" fill="rgb(243,162,8)" fg:x="931" fg:w="6"/><text x="74.6110%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="74.6805%" y="597" width="0.1597%" height="15" fill="rgb(237,225,11)" fg:x="935" fg:w="2"/><text x="74.9305%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.7604%" y="581" width="0.0799%" height="15" fill="rgb(247,186,32)" fg:x="936" fg:w="1"/><text x="75.0104%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.7604%" y="565" width="0.0799%" height="15" fill="rgb(215,26,28)" fg:x="936" fg:w="1"/><text x="75.0104%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7604%" y="549" width="0.0799%" height="15" fill="rgb(208,121,6)" fg:x="936" fg:w="1"/><text x="75.0104%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7604%" y="533" width="0.0799%" height="15" fill="rgb(225,91,3)" fg:x="936" fg:w="1"/><text x="75.0104%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="74.8403%" y="565" width="0.1597%" height="15" fill="rgb(246,119,36)" fg:x="937" fg:w="2"/><text x="75.0903%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9201%" y="549" width="0.0799%" height="15" fill="rgb(254,173,2)" fg:x="938" fg:w="1"/><text x="75.1701%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0000%" y="533" width="0.0799%" height="15" fill="rgb(209,87,54)" fg:x="939" fg:w="1"/><text x="75.2500%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.0000%" y="517" width="0.0799%" height="15" fill="rgb(223,216,20)" fg:x="939" fg:w="1"/><text x="75.2500%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0799%" y="501" width="0.0799%" height="15" fill="rgb(220,31,8)" fg:x="940" fg:w="1"/><text x="75.3299%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.0799%" y="485" width="0.0799%" height="15" fill="rgb(220,185,15)" fg:x="940" fg:w="1"/><text x="75.3299%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1597%" y="501" width="0.0799%" height="15" fill="rgb(247,190,50)" fg:x="941" fg:w="1"/><text x="75.4097%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1597%" y="485" width="0.0799%" height="15" fill="rgb(239,173,47)" fg:x="941" fg:w="1"/><text x="75.4097%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1597%" y="469" width="0.0799%" height="15" fill="rgb(218,190,42)" fg:x="941" fg:w="1"/><text x="75.4097%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.2396%" y="485" width="0.1597%" height="15" fill="rgb(251,207,16)" fg:x="942" fg:w="2"/><text x="75.4896%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.2396%" y="469" width="0.1597%" height="15" fill="rgb(222,199,47)" fg:x="942" fg:w="2"/><text x="75.4896%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.3195%" y="453" width="0.0799%" height="15" fill="rgb(245,190,7)" fg:x="943" fg:w="1"/><text x="75.5695%" y="463.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="74.8403%" y="613" width="0.6390%" height="15" fill="rgb(239,85,38)" fg:x="937" fg:w="8"/><text x="75.0903%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="74.8403%" y="597" width="0.6390%" height="15" fill="rgb(229,69,51)" fg:x="937" fg:w="8"/><text x="75.0903%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="74.8403%" y="581" width="0.6390%" height="15" fill="rgb(231,104,51)" fg:x="937" fg:w="8"/><text x="75.0903%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="75.0000%" y="565" width="0.4792%" height="15" fill="rgb(235,49,4)" fg:x="939" fg:w="6"/><text x="75.2500%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="75.0000%" y="549" width="0.4792%" height="15" fill="rgb(246,166,20)" fg:x="939" fg:w="6"/><text x="75.2500%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="75.0799%" y="533" width="0.3994%" height="15" fill="rgb(230,119,37)" fg:x="940" fg:w="5"/><text x="75.3299%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="75.0799%" y="517" width="0.3994%" height="15" fill="rgb(234,77,34)" fg:x="940" fg:w="5"/><text x="75.3299%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.2396%" y="501" width="0.2396%" height="15" fill="rgb(211,222,33)" fg:x="942" fg:w="3"/><text x="75.4896%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="75.3994%" y="485" width="0.0799%" height="15" fill="rgb(226,45,42)" fg:x="944" fg:w="1"/><text x="75.6494%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.3994%" y="469" width="0.0799%" height="15" fill="rgb(215,174,28)" fg:x="944" fg:w="1"/><text x="75.6494%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3994%" y="453" width="0.0799%" height="15" fill="rgb(254,173,49)" fg:x="944" fg:w="1"/><text x="75.6494%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.4792%" y="581" width="0.0799%" height="15" fill="rgb(229,191,6)" fg:x="945" fg:w="1"/><text x="75.7292%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4792%" y="565" width="0.0799%" height="15" fill="rgb(212,145,22)" fg:x="945" fg:w="1"/><text x="75.7292%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.6390%" y="549" width="0.0799%" height="15" fill="rgb(226,6,51)" fg:x="947" fg:w="1"/><text x="75.8890%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6390%" y="533" width="0.0799%" height="15" fill="rgb(227,128,8)" fg:x="947" fg:w="1"/><text x="75.8890%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.7188%" y="533" width="0.0799%" height="15" fill="rgb(205,24,10)" fg:x="948" fg:w="1"/><text x="75.9688%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.7188%" y="517" width="0.0799%" height="15" fill="rgb(217,147,27)" fg:x="948" fg:w="1"/><text x="75.9688%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.7188%" y="501" width="0.0799%" height="15" fill="rgb(250,82,42)" fg:x="948" fg:w="1"/><text x="75.9688%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.7188%" y="485" width="0.0799%" height="15" fill="rgb(248,93,17)" fg:x="948" fg:w="1"/><text x="75.9688%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.7188%" y="469" width="0.0799%" height="15" fill="rgb(254,212,40)" fg:x="948" fg:w="1"/><text x="75.9688%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.7188%" y="453" width="0.0799%" height="15" fill="rgb(229,209,2)" fg:x="948" fg:w="1"/><text x="75.9688%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.7188%" y="437" width="0.0799%" height="15" fill="rgb(211,50,43)" fg:x="948" fg:w="1"/><text x="75.9688%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.7188%" y="421" width="0.0799%" height="15" fill="rgb(245,196,29)" fg:x="948" fg:w="1"/><text x="75.9688%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.7188%" y="405" width="0.0799%" height="15" fill="rgb(216,132,13)" fg:x="948" fg:w="1"/><text x="75.9688%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.7188%" y="389" width="0.0799%" height="15" fill="rgb(251,108,21)" fg:x="948" fg:w="1"/><text x="75.9688%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.7987%" y="533" width="0.0799%" height="15" fill="rgb(229,174,54)" fg:x="949" fg:w="1"/><text x="76.0487%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.7987%" y="517" width="0.0799%" height="15" fill="rgb(211,175,47)" fg:x="949" fg:w="1"/><text x="76.0487%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="75.5591%" y="581" width="0.3994%" height="15" fill="rgb(234,5,37)" fg:x="946" fg:w="5"/><text x="75.8091%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="75.5591%" y="565" width="0.3994%" height="15" fill="rgb(244,150,43)" fg:x="946" fg:w="5"/><text x="75.8091%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.7188%" y="549" width="0.2396%" height="15" fill="rgb(242,172,38)" fg:x="948" fg:w="3"/><text x="75.9688%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8786%" y="533" width="0.0799%" height="15" fill="rgb(205,27,8)" fg:x="950" fg:w="1"/><text x="76.1286%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.8786%" y="517" width="0.0799%" height="15" fill="rgb(217,57,3)" fg:x="950" fg:w="1"/><text x="76.1286%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.8786%" y="501" width="0.0799%" height="15" fill="rgb(242,21,38)" fg:x="950" fg:w="1"/><text x="76.1286%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8786%" y="485" width="0.0799%" height="15" fill="rgb(209,64,43)" fg:x="950" fg:w="1"/><text x="76.1286%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.8786%" y="469" width="0.0799%" height="15" fill="rgb(222,2,46)" fg:x="950" fg:w="1"/><text x="76.1286%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.8786%" y="453" width="0.0799%" height="15" fill="rgb(218,19,44)" fg:x="950" fg:w="1"/><text x="76.1286%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8786%" y="437" width="0.0799%" height="15" fill="rgb(240,203,42)" fg:x="950" fg:w="1"/><text x="76.1286%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (15 samples, 1.20%)</title><rect x="74.8403%" y="629" width="1.1981%" height="15" fill="rgb(229,23,45)" fg:x="937" fg:w="15"/><text x="75.0903%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="75.4792%" y="613" width="0.5591%" height="15" fill="rgb(205,228,51)" fg:x="945" fg:w="7"/><text x="75.7292%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="75.4792%" y="597" width="0.5591%" height="15" fill="rgb(239,36,20)" fg:x="945" fg:w="7"/><text x="75.7292%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9585%" y="581" width="0.0799%" height="15" fill="rgb(248,172,27)" fg:x="951" fg:w="1"/><text x="76.2085%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9585%" y="565" width="0.0799%" height="15" fill="rgb(244,55,32)" fg:x="951" fg:w="1"/><text x="76.2085%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.9585%" y="549" width="0.0799%" height="15" fill="rgb(215,97,16)" fg:x="951" fg:w="1"/><text x="76.2085%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.9585%" y="533" width="0.0799%" height="15" fill="rgb(224,80,29)" fg:x="951" fg:w="1"/><text x="76.2085%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.0383%" y="581" width="0.1597%" height="15" fill="rgb(216,93,47)" fg:x="952" fg:w="2"/><text x="76.2883%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.0383%" y="565" width="0.1597%" height="15" fill="rgb(238,159,10)" fg:x="952" fg:w="2"/><text x="76.2883%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.0383%" y="549" width="0.1597%" height="15" fill="rgb(223,98,29)" fg:x="952" fg:w="2"/><text x="76.2883%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="76.0383%" y="533" width="0.1597%" height="15" fill="rgb(210,176,23)" fg:x="952" fg:w="2"/><text x="76.2883%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.1981%" y="549" width="0.0799%" height="15" fill="rgb(242,162,27)" fg:x="954" fg:w="1"/><text x="76.4481%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1981%" y="533" width="0.0799%" height="15" fill="rgb(245,109,32)" fg:x="954" fg:w="1"/><text x="76.4481%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (28 samples, 2.24%)</title><rect x="74.1214%" y="661" width="2.2364%" height="15" fill="rgb(248,87,8)" fg:x="928" fg:w="28"/><text x="74.3714%" y="671.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.08%)</title><rect x="74.2812%" y="645" width="2.0767%" height="15" fill="rgb(250,160,50)" fg:x="930" fg:w="26"/><text x="74.5312%" y="655.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="76.0383%" y="629" width="0.3195%" height="15" fill="rgb(246,165,25)" fg:x="952" fg:w="4"/><text x="76.2883%" y="639.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="76.0383%" y="613" width="0.3195%" height="15" fill="rgb(249,219,3)" fg:x="952" fg:w="4"/><text x="76.2883%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="76.0383%" y="597" width="0.3195%" height="15" fill="rgb(226,66,5)" fg:x="952" fg:w="4"/><text x="76.2883%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.1981%" y="581" width="0.1597%" height="15" fill="rgb(250,220,43)" fg:x="954" fg:w="2"/><text x="76.4481%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.1981%" y="565" width="0.1597%" height="15" fill="rgb(225,111,31)" fg:x="954" fg:w="2"/><text x="76.4481%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2780%" y="549" width="0.0799%" height="15" fill="rgb(248,106,18)" fg:x="955" fg:w="1"/><text x="76.5280%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2780%" y="533" width="0.0799%" height="15" fill="rgb(220,226,45)" fg:x="955" fg:w="1"/><text x="76.5280%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.2780%" y="517" width="0.0799%" height="15" fill="rgb(208,58,53)" fg:x="955" fg:w="1"/><text x="76.5280%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2780%" y="501" width="0.0799%" height="15" fill="rgb(209,133,1)" fg:x="955" fg:w="1"/><text x="76.5280%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2780%" y="485" width="0.0799%" height="15" fill="rgb(228,216,27)" fg:x="955" fg:w="1"/><text x="76.5280%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2780%" y="469" width="0.0799%" height="15" fill="rgb(238,155,2)" fg:x="955" fg:w="1"/><text x="76.5280%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2780%" y="453" width="0.0799%" height="15" fill="rgb(244,99,37)" fg:x="955" fg:w="1"/><text x="76.5280%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2780%" y="437" width="0.0799%" height="15" fill="rgb(254,32,3)" fg:x="955" fg:w="1"/><text x="76.5280%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="76.2780%" y="421" width="0.0799%" height="15" fill="rgb(234,46,50)" fg:x="955" fg:w="1"/><text x="76.5280%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="76.2780%" y="405" width="0.0799%" height="15" fill="rgb(232,118,51)" fg:x="955" fg:w="1"/><text x="76.5280%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.2780%" y="389" width="0.0799%" height="15" fill="rgb(207,24,32)" fg:x="955" fg:w="1"/><text x="76.5280%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3578%" y="485" width="0.0799%" height="15" fill="rgb(208,107,43)" fg:x="956" fg:w="1"/><text x="76.6078%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3578%" y="469" width="0.0799%" height="15" fill="rgb(231,28,9)" fg:x="956" fg:w="1"/><text x="76.6078%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3578%" y="453" width="0.0799%" height="15" fill="rgb(241,204,15)" fg:x="956" fg:w="1"/><text x="76.6078%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3578%" y="437" width="0.0799%" height="15" fill="rgb(214,54,15)" fg:x="956" fg:w="1"/><text x="76.6078%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.3578%" y="421" width="0.0799%" height="15" fill="rgb(230,12,28)" fg:x="956" fg:w="1"/><text x="76.6078%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.3578%" y="405" width="0.0799%" height="15" fill="rgb(221,171,5)" fg:x="956" fg:w="1"/><text x="76.6078%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.3578%" y="389" width="0.0799%" height="15" fill="rgb(207,72,25)" fg:x="956" fg:w="1"/><text x="76.6078%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.3578%" y="373" width="0.0799%" height="15" fill="rgb(249,79,37)" fg:x="956" fg:w="1"/><text x="76.6078%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.3578%" y="357" width="0.0799%" height="15" fill="rgb(209,98,49)" fg:x="956" fg:w="1"/><text x="76.6078%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.3578%" y="341" width="0.0799%" height="15" fill="rgb(221,62,13)" fg:x="956" fg:w="1"/><text x="76.6078%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.3578%" y="325" width="0.0799%" height="15" fill="rgb(223,39,6)" fg:x="956" fg:w="1"/><text x="76.6078%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.3578%" y="309" width="0.0799%" height="15" fill="rgb(246,163,20)" fg:x="956" fg:w="1"/><text x="76.6078%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.3578%" y="293" width="0.0799%" height="15" fill="rgb(211,111,29)" fg:x="956" fg:w="1"/><text x="76.6078%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.3578%" y="533" width="0.1597%" height="15" fill="rgb(243,118,5)" fg:x="956" fg:w="2"/><text x="76.6078%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.3578%" y="517" width="0.1597%" height="15" fill="rgb(240,144,52)" fg:x="956" fg:w="2"/><text x="76.6078%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.3578%" y="501" width="0.1597%" height="15" fill="rgb(244,158,36)" fg:x="956" fg:w="2"/><text x="76.6078%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4377%" y="485" width="0.0799%" height="15" fill="rgb(241,109,37)" fg:x="957" fg:w="1"/><text x="76.6877%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4377%" y="469" width="0.0799%" height="15" fill="rgb(213,95,32)" fg:x="957" fg:w="1"/><text x="76.6877%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.4377%" y="453" width="0.0799%" height="15" fill="rgb(252,193,9)" fg:x="957" fg:w="1"/><text x="76.6877%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.4377%" y="437" width="0.0799%" height="15" fill="rgb(225,213,21)" fg:x="957" fg:w="1"/><text x="76.6877%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.4377%" y="421" width="0.0799%" height="15" fill="rgb(220,172,46)" fg:x="957" fg:w="1"/><text x="76.6877%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.4377%" y="405" width="0.0799%" height="15" fill="rgb(235,75,41)" fg:x="957" fg:w="1"/><text x="76.6877%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.4377%" y="389" width="0.0799%" height="15" fill="rgb(213,86,9)" fg:x="957" fg:w="1"/><text x="76.6877%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.4377%" y="373" width="0.0799%" height="15" fill="rgb(238,127,51)" fg:x="957" fg:w="1"/><text x="76.6877%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.4377%" y="357" width="0.0799%" height="15" fill="rgb(215,2,54)" fg:x="957" fg:w="1"/><text x="76.6877%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.4377%" y="341" width="0.0799%" height="15" fill="rgb(245,80,6)" fg:x="957" fg:w="1"/><text x="76.6877%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.4377%" y="325" width="0.0799%" height="15" fill="rgb(233,106,42)" fg:x="957" fg:w="1"/><text x="76.6877%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4377%" y="309" width="0.0799%" height="15" fill="rgb(244,86,38)" fg:x="957" fg:w="1"/><text x="76.6877%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="76.3578%" y="581" width="0.2396%" height="15" fill="rgb(242,167,7)" fg:x="956" fg:w="3"/><text x="76.6078%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="76.3578%" y="565" width="0.2396%" height="15" fill="rgb(218,216,3)" fg:x="956" fg:w="3"/><text x="76.6078%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.3578%" y="549" width="0.2396%" height="15" fill="rgb(206,136,36)" fg:x="956" fg:w="3"/><text x="76.6078%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5176%" y="533" width="0.0799%" height="15" fill="rgb(206,206,15)" fg:x="958" fg:w="1"/><text x="76.7676%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5176%" y="517" width="0.0799%" height="15" fill="rgb(207,163,34)" fg:x="958" fg:w="1"/><text x="76.7676%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5176%" y="501" width="0.0799%" height="15" fill="rgb(240,127,22)" fg:x="958" fg:w="1"/><text x="76.7676%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5176%" y="485" width="0.0799%" height="15" fill="rgb(227,49,5)" fg:x="958" fg:w="1"/><text x="76.7676%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.5176%" y="469" width="0.0799%" height="15" fill="rgb(231,8,6)" fg:x="958" fg:w="1"/><text x="76.7676%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.6773%" y="533" width="0.0799%" height="15" fill="rgb(223,21,24)" fg:x="960" fg:w="1"/><text x="76.9273%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6773%" y="517" width="0.0799%" height="15" fill="rgb(244,44,52)" fg:x="960" fg:w="1"/><text x="76.9273%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="76.3578%" y="613" width="0.4792%" height="15" fill="rgb(207,73,28)" fg:x="956" fg:w="6"/><text x="76.6078%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="76.3578%" y="597" width="0.4792%" height="15" fill="rgb(234,215,10)" fg:x="956" fg:w="6"/><text x="76.6078%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="76.5974%" y="581" width="0.2396%" height="15" fill="rgb(236,85,3)" fg:x="959" fg:w="3"/><text x="76.8474%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="76.5974%" y="565" width="0.2396%" height="15" fill="rgb(236,102,39)" fg:x="959" fg:w="3"/><text x="76.8474%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.5974%" y="549" width="0.2396%" height="15" fill="rgb(243,50,8)" fg:x="959" fg:w="3"/><text x="76.8474%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7572%" y="533" width="0.0799%" height="15" fill="rgb(207,111,4)" fg:x="961" fg:w="1"/><text x="77.0072%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7572%" y="517" width="0.0799%" height="15" fill="rgb(230,52,42)" fg:x="961" fg:w="1"/><text x="77.0072%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7572%" y="501" width="0.0799%" height="15" fill="rgb(252,178,50)" fg:x="961" fg:w="1"/><text x="77.0072%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7572%" y="485" width="0.0799%" height="15" fill="rgb(234,46,35)" fg:x="961" fg:w="1"/><text x="77.0072%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.7572%" y="469" width="0.0799%" height="15" fill="rgb(228,69,37)" fg:x="961" fg:w="1"/><text x="77.0072%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7572%" y="453" width="0.0799%" height="15" fill="rgb(221,21,11)" fg:x="961" fg:w="1"/><text x="77.0072%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7572%" y="437" width="0.0799%" height="15" fill="rgb(223,56,9)" fg:x="961" fg:w="1"/><text x="77.0072%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7572%" y="421" width="0.0799%" height="15" fill="rgb(234,30,19)" fg:x="961" fg:w="1"/><text x="77.0072%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7572%" y="405" width="0.0799%" height="15" fill="rgb(211,64,54)" fg:x="961" fg:w="1"/><text x="77.0072%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7572%" y="389" width="0.0799%" height="15" fill="rgb(250,189,5)" fg:x="961" fg:w="1"/><text x="77.0072%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.7572%" y="373" width="0.0799%" height="15" fill="rgb(214,180,13)" fg:x="961" fg:w="1"/><text x="77.0072%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="76.8371%" y="517" width="0.1597%" height="15" fill="rgb(238,40,40)" fg:x="962" fg:w="2"/><text x="77.0871%" y="527.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="76.8371%" y="597" width="0.2396%" height="15" fill="rgb(214,101,38)" fg:x="962" fg:w="3"/><text x="77.0871%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="76.8371%" y="581" width="0.2396%" height="15" fill="rgb(242,65,53)" fg:x="962" fg:w="3"/><text x="77.0871%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.8371%" y="565" width="0.2396%" height="15" fill="rgb(230,22,45)" fg:x="962" fg:w="3"/><text x="77.0871%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="76.8371%" y="549" width="0.2396%" height="15" fill="rgb(223,77,1)" fg:x="962" fg:w="3"/><text x="77.0871%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.8371%" y="533" width="0.2396%" height="15" fill="rgb(227,33,37)" fg:x="962" fg:w="3"/><text x="77.0871%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.9968%" y="517" width="0.0799%" height="15" fill="rgb(224,148,39)" fg:x="964" fg:w="1"/><text x="77.2468%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.9968%" y="501" width="0.0799%" height="15" fill="rgb(232,212,39)" fg:x="964" fg:w="1"/><text x="77.2468%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.9968%" y="485" width="0.0799%" height="15" fill="rgb(251,172,7)" fg:x="964" fg:w="1"/><text x="77.2468%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9968%" y="469" width="0.0799%" height="15" fill="rgb(219,39,9)" fg:x="964" fg:w="1"/><text x="77.2468%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="77.2364%" y="485" width="0.1597%" height="15" fill="rgb(228,118,14)" fg:x="967" fg:w="2"/><text x="77.4864%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.2364%" y="469" width="0.1597%" height="15" fill="rgb(207,140,10)" fg:x="967" fg:w="2"/><text x="77.4864%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="77.2364%" y="453" width="0.1597%" height="15" fill="rgb(227,111,53)" fg:x="967" fg:w="2"/><text x="77.4864%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.2364%" y="437" width="0.1597%" height="15" fill="rgb(216,165,16)" fg:x="967" fg:w="2"/><text x="77.4864%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="77.2364%" y="421" width="0.1597%" height="15" fill="rgb(226,111,18)" fg:x="967" fg:w="2"/><text x="77.4864%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="77.2364%" y="405" width="0.1597%" height="15" fill="rgb(251,27,17)" fg:x="967" fg:w="2"/><text x="77.4864%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.3163%" y="389" width="0.0799%" height="15" fill="rgb(254,69,9)" fg:x="968" fg:w="1"/><text x="77.5663%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="77.3163%" y="373" width="0.0799%" height="15" fill="rgb(234,140,37)" fg:x="968" fg:w="1"/><text x="77.5663%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="77.2364%" y="517" width="0.2396%" height="15" fill="rgb(220,93,8)" fg:x="967" fg:w="3"/><text x="77.4864%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.2364%" y="501" width="0.2396%" height="15" fill="rgb(236,113,3)" fg:x="967" fg:w="3"/><text x="77.4864%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="77.3962%" y="485" width="0.0799%" height="15" fill="rgb(234,108,23)" fg:x="969" fg:w="1"/><text x="77.6462%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.4760%" y="485" width="0.0799%" height="15" fill="rgb(205,114,34)" fg:x="970" fg:w="1"/><text x="77.7260%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.5559%" y="469" width="0.0799%" height="15" fill="rgb(236,200,45)" fg:x="971" fg:w="1"/><text x="77.8059%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="77.4760%" y="517" width="0.2396%" height="15" fill="rgb(227,194,29)" fg:x="970" fg:w="3"/><text x="77.7260%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="77.4760%" y="501" width="0.2396%" height="15" fill="rgb(250,76,42)" fg:x="970" fg:w="3"/><text x="77.7260%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="77.5559%" y="485" width="0.1597%" height="15" fill="rgb(208,128,8)" fg:x="971" fg:w="2"/><text x="77.8059%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.6358%" y="469" width="0.0799%" height="15" fill="rgb(229,209,35)" fg:x="972" fg:w="1"/><text x="77.8858%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.6358%" y="453" width="0.0799%" height="15" fill="rgb(215,39,53)" fg:x="972" fg:w="1"/><text x="77.8858%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.7157%" y="357" width="0.1597%" height="15" fill="rgb(219,123,41)" fg:x="973" fg:w="2"/><text x="77.9657%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.7955%" y="341" width="0.0799%" height="15" fill="rgb(212,158,18)" fg:x="974" fg:w="1"/><text x="78.0455%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.7955%" y="325" width="0.0799%" height="15" fill="rgb(234,196,53)" fg:x="974" fg:w="1"/><text x="78.0455%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7955%" y="309" width="0.0799%" height="15" fill="rgb(210,139,12)" fg:x="974" fg:w="1"/><text x="78.0455%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (14 samples, 1.12%)</title><rect x="76.8371%" y="613" width="1.1182%" height="15" fill="rgb(220,116,54)" fg:x="962" fg:w="14"/><text x="77.0871%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="77.0767%" y="597" width="0.8786%" height="15" fill="rgb(247,103,28)" fg:x="965" fg:w="11"/><text x="77.3267%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="77.0767%" y="581" width="0.8786%" height="15" fill="rgb(253,156,45)" fg:x="965" fg:w="11"/><text x="77.3267%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.80%)</title><rect x="77.1565%" y="565" width="0.7987%" height="15" fill="rgb(237,157,52)" fg:x="966" fg:w="10"/><text x="77.4065%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="77.1565%" y="549" width="0.7987%" height="15" fill="rgb(253,112,16)" fg:x="966" fg:w="10"/><text x="77.4065%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="77.2364%" y="533" width="0.7188%" height="15" fill="rgb(234,70,18)" fg:x="967" fg:w="9"/><text x="77.4864%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.7157%" y="517" width="0.2396%" height="15" fill="rgb(247,138,19)" fg:x="973" fg:w="3"/><text x="77.9657%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.7157%" y="501" width="0.2396%" height="15" fill="rgb(207,171,1)" fg:x="973" fg:w="3"/><text x="77.9657%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="77.7157%" y="485" width="0.2396%" height="15" fill="rgb(239,213,3)" fg:x="973" fg:w="3"/><text x="77.9657%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.7157%" y="469" width="0.2396%" height="15" fill="rgb(226,112,4)" fg:x="973" fg:w="3"/><text x="77.9657%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.7157%" y="453" width="0.2396%" height="15" fill="rgb(252,170,12)" fg:x="973" fg:w="3"/><text x="77.9657%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="77.7157%" y="437" width="0.2396%" height="15" fill="rgb(241,106,13)" fg:x="973" fg:w="3"/><text x="77.9657%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.7157%" y="421" width="0.2396%" height="15" fill="rgb(225,73,23)" fg:x="973" fg:w="3"/><text x="77.9657%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.7157%" y="405" width="0.2396%" height="15" fill="rgb(251,227,29)" fg:x="973" fg:w="3"/><text x="77.9657%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="77.7157%" y="389" width="0.2396%" height="15" fill="rgb(237,144,13)" fg:x="973" fg:w="3"/><text x="77.9657%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.7157%" y="373" width="0.2396%" height="15" fill="rgb(232,106,46)" fg:x="973" fg:w="3"/><text x="77.9657%" y="383.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="77.8754%" y="357" width="0.0799%" height="15" fill="rgb(245,154,53)" fg:x="975" fg:w="1"/><text x="78.1254%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.9553%" y="517" width="0.0799%" height="15" fill="rgb(212,119,47)" fg:x="976" fg:w="1"/><text x="78.2053%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.9553%" y="501" width="0.0799%" height="15" fill="rgb(253,135,25)" fg:x="976" fg:w="1"/><text x="78.2053%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.9553%" y="485" width="0.0799%" height="15" fill="rgb(253,208,39)" fg:x="976" fg:w="1"/><text x="78.2053%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.9553%" y="469" width="0.0799%" height="15" fill="rgb(226,64,12)" fg:x="976" fg:w="1"/><text x="78.2053%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.9553%" y="453" width="0.0799%" height="15" fill="rgb(214,162,37)" fg:x="976" fg:w="1"/><text x="78.2053%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.9553%" y="437" width="0.0799%" height="15" fill="rgb(250,104,5)" fg:x="976" fg:w="1"/><text x="78.2053%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="77.9553%" y="421" width="0.0799%" height="15" fill="rgb(220,202,50)" fg:x="976" fg:w="1"/><text x="78.2053%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="77.9553%" y="405" width="0.0799%" height="15" fill="rgb(248,67,38)" fg:x="976" fg:w="1"/><text x="78.2053%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.9553%" y="565" width="0.1597%" height="15" fill="rgb(242,94,35)" fg:x="976" fg:w="2"/><text x="78.2053%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.9553%" y="549" width="0.1597%" height="15" fill="rgb(209,78,37)" fg:x="976" fg:w="2"/><text x="78.2053%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.9553%" y="533" width="0.1597%" height="15" fill="rgb(230,126,47)" fg:x="976" fg:w="2"/><text x="78.2053%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0351%" y="517" width="0.0799%" height="15" fill="rgb(222,110,35)" fg:x="977" fg:w="1"/><text x="78.2851%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.1949%" y="469" width="0.0799%" height="15" fill="rgb(233,154,20)" fg:x="979" fg:w="1"/><text x="78.4449%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1949%" y="453" width="0.0799%" height="15" fill="rgb(223,53,50)" fg:x="979" fg:w="1"/><text x="78.4449%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.2748%" y="453" width="0.0799%" height="15" fill="rgb(251,27,26)" fg:x="980" fg:w="1"/><text x="78.5248%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="78.2748%" y="469" width="0.1597%" height="15" fill="rgb(223,189,16)" fg:x="980" fg:w="2"/><text x="78.5248%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.3546%" y="453" width="0.0799%" height="15" fill="rgb(207,5,54)" fg:x="981" fg:w="1"/><text x="78.6046%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.16%)</title><rect x="76.3578%" y="629" width="2.1565%" height="15" fill="rgb(254,124,50)" fg:x="956" fg:w="27"/><text x="76.6078%" y="639.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="77.9553%" y="613" width="0.5591%" height="15" fill="rgb(253,193,24)" fg:x="976" fg:w="7"/><text x="78.2053%" y="623.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="77.9553%" y="597" width="0.5591%" height="15" fill="rgb(235,170,24)" fg:x="976" fg:w="7"/><text x="78.2053%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="77.9553%" y="581" width="0.5591%" height="15" fill="rgb(222,212,52)" fg:x="976" fg:w="7"/><text x="78.2053%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="78.1150%" y="565" width="0.3994%" height="15" fill="rgb(223,17,45)" fg:x="978" fg:w="5"/><text x="78.3650%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="78.1150%" y="549" width="0.3994%" height="15" fill="rgb(227,103,26)" fg:x="978" fg:w="5"/><text x="78.3650%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="78.1150%" y="533" width="0.3994%" height="15" fill="rgb(251,151,25)" fg:x="978" fg:w="5"/><text x="78.3650%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="78.1150%" y="517" width="0.3994%" height="15" fill="rgb(248,144,29)" fg:x="978" fg:w="5"/><text x="78.3650%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="78.1150%" y="501" width="0.3994%" height="15" fill="rgb(245,97,16)" fg:x="978" fg:w="5"/><text x="78.3650%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="78.1949%" y="485" width="0.3195%" height="15" fill="rgb(220,200,29)" fg:x="979" fg:w="4"/><text x="78.4449%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.4345%" y="469" width="0.0799%" height="15" fill="rgb(206,38,29)" fg:x="982" fg:w="1"/><text x="78.6845%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.4345%" y="453" width="0.0799%" height="15" fill="rgb(245,19,52)" fg:x="982" fg:w="1"/><text x="78.6845%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.4345%" y="437" width="0.0799%" height="15" fill="rgb(205,67,43)" fg:x="982" fg:w="1"/><text x="78.6845%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.4345%" y="421" width="0.0799%" height="15" fill="rgb(217,128,23)" fg:x="982" fg:w="1"/><text x="78.6845%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (28 samples, 2.24%)</title><rect x="76.3578%" y="645" width="2.2364%" height="15" fill="rgb(210,109,28)" fg:x="956" fg:w="28"/><text x="76.6078%" y="655.50">&lt;..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="78.5144%" y="629" width="0.0799%" height="15" fill="rgb(233,181,7)" fg:x="983" fg:w="1"/><text x="78.7644%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5144%" y="613" width="0.0799%" height="15" fill="rgb(244,11,22)" fg:x="983" fg:w="1"/><text x="78.7644%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5144%" y="597" width="0.0799%" height="15" fill="rgb(205,124,54)" fg:x="983" fg:w="1"/><text x="78.7644%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5144%" y="581" width="0.0799%" height="15" fill="rgb(218,21,27)" fg:x="983" fg:w="1"/><text x="78.7644%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.5144%" y="565" width="0.0799%" height="15" fill="rgb(224,153,33)" fg:x="983" fg:w="1"/><text x="78.7644%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.5144%" y="549" width="0.0799%" height="15" fill="rgb(240,219,28)" fg:x="983" fg:w="1"/><text x="78.7644%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.5144%" y="533" width="0.0799%" height="15" fill="rgb(214,80,29)" fg:x="983" fg:w="1"/><text x="78.7644%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="78.5144%" y="517" width="0.0799%" height="15" fill="rgb(247,148,44)" fg:x="983" fg:w="1"/><text x="78.7644%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.5144%" y="501" width="0.0799%" height="15" fill="rgb(243,110,30)" fg:x="983" fg:w="1"/><text x="78.7644%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (29 samples, 2.32%)</title><rect x="76.3578%" y="661" width="2.3163%" height="15" fill="rgb(243,173,41)" fg:x="956" fg:w="29"/><text x="76.6078%" y="671.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.5942%" y="645" width="0.0799%" height="15" fill="rgb(225,160,47)" fg:x="984" fg:w="1"/><text x="78.8442%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.5942%" y="629" width="0.0799%" height="15" fill="rgb(215,44,21)" fg:x="984" fg:w="1"/><text x="78.8442%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.5942%" y="613" width="0.0799%" height="15" fill="rgb(248,90,3)" fg:x="984" fg:w="1"/><text x="78.8442%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5942%" y="597" width="0.0799%" height="15" fill="rgb(220,196,49)" fg:x="984" fg:w="1"/><text x="78.8442%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5942%" y="581" width="0.0799%" height="15" fill="rgb(217,138,14)" fg:x="984" fg:w="1"/><text x="78.8442%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5942%" y="565" width="0.0799%" height="15" fill="rgb(219,111,20)" fg:x="984" fg:w="1"/><text x="78.8442%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.5942%" y="549" width="0.0799%" height="15" fill="rgb(218,114,4)" fg:x="984" fg:w="1"/><text x="78.8442%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5942%" y="533" width="0.0799%" height="15" fill="rgb(238,133,3)" fg:x="984" fg:w="1"/><text x="78.8442%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5942%" y="517" width="0.0799%" height="15" fill="rgb(224,95,0)" fg:x="984" fg:w="1"/><text x="78.8442%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5942%" y="501" width="0.0799%" height="15" fill="rgb(220,169,35)" fg:x="984" fg:w="1"/><text x="78.8442%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.5942%" y="485" width="0.0799%" height="15" fill="rgb(242,116,47)" fg:x="984" fg:w="1"/><text x="78.8442%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5942%" y="469" width="0.0799%" height="15" fill="rgb(251,42,20)" fg:x="984" fg:w="1"/><text x="78.8442%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5942%" y="453" width="0.0799%" height="15" fill="rgb(234,7,34)" fg:x="984" fg:w="1"/><text x="78.8442%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5942%" y="437" width="0.0799%" height="15" fill="rgb(243,208,13)" fg:x="984" fg:w="1"/><text x="78.8442%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="78.5942%" y="421" width="0.0799%" height="15" fill="rgb(227,33,28)" fg:x="984" fg:w="1"/><text x="78.8442%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.5942%" y="405" width="0.0799%" height="15" fill="rgb(250,47,37)" fg:x="984" fg:w="1"/><text x="78.8442%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.5942%" y="389" width="0.0799%" height="15" fill="rgb(235,111,52)" fg:x="984" fg:w="1"/><text x="78.8442%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.5942%" y="373" width="0.0799%" height="15" fill="rgb(223,64,28)" fg:x="984" fg:w="1"/><text x="78.8442%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.5942%" y="357" width="0.0799%" height="15" fill="rgb(236,67,22)" fg:x="984" fg:w="1"/><text x="78.8442%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.5942%" y="341" width="0.0799%" height="15" fill="rgb(243,79,24)" fg:x="984" fg:w="1"/><text x="78.8442%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.5942%" y="325" width="0.0799%" height="15" fill="rgb(241,225,22)" fg:x="984" fg:w="1"/><text x="78.8442%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.5942%" y="309" width="0.0799%" height="15" fill="rgb(228,214,26)" fg:x="984" fg:w="1"/><text x="78.8442%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.5942%" y="293" width="0.0799%" height="15" fill="rgb(219,84,52)" fg:x="984" fg:w="1"/><text x="78.8442%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.5942%" y="277" width="0.0799%" height="15" fill="rgb(220,12,22)" fg:x="984" fg:w="1"/><text x="78.8442%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.5942%" y="261" width="0.0799%" height="15" fill="rgb(219,9,49)" fg:x="984" fg:w="1"/><text x="78.8442%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.5942%" y="245" width="0.0799%" height="15" fill="rgb(237,40,43)" fg:x="984" fg:w="1"/><text x="78.8442%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="78.5942%" y="229" width="0.0799%" height="15" fill="rgb(212,189,32)" fg:x="984" fg:w="1"/><text x="78.8442%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="78.5942%" y="213" width="0.0799%" height="15" fill="rgb(247,48,9)" fg:x="984" fg:w="1"/><text x="78.8442%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="78.5942%" y="197" width="0.0799%" height="15" fill="rgb(247,112,3)" fg:x="984" fg:w="1"/><text x="78.8442%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.5942%" y="181" width="0.0799%" height="15" fill="rgb(243,110,18)" fg:x="984" fg:w="1"/><text x="78.8442%" y="191.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.6741%" y="629" width="0.0799%" height="15" fill="rgb(233,223,44)" fg:x="985" fg:w="1"/><text x="78.9241%" y="639.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.6741%" y="613" width="0.0799%" height="15" fill="rgb(245,160,20)" fg:x="985" fg:w="1"/><text x="78.9241%" y="623.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="78.6741%" y="661" width="0.1597%" height="15" fill="rgb(225,37,1)" fg:x="985" fg:w="2"/><text x="78.9241%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="78.6741%" y="645" width="0.1597%" height="15" fill="rgb(253,227,39)" fg:x="985" fg:w="2"/><text x="78.9241%" y="655.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.7540%" y="629" width="0.0799%" height="15" fill="rgb(240,179,26)" fg:x="986" fg:w="1"/><text x="79.0040%" y="639.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.7540%" y="613" width="0.0799%" height="15" fill="rgb(237,212,23)" fg:x="986" fg:w="1"/><text x="79.0040%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="78.7540%" y="597" width="0.0799%" height="15" fill="rgb(221,38,11)" fg:x="986" fg:w="1"/><text x="79.0040%" y="607.50"></text></g><g><title>alloc::rc::rcbox_layout_for_value_layout (1 samples, 0.08%)</title><rect x="78.8339%" y="661" width="0.0799%" height="15" fill="rgb(215,85,6)" fg:x="987" fg:w="1"/><text x="79.0839%" y="671.50"></text></g><g><title>core::alloc::layout::Layout::extend (1 samples, 0.08%)</title><rect x="78.8339%" y="645" width="0.0799%" height="15" fill="rgb(239,64,14)" fg:x="987" fg:w="1"/><text x="79.0839%" y="655.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="78.8339%" y="629" width="0.0799%" height="15" fill="rgb(215,150,32)" fg:x="987" fg:w="1"/><text x="79.0839%" y="639.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="78.8339%" y="613" width="0.0799%" height="15" fill="rgb(238,15,13)" fg:x="987" fg:w="1"/><text x="79.0839%" y="623.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="78.8339%" y="597" width="0.0799%" height="15" fill="rgb(251,87,8)" fg:x="987" fg:w="1"/><text x="79.0839%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9137%" y="613" width="0.0799%" height="15" fill="rgb(206,86,1)" fg:x="988" fg:w="1"/><text x="79.1637%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9137%" y="597" width="0.0799%" height="15" fill="rgb(208,151,45)" fg:x="988" fg:w="1"/><text x="79.1637%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9137%" y="581" width="0.0799%" height="15" fill="rgb(231,181,24)" fg:x="988" fg:w="1"/><text x="79.1637%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9137%" y="565" width="0.0799%" height="15" fill="rgb(240,106,29)" fg:x="988" fg:w="1"/><text x="79.1637%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9137%" y="549" width="0.0799%" height="15" fill="rgb(227,166,11)" fg:x="988" fg:w="1"/><text x="79.1637%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.9137%" y="533" width="0.0799%" height="15" fill="rgb(254,14,34)" fg:x="988" fg:w="1"/><text x="79.1637%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.9137%" y="517" width="0.0799%" height="15" fill="rgb(223,222,6)" fg:x="988" fg:w="1"/><text x="79.1637%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.9137%" y="501" width="0.0799%" height="15" fill="rgb(245,69,24)" fg:x="988" fg:w="1"/><text x="79.1637%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.9137%" y="485" width="0.0799%" height="15" fill="rgb(213,193,7)" fg:x="988" fg:w="1"/><text x="79.1637%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.9137%" y="469" width="0.0799%" height="15" fill="rgb(237,92,51)" fg:x="988" fg:w="1"/><text x="79.1637%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.9137%" y="453" width="0.0799%" height="15" fill="rgb(225,194,6)" fg:x="988" fg:w="1"/><text x="79.1637%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.9137%" y="437" width="0.0799%" height="15" fill="rgb(205,159,49)" fg:x="988" fg:w="1"/><text x="79.1637%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.9137%" y="421" width="0.0799%" height="15" fill="rgb(219,69,2)" fg:x="988" fg:w="1"/><text x="79.1637%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.9137%" y="405" width="0.0799%" height="15" fill="rgb(215,107,24)" fg:x="988" fg:w="1"/><text x="79.1637%" y="415.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="78.9137%" y="661" width="0.1597%" height="15" fill="rgb(249,208,29)" fg:x="988" fg:w="2"/><text x="79.1637%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="78.9137%" y="645" width="0.1597%" height="15" fill="rgb(213,147,10)" fg:x="988" fg:w="2"/><text x="79.1637%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.9137%" y="629" width="0.1597%" height="15" fill="rgb(254,140,42)" fg:x="988" fg:w="2"/><text x="79.1637%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.9936%" y="613" width="0.0799%" height="15" fill="rgb(249,9,15)" fg:x="989" fg:w="1"/><text x="79.2436%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9936%" y="597" width="0.0799%" height="15" fill="rgb(210,19,33)" fg:x="989" fg:w="1"/><text x="79.2436%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.9936%" y="581" width="0.0799%" height="15" fill="rgb(241,121,22)" fg:x="989" fg:w="1"/><text x="79.2436%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9936%" y="565" width="0.0799%" height="15" fill="rgb(244,69,52)" fg:x="989" fg:w="1"/><text x="79.2436%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.9936%" y="549" width="0.0799%" height="15" fill="rgb(244,191,54)" fg:x="989" fg:w="1"/><text x="79.2436%" y="559.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (416 samples, 33.23%)</title><rect x="45.9265%" y="677" width="33.2268%" height="15" fill="rgb(250,3,53)" fg:x="575" fg:w="416"/><text x="46.1765%" y="687.50">engine::session::Session::evaluate_and_perform</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="79.0735%" y="661" width="0.0799%" height="15" fill="rgb(205,77,3)" fg:x="990" fg:w="1"/><text x="79.3235%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.0735%" y="645" width="0.0799%" height="15" fill="rgb(207,155,3)" fg:x="990" fg:w="1"/><text x="79.3235%" y="655.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="79.0735%" y="629" width="0.0799%" height="15" fill="rgb(224,79,2)" fg:x="990" fg:w="1"/><text x="79.3235%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="79.0735%" y="613" width="0.0799%" height="15" fill="rgb(243,172,5)" fg:x="990" fg:w="1"/><text x="79.3235%" y="623.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="79.0735%" y="597" width="0.0799%" height="15" fill="rgb(217,23,43)" fg:x="990" fg:w="1"/><text x="79.3235%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="79.0735%" y="581" width="0.0799%" height="15" fill="rgb(223,109,20)" fg:x="990" fg:w="1"/><text x="79.3235%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="79.0735%" y="565" width="0.0799%" height="15" fill="rgb(232,159,21)" fg:x="990" fg:w="1"/><text x="79.3235%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="79.0735%" y="549" width="0.0799%" height="15" fill="rgb(219,58,2)" fg:x="990" fg:w="1"/><text x="79.3235%" y="559.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="79.0735%" y="533" width="0.0799%" height="15" fill="rgb(241,56,8)" fg:x="990" fg:w="1"/><text x="79.3235%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (992 samples, 79.23%)</title><rect x="0.0000%" y="725" width="79.2332%" height="15" fill="rgb(249,10,27)" fg:x="0" fg:w="992"/><text x="0.2500%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (992 samples, 79.23%)</title><rect x="0.0000%" y="709" width="79.2332%" height="15" fill="rgb(248,177,5)" fg:x="0" fg:w="992"/><text x="0.2500%" y="719.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (992 samples, 79.23%)</title><rect x="0.0000%" y="693" width="79.2332%" height="15" fill="rgb(239,12,30)" fg:x="0" fg:w="992"/><text x="0.2500%" y="703.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="79.1534%" y="677" width="0.0799%" height="15" fill="rgb(229,164,25)" fg:x="991" fg:w="1"/><text x="79.4034%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.1534%" y="661" width="0.0799%" height="15" fill="rgb(231,217,50)" fg:x="991" fg:w="1"/><text x="79.4034%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2332%" y="629" width="0.0799%" height="15" fill="rgb(247,99,32)" fg:x="992" fg:w="1"/><text x="79.4832%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.3930%" y="549" width="0.0799%" height="15" fill="rgb(240,74,50)" fg:x="994" fg:w="1"/><text x="79.6430%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.4728%" y="549" width="0.0799%" height="15" fill="rgb(218,54,8)" fg:x="995" fg:w="1"/><text x="79.7228%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4728%" y="533" width="0.0799%" height="15" fill="rgb(227,132,20)" fg:x="995" fg:w="1"/><text x="79.7228%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.3131%" y="613" width="0.4792%" height="15" fill="rgb(232,134,12)" fg:x="993" fg:w="6"/><text x="79.5631%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.3131%" y="597" width="0.4792%" height="15" fill="rgb(250,129,18)" fg:x="993" fg:w="6"/><text x="79.5631%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.3131%" y="581" width="0.4792%" height="15" fill="rgb(232,129,47)" fg:x="993" fg:w="6"/><text x="79.5631%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="79.3131%" y="565" width="0.4792%" height="15" fill="rgb(230,31,40)" fg:x="993" fg:w="6"/><text x="79.5631%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.5527%" y="549" width="0.2396%" height="15" fill="rgb(232,126,10)" fg:x="996" fg:w="3"/><text x="79.8027%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.6326%" y="533" width="0.1597%" height="15" fill="rgb(205,46,31)" fg:x="997" fg:w="2"/><text x="79.8826%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.6326%" y="517" width="0.1597%" height="15" fill="rgb(232,37,37)" fg:x="997" fg:w="2"/><text x="79.8826%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="79.2332%" y="677" width="0.6390%" height="15" fill="rgb(240,91,16)" fg:x="992" fg:w="8"/><text x="79.4832%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (8 samples, 0.64%)</title><rect x="79.2332%" y="661" width="0.6390%" height="15" fill="rgb(224,160,9)" fg:x="992" fg:w="8"/><text x="79.4832%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="79.2332%" y="645" width="0.6390%" height="15" fill="rgb(215,116,14)" fg:x="992" fg:w="8"/><text x="79.4832%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (7 samples, 0.56%)</title><rect x="79.3131%" y="629" width="0.5591%" height="15" fill="rgb(235,46,36)" fg:x="993" fg:w="7"/><text x="79.5631%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7923%" y="613" width="0.0799%" height="15" fill="rgb(238,39,28)" fg:x="999" fg:w="1"/><text x="80.0423%" y="623.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="79.8722%" y="645" width="0.0799%" height="15" fill="rgb(242,125,29)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8722%" y="629" width="0.0799%" height="15" fill="rgb(238,211,30)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="639.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="79.9521%" y="581" width="0.1597%" height="15" fill="rgb(227,201,28)" fg:x="1001" fg:w="2"/><text x="80.2021%" y="591.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="79.9521%" y="565" width="0.1597%" height="15" fill="rgb(238,77,29)" fg:x="1001" fg:w="2"/><text x="80.2021%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.56%)</title><rect x="79.9521%" y="629" width="0.5591%" height="15" fill="rgb(213,221,40)" fg:x="1001" fg:w="7"/><text x="80.2021%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.56%)</title><rect x="79.9521%" y="613" width="0.5591%" height="15" fill="rgb(226,220,44)" fg:x="1001" fg:w="7"/><text x="80.2021%" y="623.50"></text></g><g><title>libloading::os::unix::Library::open (7 samples, 0.56%)</title><rect x="79.9521%" y="597" width="0.5591%" height="15" fill="rgb(228,90,23)" fg:x="1001" fg:w="7"/><text x="80.2021%" y="607.50"></text></g><g><title>dlopen (5 samples, 0.40%)</title><rect x="80.1118%" y="581" width="0.3994%" height="15" fill="rgb(235,72,29)" fg:x="1003" fg:w="5"/><text x="80.3618%" y="591.50"></text></g><g><title>_dl_catch_error (5 samples, 0.40%)</title><rect x="80.1118%" y="565" width="0.3994%" height="15" fill="rgb(248,117,39)" fg:x="1003" fg:w="5"/><text x="80.3618%" y="575.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="80.1118%" y="549" width="0.3994%" height="15" fill="rgb(225,43,28)" fg:x="1003" fg:w="5"/><text x="80.3618%" y="559.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="80.1118%" y="533" width="0.3994%" height="15" fill="rgb(240,93,4)" fg:x="1003" fg:w="5"/><text x="80.3618%" y="543.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="80.1118%" y="517" width="0.3994%" height="15" fill="rgb(234,178,27)" fg:x="1003" fg:w="5"/><text x="80.3618%" y="527.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (9 samples, 0.72%)</title><rect x="79.8722%" y="677" width="0.7188%" height="15" fill="rgb(254,88,22)" fg:x="1000" fg:w="9"/><text x="80.1222%" y="687.50"></text></g><g><title>engine::session::Session::new (9 samples, 0.72%)</title><rect x="79.8722%" y="661" width="0.7188%" height="15" fill="rgb(240,206,50)" fg:x="1000" fg:w="9"/><text x="80.1222%" y="671.50"></text></g><g><title>engine::session::Session::initialize (8 samples, 0.64%)</title><rect x="79.9521%" y="645" width="0.6390%" height="15" fill="rgb(249,103,8)" fg:x="1001" fg:w="8"/><text x="80.2021%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="80.5112%" y="629" width="0.0799%" height="15" fill="rgb(241,178,36)" fg:x="1008" fg:w="1"/><text x="80.7612%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="80.5112%" y="613" width="0.0799%" height="15" fill="rgb(246,110,15)" fg:x="1008" fg:w="1"/><text x="80.7612%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.5112%" y="597" width="0.0799%" height="15" fill="rgb(207,14,43)" fg:x="1008" fg:w="1"/><text x="80.7612%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.5112%" y="581" width="0.0799%" height="15" fill="rgb(253,219,19)" fg:x="1008" fg:w="1"/><text x="80.7612%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.5112%" y="565" width="0.0799%" height="15" fill="rgb(216,126,5)" fg:x="1008" fg:w="1"/><text x="80.7612%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.5112%" y="549" width="0.0799%" height="15" fill="rgb(218,78,42)" fg:x="1008" fg:w="1"/><text x="80.7612%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.5911%" y="661" width="0.0799%" height="15" fill="rgb(215,154,40)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.5911%" y="645" width="0.0799%" height="15" fill="rgb(235,129,32)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.5911%" y="629" width="0.0799%" height="15" fill="rgb(218,51,8)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.5911%" y="613" width="0.0799%" height="15" fill="rgb(245,48,4)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.5911%" y="597" width="0.0799%" height="15" fill="rgb(250,175,12)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.5911%" y="581" width="0.0799%" height="15" fill="rgb(237,95,40)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.5911%" y="565" width="0.0799%" height="15" fill="rgb(244,120,0)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.5911%" y="549" width="0.0799%" height="15" fill="rgb(241,19,42)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.5911%" y="533" width="0.0799%" height="15" fill="rgb(217,174,48)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.5911%" y="517" width="0.0799%" height="15" fill="rgb(239,36,38)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.5911%" y="501" width="0.0799%" height="15" fill="rgb(220,63,49)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.5911%" y="485" width="0.0799%" height="15" fill="rgb(240,101,13)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5911%" y="469" width="0.0799%" height="15" fill="rgb(209,184,51)" fg:x="1009" fg:w="1"/><text x="80.8411%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="80.6709%" y="645" width="0.0799%" height="15" fill="rgb(206,136,39)" fg:x="1010" fg:w="1"/><text x="80.9209%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.6709%" y="629" width="0.0799%" height="15" fill="rgb(254,47,45)" fg:x="1010" fg:w="1"/><text x="80.9209%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.7508%" y="581" width="0.0799%" height="15" fill="rgb(252,103,20)" fg:x="1011" fg:w="1"/><text x="81.0008%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.7508%" y="565" width="0.0799%" height="15" fill="rgb(230,69,12)" fg:x="1011" fg:w="1"/><text x="81.0008%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.7508%" y="549" width="0.0799%" height="15" fill="rgb(219,2,28)" fg:x="1011" fg:w="1"/><text x="81.0008%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.7508%" y="533" width="0.0799%" height="15" fill="rgb(210,9,12)" fg:x="1011" fg:w="1"/><text x="81.0008%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.7508%" y="517" width="0.0799%" height="15" fill="rgb(235,99,33)" fg:x="1011" fg:w="1"/><text x="81.0008%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="80.7508%" y="501" width="0.0799%" height="15" fill="rgb(230,11,38)" fg:x="1011" fg:w="1"/><text x="81.0008%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="80.7508%" y="485" width="0.0799%" height="15" fill="rgb(217,129,0)" fg:x="1011" fg:w="1"/><text x="81.0008%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.8307%" y="533" width="0.1597%" height="15" fill="rgb(222,198,4)" fg:x="1012" fg:w="2"/><text x="81.0807%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9105%" y="517" width="0.0799%" height="15" fill="rgb(246,170,27)" fg:x="1013" fg:w="1"/><text x="81.1605%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.9904%" y="501" width="0.0799%" height="15" fill="rgb(229,17,28)" fg:x="1014" fg:w="1"/><text x="81.2404%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.8307%" y="549" width="0.3195%" height="15" fill="rgb(233,198,48)" fg:x="1012" fg:w="4"/><text x="81.0807%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.9904%" y="533" width="0.1597%" height="15" fill="rgb(238,103,23)" fg:x="1014" fg:w="2"/><text x="81.2404%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.9904%" y="517" width="0.1597%" height="15" fill="rgb(206,91,41)" fg:x="1014" fg:w="2"/><text x="81.2404%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0703%" y="501" width="0.0799%" height="15" fill="rgb(227,34,25)" fg:x="1015" fg:w="1"/><text x="81.3203%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0703%" y="485" width="0.0799%" height="15" fill="rgb(210,110,44)" fg:x="1015" fg:w="1"/><text x="81.3203%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.0703%" y="469" width="0.0799%" height="15" fill="rgb(216,189,8)" fg:x="1015" fg:w="1"/><text x="81.3203%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.48%)</title><rect x="80.8307%" y="581" width="0.4792%" height="15" fill="rgb(234,9,46)" fg:x="1012" fg:w="6"/><text x="81.0807%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="80.8307%" y="565" width="0.4792%" height="15" fill="rgb(251,200,5)" fg:x="1012" fg:w="6"/><text x="81.0807%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.1502%" y="549" width="0.1597%" height="15" fill="rgb(238,165,37)" fg:x="1016" fg:w="2"/><text x="81.4002%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.2300%" y="533" width="0.0799%" height="15" fill="rgb(232,77,38)" fg:x="1017" fg:w="1"/><text x="81.4800%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.2300%" y="517" width="0.0799%" height="15" fill="rgb(253,179,33)" fg:x="1017" fg:w="1"/><text x="81.4800%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.2300%" y="501" width="0.0799%" height="15" fill="rgb(240,13,35)" fg:x="1017" fg:w="1"/><text x="81.4800%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.2300%" y="485" width="0.0799%" height="15" fill="rgb(242,150,49)" fg:x="1017" fg:w="1"/><text x="81.4800%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3099%" y="549" width="0.0799%" height="15" fill="rgb(237,176,28)" fg:x="1018" fg:w="1"/><text x="81.5599%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.3099%" y="581" width="0.1597%" height="15" fill="rgb(214,176,33)" fg:x="1018" fg:w="2"/><text x="81.5599%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="81.3099%" y="565" width="0.1597%" height="15" fill="rgb(214,25,12)" fg:x="1018" fg:w="2"/><text x="81.5599%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3898%" y="549" width="0.0799%" height="15" fill="rgb(238,190,20)" fg:x="1019" fg:w="1"/><text x="81.6398%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3898%" y="533" width="0.0799%" height="15" fill="rgb(208,11,19)" fg:x="1019" fg:w="1"/><text x="81.6398%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4696%" y="533" width="0.0799%" height="15" fill="rgb(239,90,4)" fg:x="1020" fg:w="1"/><text x="81.7196%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5495%" y="533" width="0.0799%" height="15" fill="rgb(248,110,3)" fg:x="1021" fg:w="1"/><text x="81.7995%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5495%" y="517" width="0.0799%" height="15" fill="rgb(210,41,30)" fg:x="1021" fg:w="1"/><text x="81.7995%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.5495%" y="501" width="0.0799%" height="15" fill="rgb(239,36,8)" fg:x="1021" fg:w="1"/><text x="81.7995%" y="511.50"></text></g><g><title>engine::session::Session::flush (13 samples, 1.04%)</title><rect x="80.6709%" y="661" width="1.0383%" height="15" fill="rgb(237,201,47)" fg:x="1010" fg:w="13"/><text x="80.9209%" y="671.50"></text></g><g><title>engine::session::state::State::close (12 samples, 0.96%)</title><rect x="80.7508%" y="645" width="0.9585%" height="15" fill="rgb(224,140,29)" fg:x="1011" fg:w="12"/><text x="81.0008%" y="655.50"></text></g><g><title>engine::session::state::State::flush_entities (12 samples, 0.96%)</title><rect x="80.7508%" y="629" width="0.9585%" height="15" fill="rgb(231,209,17)" fg:x="1011" fg:w="12"/><text x="81.0008%" y="639.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (12 samples, 0.96%)</title><rect x="80.7508%" y="613" width="0.9585%" height="15" fill="rgb(249,196,1)" fg:x="1011" fg:w="12"/><text x="81.0008%" y="623.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (12 samples, 0.96%)</title><rect x="80.7508%" y="597" width="0.9585%" height="15" fill="rgb(223,207,51)" fg:x="1011" fg:w="12"/><text x="81.0008%" y="607.50"></text></g><g><title>kernel::model::any_entity_changes (3 samples, 0.24%)</title><rect x="81.4696%" y="581" width="0.2396%" height="15" fill="rgb(210,14,40)" fg:x="1020" fg:w="3"/><text x="81.7196%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="81.4696%" y="565" width="0.2396%" height="15" fill="rgb(250,20,52)" fg:x="1020" fg:w="3"/><text x="81.7196%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="81.4696%" y="549" width="0.2396%" height="15" fill="rgb(241,46,11)" fg:x="1020" fg:w="3"/><text x="81.7196%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6294%" y="533" width="0.0799%" height="15" fill="rgb(219,105,5)" fg:x="1022" fg:w="1"/><text x="81.8794%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.6294%" y="517" width="0.0799%" height="15" fill="rgb(252,77,35)" fg:x="1022" fg:w="1"/><text x="81.8794%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.6294%" y="501" width="0.0799%" height="15" fill="rgb(243,119,2)" fg:x="1022" fg:w="1"/><text x="81.8794%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.7093%" y="629" width="0.0799%" height="15" fill="rgb(206,82,28)" fg:x="1023" fg:w="1"/><text x="81.9593%" y="639.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="81.7093%" y="613" width="0.0799%" height="15" fill="rgb(227,120,12)" fg:x="1023" fg:w="1"/><text x="81.9593%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7093%" y="597" width="0.0799%" height="15" fill="rgb(229,134,41)" fg:x="1023" fg:w="1"/><text x="81.9593%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7093%" y="581" width="0.0799%" height="15" fill="rgb(239,96,32)" fg:x="1023" fg:w="1"/><text x="81.9593%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="81.7093%" y="565" width="0.0799%" height="15" fill="rgb(225,46,27)" fg:x="1023" fg:w="1"/><text x="81.9593%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7093%" y="549" width="0.0799%" height="15" fill="rgb(215,168,2)" fg:x="1023" fg:w="1"/><text x="81.9593%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="81.7093%" y="645" width="0.1597%" height="15" fill="rgb(207,170,52)" fg:x="1023" fg:w="2"/><text x="81.9593%" y="655.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="81.7891%" y="629" width="0.0799%" height="15" fill="rgb(237,198,36)" fg:x="1024" fg:w="1"/><text x="82.0391%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="81.8690%" y="629" width="0.0799%" height="15" fill="rgb(213,27,14)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="81.8690%" y="613" width="0.0799%" height="15" fill="rgb(218,77,5)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.8690%" y="597" width="0.0799%" height="15" fill="rgb(230,219,39)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.8690%" y="581" width="0.0799%" height="15" fill="rgb(245,177,7)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.8690%" y="565" width="0.0799%" height="15" fill="rgb(246,44,46)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8690%" y="549" width="0.0799%" height="15" fill="rgb(207,173,15)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8690%" y="533" width="0.0799%" height="15" fill="rgb(245,170,50)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8690%" y="517" width="0.0799%" height="15" fill="rgb(233,156,21)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8690%" y="501" width="0.0799%" height="15" fill="rgb(253,146,27)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.8690%" y="485" width="0.0799%" height="15" fill="rgb(247,66,29)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8690%" y="469" width="0.0799%" height="15" fill="rgb(218,207,26)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8690%" y="453" width="0.0799%" height="15" fill="rgb(234,93,26)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8690%" y="437" width="0.0799%" height="15" fill="rgb(214,75,48)" fg:x="1025" fg:w="1"/><text x="82.1190%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.9489%" y="629" width="0.0799%" height="15" fill="rgb(229,119,22)" fg:x="1026" fg:w="1"/><text x="82.1989%" y="639.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="81.9489%" y="613" width="0.0799%" height="15" fill="rgb(226,153,19)" fg:x="1026" fg:w="1"/><text x="82.1989%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.9489%" y="597" width="0.0799%" height="15" fill="rgb(220,204,36)" fg:x="1026" fg:w="1"/><text x="82.1989%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9489%" y="581" width="0.0799%" height="15" fill="rgb(253,181,43)" fg:x="1026" fg:w="1"/><text x="82.1989%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.0288%" y="533" width="0.1597%" height="15" fill="rgb(211,41,51)" fg:x="1027" fg:w="2"/><text x="82.2788%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.0288%" y="517" width="0.1597%" height="15" fill="rgb(207,215,0)" fg:x="1027" fg:w="2"/><text x="82.2788%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.0288%" y="501" width="0.1597%" height="15" fill="rgb(212,153,10)" fg:x="1027" fg:w="2"/><text x="82.2788%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1086%" y="485" width="0.0799%" height="15" fill="rgb(251,171,36)" fg:x="1028" fg:w="1"/><text x="82.3586%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1086%" y="469" width="0.0799%" height="15" fill="rgb(225,219,41)" fg:x="1028" fg:w="1"/><text x="82.3586%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="81.7093%" y="661" width="0.5591%" height="15" fill="rgb(208,200,1)" fg:x="1023" fg:w="7"/><text x="81.9593%" y="671.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="81.8690%" y="645" width="0.3994%" height="15" fill="rgb(206,75,47)" fg:x="1025" fg:w="5"/><text x="82.1190%" y="655.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="82.0288%" y="629" width="0.2396%" height="15" fill="rgb(248,3,16)" fg:x="1027" fg:w="3"/><text x="82.2788%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="82.0288%" y="613" width="0.2396%" height="15" fill="rgb(242,157,36)" fg:x="1027" fg:w="3"/><text x="82.2788%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="82.0288%" y="597" width="0.2396%" height="15" fill="rgb(215,175,11)" fg:x="1027" fg:w="3"/><text x="82.2788%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="82.0288%" y="581" width="0.2396%" height="15" fill="rgb(252,222,22)" fg:x="1027" fg:w="3"/><text x="82.2788%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="82.0288%" y="565" width="0.2396%" height="15" fill="rgb(250,121,35)" fg:x="1027" fg:w="3"/><text x="82.2788%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.0288%" y="549" width="0.2396%" height="15" fill="rgb(233,120,49)" fg:x="1027" fg:w="3"/><text x="82.2788%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1885%" y="533" width="0.0799%" height="15" fill="rgb(205,201,14)" fg:x="1029" fg:w="1"/><text x="82.4385%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1885%" y="517" width="0.0799%" height="15" fill="rgb(219,58,45)" fg:x="1029" fg:w="1"/><text x="82.4385%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1885%" y="501" width="0.0799%" height="15" fill="rgb(251,65,12)" fg:x="1029" fg:w="1"/><text x="82.4385%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1885%" y="485" width="0.0799%" height="15" fill="rgb(224,47,31)" fg:x="1029" fg:w="1"/><text x="82.4385%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.1885%" y="469" width="0.0799%" height="15" fill="rgb(233,74,26)" fg:x="1029" fg:w="1"/><text x="82.4385%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1885%" y="453" width="0.0799%" height="15" fill="rgb(231,211,31)" fg:x="1029" fg:w="1"/><text x="82.4385%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1885%" y="437" width="0.0799%" height="15" fill="rgb(239,167,5)" fg:x="1029" fg:w="1"/><text x="82.4385%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.1885%" y="421" width="0.0799%" height="15" fill="rgb(241,85,0)" fg:x="1029" fg:w="1"/><text x="82.4385%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="82.2684%" y="629" width="0.0799%" height="15" fill="rgb(229,130,21)" fg:x="1030" fg:w="1"/><text x="82.5184%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="82.2684%" y="613" width="0.0799%" height="15" fill="rgb(254,84,49)" fg:x="1030" fg:w="1"/><text x="82.5184%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.2684%" y="597" width="0.0799%" height="15" fill="rgb(235,85,21)" fg:x="1030" fg:w="1"/><text x="82.5184%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.2684%" y="581" width="0.0799%" height="15" fill="rgb(246,128,52)" fg:x="1030" fg:w="1"/><text x="82.5184%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.2684%" y="565" width="0.0799%" height="15" fill="rgb(243,114,49)" fg:x="1030" fg:w="1"/><text x="82.5184%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.2684%" y="549" width="0.0799%" height="15" fill="rgb(240,224,22)" fg:x="1030" fg:w="1"/><text x="82.5184%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3482%" y="549" width="0.0799%" height="15" fill="rgb(247,201,52)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3482%" y="533" width="0.0799%" height="15" fill="rgb(231,70,45)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3482%" y="517" width="0.0799%" height="15" fill="rgb(217,215,20)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3482%" y="501" width="0.0799%" height="15" fill="rgb(226,170,30)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3482%" y="485" width="0.0799%" height="15" fill="rgb(220,190,43)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3482%" y="469" width="0.0799%" height="15" fill="rgb(218,20,18)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3482%" y="453" width="0.0799%" height="15" fill="rgb(245,37,26)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3482%" y="437" width="0.0799%" height="15" fill="rgb(241,127,29)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3482%" y="421" width="0.0799%" height="15" fill="rgb(241,33,26)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3482%" y="405" width="0.0799%" height="15" fill="rgb(220,106,21)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3482%" y="389" width="0.0799%" height="15" fill="rgb(225,125,35)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3482%" y="373" width="0.0799%" height="15" fill="rgb(248,80,22)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3482%" y="357" width="0.0799%" height="15" fill="rgb(231,117,39)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3482%" y="341" width="0.0799%" height="15" fill="rgb(239,183,16)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3482%" y="325" width="0.0799%" height="15" fill="rgb(221,61,19)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3482%" y="309" width="0.0799%" height="15" fill="rgb(239,196,44)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="319.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="82.2684%" y="661" width="0.2396%" height="15" fill="rgb(206,113,19)" fg:x="1030" fg:w="3"/><text x="82.5184%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="82.2684%" y="645" width="0.2396%" height="15" fill="rgb(245,114,12)" fg:x="1030" fg:w="3"/><text x="82.5184%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.3482%" y="629" width="0.1597%" height="15" fill="rgb(247,89,39)" fg:x="1031" fg:w="2"/><text x="82.5982%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="82.3482%" y="613" width="0.1597%" height="15" fill="rgb(213,85,14)" fg:x="1031" fg:w="2"/><text x="82.5982%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="82.3482%" y="597" width="0.1597%" height="15" fill="rgb(249,206,33)" fg:x="1031" fg:w="2"/><text x="82.5982%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.3482%" y="581" width="0.1597%" height="15" fill="rgb(235,167,47)" fg:x="1031" fg:w="2"/><text x="82.5982%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.3482%" y="565" width="0.1597%" height="15" fill="rgb(217,177,16)" fg:x="1031" fg:w="2"/><text x="82.5982%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4281%" y="549" width="0.0799%" height="15" fill="rgb(250,228,29)" fg:x="1032" fg:w="1"/><text x="82.6781%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4281%" y="533" width="0.0799%" height="15" fill="rgb(216,195,42)" fg:x="1032" fg:w="1"/><text x="82.6781%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4281%" y="517" width="0.0799%" height="15" fill="rgb(232,192,32)" fg:x="1032" fg:w="1"/><text x="82.6781%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4281%" y="501" width="0.0799%" height="15" fill="rgb(211,8,47)" fg:x="1032" fg:w="1"/><text x="82.6781%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.4281%" y="485" width="0.0799%" height="15" fill="rgb(251,201,9)" fg:x="1032" fg:w="1"/><text x="82.6781%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4281%" y="469" width="0.0799%" height="15" fill="rgb(206,185,47)" fg:x="1032" fg:w="1"/><text x="82.6781%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4281%" y="453" width="0.0799%" height="15" fill="rgb(245,54,32)" fg:x="1032" fg:w="1"/><text x="82.6781%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4281%" y="437" width="0.0799%" height="15" fill="rgb(208,1,8)" fg:x="1032" fg:w="1"/><text x="82.6781%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="82.5080%" y="565" width="0.0799%" height="15" fill="rgb(228,57,24)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.5080%" y="549" width="0.0799%" height="15" fill="rgb(251,24,8)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.5080%" y="533" width="0.0799%" height="15" fill="rgb(236,196,50)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.5080%" y="517" width="0.0799%" height="15" fill="rgb(246,222,29)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.5080%" y="501" width="0.0799%" height="15" fill="rgb(211,34,40)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.5080%" y="485" width="0.0799%" height="15" fill="rgb(210,66,51)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.5080%" y="469" width="0.0799%" height="15" fill="rgb(250,56,43)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.5080%" y="453" width="0.0799%" height="15" fill="rgb(240,111,50)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.5080%" y="437" width="0.0799%" height="15" fill="rgb(209,117,13)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.5080%" y="421" width="0.0799%" height="15" fill="rgb(232,164,45)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.5080%" y="405" width="0.0799%" height="15" fill="rgb(205,69,32)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="82.5080%" y="389" width="0.0799%" height="15" fill="rgb(240,147,45)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.5080%" y="373" width="0.0799%" height="15" fill="rgb(221,94,48)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.5080%" y="357" width="0.0799%" height="15" fill="rgb(249,209,17)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.5080%" y="341" width="0.0799%" height="15" fill="rgb(228,57,28)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.5080%" y="325" width="0.0799%" height="15" fill="rgb(250,133,26)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.5080%" y="309" width="0.0799%" height="15" fill="rgb(254,15,16)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="82.5080%" y="293" width="0.0799%" height="15" fill="rgb(209,147,42)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="82.5080%" y="277" width="0.0799%" height="15" fill="rgb(208,5,29)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="287.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="82.5080%" y="597" width="0.1597%" height="15" fill="rgb(250,73,31)" fg:x="1033" fg:w="2"/><text x="82.7580%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="82.5080%" y="581" width="0.1597%" height="15" fill="rgb(238,45,10)" fg:x="1033" fg:w="2"/><text x="82.7580%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.5879%" y="565" width="0.0799%" height="15" fill="rgb(214,104,5)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.5879%" y="549" width="0.0799%" height="15" fill="rgb(242,217,19)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.5879%" y="533" width="0.0799%" height="15" fill="rgb(246,113,27)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.5879%" y="517" width="0.0799%" height="15" fill="rgb(221,34,27)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5879%" y="501" width="0.0799%" height="15" fill="rgb(246,109,6)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.5879%" y="485" width="0.0799%" height="15" fill="rgb(217,12,25)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5879%" y="469" width="0.0799%" height="15" fill="rgb(250,195,5)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.5879%" y="453" width="0.0799%" height="15" fill="rgb(244,140,45)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5879%" y="437" width="0.0799%" height="15" fill="rgb(230,64,14)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.5879%" y="421" width="0.0799%" height="15" fill="rgb(206,27,27)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.5879%" y="405" width="0.0799%" height="15" fill="rgb(230,14,50)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="82.6677%" y="565" width="0.0799%" height="15" fill="rgb(237,172,14)" fg:x="1035" fg:w="1"/><text x="82.9177%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="82.6677%" y="549" width="0.0799%" height="15" fill="rgb(209,25,21)" fg:x="1035" fg:w="1"/><text x="82.9177%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6677%" y="533" width="0.0799%" height="15" fill="rgb(248,148,22)" fg:x="1035" fg:w="1"/><text x="82.9177%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="82.5080%" y="645" width="0.3195%" height="15" fill="rgb(234,100,22)" fg:x="1033" fg:w="4"/><text x="82.7580%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="82.5080%" y="629" width="0.3195%" height="15" fill="rgb(210,20,30)" fg:x="1033" fg:w="4"/><text x="82.7580%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="82.5080%" y="613" width="0.3195%" height="15" fill="rgb(232,58,0)" fg:x="1033" fg:w="4"/><text x="82.7580%" y="623.50"></text></g><g><title>plugins_core::build::Build::leads_to (2 samples, 0.16%)</title><rect x="82.6677%" y="597" width="0.1597%" height="15" fill="rgb(221,68,13)" fg:x="1035" fg:w="2"/><text x="82.9177%" y="607.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="82.6677%" y="581" width="0.1597%" height="15" fill="rgb(231,194,11)" fg:x="1035" fg:w="2"/><text x="82.9177%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="82.7476%" y="565" width="0.0799%" height="15" fill="rgb(235,51,41)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="82.7476%" y="549" width="0.0799%" height="15" fill="rgb(240,50,32)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.7476%" y="533" width="0.0799%" height="15" fill="rgb(240,185,36)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.7476%" y="517" width="0.0799%" height="15" fill="rgb(211,168,15)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.7476%" y="501" width="0.0799%" height="15" fill="rgb(221,70,0)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7476%" y="485" width="0.0799%" height="15" fill="rgb(205,21,33)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7476%" y="469" width="0.0799%" height="15" fill="rgb(225,106,10)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7476%" y="453" width="0.0799%" height="15" fill="rgb(236,200,50)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7476%" y="437" width="0.0799%" height="15" fill="rgb(249,93,23)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.7476%" y="421" width="0.0799%" height="15" fill="rgb(244,115,35)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.7476%" y="405" width="0.0799%" height="15" fill="rgb(231,129,47)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.7476%" y="389" width="0.0799%" height="15" fill="rgb(225,160,50)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7476%" y="373" width="0.0799%" height="15" fill="rgb(218,135,23)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7476%" y="357" width="0.0799%" height="15" fill="rgb(227,119,14)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.7476%" y="341" width="0.0799%" height="15" fill="rgb(242,138,13)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.7476%" y="325" width="0.0799%" height="15" fill="rgb(215,11,16)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.7476%" y="309" width="0.0799%" height="15" fill="rgb(234,170,50)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.7476%" y="293" width="0.0799%" height="15" fill="rgb(233,34,20)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7476%" y="277" width="0.0799%" height="15" fill="rgb(237,100,45)" fg:x="1036" fg:w="1"/><text x="82.9976%" y="287.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="82.8275%" y="629" width="0.0799%" height="15" fill="rgb(231,184,36)" fg:x="1037" fg:w="1"/><text x="83.0775%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.9073%" y="533" width="0.0799%" height="15" fill="rgb(252,93,2)" fg:x="1038" fg:w="1"/><text x="83.1573%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.9073%" y="517" width="0.0799%" height="15" fill="rgb(248,176,47)" fg:x="1038" fg:w="1"/><text x="83.1573%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.0671%" y="501" width="0.0799%" height="15" fill="rgb(249,125,23)" fg:x="1040" fg:w="1"/><text x="83.3171%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.1470%" y="501" width="0.1597%" height="15" fill="rgb(239,67,42)" fg:x="1041" fg:w="2"/><text x="83.3970%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.2268%" y="485" width="0.0799%" height="15" fill="rgb(244,162,4)" fg:x="1042" fg:w="1"/><text x="83.4768%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.3067%" y="453" width="0.1597%" height="15" fill="rgb(214,150,38)" fg:x="1043" fg:w="2"/><text x="83.5567%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.3067%" y="437" width="0.1597%" height="15" fill="rgb(228,211,28)" fg:x="1043" fg:w="2"/><text x="83.5567%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.3067%" y="421" width="0.1597%" height="15" fill="rgb(212,98,48)" fg:x="1043" fg:w="2"/><text x="83.5567%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="83.3067%" y="405" width="0.1597%" height="15" fill="rgb(213,45,13)" fg:x="1043" fg:w="2"/><text x="83.5567%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.3866%" y="389" width="0.0799%" height="15" fill="rgb(218,35,29)" fg:x="1044" fg:w="1"/><text x="83.6366%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.3866%" y="373" width="0.0799%" height="15" fill="rgb(244,13,3)" fg:x="1044" fg:w="1"/><text x="83.6366%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.3866%" y="357" width="0.0799%" height="15" fill="rgb(235,170,19)" fg:x="1044" fg:w="1"/><text x="83.6366%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4665%" y="453" width="0.0799%" height="15" fill="rgb(233,193,43)" fg:x="1045" fg:w="1"/><text x="83.7165%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4665%" y="437" width="0.0799%" height="15" fill="rgb(228,223,20)" fg:x="1045" fg:w="1"/><text x="83.7165%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="83.0671%" y="517" width="0.6390%" height="15" fill="rgb(208,85,54)" fg:x="1040" fg:w="8"/><text x="83.3171%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="83.3067%" y="501" width="0.3994%" height="15" fill="rgb(254,14,45)" fg:x="1043" fg:w="5"/><text x="83.5567%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="83.3067%" y="485" width="0.3994%" height="15" fill="rgb(247,99,29)" fg:x="1043" fg:w="5"/><text x="83.5567%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="83.3067%" y="469" width="0.3994%" height="15" fill="rgb(225,180,54)" fg:x="1043" fg:w="5"/><text x="83.5567%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.5463%" y="453" width="0.1597%" height="15" fill="rgb(239,88,43)" fg:x="1046" fg:w="2"/><text x="83.7963%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.5463%" y="437" width="0.1597%" height="15" fill="rgb(209,47,11)" fg:x="1046" fg:w="2"/><text x="83.7963%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.6262%" y="421" width="0.0799%" height="15" fill="rgb(219,179,23)" fg:x="1047" fg:w="1"/><text x="83.8762%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="82.9073%" y="549" width="0.8786%" height="15" fill="rgb(213,183,19)" fg:x="1038" fg:w="11"/><text x="83.1573%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="82.9872%" y="533" width="0.7987%" height="15" fill="rgb(210,11,9)" fg:x="1039" fg:w="10"/><text x="83.2372%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.7061%" y="517" width="0.0799%" height="15" fill="rgb(239,194,16)" fg:x="1048" fg:w="1"/><text x="83.9561%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.7859%" y="485" width="0.0799%" height="15" fill="rgb(246,23,50)" fg:x="1049" fg:w="1"/><text x="84.0359%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="83.8658%" y="469" width="0.0799%" height="15" fill="rgb(245,10,41)" fg:x="1050" fg:w="1"/><text x="84.1158%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.8658%" y="453" width="0.0799%" height="15" fill="rgb(228,43,24)" fg:x="1050" fg:w="1"/><text x="84.1158%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.8658%" y="437" width="0.0799%" height="15" fill="rgb(220,151,0)" fg:x="1050" fg:w="1"/><text x="84.1158%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8658%" y="421" width="0.0799%" height="15" fill="rgb(232,219,10)" fg:x="1050" fg:w="1"/><text x="84.1158%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.7859%" y="549" width="0.2396%" height="15" fill="rgb(227,217,48)" fg:x="1049" fg:w="3"/><text x="84.0359%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="83.7859%" y="533" width="0.2396%" height="15" fill="rgb(210,66,35)" fg:x="1049" fg:w="3"/><text x="84.0359%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.7859%" y="517" width="0.2396%" height="15" fill="rgb(254,6,7)" fg:x="1049" fg:w="3"/><text x="84.0359%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.7859%" y="501" width="0.2396%" height="15" fill="rgb(235,222,42)" fg:x="1049" fg:w="3"/><text x="84.0359%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="83.8658%" y="485" width="0.1597%" height="15" fill="rgb(245,126,5)" fg:x="1050" fg:w="2"/><text x="84.1158%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9457%" y="469" width="0.0799%" height="15" fill="rgb(215,73,17)" fg:x="1051" fg:w="1"/><text x="84.1957%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.0256%" y="453" width="0.0799%" height="15" fill="rgb(219,198,52)" fg:x="1052" fg:w="1"/><text x="84.2756%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0256%" y="437" width="0.0799%" height="15" fill="rgb(217,159,18)" fg:x="1052" fg:w="1"/><text x="84.2756%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.0256%" y="421" width="0.0799%" height="15" fill="rgb(212,177,18)" fg:x="1052" fg:w="1"/><text x="84.2756%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.1054%" y="421" width="0.1597%" height="15" fill="rgb(241,10,11)" fg:x="1053" fg:w="2"/><text x="84.3554%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1853%" y="405" width="0.0799%" height="15" fill="rgb(232,114,35)" fg:x="1054" fg:w="1"/><text x="84.4353%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.1853%" y="389" width="0.0799%" height="15" fill="rgb(238,222,8)" fg:x="1054" fg:w="1"/><text x="84.4353%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2652%" y="389" width="0.0799%" height="15" fill="rgb(251,153,44)" fg:x="1055" fg:w="1"/><text x="84.5152%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2652%" y="373" width="0.0799%" height="15" fill="rgb(210,140,51)" fg:x="1055" fg:w="1"/><text x="84.5152%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2652%" y="357" width="0.0799%" height="15" fill="rgb(222,63,0)" fg:x="1055" fg:w="1"/><text x="84.5152%" y="367.50"></text></g><g><title>engine::session::Session::flush (20 samples, 1.60%)</title><rect x="82.8275%" y="645" width="1.5974%" height="15" fill="rgb(240,18,40)" fg:x="1037" fg:w="20"/><text x="83.0775%" y="655.50"></text></g><g><title>engine::session::Session::save_changes (19 samples, 1.52%)</title><rect x="82.9073%" y="629" width="1.5176%" height="15" fill="rgb(237,88,16)" fg:x="1038" fg:w="19"/><text x="83.1573%" y="639.50"></text></g><g><title>engine::session::state::State::close (19 samples, 1.52%)</title><rect x="82.9073%" y="613" width="1.5176%" height="15" fill="rgb(251,117,13)" fg:x="1038" fg:w="19"/><text x="83.1573%" y="623.50"></text></g><g><title>engine::session::state::State::flush_entities (19 samples, 1.52%)</title><rect x="82.9073%" y="597" width="1.5176%" height="15" fill="rgb(251,228,8)" fg:x="1038" fg:w="19"/><text x="83.1573%" y="607.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (19 samples, 1.52%)</title><rect x="82.9073%" y="581" width="1.5176%" height="15" fill="rgb(205,107,49)" fg:x="1038" fg:w="19"/><text x="83.1573%" y="591.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (19 samples, 1.52%)</title><rect x="82.9073%" y="565" width="1.5176%" height="15" fill="rgb(238,72,41)" fg:x="1038" fg:w="19"/><text x="83.1573%" y="575.50"></text></g><g><title>kernel::model::any_entity_changes (5 samples, 0.40%)</title><rect x="84.0256%" y="549" width="0.3994%" height="15" fill="rgb(248,183,52)" fg:x="1052" fg:w="5"/><text x="84.2756%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="84.0256%" y="533" width="0.3994%" height="15" fill="rgb(215,58,20)" fg:x="1052" fg:w="5"/><text x="84.2756%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="84.0256%" y="517" width="0.3994%" height="15" fill="rgb(209,49,13)" fg:x="1052" fg:w="5"/><text x="84.2756%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="84.0256%" y="501" width="0.3994%" height="15" fill="rgb(208,113,17)" fg:x="1052" fg:w="5"/><text x="84.2756%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="84.0256%" y="485" width="0.3994%" height="15" fill="rgb(208,14,22)" fg:x="1052" fg:w="5"/><text x="84.2756%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="84.0256%" y="469" width="0.3994%" height="15" fill="rgb(222,95,2)" fg:x="1052" fg:w="5"/><text x="84.2756%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="84.1054%" y="453" width="0.3195%" height="15" fill="rgb(253,180,37)" fg:x="1053" fg:w="4"/><text x="84.3554%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="84.1054%" y="437" width="0.3195%" height="15" fill="rgb(250,81,33)" fg:x="1053" fg:w="4"/><text x="84.3554%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.2652%" y="421" width="0.1597%" height="15" fill="rgb(251,151,41)" fg:x="1055" fg:w="2"/><text x="84.5152%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.2652%" y="405" width="0.1597%" height="15" fill="rgb(210,135,17)" fg:x="1055" fg:w="2"/><text x="84.5152%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3450%" y="389" width="0.0799%" height="15" fill="rgb(239,21,29)" fg:x="1056" fg:w="1"/><text x="84.5950%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.3450%" y="373" width="0.0799%" height="15" fill="rgb(231,215,16)" fg:x="1056" fg:w="1"/><text x="84.5950%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3450%" y="357" width="0.0799%" height="15" fill="rgb(239,151,54)" fg:x="1056" fg:w="1"/><text x="84.5950%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.3450%" y="341" width="0.0799%" height="15" fill="rgb(222,122,38)" fg:x="1056" fg:w="1"/><text x="84.5950%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.4249%" y="613" width="0.0799%" height="15" fill="rgb(243,128,1)" fg:x="1057" fg:w="1"/><text x="84.6749%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.4249%" y="597" width="0.0799%" height="15" fill="rgb(225,74,21)" fg:x="1057" fg:w="1"/><text x="84.6749%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="84.4249%" y="629" width="0.2396%" height="15" fill="rgb(216,210,10)" fg:x="1057" fg:w="3"/><text x="84.6749%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="84.5048%" y="613" width="0.1597%" height="15" fill="rgb(228,76,19)" fg:x="1058" fg:w="2"/><text x="84.7548%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="84.5048%" y="597" width="0.1597%" height="15" fill="rgb(236,80,34)" fg:x="1058" fg:w="2"/><text x="84.7548%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.5847%" y="581" width="0.0799%" height="15" fill="rgb(225,173,23)" fg:x="1059" fg:w="1"/><text x="84.8347%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.5847%" y="565" width="0.0799%" height="15" fill="rgb(253,38,1)" fg:x="1059" fg:w="1"/><text x="84.8347%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.5847%" y="549" width="0.0799%" height="15" fill="rgb(206,155,35)" fg:x="1059" fg:w="1"/><text x="84.8347%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5847%" y="533" width="0.0799%" height="15" fill="rgb(254,27,53)" fg:x="1059" fg:w="1"/><text x="84.8347%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5847%" y="517" width="0.0799%" height="15" fill="rgb(225,52,41)" fg:x="1059" fg:w="1"/><text x="84.8347%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5847%" y="501" width="0.0799%" height="15" fill="rgb(244,53,18)" fg:x="1059" fg:w="1"/><text x="84.8347%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5847%" y="485" width="0.0799%" height="15" fill="rgb(254,206,48)" fg:x="1059" fg:w="1"/><text x="84.8347%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5847%" y="469" width="0.0799%" height="15" fill="rgb(236,182,23)" fg:x="1059" fg:w="1"/><text x="84.8347%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.6645%" y="581" width="0.0799%" height="15" fill="rgb(236,191,37)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.6645%" y="565" width="0.0799%" height="15" fill="rgb(245,53,8)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.6645%" y="549" width="0.0799%" height="15" fill="rgb(245,147,9)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6645%" y="533" width="0.0799%" height="15" fill="rgb(218,24,48)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6645%" y="517" width="0.0799%" height="15" fill="rgb(254,23,9)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6645%" y="501" width="0.0799%" height="15" fill="rgb(244,105,9)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6645%" y="485" width="0.0799%" height="15" fill="rgb(212,142,22)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6645%" y="469" width="0.0799%" height="15" fill="rgb(221,114,49)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6645%" y="453" width="0.0799%" height="15" fill="rgb(223,210,25)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.6645%" y="437" width="0.0799%" height="15" fill="rgb(235,162,44)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.6645%" y="421" width="0.0799%" height="15" fill="rgb(237,65,45)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.6645%" y="405" width="0.0799%" height="15" fill="rgb(208,79,9)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6645%" y="389" width="0.0799%" height="15" fill="rgb(215,228,8)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6645%" y="373" width="0.0799%" height="15" fill="rgb(205,185,17)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.6645%" y="357" width="0.0799%" height="15" fill="rgb(213,62,36)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.6645%" y="341" width="0.0799%" height="15" fill="rgb(209,34,9)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.6645%" y="325" width="0.0799%" height="15" fill="rgb(246,151,27)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.6645%" y="309" width="0.0799%" height="15" fill="rgb(218,206,3)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6645%" y="293" width="0.0799%" height="15" fill="rgb(242,202,1)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7444%" y="533" width="0.0799%" height="15" fill="rgb(227,185,16)" fg:x="1061" fg:w="1"/><text x="84.9944%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7444%" y="517" width="0.0799%" height="15" fill="rgb(241,1,14)" fg:x="1061" fg:w="1"/><text x="84.9944%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7444%" y="501" width="0.0799%" height="15" fill="rgb(212,113,25)" fg:x="1061" fg:w="1"/><text x="84.9944%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7444%" y="485" width="0.0799%" height="15" fill="rgb(247,37,43)" fg:x="1061" fg:w="1"/><text x="84.9944%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="84.6645%" y="613" width="0.2396%" height="15" fill="rgb(226,54,8)" fg:x="1060" fg:w="3"/><text x="84.9145%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="84.6645%" y="597" width="0.2396%" height="15" fill="rgb(251,205,25)" fg:x="1060" fg:w="3"/><text x="84.9145%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.7444%" y="581" width="0.1597%" height="15" fill="rgb(246,87,35)" fg:x="1061" fg:w="2"/><text x="84.9944%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.7444%" y="565" width="0.1597%" height="15" fill="rgb(251,145,46)" fg:x="1061" fg:w="2"/><text x="84.9944%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.7444%" y="549" width="0.1597%" height="15" fill="rgb(210,210,33)" fg:x="1061" fg:w="2"/><text x="84.9944%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8243%" y="533" width="0.0799%" height="15" fill="rgb(221,151,11)" fg:x="1062" fg:w="1"/><text x="85.0743%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8243%" y="517" width="0.0799%" height="15" fill="rgb(208,160,28)" fg:x="1062" fg:w="1"/><text x="85.0743%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8243%" y="501" width="0.0799%" height="15" fill="rgb(243,69,29)" fg:x="1062" fg:w="1"/><text x="85.0743%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8243%" y="485" width="0.0799%" height="15" fill="rgb(224,144,4)" fg:x="1062" fg:w="1"/><text x="85.0743%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.8243%" y="469" width="0.0799%" height="15" fill="rgb(211,140,38)" fg:x="1062" fg:w="1"/><text x="85.0743%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8243%" y="453" width="0.0799%" height="15" fill="rgb(252,189,15)" fg:x="1062" fg:w="1"/><text x="85.0743%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8243%" y="437" width="0.0799%" height="15" fill="rgb(251,175,23)" fg:x="1062" fg:w="1"/><text x="85.0743%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8243%" y="421" width="0.0799%" height="15" fill="rgb(212,184,11)" fg:x="1062" fg:w="1"/><text x="85.0743%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="84.9042%" y="613" width="0.0799%" height="15" fill="rgb(217,205,6)" fg:x="1063" fg:w="1"/><text x="85.1542%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="84.9840%" y="597" width="0.0799%" height="15" fill="rgb(235,45,45)" fg:x="1064" fg:w="1"/><text x="85.2340%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0639%" y="517" width="0.0799%" height="15" fill="rgb(211,157,53)" fg:x="1065" fg:w="1"/><text x="85.3139%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0639%" y="501" width="0.0799%" height="15" fill="rgb(212,13,8)" fg:x="1065" fg:w="1"/><text x="85.3139%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0639%" y="485" width="0.0799%" height="15" fill="rgb(218,80,36)" fg:x="1065" fg:w="1"/><text x="85.3139%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (10 samples, 0.80%)</title><rect x="84.4249%" y="645" width="0.7987%" height="15" fill="rgb(211,123,43)" fg:x="1057" fg:w="10"/><text x="84.6749%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="84.6645%" y="629" width="0.5591%" height="15" fill="rgb(206,165,2)" fg:x="1060" fg:w="7"/><text x="84.9145%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="84.9840%" y="613" width="0.2396%" height="15" fill="rgb(248,63,35)" fg:x="1064" fg:w="3"/><text x="85.2340%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="85.0639%" y="597" width="0.1597%" height="15" fill="rgb(219,133,41)" fg:x="1065" fg:w="2"/><text x="85.3139%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="85.0639%" y="581" width="0.1597%" height="15" fill="rgb(206,175,46)" fg:x="1065" fg:w="2"/><text x="85.3139%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.0639%" y="565" width="0.1597%" height="15" fill="rgb(224,41,35)" fg:x="1065" fg:w="2"/><text x="85.3139%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.0639%" y="549" width="0.1597%" height="15" fill="rgb(226,113,24)" fg:x="1065" fg:w="2"/><text x="85.3139%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.0639%" y="533" width="0.1597%" height="15" fill="rgb(219,51,41)" fg:x="1065" fg:w="2"/><text x="85.3139%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1438%" y="517" width="0.0799%" height="15" fill="rgb(220,145,47)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1438%" y="501" width="0.0799%" height="15" fill="rgb(239,121,47)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1438%" y="485" width="0.0799%" height="15" fill="rgb(207,60,40)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1438%" y="469" width="0.0799%" height="15" fill="rgb(224,229,11)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.1438%" y="453" width="0.0799%" height="15" fill="rgb(252,28,32)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1438%" y="437" width="0.0799%" height="15" fill="rgb(207,52,49)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.1438%" y="421" width="0.0799%" height="15" fill="rgb(243,51,50)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1438%" y="405" width="0.0799%" height="15" fill="rgb(212,92,21)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="415.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="85.2236%" y="645" width="0.0799%" height="15" fill="rgb(230,183,50)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="85.2236%" y="629" width="0.0799%" height="15" fill="rgb(225,48,9)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.2236%" y="613" width="0.0799%" height="15" fill="rgb(254,44,4)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.2236%" y="597" width="0.0799%" height="15" fill="rgb(252,128,37)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2236%" y="581" width="0.0799%" height="15" fill="rgb(227,178,8)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2236%" y="565" width="0.0799%" height="15" fill="rgb(205,206,32)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2236%" y="549" width="0.0799%" height="15" fill="rgb(220,218,22)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2236%" y="533" width="0.0799%" height="15" fill="rgb(236,41,28)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.2236%" y="517" width="0.0799%" height="15" fill="rgb(219,37,7)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2236%" y="501" width="0.0799%" height="15" fill="rgb(206,160,15)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2236%" y="485" width="0.0799%" height="15" fill="rgb(208,82,21)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2236%" y="469" width="0.0799%" height="15" fill="rgb(226,130,25)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2236%" y="453" width="0.0799%" height="15" fill="rgb(212,72,24)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2236%" y="437" width="0.0799%" height="15" fill="rgb(206,28,16)" fg:x="1067" fg:w="1"/><text x="85.4736%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (37 samples, 2.96%)</title><rect x="82.5080%" y="661" width="2.9553%" height="15" fill="rgb(249,41,5)" fg:x="1033" fg:w="37"/><text x="82.7580%" y="671.50">plu..</text></g><g><title>plugins_core::build::Build::occupying (2 samples, 0.16%)</title><rect x="85.3035%" y="645" width="0.1597%" height="15" fill="rgb(233,96,48)" fg:x="1068" fg:w="2"/><text x="85.5535%" y="655.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="85.3834%" y="629" width="0.0799%" height="15" fill="rgb(240,198,11)" fg:x="1069" fg:w="1"/><text x="85.6334%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.3834%" y="613" width="0.0799%" height="15" fill="rgb(209,175,35)" fg:x="1069" fg:w="1"/><text x="85.6334%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="85.4633%" y="613" width="0.0799%" height="15" fill="rgb(214,40,51)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="85.4633%" y="597" width="0.0799%" height="15" fill="rgb(252,56,4)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.4633%" y="581" width="0.0799%" height="15" fill="rgb(219,131,5)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.4633%" y="565" width="0.0799%" height="15" fill="rgb(223,67,53)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.4633%" y="549" width="0.0799%" height="15" fill="rgb(227,154,8)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.4633%" y="533" width="0.0799%" height="15" fill="rgb(216,174,51)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.4633%" y="517" width="0.0799%" height="15" fill="rgb(239,60,34)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.4633%" y="501" width="0.0799%" height="15" fill="rgb(236,165,48)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.4633%" y="485" width="0.0799%" height="15" fill="rgb(210,37,26)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.4633%" y="469" width="0.0799%" height="15" fill="rgb(211,3,17)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.4633%" y="453" width="0.0799%" height="15" fill="rgb(234,88,49)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="85.4633%" y="437" width="0.0799%" height="15" fill="rgb(233,40,17)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="85.4633%" y="421" width="0.0799%" height="15" fill="rgb(235,127,31)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.4633%" y="405" width="0.0799%" height="15" fill="rgb(248,167,17)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="85.4633%" y="389" width="0.0799%" height="15" fill="rgb(218,179,8)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="85.4633%" y="373" width="0.0799%" height="15" fill="rgb(216,92,14)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="85.4633%" y="357" width="0.0799%" height="15" fill="rgb(221,198,46)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.4633%" y="341" width="0.0799%" height="15" fill="rgb(244,7,25)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="85.4633%" y="325" width="0.0799%" height="15" fill="rgb(233,75,6)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.4633%" y="309" width="0.0799%" height="15" fill="rgb(240,189,41)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4633%" y="293" width="0.0799%" height="15" fill="rgb(237,157,21)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.4633%" y="629" width="0.1597%" height="15" fill="rgb(210,136,49)" fg:x="1070" fg:w="2"/><text x="85.7133%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="85.5431%" y="613" width="0.0799%" height="15" fill="rgb(210,68,29)" fg:x="1071" fg:w="1"/><text x="85.7931%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="85.5431%" y="597" width="0.0799%" height="15" fill="rgb(247,207,20)" fg:x="1071" fg:w="1"/><text x="85.7931%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="85.5431%" y="581" width="0.0799%" height="15" fill="rgb(224,73,48)" fg:x="1071" fg:w="1"/><text x="85.7931%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.5431%" y="565" width="0.0799%" height="15" fill="rgb(215,136,47)" fg:x="1071" fg:w="1"/><text x="85.7931%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.5431%" y="549" width="0.0799%" height="15" fill="rgb(232,222,16)" fg:x="1071" fg:w="1"/><text x="85.7931%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5431%" y="533" width="0.0799%" height="15" fill="rgb(249,202,47)" fg:x="1071" fg:w="1"/><text x="85.7931%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="85.4633%" y="661" width="0.2396%" height="15" fill="rgb(236,56,8)" fg:x="1070" fg:w="3"/><text x="85.7133%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="85.4633%" y="645" width="0.2396%" height="15" fill="rgb(222,6,3)" fg:x="1070" fg:w="3"/><text x="85.7133%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="85.6230%" y="629" width="0.0799%" height="15" fill="rgb(254,222,28)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="85.6230%" y="613" width="0.0799%" height="15" fill="rgb(219,57,23)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.6230%" y="597" width="0.0799%" height="15" fill="rgb(251,106,48)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.6230%" y="581" width="0.0799%" height="15" fill="rgb(242,2,23)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6230%" y="565" width="0.0799%" height="15" fill="rgb(212,109,31)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="85.6230%" y="549" width="0.0799%" height="15" fill="rgb(241,9,22)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="559.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (65 samples, 5.19%)</title><rect x="80.5911%" y="677" width="5.1917%" height="15" fill="rgb(209,64,27)" fg:x="1009" fg:w="65"/><text x="80.8411%" y="687.50">&lt;tests..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (1 samples, 0.08%)</title><rect x="85.7029%" y="661" width="0.0799%" height="15" fill="rgb(248,13,44)" fg:x="1073" fg:w="1"/><text x="85.9529%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="85.7029%" y="645" width="0.0799%" height="15" fill="rgb(213,86,6)" fg:x="1073" fg:w="1"/><text x="85.9529%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="85.7029%" y="629" width="0.0799%" height="15" fill="rgb(247,11,18)" fg:x="1073" fg:w="1"/><text x="85.9529%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.7029%" y="613" width="0.0799%" height="15" fill="rgb(252,31,11)" fg:x="1073" fg:w="1"/><text x="85.9529%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.7029%" y="597" width="0.0799%" height="15" fill="rgb(215,63,51)" fg:x="1073" fg:w="1"/><text x="85.9529%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.7827%" y="661" width="0.0799%" height="15" fill="rgb(222,180,4)" fg:x="1074" fg:w="1"/><text x="86.0327%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.7827%" y="645" width="0.0799%" height="15" fill="rgb(233,4,23)" fg:x="1074" fg:w="1"/><text x="86.0327%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.7827%" y="629" width="0.0799%" height="15" fill="rgb(230,116,22)" fg:x="1074" fg:w="1"/><text x="86.0327%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.7827%" y="613" width="0.0799%" height="15" fill="rgb(222,20,14)" fg:x="1074" fg:w="1"/><text x="86.0327%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.7827%" y="597" width="0.0799%" height="15" fill="rgb(210,176,43)" fg:x="1074" fg:w="1"/><text x="86.0327%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="85.7827%" y="581" width="0.0799%" height="15" fill="rgb(219,67,32)" fg:x="1074" fg:w="1"/><text x="86.0327%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="85.7827%" y="565" width="0.0799%" height="15" fill="rgb(228,91,39)" fg:x="1074" fg:w="1"/><text x="86.0327%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.7827%" y="549" width="0.0799%" height="15" fill="rgb(254,63,14)" fg:x="1074" fg:w="1"/><text x="86.0327%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.8626%" y="629" width="0.0799%" height="15" fill="rgb(216,171,39)" fg:x="1075" fg:w="1"/><text x="86.1126%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="85.9425%" y="581" width="0.0799%" height="15" fill="rgb(248,68,25)" fg:x="1076" fg:w="1"/><text x="86.1925%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.9425%" y="565" width="0.0799%" height="15" fill="rgb(239,63,16)" fg:x="1076" fg:w="1"/><text x="86.1925%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.9425%" y="549" width="0.0799%" height="15" fill="rgb(225,111,43)" fg:x="1076" fg:w="1"/><text x="86.1925%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.0224%" y="565" width="0.0799%" height="15" fill="rgb(246,165,17)" fg:x="1077" fg:w="1"/><text x="86.2724%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.0224%" y="549" width="0.0799%" height="15" fill="rgb(208,124,1)" fg:x="1077" fg:w="1"/><text x="86.2724%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.0224%" y="533" width="0.0799%" height="15" fill="rgb(234,147,33)" fg:x="1077" fg:w="1"/><text x="86.2724%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.1821%" y="549" width="0.0799%" height="15" fill="rgb(240,86,30)" fg:x="1079" fg:w="1"/><text x="86.4321%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1821%" y="533" width="0.0799%" height="15" fill="rgb(237,34,51)" fg:x="1079" fg:w="1"/><text x="86.4321%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.1821%" y="517" width="0.0799%" height="15" fill="rgb(232,131,41)" fg:x="1079" fg:w="1"/><text x="86.4321%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.1821%" y="501" width="0.0799%" height="15" fill="rgb(227,129,53)" fg:x="1079" fg:w="1"/><text x="86.4321%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.1821%" y="485" width="0.0799%" height="15" fill="rgb(230,90,35)" fg:x="1079" fg:w="1"/><text x="86.4321%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="86.2620%" y="501" width="0.2396%" height="15" fill="rgb(248,88,27)" fg:x="1080" fg:w="3"/><text x="86.5120%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="86.2620%" y="485" width="0.2396%" height="15" fill="rgb(223,18,17)" fg:x="1080" fg:w="3"/><text x="86.5120%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="86.2620%" y="469" width="0.2396%" height="15" fill="rgb(241,11,10)" fg:x="1080" fg:w="3"/><text x="86.5120%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.3419%" y="453" width="0.1597%" height="15" fill="rgb(232,111,52)" fg:x="1081" fg:w="2"/><text x="86.5919%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="86.1022%" y="565" width="0.5591%" height="15" fill="rgb(228,67,8)" fg:x="1078" fg:w="7"/><text x="86.3522%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="86.2620%" y="549" width="0.3994%" height="15" fill="rgb(251,168,31)" fg:x="1080" fg:w="5"/><text x="86.5120%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="86.2620%" y="533" width="0.3994%" height="15" fill="rgb(249,164,11)" fg:x="1080" fg:w="5"/><text x="86.5120%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="86.2620%" y="517" width="0.3994%" height="15" fill="rgb(239,81,9)" fg:x="1080" fg:w="5"/><text x="86.5120%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.5016%" y="501" width="0.1597%" height="15" fill="rgb(222,145,38)" fg:x="1083" fg:w="2"/><text x="86.7516%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.5016%" y="485" width="0.1597%" height="15" fill="rgb(238,80,54)" fg:x="1083" fg:w="2"/><text x="86.7516%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.5815%" y="469" width="0.0799%" height="15" fill="rgb(237,116,16)" fg:x="1084" fg:w="1"/><text x="86.8315%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.80%)</title><rect x="85.9425%" y="597" width="0.7987%" height="15" fill="rgb(218,135,19)" fg:x="1076" fg:w="10"/><text x="86.1925%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="86.0224%" y="581" width="0.7188%" height="15" fill="rgb(216,207,44)" fg:x="1077" fg:w="9"/><text x="86.2724%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.6613%" y="565" width="0.0799%" height="15" fill="rgb(226,152,40)" fg:x="1085" fg:w="1"/><text x="86.9113%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7412%" y="565" width="0.0799%" height="15" fill="rgb(219,98,35)" fg:x="1086" fg:w="1"/><text x="86.9912%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8211%" y="549" width="0.0799%" height="15" fill="rgb(222,136,46)" fg:x="1087" fg:w="1"/><text x="87.0711%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.7412%" y="597" width="0.2396%" height="15" fill="rgb(222,71,8)" fg:x="1086" fg:w="3"/><text x="86.9912%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="86.7412%" y="581" width="0.2396%" height="15" fill="rgb(209,89,53)" fg:x="1086" fg:w="3"/><text x="86.9912%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.8211%" y="565" width="0.1597%" height="15" fill="rgb(210,97,51)" fg:x="1087" fg:w="2"/><text x="87.0711%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9010%" y="549" width="0.0799%" height="15" fill="rgb(248,65,21)" fg:x="1088" fg:w="1"/><text x="87.1510%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9010%" y="533" width="0.0799%" height="15" fill="rgb(222,5,31)" fg:x="1088" fg:w="1"/><text x="87.1510%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.9010%" y="517" width="0.0799%" height="15" fill="rgb(241,16,30)" fg:x="1088" fg:w="1"/><text x="87.1510%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.9010%" y="501" width="0.0799%" height="15" fill="rgb(215,86,30)" fg:x="1088" fg:w="1"/><text x="87.1510%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0607%" y="517" width="0.0799%" height="15" fill="rgb(235,26,44)" fg:x="1090" fg:w="1"/><text x="87.3107%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.1406%" y="517" width="0.0799%" height="15" fill="rgb(228,147,14)" fg:x="1091" fg:w="1"/><text x="87.3906%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.2204%" y="501" width="0.0799%" height="15" fill="rgb(253,38,50)" fg:x="1092" fg:w="1"/><text x="87.4704%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2204%" y="485" width="0.0799%" height="15" fill="rgb(251,151,16)" fg:x="1092" fg:w="1"/><text x="87.4704%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="86.9808%" y="565" width="0.5591%" height="15" fill="rgb(224,64,19)" fg:x="1089" fg:w="7"/><text x="87.2308%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="87.0607%" y="549" width="0.4792%" height="15" fill="rgb(235,214,47)" fg:x="1090" fg:w="6"/><text x="87.3107%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="87.0607%" y="533" width="0.4792%" height="15" fill="rgb(218,15,19)" fg:x="1090" fg:w="6"/><text x="87.3107%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="87.2204%" y="517" width="0.3195%" height="15" fill="rgb(247,209,3)" fg:x="1092" fg:w="4"/><text x="87.4704%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.3003%" y="501" width="0.2396%" height="15" fill="rgb(217,29,2)" fg:x="1093" fg:w="3"/><text x="87.5503%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="87.3802%" y="485" width="0.1597%" height="15" fill="rgb(234,9,9)" fg:x="1094" fg:w="2"/><text x="87.6302%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.3802%" y="469" width="0.1597%" height="15" fill="rgb(207,43,14)" fg:x="1094" fg:w="2"/><text x="87.6302%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="87.6198%" y="501" width="0.0799%" height="15" fill="rgb(216,219,36)" fg:x="1097" fg:w="1"/><text x="87.8698%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="87.6198%" y="485" width="0.0799%" height="15" fill="rgb(238,12,26)" fg:x="1097" fg:w="1"/><text x="87.8698%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.6198%" y="469" width="0.0799%" height="15" fill="rgb(226,67,30)" fg:x="1097" fg:w="1"/><text x="87.8698%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="87.6198%" y="533" width="0.2396%" height="15" fill="rgb(229,154,7)" fg:x="1097" fg:w="3"/><text x="87.8698%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="87.6198%" y="517" width="0.2396%" height="15" fill="rgb(249,90,18)" fg:x="1097" fg:w="3"/><text x="87.8698%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="87.6997%" y="501" width="0.1597%" height="15" fill="rgb(223,53,15)" fg:x="1098" fg:w="2"/><text x="87.9497%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="87.6997%" y="485" width="0.1597%" height="15" fill="rgb(253,86,38)" fg:x="1098" fg:w="2"/><text x="87.9497%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (12 samples, 0.96%)</title><rect x="86.9808%" y="581" width="0.9585%" height="15" fill="rgb(222,198,9)" fg:x="1089" fg:w="12"/><text x="87.2308%" y="591.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="87.5399%" y="565" width="0.3994%" height="15" fill="rgb(240,146,25)" fg:x="1096" fg:w="5"/><text x="87.7899%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="87.5399%" y="549" width="0.3994%" height="15" fill="rgb(225,38,10)" fg:x="1096" fg:w="5"/><text x="87.7899%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.8594%" y="533" width="0.0799%" height="15" fill="rgb(246,93,4)" fg:x="1100" fg:w="1"/><text x="88.1094%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="87.9393%" y="565" width="0.0799%" height="15" fill="rgb(222,55,18)" fg:x="1101" fg:w="1"/><text x="88.1893%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="88.0990%" y="549" width="0.0799%" height="15" fill="rgb(233,137,48)" fg:x="1103" fg:w="1"/><text x="88.3490%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.0990%" y="533" width="0.0799%" height="15" fill="rgb(214,8,54)" fg:x="1103" fg:w="1"/><text x="88.3490%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0990%" y="517" width="0.0799%" height="15" fill="rgb(206,75,4)" fg:x="1103" fg:w="1"/><text x="88.3490%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="88.2588%" y="501" width="0.1597%" height="15" fill="rgb(238,171,14)" fg:x="1105" fg:w="2"/><text x="88.5088%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (2 samples, 0.16%)</title><rect x="88.2588%" y="485" width="0.1597%" height="15" fill="rgb(233,70,41)" fg:x="1105" fg:w="2"/><text x="88.5088%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.2588%" y="469" width="0.1597%" height="15" fill="rgb(214,68,36)" fg:x="1105" fg:w="2"/><text x="88.5088%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.4185%" y="485" width="0.0799%" height="15" fill="rgb(223,29,5)" fg:x="1107" fg:w="1"/><text x="88.6685%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="88.2588%" y="517" width="0.3994%" height="15" fill="rgb(251,22,40)" fg:x="1105" fg:w="5"/><text x="88.5088%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="88.4185%" y="501" width="0.2396%" height="15" fill="rgb(210,67,41)" fg:x="1107" fg:w="3"/><text x="88.6685%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.4984%" y="485" width="0.1597%" height="15" fill="rgb(225,177,31)" fg:x="1108" fg:w="2"/><text x="88.7484%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.4984%" y="469" width="0.1597%" height="15" fill="rgb(221,229,11)" fg:x="1108" fg:w="2"/><text x="88.7484%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.4984%" y="453" width="0.1597%" height="15" fill="rgb(247,172,52)" fg:x="1108" fg:w="2"/><text x="88.7484%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.4984%" y="437" width="0.1597%" height="15" fill="rgb(212,73,19)" fg:x="1108" fg:w="2"/><text x="88.7484%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.4984%" y="421" width="0.1597%" height="15" fill="rgb(244,7,46)" fg:x="1108" fg:w="2"/><text x="88.7484%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.4984%" y="405" width="0.1597%" height="15" fill="rgb(230,113,20)" fg:x="1108" fg:w="2"/><text x="88.7484%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.4984%" y="389" width="0.1597%" height="15" fill="rgb(209,97,30)" fg:x="1108" fg:w="2"/><text x="88.7484%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.4984%" y="373" width="0.1597%" height="15" fill="rgb(243,89,12)" fg:x="1108" fg:w="2"/><text x="88.7484%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.4984%" y="357" width="0.1597%" height="15" fill="rgb(228,32,19)" fg:x="1108" fg:w="2"/><text x="88.7484%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.4984%" y="341" width="0.1597%" height="15" fill="rgb(248,25,17)" fg:x="1108" fg:w="2"/><text x="88.7484%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="88.2588%" y="533" width="0.4792%" height="15" fill="rgb(232,161,29)" fg:x="1105" fg:w="6"/><text x="88.5088%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="88.6581%" y="517" width="0.0799%" height="15" fill="rgb(251,192,11)" fg:x="1110" fg:w="1"/><text x="88.9081%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6581%" y="501" width="0.0799%" height="15" fill="rgb(240,47,32)" fg:x="1110" fg:w="1"/><text x="88.9081%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="87.9393%" y="581" width="0.9585%" height="15" fill="rgb(250,16,45)" fg:x="1101" fg:w="12"/><text x="88.1893%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="88.0192%" y="565" width="0.8786%" height="15" fill="rgb(227,217,42)" fg:x="1102" fg:w="11"/><text x="88.2692%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="88.1789%" y="549" width="0.7188%" height="15" fill="rgb(206,82,54)" fg:x="1104" fg:w="9"/><text x="88.4289%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.7380%" y="533" width="0.1597%" height="15" fill="rgb(243,145,25)" fg:x="1111" fg:w="2"/><text x="88.9880%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8179%" y="517" width="0.0799%" height="15" fill="rgb(207,166,24)" fg:x="1112" fg:w="1"/><text x="89.0679%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.8179%" y="501" width="0.0799%" height="15" fill="rgb(215,191,44)" fg:x="1112" fg:w="1"/><text x="89.0679%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.8978%" y="437" width="0.0799%" height="15" fill="rgb(234,218,51)" fg:x="1113" fg:w="1"/><text x="89.1478%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.8978%" y="421" width="0.0799%" height="15" fill="rgb(245,133,21)" fg:x="1113" fg:w="1"/><text x="89.1478%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8978%" y="405" width="0.0799%" height="15" fill="rgb(230,136,45)" fg:x="1113" fg:w="1"/><text x="89.1478%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="89.0575%" y="357" width="0.1597%" height="15" fill="rgb(247,63,43)" fg:x="1115" fg:w="2"/><text x="89.3075%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="88.9776%" y="389" width="0.3195%" height="15" fill="rgb(254,223,31)" fg:x="1114" fg:w="4"/><text x="89.2276%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="88.9776%" y="373" width="0.3195%" height="15" fill="rgb(236,185,0)" fg:x="1114" fg:w="4"/><text x="89.2276%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2173%" y="357" width="0.0799%" height="15" fill="rgb(231,139,46)" fg:x="1117" fg:w="1"/><text x="89.4673%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2173%" y="341" width="0.0799%" height="15" fill="rgb(236,147,31)" fg:x="1117" fg:w="1"/><text x="89.4673%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2173%" y="325" width="0.0799%" height="15" fill="rgb(225,222,22)" fg:x="1117" fg:w="1"/><text x="89.4673%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="88.9776%" y="437" width="0.3994%" height="15" fill="rgb(225,193,14)" fg:x="1114" fg:w="5"/><text x="89.2276%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="88.9776%" y="421" width="0.3994%" height="15" fill="rgb(253,193,46)" fg:x="1114" fg:w="5"/><text x="89.2276%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="88.9776%" y="405" width="0.3994%" height="15" fill="rgb(218,187,39)" fg:x="1114" fg:w="5"/><text x="89.2276%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.2971%" y="389" width="0.0799%" height="15" fill="rgb(227,162,48)" fg:x="1118" fg:w="1"/><text x="89.5471%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.2971%" y="373" width="0.0799%" height="15" fill="rgb(222,25,5)" fg:x="1118" fg:w="1"/><text x="89.5471%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="88.8978%" y="453" width="0.5591%" height="15" fill="rgb(211,205,16)" fg:x="1113" fg:w="7"/><text x="89.1478%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="89.3770%" y="437" width="0.0799%" height="15" fill="rgb(244,191,2)" fg:x="1119" fg:w="1"/><text x="89.6270%" y="447.50"></text></g><g><title>engine::session::Session::close (48 samples, 3.83%)</title><rect x="85.7827%" y="677" width="3.8339%" height="15" fill="rgb(248,159,12)" fg:x="1074" fg:w="48"/><text x="86.0327%" y="687.50">engi..</text></g><g><title>engine::session::state::State::close (47 samples, 3.75%)</title><rect x="85.8626%" y="661" width="3.7540%" height="15" fill="rgb(235,204,17)" fg:x="1075" fg:w="47"/><text x="86.1126%" y="671.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (47 samples, 3.75%)</title><rect x="85.8626%" y="645" width="3.7540%" height="15" fill="rgb(240,21,27)" fg:x="1075" fg:w="47"/><text x="86.1126%" y="655.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (46 samples, 3.67%)</title><rect x="85.9425%" y="629" width="3.6741%" height="15" fill="rgb(224,170,31)" fg:x="1076" fg:w="46"/><text x="86.1925%" y="639.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (46 samples, 3.67%)</title><rect x="85.9425%" y="613" width="3.6741%" height="15" fill="rgb(223,145,32)" fg:x="1076" fg:w="46"/><text x="86.1925%" y="623.50">engi..</text></g><g><title>kernel::model::any_entity_changes (33 samples, 2.64%)</title><rect x="86.9808%" y="597" width="2.6358%" height="15" fill="rgb(243,100,5)" fg:x="1089" fg:w="33"/><text x="87.2308%" y="607.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="88.8978%" y="581" width="0.7188%" height="15" fill="rgb(242,131,51)" fg:x="1113" fg:w="9"/><text x="89.1478%" y="591.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="88.8978%" y="565" width="0.7188%" height="15" fill="rgb(223,156,46)" fg:x="1113" fg:w="9"/><text x="89.1478%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="88.8978%" y="549" width="0.7188%" height="15" fill="rgb(215,10,40)" fg:x="1113" fg:w="9"/><text x="89.1478%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="88.8978%" y="533" width="0.7188%" height="15" fill="rgb(233,155,0)" fg:x="1113" fg:w="9"/><text x="89.1478%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="88.8978%" y="517" width="0.7188%" height="15" fill="rgb(247,78,6)" fg:x="1113" fg:w="9"/><text x="89.1478%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="88.8978%" y="501" width="0.7188%" height="15" fill="rgb(237,217,21)" fg:x="1113" fg:w="9"/><text x="89.1478%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="88.8978%" y="485" width="0.7188%" height="15" fill="rgb(212,1,21)" fg:x="1113" fg:w="9"/><text x="89.1478%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="88.8978%" y="469" width="0.7188%" height="15" fill="rgb(213,7,14)" fg:x="1113" fg:w="9"/><text x="89.1478%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="89.4569%" y="453" width="0.1597%" height="15" fill="rgb(225,84,14)" fg:x="1120" fg:w="2"/><text x="89.7069%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.5367%" y="437" width="0.0799%" height="15" fill="rgb(239,216,39)" fg:x="1121" fg:w="1"/><text x="89.7867%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.6965%" y="501" width="0.0799%" height="15" fill="rgb(253,29,23)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.6965%" y="485" width="0.0799%" height="15" fill="rgb(220,167,50)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.6965%" y="469" width="0.0799%" height="15" fill="rgb(232,141,1)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.6965%" y="453" width="0.0799%" height="15" fill="rgb(222,210,1)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6965%" y="437" width="0.0799%" height="15" fill="rgb(219,84,10)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.6965%" y="421" width="0.0799%" height="15" fill="rgb(245,188,6)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6965%" y="405" width="0.0799%" height="15" fill="rgb(252,139,39)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.6965%" y="389" width="0.0799%" height="15" fill="rgb(218,42,26)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6965%" y="373" width="0.0799%" height="15" fill="rgb(237,226,51)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.6965%" y="357" width="0.0799%" height="15" fill="rgb(246,15,17)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6965%" y="341" width="0.0799%" height="15" fill="rgb(228,170,42)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.6965%" y="325" width="0.0799%" height="15" fill="rgb(248,118,53)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6965%" y="309" width="0.0799%" height="15" fill="rgb(207,30,10)" fg:x="1123" fg:w="1"/><text x="89.9465%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="89.6965%" y="533" width="0.1597%" height="15" fill="rgb(217,104,38)" fg:x="1123" fg:w="2"/><text x="89.9465%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="89.6965%" y="517" width="0.1597%" height="15" fill="rgb(211,165,26)" fg:x="1123" fg:w="2"/><text x="89.9465%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.7764%" y="501" width="0.0799%" height="15" fill="rgb(247,38,9)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.7764%" y="485" width="0.0799%" height="15" fill="rgb(218,187,8)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.7764%" y="469" width="0.0799%" height="15" fill="rgb(247,94,28)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7764%" y="453" width="0.0799%" height="15" fill="rgb(218,173,30)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7764%" y="437" width="0.0799%" height="15" fill="rgb(245,45,36)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7764%" y="421" width="0.0799%" height="15" fill="rgb(221,172,44)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7764%" y="405" width="0.0799%" height="15" fill="rgb(222,45,12)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.7764%" y="389" width="0.0799%" height="15" fill="rgb(250,10,22)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.7764%" y="373" width="0.0799%" height="15" fill="rgb(239,27,0)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.7764%" y="357" width="0.0799%" height="15" fill="rgb(223,118,22)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.7764%" y="341" width="0.0799%" height="15" fill="rgb(251,81,25)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.7764%" y="325" width="0.0799%" height="15" fill="rgb(237,225,53)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.7764%" y="309" width="0.0799%" height="15" fill="rgb(237,186,51)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.7764%" y="293" width="0.0799%" height="15" fill="rgb(247,209,11)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.7764%" y="277" width="0.0799%" height="15" fill="rgb(223,109,27)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.7764%" y="261" width="0.0799%" height="15" fill="rgb(246,181,13)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.7764%" y="245" width="0.0799%" height="15" fill="rgb(234,57,44)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.7764%" y="229" width="0.0799%" height="15" fill="rgb(211,227,50)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7764%" y="213" width="0.0799%" height="15" fill="rgb(254,57,34)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="223.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="89.8562%" y="517" width="0.0799%" height="15" fill="rgb(227,212,26)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.8562%" y="501" width="0.0799%" height="15" fill="rgb(244,169,44)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.8562%" y="485" width="0.0799%" height="15" fill="rgb(236,135,50)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.8562%" y="469" width="0.0799%" height="15" fill="rgb(241,89,30)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.8562%" y="453" width="0.0799%" height="15" fill="rgb(206,113,34)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.8562%" y="437" width="0.0799%" height="15" fill="rgb(218,104,52)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.8562%" y="421" width="0.0799%" height="15" fill="rgb(223,82,32)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.8562%" y="405" width="0.0799%" height="15" fill="rgb(249,219,30)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.8562%" y="389" width="0.0799%" height="15" fill="rgb(233,141,21)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.8562%" y="373" width="0.0799%" height="15" fill="rgb(252,87,44)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.8562%" y="357" width="0.0799%" height="15" fill="rgb(229,48,33)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.8562%" y="341" width="0.0799%" height="15" fill="rgb(229,23,22)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.9361%" y="437" width="0.0799%" height="15" fill="rgb(244,116,16)" fg:x="1126" fg:w="1"/><text x="90.1861%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.9361%" y="421" width="0.0799%" height="15" fill="rgb(247,45,10)" fg:x="1126" fg:w="1"/><text x="90.1861%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="89.9361%" y="405" width="0.0799%" height="15" fill="rgb(228,60,29)" fg:x="1126" fg:w="1"/><text x="90.1861%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.9361%" y="389" width="0.0799%" height="15" fill="rgb(205,129,15)" fg:x="1126" fg:w="1"/><text x="90.1861%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.9361%" y="373" width="0.0799%" height="15" fill="rgb(206,229,4)" fg:x="1126" fg:w="1"/><text x="90.1861%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.9361%" y="357" width="0.0799%" height="15" fill="rgb(249,191,30)" fg:x="1126" fg:w="1"/><text x="90.1861%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="89.8562%" y="533" width="0.2396%" height="15" fill="rgb(250,84,54)" fg:x="1125" fg:w="3"/><text x="90.1062%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.9361%" y="517" width="0.1597%" height="15" fill="rgb(207,25,53)" fg:x="1126" fg:w="2"/><text x="90.1861%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.9361%" y="501" width="0.1597%" height="15" fill="rgb(235,40,8)" fg:x="1126" fg:w="2"/><text x="90.1861%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="89.9361%" y="485" width="0.1597%" height="15" fill="rgb(226,169,33)" fg:x="1126" fg:w="2"/><text x="90.1861%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.9361%" y="469" width="0.1597%" height="15" fill="rgb(238,110,8)" fg:x="1126" fg:w="2"/><text x="90.1861%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.9361%" y="453" width="0.1597%" height="15" fill="rgb(251,206,12)" fg:x="1126" fg:w="2"/><text x="90.1861%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0160%" y="437" width="0.0799%" height="15" fill="rgb(248,171,18)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.0160%" y="421" width="0.0799%" height="15" fill="rgb(213,65,46)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="90.0160%" y="405" width="0.0799%" height="15" fill="rgb(211,154,15)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0160%" y="389" width="0.0799%" height="15" fill="rgb(217,75,43)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.0160%" y="373" width="0.0799%" height="15" fill="rgb(230,32,33)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.0160%" y="357" width="0.0799%" height="15" fill="rgb(221,100,16)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.0160%" y="341" width="0.0799%" height="15" fill="rgb(212,129,47)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="90.0958%" y="517" width="0.0799%" height="15" fill="rgb(239,217,47)" fg:x="1128" fg:w="1"/><text x="90.3458%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.0958%" y="501" width="0.0799%" height="15" fill="rgb(230,84,24)" fg:x="1128" fg:w="1"/><text x="90.3458%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (7 samples, 0.56%)</title><rect x="89.6965%" y="629" width="0.5591%" height="15" fill="rgb(214,153,51)" fg:x="1123" fg:w="7"/><text x="89.9465%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="89.6965%" y="613" width="0.5591%" height="15" fill="rgb(231,6,35)" fg:x="1123" fg:w="7"/><text x="89.9465%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="89.6965%" y="597" width="0.5591%" height="15" fill="rgb(229,122,30)" fg:x="1123" fg:w="7"/><text x="89.9465%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="89.6965%" y="581" width="0.5591%" height="15" fill="rgb(234,71,10)" fg:x="1123" fg:w="7"/><text x="89.9465%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="89.6965%" y="565" width="0.5591%" height="15" fill="rgb(215,173,26)" fg:x="1123" fg:w="7"/><text x="89.9465%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="89.6965%" y="549" width="0.5591%" height="15" fill="rgb(248,118,52)" fg:x="1123" fg:w="7"/><text x="89.9465%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.0958%" y="533" width="0.1597%" height="15" fill="rgb(237,55,46)" fg:x="1128" fg:w="2"/><text x="90.3458%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.1757%" y="517" width="0.0799%" height="15" fill="rgb(243,214,43)" fg:x="1129" fg:w="1"/><text x="90.4257%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.1757%" y="501" width="0.0799%" height="15" fill="rgb(252,123,30)" fg:x="1129" fg:w="1"/><text x="90.4257%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.1757%" y="485" width="0.0799%" height="15" fill="rgb(215,73,39)" fg:x="1129" fg:w="1"/><text x="90.4257%" y="495.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (8 samples, 0.64%)</title><rect x="89.6965%" y="645" width="0.6390%" height="15" fill="rgb(251,194,29)" fg:x="1123" fg:w="8"/><text x="89.9465%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="90.2556%" y="629" width="0.0799%" height="15" fill="rgb(224,58,52)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="90.2556%" y="613" width="0.0799%" height="15" fill="rgb(248,106,46)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="90.2556%" y="597" width="0.0799%" height="15" fill="rgb(223,80,29)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="90.2556%" y="581" width="0.0799%" height="15" fill="rgb(243,137,9)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="90.2556%" y="565" width="0.0799%" height="15" fill="rgb(235,121,28)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2556%" y="549" width="0.0799%" height="15" fill="rgb(219,121,41)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2556%" y="533" width="0.0799%" height="15" fill="rgb(251,60,6)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2556%" y="517" width="0.0799%" height="15" fill="rgb(208,12,30)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.2556%" y="501" width="0.0799%" height="15" fill="rgb(207,176,36)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.2556%" y="485" width="0.0799%" height="15" fill="rgb(211,188,29)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.2556%" y="469" width="0.0799%" height="15" fill="rgb(220,184,37)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.2556%" y="453" width="0.0799%" height="15" fill="rgb(239,87,37)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.2556%" y="437" width="0.0799%" height="15" fill="rgb(232,113,44)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="90.3355%" y="469" width="0.0799%" height="15" fill="rgb(246,25,39)" fg:x="1131" fg:w="1"/><text x="90.5855%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.3355%" y="453" width="0.0799%" height="15" fill="rgb(247,30,13)" fg:x="1131" fg:w="1"/><text x="90.5855%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="90.3355%" y="645" width="0.1597%" height="15" fill="rgb(230,176,35)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="655.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (2 samples, 0.16%)</title><rect x="90.3355%" y="629" width="0.1597%" height="15" fill="rgb(222,23,18)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="639.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="90.3355%" y="613" width="0.1597%" height="15" fill="rgb(234,86,8)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="90.3355%" y="597" width="0.1597%" height="15" fill="rgb(206,218,47)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="607.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="90.3355%" y="581" width="0.1597%" height="15" fill="rgb(229,35,31)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="90.3355%" y="565" width="0.1597%" height="15" fill="rgb(242,81,7)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="575.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="90.3355%" y="549" width="0.1597%" height="15" fill="rgb(231,11,35)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="90.3355%" y="533" width="0.1597%" height="15" fill="rgb(219,218,17)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="90.3355%" y="517" width="0.1597%" height="15" fill="rgb(221,83,32)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="527.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="90.3355%" y="501" width="0.1597%" height="15" fill="rgb(233,49,54)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="90.3355%" y="485" width="0.1597%" height="15" fill="rgb(206,18,51)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="495.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="90.4153%" y="469" width="0.0799%" height="15" fill="rgb(249,193,15)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4153%" y="453" width="0.0799%" height="15" fill="rgb(245,186,19)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4153%" y="437" width="0.0799%" height="15" fill="rgb(230,4,24)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4153%" y="421" width="0.0799%" height="15" fill="rgb(234,75,27)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.4153%" y="405" width="0.0799%" height="15" fill="rgb(244,187,35)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.4153%" y="389" width="0.0799%" height="15" fill="rgb(241,97,43)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.4153%" y="373" width="0.0799%" height="15" fill="rgb(236,94,2)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4153%" y="357" width="0.0799%" height="15" fill="rgb(231,175,7)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4153%" y="341" width="0.0799%" height="15" fill="rgb(236,89,47)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.4153%" y="325" width="0.0799%" height="15" fill="rgb(213,191,37)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.4153%" y="309" width="0.0799%" height="15" fill="rgb(252,0,34)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.4153%" y="293" width="0.0799%" height="15" fill="rgb(208,145,44)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.4153%" y="277" width="0.0799%" height="15" fill="rgb(227,95,50)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4153%" y="261" width="0.0799%" height="15" fill="rgb(222,136,24)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="90.4952%" y="645" width="0.0799%" height="15" fill="rgb(218,105,10)" fg:x="1133" fg:w="1"/><text x="90.7452%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="90.4952%" y="629" width="0.0799%" height="15" fill="rgb(216,65,28)" fg:x="1133" fg:w="1"/><text x="90.7452%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.4952%" y="613" width="0.0799%" height="15" fill="rgb(229,6,28)" fg:x="1133" fg:w="1"/><text x="90.7452%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="90.8946%" y="517" width="0.1597%" height="15" fill="rgb(222,160,42)" fg:x="1138" fg:w="2"/><text x="91.1446%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.8946%" y="501" width="0.1597%" height="15" fill="rgb(235,83,49)" fg:x="1138" fg:w="2"/><text x="91.1446%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="90.8147%" y="549" width="0.3195%" height="15" fill="rgb(236,86,36)" fg:x="1137" fg:w="4"/><text x="91.0647%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="90.8147%" y="533" width="0.3195%" height="15" fill="rgb(236,19,41)" fg:x="1137" fg:w="4"/><text x="91.0647%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.0543%" y="517" width="0.0799%" height="15" fill="rgb(217,71,31)" fg:x="1140" fg:w="1"/><text x="91.3043%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (8 samples, 0.64%)</title><rect x="90.6550%" y="613" width="0.6390%" height="15" fill="rgb(236,209,25)" fg:x="1135" fg:w="8"/><text x="90.9050%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="90.7348%" y="597" width="0.5591%" height="15" fill="rgb(247,104,21)" fg:x="1136" fg:w="7"/><text x="90.9848%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="90.8147%" y="581" width="0.4792%" height="15" fill="rgb(243,80,38)" fg:x="1137" fg:w="6"/><text x="91.0647%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="90.8147%" y="565" width="0.4792%" height="15" fill="rgb(232,109,38)" fg:x="1137" fg:w="6"/><text x="91.0647%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="91.1342%" y="549" width="0.1597%" height="15" fill="rgb(212,177,53)" fg:x="1141" fg:w="2"/><text x="91.3842%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.3738%" y="581" width="0.0799%" height="15" fill="rgb(227,30,34)" fg:x="1144" fg:w="1"/><text x="91.6238%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="91.3738%" y="565" width="0.0799%" height="15" fill="rgb(205,175,25)" fg:x="1144" fg:w="1"/><text x="91.6238%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3738%" y="549" width="0.0799%" height="15" fill="rgb(249,39,54)" fg:x="1144" fg:w="1"/><text x="91.6238%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::DomainError&gt; (1 samples, 0.08%)</title><rect x="91.4537%" y="485" width="0.0799%" height="15" fill="rgb(215,54,37)" fg:x="1145" fg:w="1"/><text x="91.7037%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="91.4537%" y="501" width="0.1597%" height="15" fill="rgb(205,60,46)" fg:x="1145" fg:w="2"/><text x="91.7037%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="91.5335%" y="485" width="0.0799%" height="15" fill="rgb(238,89,29)" fg:x="1146" fg:w="1"/><text x="91.7835%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.6134%" y="469" width="0.0799%" height="15" fill="rgb(212,48,10)" fg:x="1147" fg:w="1"/><text x="91.8634%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="91.6134%" y="453" width="0.0799%" height="15" fill="rgb(237,186,28)" fg:x="1147" fg:w="1"/><text x="91.8634%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="91.6933%" y="421" width="0.0799%" height="15" fill="rgb(237,204,4)" fg:x="1148" fg:w="1"/><text x="91.9433%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="91.7732%" y="357" width="0.0799%" height="15" fill="rgb(237,15,47)" fg:x="1149" fg:w="1"/><text x="92.0232%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7732%" y="341" width="0.0799%" height="15" fill="rgb(244,110,25)" fg:x="1149" fg:w="1"/><text x="92.0232%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="91.7732%" y="405" width="0.1597%" height="15" fill="rgb(241,12,16)" fg:x="1149" fg:w="2"/><text x="92.0232%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="91.7732%" y="389" width="0.1597%" height="15" fill="rgb(235,25,9)" fg:x="1149" fg:w="2"/><text x="92.0232%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="91.7732%" y="373" width="0.1597%" height="15" fill="rgb(245,159,19)" fg:x="1149" fg:w="2"/><text x="92.0232%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.8530%" y="357" width="0.0799%" height="15" fill="rgb(236,63,32)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.8530%" y="341" width="0.0799%" height="15" fill="rgb(235,32,52)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.8530%" y="325" width="0.0799%" height="15" fill="rgb(209,176,21)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.8530%" y="309" width="0.0799%" height="15" fill="rgb(205,90,42)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.8530%" y="293" width="0.0799%" height="15" fill="rgb(213,132,16)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.8530%" y="277" width="0.0799%" height="15" fill="rgb(232,11,22)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.8530%" y="261" width="0.0799%" height="15" fill="rgb(248,167,41)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.8530%" y="245" width="0.0799%" height="15" fill="rgb(209,127,6)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.8530%" y="229" width="0.0799%" height="15" fill="rgb(246,210,34)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.8530%" y="213" width="0.0799%" height="15" fill="rgb(238,165,13)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.8530%" y="197" width="0.0799%" height="15" fill="rgb(233,98,15)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.8530%" y="181" width="0.0799%" height="15" fill="rgb(215,215,51)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.8530%" y="165" width="0.0799%" height="15" fill="rgb(217,161,25)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.8530%" y="149" width="0.0799%" height="15" fill="rgb(217,167,48)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.8530%" y="133" width="0.0799%" height="15" fill="rgb(205,163,34)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.8530%" y="117" width="0.0799%" height="15" fill="rgb(241,197,31)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.8530%" y="101" width="0.0799%" height="15" fill="rgb(225,123,11)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.8530%" y="85" width="0.0799%" height="15" fill="rgb(217,4,20)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.8530%" y="69" width="0.0799%" height="15" fill="rgb(215,55,9)" fg:x="1150" fg:w="1"/><text x="92.1030%" y="79.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="91.6933%" y="453" width="0.3994%" height="15" fill="rgb(218,165,5)" fg:x="1148" fg:w="5"/><text x="91.9433%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="91.6933%" y="437" width="0.3994%" height="15" fill="rgb(222,175,15)" fg:x="1148" fg:w="5"/><text x="91.9433%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="91.7732%" y="421" width="0.3195%" height="15" fill="rgb(223,85,34)" fg:x="1149" fg:w="4"/><text x="92.0232%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (2 samples, 0.16%)</title><rect x="91.9329%" y="405" width="0.1597%" height="15" fill="rgb(234,228,29)" fg:x="1151" fg:w="2"/><text x="92.1829%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.9329%" y="389" width="0.1597%" height="15" fill="rgb(239,7,28)" fg:x="1151" fg:w="2"/><text x="92.1829%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.9329%" y="373" width="0.1597%" height="15" fill="rgb(252,222,53)" fg:x="1151" fg:w="2"/><text x="92.1829%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="91.9329%" y="357" width="0.1597%" height="15" fill="rgb(232,146,44)" fg:x="1151" fg:w="2"/><text x="92.1829%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.9329%" y="341" width="0.1597%" height="15" fill="rgb(243,223,53)" fg:x="1151" fg:w="2"/><text x="92.1829%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.0128%" y="325" width="0.0799%" height="15" fill="rgb(219,128,25)" fg:x="1152" fg:w="1"/><text x="92.2628%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0128%" y="309" width="0.0799%" height="15" fill="rgb(223,56,32)" fg:x="1152" fg:w="1"/><text x="92.2628%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0128%" y="293" width="0.0799%" height="15" fill="rgb(237,41,3)" fg:x="1152" fg:w="1"/><text x="92.2628%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0128%" y="277" width="0.0799%" height="15" fill="rgb(235,138,9)" fg:x="1152" fg:w="1"/><text x="92.2628%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0128%" y="261" width="0.0799%" height="15" fill="rgb(214,131,10)" fg:x="1152" fg:w="1"/><text x="92.2628%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0128%" y="245" width="0.0799%" height="15" fill="rgb(229,89,7)" fg:x="1152" fg:w="1"/><text x="92.2628%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0128%" y="229" width="0.0799%" height="15" fill="rgb(240,24,42)" fg:x="1152" fg:w="1"/><text x="92.2628%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0128%" y="213" width="0.0799%" height="15" fill="rgb(243,188,54)" fg:x="1152" fg:w="1"/><text x="92.2628%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0128%" y="197" width="0.0799%" height="15" fill="rgb(246,92,22)" fg:x="1152" fg:w="1"/><text x="92.2628%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="92.0128%" y="181" width="0.0799%" height="15" fill="rgb(211,176,51)" fg:x="1152" fg:w="1"/><text x="92.2628%" y="191.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.0927%" y="453" width="0.0799%" height="15" fill="rgb(246,207,34)" fg:x="1153" fg:w="1"/><text x="92.3427%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.0927%" y="437" width="0.0799%" height="15" fill="rgb(239,95,2)" fg:x="1153" fg:w="1"/><text x="92.3427%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.0927%" y="421" width="0.0799%" height="15" fill="rgb(211,124,25)" fg:x="1153" fg:w="1"/><text x="92.3427%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="91.4537%" y="517" width="0.7987%" height="15" fill="rgb(231,221,19)" fg:x="1145" fg:w="10"/><text x="91.7037%" y="527.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (8 samples, 0.64%)</title><rect x="91.6134%" y="501" width="0.6390%" height="15" fill="rgb(239,183,19)" fg:x="1147" fg:w="8"/><text x="91.8634%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (8 samples, 0.64%)</title><rect x="91.6134%" y="485" width="0.6390%" height="15" fill="rgb(221,130,29)" fg:x="1147" fg:w="8"/><text x="91.8634%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="91.6933%" y="469" width="0.5591%" height="15" fill="rgb(206,130,36)" fg:x="1148" fg:w="7"/><text x="91.9433%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.1725%" y="453" width="0.0799%" height="15" fill="rgb(215,70,19)" fg:x="1154" fg:w="1"/><text x="92.4225%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1725%" y="437" width="0.0799%" height="15" fill="rgb(244,16,43)" fg:x="1154" fg:w="1"/><text x="92.4225%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.1725%" y="421" width="0.0799%" height="15" fill="rgb(222,115,32)" fg:x="1154" fg:w="1"/><text x="92.4225%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (12 samples, 0.96%)</title><rect x="91.4537%" y="533" width="0.9585%" height="15" fill="rgb(247,48,25)" fg:x="1145" fg:w="12"/><text x="91.7037%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="92.2524%" y="517" width="0.1597%" height="15" fill="rgb(226,180,51)" fg:x="1155" fg:w="2"/><text x="92.5024%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.3323%" y="501" width="0.0799%" height="15" fill="rgb(217,142,42)" fg:x="1156" fg:w="1"/><text x="92.5823%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3323%" y="485" width="0.0799%" height="15" fill="rgb(220,178,3)" fg:x="1156" fg:w="1"/><text x="92.5823%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3323%" y="469" width="0.0799%" height="15" fill="rgb(217,221,4)" fg:x="1156" fg:w="1"/><text x="92.5823%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="92.3323%" y="453" width="0.0799%" height="15" fill="rgb(237,63,43)" fg:x="1156" fg:w="1"/><text x="92.5823%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="92.3323%" y="437" width="0.0799%" height="15" fill="rgb(220,57,8)" fg:x="1156" fg:w="1"/><text x="92.5823%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="92.3323%" y="421" width="0.0799%" height="15" fill="rgb(254,186,27)" fg:x="1156" fg:w="1"/><text x="92.5823%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3323%" y="405" width="0.0799%" height="15" fill="rgb(251,57,28)" fg:x="1156" fg:w="1"/><text x="92.5823%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3323%" y="389" width="0.0799%" height="15" fill="rgb(215,228,0)" fg:x="1156" fg:w="1"/><text x="92.5823%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.3323%" y="373" width="0.0799%" height="15" fill="rgb(237,218,39)" fg:x="1156" fg:w="1"/><text x="92.5823%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4121%" y="485" width="0.0799%" height="15" fill="rgb(207,2,54)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4121%" y="469" width="0.0799%" height="15" fill="rgb(232,76,50)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4121%" y="453" width="0.0799%" height="15" fill="rgb(211,85,31)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4121%" y="437" width="0.0799%" height="15" fill="rgb(223,210,27)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4121%" y="421" width="0.0799%" height="15" fill="rgb(254,36,8)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4121%" y="405" width="0.0799%" height="15" fill="rgb(213,4,25)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.4121%" y="389" width="0.0799%" height="15" fill="rgb(224,2,39)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.4121%" y="373" width="0.0799%" height="15" fill="rgb(208,8,39)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.4121%" y="357" width="0.0799%" height="15" fill="rgb(216,226,3)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.4121%" y="341" width="0.0799%" height="15" fill="rgb(249,139,31)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.4121%" y="325" width="0.0799%" height="15" fill="rgb(242,170,35)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4920%" y="469" width="0.0799%" height="15" fill="rgb(238,14,9)" fg:x="1158" fg:w="1"/><text x="92.7420%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.5719%" y="181" width="0.0799%" height="15" fill="rgb(251,81,46)" fg:x="1159" fg:w="1"/><text x="92.8219%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.5719%" y="165" width="0.0799%" height="15" fill="rgb(230,23,4)" fg:x="1159" fg:w="1"/><text x="92.8219%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="92.5719%" y="357" width="0.1597%" height="15" fill="rgb(211,85,25)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="367.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="92.5719%" y="341" width="0.1597%" height="15" fill="rgb(252,23,31)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.5719%" y="325" width="0.1597%" height="15" fill="rgb(234,163,38)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.5719%" y="309" width="0.1597%" height="15" fill="rgb(210,190,50)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.5719%" y="293" width="0.1597%" height="15" fill="rgb(228,158,3)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.5719%" y="277" width="0.1597%" height="15" fill="rgb(216,130,0)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.5719%" y="261" width="0.1597%" height="15" fill="rgb(224,184,10)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="92.5719%" y="245" width="0.1597%" height="15" fill="rgb(214,202,18)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.5719%" y="229" width="0.1597%" height="15" fill="rgb(213,229,54)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.5719%" y="213" width="0.1597%" height="15" fill="rgb(246,120,0)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.5719%" y="197" width="0.1597%" height="15" fill="rgb(237,6,15)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.6518%" y="181" width="0.0799%" height="15" fill="rgb(252,156,15)" fg:x="1160" fg:w="1"/><text x="92.9018%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6518%" y="165" width="0.0799%" height="15" fill="rgb(249,78,18)" fg:x="1160" fg:w="1"/><text x="92.9018%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="92.6518%" y="149" width="0.0799%" height="15" fill="rgb(230,223,44)" fg:x="1160" fg:w="1"/><text x="92.9018%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="92.7316%" y="341" width="0.0799%" height="15" fill="rgb(230,222,32)" fg:x="1161" fg:w="1"/><text x="92.9816%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.7316%" y="325" width="0.0799%" height="15" fill="rgb(247,54,6)" fg:x="1161" fg:w="1"/><text x="92.9816%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="92.5719%" y="389" width="0.3195%" height="15" fill="rgb(247,115,45)" fg:x="1159" fg:w="4"/><text x="92.8219%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="92.5719%" y="373" width="0.3195%" height="15" fill="rgb(213,203,37)" fg:x="1159" fg:w="4"/><text x="92.8219%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="92.7316%" y="357" width="0.1597%" height="15" fill="rgb(248,188,18)" fg:x="1161" fg:w="2"/><text x="92.9816%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.8115%" y="341" width="0.0799%" height="15" fill="rgb(206,80,8)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.8115%" y="325" width="0.0799%" height="15" fill="rgb(245,217,31)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.8115%" y="309" width="0.0799%" height="15" fill="rgb(220,193,15)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8115%" y="293" width="0.0799%" height="15" fill="rgb(226,7,19)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.8115%" y="277" width="0.0799%" height="15" fill="rgb(222,145,31)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8115%" y="261" width="0.0799%" height="15" fill="rgb(241,193,36)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.8115%" y="245" width="0.0799%" height="15" fill="rgb(225,123,33)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8115%" y="229" width="0.0799%" height="15" fill="rgb(246,136,38)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.8115%" y="213" width="0.0799%" height="15" fill="rgb(243,56,24)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8115%" y="197" width="0.0799%" height="15" fill="rgb(215,147,2)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.8115%" y="181" width="0.0799%" height="15" fill="rgb(209,155,27)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.8914%" y="293" width="0.0799%" height="15" fill="rgb(222,177,11)" fg:x="1163" fg:w="1"/><text x="93.1414%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0511%" y="229" width="0.0799%" height="15" fill="rgb(212,227,15)" fg:x="1165" fg:w="1"/><text x="93.3011%" y="239.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="92.8914%" y="373" width="0.3195%" height="15" fill="rgb(214,138,20)" fg:x="1163" fg:w="4"/><text x="93.1414%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.8914%" y="357" width="0.3195%" height="15" fill="rgb(221,170,31)" fg:x="1163" fg:w="4"/><text x="93.1414%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.8914%" y="341" width="0.3195%" height="15" fill="rgb(253,207,5)" fg:x="1163" fg:w="4"/><text x="93.1414%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.8914%" y="325" width="0.3195%" height="15" fill="rgb(212,64,37)" fg:x="1163" fg:w="4"/><text x="93.1414%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.8914%" y="309" width="0.3195%" height="15" fill="rgb(208,113,51)" fg:x="1163" fg:w="4"/><text x="93.1414%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.9712%" y="293" width="0.2396%" height="15" fill="rgb(237,15,5)" fg:x="1164" fg:w="3"/><text x="93.2212%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.9712%" y="277" width="0.2396%" height="15" fill="rgb(238,33,18)" fg:x="1164" fg:w="3"/><text x="93.2212%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.9712%" y="261" width="0.2396%" height="15" fill="rgb(253,206,50)" fg:x="1164" fg:w="3"/><text x="93.2212%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.9712%" y="245" width="0.2396%" height="15" fill="rgb(242,158,43)" fg:x="1164" fg:w="3"/><text x="93.2212%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.1310%" y="229" width="0.0799%" height="15" fill="rgb(213,125,27)" fg:x="1166" fg:w="1"/><text x="93.3810%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.1310%" y="213" width="0.0799%" height="15" fill="rgb(233,161,31)" fg:x="1166" fg:w="1"/><text x="93.3810%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.1310%" y="197" width="0.0799%" height="15" fill="rgb(218,135,6)" fg:x="1166" fg:w="1"/><text x="93.3810%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="93.2109%" y="293" width="0.3994%" height="15" fill="rgb(222,73,53)" fg:x="1167" fg:w="5"/><text x="93.4609%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="93.2109%" y="277" width="0.3994%" height="15" fill="rgb(229,66,53)" fg:x="1167" fg:w="5"/><text x="93.4609%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="93.2109%" y="261" width="0.3994%" height="15" fill="rgb(208,128,19)" fg:x="1167" fg:w="5"/><text x="93.4609%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="93.2109%" y="245" width="0.3994%" height="15" fill="rgb(235,70,27)" fg:x="1167" fg:w="5"/><text x="93.4609%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="93.3706%" y="229" width="0.2396%" height="15" fill="rgb(241,130,30)" fg:x="1169" fg:w="3"/><text x="93.6206%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.4505%" y="213" width="0.1597%" height="15" fill="rgb(222,57,48)" fg:x="1170" fg:w="2"/><text x="93.7005%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="93.4505%" y="197" width="0.1597%" height="15" fill="rgb(225,204,29)" fg:x="1170" fg:w="2"/><text x="93.7005%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.4505%" y="181" width="0.1597%" height="15" fill="rgb(240,196,35)" fg:x="1170" fg:w="2"/><text x="93.7005%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.4505%" y="165" width="0.1597%" height="15" fill="rgb(215,150,16)" fg:x="1170" fg:w="2"/><text x="93.7005%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="93.5304%" y="149" width="0.0799%" height="15" fill="rgb(209,170,13)" fg:x="1171" fg:w="1"/><text x="93.7804%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.6102%" y="293" width="0.0799%" height="15" fill="rgb(235,75,31)" fg:x="1172" fg:w="1"/><text x="93.8602%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.6102%" y="277" width="0.0799%" height="15" fill="rgb(252,1,47)" fg:x="1172" fg:w="1"/><text x="93.8602%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.96%)</title><rect x="92.8914%" y="389" width="0.9585%" height="15" fill="rgb(241,2,36)" fg:x="1163" fg:w="12"/><text x="93.1414%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="93.2109%" y="373" width="0.6390%" height="15" fill="rgb(236,191,4)" fg:x="1167" fg:w="8"/><text x="93.4609%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="93.2109%" y="357" width="0.6390%" height="15" fill="rgb(212,65,35)" fg:x="1167" fg:w="8"/><text x="93.4609%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="93.2109%" y="341" width="0.6390%" height="15" fill="rgb(209,49,33)" fg:x="1167" fg:w="8"/><text x="93.4609%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="93.2109%" y="325" width="0.6390%" height="15" fill="rgb(208,36,46)" fg:x="1167" fg:w="8"/><text x="93.4609%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="93.2109%" y="309" width="0.6390%" height="15" fill="rgb(210,125,2)" fg:x="1167" fg:w="8"/><text x="93.4609%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.6901%" y="293" width="0.1597%" height="15" fill="rgb(225,62,6)" fg:x="1173" fg:w="2"/><text x="93.9401%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.6901%" y="277" width="0.1597%" height="15" fill="rgb(210,54,27)" fg:x="1173" fg:w="2"/><text x="93.9401%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="93.6901%" y="261" width="0.1597%" height="15" fill="rgb(249,189,52)" fg:x="1173" fg:w="2"/><text x="93.9401%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.6901%" y="245" width="0.1597%" height="15" fill="rgb(225,134,40)" fg:x="1173" fg:w="2"/><text x="93.9401%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.7700%" y="229" width="0.0799%" height="15" fill="rgb(206,13,37)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.7700%" y="213" width="0.0799%" height="15" fill="rgb(232,114,28)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7700%" y="197" width="0.0799%" height="15" fill="rgb(253,215,8)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.7700%" y="181" width="0.0799%" height="15" fill="rgb(254,64,19)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.7700%" y="165" width="0.0799%" height="15" fill="rgb(242,18,46)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7700%" y="149" width="0.0799%" height="15" fill="rgb(239,192,30)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.7700%" y="133" width="0.0799%" height="15" fill="rgb(232,73,14)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.7700%" y="117" width="0.0799%" height="15" fill="rgb(225,51,9)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7700%" y="101" width="0.0799%" height="15" fill="rgb(242,217,54)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.7700%" y="85" width="0.0799%" height="15" fill="rgb(216,93,3)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.7700%" y="69" width="0.0799%" height="15" fill="rgb(230,119,33)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="79.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.7700%" y="53" width="0.0799%" height="15" fill="rgb(238,170,27)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="63.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (18 samples, 1.44%)</title><rect x="92.4920%" y="485" width="1.4377%" height="15" fill="rgb(229,8,2)" fg:x="1158" fg:w="18"/><text x="92.7420%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 1.36%)</title><rect x="92.5719%" y="469" width="1.3578%" height="15" fill="rgb(205,214,42)" fg:x="1159" fg:w="17"/><text x="92.8219%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 1.36%)</title><rect x="92.5719%" y="453" width="1.3578%" height="15" fill="rgb(245,113,1)" fg:x="1159" fg:w="17"/><text x="92.8219%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (17 samples, 1.36%)</title><rect x="92.5719%" y="437" width="1.3578%" height="15" fill="rgb(252,50,2)" fg:x="1159" fg:w="17"/><text x="92.8219%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.36%)</title><rect x="92.5719%" y="421" width="1.3578%" height="15" fill="rgb(225,122,24)" fg:x="1159" fg:w="17"/><text x="92.8219%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.36%)</title><rect x="92.5719%" y="405" width="1.3578%" height="15" fill="rgb(234,129,31)" fg:x="1159" fg:w="17"/><text x="92.8219%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="93.8498%" y="389" width="0.0799%" height="15" fill="rgb(219,177,4)" fg:x="1175" fg:w="1"/><text x="94.0998%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.8498%" y="373" width="0.0799%" height="15" fill="rgb(225,142,27)" fg:x="1175" fg:w="1"/><text x="94.0998%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.8498%" y="357" width="0.0799%" height="15" fill="rgb(205,107,51)" fg:x="1175" fg:w="1"/><text x="94.0998%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="93.8498%" y="341" width="0.0799%" height="15" fill="rgb(236,223,15)" fg:x="1175" fg:w="1"/><text x="94.0998%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8498%" y="325" width="0.0799%" height="15" fill="rgb(235,133,11)" fg:x="1175" fg:w="1"/><text x="94.0998%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.9297%" y="485" width="0.0799%" height="15" fill="rgb(247,172,13)" fg:x="1176" fg:w="1"/><text x="94.1797%" y="495.50"></text></g><g><title>plugins_core::tools::get_contained_keys (22 samples, 1.76%)</title><rect x="92.4121%" y="533" width="1.7572%" height="15" fill="rgb(233,191,41)" fg:x="1157" fg:w="22"/><text x="92.6621%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (22 samples, 1.76%)</title><rect x="92.4121%" y="517" width="1.7572%" height="15" fill="rgb(250,65,16)" fg:x="1157" fg:w="22"/><text x="92.6621%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (22 samples, 1.76%)</title><rect x="92.4121%" y="501" width="1.7572%" height="15" fill="rgb(206,10,27)" fg:x="1157" fg:w="22"/><text x="92.6621%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.0096%" y="485" width="0.1597%" height="15" fill="rgb(212,96,22)" fg:x="1177" fg:w="2"/><text x="94.2596%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0895%" y="469" width="0.0799%" height="15" fill="rgb(206,50,0)" fg:x="1178" fg:w="1"/><text x="94.3395%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.0895%" y="453" width="0.0799%" height="15" fill="rgb(249,105,52)" fg:x="1178" fg:w="1"/><text x="94.3395%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.0895%" y="437" width="0.0799%" height="15" fill="rgb(216,93,51)" fg:x="1178" fg:w="1"/><text x="94.3395%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="94.0895%" y="421" width="0.0799%" height="15" fill="rgb(217,172,13)" fg:x="1178" fg:w="1"/><text x="94.3395%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0895%" y="405" width="0.0799%" height="15" fill="rgb(235,199,38)" fg:x="1178" fg:w="1"/><text x="94.3395%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0895%" y="389" width="0.0799%" height="15" fill="rgb(221,97,33)" fg:x="1178" fg:w="1"/><text x="94.3395%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 2.80%)</title><rect x="91.4537%" y="565" width="2.7955%" height="15" fill="rgb(205,156,50)" fg:x="1145" fg:w="35"/><text x="91.7037%" y="575.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 2.80%)</title><rect x="91.4537%" y="549" width="2.7955%" height="15" fill="rgb(215,142,19)" fg:x="1145" fg:w="35"/><text x="91.7037%" y="559.50">&lt;c..</text></g><g><title>plugins_core::tools::get_occupant_keys (1 samples, 0.08%)</title><rect x="94.1693%" y="533" width="0.0799%" height="15" fill="rgb(232,170,7)" fg:x="1179" fg:w="1"/><text x="94.4193%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="94.1693%" y="517" width="0.0799%" height="15" fill="rgb(223,50,17)" fg:x="1179" fg:w="1"/><text x="94.4193%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.1693%" y="501" width="0.0799%" height="15" fill="rgb(230,103,46)" fg:x="1179" fg:w="1"/><text x="94.4193%" y="511.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="94.9681%" y="213" width="0.3195%" height="15" fill="rgb(254,30,34)" fg:x="1189" fg:w="4"/><text x="95.2181%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="94.9681%" y="197" width="0.3195%" height="15" fill="rgb(235,198,1)" fg:x="1189" fg:w="4"/><text x="95.2181%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="95.1278%" y="181" width="0.1597%" height="15" fill="rgb(217,105,47)" fg:x="1191" fg:w="2"/><text x="95.3778%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.2077%" y="165" width="0.0799%" height="15" fill="rgb(231,18,12)" fg:x="1192" fg:w="1"/><text x="95.4577%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.2077%" y="149" width="0.0799%" height="15" fill="rgb(218,196,1)" fg:x="1192" fg:w="1"/><text x="95.4577%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.40%)</title><rect x="94.9681%" y="261" width="0.3994%" height="15" fill="rgb(210,32,3)" fg:x="1189" fg:w="5"/><text x="95.2181%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="94.9681%" y="245" width="0.3994%" height="15" fill="rgb(227,178,30)" fg:x="1189" fg:w="5"/><text x="95.2181%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.40%)</title><rect x="94.9681%" y="229" width="0.3994%" height="15" fill="rgb(231,140,27)" fg:x="1189" fg:w="5"/><text x="95.2181%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2875%" y="213" width="0.0799%" height="15" fill="rgb(206,66,35)" fg:x="1193" fg:w="1"/><text x="95.5375%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.2875%" y="197" width="0.0799%" height="15" fill="rgb(212,34,2)" fg:x="1193" fg:w="1"/><text x="95.5375%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.2875%" y="181" width="0.0799%" height="15" fill="rgb(207,201,33)" fg:x="1193" fg:w="1"/><text x="95.5375%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.72%)</title><rect x="94.8083%" y="325" width="0.7188%" height="15" fill="rgb(221,135,32)" fg:x="1187" fg:w="9"/><text x="95.0583%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (8 samples, 0.64%)</title><rect x="94.8882%" y="309" width="0.6390%" height="15" fill="rgb(206,77,31)" fg:x="1188" fg:w="8"/><text x="95.1382%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="94.8882%" y="293" width="0.6390%" height="15" fill="rgb(252,198,50)" fg:x="1188" fg:w="8"/><text x="95.1382%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.64%)</title><rect x="94.8882%" y="277" width="0.6390%" height="15" fill="rgb(206,79,27)" fg:x="1188" fg:w="8"/><text x="95.1382%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.3674%" y="261" width="0.1597%" height="15" fill="rgb(228,108,9)" fg:x="1194" fg:w="2"/><text x="95.6174%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.4473%" y="245" width="0.0799%" height="15" fill="rgb(213,9,39)" fg:x="1195" fg:w="1"/><text x="95.6973%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="94.8083%" y="341" width="0.7987%" height="15" fill="rgb(252,51,13)" fg:x="1187" fg:w="10"/><text x="95.0583%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.5272%" y="325" width="0.0799%" height="15" fill="rgb(218,202,39)" fg:x="1196" fg:w="1"/><text x="95.7772%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5272%" y="309" width="0.0799%" height="15" fill="rgb(214,122,21)" fg:x="1196" fg:w="1"/><text x="95.7772%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.96%)</title><rect x="94.7284%" y="357" width="0.9585%" height="15" fill="rgb(217,205,48)" fg:x="1186" fg:w="12"/><text x="94.9784%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.6070%" y="341" width="0.0799%" height="15" fill="rgb(230,216,13)" fg:x="1197" fg:w="1"/><text x="95.8570%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.6070%" y="325" width="0.0799%" height="15" fill="rgb(249,118,4)" fg:x="1197" fg:w="1"/><text x="95.8570%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.6070%" y="309" width="0.0799%" height="15" fill="rgb(212,207,40)" fg:x="1197" fg:w="1"/><text x="95.8570%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.6070%" y="293" width="0.0799%" height="15" fill="rgb(217,156,26)" fg:x="1197" fg:w="1"/><text x="95.8570%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.6070%" y="277" width="0.0799%" height="15" fill="rgb(226,86,34)" fg:x="1197" fg:w="1"/><text x="95.8570%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6070%" y="261" width="0.0799%" height="15" fill="rgb(217,111,30)" fg:x="1197" fg:w="1"/><text x="95.8570%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.6869%" y="357" width="0.0799%" height="15" fill="rgb(228,64,18)" fg:x="1198" fg:w="1"/><text x="95.9369%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (15 samples, 1.20%)</title><rect x="94.6486%" y="405" width="1.1981%" height="15" fill="rgb(254,217,48)" fg:x="1185" fg:w="15"/><text x="94.8986%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15 samples, 1.20%)</title><rect x="94.6486%" y="389" width="1.1981%" height="15" fill="rgb(226,156,48)" fg:x="1185" fg:w="15"/><text x="94.8986%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.20%)</title><rect x="94.6486%" y="373" width="1.1981%" height="15" fill="rgb(236,168,20)" fg:x="1185" fg:w="15"/><text x="94.8986%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7668%" y="357" width="0.0799%" height="15" fill="rgb(239,210,33)" fg:x="1199" fg:w="1"/><text x="96.0168%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.52%)</title><rect x="94.4089%" y="421" width="1.5176%" height="15" fill="rgb(242,85,17)" fg:x="1182" fg:w="19"/><text x="94.6589%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8466%" y="405" width="0.0799%" height="15" fill="rgb(221,196,15)" fg:x="1200" fg:w="1"/><text x="96.0966%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.8466%" y="389" width="0.0799%" height="15" fill="rgb(249,76,21)" fg:x="1200" fg:w="1"/><text x="96.0966%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.8466%" y="373" width="0.0799%" height="15" fill="rgb(243,67,29)" fg:x="1200" fg:w="1"/><text x="96.0966%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (21 samples, 1.68%)</title><rect x="94.3291%" y="453" width="1.6773%" height="15" fill="rgb(240,159,2)" fg:x="1181" fg:w="21"/><text x="94.5791%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (21 samples, 1.68%)</title><rect x="94.3291%" y="437" width="1.6773%" height="15" fill="rgb(244,64,3)" fg:x="1181" fg:w="21"/><text x="94.5791%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.9265%" y="421" width="0.0799%" height="15" fill="rgb(220,86,40)" fg:x="1201" fg:w="1"/><text x="96.1765%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9265%" y="405" width="0.0799%" height="15" fill="rgb(222,194,51)" fg:x="1201" fg:w="1"/><text x="96.1765%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.0064%" y="437" width="0.0799%" height="15" fill="rgb(207,154,19)" fg:x="1202" fg:w="1"/><text x="96.2564%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (24 samples, 1.92%)</title><rect x="94.2492%" y="501" width="1.9169%" height="15" fill="rgb(206,178,36)" fg:x="1180" fg:w="24"/><text x="94.4992%" y="511.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (24 samples, 1.92%)</title><rect x="94.2492%" y="485" width="1.9169%" height="15" fill="rgb(218,8,24)" fg:x="1180" fg:w="24"/><text x="94.4992%" y="495.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 1.92%)</title><rect x="94.2492%" y="469" width="1.9169%" height="15" fill="rgb(226,83,41)" fg:x="1180" fg:w="24"/><text x="94.4992%" y="479.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.0064%" y="453" width="0.1597%" height="15" fill="rgb(224,23,22)" fg:x="1202" fg:w="2"/><text x="96.2564%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0863%" y="437" width="0.0799%" height="15" fill="rgb(218,198,45)" fg:x="1203" fg:w="1"/><text x="96.3363%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="96.1661%" y="453" width="0.0799%" height="15" fill="rgb(249,147,41)" fg:x="1204" fg:w="1"/><text x="96.4161%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="96.2460%" y="453" width="0.0799%" height="15" fill="rgb(244,224,13)" fg:x="1205" fg:w="1"/><text x="96.4960%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.2460%" y="437" width="0.0799%" height="15" fill="rgb(225,97,27)" fg:x="1205" fg:w="1"/><text x="96.4960%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.3259%" y="405" width="0.0799%" height="15" fill="rgb(254,64,0)" fg:x="1206" fg:w="1"/><text x="96.5759%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.3259%" y="389" width="0.0799%" height="15" fill="rgb(208,130,43)" fg:x="1206" fg:w="1"/><text x="96.5759%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3259%" y="373" width="0.0799%" height="15" fill="rgb(247,91,25)" fg:x="1206" fg:w="1"/><text x="96.5759%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="96.4058%" y="389" width="0.0799%" height="15" fill="rgb(215,218,42)" fg:x="1207" fg:w="1"/><text x="96.6558%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.4058%" y="373" width="0.0799%" height="15" fill="rgb(233,9,24)" fg:x="1207" fg:w="1"/><text x="96.6558%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="96.4856%" y="373" width="0.1597%" height="15" fill="rgb(252,105,38)" fg:x="1208" fg:w="2"/><text x="96.7356%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5655%" y="357" width="0.0799%" height="15" fill="rgb(225,40,49)" fg:x="1209" fg:w="1"/><text x="96.8155%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5655%" y="341" width="0.0799%" height="15" fill="rgb(232,196,19)" fg:x="1209" fg:w="1"/><text x="96.8155%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5655%" y="325" width="0.0799%" height="15" fill="rgb(207,35,15)" fg:x="1209" fg:w="1"/><text x="96.8155%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="96.4058%" y="405" width="0.3195%" height="15" fill="rgb(238,68,36)" fg:x="1207" fg:w="4"/><text x="96.6558%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="96.4856%" y="389" width="0.2396%" height="15" fill="rgb(205,158,20)" fg:x="1208" fg:w="3"/><text x="96.7356%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6454%" y="373" width="0.0799%" height="15" fill="rgb(232,32,22)" fg:x="1210" fg:w="1"/><text x="96.8954%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8850%" y="341" width="0.0799%" height="15" fill="rgb(210,169,6)" fg:x="1213" fg:w="1"/><text x="97.1350%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8850%" y="325" width="0.0799%" height="15" fill="rgb(229,28,12)" fg:x="1213" fg:w="1"/><text x="97.1350%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8850%" y="309" width="0.0799%" height="15" fill="rgb(229,78,10)" fg:x="1213" fg:w="1"/><text x="97.1350%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.0447%" y="309" width="0.2396%" height="15" fill="rgb(223,139,54)" fg:x="1215" fg:w="3"/><text x="97.2947%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.0447%" y="293" width="0.2396%" height="15" fill="rgb(207,110,4)" fg:x="1215" fg:w="3"/><text x="97.2947%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="97.0447%" y="277" width="0.2396%" height="15" fill="rgb(248,30,41)" fg:x="1215" fg:w="3"/><text x="97.2947%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="97.0447%" y="325" width="0.3195%" height="15" fill="rgb(235,54,25)" fg:x="1215" fg:w="4"/><text x="97.2947%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="97.2843%" y="309" width="0.0799%" height="15" fill="rgb(213,107,41)" fg:x="1218" fg:w="1"/><text x="97.5343%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="96.8850%" y="357" width="0.6390%" height="15" fill="rgb(237,102,9)" fg:x="1213" fg:w="8"/><text x="97.1350%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="96.9649%" y="341" width="0.5591%" height="15" fill="rgb(252,137,49)" fg:x="1214" fg:w="7"/><text x="97.2149%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.3642%" y="325" width="0.1597%" height="15" fill="rgb(233,202,33)" fg:x="1219" fg:w="2"/><text x="97.6142%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="96.7252%" y="389" width="0.9585%" height="15" fill="rgb(223,14,51)" fg:x="1211" fg:w="12"/><text x="96.9752%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="96.8850%" y="373" width="0.7987%" height="15" fill="rgb(248,70,23)" fg:x="1213" fg:w="10"/><text x="97.1350%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.5240%" y="357" width="0.1597%" height="15" fill="rgb(209,207,47)" fg:x="1221" fg:w="2"/><text x="97.7740%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.52%)</title><rect x="96.3259%" y="421" width="1.5176%" height="15" fill="rgb(245,124,2)" fg:x="1206" fg:w="19"/><text x="96.5759%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="96.7252%" y="405" width="1.1182%" height="15" fill="rgb(249,208,11)" fg:x="1211" fg:w="14"/><text x="96.9752%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.6837%" y="389" width="0.1597%" height="15" fill="rgb(247,112,7)" fg:x="1223" fg:w="2"/><text x="97.9337%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 1.76%)</title><rect x="96.3259%" y="437" width="1.7572%" height="15" fill="rgb(209,192,31)" fg:x="1206" fg:w="22"/><text x="96.5759%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="97.8435%" y="421" width="0.2396%" height="15" fill="rgb(236,55,19)" fg:x="1225" fg:w="3"/><text x="98.0935%" y="431.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (49 samples, 3.91%)</title><rect x="94.2492%" y="517" width="3.9137%" height="15" fill="rgb(252,89,41)" fg:x="1180" fg:w="49"/><text x="94.4992%" y="527.50">&lt;rpc..</text></g><g><title>kernel::model::EntityPtr::to_json_value (25 samples, 2.00%)</title><rect x="96.1661%" y="501" width="1.9968%" height="15" fill="rgb(220,172,14)" fg:x="1204" fg:w="25"/><text x="96.4161%" y="511.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (25 samples, 2.00%)</title><rect x="96.1661%" y="485" width="1.9968%" height="15" fill="rgb(252,65,2)" fg:x="1204" fg:w="25"/><text x="96.4161%" y="495.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.00%)</title><rect x="96.1661%" y="469" width="1.9968%" height="15" fill="rgb(250,20,8)" fg:x="1204" fg:w="25"/><text x="96.4161%" y="479.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.84%)</title><rect x="96.3259%" y="453" width="1.8371%" height="15" fill="rgb(234,149,13)" fg:x="1206" fg:w="23"/><text x="96.5759%" y="463.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.0831%" y="437" width="0.0799%" height="15" fill="rgb(223,219,12)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.0831%" y="421" width="0.0799%" height="15" fill="rgb(234,13,49)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.0831%" y="405" width="0.0799%" height="15" fill="rgb(214,41,25)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (107 samples, 8.55%)</title><rect x="89.6965%" y="661" width="8.5463%" height="15" fill="rgb(232,198,52)" fg:x="1123" fg:w="107"/><text x="89.9465%" y="671.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (96 samples, 7.67%)</title><rect x="90.5751%" y="645" width="7.6677%" height="15" fill="rgb(236,111,46)" fg:x="1134" fg:w="96"/><text x="90.8251%" y="655.50">kernel::pl..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (95 samples, 7.59%)</title><rect x="90.6550%" y="629" width="7.5879%" height="15" fill="rgb(253,30,20)" fg:x="1135" fg:w="95"/><text x="90.9050%" y="639.50">&lt;plugins_d..</text></g><g><title>plugins_rpc::querying::have_surroundings (87 samples, 6.95%)</title><rect x="91.2939%" y="613" width="6.9489%" height="15" fill="rgb(247,141,17)" fg:x="1143" fg:w="87"/><text x="91.5439%" y="623.50">plugins_r..</text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (87 samples, 6.95%)</title><rect x="91.2939%" y="597" width="6.9489%" height="15" fill="rgb(214,195,21)" fg:x="1143" fg:w="87"/><text x="91.5439%" y="607.50">&lt;plugins_..</text></g><g><title>core::iter::adapters::try_process (85 samples, 6.79%)</title><rect x="91.4537%" y="581" width="6.7891%" height="15" fill="rgb(214,98,12)" fg:x="1145" fg:w="85"/><text x="91.7037%" y="591.50">core::ite..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (50 samples, 3.99%)</title><rect x="94.2492%" y="565" width="3.9936%" height="15" fill="rgb(239,4,26)" fg:x="1180" fg:w="50"/><text x="94.4992%" y="575.50">allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50 samples, 3.99%)</title><rect x="94.2492%" y="549" width="3.9936%" height="15" fill="rgb(234,210,35)" fg:x="1180" fg:w="50"/><text x="94.4992%" y="559.50">&lt;cor..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (50 samples, 3.99%)</title><rect x="94.2492%" y="533" width="3.9936%" height="15" fill="rgb(252,178,27)" fg:x="1180" fg:w="50"/><text x="94.4992%" y="543.50">plug..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="98.1629%" y="517" width="0.0799%" height="15" fill="rgb(217,50,1)" fg:x="1229" fg:w="1"/><text x="98.4129%" y="527.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="98.1629%" y="501" width="0.0799%" height="15" fill="rgb(233,137,5)" fg:x="1229" fg:w="1"/><text x="98.4129%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1629%" y="485" width="0.0799%" height="15" fill="rgb(217,227,25)" fg:x="1229" fg:w="1"/><text x="98.4129%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="98.2428%" y="629" width="0.1597%" height="15" fill="rgb(242,89,38)" fg:x="1230" fg:w="2"/><text x="98.4928%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="98.2428%" y="613" width="0.1597%" height="15" fill="rgb(212,190,30)" fg:x="1230" fg:w="2"/><text x="98.4928%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.2428%" y="597" width="0.1597%" height="15" fill="rgb(222,120,8)" fg:x="1230" fg:w="2"/><text x="98.4928%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="98.2428%" y="581" width="0.1597%" height="15" fill="rgb(227,181,9)" fg:x="1230" fg:w="2"/><text x="98.4928%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.2428%" y="565" width="0.1597%" height="15" fill="rgb(222,125,29)" fg:x="1230" fg:w="2"/><text x="98.4928%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3227%" y="549" width="0.0799%" height="15" fill="rgb(215,153,31)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3227%" y="533" width="0.0799%" height="15" fill="rgb(228,77,30)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3227%" y="517" width="0.0799%" height="15" fill="rgb(226,110,9)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3227%" y="501" width="0.0799%" height="15" fill="rgb(219,111,7)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.3227%" y="485" width="0.0799%" height="15" fill="rgb(229,167,25)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3227%" y="469" width="0.0799%" height="15" fill="rgb(209,77,43)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3227%" y="453" width="0.0799%" height="15" fill="rgb(233,70,39)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3227%" y="437" width="0.0799%" height="15" fill="rgb(207,171,44)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3227%" y="421" width="0.0799%" height="15" fill="rgb(244,91,6)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3227%" y="405" width="0.0799%" height="15" fill="rgb(234,136,12)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.4824%" y="501" width="0.0799%" height="15" fill="rgb(216,210,38)" fg:x="1233" fg:w="1"/><text x="98.7324%" y="511.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="98.4026%" y="613" width="0.2396%" height="15" fill="rgb(241,227,7)" fg:x="1232" fg:w="3"/><text x="98.6526%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4026%" y="597" width="0.2396%" height="15" fill="rgb(241,222,11)" fg:x="1232" fg:w="3"/><text x="98.6526%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4026%" y="581" width="0.2396%" height="15" fill="rgb(246,86,18)" fg:x="1232" fg:w="3"/><text x="98.6526%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4026%" y="565" width="0.2396%" height="15" fill="rgb(224,151,49)" fg:x="1232" fg:w="3"/><text x="98.6526%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4026%" y="549" width="0.2396%" height="15" fill="rgb(235,4,41)" fg:x="1232" fg:w="3"/><text x="98.6526%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.4824%" y="533" width="0.1597%" height="15" fill="rgb(218,30,52)" fg:x="1233" fg:w="2"/><text x="98.7324%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4824%" y="517" width="0.1597%" height="15" fill="rgb(205,124,51)" fg:x="1233" fg:w="2"/><text x="98.7324%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.5623%" y="501" width="0.0799%" height="15" fill="rgb(237,126,51)" fg:x="1234" fg:w="1"/><text x="98.8123%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5623%" y="485" width="0.0799%" height="15" fill="rgb(225,32,46)" fg:x="1234" fg:w="1"/><text x="98.8123%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8019%" y="533" width="0.1597%" height="15" fill="rgb(251,60,49)" fg:x="1237" fg:w="2"/><text x="99.0519%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8818%" y="517" width="0.0799%" height="15" fill="rgb(234,18,23)" fg:x="1238" fg:w="1"/><text x="99.1318%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.8818%" y="501" width="0.0799%" height="15" fill="rgb(234,25,23)" fg:x="1238" fg:w="1"/><text x="99.1318%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8818%" y="485" width="0.0799%" height="15" fill="rgb(210,43,52)" fg:x="1238" fg:w="1"/><text x="99.1318%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8818%" y="469" width="0.0799%" height="15" fill="rgb(237,198,21)" fg:x="1238" fg:w="1"/><text x="99.1318%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8818%" y="453" width="0.0799%" height="15" fill="rgb(211,20,34)" fg:x="1238" fg:w="1"/><text x="99.1318%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.8818%" y="437" width="0.0799%" height="15" fill="rgb(221,155,50)" fg:x="1238" fg:w="1"/><text x="99.1318%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8818%" y="421" width="0.0799%" height="15" fill="rgb(213,214,53)" fg:x="1238" fg:w="1"/><text x="99.1318%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8818%" y="405" width="0.0799%" height="15" fill="rgb(215,229,48)" fg:x="1238" fg:w="1"/><text x="99.1318%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.9617%" y="469" width="0.0799%" height="15" fill="rgb(243,88,5)" fg:x="1239" fg:w="1"/><text x="99.2117%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (9 samples, 0.72%)</title><rect x="98.4026%" y="629" width="0.7188%" height="15" fill="rgb(216,199,8)" fg:x="1232" fg:w="9"/><text x="98.6526%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="98.6422%" y="613" width="0.4792%" height="15" fill="rgb(241,22,4)" fg:x="1235" fg:w="6"/><text x="98.8922%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="98.6422%" y="597" width="0.4792%" height="15" fill="rgb(209,190,22)" fg:x="1235" fg:w="6"/><text x="98.8922%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="98.8019%" y="581" width="0.3195%" height="15" fill="rgb(251,138,45)" fg:x="1237" fg:w="4"/><text x="99.0519%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.8019%" y="565" width="0.3195%" height="15" fill="rgb(219,111,22)" fg:x="1237" fg:w="4"/><text x="99.0519%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.8019%" y="549" width="0.3195%" height="15" fill="rgb(253,29,49)" fg:x="1237" fg:w="4"/><text x="99.0519%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="98.9617%" y="533" width="0.1597%" height="15" fill="rgb(238,129,49)" fg:x="1239" fg:w="2"/><text x="99.2117%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="98.9617%" y="517" width="0.1597%" height="15" fill="rgb(240,26,41)" fg:x="1239" fg:w="2"/><text x="99.2117%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="98.9617%" y="501" width="0.1597%" height="15" fill="rgb(221,47,33)" fg:x="1239" fg:w="2"/><text x="99.2117%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="98.9617%" y="485" width="0.1597%" height="15" fill="rgb(216,200,17)" fg:x="1239" fg:w="2"/><text x="99.2117%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.0415%" y="469" width="0.0799%" height="15" fill="rgb(230,151,26)" fg:x="1240" fg:w="1"/><text x="99.2915%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.1214%" y="485" width="0.0799%" height="15" fill="rgb(242,182,16)" fg:x="1241" fg:w="1"/><text x="99.3714%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.04%)</title><rect x="98.2428%" y="661" width="1.0383%" height="15" fill="rgb(236,35,53)" fg:x="1230" fg:w="13"/><text x="98.4928%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.04%)</title><rect x="98.2428%" y="645" width="1.0383%" height="15" fill="rgb(214,180,28)" fg:x="1230" fg:w="13"/><text x="98.4928%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.1214%" y="629" width="0.1597%" height="15" fill="rgb(208,173,36)" fg:x="1241" fg:w="2"/><text x="99.3714%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="99.1214%" y="613" width="0.1597%" height="15" fill="rgb(218,39,15)" fg:x="1241" fg:w="2"/><text x="99.3714%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.1214%" y="597" width="0.1597%" height="15" fill="rgb(213,145,15)" fg:x="1241" fg:w="2"/><text x="99.3714%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1214%" y="581" width="0.1597%" height="15" fill="rgb(242,110,37)" fg:x="1241" fg:w="2"/><text x="99.3714%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1214%" y="565" width="0.1597%" height="15" fill="rgb(247,146,22)" fg:x="1241" fg:w="2"/><text x="99.3714%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1214%" y="549" width="0.1597%" height="15" fill="rgb(215,191,7)" fg:x="1241" fg:w="2"/><text x="99.3714%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1214%" y="533" width="0.1597%" height="15" fill="rgb(240,158,1)" fg:x="1241" fg:w="2"/><text x="99.3714%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.1214%" y="517" width="0.1597%" height="15" fill="rgb(241,78,32)" fg:x="1241" fg:w="2"/><text x="99.3714%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1214%" y="501" width="0.1597%" height="15" fill="rgb(248,83,10)" fg:x="1241" fg:w="2"/><text x="99.3714%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2013%" y="485" width="0.0799%" height="15" fill="rgb(241,52,0)" fg:x="1242" fg:w="1"/><text x="99.4513%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2013%" y="469" width="0.0799%" height="15" fill="rgb(238,37,13)" fg:x="1242" fg:w="1"/><text x="99.4513%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2013%" y="453" width="0.0799%" height="15" fill="rgb(242,194,17)" fg:x="1242" fg:w="1"/><text x="99.4513%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2013%" y="437" width="0.0799%" height="15" fill="rgb(236,96,3)" fg:x="1242" fg:w="1"/><text x="99.4513%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2812%" y="533" width="0.0799%" height="15" fill="rgb(235,148,34)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2812%" y="517" width="0.0799%" height="15" fill="rgb(254,12,11)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2812%" y="501" width="0.0799%" height="15" fill="rgb(207,31,54)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2812%" y="485" width="0.0799%" height="15" fill="rgb(252,14,28)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2812%" y="469" width="0.0799%" height="15" fill="rgb(252,108,36)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="99.2812%" y="613" width="0.1597%" height="15" fill="rgb(214,149,7)" fg:x="1243" fg:w="2"/><text x="99.5312%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="99.2812%" y="597" width="0.1597%" height="15" fill="rgb(243,94,12)" fg:x="1243" fg:w="2"/><text x="99.5312%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.2812%" y="581" width="0.1597%" height="15" fill="rgb(208,36,10)" fg:x="1243" fg:w="2"/><text x="99.5312%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="99.2812%" y="565" width="0.1597%" height="15" fill="rgb(233,185,52)" fg:x="1243" fg:w="2"/><text x="99.5312%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.2812%" y="549" width="0.1597%" height="15" fill="rgb(234,50,45)" fg:x="1243" fg:w="2"/><text x="99.5312%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3610%" y="533" width="0.0799%" height="15" fill="rgb(228,92,54)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3610%" y="517" width="0.0799%" height="15" fill="rgb(224,85,25)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3610%" y="501" width="0.0799%" height="15" fill="rgb(246,1,45)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3610%" y="485" width="0.0799%" height="15" fill="rgb(240,66,23)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (1 samples, 0.08%)</title><rect x="99.4409%" y="613" width="0.0799%" height="15" fill="rgb(222,96,27)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="623.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.4409%" y="597" width="0.0799%" height="15" fill="rgb(212,136,10)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4409%" y="581" width="0.0799%" height="15" fill="rgb(226,192,50)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4409%" y="565" width="0.0799%" height="15" fill="rgb(241,182,31)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4409%" y="549" width="0.0799%" height="15" fill="rgb(219,205,47)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4409%" y="533" width="0.0799%" height="15" fill="rgb(207,96,14)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4409%" y="517" width="0.0799%" height="15" fill="rgb(216,119,9)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4409%" y="501" width="0.0799%" height="15" fill="rgb(235,62,36)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4409%" y="485" width="0.0799%" height="15" fill="rgb(214,41,27)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4409%" y="469" width="0.0799%" height="15" fill="rgb(214,174,37)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4409%" y="453" width="0.0799%" height="15" fill="rgb(212,11,25)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4409%" y="437" width="0.0799%" height="15" fill="rgb(217,71,35)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4409%" y="421" width="0.0799%" height="15" fill="rgb(234,152,9)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4409%" y="405" width="0.0799%" height="15" fill="rgb(228,32,51)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4409%" y="389" width="0.0799%" height="15" fill="rgb(209,14,47)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4409%" y="373" width="0.0799%" height="15" fill="rgb(218,201,17)" fg:x="1245" fg:w="1"/><text x="99.6909%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="99.2812%" y="629" width="0.3195%" height="15" fill="rgb(218,98,15)" fg:x="1243" fg:w="4"/><text x="99.5312%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.5208%" y="613" width="0.0799%" height="15" fill="rgb(233,202,29)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.5208%" y="597" width="0.0799%" height="15" fill="rgb(207,196,44)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.5208%" y="581" width="0.0799%" height="15" fill="rgb(218,63,34)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5208%" y="565" width="0.0799%" height="15" fill="rgb(209,10,5)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5208%" y="549" width="0.0799%" height="15" fill="rgb(224,36,28)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5208%" y="533" width="0.0799%" height="15" fill="rgb(249,178,7)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5208%" y="517" width="0.0799%" height="15" fill="rgb(253,163,10)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.5208%" y="501" width="0.0799%" height="15" fill="rgb(245,67,46)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5208%" y="485" width="0.0799%" height="15" fill="rgb(225,14,18)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.5208%" y="469" width="0.0799%" height="15" fill="rgb(217,41,54)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="99.2812%" y="645" width="0.3994%" height="15" fill="rgb(222,111,11)" fg:x="1243" fg:w="5"/><text x="99.5312%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.6006%" y="629" width="0.0799%" height="15" fill="rgb(211,85,31)" fg:x="1247" fg:w="1"/><text x="99.8506%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6805%" y="549" width="0.0799%" height="15" fill="rgb(223,29,26)" fg:x="1248" fg:w="1"/><text x="99.9305%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6805%" y="533" width="0.0799%" height="15" fill="rgb(236,124,50)" fg:x="1248" fg:w="1"/><text x="99.9305%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.6805%" y="517" width="0.0799%" height="15" fill="rgb(219,148,15)" fg:x="1248" fg:w="1"/><text x="99.9305%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.6805%" y="501" width="0.0799%" height="15" fill="rgb(248,159,33)" fg:x="1248" fg:w="1"/><text x="99.9305%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.6805%" y="485" width="0.0799%" height="15" fill="rgb(252,65,8)" fg:x="1248" fg:w="1"/><text x="99.9305%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (7 samples, 0.56%)</title><rect x="99.2812%" y="661" width="0.5591%" height="15" fill="rgb(236,45,7)" fg:x="1243" fg:w="7"/><text x="99.5312%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.6805%" y="645" width="0.1597%" height="15" fill="rgb(244,3,48)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="99.6805%" y="629" width="0.1597%" height="15" fill="rgb(224,123,53)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="99.6805%" y="613" width="0.1597%" height="15" fill="rgb(223,173,15)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.6805%" y="597" width="0.1597%" height="15" fill="rgb(254,181,5)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.6805%" y="581" width="0.1597%" height="15" fill="rgb(243,124,33)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="99.6805%" y="565" width="0.1597%" height="15" fill="rgb(253,220,11)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7604%" y="549" width="0.0799%" height="15" fill="rgb(217,14,4)" fg:x="1249" fg:w="1"/><text x="100.0104%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7604%" y="533" width="0.0799%" height="15" fill="rgb(209,196,12)" fg:x="1249" fg:w="1"/><text x="100.0104%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.7604%" y="517" width="0.0799%" height="15" fill="rgb(237,108,29)" fg:x="1249" fg:w="1"/><text x="100.0104%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.7604%" y="501" width="0.0799%" height="15" fill="rgb(216,173,20)" fg:x="1249" fg:w="1"/><text x="100.0104%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.7604%" y="485" width="0.0799%" height="15" fill="rgb(245,27,6)" fg:x="1249" fg:w="1"/><text x="100.0104%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.7604%" y="469" width="0.0799%" height="15" fill="rgb(210,181,20)" fg:x="1249" fg:w="1"/><text x="100.0104%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.7604%" y="453" width="0.0799%" height="15" fill="rgb(235,213,1)" fg:x="1249" fg:w="1"/><text x="100.0104%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.7604%" y="437" width="0.0799%" height="15" fill="rgb(239,68,43)" fg:x="1249" fg:w="1"/><text x="100.0104%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.7604%" y="421" width="0.0799%" height="15" fill="rgb(254,137,43)" fg:x="1249" fg:w="1"/><text x="100.0104%" y="431.50"></text></g><g><title>all (1,252 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(252,170,38)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="1039.50"></text></g><g><title>simple-484c7248 (1,252 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(234,21,42)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="1023.50">simple-484c7248</text></g><g><title>_start (1,252 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(216,145,40)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="1007.50">_start</text></g><g><title>__libc_start_main (1,252 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(251,73,9)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="991.50">__libc_start_main</text></g><g><title>main (1,252 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(242,54,6)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="975.50">main</text></g><g><title>std::rt::lang_start_internal (1,252 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(239,70,7)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,252 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(216,159,35)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,252 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(224,50,39)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,252 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(235,9,35)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,252 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(239,34,21)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,252 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(218,162,43)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,252 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(219,89,33)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,252 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(226,125,37)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,252 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(233,149,30)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="831.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,252 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(236,8,18)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="815.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,252 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(205,176,9)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,252 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(252,103,44)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="783.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,252 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(207,68,53)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="767.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,252 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(218,193,48)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="751.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (260 samples, 20.77%)</title><rect x="79.2332%" y="725" width="20.7668%" height="15" fill="rgb(234,121,52)" fg:x="992" fg:w="260"/><text x="79.4832%" y="735.50">&lt;criterion::routine::Function&lt;M,F..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (260 samples, 20.77%)</title><rect x="79.2332%" y="709" width="20.7668%" height="15" fill="rgb(227,218,49)" fg:x="992" fg:w="260"/><text x="79.4832%" y="719.50">criterion::bencher::Bencher&lt;M&gt;::i..</text></g><g><title>tests::evaluate_text_in_new_domain (260 samples, 20.77%)</title><rect x="79.2332%" y="693" width="20.7668%" height="15" fill="rgb(221,8,7)" fg:x="992" fg:w="260"/><text x="79.4832%" y="703.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (130 samples, 10.38%)</title><rect x="89.6166%" y="677" width="10.3834%" height="15" fill="rgb(217,151,36)" fg:x="1122" fg:w="130"/><text x="89.8666%" y="687.50">engine::session..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="99.8403%" y="661" width="0.1597%" height="15" fill="rgb(213,71,5)" fg:x="1250" fg:w="2"/><text x="100.0903%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.9201%" y="645" width="0.0799%" height="15" fill="rgb(225,145,43)" fg:x="1251" fg:w="1"/><text x="100.1701%" y="655.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9201%" y="629" width="0.0799%" height="15" fill="rgb(235,118,19)" fg:x="1251" fg:w="1"/><text x="100.1701%" y="639.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9201%" y="613" width="0.0799%" height="15" fill="rgb(214,102,36)" fg:x="1251" fg:w="1"/><text x="100.1701%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.9201%" y="597" width="0.0799%" height="15" fill="rgb(220,56,43)" fg:x="1251" fg:w="1"/><text x="100.1701%" y="607.50"></text></g></svg></svg>