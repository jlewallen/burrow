<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="1237"><g><title>core::ptr::drop_in_place&lt;kernel::model::base::Item&gt; (4 samples, 0.32%)</title><rect x="0.0808%" y="469" width="0.3234%" height="15" fill="rgb(250,2,39)" fg:x="1" fg:w="4"/><text x="0.3308%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="0.0808%" y="485" width="0.4042%" height="15" fill="rgb(244,46,53)" fg:x="1" fg:w="5"/><text x="0.3308%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="0.4042%" y="469" width="0.0808%" height="15" fill="rgb(209,21,19)" fg:x="5" fg:w="1"/><text x="0.6542%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.4042%" y="453" width="0.0808%" height="15" fill="rgb(236,145,4)" fg:x="5" fg:w="1"/><text x="0.6542%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.49%)</title><rect x="0.0808%" y="501" width="0.4850%" height="15" fill="rgb(220,133,36)" fg:x="1" fg:w="6"/><text x="0.3308%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4850%" y="485" width="0.0808%" height="15" fill="rgb(244,18,3)" fg:x="6" fg:w="1"/><text x="0.7350%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5659%" y="469" width="0.0808%" height="15" fill="rgb(232,171,48)" fg:x="7" fg:w="1"/><text x="0.8159%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.8084%" y="421" width="0.2425%" height="15" fill="rgb(223,223,53)" fg:x="10" fg:w="3"/><text x="1.0584%" y="431.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="1.1318%" y="405" width="0.3234%" height="15" fill="rgb(246,92,13)" fg:x="14" fg:w="4"/><text x="1.3818%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.4551%" y="405" width="0.1617%" height="15" fill="rgb(229,171,10)" fg:x="18" fg:w="2"/><text x="1.7051%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.6168%" y="389" width="0.0808%" height="15" fill="rgb(213,131,26)" fg:x="20" fg:w="1"/><text x="1.8668%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6168%" y="373" width="0.0808%" height="15" fill="rgb(242,87,54)" fg:x="20" fg:w="1"/><text x="1.8668%" y="383.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.0210%" y="373" width="0.2425%" height="15" fill="rgb(237,21,35)" fg:x="25" fg:w="3"/><text x="2.2710%" y="383.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.3444%" y="357" width="0.2425%" height="15" fill="rgb(253,13,47)" fg:x="29" fg:w="3"/><text x="2.5944%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.5869%" y="357" width="0.0808%" height="15" fill="rgb(215,122,49)" fg:x="32" fg:w="1"/><text x="2.8369%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.5869%" y="341" width="0.0808%" height="15" fill="rgb(209,179,30)" fg:x="32" fg:w="1"/><text x="2.8369%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.02%)</title><rect x="0.7276%" y="437" width="2.0210%" height="15" fill="rgb(235,100,24)" fg:x="9" fg:w="25"/><text x="0.9776%" y="447.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.70%)</title><rect x="1.0509%" y="421" width="1.6977%" height="15" fill="rgb(209,67,24)" fg:x="13" fg:w="21"/><text x="1.3009%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="1.6168%" y="405" width="1.1318%" height="15" fill="rgb(206,74,32)" fg:x="20" fg:w="14"/><text x="1.8668%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="1.6977%" y="389" width="1.0509%" height="15" fill="rgb(212,45,25)" fg:x="21" fg:w="13"/><text x="1.9477%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="2.2635%" y="373" width="0.4850%" height="15" fill="rgb(239,26,3)" fg:x="28" fg:w="6"/><text x="2.5135%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.6677%" y="357" width="0.0808%" height="15" fill="rgb(218,36,15)" fg:x="33" fg:w="1"/><text x="2.9177%" y="367.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="2.9103%" y="405" width="0.3234%" height="15" fill="rgb(206,108,24)" fg:x="36" fg:w="4"/><text x="3.1603%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.2336%" y="405" width="0.1617%" height="15" fill="rgb(234,204,42)" fg:x="40" fg:w="2"/><text x="3.4836%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.4762%" y="373" width="0.0808%" height="15" fill="rgb(229,2,11)" fg:x="43" fg:w="1"/><text x="3.7262%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="3.4762%" y="389" width="0.1617%" height="15" fill="rgb(221,20,48)" fg:x="43" fg:w="2"/><text x="3.7262%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="3.5570%" y="373" width="0.0808%" height="15" fill="rgb(244,164,10)" fg:x="44" fg:w="1"/><text x="3.8070%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="3.5570%" y="357" width="0.0808%" height="15" fill="rgb(243,229,2)" fg:x="44" fg:w="1"/><text x="3.8070%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5570%" y="341" width="0.0808%" height="15" fill="rgb(232,131,37)" fg:x="44" fg:w="1"/><text x="3.8070%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6378%" y="389" width="0.0808%" height="15" fill="rgb(217,156,11)" fg:x="45" fg:w="1"/><text x="3.8878%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.7187%" y="389" width="0.0808%" height="15" fill="rgb(239,99,48)" fg:x="46" fg:w="1"/><text x="3.9687%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7187%" y="373" width="0.0808%" height="15" fill="rgb(231,209,9)" fg:x="46" fg:w="1"/><text x="3.9687%" y="383.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="4.0420%" y="373" width="0.2425%" height="15" fill="rgb(254,97,27)" fg:x="50" fg:w="3"/><text x="4.2920%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="4.2846%" y="373" width="0.1617%" height="15" fill="rgb(223,151,38)" fg:x="53" fg:w="2"/><text x="4.5346%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3654%" y="357" width="0.0808%" height="15" fill="rgb(219,206,35)" fg:x="54" fg:w="1"/><text x="4.6154%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.70%)</title><rect x="2.8294%" y="421" width="1.6977%" height="15" fill="rgb(216,130,31)" fg:x="35" fg:w="21"/><text x="3.0794%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="3.3953%" y="405" width="1.1318%" height="15" fill="rgb(251,97,34)" fg:x="42" fg:w="14"/><text x="3.6453%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="3.7995%" y="389" width="0.7276%" height="15" fill="rgb(246,159,47)" fg:x="47" fg:w="9"/><text x="4.0495%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="4.4462%" y="373" width="0.0808%" height="15" fill="rgb(232,87,10)" fg:x="55" fg:w="1"/><text x="4.6962%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 4.53%)</title><rect x="0.0808%" y="517" width="4.5271%" height="15" fill="rgb(249,1,37)" fg:x="1" fg:w="56"/><text x="0.3308%" y="527.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (50 samples, 4.04%)</title><rect x="0.5659%" y="501" width="4.0420%" height="15" fill="rgb(239,135,14)" fg:x="7" fg:w="50"/><text x="0.8159%" y="511.50">core..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 4.04%)</title><rect x="0.5659%" y="485" width="4.0420%" height="15" fill="rgb(253,116,46)" fg:x="7" fg:w="50"/><text x="0.8159%" y="495.50">&lt;has..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (49 samples, 3.96%)</title><rect x="0.6467%" y="469" width="3.9612%" height="15" fill="rgb(222,217,37)" fg:x="8" fg:w="49"/><text x="0.8967%" y="479.50">core..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 3.96%)</title><rect x="0.6467%" y="453" width="3.9612%" height="15" fill="rgb(252,96,8)" fg:x="8" fg:w="49"/><text x="0.8967%" y="463.50">&lt;all..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.86%)</title><rect x="2.7486%" y="437" width="1.8593%" height="15" fill="rgb(254,103,41)" fg:x="34" fg:w="23"/><text x="2.9986%" y="447.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.5271%" y="421" width="0.0808%" height="15" fill="rgb(218,213,19)" fg:x="56" fg:w="1"/><text x="4.7771%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.9313%" y="469" width="0.0808%" height="15" fill="rgb(253,95,21)" fg:x="61" fg:w="1"/><text x="5.1813%" y="479.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="5.0121%" y="453" width="0.0808%" height="15" fill="rgb(229,26,28)" fg:x="62" fg:w="1"/><text x="5.2621%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.0930%" y="453" width="0.1617%" height="15" fill="rgb(230,129,16)" fg:x="63" fg:w="2"/><text x="5.3430%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.0930%" y="437" width="0.1617%" height="15" fill="rgb(236,126,17)" fg:x="63" fg:w="2"/><text x="5.3430%" y="447.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.0930%" y="421" width="0.1617%" height="15" fill="rgb(209,33,33)" fg:x="63" fg:w="2"/><text x="5.3430%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="5.2546%" y="421" width="0.1617%" height="15" fill="rgb(227,85,29)" fg:x="65" fg:w="2"/><text x="5.5046%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="5.3355%" y="405" width="0.0808%" height="15" fill="rgb(241,53,46)" fg:x="66" fg:w="1"/><text x="5.5855%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.3355%" y="389" width="0.0808%" height="15" fill="rgb(228,167,53)" fg:x="66" fg:w="1"/><text x="5.5855%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.3355%" y="373" width="0.0808%" height="15" fill="rgb(238,195,45)" fg:x="66" fg:w="1"/><text x="5.5855%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.3355%" y="357" width="0.0808%" height="15" fill="rgb(252,124,45)" fg:x="66" fg:w="1"/><text x="5.5855%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.3355%" y="341" width="0.0808%" height="15" fill="rgb(251,38,35)" fg:x="66" fg:w="1"/><text x="5.5855%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="5.3355%" y="325" width="0.0808%" height="15" fill="rgb(227,33,2)" fg:x="66" fg:w="1"/><text x="5.5855%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="5.3355%" y="309" width="0.0808%" height="15" fill="rgb(223,157,46)" fg:x="66" fg:w="1"/><text x="5.5855%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="5.3355%" y="293" width="0.0808%" height="15" fill="rgb(222,78,41)" fg:x="66" fg:w="1"/><text x="5.5855%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="5.3355%" y="277" width="0.0808%" height="15" fill="rgb(248,176,11)" fg:x="66" fg:w="1"/><text x="5.5855%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="5.3355%" y="261" width="0.0808%" height="15" fill="rgb(241,221,18)" fg:x="66" fg:w="1"/><text x="5.5855%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="5.3355%" y="245" width="0.0808%" height="15" fill="rgb(218,85,22)" fg:x="66" fg:w="1"/><text x="5.5855%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.3355%" y="229" width="0.0808%" height="15" fill="rgb(222,223,7)" fg:x="66" fg:w="1"/><text x="5.5855%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="5.3355%" y="213" width="0.0808%" height="15" fill="rgb(254,59,39)" fg:x="66" fg:w="1"/><text x="5.5855%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.3355%" y="197" width="0.0808%" height="15" fill="rgb(247,100,27)" fg:x="66" fg:w="1"/><text x="5.5855%" y="207.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (1 samples, 0.08%)</title><rect x="5.4163%" y="421" width="0.0808%" height="15" fill="rgb(237,207,10)" fg:x="67" fg:w="1"/><text x="5.6663%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.4163%" y="405" width="0.0808%" height="15" fill="rgb(220,121,28)" fg:x="67" fg:w="1"/><text x="5.6663%" y="415.50"></text></g><g><title>__asprintf (4 samples, 0.32%)</title><rect x="5.9014%" y="389" width="0.3234%" height="15" fill="rgb(213,223,20)" fg:x="73" fg:w="4"/><text x="6.1514%" y="399.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="6.1439%" y="373" width="0.0808%" height="15" fill="rgb(205,121,27)" fg:x="76" fg:w="1"/><text x="6.3939%" y="383.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="6.2247%" y="389" width="0.0808%" height="15" fill="rgb(253,24,53)" fg:x="77" fg:w="1"/><text x="6.4747%" y="399.50"></text></g><g><title>dlerror (10 samples, 0.81%)</title><rect x="5.5780%" y="405" width="0.8084%" height="15" fill="rgb(224,224,47)" fg:x="69" fg:w="10"/><text x="5.8280%" y="415.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="6.3056%" y="389" width="0.0808%" height="15" fill="rgb(250,125,36)" fg:x="78" fg:w="1"/><text x="6.5556%" y="399.50"></text></g><g><title>dlopen (24 samples, 1.94%)</title><rect x="6.3864%" y="405" width="1.9402%" height="15" fill="rgb(240,144,38)" fg:x="79" fg:w="24"/><text x="6.6364%" y="415.50">d..</text></g><g><title>_dl_catch_error (24 samples, 1.94%)</title><rect x="6.3864%" y="389" width="1.9402%" height="15" fill="rgb(250,15,50)" fg:x="79" fg:w="24"/><text x="6.6364%" y="399.50">_..</text></g><g><title>_dl_catch_exception (24 samples, 1.94%)</title><rect x="6.3864%" y="373" width="1.9402%" height="15" fill="rgb(210,24,26)" fg:x="79" fg:w="24"/><text x="6.6364%" y="383.50">_..</text></g><g><title>_dl_catch_exception (24 samples, 1.94%)</title><rect x="6.3864%" y="357" width="1.9402%" height="15" fill="rgb(234,53,53)" fg:x="79" fg:w="24"/><text x="6.6364%" y="367.50">_..</text></g><g><title>_dl_catch_exception (24 samples, 1.94%)</title><rect x="6.3864%" y="341" width="1.9402%" height="15" fill="rgb(208,108,28)" fg:x="79" fg:w="24"/><text x="6.6364%" y="351.50">_..</text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="8.2458%" y="325" width="0.0808%" height="15" fill="rgb(227,143,7)" fg:x="102" fg:w="1"/><text x="8.4958%" y="335.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="8.2458%" y="309" width="0.0808%" height="15" fill="rgb(238,189,38)" fg:x="102" fg:w="1"/><text x="8.4958%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2458%" y="293" width="0.0808%" height="15" fill="rgb(222,69,15)" fg:x="102" fg:w="1"/><text x="8.4958%" y="303.50"></text></g><g><title>libloading::safe::Library::new (36 samples, 2.91%)</title><rect x="5.4972%" y="421" width="2.9103%" height="15" fill="rgb(213,169,7)" fg:x="68" fg:w="36"/><text x="5.7472%" y="431.50">li..</text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="8.3266%" y="405" width="0.0808%" height="15" fill="rgb(251,219,4)" fg:x="103" fg:w="1"/><text x="8.5766%" y="415.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="8.3266%" y="389" width="0.0808%" height="15" fill="rgb(241,55,40)" fg:x="103" fg:w="1"/><text x="8.5766%" y="399.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="8.3266%" y="373" width="0.0808%" height="15" fill="rgb(243,57,30)" fg:x="103" fg:w="1"/><text x="8.5766%" y="383.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.08%)</title><rect x="8.3266%" y="357" width="0.0808%" height="15" fill="rgb(234,50,30)" fg:x="103" fg:w="1"/><text x="8.5766%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.08%)</title><rect x="8.3266%" y="341" width="0.0808%" height="15" fill="rgb(239,23,42)" fg:x="103" fg:w="1"/><text x="8.5766%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.08%)</title><rect x="8.3266%" y="325" width="0.0808%" height="15" fill="rgb(217,38,19)" fg:x="103" fg:w="1"/><text x="8.5766%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.08%)</title><rect x="8.3266%" y="309" width="0.0808%" height="15" fill="rgb(215,179,16)" fg:x="103" fg:w="1"/><text x="8.5766%" y="319.50"></text></g><g><title>alloc::raw_vec::handle_reserve (1 samples, 0.08%)</title><rect x="8.3266%" y="293" width="0.0808%" height="15" fill="rgb(254,21,37)" fg:x="103" fg:w="1"/><text x="8.5766%" y="303.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (40 samples, 3.23%)</title><rect x="5.2546%" y="437" width="3.2336%" height="15" fill="rgb(219,207,48)" fg:x="65" fg:w="40"/><text x="5.5046%" y="447.50">&lt;pl..</text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="8.4074%" y="421" width="0.0808%" height="15" fill="rgb(227,225,41)" fg:x="104" fg:w="1"/><text x="8.6574%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (45 samples, 3.64%)</title><rect x="5.2546%" y="453" width="3.6378%" height="15" fill="rgb(223,130,1)" fg:x="65" fg:w="45"/><text x="5.5046%" y="463.50">kern..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (5 samples, 0.40%)</title><rect x="8.4883%" y="437" width="0.4042%" height="15" fill="rgb(249,54,42)" fg:x="105" fg:w="5"/><text x="8.7383%" y="447.50"></text></g><g><title>clock_gettime (5 samples, 0.40%)</title><rect x="8.4883%" y="421" width="0.4042%" height="15" fill="rgb(248,69,25)" fg:x="105" fg:w="5"/><text x="8.7383%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.1350%" y="421" width="0.0808%" height="15" fill="rgb(234,21,32)" fg:x="113" fg:w="1"/><text x="9.3850%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="9.1350%" y="405" width="0.0808%" height="15" fill="rgb(252,136,6)" fg:x="113" fg:w="1"/><text x="9.3850%" y="415.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="9.2158%" y="421" width="0.0808%" height="15" fill="rgb(245,87,12)" fg:x="114" fg:w="1"/><text x="9.4658%" y="431.50"></text></g><g><title>engine::session::Session::initialize (54 samples, 4.37%)</title><rect x="5.0121%" y="469" width="4.3654%" height="15" fill="rgb(208,12,15)" fg:x="62" fg:w="54"/><text x="5.2621%" y="479.50">engin..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (6 samples, 0.49%)</title><rect x="8.8925%" y="453" width="0.4850%" height="15" fill="rgb(250,98,2)" fg:x="110" fg:w="6"/><text x="9.1425%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.49%)</title><rect x="8.8925%" y="437" width="0.4850%" height="15" fill="rgb(205,213,15)" fg:x="110" fg:w="6"/><text x="9.1425%" y="447.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="9.2967%" y="421" width="0.0808%" height="15" fill="rgb(248,192,44)" fg:x="115" fg:w="1"/><text x="9.5467%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.2967%" y="405" width="0.0808%" height="15" fill="rgb(221,89,17)" fg:x="115" fg:w="1"/><text x="9.5467%" y="415.50"></text></g><g><title>&lt;plugins_core::memory::MemoryPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="9.3775%" y="437" width="0.2425%" height="15" fill="rgb(209,55,3)" fg:x="116" fg:w="3"/><text x="9.6275%" y="447.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (5 samples, 0.40%)</title><rect x="9.3775%" y="469" width="0.4042%" height="15" fill="rgb(247,23,45)" fg:x="116" fg:w="5"/><text x="9.6275%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="9.3775%" y="453" width="0.4042%" height="15" fill="rgb(235,152,23)" fg:x="116" fg:w="5"/><text x="9.6275%" y="463.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (2 samples, 0.16%)</title><rect x="9.6200%" y="437" width="0.1617%" height="15" fill="rgb(244,63,13)" fg:x="119" fg:w="2"/><text x="9.8700%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.6200%" y="421" width="0.1617%" height="15" fill="rgb(227,30,37)" fg:x="119" fg:w="2"/><text x="9.8700%" y="431.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (65 samples, 5.25%)</title><rect x="4.6079%" y="517" width="5.2546%" height="15" fill="rgb(224,49,42)" fg:x="57" fg:w="65"/><text x="4.8579%" y="527.50">&lt;engin..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (64 samples, 5.17%)</title><rect x="4.6888%" y="501" width="5.1738%" height="15" fill="rgb(218,129,5)" fg:x="58" fg:w="64"/><text x="4.9388%" y="511.50">engine..</text></g><g><title>engine::session::Session::new (63 samples, 5.09%)</title><rect x="4.7696%" y="485" width="5.0930%" height="15" fill="rgb(240,199,54)" fg:x="59" fg:w="63"/><text x="5.0196%" y="495.50">engine..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="9.7817%" y="469" width="0.0808%" height="15" fill="rgb(234,31,13)" fg:x="121" fg:w="1"/><text x="10.0317%" y="479.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="9.7817%" y="453" width="0.0808%" height="15" fill="rgb(219,73,54)" fg:x="121" fg:w="1"/><text x="10.0317%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="9.9434%" y="501" width="0.0808%" height="15" fill="rgb(251,162,10)" fg:x="123" fg:w="1"/><text x="10.1934%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.1051%" y="469" width="0.0808%" height="15" fill="rgb(240,138,47)" fg:x="125" fg:w="1"/><text x="10.3551%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::string::String,serde_json::value::Value,alloc::alloc::Global&gt;&gt; (1 samples, 0.08%)</title><rect x="10.1859%" y="469" width="0.0808%" height="15" fill="rgb(216,138,26)" fg:x="126" fg:w="1"/><text x="10.4359%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="10.0243%" y="501" width="0.3234%" height="15" fill="rgb(243,17,35)" fg:x="124" fg:w="4"/><text x="10.2743%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="10.1051%" y="485" width="0.2425%" height="15" fill="rgb(241,60,18)" fg:x="125" fg:w="3"/><text x="10.3551%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.2668%" y="469" width="0.0808%" height="15" fill="rgb(234,2,44)" fg:x="127" fg:w="1"/><text x="10.5168%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (2 samples, 0.16%)</title><rect x="10.3476%" y="501" width="0.1617%" height="15" fill="rgb(225,225,33)" fg:x="128" fg:w="2"/><text x="10.5976%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.3476%" y="485" width="0.1617%" height="15" fill="rgb(234,50,31)" fg:x="128" fg:w="2"/><text x="10.5976%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="10.5093%" y="501" width="0.0808%" height="15" fill="rgb(249,6,25)" fg:x="130" fg:w="1"/><text x="10.7593%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5093%" y="485" width="0.0808%" height="15" fill="rgb(241,5,17)" fg:x="130" fg:w="1"/><text x="10.7593%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="10.5901%" y="485" width="0.0808%" height="15" fill="rgb(207,116,10)" fg:x="131" fg:w="1"/><text x="10.8401%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5901%" y="469" width="0.0808%" height="15" fill="rgb(222,128,18)" fg:x="131" fg:w="1"/><text x="10.8401%" y="479.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="10.6710%" y="485" width="0.0808%" height="15" fill="rgb(229,109,25)" fg:x="132" fg:w="1"/><text x="10.9210%" y="495.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="10.6710%" y="469" width="0.0808%" height="15" fill="rgb(222,102,25)" fg:x="132" fg:w="1"/><text x="10.9210%" y="479.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="10.6710%" y="453" width="0.0808%" height="15" fill="rgb(239,211,5)" fg:x="132" fg:w="1"/><text x="10.9210%" y="463.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="10.6710%" y="437" width="0.0808%" height="15" fill="rgb(223,136,26)" fg:x="132" fg:w="1"/><text x="10.9210%" y="447.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="10.6710%" y="421" width="0.0808%" height="15" fill="rgb(227,30,15)" fg:x="132" fg:w="1"/><text x="10.9210%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="10.6710%" y="405" width="0.0808%" height="15" fill="rgb(247,76,4)" fg:x="132" fg:w="1"/><text x="10.9210%" y="415.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="10.6710%" y="389" width="0.0808%" height="15" fill="rgb(245,38,48)" fg:x="132" fg:w="1"/><text x="10.9210%" y="399.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="10.6710%" y="373" width="0.0808%" height="15" fill="rgb(210,220,14)" fg:x="132" fg:w="1"/><text x="10.9210%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="10.7518%" y="453" width="0.0808%" height="15" fill="rgb(224,60,51)" fg:x="133" fg:w="1"/><text x="11.0018%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="10.7518%" y="437" width="0.0808%" height="15" fill="rgb(212,133,49)" fg:x="133" fg:w="1"/><text x="11.0018%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="10.8327%" y="453" width="0.1617%" height="15" fill="rgb(231,39,22)" fg:x="134" fg:w="2"/><text x="11.0827%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="10.8327%" y="437" width="0.1617%" height="15" fill="rgb(236,173,22)" fg:x="134" fg:w="2"/><text x="11.0827%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.8327%" y="421" width="0.1617%" height="15" fill="rgb(210,70,0)" fg:x="134" fg:w="2"/><text x="11.0827%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.73%)</title><rect x="11.1560%" y="373" width="0.7276%" height="15" fill="rgb(215,170,11)" fg:x="138" fg:w="9"/><text x="11.4060%" y="383.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="11.3985%" y="357" width="0.4850%" height="15" fill="rgb(220,154,28)" fg:x="141" fg:w="6"/><text x="11.6485%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.49%)</title><rect x="11.3985%" y="341" width="0.4850%" height="15" fill="rgb(240,160,41)" fg:x="141" fg:w="6"/><text x="11.6485%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="11.4794%" y="325" width="0.4042%" height="15" fill="rgb(243,215,41)" fg:x="142" fg:w="5"/><text x="11.7294%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="11.5602%" y="309" width="0.3234%" height="15" fill="rgb(214,208,31)" fg:x="143" fg:w="4"/><text x="11.8102%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="11.5602%" y="293" width="0.3234%" height="15" fill="rgb(247,57,22)" fg:x="143" fg:w="4"/><text x="11.8102%" y="303.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="11.5602%" y="277" width="0.3234%" height="15" fill="rgb(228,73,52)" fg:x="143" fg:w="4"/><text x="11.8102%" y="287.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (13 samples, 1.05%)</title><rect x="11.0752%" y="389" width="1.0509%" height="15" fill="rgb(252,60,9)" fg:x="137" fg:w="13"/><text x="11.3252%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="11.8836%" y="373" width="0.2425%" height="15" fill="rgb(233,9,51)" fg:x="147" fg:w="3"/><text x="12.1336%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="11.9644%" y="357" width="0.1617%" height="15" fill="rgb(223,67,14)" fg:x="148" fg:w="2"/><text x="12.2144%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.0453%" y="341" width="0.0808%" height="15" fill="rgb(222,86,2)" fg:x="149" fg:w="1"/><text x="12.2953%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="12.2878%" y="373" width="0.4042%" height="15" fill="rgb(243,58,54)" fg:x="152" fg:w="5"/><text x="12.5378%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.5303%" y="357" width="0.1617%" height="15" fill="rgb(210,200,39)" fg:x="155" fg:w="2"/><text x="12.7803%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="12.5303%" y="341" width="0.1617%" height="15" fill="rgb(238,135,9)" fg:x="155" fg:w="2"/><text x="12.7803%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.5303%" y="325" width="0.1617%" height="15" fill="rgb(232,179,7)" fg:x="155" fg:w="2"/><text x="12.7803%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="12.7728%" y="357" width="0.2425%" height="15" fill="rgb(245,65,41)" fg:x="158" fg:w="3"/><text x="13.0228%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="12.7728%" y="341" width="0.2425%" height="15" fill="rgb(227,43,8)" fg:x="158" fg:w="3"/><text x="13.0228%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="12.7728%" y="325" width="0.2425%" height="15" fill="rgb(235,91,14)" fg:x="158" fg:w="3"/><text x="13.0228%" y="335.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="12.7728%" y="309" width="0.2425%" height="15" fill="rgb(235,219,31)" fg:x="158" fg:w="3"/><text x="13.0228%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="12.7728%" y="293" width="0.2425%" height="15" fill="rgb(227,121,25)" fg:x="158" fg:w="3"/><text x="13.0228%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.8537%" y="277" width="0.1617%" height="15" fill="rgb(254,129,24)" fg:x="159" fg:w="2"/><text x="13.1037%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.9345%" y="261" width="0.0808%" height="15" fill="rgb(226,144,49)" fg:x="160" fg:w="1"/><text x="13.1845%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.9345%" y="245" width="0.0808%" height="15" fill="rgb(214,187,32)" fg:x="160" fg:w="1"/><text x="13.1845%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.9345%" y="229" width="0.0808%" height="15" fill="rgb(243,129,46)" fg:x="160" fg:w="1"/><text x="13.1845%" y="239.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.65%)</title><rect x="13.0154%" y="357" width="0.6467%" height="15" fill="rgb(221,185,35)" fg:x="161" fg:w="8"/><text x="13.2654%" y="367.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="13.3387%" y="341" width="0.3234%" height="15" fill="rgb(205,0,32)" fg:x="165" fg:w="4"/><text x="13.5887%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.5004%" y="325" width="0.1617%" height="15" fill="rgb(229,179,12)" fg:x="167" fg:w="2"/><text x="13.7504%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.5812%" y="309" width="0.0808%" height="15" fill="rgb(252,107,19)" fg:x="168" fg:w="1"/><text x="13.8312%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.5812%" y="293" width="0.0808%" height="15" fill="rgb(220,95,27)" fg:x="168" fg:w="1"/><text x="13.8312%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.5812%" y="277" width="0.0808%" height="15" fill="rgb(240,113,40)" fg:x="168" fg:w="1"/><text x="13.8312%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.5812%" y="261" width="0.0808%" height="15" fill="rgb(208,4,43)" fg:x="168" fg:w="1"/><text x="13.8312%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="13.7429%" y="341" width="0.3234%" height="15" fill="rgb(247,189,30)" fg:x="170" fg:w="4"/><text x="13.9929%" y="351.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="13.7429%" y="325" width="0.3234%" height="15" fill="rgb(231,157,17)" fg:x="170" fg:w="4"/><text x="13.9929%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.9046%" y="309" width="0.1617%" height="15" fill="rgb(224,139,6)" fg:x="172" fg:w="2"/><text x="14.1546%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.9046%" y="293" width="0.1617%" height="15" fill="rgb(223,83,16)" fg:x="172" fg:w="2"/><text x="14.1546%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="14.1471%" y="325" width="0.3234%" height="15" fill="rgb(232,211,20)" fg:x="175" fg:w="4"/><text x="14.3971%" y="335.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="14.2280%" y="309" width="0.2425%" height="15" fill="rgb(225,203,35)" fg:x="176" fg:w="3"/><text x="14.4780%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="14.2280%" y="293" width="0.2425%" height="15" fill="rgb(215,211,44)" fg:x="176" fg:w="3"/><text x="14.4780%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="14.3088%" y="277" width="0.1617%" height="15" fill="rgb(248,213,26)" fg:x="177" fg:w="2"/><text x="14.5588%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="14.0663%" y="341" width="0.4850%" height="15" fill="rgb(214,23,52)" fg:x="174" fg:w="6"/><text x="14.3163%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.4705%" y="325" width="0.0808%" height="15" fill="rgb(225,173,50)" fg:x="179" fg:w="1"/><text x="14.7205%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.4705%" y="309" width="0.0808%" height="15" fill="rgb(206,150,22)" fg:x="179" fg:w="1"/><text x="14.7205%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="13.6621%" y="357" width="1.0509%" height="15" fill="rgb(239,64,23)" fg:x="169" fg:w="13"/><text x="13.9121%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.5513%" y="341" width="0.1617%" height="15" fill="rgb(242,50,38)" fg:x="180" fg:w="2"/><text x="14.8013%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.6322%" y="325" width="0.0808%" height="15" fill="rgb(217,91,15)" fg:x="181" fg:w="1"/><text x="14.8822%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.18%)</title><rect x="12.6920%" y="373" width="2.1827%" height="15" fill="rgb(230,172,6)" fg:x="157" fg:w="27"/><text x="12.9420%" y="383.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.7130%" y="357" width="0.1617%" height="15" fill="rgb(221,98,26)" fg:x="182" fg:w="2"/><text x="14.9630%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="14.7130%" y="341" width="0.1617%" height="15" fill="rgb(227,210,45)" fg:x="182" fg:w="2"/><text x="14.9630%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (49 samples, 3.96%)</title><rect x="11.0752%" y="405" width="3.9612%" height="15" fill="rgb(206,8,30)" fg:x="137" fg:w="49"/><text x="11.3252%" y="415.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.91%)</title><rect x="12.1261%" y="389" width="2.9103%" height="15" fill="rgb(241,219,17)" fg:x="150" fg:w="36"/><text x="12.3761%" y="399.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.8747%" y="373" width="0.1617%" height="15" fill="rgb(247,121,29)" fg:x="184" fg:w="2"/><text x="15.1247%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.9555%" y="357" width="0.0808%" height="15" fill="rgb(219,169,49)" fg:x="185" fg:w="1"/><text x="15.2055%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.9555%" y="341" width="0.0808%" height="15" fill="rgb(253,49,49)" fg:x="185" fg:w="1"/><text x="15.2055%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.9555%" y="325" width="0.0808%" height="15" fill="rgb(217,178,3)" fg:x="185" fg:w="1"/><text x="15.2055%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.9555%" y="309" width="0.0808%" height="15" fill="rgb(234,73,37)" fg:x="185" fg:w="1"/><text x="15.2055%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.9555%" y="293" width="0.0808%" height="15" fill="rgb(250,98,22)" fg:x="185" fg:w="1"/><text x="15.2055%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="15.1981%" y="373" width="0.1617%" height="15" fill="rgb(220,108,37)" fg:x="188" fg:w="2"/><text x="15.4481%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.3597%" y="373" width="0.0808%" height="15" fill="rgb(225,168,10)" fg:x="190" fg:w="1"/><text x="15.6097%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="15.4406%" y="357" width="0.1617%" height="15" fill="rgb(247,215,21)" fg:x="191" fg:w="2"/><text x="15.6906%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.6023%" y="357" width="0.0808%" height="15" fill="rgb(253,189,31)" fg:x="193" fg:w="1"/><text x="15.8523%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.6023%" y="341" width="0.0808%" height="15" fill="rgb(241,54,22)" fg:x="193" fg:w="1"/><text x="15.8523%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.8448%" y="293" width="0.0808%" height="15" fill="rgb(211,87,4)" fg:x="196" fg:w="1"/><text x="16.0948%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="15.8448%" y="325" width="0.1617%" height="15" fill="rgb(245,112,24)" fg:x="196" fg:w="2"/><text x="16.0948%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="15.8448%" y="309" width="0.1617%" height="15" fill="rgb(235,190,41)" fg:x="196" fg:w="2"/><text x="16.0948%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.9256%" y="293" width="0.0808%" height="15" fill="rgb(214,89,8)" fg:x="197" fg:w="1"/><text x="16.1756%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.9256%" y="277" width="0.0808%" height="15" fill="rgb(249,155,35)" fg:x="197" fg:w="1"/><text x="16.1756%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="16.0065%" y="309" width="0.1617%" height="15" fill="rgb(249,88,26)" fg:x="198" fg:w="2"/><text x="16.2565%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="16.0065%" y="293" width="0.1617%" height="15" fill="rgb(232,56,8)" fg:x="198" fg:w="2"/><text x="16.2565%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="15.0364%" y="405" width="1.2126%" height="15" fill="rgb(240,95,3)" fg:x="186" fg:w="15"/><text x="15.2864%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.21%)</title><rect x="15.0364%" y="389" width="1.2126%" height="15" fill="rgb(222,44,28)" fg:x="186" fg:w="15"/><text x="15.2864%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="15.4406%" y="373" width="0.8084%" height="15" fill="rgb(234,16,30)" fg:x="191" fg:w="10"/><text x="15.6906%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="15.6831%" y="357" width="0.5659%" height="15" fill="rgb(223,26,17)" fg:x="194" fg:w="7"/><text x="15.9331%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="15.8448%" y="341" width="0.4042%" height="15" fill="rgb(239,187,47)" fg:x="196" fg:w="5"/><text x="16.0948%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="16.0065%" y="325" width="0.2425%" height="15" fill="rgb(247,102,50)" fg:x="198" fg:w="3"/><text x="16.2565%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="16.1681%" y="309" width="0.0808%" height="15" fill="rgb(231,216,22)" fg:x="200" fg:w="1"/><text x="16.4181%" y="319.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="16.2490%" y="389" width="0.0808%" height="15" fill="rgb(216,201,26)" fg:x="201" fg:w="1"/><text x="16.4990%" y="399.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="16.2490%" y="373" width="0.0808%" height="15" fill="rgb(214,186,23)" fg:x="201" fg:w="1"/><text x="16.4990%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="16.3298%" y="357" width="0.2425%" height="15" fill="rgb(235,184,4)" fg:x="202" fg:w="3"/><text x="16.5798%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="16.5724%" y="341" width="0.0808%" height="15" fill="rgb(244,46,17)" fg:x="205" fg:w="1"/><text x="16.8224%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="16.5724%" y="357" width="0.1617%" height="15" fill="rgb(248,74,46)" fg:x="205" fg:w="2"/><text x="16.8224%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.6532%" y="341" width="0.0808%" height="15" fill="rgb(243,79,5)" fg:x="206" fg:w="1"/><text x="16.9032%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.6532%" y="325" width="0.0808%" height="15" fill="rgb(213,148,1)" fg:x="206" fg:w="1"/><text x="16.9032%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="16.7340%" y="357" width="0.0808%" height="15" fill="rgb(221,30,0)" fg:x="207" fg:w="1"/><text x="16.9840%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.7340%" y="341" width="0.0808%" height="15" fill="rgb(207,85,29)" fg:x="207" fg:w="1"/><text x="16.9840%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7340%" y="325" width="0.0808%" height="15" fill="rgb(239,31,46)" fg:x="207" fg:w="1"/><text x="16.9840%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="16.8149%" y="357" width="0.0808%" height="15" fill="rgb(219,6,1)" fg:x="208" fg:w="1"/><text x="17.0649%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.8149%" y="341" width="0.0808%" height="15" fill="rgb(229,90,29)" fg:x="208" fg:w="1"/><text x="17.0649%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="16.9766%" y="309" width="0.4042%" height="15" fill="rgb(242,201,42)" fg:x="210" fg:w="5"/><text x="17.2266%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="17.1382%" y="293" width="0.2425%" height="15" fill="rgb(243,80,54)" fg:x="212" fg:w="3"/><text x="17.3882%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="17.2191%" y="277" width="0.1617%" height="15" fill="rgb(223,166,15)" fg:x="213" fg:w="2"/><text x="17.4691%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.3808%" y="229" width="0.0808%" height="15" fill="rgb(238,78,27)" fg:x="215" fg:w="1"/><text x="17.6308%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.3808%" y="213" width="0.0808%" height="15" fill="rgb(235,28,43)" fg:x="215" fg:w="1"/><text x="17.6308%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3808%" y="197" width="0.0808%" height="15" fill="rgb(240,210,28)" fg:x="215" fg:w="1"/><text x="17.6308%" y="207.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="17.3808%" y="309" width="0.1617%" height="15" fill="rgb(253,6,46)" fg:x="215" fg:w="2"/><text x="17.6308%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="17.3808%" y="293" width="0.1617%" height="15" fill="rgb(250,159,47)" fg:x="215" fg:w="2"/><text x="17.6308%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="17.3808%" y="277" width="0.1617%" height="15" fill="rgb(216,139,2)" fg:x="215" fg:w="2"/><text x="17.6308%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="17.3808%" y="261" width="0.1617%" height="15" fill="rgb(221,124,44)" fg:x="215" fg:w="2"/><text x="17.6308%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="17.3808%" y="245" width="0.1617%" height="15" fill="rgb(205,37,22)" fg:x="215" fg:w="2"/><text x="17.6308%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4616%" y="229" width="0.0808%" height="15" fill="rgb(250,55,8)" fg:x="216" fg:w="1"/><text x="17.7116%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="17.4616%" y="213" width="0.0808%" height="15" fill="rgb(215,83,48)" fg:x="216" fg:w="1"/><text x="17.7116%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4616%" y="197" width="0.0808%" height="15" fill="rgb(253,2,32)" fg:x="216" fg:w="1"/><text x="17.7116%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4616%" y="181" width="0.0808%" height="15" fill="rgb(236,67,28)" fg:x="216" fg:w="1"/><text x="17.7116%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.7850%" y="277" width="0.1617%" height="15" fill="rgb(252,55,15)" fg:x="220" fg:w="2"/><text x="18.0350%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8658%" y="261" width="0.0808%" height="15" fill="rgb(243,173,17)" fg:x="221" fg:w="1"/><text x="18.1158%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.21%)</title><rect x="16.9766%" y="325" width="1.2126%" height="15" fill="rgb(215,212,13)" fg:x="210" fg:w="15"/><text x="17.2266%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="17.5424%" y="309" width="0.6467%" height="15" fill="rgb(253,176,6)" fg:x="217" fg:w="8"/><text x="17.7924%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="17.7041%" y="293" width="0.4850%" height="15" fill="rgb(236,105,26)" fg:x="219" fg:w="6"/><text x="17.9541%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="17.9466%" y="277" width="0.2425%" height="15" fill="rgb(239,226,32)" fg:x="222" fg:w="3"/><text x="18.1966%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="18.0275%" y="261" width="0.1617%" height="15" fill="rgb(236,104,51)" fg:x="223" fg:w="2"/><text x="18.2775%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.1083%" y="245" width="0.0808%" height="15" fill="rgb(220,172,33)" fg:x="224" fg:w="1"/><text x="18.3583%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1083%" y="229" width="0.0808%" height="15" fill="rgb(224,182,25)" fg:x="224" fg:w="1"/><text x="18.3583%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.37%)</title><rect x="16.9766%" y="341" width="1.3743%" height="15" fill="rgb(236,184,24)" fg:x="210" fg:w="17"/><text x="17.2266%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="18.1892%" y="325" width="0.1617%" height="15" fill="rgb(241,221,14)" fg:x="225" fg:w="2"/><text x="18.4392%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.2700%" y="309" width="0.0808%" height="15" fill="rgb(227,146,5)" fg:x="226" fg:w="1"/><text x="18.5200%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.3508%" y="341" width="0.1617%" height="15" fill="rgb(214,15,23)" fg:x="227" fg:w="2"/><text x="18.6008%" y="351.50"></text></g><g><title>engine::session::Session::flush (100 samples, 8.08%)</title><rect x="10.5901%" y="501" width="8.0841%" height="15" fill="rgb(233,157,31)" fg:x="131" fg:w="100"/><text x="10.8401%" y="511.50">engine::ses..</text></g><g><title>engine::session::state::State::close (98 samples, 7.92%)</title><rect x="10.7518%" y="485" width="7.9224%" height="15" fill="rgb(211,27,52)" fg:x="133" fg:w="98"/><text x="11.0018%" y="495.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (98 samples, 7.92%)</title><rect x="10.7518%" y="469" width="7.9224%" height="15" fill="rgb(212,223,15)" fg:x="133" fg:w="98"/><text x="11.0018%" y="479.50">engine::ses..</text></g><g><title>core::iter::adapters::try_process (95 samples, 7.68%)</title><rect x="10.9943%" y="453" width="7.6799%" height="15" fill="rgb(254,211,0)" fg:x="136" fg:w="95"/><text x="11.2443%" y="463.50">core::iter:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (95 samples, 7.68%)</title><rect x="10.9943%" y="437" width="7.6799%" height="15" fill="rgb(205,43,38)" fg:x="136" fg:w="95"/><text x="11.2443%" y="447.50">&lt;alloc::vec..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (95 samples, 7.68%)</title><rect x="10.9943%" y="421" width="7.6799%" height="15" fill="rgb(242,206,46)" fg:x="136" fg:w="95"/><text x="11.2443%" y="431.50">engine::ses..</text></g><g><title>kernel::model::any_entity_changes (30 samples, 2.43%)</title><rect x="16.2490%" y="405" width="2.4252%" height="15" fill="rgb(220,221,12)" fg:x="201" fg:w="30"/><text x="16.4990%" y="415.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (29 samples, 2.34%)</title><rect x="16.3298%" y="389" width="2.3444%" height="15" fill="rgb(217,156,35)" fg:x="202" fg:w="29"/><text x="16.5798%" y="399.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.34%)</title><rect x="16.3298%" y="373" width="2.3444%" height="15" fill="rgb(207,181,49)" fg:x="202" fg:w="29"/><text x="16.5798%" y="383.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.78%)</title><rect x="16.8957%" y="357" width="1.7785%" height="15" fill="rgb(235,103,47)" fg:x="209" fg:w="22"/><text x="17.1457%" y="367.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.5125%" y="341" width="0.1617%" height="15" fill="rgb(222,63,28)" fg:x="229" fg:w="2"/><text x="18.7625%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.5125%" y="325" width="0.1617%" height="15" fill="rgb(244,137,21)" fg:x="229" fg:w="2"/><text x="18.7625%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5934%" y="309" width="0.0808%" height="15" fill="rgb(228,35,27)" fg:x="230" fg:w="1"/><text x="18.8434%" y="319.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="18.6742%" y="501" width="0.0808%" height="15" fill="rgb(226,191,41)" fg:x="231" fg:w="1"/><text x="18.9242%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="18.6742%" y="485" width="0.0808%" height="15" fill="rgb(210,154,3)" fg:x="231" fg:w="1"/><text x="18.9242%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="18.6742%" y="469" width="0.0808%" height="15" fill="rgb(216,60,49)" fg:x="231" fg:w="1"/><text x="18.9242%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="18.6742%" y="453" width="0.0808%" height="15" fill="rgb(226,17,20)" fg:x="231" fg:w="1"/><text x="18.9242%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.7551%" y="421" width="0.0808%" height="15" fill="rgb(206,115,35)" fg:x="232" fg:w="1"/><text x="19.0051%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.7551%" y="405" width="0.0808%" height="15" fill="rgb(227,88,1)" fg:x="232" fg:w="1"/><text x="19.0051%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.7551%" y="389" width="0.0808%" height="15" fill="rgb(230,222,24)" fg:x="232" fg:w="1"/><text x="19.0051%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7551%" y="373" width="0.0808%" height="15" fill="rgb(214,124,32)" fg:x="232" fg:w="1"/><text x="19.0051%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.8359%" y="421" width="0.0808%" height="15" fill="rgb(240,41,36)" fg:x="233" fg:w="1"/><text x="19.0859%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="18.7551%" y="469" width="0.2425%" height="15" fill="rgb(221,17,52)" fg:x="232" fg:w="3"/><text x="19.0051%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="18.7551%" y="453" width="0.2425%" height="15" fill="rgb(252,70,16)" fg:x="232" fg:w="3"/><text x="19.0051%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="18.7551%" y="437" width="0.2425%" height="15" fill="rgb(250,177,4)" fg:x="232" fg:w="3"/><text x="19.0051%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.9167%" y="421" width="0.0808%" height="15" fill="rgb(240,188,47)" fg:x="234" fg:w="1"/><text x="19.1667%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9167%" y="405" width="0.0808%" height="15" fill="rgb(215,92,12)" fg:x="234" fg:w="1"/><text x="19.1667%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.9167%" y="389" width="0.0808%" height="15" fill="rgb(242,110,29)" fg:x="234" fg:w="1"/><text x="19.1667%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9167%" y="373" width="0.0808%" height="15" fill="rgb(208,211,26)" fg:x="234" fg:w="1"/><text x="19.1667%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="18.9167%" y="357" width="0.0808%" height="15" fill="rgb(244,147,6)" fg:x="234" fg:w="1"/><text x="19.1667%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.9167%" y="341" width="0.0808%" height="15" fill="rgb(211,130,42)" fg:x="234" fg:w="1"/><text x="19.1667%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.9167%" y="325" width="0.0808%" height="15" fill="rgb(220,63,1)" fg:x="234" fg:w="1"/><text x="19.1667%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.9976%" y="437" width="0.1617%" height="15" fill="rgb(241,212,30)" fg:x="235" fg:w="2"/><text x="19.2476%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0784%" y="421" width="0.0808%" height="15" fill="rgb(233,153,17)" fg:x="236" fg:w="1"/><text x="19.3284%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="18.9976%" y="453" width="0.2425%" height="15" fill="rgb(236,3,10)" fg:x="235" fg:w="3"/><text x="19.2476%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1593%" y="437" width="0.0808%" height="15" fill="rgb(232,41,21)" fg:x="237" fg:w="1"/><text x="19.4093%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1593%" y="421" width="0.0808%" height="15" fill="rgb(206,63,51)" fg:x="237" fg:w="1"/><text x="19.4093%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1593%" y="405" width="0.0808%" height="15" fill="rgb(250,214,3)" fg:x="237" fg:w="1"/><text x="19.4093%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1593%" y="389" width="0.0808%" height="15" fill="rgb(254,89,27)" fg:x="237" fg:w="1"/><text x="19.4093%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="18.9976%" y="469" width="0.4042%" height="15" fill="rgb(249,41,14)" fg:x="235" fg:w="5"/><text x="19.2476%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="19.2401%" y="453" width="0.1617%" height="15" fill="rgb(221,196,51)" fg:x="238" fg:w="2"/><text x="19.4901%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="19.2401%" y="437" width="0.1617%" height="15" fill="rgb(214,116,26)" fg:x="238" fg:w="2"/><text x="19.4901%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3209%" y="421" width="0.0808%" height="15" fill="rgb(236,67,7)" fg:x="239" fg:w="1"/><text x="19.5709%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.4018%" y="389" width="0.0808%" height="15" fill="rgb(253,179,32)" fg:x="240" fg:w="1"/><text x="19.6518%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.4018%" y="373" width="0.0808%" height="15" fill="rgb(218,33,15)" fg:x="240" fg:w="1"/><text x="19.6518%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.4018%" y="357" width="0.0808%" height="15" fill="rgb(217,202,41)" fg:x="240" fg:w="1"/><text x="19.6518%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.4018%" y="341" width="0.0808%" height="15" fill="rgb(234,133,5)" fg:x="240" fg:w="1"/><text x="19.6518%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.4018%" y="325" width="0.0808%" height="15" fill="rgb(240,47,40)" fg:x="240" fg:w="1"/><text x="19.6518%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.4018%" y="309" width="0.0808%" height="15" fill="rgb(234,166,26)" fg:x="240" fg:w="1"/><text x="19.6518%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.4018%" y="293" width="0.0808%" height="15" fill="rgb(244,125,51)" fg:x="240" fg:w="1"/><text x="19.6518%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.4018%" y="277" width="0.0808%" height="15" fill="rgb(229,171,11)" fg:x="240" fg:w="1"/><text x="19.6518%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.4018%" y="261" width="0.0808%" height="15" fill="rgb(224,38,45)" fg:x="240" fg:w="1"/><text x="19.6518%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.4018%" y="245" width="0.0808%" height="15" fill="rgb(237,27,7)" fg:x="240" fg:w="1"/><text x="19.6518%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="19.4826%" y="325" width="0.0808%" height="15" fill="rgb(216,52,7)" fg:x="241" fg:w="1"/><text x="19.7326%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.4826%" y="309" width="0.0808%" height="15" fill="rgb(243,11,11)" fg:x="241" fg:w="1"/><text x="19.7326%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.4826%" y="293" width="0.0808%" height="15" fill="rgb(253,167,20)" fg:x="241" fg:w="1"/><text x="19.7326%" y="303.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="19.4018%" y="453" width="0.3234%" height="15" fill="rgb(215,207,5)" fg:x="240" fg:w="4"/><text x="19.6518%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="19.4018%" y="437" width="0.3234%" height="15" fill="rgb(252,127,31)" fg:x="240" fg:w="4"/><text x="19.6518%" y="447.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="19.4018%" y="421" width="0.3234%" height="15" fill="rgb(209,106,27)" fg:x="240" fg:w="4"/><text x="19.6518%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="19.4018%" y="405" width="0.3234%" height="15" fill="rgb(214,220,18)" fg:x="240" fg:w="4"/><text x="19.6518%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="19.4826%" y="389" width="0.2425%" height="15" fill="rgb(237,89,12)" fg:x="241" fg:w="3"/><text x="19.7326%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.4826%" y="373" width="0.2425%" height="15" fill="rgb(209,167,36)" fg:x="241" fg:w="3"/><text x="19.7326%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="19.4826%" y="357" width="0.2425%" height="15" fill="rgb(243,45,22)" fg:x="241" fg:w="3"/><text x="19.7326%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.4826%" y="341" width="0.2425%" height="15" fill="rgb(239,2,46)" fg:x="241" fg:w="3"/><text x="19.7326%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.5635%" y="325" width="0.1617%" height="15" fill="rgb(241,101,0)" fg:x="242" fg:w="2"/><text x="19.8135%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.5635%" y="309" width="0.1617%" height="15" fill="rgb(244,34,31)" fg:x="242" fg:w="2"/><text x="19.8135%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.6443%" y="293" width="0.0808%" height="15" fill="rgb(248,23,22)" fg:x="243" fg:w="1"/><text x="19.8943%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.6443%" y="277" width="0.0808%" height="15" fill="rgb(218,27,48)" fg:x="243" fg:w="1"/><text x="19.8943%" y="287.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="19.7251%" y="453" width="0.0808%" height="15" fill="rgb(232,78,1)" fg:x="244" fg:w="1"/><text x="19.9751%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.7251%" y="437" width="0.0808%" height="15" fill="rgb(233,169,12)" fg:x="244" fg:w="1"/><text x="19.9751%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.7251%" y="421" width="0.0808%" height="15" fill="rgb(225,222,54)" fg:x="244" fg:w="1"/><text x="19.9751%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="19.7251%" y="405" width="0.0808%" height="15" fill="rgb(245,126,29)" fg:x="244" fg:w="1"/><text x="19.9751%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.7251%" y="389" width="0.0808%" height="15" fill="rgb(241,63,48)" fg:x="244" fg:w="1"/><text x="19.9751%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="19.8060%" y="453" width="0.0808%" height="15" fill="rgb(235,126,38)" fg:x="245" fg:w="1"/><text x="20.0560%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8060%" y="437" width="0.0808%" height="15" fill="rgb(232,96,49)" fg:x="245" fg:w="1"/><text x="20.0560%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="20.0485%" y="421" width="0.2425%" height="15" fill="rgb(211,146,40)" fg:x="248" fg:w="3"/><text x="20.2985%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.1293%" y="405" width="0.1617%" height="15" fill="rgb(247,93,44)" fg:x="249" fg:w="2"/><text x="20.3793%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="20.1293%" y="389" width="0.1617%" height="15" fill="rgb(251,41,49)" fg:x="249" fg:w="2"/><text x="20.3793%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="20.2910%" y="421" width="0.0808%" height="15" fill="rgb(218,155,12)" fg:x="251" fg:w="1"/><text x="20.5410%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.2910%" y="405" width="0.0808%" height="15" fill="rgb(221,161,30)" fg:x="251" fg:w="1"/><text x="20.5410%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.2910%" y="389" width="0.0808%" height="15" fill="rgb(221,179,11)" fg:x="251" fg:w="1"/><text x="20.5410%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="20.3719%" y="405" width="0.0808%" height="15" fill="rgb(224,170,48)" fg:x="252" fg:w="1"/><text x="20.6219%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="20.3719%" y="389" width="0.0808%" height="15" fill="rgb(223,117,5)" fg:x="252" fg:w="1"/><text x="20.6219%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3719%" y="373" width="0.0808%" height="15" fill="rgb(209,52,20)" fg:x="252" fg:w="1"/><text x="20.6219%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="20.3719%" y="357" width="0.0808%" height="15" fill="rgb(209,19,41)" fg:x="252" fg:w="1"/><text x="20.6219%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3719%" y="341" width="0.0808%" height="15" fill="rgb(210,177,12)" fg:x="252" fg:w="1"/><text x="20.6219%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="20.3719%" y="325" width="0.0808%" height="15" fill="rgb(211,159,37)" fg:x="252" fg:w="1"/><text x="20.6219%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (22 samples, 1.78%)</title><rect x="18.7551%" y="485" width="1.7785%" height="15" fill="rgb(209,20,2)" fg:x="232" fg:w="22"/><text x="19.0051%" y="495.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (14 samples, 1.13%)</title><rect x="19.4018%" y="469" width="1.1318%" height="15" fill="rgb(244,3,46)" fg:x="240" fg:w="14"/><text x="19.6518%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.65%)</title><rect x="19.8868%" y="453" width="0.6467%" height="15" fill="rgb(220,94,38)" fg:x="246" fg:w="8"/><text x="20.1368%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.65%)</title><rect x="19.8868%" y="437" width="0.6467%" height="15" fill="rgb(253,14,31)" fg:x="246" fg:w="8"/><text x="20.1368%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="20.3719%" y="421" width="0.1617%" height="15" fill="rgb(234,176,13)" fg:x="252" fg:w="2"/><text x="20.6219%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.4527%" y="405" width="0.0808%" height="15" fill="rgb(218,62,25)" fg:x="253" fg:w="1"/><text x="20.7027%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="20.5335%" y="485" width="0.1617%" height="15" fill="rgb(216,124,40)" fg:x="254" fg:w="2"/><text x="20.7835%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.5335%" y="469" width="0.1617%" height="15" fill="rgb(228,170,12)" fg:x="254" fg:w="2"/><text x="20.7835%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6144%" y="453" width="0.0808%" height="15" fill="rgb(231,226,5)" fg:x="255" fg:w="1"/><text x="20.8644%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="20.6952%" y="469" width="0.0808%" height="15" fill="rgb(237,122,22)" fg:x="256" fg:w="1"/><text x="20.9452%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.6952%" y="453" width="0.0808%" height="15" fill="rgb(209,185,25)" fg:x="256" fg:w="1"/><text x="20.9452%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.6952%" y="437" width="0.0808%" height="15" fill="rgb(228,200,32)" fg:x="256" fg:w="1"/><text x="20.9452%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="20.7761%" y="389" width="0.1617%" height="15" fill="rgb(217,140,10)" fg:x="257" fg:w="2"/><text x="21.0261%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="20.7761%" y="373" width="0.1617%" height="15" fill="rgb(253,17,24)" fg:x="257" fg:w="2"/><text x="21.0261%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="20.7761%" y="357" width="0.1617%" height="15" fill="rgb(212,61,6)" fg:x="257" fg:w="2"/><text x="21.0261%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="20.7761%" y="341" width="0.1617%" height="15" fill="rgb(205,14,25)" fg:x="257" fg:w="2"/><text x="21.0261%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="20.7761%" y="325" width="0.1617%" height="15" fill="rgb(232,69,41)" fg:x="257" fg:w="2"/><text x="21.0261%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="20.7761%" y="309" width="0.1617%" height="15" fill="rgb(241,106,47)" fg:x="257" fg:w="2"/><text x="21.0261%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="20.7761%" y="293" width="0.1617%" height="15" fill="rgb(210,213,53)" fg:x="257" fg:w="2"/><text x="21.0261%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="20.7761%" y="277" width="0.1617%" height="15" fill="rgb(253,175,27)" fg:x="257" fg:w="2"/><text x="21.0261%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="20.7761%" y="261" width="0.1617%" height="15" fill="rgb(211,171,24)" fg:x="257" fg:w="2"/><text x="21.0261%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="20.7761%" y="245" width="0.1617%" height="15" fill="rgb(229,80,7)" fg:x="257" fg:w="2"/><text x="21.0261%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="20.7761%" y="229" width="0.1617%" height="15" fill="rgb(212,46,39)" fg:x="257" fg:w="2"/><text x="21.0261%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.7761%" y="213" width="0.1617%" height="15" fill="rgb(240,80,45)" fg:x="257" fg:w="2"/><text x="21.0261%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.7761%" y="437" width="0.2425%" height="15" fill="rgb(253,177,40)" fg:x="257" fg:w="3"/><text x="21.0261%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.7761%" y="421" width="0.2425%" height="15" fill="rgb(249,200,15)" fg:x="257" fg:w="3"/><text x="21.0261%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.7761%" y="405" width="0.2425%" height="15" fill="rgb(217,78,26)" fg:x="257" fg:w="3"/><text x="21.0261%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9378%" y="389" width="0.0808%" height="15" fill="rgb(254,151,32)" fg:x="259" fg:w="1"/><text x="21.1878%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.0186%" y="437" width="0.0808%" height="15" fill="rgb(226,165,27)" fg:x="260" fg:w="1"/><text x="21.2686%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1803%" y="373" width="0.0808%" height="15" fill="rgb(250,206,4)" fg:x="262" fg:w="1"/><text x="21.4303%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.1803%" y="357" width="0.0808%" height="15" fill="rgb(231,229,27)" fg:x="262" fg:w="1"/><text x="21.4303%" y="367.50"></text></g><g><title>plugins_core::build::Build::save (32 samples, 2.59%)</title><rect x="18.7551%" y="501" width="2.5869%" height="15" fill="rgb(239,217,8)" fg:x="232" fg:w="32"/><text x="19.0051%" y="511.50">pl..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.65%)</title><rect x="20.6952%" y="485" width="0.6467%" height="15" fill="rgb(225,204,27)" fg:x="256" fg:w="8"/><text x="20.9452%" y="495.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.57%)</title><rect x="20.7761%" y="469" width="0.5659%" height="15" fill="rgb(230,56,32)" fg:x="257" fg:w="7"/><text x="21.0261%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (7 samples, 0.57%)</title><rect x="20.7761%" y="453" width="0.5659%" height="15" fill="rgb(222,56,27)" fg:x="257" fg:w="7"/><text x="21.0261%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="21.0994%" y="437" width="0.2425%" height="15" fill="rgb(253,108,27)" fg:x="261" fg:w="3"/><text x="21.3494%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="21.0994%" y="421" width="0.2425%" height="15" fill="rgb(212,87,36)" fg:x="261" fg:w="3"/><text x="21.3494%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="21.0994%" y="405" width="0.2425%" height="15" fill="rgb(247,82,36)" fg:x="261" fg:w="3"/><text x="21.3494%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="21.0994%" y="389" width="0.2425%" height="15" fill="rgb(222,143,9)" fg:x="261" fg:w="3"/><text x="21.3494%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.2611%" y="373" width="0.0808%" height="15" fill="rgb(238,162,48)" fg:x="263" fg:w="1"/><text x="21.5111%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.2611%" y="357" width="0.0808%" height="15" fill="rgb(221,59,43)" fg:x="263" fg:w="1"/><text x="21.5111%" y="367.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="21.3420%" y="469" width="0.0808%" height="15" fill="rgb(205,166,41)" fg:x="264" fg:w="1"/><text x="21.5920%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="21.3420%" y="453" width="0.0808%" height="15" fill="rgb(241,186,40)" fg:x="264" fg:w="1"/><text x="21.5920%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (2 samples, 0.16%)</title><rect x="21.3420%" y="501" width="0.1617%" height="15" fill="rgb(216,119,35)" fg:x="264" fg:w="2"/><text x="21.5920%" y="511.50"></text></g><g><title>plugins_core::tools::set_quantity (2 samples, 0.16%)</title><rect x="21.3420%" y="485" width="0.1617%" height="15" fill="rgb(208,68,38)" fg:x="264" fg:w="2"/><text x="21.5920%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="21.4228%" y="469" width="0.0808%" height="15" fill="rgb(217,113,1)" fg:x="265" fg:w="1"/><text x="21.6728%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (1 samples, 0.08%)</title><rect x="21.4228%" y="453" width="0.0808%" height="15" fill="rgb(242,153,3)" fg:x="265" fg:w="1"/><text x="21.6728%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.4228%" y="437" width="0.0808%" height="15" fill="rgb(229,76,35)" fg:x="265" fg:w="1"/><text x="21.6728%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="21.4228%" y="421" width="0.0808%" height="15" fill="rgb(229,125,34)" fg:x="265" fg:w="1"/><text x="21.6728%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.4228%" y="405" width="0.0808%" height="15" fill="rgb(238,179,36)" fg:x="265" fg:w="1"/><text x="21.6728%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6653%" y="389" width="0.0808%" height="15" fill="rgb(244,183,19)" fg:x="268" fg:w="1"/><text x="21.9153%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6653%" y="373" width="0.0808%" height="15" fill="rgb(216,85,49)" fg:x="268" fg:w="1"/><text x="21.9153%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6653%" y="357" width="0.0808%" height="15" fill="rgb(208,161,47)" fg:x="268" fg:w="1"/><text x="21.9153%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6653%" y="341" width="0.0808%" height="15" fill="rgb(233,210,18)" fg:x="268" fg:w="1"/><text x="21.9153%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7462%" y="325" width="0.0808%" height="15" fill="rgb(205,104,42)" fg:x="269" fg:w="1"/><text x="21.9962%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7462%" y="309" width="0.0808%" height="15" fill="rgb(248,90,43)" fg:x="269" fg:w="1"/><text x="21.9962%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="21.6653%" y="437" width="0.2425%" height="15" fill="rgb(206,198,11)" fg:x="268" fg:w="3"/><text x="21.9153%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="21.6653%" y="421" width="0.2425%" height="15" fill="rgb(239,165,27)" fg:x="268" fg:w="3"/><text x="21.9153%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="21.6653%" y="405" width="0.2425%" height="15" fill="rgb(246,44,32)" fg:x="268" fg:w="3"/><text x="21.9153%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="21.7462%" y="389" width="0.1617%" height="15" fill="rgb(252,65,42)" fg:x="269" fg:w="2"/><text x="21.9962%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.7462%" y="373" width="0.1617%" height="15" fill="rgb(246,197,18)" fg:x="269" fg:w="2"/><text x="21.9962%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="21.7462%" y="357" width="0.1617%" height="15" fill="rgb(216,192,4)" fg:x="269" fg:w="2"/><text x="21.9962%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.7462%" y="341" width="0.1617%" height="15" fill="rgb(208,117,10)" fg:x="269" fg:w="2"/><text x="21.9962%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.8270%" y="325" width="0.0808%" height="15" fill="rgb(240,61,47)" fg:x="270" fg:w="1"/><text x="22.0770%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8270%" y="309" width="0.0808%" height="15" fill="rgb(228,178,21)" fg:x="270" fg:w="1"/><text x="22.0770%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.8270%" y="293" width="0.0808%" height="15" fill="rgb(219,96,54)" fg:x="270" fg:w="1"/><text x="22.0770%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8270%" y="277" width="0.0808%" height="15" fill="rgb(250,177,24)" fg:x="270" fg:w="1"/><text x="22.0770%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="21.9078%" y="421" width="0.0808%" height="15" fill="rgb(242,154,46)" fg:x="271" fg:w="1"/><text x="22.1578%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9887%" y="325" width="0.0808%" height="15" fill="rgb(226,176,29)" fg:x="272" fg:w="1"/><text x="22.2387%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.9887%" y="309" width="0.0808%" height="15" fill="rgb(226,29,2)" fg:x="272" fg:w="1"/><text x="22.2387%" y="319.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.49%)</title><rect x="21.6653%" y="469" width="0.4850%" height="15" fill="rgb(237,104,14)" fg:x="268" fg:w="6"/><text x="21.9153%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.49%)</title><rect x="21.6653%" y="453" width="0.4850%" height="15" fill="rgb(245,207,31)" fg:x="268" fg:w="6"/><text x="21.9153%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="21.9078%" y="437" width="0.2425%" height="15" fill="rgb(229,211,45)" fg:x="271" fg:w="3"/><text x="22.1578%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="21.9887%" y="421" width="0.1617%" height="15" fill="rgb(229,113,15)" fg:x="272" fg:w="2"/><text x="22.2387%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="21.9887%" y="405" width="0.1617%" height="15" fill="rgb(237,147,15)" fg:x="272" fg:w="2"/><text x="22.2387%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="21.9887%" y="389" width="0.1617%" height="15" fill="rgb(244,120,12)" fg:x="272" fg:w="2"/><text x="22.2387%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.9887%" y="373" width="0.1617%" height="15" fill="rgb(205,120,12)" fg:x="272" fg:w="2"/><text x="22.2387%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="21.9887%" y="357" width="0.1617%" height="15" fill="rgb(231,26,45)" fg:x="272" fg:w="2"/><text x="22.2387%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.9887%" y="341" width="0.1617%" height="15" fill="rgb(246,98,1)" fg:x="272" fg:w="2"/><text x="22.2387%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.0695%" y="325" width="0.0808%" height="15" fill="rgb(207,68,45)" fg:x="273" fg:w="1"/><text x="22.3195%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0695%" y="309" width="0.0808%" height="15" fill="rgb(231,27,38)" fg:x="273" fg:w="1"/><text x="22.3195%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="22.1504%" y="453" width="0.0808%" height="15" fill="rgb(214,223,3)" fg:x="274" fg:w="1"/><text x="22.4004%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.1504%" y="437" width="0.0808%" height="15" fill="rgb(228,195,46)" fg:x="274" fg:w="1"/><text x="22.4004%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.1504%" y="421" width="0.0808%" height="15" fill="rgb(231,100,42)" fg:x="274" fg:w="1"/><text x="22.4004%" y="431.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="22.1504%" y="469" width="0.2425%" height="15" fill="rgb(236,53,4)" fg:x="274" fg:w="3"/><text x="22.4004%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="22.2312%" y="453" width="0.1617%" height="15" fill="rgb(230,152,12)" fg:x="275" fg:w="2"/><text x="22.4812%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.2312%" y="437" width="0.1617%" height="15" fill="rgb(226,101,19)" fg:x="275" fg:w="2"/><text x="22.4812%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="22.2312%" y="421" width="0.1617%" height="15" fill="rgb(250,149,32)" fg:x="275" fg:w="2"/><text x="22.4812%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="22.2312%" y="405" width="0.1617%" height="15" fill="rgb(232,178,12)" fg:x="275" fg:w="2"/><text x="22.4812%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.2312%" y="389" width="0.1617%" height="15" fill="rgb(246,151,17)" fg:x="275" fg:w="2"/><text x="22.4812%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.2312%" y="373" width="0.1617%" height="15" fill="rgb(252,17,51)" fg:x="275" fg:w="2"/><text x="22.4812%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="22.4737%" y="453" width="0.1617%" height="15" fill="rgb(250,207,23)" fg:x="278" fg:w="2"/><text x="22.7237%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.4737%" y="437" width="0.1617%" height="15" fill="rgb(205,27,5)" fg:x="278" fg:w="2"/><text x="22.7237%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.4737%" y="421" width="0.1617%" height="15" fill="rgb(224,32,19)" fg:x="278" fg:w="2"/><text x="22.7237%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5546%" y="405" width="0.0808%" height="15" fill="rgb(247,214,40)" fg:x="279" fg:w="1"/><text x="22.8046%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5546%" y="389" width="0.0808%" height="15" fill="rgb(239,199,17)" fg:x="279" fg:w="1"/><text x="22.8046%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5546%" y="373" width="0.0808%" height="15" fill="rgb(251,159,9)" fg:x="279" fg:w="1"/><text x="22.8046%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.5546%" y="357" width="0.0808%" height="15" fill="rgb(225,78,32)" fg:x="279" fg:w="1"/><text x="22.8046%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.5546%" y="341" width="0.0808%" height="15" fill="rgb(206,97,47)" fg:x="279" fg:w="1"/><text x="22.8046%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.5546%" y="325" width="0.0808%" height="15" fill="rgb(227,107,4)" fg:x="279" fg:w="1"/><text x="22.8046%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5546%" y="309" width="0.0808%" height="15" fill="rgb(241,146,50)" fg:x="279" fg:w="1"/><text x="22.8046%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5546%" y="293" width="0.0808%" height="15" fill="rgb(232,92,30)" fg:x="279" fg:w="1"/><text x="22.8046%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.5546%" y="277" width="0.0808%" height="15" fill="rgb(222,0,40)" fg:x="279" fg:w="1"/><text x="22.8046%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.5546%" y="261" width="0.0808%" height="15" fill="rgb(219,54,33)" fg:x="279" fg:w="1"/><text x="22.8046%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.5546%" y="245" width="0.0808%" height="15" fill="rgb(226,209,28)" fg:x="279" fg:w="1"/><text x="22.8046%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.5546%" y="229" width="0.0808%" height="15" fill="rgb(254,205,35)" fg:x="279" fg:w="1"/><text x="22.8046%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5546%" y="213" width="0.0808%" height="15" fill="rgb(230,159,3)" fg:x="279" fg:w="1"/><text x="22.8046%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.6354%" y="421" width="0.0808%" height="15" fill="rgb(232,190,24)" fg:x="280" fg:w="1"/><text x="22.8854%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.6354%" y="405" width="0.0808%" height="15" fill="rgb(217,227,44)" fg:x="280" fg:w="1"/><text x="22.8854%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="22.6354%" y="389" width="0.0808%" height="15" fill="rgb(236,211,1)" fg:x="280" fg:w="1"/><text x="22.8854%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.6354%" y="373" width="0.0808%" height="15" fill="rgb(250,127,46)" fg:x="280" fg:w="1"/><text x="22.8854%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.6354%" y="357" width="0.0808%" height="15" fill="rgb(229,213,6)" fg:x="280" fg:w="1"/><text x="22.8854%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.6354%" y="341" width="0.0808%" height="15" fill="rgb(237,15,36)" fg:x="280" fg:w="1"/><text x="22.8854%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.6354%" y="325" width="0.0808%" height="15" fill="rgb(213,131,41)" fg:x="280" fg:w="1"/><text x="22.8854%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.6354%" y="309" width="0.0808%" height="15" fill="rgb(225,82,44)" fg:x="280" fg:w="1"/><text x="22.8854%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.6354%" y="293" width="0.0808%" height="15" fill="rgb(249,42,11)" fg:x="280" fg:w="1"/><text x="22.8854%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.6354%" y="277" width="0.0808%" height="15" fill="rgb(253,11,29)" fg:x="280" fg:w="1"/><text x="22.8854%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.6354%" y="261" width="0.0808%" height="15" fill="rgb(206,8,54)" fg:x="280" fg:w="1"/><text x="22.8854%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.6354%" y="245" width="0.0808%" height="15" fill="rgb(222,186,2)" fg:x="280" fg:w="1"/><text x="22.8854%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.6354%" y="229" width="0.0808%" height="15" fill="rgb(221,206,53)" fg:x="280" fg:w="1"/><text x="22.8854%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.6354%" y="213" width="0.0808%" height="15" fill="rgb(230,150,21)" fg:x="280" fg:w="1"/><text x="22.8854%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.6354%" y="197" width="0.0808%" height="15" fill="rgb(253,202,10)" fg:x="280" fg:w="1"/><text x="22.8854%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.6354%" y="181" width="0.0808%" height="15" fill="rgb(238,109,40)" fg:x="280" fg:w="1"/><text x="22.8854%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.6354%" y="165" width="0.0808%" height="15" fill="rgb(247,120,22)" fg:x="280" fg:w="1"/><text x="22.8854%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.6354%" y="149" width="0.0808%" height="15" fill="rgb(207,43,30)" fg:x="280" fg:w="1"/><text x="22.8854%" y="159.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="22.3929%" y="469" width="0.4042%" height="15" fill="rgb(213,211,24)" fg:x="277" fg:w="5"/><text x="22.6429%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="22.6354%" y="453" width="0.1617%" height="15" fill="rgb(239,73,39)" fg:x="280" fg:w="2"/><text x="22.8854%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="22.6354%" y="437" width="0.1617%" height="15" fill="rgb(245,182,19)" fg:x="280" fg:w="2"/><text x="22.8854%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="22.7162%" y="421" width="0.0808%" height="15" fill="rgb(247,143,26)" fg:x="281" fg:w="1"/><text x="22.9662%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.7162%" y="405" width="0.0808%" height="15" fill="rgb(228,191,23)" fg:x="281" fg:w="1"/><text x="22.9662%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="22.7162%" y="389" width="0.0808%" height="15" fill="rgb(253,165,31)" fg:x="281" fg:w="1"/><text x="22.9662%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.7162%" y="373" width="0.0808%" height="15" fill="rgb(234,138,20)" fg:x="281" fg:w="1"/><text x="22.9662%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.7162%" y="357" width="0.0808%" height="15" fill="rgb(218,191,29)" fg:x="281" fg:w="1"/><text x="22.9662%" y="367.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="22.8779%" y="453" width="0.0808%" height="15" fill="rgb(221,157,19)" fg:x="283" fg:w="1"/><text x="23.1279%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9588%" y="453" width="0.0808%" height="15" fill="rgb(237,26,42)" fg:x="284" fg:w="1"/><text x="23.2088%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (20 samples, 1.62%)</title><rect x="21.5036%" y="501" width="1.6168%" height="15" fill="rgb(220,163,24)" fg:x="266" fg:w="20"/><text x="21.7536%" y="511.50"></text></g><g><title>plugins_core::tools::set_container (18 samples, 1.46%)</title><rect x="21.6653%" y="485" width="1.4551%" height="15" fill="rgb(242,115,20)" fg:x="268" fg:w="18"/><text x="21.9153%" y="495.50"></text></g><g><title>plugins_core::location::Location::set (4 samples, 0.32%)</title><rect x="22.7971%" y="469" width="0.3234%" height="15" fill="rgb(210,206,9)" fg:x="282" fg:w="4"/><text x="23.0471%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="23.0396%" y="453" width="0.0808%" height="15" fill="rgb(208,71,17)" fg:x="285" fg:w="1"/><text x="23.2896%" y="463.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="23.0396%" y="437" width="0.0808%" height="15" fill="rgb(233,7,5)" fg:x="285" fg:w="1"/><text x="23.2896%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.0396%" y="421" width="0.0808%" height="15" fill="rgb(207,92,33)" fg:x="285" fg:w="1"/><text x="23.2896%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="23.0396%" y="405" width="0.0808%" height="15" fill="rgb(218,87,9)" fg:x="285" fg:w="1"/><text x="23.2896%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="23.1205%" y="485" width="0.1617%" height="15" fill="rgb(219,47,37)" fg:x="286" fg:w="2"/><text x="23.3705%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="23.1205%" y="469" width="0.1617%" height="15" fill="rgb(221,152,34)" fg:x="286" fg:w="2"/><text x="23.3705%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2821%" y="437" width="0.0808%" height="15" fill="rgb(235,176,21)" fg:x="288" fg:w="1"/><text x="23.5321%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.3630%" y="293" width="0.1617%" height="15" fill="rgb(232,212,21)" fg:x="289" fg:w="2"/><text x="23.6130%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.4438%" y="277" width="0.0808%" height="15" fill="rgb(245,82,39)" fg:x="290" fg:w="1"/><text x="23.6938%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="23.3630%" y="405" width="0.3234%" height="15" fill="rgb(241,52,51)" fg:x="289" fg:w="4"/><text x="23.6130%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="23.3630%" y="389" width="0.3234%" height="15" fill="rgb(219,91,24)" fg:x="289" fg:w="4"/><text x="23.6130%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="23.3630%" y="373" width="0.3234%" height="15" fill="rgb(241,142,12)" fg:x="289" fg:w="4"/><text x="23.6130%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="23.3630%" y="357" width="0.3234%" height="15" fill="rgb(230,27,9)" fg:x="289" fg:w="4"/><text x="23.6130%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="23.3630%" y="341" width="0.3234%" height="15" fill="rgb(249,181,32)" fg:x="289" fg:w="4"/><text x="23.6130%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (4 samples, 0.32%)</title><rect x="23.3630%" y="325" width="0.3234%" height="15" fill="rgb(230,107,3)" fg:x="289" fg:w="4"/><text x="23.6130%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="23.3630%" y="309" width="0.3234%" height="15" fill="rgb(246,204,14)" fg:x="289" fg:w="4"/><text x="23.6130%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.5247%" y="293" width="0.1617%" height="15" fill="rgb(213,192,47)" fg:x="291" fg:w="2"/><text x="23.7747%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.5247%" y="277" width="0.1617%" height="15" fill="rgb(240,44,36)" fg:x="291" fg:w="2"/><text x="23.7747%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6055%" y="261" width="0.0808%" height="15" fill="rgb(244,209,38)" fg:x="292" fg:w="1"/><text x="23.8555%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6863%" y="357" width="0.0808%" height="15" fill="rgb(219,34,37)" fg:x="293" fg:w="1"/><text x="23.9363%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6863%" y="341" width="0.0808%" height="15" fill="rgb(210,28,6)" fg:x="293" fg:w="1"/><text x="23.9363%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6863%" y="325" width="0.0808%" height="15" fill="rgb(244,110,52)" fg:x="293" fg:w="1"/><text x="23.9363%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6863%" y="309" width="0.0808%" height="15" fill="rgb(254,124,47)" fg:x="293" fg:w="1"/><text x="23.9363%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.65%)</title><rect x="23.2821%" y="485" width="0.6467%" height="15" fill="rgb(254,110,13)" fg:x="288" fg:w="8"/><text x="23.5321%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="23.2821%" y="469" width="0.6467%" height="15" fill="rgb(252,57,21)" fg:x="288" fg:w="8"/><text x="23.5321%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.65%)</title><rect x="23.2821%" y="453" width="0.6467%" height="15" fill="rgb(242,60,45)" fg:x="288" fg:w="8"/><text x="23.5321%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (7 samples, 0.57%)</title><rect x="23.3630%" y="437" width="0.5659%" height="15" fill="rgb(234,49,30)" fg:x="289" fg:w="7"/><text x="23.6130%" y="447.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.57%)</title><rect x="23.3630%" y="421" width="0.5659%" height="15" fill="rgb(218,98,6)" fg:x="289" fg:w="7"/><text x="23.6130%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="23.6863%" y="405" width="0.2425%" height="15" fill="rgb(220,174,29)" fg:x="293" fg:w="3"/><text x="23.9363%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="23.6863%" y="389" width="0.2425%" height="15" fill="rgb(236,163,23)" fg:x="293" fg:w="3"/><text x="23.9363%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="23.6863%" y="373" width="0.2425%" height="15" fill="rgb(242,114,45)" fg:x="293" fg:w="3"/><text x="23.9363%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.7672%" y="357" width="0.1617%" height="15" fill="rgb(232,10,53)" fg:x="294" fg:w="2"/><text x="24.0172%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.7672%" y="341" width="0.1617%" height="15" fill="rgb(245,108,29)" fg:x="294" fg:w="2"/><text x="24.0172%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.7672%" y="325" width="0.1617%" height="15" fill="rgb(240,89,53)" fg:x="294" fg:w="2"/><text x="24.0172%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.7672%" y="309" width="0.1617%" height="15" fill="rgb(226,60,45)" fg:x="294" fg:w="2"/><text x="24.0172%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.7672%" y="293" width="0.1617%" height="15" fill="rgb(230,41,44)" fg:x="294" fg:w="2"/><text x="24.0172%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.7672%" y="277" width="0.1617%" height="15" fill="rgb(230,26,20)" fg:x="294" fg:w="2"/><text x="24.0172%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.8480%" y="261" width="0.0808%" height="15" fill="rgb(237,170,32)" fg:x="295" fg:w="1"/><text x="24.0980%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::EntityPtr&gt;&gt; (2 samples, 0.16%)</title><rect x="23.9289%" y="485" width="0.1617%" height="15" fill="rgb(212,35,42)" fg:x="296" fg:w="2"/><text x="24.1789%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="23.9289%" y="469" width="0.1617%" height="15" fill="rgb(227,31,34)" fg:x="296" fg:w="2"/><text x="24.1789%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="24.1714%" y="373" width="0.1617%" height="15" fill="rgb(216,19,18)" fg:x="299" fg:w="2"/><text x="24.4214%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="24.1714%" y="357" width="0.1617%" height="15" fill="rgb(211,133,42)" fg:x="299" fg:w="2"/><text x="24.4214%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="24.1714%" y="341" width="0.1617%" height="15" fill="rgb(244,66,13)" fg:x="299" fg:w="2"/><text x="24.4214%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="24.1714%" y="325" width="0.1617%" height="15" fill="rgb(218,185,50)" fg:x="299" fg:w="2"/><text x="24.4214%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="24.1714%" y="309" width="0.1617%" height="15" fill="rgb(219,149,13)" fg:x="299" fg:w="2"/><text x="24.4214%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="24.1714%" y="293" width="0.1617%" height="15" fill="rgb(221,125,0)" fg:x="299" fg:w="2"/><text x="24.4214%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.2522%" y="277" width="0.0808%" height="15" fill="rgb(247,126,27)" fg:x="300" fg:w="1"/><text x="24.5022%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="24.1714%" y="453" width="0.3234%" height="15" fill="rgb(250,138,30)" fg:x="299" fg:w="4"/><text x="24.4214%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="24.1714%" y="437" width="0.3234%" height="15" fill="rgb(230,151,9)" fg:x="299" fg:w="4"/><text x="24.4214%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="24.1714%" y="421" width="0.3234%" height="15" fill="rgb(233,80,38)" fg:x="299" fg:w="4"/><text x="24.4214%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="24.1714%" y="405" width="0.3234%" height="15" fill="rgb(232,68,43)" fg:x="299" fg:w="4"/><text x="24.4214%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="24.1714%" y="389" width="0.3234%" height="15" fill="rgb(254,5,50)" fg:x="299" fg:w="4"/><text x="24.4214%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="24.3331%" y="373" width="0.1617%" height="15" fill="rgb(225,45,5)" fg:x="301" fg:w="2"/><text x="24.5831%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="24.3331%" y="357" width="0.1617%" height="15" fill="rgb(239,22,3)" fg:x="301" fg:w="2"/><text x="24.5831%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.4947%" y="453" width="0.1617%" height="15" fill="rgb(243,129,0)" fg:x="303" fg:w="2"/><text x="24.7447%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.4947%" y="437" width="0.1617%" height="15" fill="rgb(223,164,0)" fg:x="303" fg:w="2"/><text x="24.7447%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="24.4947%" y="421" width="0.1617%" height="15" fill="rgb(221,46,29)" fg:x="303" fg:w="2"/><text x="24.7447%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (8 samples, 0.65%)</title><rect x="24.0905%" y="469" width="0.6467%" height="15" fill="rgb(205,97,47)" fg:x="298" fg:w="8"/><text x="24.3405%" y="479.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="24.6564%" y="453" width="0.0808%" height="15" fill="rgb(249,14,8)" fg:x="305" fg:w="1"/><text x="24.9064%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6564%" y="437" width="0.0808%" height="15" fill="rgb(216,77,3)" fg:x="305" fg:w="1"/><text x="24.9064%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::delete (1 samples, 0.08%)</title><rect x="24.7373%" y="469" width="0.0808%" height="15" fill="rgb(206,168,54)" fg:x="306" fg:w="1"/><text x="24.9873%" y="479.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="24.8181%" y="453" width="0.0808%" height="15" fill="rgb(236,3,41)" fg:x="307" fg:w="1"/><text x="25.0681%" y="463.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="24.8181%" y="437" width="0.0808%" height="15" fill="rgb(231,132,24)" fg:x="307" fg:w="1"/><text x="25.0681%" y="447.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="24.8181%" y="421" width="0.0808%" height="15" fill="rgb(227,221,40)" fg:x="307" fg:w="1"/><text x="25.0681%" y="431.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="24.8181%" y="405" width="0.0808%" height="15" fill="rgb(233,151,11)" fg:x="307" fg:w="1"/><text x="25.0681%" y="415.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="24.8181%" y="389" width="0.0808%" height="15" fill="rgb(247,81,35)" fg:x="307" fg:w="1"/><text x="25.0681%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="24.8181%" y="373" width="0.0808%" height="15" fill="rgb(243,128,48)" fg:x="307" fg:w="1"/><text x="25.0681%" y="383.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="24.8181%" y="357" width="0.0808%" height="15" fill="rgb(253,16,10)" fg:x="307" fg:w="1"/><text x="25.0681%" y="367.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="24.8181%" y="341" width="0.0808%" height="15" fill="rgb(228,67,27)" fg:x="307" fg:w="1"/><text x="25.0681%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.8989%" y="293" width="0.0808%" height="15" fill="rgb(231,105,25)" fg:x="308" fg:w="1"/><text x="25.1489%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.8989%" y="277" width="0.0808%" height="15" fill="rgb(213,166,47)" fg:x="308" fg:w="1"/><text x="25.1489%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.8989%" y="261" width="0.0808%" height="15" fill="rgb(209,27,10)" fg:x="308" fg:w="1"/><text x="25.1489%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.8989%" y="245" width="0.0808%" height="15" fill="rgb(241,44,30)" fg:x="308" fg:w="1"/><text x="25.1489%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.8989%" y="229" width="0.0808%" height="15" fill="rgb(223,216,15)" fg:x="308" fg:w="1"/><text x="25.1489%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.8989%" y="213" width="0.0808%" height="15" fill="rgb(227,14,7)" fg:x="308" fg:w="1"/><text x="25.1489%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8989%" y="197" width="0.0808%" height="15" fill="rgb(237,14,5)" fg:x="308" fg:w="1"/><text x="25.1489%" y="207.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="24.8989%" y="389" width="0.2425%" height="15" fill="rgb(232,14,36)" fg:x="308" fg:w="3"/><text x="25.1489%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="24.8989%" y="373" width="0.2425%" height="15" fill="rgb(234,0,38)" fg:x="308" fg:w="3"/><text x="25.1489%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="24.8989%" y="357" width="0.2425%" height="15" fill="rgb(207,170,14)" fg:x="308" fg:w="3"/><text x="25.1489%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="24.8989%" y="341" width="0.2425%" height="15" fill="rgb(252,45,13)" fg:x="308" fg:w="3"/><text x="25.1489%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="24.8989%" y="325" width="0.2425%" height="15" fill="rgb(213,142,7)" fg:x="308" fg:w="3"/><text x="25.1489%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="24.8989%" y="309" width="0.2425%" height="15" fill="rgb(216,157,23)" fg:x="308" fg:w="3"/><text x="25.1489%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="24.9798%" y="293" width="0.1617%" height="15" fill="rgb(212,145,33)" fg:x="309" fg:w="2"/><text x="25.2298%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="24.9798%" y="277" width="0.1617%" height="15" fill="rgb(233,26,13)" fg:x="309" fg:w="2"/><text x="25.2298%" y="287.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="24.8989%" y="421" width="0.4042%" height="15" fill="rgb(219,196,19)" fg:x="308" fg:w="5"/><text x="25.1489%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.40%)</title><rect x="24.8989%" y="405" width="0.4042%" height="15" fill="rgb(246,56,21)" fg:x="308" fg:w="5"/><text x="25.1489%" y="415.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="25.1415%" y="389" width="0.1617%" height="15" fill="rgb(222,28,53)" fg:x="311" fg:w="2"/><text x="25.3915%" y="399.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="25.2223%" y="373" width="0.0808%" height="15" fill="rgb(224,5,27)" fg:x="312" fg:w="1"/><text x="25.4723%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2223%" y="357" width="0.0808%" height="15" fill="rgb(220,153,33)" fg:x="312" fg:w="1"/><text x="25.4723%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="25.5457%" y="357" width="0.1617%" height="15" fill="rgb(226,58,19)" fg:x="316" fg:w="2"/><text x="25.7957%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="25.7074%" y="341" width="0.1617%" height="15" fill="rgb(239,112,23)" fg:x="318" fg:w="2"/><text x="25.9574%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.7882%" y="325" width="0.0808%" height="15" fill="rgb(251,213,20)" fg:x="319" fg:w="1"/><text x="26.0382%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.7882%" y="309" width="0.0808%" height="15" fill="rgb(215,181,21)" fg:x="319" fg:w="1"/><text x="26.0382%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.7882%" y="293" width="0.0808%" height="15" fill="rgb(240,8,35)" fg:x="319" fg:w="1"/><text x="26.0382%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.7882%" y="277" width="0.0808%" height="15" fill="rgb(232,203,3)" fg:x="319" fg:w="1"/><text x="26.0382%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.7882%" y="261" width="0.0808%" height="15" fill="rgb(214,202,43)" fg:x="319" fg:w="1"/><text x="26.0382%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.7882%" y="245" width="0.0808%" height="15" fill="rgb(254,35,11)" fg:x="319" fg:w="1"/><text x="26.0382%" y="255.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="25.7074%" y="357" width="0.2425%" height="15" fill="rgb(239,173,13)" fg:x="318" fg:w="3"/><text x="25.9574%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.8690%" y="341" width="0.0808%" height="15" fill="rgb(220,141,0)" fg:x="320" fg:w="1"/><text x="26.1190%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.8690%" y="325" width="0.0808%" height="15" fill="rgb(210,98,12)" fg:x="320" fg:w="1"/><text x="26.1190%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.8690%" y="309" width="0.0808%" height="15" fill="rgb(254,153,22)" fg:x="320" fg:w="1"/><text x="26.1190%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.1116%" y="341" width="0.0808%" height="15" fill="rgb(247,223,17)" fg:x="323" fg:w="1"/><text x="26.3616%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.1116%" y="325" width="0.0808%" height="15" fill="rgb(246,56,7)" fg:x="323" fg:w="1"/><text x="26.3616%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.1116%" y="309" width="0.0808%" height="15" fill="rgb(240,226,12)" fg:x="323" fg:w="1"/><text x="26.3616%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.1116%" y="293" width="0.0808%" height="15" fill="rgb(205,87,46)" fg:x="323" fg:w="1"/><text x="26.3616%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="26.1924%" y="341" width="0.3234%" height="15" fill="rgb(245,214,51)" fg:x="324" fg:w="4"/><text x="26.4424%" y="351.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="26.1924%" y="325" width="0.3234%" height="15" fill="rgb(223,172,33)" fg:x="324" fg:w="4"/><text x="26.4424%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.3541%" y="309" width="0.1617%" height="15" fill="rgb(227,203,34)" fg:x="326" fg:w="2"/><text x="26.6041%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.4349%" y="293" width="0.0808%" height="15" fill="rgb(248,143,44)" fg:x="327" fg:w="1"/><text x="26.6849%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.4349%" y="277" width="0.0808%" height="15" fill="rgb(226,162,5)" fg:x="327" fg:w="1"/><text x="26.6849%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.4349%" y="261" width="0.0808%" height="15" fill="rgb(211,143,1)" fg:x="327" fg:w="1"/><text x="26.6849%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.4349%" y="245" width="0.0808%" height="15" fill="rgb(224,96,15)" fg:x="327" fg:w="1"/><text x="26.6849%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.5158%" y="325" width="0.0808%" height="15" fill="rgb(222,4,38)" fg:x="328" fg:w="1"/><text x="26.7658%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="26.6774%" y="277" width="0.0808%" height="15" fill="rgb(253,228,15)" fg:x="330" fg:w="1"/><text x="26.9274%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.6774%" y="261" width="0.0808%" height="15" fill="rgb(242,194,12)" fg:x="330" fg:w="1"/><text x="26.9274%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="26.7583%" y="277" width="0.0808%" height="15" fill="rgb(214,177,31)" fg:x="331" fg:w="1"/><text x="27.0083%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="26.7583%" y="261" width="0.0808%" height="15" fill="rgb(226,58,51)" fg:x="331" fg:w="1"/><text x="27.0083%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="26.5966%" y="325" width="0.3234%" height="15" fill="rgb(250,119,16)" fg:x="329" fg:w="4"/><text x="26.8466%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="26.6774%" y="309" width="0.2425%" height="15" fill="rgb(223,128,53)" fg:x="330" fg:w="3"/><text x="26.9274%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="26.6774%" y="293" width="0.2425%" height="15" fill="rgb(251,199,15)" fg:x="330" fg:w="3"/><text x="26.9274%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.8391%" y="277" width="0.0808%" height="15" fill="rgb(235,168,42)" fg:x="332" fg:w="1"/><text x="27.0891%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.8391%" y="261" width="0.0808%" height="15" fill="rgb(250,210,17)" fg:x="332" fg:w="1"/><text x="27.0891%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="26.9200%" y="325" width="0.4850%" height="15" fill="rgb(226,36,41)" fg:x="333" fg:w="6"/><text x="27.1700%" y="335.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.1625%" y="309" width="0.2425%" height="15" fill="rgb(225,87,10)" fg:x="336" fg:w="3"/><text x="27.4125%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.2433%" y="293" width="0.1617%" height="15" fill="rgb(228,83,9)" fg:x="337" fg:w="2"/><text x="27.4933%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.3242%" y="277" width="0.0808%" height="15" fill="rgb(225,16,36)" fg:x="338" fg:w="1"/><text x="27.5742%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.6475%" y="309" width="0.0808%" height="15" fill="rgb(242,198,13)" fg:x="342" fg:w="1"/><text x="27.8975%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="27.7284%" y="309" width="0.1617%" height="15" fill="rgb(239,25,51)" fg:x="343" fg:w="2"/><text x="27.9784%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.7284%" y="293" width="0.1617%" height="15" fill="rgb(239,28,37)" fg:x="343" fg:w="2"/><text x="27.9784%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.8092%" y="277" width="0.0808%" height="15" fill="rgb(234,70,17)" fg:x="344" fg:w="1"/><text x="28.0592%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.8092%" y="261" width="0.0808%" height="15" fill="rgb(231,215,53)" fg:x="344" fg:w="1"/><text x="28.0592%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.8092%" y="245" width="0.0808%" height="15" fill="rgb(218,140,42)" fg:x="344" fg:w="1"/><text x="28.0592%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.8092%" y="229" width="0.0808%" height="15" fill="rgb(233,227,45)" fg:x="344" fg:w="1"/><text x="28.0592%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.8092%" y="213" width="0.0808%" height="15" fill="rgb(225,189,21)" fg:x="344" fg:w="1"/><text x="28.0592%" y="223.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="27.8901%" y="293" width="0.4850%" height="15" fill="rgb(237,176,54)" fg:x="345" fg:w="6"/><text x="28.1401%" y="303.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="27.9709%" y="277" width="0.4042%" height="15" fill="rgb(215,131,46)" fg:x="346" fg:w="5"/><text x="28.2209%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.1326%" y="261" width="0.2425%" height="15" fill="rgb(218,95,20)" fg:x="348" fg:w="3"/><text x="28.3826%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="28.1326%" y="245" width="0.2425%" height="15" fill="rgb(208,198,12)" fg:x="348" fg:w="3"/><text x="28.3826%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="28.2134%" y="229" width="0.1617%" height="15" fill="rgb(239,107,50)" fg:x="349" fg:w="2"/><text x="28.4634%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="28.2134%" y="213" width="0.1617%" height="15" fill="rgb(240,217,37)" fg:x="349" fg:w="2"/><text x="28.4634%" y="223.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="28.2134%" y="197" width="0.1617%" height="15" fill="rgb(242,197,49)" fg:x="349" fg:w="2"/><text x="28.4634%" y="207.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.3751%" y="277" width="0.0808%" height="15" fill="rgb(219,171,17)" fg:x="351" fg:w="1"/><text x="28.6251%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="28.3751%" y="293" width="0.1617%" height="15" fill="rgb(209,81,40)" fg:x="351" fg:w="2"/><text x="28.6251%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.4559%" y="277" width="0.0808%" height="15" fill="rgb(237,156,30)" fg:x="352" fg:w="1"/><text x="28.7059%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="27.8901%" y="309" width="0.8084%" height="15" fill="rgb(212,127,16)" fg:x="345" fg:w="10"/><text x="28.1401%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.5368%" y="293" width="0.1617%" height="15" fill="rgb(226,66,32)" fg:x="353" fg:w="2"/><text x="28.7868%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.6176%" y="277" width="0.0808%" height="15" fill="rgb(245,22,46)" fg:x="354" fg:w="1"/><text x="28.8676%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.6176%" y="261" width="0.0808%" height="15" fill="rgb(210,112,21)" fg:x="354" fg:w="1"/><text x="28.8676%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.34%)</title><rect x="26.5158%" y="341" width="2.3444%" height="15" fill="rgb(207,118,39)" fg:x="328" fg:w="29"/><text x="26.7658%" y="351.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.46%)</title><rect x="27.4050%" y="325" width="1.4551%" height="15" fill="rgb(205,206,35)" fg:x="339" fg:w="18"/><text x="27.6550%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.6985%" y="309" width="0.1617%" height="15" fill="rgb(222,120,2)" fg:x="355" fg:w="2"/><text x="28.9485%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.6985%" y="293" width="0.1617%" height="15" fill="rgb(205,38,18)" fg:x="355" fg:w="2"/><text x="28.9485%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.6985%" y="277" width="0.1617%" height="15" fill="rgb(226,61,2)" fg:x="355" fg:w="2"/><text x="28.9485%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.8601%" y="309" width="0.1617%" height="15" fill="rgb(242,161,23)" fg:x="357" fg:w="2"/><text x="29.1101%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.9410%" y="293" width="0.0808%" height="15" fill="rgb(213,13,52)" fg:x="358" fg:w="1"/><text x="29.1910%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.9410%" y="277" width="0.0808%" height="15" fill="rgb(246,209,47)" fg:x="358" fg:w="1"/><text x="29.1910%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.9410%" y="261" width="0.0808%" height="15" fill="rgb(214,41,3)" fg:x="358" fg:w="1"/><text x="29.1910%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (39 samples, 3.15%)</title><rect x="25.9499%" y="357" width="3.1528%" height="15" fill="rgb(236,119,38)" fg:x="321" fg:w="39"/><text x="26.1999%" y="367.50">ser..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.8601%" y="341" width="0.2425%" height="15" fill="rgb(218,50,11)" fg:x="357" fg:w="3"/><text x="29.1101%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.8601%" y="325" width="0.2425%" height="15" fill="rgb(228,38,11)" fg:x="357" fg:w="3"/><text x="29.1101%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.0218%" y="309" width="0.0808%" height="15" fill="rgb(212,13,9)" fg:x="359" fg:w="1"/><text x="29.2718%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (47 samples, 3.80%)</title><rect x="25.3840%" y="373" width="3.7995%" height="15" fill="rgb(208,211,9)" fg:x="314" fg:w="47"/><text x="25.6340%" y="383.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.1027%" y="357" width="0.0808%" height="15" fill="rgb(239,39,32)" fg:x="360" fg:w="1"/><text x="29.3527%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.1027%" y="341" width="0.0808%" height="15" fill="rgb(254,179,26)" fg:x="360" fg:w="1"/><text x="29.3527%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.1027%" y="325" width="0.0808%" height="15" fill="rgb(249,165,28)" fg:x="360" fg:w="1"/><text x="29.3527%" y="335.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="29.1835%" y="341" width="0.4042%" height="15" fill="rgb(225,59,50)" fg:x="361" fg:w="5"/><text x="29.4335%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="29.5877%" y="341" width="0.1617%" height="15" fill="rgb(209,122,5)" fg:x="366" fg:w="2"/><text x="29.8377%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.6686%" y="325" width="0.0808%" height="15" fill="rgb(214,65,34)" fg:x="367" fg:w="1"/><text x="29.9186%" y="335.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="29.8302%" y="325" width="0.2425%" height="15" fill="rgb(249,183,32)" fg:x="369" fg:w="3"/><text x="30.0802%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.0728%" y="325" width="0.0808%" height="15" fill="rgb(218,122,24)" fg:x="372" fg:w="1"/><text x="30.3228%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="30.1536%" y="309" width="0.1617%" height="15" fill="rgb(224,109,18)" fg:x="373" fg:w="2"/><text x="30.4036%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.1536%" y="293" width="0.1617%" height="15" fill="rgb(210,68,50)" fg:x="373" fg:w="2"/><text x="30.4036%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.3961%" y="293" width="0.0808%" height="15" fill="rgb(212,184,34)" fg:x="376" fg:w="1"/><text x="30.6461%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="30.4770%" y="293" width="0.2425%" height="15" fill="rgb(238,105,48)" fg:x="377" fg:w="3"/><text x="30.7270%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="30.4770%" y="277" width="0.2425%" height="15" fill="rgb(222,134,54)" fg:x="377" fg:w="3"/><text x="30.7270%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="30.4770%" y="261" width="0.2425%" height="15" fill="rgb(246,24,43)" fg:x="377" fg:w="3"/><text x="30.7270%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="30.5578%" y="245" width="0.1617%" height="15" fill="rgb(227,169,22)" fg:x="378" fg:w="2"/><text x="30.8078%" y="255.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.5578%" y="229" width="0.1617%" height="15" fill="rgb(253,152,4)" fg:x="378" fg:w="2"/><text x="30.8078%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.8003%" y="277" width="0.0808%" height="15" fill="rgb(219,158,36)" fg:x="381" fg:w="1"/><text x="31.0503%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 1.86%)</title><rect x="29.1835%" y="373" width="1.8593%" height="15" fill="rgb(251,128,40)" fg:x="361" fg:w="23"/><text x="29.4335%" y="383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (23 samples, 1.86%)</title><rect x="29.1835%" y="357" width="1.8593%" height="15" fill="rgb(254,101,39)" fg:x="361" fg:w="23"/><text x="29.4335%" y="367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.29%)</title><rect x="29.7494%" y="341" width="1.2935%" height="15" fill="rgb(221,168,40)" fg:x="368" fg:w="16"/><text x="29.9994%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="30.1536%" y="325" width="0.8892%" height="15" fill="rgb(221,14,27)" fg:x="373" fg:w="11"/><text x="30.4036%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="30.3153%" y="309" width="0.7276%" height="15" fill="rgb(207,36,43)" fg:x="375" fg:w="9"/><text x="30.5653%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="30.7195%" y="293" width="0.3234%" height="15" fill="rgb(240,172,53)" fg:x="380" fg:w="4"/><text x="30.9695%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="30.8812%" y="277" width="0.1617%" height="15" fill="rgb(241,138,43)" fg:x="382" fg:w="2"/><text x="31.1312%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9620%" y="261" width="0.0808%" height="15" fill="rgb(227,78,19)" fg:x="383" fg:w="1"/><text x="31.2120%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="31.0428%" y="341" width="0.1617%" height="15" fill="rgb(215,127,44)" fg:x="384" fg:w="2"/><text x="31.2928%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.0428%" y="325" width="0.1617%" height="15" fill="rgb(227,13,10)" fg:x="384" fg:w="2"/><text x="31.2928%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="31.0428%" y="357" width="0.2425%" height="15" fill="rgb(249,177,6)" fg:x="384" fg:w="3"/><text x="31.2928%" y="367.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="31.2045%" y="341" width="0.0808%" height="15" fill="rgb(215,154,26)" fg:x="386" fg:w="1"/><text x="31.4545%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="31.2045%" y="325" width="0.0808%" height="15" fill="rgb(250,168,20)" fg:x="386" fg:w="1"/><text x="31.4545%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.57%)</title><rect x="31.5279%" y="325" width="0.5659%" height="15" fill="rgb(222,53,38)" fg:x="390" fg:w="7"/><text x="31.7779%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.9321%" y="309" width="0.1617%" height="15" fill="rgb(245,154,5)" fg:x="395" fg:w="2"/><text x="32.1821%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="31.9321%" y="293" width="0.1617%" height="15" fill="rgb(214,89,50)" fg:x="395" fg:w="2"/><text x="32.1821%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.0938%" y="325" width="0.0808%" height="15" fill="rgb(232,73,14)" fg:x="397" fg:w="1"/><text x="32.3438%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.0938%" y="309" width="0.0808%" height="15" fill="rgb(230,101,20)" fg:x="397" fg:w="1"/><text x="32.3438%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.0938%" y="293" width="0.0808%" height="15" fill="rgb(208,56,28)" fg:x="397" fg:w="1"/><text x="32.3438%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="32.1746%" y="325" width="0.0808%" height="15" fill="rgb(247,205,22)" fg:x="398" fg:w="1"/><text x="32.4246%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.1746%" y="309" width="0.0808%" height="15" fill="rgb(252,109,51)" fg:x="398" fg:w="1"/><text x="32.4246%" y="319.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="32.2555%" y="325" width="0.1617%" height="15" fill="rgb(220,40,24)" fg:x="399" fg:w="2"/><text x="32.5055%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="32.3363%" y="309" width="0.0808%" height="15" fill="rgb(251,108,7)" fg:x="400" fg:w="1"/><text x="32.5863%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="32.4980%" y="293" width="0.1617%" height="15" fill="rgb(238,102,51)" fg:x="402" fg:w="2"/><text x="32.7480%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.9022%" y="277" width="0.2425%" height="15" fill="rgb(219,149,34)" fg:x="407" fg:w="3"/><text x="33.1522%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.9022%" y="261" width="0.2425%" height="15" fill="rgb(239,70,0)" fg:x="407" fg:w="3"/><text x="33.1522%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.9830%" y="245" width="0.1617%" height="15" fill="rgb(246,214,23)" fg:x="408" fg:w="2"/><text x="33.2330%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.1447%" y="245" width="0.0808%" height="15" fill="rgb(239,221,51)" fg:x="410" fg:w="1"/><text x="33.3947%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="33.2255%" y="245" width="0.1617%" height="15" fill="rgb(254,62,14)" fg:x="411" fg:w="2"/><text x="33.4755%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="33.3064%" y="229" width="0.0808%" height="15" fill="rgb(253,57,33)" fg:x="412" fg:w="1"/><text x="33.5564%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3064%" y="213" width="0.0808%" height="15" fill="rgb(229,34,6)" fg:x="412" fg:w="1"/><text x="33.5564%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="33.1447%" y="277" width="0.3234%" height="15" fill="rgb(235,191,23)" fg:x="410" fg:w="4"/><text x="33.3947%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="33.1447%" y="261" width="0.3234%" height="15" fill="rgb(217,207,27)" fg:x="410" fg:w="4"/><text x="33.3947%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3872%" y="245" width="0.0808%" height="15" fill="rgb(232,41,44)" fg:x="413" fg:w="1"/><text x="33.6372%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.5489%" y="261" width="0.0808%" height="15" fill="rgb(221,188,19)" fg:x="415" fg:w="1"/><text x="33.7989%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.9531%" y="213" width="0.0808%" height="15" fill="rgb(245,180,45)" fg:x="420" fg:w="1"/><text x="34.2031%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.8723%" y="245" width="0.2425%" height="15" fill="rgb(250,220,42)" fg:x="419" fg:w="3"/><text x="34.1223%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.9531%" y="229" width="0.1617%" height="15" fill="rgb(234,16,34)" fg:x="420" fg:w="2"/><text x="34.2031%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.0340%" y="213" width="0.0808%" height="15" fill="rgb(233,217,23)" fg:x="421" fg:w="1"/><text x="34.2840%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.1956%" y="229" width="0.0808%" height="15" fill="rgb(209,22,46)" fg:x="423" fg:w="1"/><text x="34.4456%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="34.2765%" y="229" width="0.0808%" height="15" fill="rgb(213,101,18)" fg:x="424" fg:w="1"/><text x="34.5265%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="34.3573%" y="229" width="0.0808%" height="15" fill="rgb(215,179,52)" fg:x="425" fg:w="1"/><text x="34.6073%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.3573%" y="213" width="0.0808%" height="15" fill="rgb(223,50,25)" fg:x="425" fg:w="1"/><text x="34.6073%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.89%)</title><rect x="33.6297%" y="261" width="0.8892%" height="15" fill="rgb(224,51,44)" fg:x="416" fg:w="11"/><text x="33.8797%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="34.1148%" y="245" width="0.4042%" height="15" fill="rgb(224,13,54)" fg:x="422" fg:w="5"/><text x="34.3648%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4382%" y="229" width="0.0808%" height="15" fill="rgb(219,58,47)" fg:x="426" fg:w="1"/><text x="34.6882%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 2.02%)</title><rect x="32.6597%" y="293" width="2.0210%" height="15" fill="rgb(246,124,34)" fg:x="404" fg:w="25"/><text x="32.9097%" y="303.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.21%)</title><rect x="33.4681%" y="277" width="1.2126%" height="15" fill="rgb(245,109,25)" fg:x="414" fg:w="15"/><text x="33.7181%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.5190%" y="261" width="0.1617%" height="15" fill="rgb(235,48,23)" fg:x="427" fg:w="2"/><text x="34.7690%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 2.34%)</title><rect x="32.4980%" y="309" width="2.3444%" height="15" fill="rgb(229,203,36)" fg:x="402" fg:w="29"/><text x="32.7480%" y="319.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="34.6807%" y="293" width="0.1617%" height="15" fill="rgb(234,180,9)" fg:x="429" fg:w="2"/><text x="34.9307%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.8424%" y="309" width="0.1617%" height="15" fill="rgb(228,98,45)" fg:x="431" fg:w="2"/><text x="35.0924%" y="319.50"></text></g><g><title>engine::session::Session::flush (136 samples, 10.99%)</title><rect x="24.0905%" y="485" width="10.9943%" height="15" fill="rgb(240,24,36)" fg:x="298" fg:w="136"/><text x="24.3405%" y="495.50">engine::session:..</text></g><g><title>engine::session::Session::save_changes (127 samples, 10.27%)</title><rect x="24.8181%" y="469" width="10.2668%" height="15" fill="rgb(227,154,19)" fg:x="307" fg:w="127"/><text x="25.0681%" y="479.50">engine::session..</text></g><g><title>engine::session::state::State::close (126 samples, 10.19%)</title><rect x="24.8989%" y="453" width="10.1859%" height="15" fill="rgb(231,2,48)" fg:x="308" fg:w="126"/><text x="25.1489%" y="463.50">engine::session..</text></g><g><title>engine::session::state::State::flush_entities (126 samples, 10.19%)</title><rect x="24.8989%" y="437" width="10.1859%" height="15" fill="rgb(219,216,0)" fg:x="308" fg:w="126"/><text x="25.1489%" y="447.50">engine::session..</text></g><g><title>core::iter::adapters::try_process (121 samples, 9.78%)</title><rect x="25.3032%" y="421" width="9.7817%" height="15" fill="rgb(251,88,0)" fg:x="313" fg:w="121"/><text x="25.5532%" y="431.50">core::iter::ad..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (121 samples, 9.78%)</title><rect x="25.3032%" y="405" width="9.7817%" height="15" fill="rgb(242,45,45)" fg:x="313" fg:w="121"/><text x="25.5532%" y="415.50">&lt;alloc::vec::V..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (121 samples, 9.78%)</title><rect x="25.3032%" y="389" width="9.7817%" height="15" fill="rgb(218,149,45)" fg:x="313" fg:w="121"/><text x="25.5532%" y="399.50">engine::sessio..</text></g><g><title>kernel::model::any_entity_changes (50 samples, 4.04%)</title><rect x="31.0428%" y="373" width="4.0420%" height="15" fill="rgb(247,194,10)" fg:x="384" fg:w="50"/><text x="31.2928%" y="383.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (47 samples, 3.80%)</title><rect x="31.2854%" y="357" width="3.7995%" height="15" fill="rgb(234,33,37)" fg:x="387" fg:w="47"/><text x="31.5354%" y="367.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (47 samples, 3.80%)</title><rect x="31.2854%" y="341" width="3.7995%" height="15" fill="rgb(218,61,13)" fg:x="387" fg:w="47"/><text x="31.5354%" y="351.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (33 samples, 2.67%)</title><rect x="32.4171%" y="325" width="2.6677%" height="15" fill="rgb(210,80,52)" fg:x="401" fg:w="33"/><text x="32.6671%" y="335.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.0040%" y="309" width="0.0808%" height="15" fill="rgb(218,203,27)" fg:x="433" fg:w="1"/><text x="35.2540%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.0040%" y="293" width="0.0808%" height="15" fill="rgb(209,126,33)" fg:x="433" fg:w="1"/><text x="35.2540%" y="303.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="35.0849%" y="453" width="0.1617%" height="15" fill="rgb(234,173,41)" fg:x="434" fg:w="2"/><text x="35.3349%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.0849%" y="437" width="0.1617%" height="15" fill="rgb(228,166,9)" fg:x="434" fg:w="2"/><text x="35.3349%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.0849%" y="421" width="0.1617%" height="15" fill="rgb(208,124,43)" fg:x="434" fg:w="2"/><text x="35.3349%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="35.0849%" y="405" width="0.1617%" height="15" fill="rgb(212,154,38)" fg:x="434" fg:w="2"/><text x="35.3349%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="35.2466%" y="453" width="0.0808%" height="15" fill="rgb(246,179,35)" fg:x="436" fg:w="1"/><text x="35.4966%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="35.2466%" y="437" width="0.0808%" height="15" fill="rgb(251,3,50)" fg:x="436" fg:w="1"/><text x="35.4966%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.2466%" y="421" width="0.0808%" height="15" fill="rgb(219,96,8)" fg:x="436" fg:w="1"/><text x="35.4966%" y="431.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="35.0849%" y="485" width="0.3234%" height="15" fill="rgb(251,216,33)" fg:x="434" fg:w="4"/><text x="35.3349%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="35.0849%" y="469" width="0.3234%" height="15" fill="rgb(243,145,29)" fg:x="434" fg:w="4"/><text x="35.3349%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="35.3274%" y="453" width="0.0808%" height="15" fill="rgb(210,75,20)" fg:x="437" fg:w="1"/><text x="35.5774%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="35.3274%" y="437" width="0.0808%" height="15" fill="rgb(235,56,8)" fg:x="437" fg:w="1"/><text x="35.5774%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.3274%" y="421" width="0.0808%" height="15" fill="rgb(226,175,49)" fg:x="437" fg:w="1"/><text x="35.5774%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="35.3274%" y="405" width="0.0808%" height="15" fill="rgb(242,204,23)" fg:x="437" fg:w="1"/><text x="35.5774%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="35.3274%" y="389" width="0.0808%" height="15" fill="rgb(225,104,24)" fg:x="437" fg:w="1"/><text x="35.5774%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.3274%" y="373" width="0.0808%" height="15" fill="rgb(253,34,1)" fg:x="437" fg:w="1"/><text x="35.5774%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="35.5699%" y="469" width="0.0808%" height="15" fill="rgb(233,199,23)" fg:x="440" fg:w="1"/><text x="35.8199%" y="479.50"></text></g><g><title>plugins_core::build::Build::new (4 samples, 0.32%)</title><rect x="35.4082%" y="485" width="0.3234%" height="15" fill="rgb(247,7,51)" fg:x="438" fg:w="4"/><text x="35.6582%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="35.6508%" y="469" width="0.0808%" height="15" fill="rgb(214,146,12)" fg:x="441" fg:w="1"/><text x="35.9008%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="35.6508%" y="453" width="0.0808%" height="15" fill="rgb(234,181,43)" fg:x="441" fg:w="1"/><text x="35.9008%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.7316%" y="405" width="0.1617%" height="15" fill="rgb(239,148,6)" fg:x="442" fg:w="2"/><text x="35.9816%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.7316%" y="389" width="0.1617%" height="15" fill="rgb(206,151,17)" fg:x="442" fg:w="2"/><text x="35.9816%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.7316%" y="373" width="0.1617%" height="15" fill="rgb(213,215,10)" fg:x="442" fg:w="2"/><text x="35.9816%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.7316%" y="357" width="0.1617%" height="15" fill="rgb(215,220,44)" fg:x="442" fg:w="2"/><text x="35.9816%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8933%" y="405" width="0.0808%" height="15" fill="rgb(245,205,37)" fg:x="444" fg:w="1"/><text x="36.1433%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.9741%" y="405" width="0.0808%" height="15" fill="rgb(245,130,43)" fg:x="445" fg:w="1"/><text x="36.2241%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="35.9741%" y="389" width="0.0808%" height="15" fill="rgb(231,227,38)" fg:x="445" fg:w="1"/><text x="36.2241%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="35.7316%" y="453" width="0.4042%" height="15" fill="rgb(233,185,4)" fg:x="442" fg:w="5"/><text x="35.9816%" y="463.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="35.7316%" y="437" width="0.4042%" height="15" fill="rgb(224,154,43)" fg:x="442" fg:w="5"/><text x="35.9816%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="35.7316%" y="421" width="0.4042%" height="15" fill="rgb(235,156,15)" fg:x="442" fg:w="5"/><text x="35.9816%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.0550%" y="405" width="0.0808%" height="15" fill="rgb(211,55,43)" fg:x="446" fg:w="1"/><text x="36.3050%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.0550%" y="389" width="0.0808%" height="15" fill="rgb(247,149,40)" fg:x="446" fg:w="1"/><text x="36.3050%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.0550%" y="373" width="0.0808%" height="15" fill="rgb(232,171,16)" fg:x="446" fg:w="1"/><text x="36.3050%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.0550%" y="357" width="0.0808%" height="15" fill="rgb(215,117,49)" fg:x="446" fg:w="1"/><text x="36.3050%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0550%" y="341" width="0.0808%" height="15" fill="rgb(246,194,11)" fg:x="446" fg:w="1"/><text x="36.3050%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.0550%" y="325" width="0.0808%" height="15" fill="rgb(242,101,44)" fg:x="446" fg:w="1"/><text x="36.3050%" y="335.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="36.1358%" y="437" width="0.0808%" height="15" fill="rgb(226,174,6)" fg:x="447" fg:w="1"/><text x="36.3858%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1358%" y="421" width="0.0808%" height="15" fill="rgb(213,150,20)" fg:x="447" fg:w="1"/><text x="36.3858%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1358%" y="405" width="0.0808%" height="15" fill="rgb(222,124,42)" fg:x="447" fg:w="1"/><text x="36.3858%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="36.2167%" y="421" width="0.1617%" height="15" fill="rgb(250,19,47)" fg:x="448" fg:w="2"/><text x="36.4667%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.2167%" y="405" width="0.1617%" height="15" fill="rgb(241,217,19)" fg:x="448" fg:w="2"/><text x="36.4667%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="36.2167%" y="389" width="0.1617%" height="15" fill="rgb(207,210,34)" fg:x="448" fg:w="2"/><text x="36.4667%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.2975%" y="373" width="0.0808%" height="15" fill="rgb(244,45,4)" fg:x="449" fg:w="1"/><text x="36.5475%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.2975%" y="357" width="0.0808%" height="15" fill="rgb(252,134,50)" fg:x="449" fg:w="1"/><text x="36.5475%" y="367.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="36.1358%" y="453" width="0.3234%" height="15" fill="rgb(238,74,2)" fg:x="447" fg:w="4"/><text x="36.3858%" y="463.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="36.2167%" y="437" width="0.2425%" height="15" fill="rgb(226,58,46)" fg:x="448" fg:w="3"/><text x="36.4667%" y="447.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="36.3783%" y="421" width="0.0808%" height="15" fill="rgb(232,83,35)" fg:x="450" fg:w="1"/><text x="36.6283%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.3783%" y="405" width="0.0808%" height="15" fill="rgb(212,148,47)" fg:x="450" fg:w="1"/><text x="36.6283%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3783%" y="389" width="0.0808%" height="15" fill="rgb(235,29,1)" fg:x="450" fg:w="1"/><text x="36.6283%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="36.5400%" y="405" width="0.0808%" height="15" fill="rgb(247,55,37)" fg:x="452" fg:w="1"/><text x="36.7900%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="36.5400%" y="389" width="0.0808%" height="15" fill="rgb(222,48,3)" fg:x="452" fg:w="1"/><text x="36.7900%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.5400%" y="373" width="0.0808%" height="15" fill="rgb(234,21,33)" fg:x="452" fg:w="1"/><text x="36.7900%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.5400%" y="357" width="0.0808%" height="15" fill="rgb(247,178,53)" fg:x="452" fg:w="1"/><text x="36.7900%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.5400%" y="341" width="0.0808%" height="15" fill="rgb(225,75,7)" fg:x="452" fg:w="1"/><text x="36.7900%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.5400%" y="325" width="0.0808%" height="15" fill="rgb(219,199,7)" fg:x="452" fg:w="1"/><text x="36.7900%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.5400%" y="309" width="0.0808%" height="15" fill="rgb(209,93,42)" fg:x="452" fg:w="1"/><text x="36.7900%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.5400%" y="293" width="0.0808%" height="15" fill="rgb(240,175,17)" fg:x="452" fg:w="1"/><text x="36.7900%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.5400%" y="277" width="0.0808%" height="15" fill="rgb(232,106,7)" fg:x="452" fg:w="1"/><text x="36.7900%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="36.6209%" y="389" width="0.0808%" height="15" fill="rgb(242,106,43)" fg:x="453" fg:w="1"/><text x="36.8709%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.6209%" y="373" width="0.0808%" height="15" fill="rgb(242,61,37)" fg:x="453" fg:w="1"/><text x="36.8709%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="36.6209%" y="357" width="0.0808%" height="15" fill="rgb(205,72,10)" fg:x="453" fg:w="1"/><text x="36.8709%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="36.5400%" y="437" width="0.4042%" height="15" fill="rgb(214,184,36)" fg:x="452" fg:w="5"/><text x="36.7900%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="36.5400%" y="421" width="0.4042%" height="15" fill="rgb(206,107,18)" fg:x="452" fg:w="5"/><text x="36.7900%" y="431.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="36.6209%" y="405" width="0.3234%" height="15" fill="rgb(210,75,5)" fg:x="453" fg:w="4"/><text x="36.8709%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="36.7017%" y="389" width="0.2425%" height="15" fill="rgb(205,3,19)" fg:x="454" fg:w="3"/><text x="36.9517%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="36.7017%" y="373" width="0.2425%" height="15" fill="rgb(207,181,42)" fg:x="454" fg:w="3"/><text x="36.9517%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="36.7017%" y="357" width="0.2425%" height="15" fill="rgb(229,179,43)" fg:x="454" fg:w="3"/><text x="36.9517%" y="367.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="36.7825%" y="341" width="0.1617%" height="15" fill="rgb(246,95,30)" fg:x="455" fg:w="2"/><text x="37.0325%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="36.8634%" y="325" width="0.0808%" height="15" fill="rgb(234,144,45)" fg:x="456" fg:w="1"/><text x="37.1134%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8634%" y="309" width="0.0808%" height="15" fill="rgb(250,54,25)" fg:x="456" fg:w="1"/><text x="37.1134%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.0251%" y="421" width="0.0808%" height="15" fill="rgb(215,195,40)" fg:x="458" fg:w="1"/><text x="37.2751%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.0251%" y="405" width="0.0808%" height="15" fill="rgb(233,188,42)" fg:x="458" fg:w="1"/><text x="37.2751%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.0251%" y="389" width="0.0808%" height="15" fill="rgb(247,227,35)" fg:x="458" fg:w="1"/><text x="37.2751%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.0251%" y="373" width="0.0808%" height="15" fill="rgb(249,124,27)" fg:x="458" fg:w="1"/><text x="37.2751%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.0251%" y="357" width="0.0808%" height="15" fill="rgb(219,207,25)" fg:x="458" fg:w="1"/><text x="37.2751%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.0251%" y="341" width="0.0808%" height="15" fill="rgb(241,216,47)" fg:x="458" fg:w="1"/><text x="37.2751%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.0251%" y="325" width="0.0808%" height="15" fill="rgb(233,82,50)" fg:x="458" fg:w="1"/><text x="37.2751%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.0251%" y="309" width="0.0808%" height="15" fill="rgb(232,63,2)" fg:x="458" fg:w="1"/><text x="37.2751%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.0251%" y="293" width="0.0808%" height="15" fill="rgb(236,184,28)" fg:x="458" fg:w="1"/><text x="37.2751%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.0251%" y="277" width="0.0808%" height="15" fill="rgb(254,63,27)" fg:x="458" fg:w="1"/><text x="37.2751%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.0251%" y="261" width="0.0808%" height="15" fill="rgb(253,106,28)" fg:x="458" fg:w="1"/><text x="37.2751%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.0251%" y="245" width="0.0808%" height="15" fill="rgb(225,141,39)" fg:x="458" fg:w="1"/><text x="37.2751%" y="255.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="36.9442%" y="437" width="0.2425%" height="15" fill="rgb(222,157,20)" fg:x="457" fg:w="3"/><text x="37.1942%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1059%" y="421" width="0.0808%" height="15" fill="rgb(210,190,9)" fg:x="459" fg:w="1"/><text x="37.3559%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.1059%" y="405" width="0.0808%" height="15" fill="rgb(242,167,7)" fg:x="459" fg:w="1"/><text x="37.3559%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.1867%" y="405" width="0.1617%" height="15" fill="rgb(227,82,41)" fg:x="460" fg:w="2"/><text x="37.4367%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3484%" y="373" width="0.0808%" height="15" fill="rgb(222,131,13)" fg:x="462" fg:w="1"/><text x="37.5984%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3484%" y="357" width="0.0808%" height="15" fill="rgb(221,98,26)" fg:x="462" fg:w="1"/><text x="37.5984%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3484%" y="341" width="0.0808%" height="15" fill="rgb(251,63,52)" fg:x="462" fg:w="1"/><text x="37.5984%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="37.3484%" y="405" width="0.1617%" height="15" fill="rgb(246,25,43)" fg:x="462" fg:w="2"/><text x="37.5984%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.3484%" y="389" width="0.1617%" height="15" fill="rgb(247,167,15)" fg:x="462" fg:w="2"/><text x="37.5984%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.4293%" y="373" width="0.0808%" height="15" fill="rgb(240,104,42)" fg:x="463" fg:w="1"/><text x="37.6793%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="37.4293%" y="357" width="0.0808%" height="15" fill="rgb(224,54,6)" fg:x="463" fg:w="1"/><text x="37.6793%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="37.5101%" y="405" width="0.0808%" height="15" fill="rgb(244,108,35)" fg:x="464" fg:w="1"/><text x="37.7601%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="37.5909%" y="389" width="0.2425%" height="15" fill="rgb(216,154,2)" fg:x="465" fg:w="3"/><text x="37.8409%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="37.5909%" y="373" width="0.2425%" height="15" fill="rgb(222,8,47)" fg:x="465" fg:w="3"/><text x="37.8409%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="37.5909%" y="357" width="0.2425%" height="15" fill="rgb(252,93,1)" fg:x="465" fg:w="3"/><text x="37.8409%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="37.7526%" y="341" width="0.0808%" height="15" fill="rgb(223,226,51)" fg:x="467" fg:w="1"/><text x="38.0026%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7526%" y="325" width="0.0808%" height="15" fill="rgb(206,147,9)" fg:x="467" fg:w="1"/><text x="38.0026%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7526%" y="309" width="0.0808%" height="15" fill="rgb(248,180,41)" fg:x="467" fg:w="1"/><text x="38.0026%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.7526%" y="293" width="0.0808%" height="15" fill="rgb(209,47,50)" fg:x="467" fg:w="1"/><text x="38.0026%" y="303.50"></text></g><g><title>engine::session::internal::Entities::add_entity (19 samples, 1.54%)</title><rect x="36.4592%" y="453" width="1.5360%" height="15" fill="rgb(243,65,31)" fg:x="451" fg:w="19"/><text x="36.7092%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.81%)</title><rect x="37.1867%" y="437" width="0.8084%" height="15" fill="rgb(228,128,1)" fg:x="460" fg:w="10"/><text x="37.4367%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.81%)</title><rect x="37.1867%" y="421" width="0.8084%" height="15" fill="rgb(231,192,16)" fg:x="460" fg:w="10"/><text x="37.4367%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="37.5909%" y="405" width="0.4042%" height="15" fill="rgb(224,26,40)" fg:x="465" fg:w="5"/><text x="37.8409%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.8335%" y="389" width="0.1617%" height="15" fill="rgb(214,192,17)" fg:x="468" fg:w="2"/><text x="38.0835%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (30 samples, 2.43%)</title><rect x="35.7316%" y="469" width="2.4252%" height="15" fill="rgb(225,147,18)" fg:x="442" fg:w="30"/><text x="35.9816%" y="479.50">&lt;e..</text></g><g><title>kernel::model::EntityPtrResolver::world (2 samples, 0.16%)</title><rect x="37.9951%" y="453" width="0.1617%" height="15" fill="rgb(205,35,11)" fg:x="470" fg:w="2"/><text x="38.2451%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="38.0760%" y="437" width="0.0808%" height="15" fill="rgb(242,40,42)" fg:x="471" fg:w="1"/><text x="38.3260%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="38.0760%" y="421" width="0.0808%" height="15" fill="rgb(250,170,13)" fg:x="471" fg:w="1"/><text x="38.3260%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.2377%" y="453" width="0.1617%" height="15" fill="rgb(240,161,28)" fg:x="473" fg:w="2"/><text x="38.4877%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3185%" y="437" width="0.0808%" height="15" fill="rgb(245,179,12)" fg:x="474" fg:w="1"/><text x="38.5685%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3185%" y="421" width="0.0808%" height="15" fill="rgb(250,92,32)" fg:x="474" fg:w="1"/><text x="38.5685%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="38.1568%" y="469" width="0.3234%" height="15" fill="rgb(233,10,40)" fg:x="472" fg:w="4"/><text x="38.4068%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3994%" y="453" width="0.0808%" height="15" fill="rgb(217,98,1)" fg:x="475" fg:w="1"/><text x="38.6494%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3994%" y="437" width="0.0808%" height="15" fill="rgb(238,202,7)" fg:x="475" fg:w="1"/><text x="38.6494%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.3994%" y="421" width="0.0808%" height="15" fill="rgb(222,91,3)" fg:x="475" fg:w="1"/><text x="38.6494%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.3994%" y="405" width="0.0808%" height="15" fill="rgb(211,170,49)" fg:x="475" fg:w="1"/><text x="38.6494%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.3994%" y="389" width="0.0808%" height="15" fill="rgb(253,139,18)" fg:x="475" fg:w="1"/><text x="38.6494%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3994%" y="373" width="0.0808%" height="15" fill="rgb(222,4,43)" fg:x="475" fg:w="1"/><text x="38.6494%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3994%" y="357" width="0.0808%" height="15" fill="rgb(207,205,12)" fg:x="475" fg:w="1"/><text x="38.6494%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.3994%" y="341" width="0.0808%" height="15" fill="rgb(216,159,46)" fg:x="475" fg:w="1"/><text x="38.6494%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.3994%" y="325" width="0.0808%" height="15" fill="rgb(236,115,1)" fg:x="475" fg:w="1"/><text x="38.6494%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.3994%" y="309" width="0.0808%" height="15" fill="rgb(251,35,33)" fg:x="475" fg:w="1"/><text x="38.6494%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.3994%" y="293" width="0.0808%" height="15" fill="rgb(248,62,51)" fg:x="475" fg:w="1"/><text x="38.6494%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3994%" y="277" width="0.0808%" height="15" fill="rgb(254,180,19)" fg:x="475" fg:w="1"/><text x="38.6494%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="38.5610%" y="373" width="0.2425%" height="15" fill="rgb(217,100,32)" fg:x="477" fg:w="3"/><text x="38.8110%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="38.5610%" y="357" width="0.2425%" height="15" fill="rgb(224,71,22)" fg:x="477" fg:w="3"/><text x="38.8110%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="38.5610%" y="341" width="0.2425%" height="15" fill="rgb(251,185,33)" fg:x="477" fg:w="3"/><text x="38.8110%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="38.5610%" y="325" width="0.2425%" height="15" fill="rgb(209,75,48)" fg:x="477" fg:w="3"/><text x="38.8110%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="38.5610%" y="309" width="0.2425%" height="15" fill="rgb(253,190,16)" fg:x="477" fg:w="3"/><text x="38.8110%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="38.5610%" y="293" width="0.2425%" height="15" fill="rgb(226,140,1)" fg:x="477" fg:w="3"/><text x="38.8110%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="38.5610%" y="277" width="0.2425%" height="15" fill="rgb(206,75,30)" fg:x="477" fg:w="3"/><text x="38.8110%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="38.5610%" y="261" width="0.2425%" height="15" fill="rgb(231,208,37)" fg:x="477" fg:w="3"/><text x="38.8110%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="38.5610%" y="245" width="0.2425%" height="15" fill="rgb(238,136,40)" fg:x="477" fg:w="3"/><text x="38.8110%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="38.5610%" y="229" width="0.2425%" height="15" fill="rgb(247,137,17)" fg:x="477" fg:w="3"/><text x="38.8110%" y="239.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="38.5610%" y="213" width="0.2425%" height="15" fill="rgb(240,60,40)" fg:x="477" fg:w="3"/><text x="38.8110%" y="223.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="38.5610%" y="197" width="0.2425%" height="15" fill="rgb(236,68,50)" fg:x="477" fg:w="3"/><text x="38.8110%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="38.4802%" y="421" width="0.4042%" height="15" fill="rgb(230,42,12)" fg:x="476" fg:w="5"/><text x="38.7302%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="38.4802%" y="405" width="0.4042%" height="15" fill="rgb(219,16,16)" fg:x="476" fg:w="5"/><text x="38.7302%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="38.5610%" y="389" width="0.3234%" height="15" fill="rgb(220,38,35)" fg:x="477" fg:w="4"/><text x="38.8110%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8036%" y="373" width="0.0808%" height="15" fill="rgb(228,33,1)" fg:x="480" fg:w="1"/><text x="39.0536%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.8844%" y="389" width="0.0808%" height="15" fill="rgb(241,46,31)" fg:x="481" fg:w="1"/><text x="39.1344%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.9652%" y="357" width="0.0808%" height="15" fill="rgb(232,58,20)" fg:x="482" fg:w="1"/><text x="39.2152%" y="367.50"></text></g><g><title>plugins_core::build::Build::save (43 samples, 3.48%)</title><rect x="35.7316%" y="485" width="3.4762%" height="15" fill="rgb(206,228,53)" fg:x="442" fg:w="43"/><text x="35.9816%" y="495.50">plu..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.73%)</title><rect x="38.4802%" y="469" width="0.7276%" height="15" fill="rgb(206,88,33)" fg:x="476" fg:w="9"/><text x="38.7302%" y="479.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.73%)</title><rect x="38.4802%" y="453" width="0.7276%" height="15" fill="rgb(238,69,7)" fg:x="476" fg:w="9"/><text x="38.7302%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (9 samples, 0.73%)</title><rect x="38.4802%" y="437" width="0.7276%" height="15" fill="rgb(250,21,46)" fg:x="476" fg:w="9"/><text x="38.7302%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="38.8844%" y="421" width="0.3234%" height="15" fill="rgb(215,212,21)" fg:x="481" fg:w="4"/><text x="39.1344%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="38.8844%" y="405" width="0.3234%" height="15" fill="rgb(211,35,12)" fg:x="481" fg:w="4"/><text x="39.1344%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="38.9652%" y="389" width="0.2425%" height="15" fill="rgb(231,184,16)" fg:x="482" fg:w="3"/><text x="39.2152%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.9652%" y="373" width="0.2425%" height="15" fill="rgb(242,140,15)" fg:x="482" fg:w="3"/><text x="39.2152%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="39.0461%" y="357" width="0.1617%" height="15" fill="rgb(220,37,14)" fg:x="483" fg:w="2"/><text x="39.2961%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.0461%" y="341" width="0.1617%" height="15" fill="rgb(223,146,22)" fg:x="483" fg:w="2"/><text x="39.2961%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.1269%" y="325" width="0.0808%" height="15" fill="rgb(216,132,15)" fg:x="484" fg:w="1"/><text x="39.3769%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.1269%" y="309" width="0.0808%" height="15" fill="rgb(248,83,5)" fg:x="484" fg:w="1"/><text x="39.3769%" y="319.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="39.2078%" y="485" width="0.0808%" height="15" fill="rgb(231,206,48)" fg:x="485" fg:w="1"/><text x="39.4578%" y="495.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="39.2078%" y="469" width="0.0808%" height="15" fill="rgb(253,185,37)" fg:x="485" fg:w="1"/><text x="39.4578%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="39.2078%" y="453" width="0.0808%" height="15" fill="rgb(208,21,44)" fg:x="485" fg:w="1"/><text x="39.4578%" y="463.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="39.2078%" y="437" width="0.0808%" height="15" fill="rgb(236,125,4)" fg:x="485" fg:w="1"/><text x="39.4578%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.2078%" y="421" width="0.0808%" height="15" fill="rgb(226,134,25)" fg:x="485" fg:w="1"/><text x="39.4578%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.2078%" y="405" width="0.0808%" height="15" fill="rgb(250,201,12)" fg:x="485" fg:w="1"/><text x="39.4578%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.2078%" y="389" width="0.0808%" height="15" fill="rgb(225,92,18)" fg:x="485" fg:w="1"/><text x="39.4578%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.2078%" y="373" width="0.0808%" height="15" fill="rgb(227,35,22)" fg:x="485" fg:w="1"/><text x="39.4578%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="39.2886%" y="405" width="0.1617%" height="15" fill="rgb(214,180,52)" fg:x="486" fg:w="2"/><text x="39.5386%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.3694%" y="389" width="0.0808%" height="15" fill="rgb(233,55,38)" fg:x="487" fg:w="1"/><text x="39.6194%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="39.3694%" y="373" width="0.0808%" height="15" fill="rgb(249,171,43)" fg:x="487" fg:w="1"/><text x="39.6194%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.4503%" y="309" width="0.0808%" height="15" fill="rgb(239,87,2)" fg:x="488" fg:w="1"/><text x="39.7003%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.4503%" y="293" width="0.0808%" height="15" fill="rgb(248,141,5)" fg:x="488" fg:w="1"/><text x="39.7003%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="39.2886%" y="421" width="0.4042%" height="15" fill="rgb(238,33,42)" fg:x="486" fg:w="5"/><text x="39.5386%" y="431.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="39.4503%" y="405" width="0.2425%" height="15" fill="rgb(231,57,19)" fg:x="488" fg:w="3"/><text x="39.7003%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="39.4503%" y="389" width="0.2425%" height="15" fill="rgb(214,78,53)" fg:x="488" fg:w="3"/><text x="39.7003%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="39.4503%" y="373" width="0.2425%" height="15" fill="rgb(206,132,29)" fg:x="488" fg:w="3"/><text x="39.7003%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.4503%" y="357" width="0.2425%" height="15" fill="rgb(248,174,31)" fg:x="488" fg:w="3"/><text x="39.7003%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="39.4503%" y="341" width="0.2425%" height="15" fill="rgb(221,87,13)" fg:x="488" fg:w="3"/><text x="39.7003%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.4503%" y="325" width="0.2425%" height="15" fill="rgb(223,197,17)" fg:x="488" fg:w="3"/><text x="39.7003%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="39.5311%" y="309" width="0.1617%" height="15" fill="rgb(220,144,50)" fg:x="489" fg:w="2"/><text x="39.7811%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.5311%" y="293" width="0.1617%" height="15" fill="rgb(244,201,11)" fg:x="489" fg:w="2"/><text x="39.7811%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="39.5311%" y="277" width="0.1617%" height="15" fill="rgb(249,81,34)" fg:x="489" fg:w="2"/><text x="39.7811%" y="287.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.49%)</title><rect x="39.2886%" y="453" width="0.4850%" height="15" fill="rgb(205,161,12)" fg:x="486" fg:w="6"/><text x="39.5386%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.49%)</title><rect x="39.2886%" y="437" width="0.4850%" height="15" fill="rgb(252,139,50)" fg:x="486" fg:w="6"/><text x="39.5386%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="39.6928%" y="421" width="0.0808%" height="15" fill="rgb(205,169,14)" fg:x="491" fg:w="1"/><text x="39.9428%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="39.6928%" y="405" width="0.0808%" height="15" fill="rgb(248,198,33)" fg:x="491" fg:w="1"/><text x="39.9428%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="39.6928%" y="389" width="0.0808%" height="15" fill="rgb(236,23,21)" fg:x="491" fg:w="1"/><text x="39.9428%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6928%" y="373" width="0.0808%" height="15" fill="rgb(231,13,38)" fg:x="491" fg:w="1"/><text x="39.9428%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6928%" y="357" width="0.0808%" height="15" fill="rgb(239,139,21)" fg:x="491" fg:w="1"/><text x="39.9428%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6928%" y="341" width="0.0808%" height="15" fill="rgb(222,164,45)" fg:x="491" fg:w="1"/><text x="39.9428%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6928%" y="325" width="0.0808%" height="15" fill="rgb(230,52,27)" fg:x="491" fg:w="1"/><text x="39.9428%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6928%" y="309" width="0.0808%" height="15" fill="rgb(227,143,42)" fg:x="491" fg:w="1"/><text x="39.9428%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.6928%" y="293" width="0.0808%" height="15" fill="rgb(249,127,1)" fg:x="491" fg:w="1"/><text x="39.9428%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.6928%" y="277" width="0.0808%" height="15" fill="rgb(243,107,26)" fg:x="491" fg:w="1"/><text x="39.9428%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.6928%" y="261" width="0.0808%" height="15" fill="rgb(225,7,45)" fg:x="491" fg:w="1"/><text x="39.9428%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.6928%" y="245" width="0.0808%" height="15" fill="rgb(241,88,38)" fg:x="491" fg:w="1"/><text x="39.9428%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.6928%" y="229" width="0.0808%" height="15" fill="rgb(226,121,9)" fg:x="491" fg:w="1"/><text x="39.9428%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.6928%" y="213" width="0.0808%" height="15" fill="rgb(253,60,29)" fg:x="491" fg:w="1"/><text x="39.9428%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.6928%" y="197" width="0.0808%" height="15" fill="rgb(244,181,39)" fg:x="491" fg:w="1"/><text x="39.9428%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.6928%" y="181" width="0.0808%" height="15" fill="rgb(252,203,31)" fg:x="491" fg:w="1"/><text x="39.9428%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.6928%" y="165" width="0.0808%" height="15" fill="rgb(224,120,8)" fg:x="491" fg:w="1"/><text x="39.9428%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6928%" y="149" width="0.0808%" height="15" fill="rgb(205,171,54)" fg:x="491" fg:w="1"/><text x="39.9428%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7736%" y="357" width="0.0808%" height="15" fill="rgb(235,89,11)" fg:x="492" fg:w="1"/><text x="40.0236%" y="367.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="39.7736%" y="437" width="0.1617%" height="15" fill="rgb(212,180,28)" fg:x="492" fg:w="2"/><text x="40.0236%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.7736%" y="421" width="0.1617%" height="15" fill="rgb(247,84,49)" fg:x="492" fg:w="2"/><text x="40.0236%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="39.7736%" y="405" width="0.1617%" height="15" fill="rgb(236,187,52)" fg:x="492" fg:w="2"/><text x="40.0236%" y="415.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="39.7736%" y="389" width="0.1617%" height="15" fill="rgb(227,24,15)" fg:x="492" fg:w="2"/><text x="40.0236%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.7736%" y="373" width="0.1617%" height="15" fill="rgb(227,211,13)" fg:x="492" fg:w="2"/><text x="40.0236%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8545%" y="357" width="0.0808%" height="15" fill="rgb(245,52,14)" fg:x="493" fg:w="1"/><text x="40.1045%" y="367.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (10 samples, 0.81%)</title><rect x="39.2886%" y="485" width="0.8084%" height="15" fill="rgb(225,185,13)" fg:x="486" fg:w="10"/><text x="39.5386%" y="495.50"></text></g><g><title>plugins_core::tools::set_occupying (10 samples, 0.81%)</title><rect x="39.2886%" y="469" width="0.8084%" height="15" fill="rgb(217,160,29)" fg:x="486" fg:w="10"/><text x="39.5386%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="39.7736%" y="453" width="0.3234%" height="15" fill="rgb(216,115,53)" fg:x="492" fg:w="4"/><text x="40.0236%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="39.9353%" y="437" width="0.1617%" height="15" fill="rgb(236,99,5)" fg:x="494" fg:w="2"/><text x="40.1853%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.9353%" y="421" width="0.1617%" height="15" fill="rgb(222,60,38)" fg:x="494" fg:w="2"/><text x="40.1853%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="39.9353%" y="405" width="0.1617%" height="15" fill="rgb(212,82,22)" fg:x="494" fg:w="2"/><text x="40.1853%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.9353%" y="389" width="0.1617%" height="15" fill="rgb(214,48,28)" fg:x="494" fg:w="2"/><text x="40.1853%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.9353%" y="373" width="0.1617%" height="15" fill="rgb(245,196,50)" fg:x="494" fg:w="2"/><text x="40.1853%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="40.0970%" y="421" width="0.0808%" height="15" fill="rgb(225,159,46)" fg:x="496" fg:w="1"/><text x="40.3470%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.40%)</title><rect x="40.1778%" y="421" width="0.4042%" height="15" fill="rgb(207,195,48)" fg:x="497" fg:w="5"/><text x="40.4278%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="40.2587%" y="405" width="0.3234%" height="15" fill="rgb(240,73,3)" fg:x="498" fg:w="4"/><text x="40.5087%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="40.2587%" y="389" width="0.3234%" height="15" fill="rgb(245,57,23)" fg:x="498" fg:w="4"/><text x="40.5087%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="40.2587%" y="373" width="0.3234%" height="15" fill="rgb(240,75,18)" fg:x="498" fg:w="4"/><text x="40.5087%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.4204%" y="357" width="0.1617%" height="15" fill="rgb(238,168,12)" fg:x="500" fg:w="2"/><text x="40.6704%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.5012%" y="341" width="0.0808%" height="15" fill="rgb(226,20,40)" fg:x="501" fg:w="1"/><text x="40.7512%" y="351.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (8 samples, 0.65%)</title><rect x="40.0970%" y="469" width="0.6467%" height="15" fill="rgb(224,130,35)" fg:x="496" fg:w="8"/><text x="40.3470%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="40.0970%" y="453" width="0.6467%" height="15" fill="rgb(225,63,41)" fg:x="496" fg:w="8"/><text x="40.3470%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="40.0970%" y="437" width="0.6467%" height="15" fill="rgb(219,3,3)" fg:x="496" fg:w="8"/><text x="40.3470%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.5821%" y="421" width="0.1617%" height="15" fill="rgb(218,157,4)" fg:x="502" fg:w="2"/><text x="40.8321%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.5821%" y="405" width="0.1617%" height="15" fill="rgb(232,76,36)" fg:x="502" fg:w="2"/><text x="40.8321%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="40.5821%" y="389" width="0.1617%" height="15" fill="rgb(247,36,0)" fg:x="502" fg:w="2"/><text x="40.8321%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="40.5821%" y="373" width="0.1617%" height="15" fill="rgb(205,2,34)" fg:x="502" fg:w="2"/><text x="40.8321%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="40.6629%" y="357" width="0.0808%" height="15" fill="rgb(239,136,13)" fg:x="503" fg:w="1"/><text x="40.9129%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.7437%" y="453" width="0.0808%" height="15" fill="rgb(253,122,12)" fg:x="504" fg:w="1"/><text x="40.9937%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (2 samples, 0.16%)</title><rect x="40.7437%" y="469" width="0.1617%" height="15" fill="rgb(222,174,7)" fg:x="504" fg:w="2"/><text x="40.9937%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="40.8246%" y="453" width="0.0808%" height="15" fill="rgb(208,191,42)" fg:x="505" fg:w="1"/><text x="41.0746%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9054%" y="357" width="0.0808%" height="15" fill="rgb(237,212,15)" fg:x="506" fg:w="1"/><text x="41.1554%" y="367.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (14 samples, 1.13%)</title><rect x="40.0970%" y="485" width="1.1318%" height="15" fill="rgb(215,65,20)" fg:x="496" fg:w="14"/><text x="40.3470%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="40.9054%" y="469" width="0.3234%" height="15" fill="rgb(232,103,11)" fg:x="506" fg:w="4"/><text x="41.1554%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (4 samples, 0.32%)</title><rect x="40.9054%" y="453" width="0.3234%" height="15" fill="rgb(235,148,18)" fg:x="506" fg:w="4"/><text x="41.1554%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="40.9054%" y="437" width="0.3234%" height="15" fill="rgb(240,173,7)" fg:x="506" fg:w="4"/><text x="41.1554%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="40.9054%" y="421" width="0.3234%" height="15" fill="rgb(228,182,25)" fg:x="506" fg:w="4"/><text x="41.1554%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.32%)</title><rect x="40.9054%" y="405" width="0.3234%" height="15" fill="rgb(247,3,52)" fg:x="506" fg:w="4"/><text x="41.1554%" y="415.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (4 samples, 0.32%)</title><rect x="40.9054%" y="389" width="0.3234%" height="15" fill="rgb(226,155,8)" fg:x="506" fg:w="4"/><text x="41.1554%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="40.9054%" y="373" width="0.3234%" height="15" fill="rgb(243,195,38)" fg:x="506" fg:w="4"/><text x="41.1554%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="40.9863%" y="357" width="0.2425%" height="15" fill="rgb(254,181,33)" fg:x="507" fg:w="3"/><text x="41.2363%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.0671%" y="341" width="0.1617%" height="15" fill="rgb(232,98,23)" fg:x="508" fg:w="2"/><text x="41.3171%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1479%" y="325" width="0.0808%" height="15" fill="rgb(205,23,10)" fg:x="509" fg:w="1"/><text x="41.3979%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="41.2288%" y="421" width="0.0808%" height="15" fill="rgb(212,124,38)" fg:x="510" fg:w="1"/><text x="41.4788%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.2288%" y="437" width="0.1617%" height="15" fill="rgb(228,207,2)" fg:x="510" fg:w="2"/><text x="41.4788%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="41.3096%" y="421" width="0.0808%" height="15" fill="rgb(215,120,22)" fg:x="511" fg:w="1"/><text x="41.5596%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="41.3096%" y="405" width="0.0808%" height="15" fill="rgb(251,172,33)" fg:x="511" fg:w="1"/><text x="41.5596%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.3096%" y="389" width="0.0808%" height="15" fill="rgb(250,83,2)" fg:x="511" fg:w="1"/><text x="41.5596%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.3096%" y="373" width="0.0808%" height="15" fill="rgb(210,132,53)" fg:x="511" fg:w="1"/><text x="41.5596%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.3096%" y="357" width="0.0808%" height="15" fill="rgb(221,208,36)" fg:x="511" fg:w="1"/><text x="41.5596%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.3096%" y="341" width="0.0808%" height="15" fill="rgb(205,192,46)" fg:x="511" fg:w="1"/><text x="41.5596%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.3096%" y="325" width="0.0808%" height="15" fill="rgb(223,163,14)" fg:x="511" fg:w="1"/><text x="41.5596%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.3096%" y="309" width="0.0808%" height="15" fill="rgb(218,41,28)" fg:x="511" fg:w="1"/><text x="41.5596%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.3096%" y="293" width="0.0808%" height="15" fill="rgb(235,104,10)" fg:x="511" fg:w="1"/><text x="41.5596%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.3096%" y="277" width="0.0808%" height="15" fill="rgb(246,17,4)" fg:x="511" fg:w="1"/><text x="41.5596%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="41.3905%" y="421" width="0.0808%" height="15" fill="rgb(240,7,16)" fg:x="512" fg:w="1"/><text x="41.6405%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.3905%" y="405" width="0.0808%" height="15" fill="rgb(213,160,23)" fg:x="512" fg:w="1"/><text x="41.6405%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="41.2288%" y="469" width="0.3234%" height="15" fill="rgb(251,179,49)" fg:x="510" fg:w="4"/><text x="41.4788%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="41.2288%" y="453" width="0.3234%" height="15" fill="rgb(247,198,10)" fg:x="510" fg:w="4"/><text x="41.4788%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="41.3905%" y="437" width="0.1617%" height="15" fill="rgb(220,65,29)" fg:x="512" fg:w="2"/><text x="41.6405%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="41.4713%" y="421" width="0.0808%" height="15" fill="rgb(237,171,28)" fg:x="513" fg:w="1"/><text x="41.7213%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="41.4713%" y="405" width="0.0808%" height="15" fill="rgb(228,44,26)" fg:x="513" fg:w="1"/><text x="41.7213%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.4713%" y="389" width="0.0808%" height="15" fill="rgb(216,210,27)" fg:x="513" fg:w="1"/><text x="41.7213%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="41.5521%" y="421" width="0.2425%" height="15" fill="rgb(252,10,17)" fg:x="514" fg:w="3"/><text x="41.8021%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.6330%" y="405" width="0.1617%" height="15" fill="rgb(214,172,30)" fg:x="515" fg:w="2"/><text x="41.8830%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.6330%" y="389" width="0.1617%" height="15" fill="rgb(253,130,48)" fg:x="515" fg:w="2"/><text x="41.8830%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.7138%" y="373" width="0.0808%" height="15" fill="rgb(226,99,43)" fg:x="516" fg:w="1"/><text x="41.9638%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.7138%" y="357" width="0.0808%" height="15" fill="rgb(239,111,26)" fg:x="516" fg:w="1"/><text x="41.9638%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.7138%" y="341" width="0.0808%" height="15" fill="rgb(240,27,53)" fg:x="516" fg:w="1"/><text x="41.9638%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.7138%" y="325" width="0.0808%" height="15" fill="rgb(254,163,12)" fg:x="516" fg:w="1"/><text x="41.9638%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.7138%" y="309" width="0.0808%" height="15" fill="rgb(225,51,48)" fg:x="516" fg:w="1"/><text x="41.9638%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.7138%" y="293" width="0.0808%" height="15" fill="rgb(205,19,32)" fg:x="516" fg:w="1"/><text x="41.9638%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.7138%" y="277" width="0.0808%" height="15" fill="rgb(218,119,26)" fg:x="516" fg:w="1"/><text x="41.9638%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.7138%" y="261" width="0.0808%" height="15" fill="rgb(231,173,33)" fg:x="516" fg:w="1"/><text x="41.9638%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.7138%" y="245" width="0.0808%" height="15" fill="rgb(241,100,29)" fg:x="516" fg:w="1"/><text x="41.9638%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.7138%" y="229" width="0.0808%" height="15" fill="rgb(250,194,34)" fg:x="516" fg:w="1"/><text x="41.9638%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.7138%" y="213" width="0.0808%" height="15" fill="rgb(215,23,50)" fg:x="516" fg:w="1"/><text x="41.9638%" y="223.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="41.5521%" y="453" width="0.3234%" height="15" fill="rgb(206,49,37)" fg:x="514" fg:w="4"/><text x="41.8021%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.5521%" y="437" width="0.3234%" height="15" fill="rgb(247,39,21)" fg:x="514" fg:w="4"/><text x="41.8021%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.7947%" y="421" width="0.0808%" height="15" fill="rgb(209,220,15)" fg:x="517" fg:w="1"/><text x="42.0447%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8755%" y="373" width="0.0808%" height="15" fill="rgb(206,41,33)" fg:x="518" fg:w="1"/><text x="42.1255%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8755%" y="357" width="0.0808%" height="15" fill="rgb(221,225,45)" fg:x="518" fg:w="1"/><text x="42.1255%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8755%" y="341" width="0.0808%" height="15" fill="rgb(216,27,18)" fg:x="518" fg:w="1"/><text x="42.1255%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.8755%" y="421" width="0.1617%" height="15" fill="rgb(250,193,34)" fg:x="518" fg:w="2"/><text x="42.1255%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="41.8755%" y="405" width="0.1617%" height="15" fill="rgb(227,215,20)" fg:x="518" fg:w="2"/><text x="42.1255%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="41.8755%" y="389" width="0.1617%" height="15" fill="rgb(242,211,27)" fg:x="518" fg:w="2"/><text x="42.1255%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.9563%" y="373" width="0.0808%" height="15" fill="rgb(229,190,30)" fg:x="519" fg:w="1"/><text x="42.2063%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9563%" y="357" width="0.0808%" height="15" fill="rgb(253,31,29)" fg:x="519" fg:w="1"/><text x="42.2063%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.9563%" y="341" width="0.0808%" height="15" fill="rgb(229,177,52)" fg:x="519" fg:w="1"/><text x="42.2063%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9563%" y="325" width="0.0808%" height="15" fill="rgb(226,88,8)" fg:x="519" fg:w="1"/><text x="42.2063%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.0372%" y="405" width="0.0808%" height="15" fill="rgb(214,55,27)" fg:x="520" fg:w="1"/><text x="42.2872%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.65%)</title><rect x="41.5521%" y="469" width="0.6467%" height="15" fill="rgb(233,202,5)" fg:x="514" fg:w="8"/><text x="41.8021%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="41.8755%" y="453" width="0.3234%" height="15" fill="rgb(251,49,30)" fg:x="518" fg:w="4"/><text x="42.1255%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="41.8755%" y="437" width="0.3234%" height="15" fill="rgb(235,18,52)" fg:x="518" fg:w="4"/><text x="42.1255%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="42.0372%" y="421" width="0.1617%" height="15" fill="rgb(250,111,51)" fg:x="520" fg:w="2"/><text x="42.2872%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="42.1180%" y="405" width="0.0808%" height="15" fill="rgb(218,13,25)" fg:x="521" fg:w="1"/><text x="42.3680%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="42.1180%" y="389" width="0.0808%" height="15" fill="rgb(248,96,7)" fg:x="521" fg:w="1"/><text x="42.3680%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.1180%" y="373" width="0.0808%" height="15" fill="rgb(217,31,15)" fg:x="521" fg:w="1"/><text x="42.3680%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.1180%" y="357" width="0.0808%" height="15" fill="rgb(228,59,49)" fg:x="521" fg:w="1"/><text x="42.3680%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.1180%" y="341" width="0.0808%" height="15" fill="rgb(210,152,38)" fg:x="521" fg:w="1"/><text x="42.3680%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.1180%" y="325" width="0.0808%" height="15" fill="rgb(206,71,11)" fg:x="521" fg:w="1"/><text x="42.3680%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1180%" y="309" width="0.0808%" height="15" fill="rgb(244,199,5)" fg:x="521" fg:w="1"/><text x="42.3680%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.1180%" y="293" width="0.0808%" height="15" fill="rgb(253,49,1)" fg:x="521" fg:w="1"/><text x="42.3680%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="42.1180%" y="277" width="0.0808%" height="15" fill="rgb(225,206,40)" fg:x="521" fg:w="1"/><text x="42.3680%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.1989%" y="453" width="0.0808%" height="15" fill="rgb(243,116,47)" fg:x="522" fg:w="1"/><text x="42.4489%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="42.2797%" y="437" width="0.1617%" height="15" fill="rgb(219,225,16)" fg:x="523" fg:w="2"/><text x="42.5297%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.2797%" y="421" width="0.1617%" height="15" fill="rgb(233,29,47)" fg:x="523" fg:w="2"/><text x="42.5297%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.2797%" y="405" width="0.1617%" height="15" fill="rgb(250,179,18)" fg:x="523" fg:w="2"/><text x="42.5297%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="42.3605%" y="389" width="0.0808%" height="15" fill="rgb(215,176,6)" fg:x="524" fg:w="1"/><text x="42.6105%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.3605%" y="373" width="0.0808%" height="15" fill="rgb(214,117,39)" fg:x="524" fg:w="1"/><text x="42.6105%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (240 samples, 19.40%)</title><rect x="23.1205%" y="501" width="19.4018%" height="15" fill="rgb(247,183,36)" fg:x="286" fg:w="240"/><text x="23.3705%" y="511.50">plugins_core::build::BuildSurr..</text></g><g><title>plugins_core::tools::set_container (16 samples, 1.29%)</title><rect x="41.2288%" y="485" width="1.2935%" height="15" fill="rgb(237,200,3)" fg:x="510" fg:w="16"/><text x="41.4788%" y="495.50"></text></g><g><title>plugins_core::location::Location::set (4 samples, 0.32%)</title><rect x="42.1989%" y="469" width="0.3234%" height="15" fill="rgb(212,220,24)" fg:x="522" fg:w="4"/><text x="42.4489%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="42.2797%" y="453" width="0.2425%" height="15" fill="rgb(245,216,20)" fg:x="523" fg:w="3"/><text x="42.5297%" y="463.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="42.4414%" y="437" width="0.0808%" height="15" fill="rgb(219,124,7)" fg:x="525" fg:w="1"/><text x="42.6914%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.4414%" y="421" width="0.0808%" height="15" fill="rgb(227,167,8)" fg:x="525" fg:w="1"/><text x="42.6914%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="42.4414%" y="405" width="0.0808%" height="15" fill="rgb(241,37,2)" fg:x="525" fg:w="1"/><text x="42.6914%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.4414%" y="389" width="0.0808%" height="15" fill="rgb(238,134,33)" fg:x="525" fg:w="1"/><text x="42.6914%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4414%" y="373" width="0.0808%" height="15" fill="rgb(248,48,27)" fg:x="525" fg:w="1"/><text x="42.6914%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="42.5222%" y="501" width="0.0808%" height="15" fill="rgb(212,14,16)" fg:x="526" fg:w="1"/><text x="42.7722%" y="511.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="42.5222%" y="485" width="0.0808%" height="15" fill="rgb(217,205,37)" fg:x="526" fg:w="1"/><text x="42.7722%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="42.5222%" y="469" width="0.0808%" height="15" fill="rgb(233,185,47)" fg:x="526" fg:w="1"/><text x="42.7722%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="42.5222%" y="453" width="0.0808%" height="15" fill="rgb(244,88,8)" fg:x="526" fg:w="1"/><text x="42.7722%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.5222%" y="437" width="0.0808%" height="15" fill="rgb(213,0,20)" fg:x="526" fg:w="1"/><text x="42.7722%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.5222%" y="421" width="0.0808%" height="15" fill="rgb(238,159,36)" fg:x="526" fg:w="1"/><text x="42.7722%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.5222%" y="405" width="0.0808%" height="15" fill="rgb(253,173,17)" fg:x="526" fg:w="1"/><text x="42.7722%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.5222%" y="389" width="0.0808%" height="15" fill="rgb(221,23,28)" fg:x="526" fg:w="1"/><text x="42.7722%" y="399.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="42.5222%" y="373" width="0.0808%" height="15" fill="rgb(218,113,15)" fg:x="526" fg:w="1"/><text x="42.7722%" y="383.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="42.5222%" y="357" width="0.0808%" height="15" fill="rgb(233,58,3)" fg:x="526" fg:w="1"/><text x="42.7722%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.5222%" y="341" width="0.0808%" height="15" fill="rgb(250,46,35)" fg:x="526" fg:w="1"/><text x="42.7722%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.6031%" y="469" width="0.0808%" height="15" fill="rgb(210,169,11)" fg:x="527" fg:w="1"/><text x="42.8531%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.6031%" y="453" width="0.0808%" height="15" fill="rgb(246,88,19)" fg:x="527" fg:w="1"/><text x="42.8531%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.6031%" y="437" width="0.0808%" height="15" fill="rgb(206,81,49)" fg:x="527" fg:w="1"/><text x="42.8531%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.6031%" y="421" width="0.0808%" height="15" fill="rgb(232,144,18)" fg:x="527" fg:w="1"/><text x="42.8531%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.6031%" y="405" width="0.0808%" height="15" fill="rgb(235,2,27)" fg:x="527" fg:w="1"/><text x="42.8531%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6031%" y="389" width="0.0808%" height="15" fill="rgb(239,157,39)" fg:x="527" fg:w="1"/><text x="42.8531%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="42.6839%" y="469" width="0.0808%" height="15" fill="rgb(220,11,17)" fg:x="528" fg:w="1"/><text x="42.9339%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="42.6839%" y="453" width="0.0808%" height="15" fill="rgb(243,94,50)" fg:x="528" fg:w="1"/><text x="42.9339%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="42.6839%" y="437" width="0.0808%" height="15" fill="rgb(218,22,0)" fg:x="528" fg:w="1"/><text x="42.9339%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.6839%" y="421" width="0.0808%" height="15" fill="rgb(249,70,21)" fg:x="528" fg:w="1"/><text x="42.9339%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="42.6839%" y="405" width="0.0808%" height="15" fill="rgb(245,111,46)" fg:x="528" fg:w="1"/><text x="42.9339%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="42.6839%" y="389" width="0.0808%" height="15" fill="rgb(244,183,12)" fg:x="528" fg:w="1"/><text x="42.9339%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.6839%" y="373" width="0.0808%" height="15" fill="rgb(207,117,0)" fg:x="528" fg:w="1"/><text x="42.9339%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="42.6839%" y="357" width="0.0808%" height="15" fill="rgb(206,20,43)" fg:x="528" fg:w="1"/><text x="42.9339%" y="367.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="42.7648%" y="469" width="0.0808%" height="15" fill="rgb(221,104,11)" fg:x="529" fg:w="1"/><text x="43.0148%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="42.7648%" y="453" width="0.0808%" height="15" fill="rgb(254,36,50)" fg:x="529" fg:w="1"/><text x="43.0148%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="42.7648%" y="437" width="0.0808%" height="15" fill="rgb(252,17,15)" fg:x="529" fg:w="1"/><text x="43.0148%" y="447.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="42.7648%" y="421" width="0.0808%" height="15" fill="rgb(219,129,43)" fg:x="529" fg:w="1"/><text x="43.0148%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9264%" y="389" width="0.0808%" height="15" fill="rgb(205,34,45)" fg:x="531" fg:w="1"/><text x="43.1764%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9264%" y="373" width="0.0808%" height="15" fill="rgb(251,201,32)" fg:x="531" fg:w="1"/><text x="43.1764%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="42.9264%" y="437" width="0.1617%" height="15" fill="rgb(205,56,0)" fg:x="531" fg:w="2"/><text x="43.1764%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="42.9264%" y="421" width="0.1617%" height="15" fill="rgb(211,193,27)" fg:x="531" fg:w="2"/><text x="43.1764%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="42.9264%" y="405" width="0.1617%" height="15" fill="rgb(231,100,42)" fg:x="531" fg:w="2"/><text x="43.1764%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0073%" y="389" width="0.0808%" height="15" fill="rgb(245,85,27)" fg:x="532" fg:w="1"/><text x="43.2573%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0073%" y="373" width="0.0808%" height="15" fill="rgb(241,76,24)" fg:x="532" fg:w="1"/><text x="43.2573%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0073%" y="357" width="0.0808%" height="15" fill="rgb(249,157,15)" fg:x="532" fg:w="1"/><text x="43.2573%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0073%" y="341" width="0.0808%" height="15" fill="rgb(222,218,25)" fg:x="532" fg:w="1"/><text x="43.2573%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0073%" y="325" width="0.0808%" height="15" fill="rgb(252,156,52)" fg:x="532" fg:w="1"/><text x="43.2573%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0073%" y="309" width="0.0808%" height="15" fill="rgb(211,185,7)" fg:x="532" fg:w="1"/><text x="43.2573%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="43.0881%" y="437" width="0.0808%" height="15" fill="rgb(234,108,24)" fg:x="533" fg:w="1"/><text x="43.3381%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="43.0881%" y="421" width="0.0808%" height="15" fill="rgb(227,218,2)" fg:x="533" fg:w="1"/><text x="43.3381%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1690%" y="357" width="0.0808%" height="15" fill="rgb(224,0,36)" fg:x="534" fg:w="1"/><text x="43.4190%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.1690%" y="341" width="0.0808%" height="15" fill="rgb(233,201,10)" fg:x="534" fg:w="1"/><text x="43.4190%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1690%" y="325" width="0.0808%" height="15" fill="rgb(252,209,14)" fg:x="534" fg:w="1"/><text x="43.4190%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1690%" y="309" width="0.0808%" height="15" fill="rgb(205,93,49)" fg:x="534" fg:w="1"/><text x="43.4190%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.1690%" y="293" width="0.0808%" height="15" fill="rgb(234,116,45)" fg:x="534" fg:w="1"/><text x="43.4190%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.1690%" y="277" width="0.0808%" height="15" fill="rgb(248,89,35)" fg:x="534" fg:w="1"/><text x="43.4190%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.1690%" y="261" width="0.0808%" height="15" fill="rgb(233,167,45)" fg:x="534" fg:w="1"/><text x="43.4190%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1690%" y="245" width="0.0808%" height="15" fill="rgb(248,228,14)" fg:x="534" fg:w="1"/><text x="43.4190%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1690%" y="229" width="0.0808%" height="15" fill="rgb(246,91,14)" fg:x="534" fg:w="1"/><text x="43.4190%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.1690%" y="213" width="0.0808%" height="15" fill="rgb(227,142,5)" fg:x="534" fg:w="1"/><text x="43.4190%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.1690%" y="197" width="0.0808%" height="15" fill="rgb(221,63,33)" fg:x="534" fg:w="1"/><text x="43.4190%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.1690%" y="181" width="0.0808%" height="15" fill="rgb(233,49,0)" fg:x="534" fg:w="1"/><text x="43.4190%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.1690%" y="165" width="0.0808%" height="15" fill="rgb(251,115,38)" fg:x="534" fg:w="1"/><text x="43.4190%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.1690%" y="149" width="0.0808%" height="15" fill="rgb(231,214,32)" fg:x="534" fg:w="1"/><text x="43.4190%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.2498%" y="293" width="0.0808%" height="15" fill="rgb(248,73,46)" fg:x="535" fg:w="1"/><text x="43.4998%" y="303.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="43.1690%" y="421" width="0.2425%" height="15" fill="rgb(237,156,4)" fg:x="534" fg:w="3"/><text x="43.4190%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="43.1690%" y="405" width="0.2425%" height="15" fill="rgb(227,132,2)" fg:x="534" fg:w="3"/><text x="43.4190%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="43.1690%" y="389" width="0.2425%" height="15" fill="rgb(248,161,9)" fg:x="534" fg:w="3"/><text x="43.4190%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="43.1690%" y="373" width="0.2425%" height="15" fill="rgb(238,77,38)" fg:x="534" fg:w="3"/><text x="43.4190%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.2498%" y="357" width="0.1617%" height="15" fill="rgb(222,166,40)" fg:x="535" fg:w="2"/><text x="43.4998%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.2498%" y="341" width="0.1617%" height="15" fill="rgb(214,168,45)" fg:x="535" fg:w="2"/><text x="43.4998%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.2498%" y="325" width="0.1617%" height="15" fill="rgb(226,64,37)" fg:x="535" fg:w="2"/><text x="43.4998%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.2498%" y="309" width="0.1617%" height="15" fill="rgb(232,210,43)" fg:x="535" fg:w="2"/><text x="43.4998%" y="319.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="43.3306%" y="293" width="0.0808%" height="15" fill="rgb(214,76,33)" fg:x="536" fg:w="1"/><text x="43.5806%" y="303.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="43.4115%" y="421" width="0.0808%" height="15" fill="rgb(210,78,5)" fg:x="537" fg:w="1"/><text x="43.6615%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.4115%" y="405" width="0.0808%" height="15" fill="rgb(211,107,37)" fg:x="537" fg:w="1"/><text x="43.6615%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.4115%" y="389" width="0.0808%" height="15" fill="rgb(249,67,16)" fg:x="537" fg:w="1"/><text x="43.6615%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.4115%" y="373" width="0.0808%" height="15" fill="rgb(222,114,31)" fg:x="537" fg:w="1"/><text x="43.6615%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.4115%" y="357" width="0.0808%" height="15" fill="rgb(242,118,19)" fg:x="537" fg:w="1"/><text x="43.6615%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.4115%" y="341" width="0.0808%" height="15" fill="rgb(223,115,1)" fg:x="537" fg:w="1"/><text x="43.6615%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="43.4923%" y="389" width="0.0808%" height="15" fill="rgb(241,182,54)" fg:x="538" fg:w="1"/><text x="43.7423%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.4923%" y="373" width="0.0808%" height="15" fill="rgb(244,166,36)" fg:x="538" fg:w="1"/><text x="43.7423%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="43.4923%" y="357" width="0.0808%" height="15" fill="rgb(241,52,43)" fg:x="538" fg:w="1"/><text x="43.7423%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="43.4923%" y="341" width="0.0808%" height="15" fill="rgb(236,82,9)" fg:x="538" fg:w="1"/><text x="43.7423%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.89%)</title><rect x="42.8456%" y="453" width="0.8892%" height="15" fill="rgb(241,119,0)" fg:x="530" fg:w="11"/><text x="43.0956%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="43.1690%" y="437" width="0.5659%" height="15" fill="rgb(221,19,22)" fg:x="534" fg:w="7"/><text x="43.4190%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="43.4923%" y="421" width="0.2425%" height="15" fill="rgb(254,144,35)" fg:x="538" fg:w="3"/><text x="43.7423%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="43.4923%" y="405" width="0.2425%" height="15" fill="rgb(246,132,30)" fg:x="538" fg:w="3"/><text x="43.7423%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="43.5732%" y="389" width="0.1617%" height="15" fill="rgb(234,69,28)" fg:x="539" fg:w="2"/><text x="43.8232%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.5732%" y="373" width="0.1617%" height="15" fill="rgb(219,106,47)" fg:x="539" fg:w="2"/><text x="43.8232%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.5732%" y="357" width="0.1617%" height="15" fill="rgb(218,79,24)" fg:x="539" fg:w="2"/><text x="43.8232%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.6540%" y="341" width="0.0808%" height="15" fill="rgb(225,26,21)" fg:x="540" fg:w="1"/><text x="43.9040%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.6540%" y="325" width="0.0808%" height="15" fill="rgb(217,68,49)" fg:x="540" fg:w="1"/><text x="43.9040%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.7348%" y="453" width="0.0808%" height="15" fill="rgb(220,204,28)" fg:x="541" fg:w="1"/><text x="43.9848%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.7348%" y="437" width="0.0808%" height="15" fill="rgb(237,208,43)" fg:x="541" fg:w="1"/><text x="43.9848%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.7348%" y="421" width="0.0808%" height="15" fill="rgb(213,97,42)" fg:x="541" fg:w="1"/><text x="43.9848%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="43.8157%" y="437" width="0.0808%" height="15" fill="rgb(238,96,52)" fg:x="542" fg:w="1"/><text x="44.0657%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.8965%" y="341" width="0.0808%" height="15" fill="rgb(228,14,13)" fg:x="543" fg:w="1"/><text x="44.1465%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (18 samples, 1.46%)</title><rect x="42.6031%" y="501" width="1.4551%" height="15" fill="rgb(219,123,13)" fg:x="527" fg:w="18"/><text x="42.8531%" y="511.50"></text></g><g><title>plugins_core::build::QuickThing::make (18 samples, 1.46%)</title><rect x="42.6031%" y="485" width="1.4551%" height="15" fill="rgb(216,144,17)" fg:x="527" fg:w="18"/><text x="42.8531%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (15 samples, 1.21%)</title><rect x="42.8456%" y="469" width="1.2126%" height="15" fill="rgb(230,228,29)" fg:x="530" fg:w="15"/><text x="43.0956%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="43.8157%" y="453" width="0.2425%" height="15" fill="rgb(233,18,5)" fg:x="542" fg:w="3"/><text x="44.0657%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="43.8965%" y="437" width="0.1617%" height="15" fill="rgb(233,197,12)" fg:x="543" fg:w="2"/><text x="44.1465%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="43.8965%" y="421" width="0.1617%" height="15" fill="rgb(234,140,29)" fg:x="543" fg:w="2"/><text x="44.1465%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.8965%" y="405" width="0.1617%" height="15" fill="rgb(233,113,19)" fg:x="543" fg:w="2"/><text x="44.1465%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.8965%" y="389" width="0.1617%" height="15" fill="rgb(246,209,13)" fg:x="543" fg:w="2"/><text x="44.1465%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.8965%" y="373" width="0.1617%" height="15" fill="rgb(242,79,54)" fg:x="543" fg:w="2"/><text x="44.1465%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.8965%" y="357" width="0.1617%" height="15" fill="rgb(219,73,16)" fg:x="543" fg:w="2"/><text x="44.1465%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.9774%" y="341" width="0.0808%" height="15" fill="rgb(224,52,10)" fg:x="544" fg:w="1"/><text x="44.2274%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.9774%" y="325" width="0.0808%" height="15" fill="rgb(237,179,5)" fg:x="544" fg:w="1"/><text x="44.2274%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.9774%" y="309" width="0.0808%" height="15" fill="rgb(231,20,6)" fg:x="544" fg:w="1"/><text x="44.2274%" y="319.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="44.0582%" y="469" width="0.0808%" height="15" fill="rgb(253,171,45)" fg:x="545" fg:w="1"/><text x="44.3082%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="44.0582%" y="485" width="0.1617%" height="15" fill="rgb(230,75,49)" fg:x="545" fg:w="2"/><text x="44.3082%" y="495.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="44.1390%" y="469" width="0.0808%" height="15" fill="rgb(216,83,46)" fg:x="546" fg:w="1"/><text x="44.3890%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="44.1390%" y="453" width="0.0808%" height="15" fill="rgb(236,56,9)" fg:x="546" fg:w="1"/><text x="44.3890%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.1390%" y="437" width="0.0808%" height="15" fill="rgb(215,28,34)" fg:x="546" fg:w="1"/><text x="44.3890%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="44.1390%" y="421" width="0.0808%" height="15" fill="rgb(230,222,20)" fg:x="546" fg:w="1"/><text x="44.3890%" y="431.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="44.1390%" y="405" width="0.0808%" height="15" fill="rgb(235,209,51)" fg:x="546" fg:w="1"/><text x="44.3890%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="44.2199%" y="485" width="0.0808%" height="15" fill="rgb(235,167,1)" fg:x="547" fg:w="1"/><text x="44.4699%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="44.3816%" y="453" width="0.0808%" height="15" fill="rgb(248,220,0)" fg:x="549" fg:w="1"/><text x="44.6316%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="44.3816%" y="437" width="0.0808%" height="15" fill="rgb(239,0,18)" fg:x="549" fg:w="1"/><text x="44.6316%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="44.3816%" y="421" width="0.0808%" height="15" fill="rgb(229,179,11)" fg:x="549" fg:w="1"/><text x="44.6316%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="44.3816%" y="405" width="0.0808%" height="15" fill="rgb(226,116,53)" fg:x="549" fg:w="1"/><text x="44.6316%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.3816%" y="389" width="0.0808%" height="15" fill="rgb(218,1,49)" fg:x="549" fg:w="1"/><text x="44.6316%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.3816%" y="373" width="0.0808%" height="15" fill="rgb(208,184,47)" fg:x="549" fg:w="1"/><text x="44.6316%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.4624%" y="437" width="0.0808%" height="15" fill="rgb(238,174,3)" fg:x="550" fg:w="1"/><text x="44.7124%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="44.4624%" y="453" width="0.1617%" height="15" fill="rgb(247,188,6)" fg:x="550" fg:w="2"/><text x="44.7124%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="44.5432%" y="437" width="0.0808%" height="15" fill="rgb(211,165,46)" fg:x="551" fg:w="1"/><text x="44.7932%" y="447.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="44.6241%" y="453" width="0.0808%" height="15" fill="rgb(222,190,10)" fg:x="552" fg:w="1"/><text x="44.8741%" y="463.50"></text></g><g><title>plugins_core::build::Build::new_world (6 samples, 0.49%)</title><rect x="44.3007%" y="485" width="0.4850%" height="15" fill="rgb(206,185,3)" fg:x="548" fg:w="6"/><text x="44.5507%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (5 samples, 0.40%)</title><rect x="44.3816%" y="469" width="0.4042%" height="15" fill="rgb(244,125,37)" fg:x="549" fg:w="5"/><text x="44.6316%" y="479.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="44.7049%" y="453" width="0.0808%" height="15" fill="rgb(211,43,7)" fg:x="553" fg:w="1"/><text x="44.9549%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="44.7049%" y="437" width="0.0808%" height="15" fill="rgb(250,41,42)" fg:x="553" fg:w="1"/><text x="44.9549%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.7049%" y="421" width="0.0808%" height="15" fill="rgb(254,54,42)" fg:x="553" fg:w="1"/><text x="44.9549%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (1 samples, 0.08%)</title><rect x="44.7049%" y="405" width="0.0808%" height="15" fill="rgb(213,71,43)" fg:x="553" fg:w="1"/><text x="44.9549%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8666%" y="469" width="0.0808%" height="15" fill="rgb(249,3,44)" fg:x="555" fg:w="1"/><text x="45.1166%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8666%" y="453" width="0.0808%" height="15" fill="rgb(229,80,41)" fg:x="555" fg:w="1"/><text x="45.1166%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.8666%" y="437" width="0.0808%" height="15" fill="rgb(231,25,28)" fg:x="555" fg:w="1"/><text x="45.1166%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.8666%" y="421" width="0.0808%" height="15" fill="rgb(208,79,48)" fg:x="555" fg:w="1"/><text x="45.1166%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.8666%" y="405" width="0.0808%" height="15" fill="rgb(207,196,38)" fg:x="555" fg:w="1"/><text x="45.1166%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.8666%" y="389" width="0.0808%" height="15" fill="rgb(228,105,49)" fg:x="555" fg:w="1"/><text x="45.1166%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.8666%" y="373" width="0.0808%" height="15" fill="rgb(237,99,15)" fg:x="555" fg:w="1"/><text x="45.1166%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.8666%" y="357" width="0.0808%" height="15" fill="rgb(224,207,46)" fg:x="555" fg:w="1"/><text x="45.1166%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.8666%" y="341" width="0.0808%" height="15" fill="rgb(249,117,50)" fg:x="555" fg:w="1"/><text x="45.1166%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.8666%" y="325" width="0.0808%" height="15" fill="rgb(248,17,13)" fg:x="555" fg:w="1"/><text x="45.1166%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.8666%" y="309" width="0.0808%" height="15" fill="rgb(228,187,36)" fg:x="555" fg:w="1"/><text x="45.1166%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8666%" y="293" width="0.0808%" height="15" fill="rgb(234,132,20)" fg:x="555" fg:w="1"/><text x="45.1166%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.0283%" y="405" width="0.0808%" height="15" fill="rgb(209,170,46)" fg:x="557" fg:w="1"/><text x="45.2783%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.0283%" y="389" width="0.0808%" height="15" fill="rgb(237,23,19)" fg:x="557" fg:w="1"/><text x="45.2783%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.0283%" y="373" width="0.0808%" height="15" fill="rgb(227,21,26)" fg:x="557" fg:w="1"/><text x="45.2783%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0283%" y="357" width="0.0808%" height="15" fill="rgb(222,220,48)" fg:x="557" fg:w="1"/><text x="45.2783%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0283%" y="341" width="0.0808%" height="15" fill="rgb(214,9,16)" fg:x="557" fg:w="1"/><text x="45.2783%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.0283%" y="325" width="0.0808%" height="15" fill="rgb(209,73,30)" fg:x="557" fg:w="1"/><text x="45.2783%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.0283%" y="309" width="0.0808%" height="15" fill="rgb(207,20,33)" fg:x="557" fg:w="1"/><text x="45.2783%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.0283%" y="293" width="0.0808%" height="15" fill="rgb(219,153,12)" fg:x="557" fg:w="1"/><text x="45.2783%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0283%" y="277" width="0.0808%" height="15" fill="rgb(235,97,25)" fg:x="557" fg:w="1"/><text x="45.2783%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0283%" y="261" width="0.0808%" height="15" fill="rgb(244,30,34)" fg:x="557" fg:w="1"/><text x="45.2783%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.0283%" y="245" width="0.0808%" height="15" fill="rgb(214,106,45)" fg:x="557" fg:w="1"/><text x="45.2783%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.0283%" y="229" width="0.0808%" height="15" fill="rgb(226,41,9)" fg:x="557" fg:w="1"/><text x="45.2783%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.0283%" y="213" width="0.0808%" height="15" fill="rgb(253,139,29)" fg:x="557" fg:w="1"/><text x="45.2783%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.0283%" y="197" width="0.0808%" height="15" fill="rgb(213,205,39)" fg:x="557" fg:w="1"/><text x="45.2783%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0283%" y="181" width="0.0808%" height="15" fill="rgb(209,27,10)" fg:x="557" fg:w="1"/><text x="45.2783%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="45.0283%" y="453" width="0.2425%" height="15" fill="rgb(249,142,16)" fg:x="557" fg:w="3"/><text x="45.2783%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="45.0283%" y="437" width="0.2425%" height="15" fill="rgb(242,65,12)" fg:x="557" fg:w="3"/><text x="45.2783%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="45.0283%" y="421" width="0.2425%" height="15" fill="rgb(232,48,10)" fg:x="557" fg:w="3"/><text x="45.2783%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.1091%" y="405" width="0.1617%" height="15" fill="rgb(253,67,19)" fg:x="558" fg:w="2"/><text x="45.3591%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.1091%" y="389" width="0.1617%" height="15" fill="rgb(227,93,29)" fg:x="558" fg:w="2"/><text x="45.3591%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.1091%" y="373" width="0.1617%" height="15" fill="rgb(226,189,53)" fg:x="558" fg:w="2"/><text x="45.3591%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.1091%" y="357" width="0.1617%" height="15" fill="rgb(223,224,1)" fg:x="558" fg:w="2"/><text x="45.3591%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.1091%" y="341" width="0.1617%" height="15" fill="rgb(221,84,32)" fg:x="558" fg:w="2"/><text x="45.3591%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.1091%" y="325" width="0.1617%" height="15" fill="rgb(214,189,28)" fg:x="558" fg:w="2"/><text x="45.3591%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="45.2708%" y="453" width="0.0808%" height="15" fill="rgb(234,7,52)" fg:x="560" fg:w="1"/><text x="45.5208%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="45.3517%" y="437" width="0.0808%" height="15" fill="rgb(249,73,31)" fg:x="561" fg:w="1"/><text x="45.6017%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="45.3517%" y="421" width="0.0808%" height="15" fill="rgb(253,153,41)" fg:x="561" fg:w="1"/><text x="45.6017%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="45.3517%" y="405" width="0.0808%" height="15" fill="rgb(249,52,34)" fg:x="561" fg:w="1"/><text x="45.6017%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="45.3517%" y="389" width="0.0808%" height="15" fill="rgb(236,177,47)" fg:x="561" fg:w="1"/><text x="45.6017%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.3517%" y="373" width="0.0808%" height="15" fill="rgb(252,185,45)" fg:x="561" fg:w="1"/><text x="45.6017%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.4325%" y="405" width="0.0808%" height="15" fill="rgb(251,15,30)" fg:x="562" fg:w="1"/><text x="45.6825%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="45.5133%" y="405" width="0.3234%" height="15" fill="rgb(233,31,4)" fg:x="563" fg:w="4"/><text x="45.7633%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.5942%" y="389" width="0.2425%" height="15" fill="rgb(254,44,24)" fg:x="564" fg:w="3"/><text x="45.8442%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="45.5942%" y="373" width="0.2425%" height="15" fill="rgb(218,54,1)" fg:x="564" fg:w="3"/><text x="45.8442%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="45.8367%" y="405" width="0.0808%" height="15" fill="rgb(243,209,39)" fg:x="567" fg:w="1"/><text x="46.0867%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="45.9175%" y="405" width="0.0808%" height="15" fill="rgb(206,75,33)" fg:x="568" fg:w="1"/><text x="46.1675%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.9175%" y="389" width="0.0808%" height="15" fill="rgb(223,108,18)" fg:x="568" fg:w="1"/><text x="46.1675%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9175%" y="373" width="0.0808%" height="15" fill="rgb(244,89,31)" fg:x="568" fg:w="1"/><text x="46.1675%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9175%" y="357" width="0.0808%" height="15" fill="rgb(222,167,27)" fg:x="568" fg:w="1"/><text x="46.1675%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="45.9984%" y="405" width="0.0808%" height="15" fill="rgb(247,41,16)" fg:x="569" fg:w="1"/><text x="46.2484%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.9984%" y="389" width="0.0808%" height="15" fill="rgb(233,168,40)" fg:x="569" fg:w="1"/><text x="46.2484%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="46.0792%" y="389" width="0.1617%" height="15" fill="rgb(205,211,8)" fg:x="570" fg:w="2"/><text x="46.3292%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="46.0792%" y="373" width="0.1617%" height="15" fill="rgb(238,105,11)" fg:x="570" fg:w="2"/><text x="46.3292%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="46.0792%" y="357" width="0.1617%" height="15" fill="rgb(223,142,52)" fg:x="570" fg:w="2"/><text x="46.3292%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="46.0792%" y="341" width="0.1617%" height="15" fill="rgb(238,51,33)" fg:x="570" fg:w="2"/><text x="46.3292%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="46.1601%" y="325" width="0.0808%" height="15" fill="rgb(231,188,43)" fg:x="571" fg:w="1"/><text x="46.4101%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="46.1601%" y="309" width="0.0808%" height="15" fill="rgb(216,92,17)" fg:x="571" fg:w="1"/><text x="46.4101%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1601%" y="293" width="0.0808%" height="15" fill="rgb(228,2,40)" fg:x="571" fg:w="1"/><text x="46.4101%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1601%" y="277" width="0.0808%" height="15" fill="rgb(226,73,15)" fg:x="571" fg:w="1"/><text x="46.4101%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.1601%" y="261" width="0.0808%" height="15" fill="rgb(227,66,46)" fg:x="571" fg:w="1"/><text x="46.4101%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="46.0792%" y="405" width="0.2425%" height="15" fill="rgb(209,71,6)" fg:x="570" fg:w="3"/><text x="46.3292%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2409%" y="389" width="0.0808%" height="15" fill="rgb(246,100,25)" fg:x="572" fg:w="1"/><text x="46.4909%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2409%" y="373" width="0.0808%" height="15" fill="rgb(248,185,27)" fg:x="572" fg:w="1"/><text x="46.4909%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.2409%" y="357" width="0.0808%" height="15" fill="rgb(225,118,47)" fg:x="572" fg:w="1"/><text x="46.4909%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.46%)</title><rect x="44.9475%" y="469" width="1.4551%" height="15" fill="rgb(220,185,44)" fg:x="556" fg:w="18"/><text x="45.1975%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (13 samples, 1.05%)</title><rect x="45.3517%" y="453" width="1.0509%" height="15" fill="rgb(227,95,24)" fg:x="561" fg:w="13"/><text x="45.6017%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.97%)</title><rect x="45.4325%" y="437" width="0.9701%" height="15" fill="rgb(252,84,24)" fg:x="562" fg:w="12"/><text x="45.6825%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="45.4325%" y="421" width="0.9701%" height="15" fill="rgb(240,34,44)" fg:x="562" fg:w="12"/><text x="45.6825%" y="431.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="46.3217%" y="405" width="0.0808%" height="15" fill="rgb(209,72,54)" fg:x="573" fg:w="1"/><text x="46.5717%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.4026%" y="469" width="0.1617%" height="15" fill="rgb(226,19,45)" fg:x="574" fg:w="2"/><text x="46.6526%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.4026%" y="453" width="0.1617%" height="15" fill="rgb(246,7,45)" fg:x="574" fg:w="2"/><text x="46.6526%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (2 samples, 0.16%)</title><rect x="46.5643%" y="453" width="0.1617%" height="15" fill="rgb(225,45,2)" fg:x="576" fg:w="2"/><text x="46.8143%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.6451%" y="437" width="0.0808%" height="15" fill="rgb(221,80,29)" fg:x="577" fg:w="1"/><text x="46.8951%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.7259%" y="421" width="0.0808%" height="15" fill="rgb(228,11,19)" fg:x="578" fg:w="1"/><text x="46.9759%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.8068%" y="357" width="0.0808%" height="15" fill="rgb(243,17,21)" fg:x="579" fg:w="1"/><text x="47.0568%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.8068%" y="341" width="0.0808%" height="15" fill="rgb(243,88,8)" fg:x="579" fg:w="1"/><text x="47.0568%" y="351.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (460 samples, 37.19%)</title><rect x="9.8626%" y="517" width="37.1867%" height="15" fill="rgb(214,17,9)" fg:x="122" fg:w="460"/><text x="10.1126%" y="527.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (37 samples, 2.99%)</title><rect x="44.0582%" y="501" width="2.9911%" height="15" fill="rgb(232,169,15)" fg:x="545" fg:w="37"/><text x="44.3082%" y="511.50">plu..</text></g><g><title>plugins_core::build::Build::save (28 samples, 2.26%)</title><rect x="44.7858%" y="485" width="2.2635%" height="15" fill="rgb(232,86,53)" fg:x="554" fg:w="28"/><text x="45.0358%" y="495.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.49%)</title><rect x="46.5643%" y="469" width="0.4850%" height="15" fill="rgb(222,100,4)" fg:x="576" fg:w="6"/><text x="46.8143%" y="479.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="46.7259%" y="453" width="0.3234%" height="15" fill="rgb(253,151,38)" fg:x="578" fg:w="4"/><text x="46.9759%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="46.7259%" y="437" width="0.3234%" height="15" fill="rgb(238,215,29)" fg:x="578" fg:w="4"/><text x="46.9759%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="46.8068%" y="421" width="0.2425%" height="15" fill="rgb(205,128,53)" fg:x="579" fg:w="3"/><text x="47.0568%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="46.8068%" y="405" width="0.2425%" height="15" fill="rgb(248,183,14)" fg:x="579" fg:w="3"/><text x="47.0568%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="46.8068%" y="389" width="0.2425%" height="15" fill="rgb(244,172,35)" fg:x="579" fg:w="3"/><text x="47.0568%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="46.8068%" y="373" width="0.2425%" height="15" fill="rgb(234,93,19)" fg:x="579" fg:w="3"/><text x="47.0568%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.8876%" y="357" width="0.1617%" height="15" fill="rgb(227,109,7)" fg:x="580" fg:w="2"/><text x="47.1376%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.8876%" y="341" width="0.1617%" height="15" fill="rgb(233,136,54)" fg:x="580" fg:w="2"/><text x="47.1376%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="47.0493%" y="517" width="0.1617%" height="15" fill="rgb(233,19,40)" fg:x="582" fg:w="2"/><text x="47.2993%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="47.0493%" y="501" width="0.1617%" height="15" fill="rgb(247,41,18)" fg:x="582" fg:w="2"/><text x="47.2993%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="47.1302%" y="485" width="0.0808%" height="15" fill="rgb(220,34,34)" fg:x="583" fg:w="1"/><text x="47.3802%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.1302%" y="469" width="0.0808%" height="15" fill="rgb(222,135,32)" fg:x="583" fg:w="1"/><text x="47.3802%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.1302%" y="453" width="0.0808%" height="15" fill="rgb(214,80,19)" fg:x="583" fg:w="1"/><text x="47.3802%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.2110%" y="485" width="0.0808%" height="15" fill="rgb(234,54,46)" fg:x="584" fg:w="1"/><text x="47.4610%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.2110%" y="469" width="0.0808%" height="15" fill="rgb(251,48,23)" fg:x="584" fg:w="1"/><text x="47.4610%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.2110%" y="453" width="0.0808%" height="15" fill="rgb(254,109,52)" fg:x="584" fg:w="1"/><text x="47.4610%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.2110%" y="437" width="0.0808%" height="15" fill="rgb(240,186,19)" fg:x="584" fg:w="1"/><text x="47.4610%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.2110%" y="421" width="0.0808%" height="15" fill="rgb(246,187,17)" fg:x="584" fg:w="1"/><text x="47.4610%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.2110%" y="405" width="0.0808%" height="15" fill="rgb(212,21,5)" fg:x="584" fg:w="1"/><text x="47.4610%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.2110%" y="389" width="0.0808%" height="15" fill="rgb(225,185,18)" fg:x="584" fg:w="1"/><text x="47.4610%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.2110%" y="373" width="0.0808%" height="15" fill="rgb(245,114,17)" fg:x="584" fg:w="1"/><text x="47.4610%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.2110%" y="357" width="0.0808%" height="15" fill="rgb(223,164,24)" fg:x="584" fg:w="1"/><text x="47.4610%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.2110%" y="341" width="0.0808%" height="15" fill="rgb(211,228,3)" fg:x="584" fg:w="1"/><text x="47.4610%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.2110%" y="325" width="0.0808%" height="15" fill="rgb(223,16,38)" fg:x="584" fg:w="1"/><text x="47.4610%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2110%" y="309" width="0.0808%" height="15" fill="rgb(207,31,54)" fg:x="584" fg:w="1"/><text x="47.4610%" y="319.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="47.2110%" y="501" width="0.1617%" height="15" fill="rgb(220,39,11)" fg:x="584" fg:w="2"/><text x="47.4610%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.2918%" y="485" width="0.0808%" height="15" fill="rgb(235,185,0)" fg:x="585" fg:w="1"/><text x="47.5418%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="47.3727%" y="389" width="0.0808%" height="15" fill="rgb(249,39,18)" fg:x="586" fg:w="1"/><text x="47.6227%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.3727%" y="373" width="0.0808%" height="15" fill="rgb(240,110,33)" fg:x="586" fg:w="1"/><text x="47.6227%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.3727%" y="357" width="0.0808%" height="15" fill="rgb(210,92,42)" fg:x="586" fg:w="1"/><text x="47.6227%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.3727%" y="341" width="0.0808%" height="15" fill="rgb(218,215,28)" fg:x="586" fg:w="1"/><text x="47.6227%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.3727%" y="325" width="0.0808%" height="15" fill="rgb(238,215,36)" fg:x="586" fg:w="1"/><text x="47.6227%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="47.3727%" y="309" width="0.0808%" height="15" fill="rgb(220,31,10)" fg:x="586" fg:w="1"/><text x="47.6227%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="47.3727%" y="293" width="0.0808%" height="15" fill="rgb(212,93,14)" fg:x="586" fg:w="1"/><text x="47.6227%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="47.3727%" y="277" width="0.0808%" height="15" fill="rgb(254,207,2)" fg:x="586" fg:w="1"/><text x="47.6227%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="47.3727%" y="261" width="0.0808%" height="15" fill="rgb(205,57,44)" fg:x="586" fg:w="1"/><text x="47.6227%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="47.3727%" y="245" width="0.0808%" height="15" fill="rgb(226,151,19)" fg:x="586" fg:w="1"/><text x="47.6227%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="47.3727%" y="229" width="0.0808%" height="15" fill="rgb(230,72,30)" fg:x="586" fg:w="1"/><text x="47.6227%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.3727%" y="213" width="0.0808%" height="15" fill="rgb(244,0,8)" fg:x="586" fg:w="1"/><text x="47.6227%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="47.3727%" y="197" width="0.0808%" height="15" fill="rgb(230,192,6)" fg:x="586" fg:w="1"/><text x="47.6227%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.3727%" y="181" width="0.0808%" height="15" fill="rgb(233,207,13)" fg:x="586" fg:w="1"/><text x="47.6227%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="47.3727%" y="501" width="0.1617%" height="15" fill="rgb(206,227,7)" fg:x="586" fg:w="2"/><text x="47.6227%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="47.3727%" y="485" width="0.1617%" height="15" fill="rgb(213,217,25)" fg:x="586" fg:w="2"/><text x="47.6227%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="47.3727%" y="469" width="0.1617%" height="15" fill="rgb(249,75,4)" fg:x="586" fg:w="2"/><text x="47.6227%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="47.3727%" y="453" width="0.1617%" height="15" fill="rgb(225,114,18)" fg:x="586" fg:w="2"/><text x="47.6227%" y="463.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="47.3727%" y="437" width="0.1617%" height="15" fill="rgb(211,162,40)" fg:x="586" fg:w="2"/><text x="47.6227%" y="447.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="47.3727%" y="421" width="0.1617%" height="15" fill="rgb(206,49,29)" fg:x="586" fg:w="2"/><text x="47.6227%" y="431.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="47.3727%" y="405" width="0.1617%" height="15" fill="rgb(244,8,6)" fg:x="586" fg:w="2"/><text x="47.6227%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.4535%" y="389" width="0.0808%" height="15" fill="rgb(231,194,28)" fg:x="587" fg:w="1"/><text x="47.7035%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.4535%" y="373" width="0.0808%" height="15" fill="rgb(210,69,5)" fg:x="587" fg:w="1"/><text x="47.7035%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="47.4535%" y="357" width="0.0808%" height="15" fill="rgb(216,186,12)" fg:x="587" fg:w="1"/><text x="47.7035%" y="367.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="47.4535%" y="341" width="0.0808%" height="15" fill="rgb(238,61,15)" fg:x="587" fg:w="1"/><text x="47.7035%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.4535%" y="325" width="0.0808%" height="15" fill="rgb(226,104,1)" fg:x="587" fg:w="1"/><text x="47.7035%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.4535%" y="309" width="0.0808%" height="15" fill="rgb(229,128,15)" fg:x="587" fg:w="1"/><text x="47.7035%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="47.4535%" y="293" width="0.0808%" height="15" fill="rgb(247,110,15)" fg:x="587" fg:w="1"/><text x="47.7035%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="47.4535%" y="277" width="0.0808%" height="15" fill="rgb(210,74,48)" fg:x="587" fg:w="1"/><text x="47.7035%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="47.4535%" y="261" width="0.0808%" height="15" fill="rgb(246,121,10)" fg:x="587" fg:w="1"/><text x="47.7035%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="47.4535%" y="245" width="0.0808%" height="15" fill="rgb(214,156,37)" fg:x="587" fg:w="1"/><text x="47.7035%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="47.4535%" y="229" width="0.0808%" height="15" fill="rgb(214,210,34)" fg:x="587" fg:w="1"/><text x="47.7035%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="47.4535%" y="213" width="0.0808%" height="15" fill="rgb(237,93,35)" fg:x="587" fg:w="1"/><text x="47.7035%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.4535%" y="197" width="0.0808%" height="15" fill="rgb(206,36,8)" fg:x="587" fg:w="1"/><text x="47.7035%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="47.4535%" y="181" width="0.0808%" height="15" fill="rgb(208,151,12)" fg:x="587" fg:w="1"/><text x="47.7035%" y="191.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="47.4535%" y="165" width="0.0808%" height="15" fill="rgb(225,133,52)" fg:x="587" fg:w="1"/><text x="47.7035%" y="175.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="47.4535%" y="149" width="0.0808%" height="15" fill="rgb(231,71,53)" fg:x="587" fg:w="1"/><text x="47.7035%" y="159.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="47.4535%" y="133" width="0.0808%" height="15" fill="rgb(243,76,21)" fg:x="587" fg:w="1"/><text x="47.7035%" y="143.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="47.5344%" y="405" width="0.0808%" height="15" fill="rgb(252,144,3)" fg:x="588" fg:w="1"/><text x="47.7844%" y="415.50"></text></g><g><title>engine::session::should_force_rollback (3 samples, 0.24%)</title><rect x="47.5344%" y="501" width="0.2425%" height="15" fill="rgb(231,199,10)" fg:x="588" fg:w="3"/><text x="47.7844%" y="511.50"></text></g><g><title>std::env::_var (3 samples, 0.24%)</title><rect x="47.5344%" y="485" width="0.2425%" height="15" fill="rgb(215,18,11)" fg:x="588" fg:w="3"/><text x="47.7844%" y="495.50"></text></g><g><title>std::env::var_os (3 samples, 0.24%)</title><rect x="47.5344%" y="469" width="0.2425%" height="15" fill="rgb(241,65,24)" fg:x="588" fg:w="3"/><text x="47.7844%" y="479.50"></text></g><g><title>std::env::_var_os (3 samples, 0.24%)</title><rect x="47.5344%" y="453" width="0.2425%" height="15" fill="rgb(251,192,38)" fg:x="588" fg:w="3"/><text x="47.7844%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv (3 samples, 0.24%)</title><rect x="47.5344%" y="437" width="0.2425%" height="15" fill="rgb(205,9,35)" fg:x="588" fg:w="3"/><text x="47.7844%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="47.5344%" y="421" width="0.2425%" height="15" fill="rgb(229,225,49)" fg:x="588" fg:w="3"/><text x="47.7844%" y="431.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="47.6152%" y="405" width="0.1617%" height="15" fill="rgb(207,125,39)" fg:x="589" fg:w="2"/><text x="47.8652%" y="415.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="47.6152%" y="389" width="0.1617%" height="15" fill="rgb(222,78,19)" fg:x="589" fg:w="2"/><text x="47.8652%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="47.8577%" y="469" width="0.1617%" height="15" fill="rgb(248,207,20)" fg:x="592" fg:w="2"/><text x="48.1077%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.9386%" y="453" width="0.0808%" height="15" fill="rgb(205,103,49)" fg:x="593" fg:w="1"/><text x="48.1886%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.9386%" y="437" width="0.0808%" height="15" fill="rgb(216,42,28)" fg:x="593" fg:w="1"/><text x="48.1886%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="47.9386%" y="421" width="0.0808%" height="15" fill="rgb(213,205,53)" fg:x="593" fg:w="1"/><text x="48.1886%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="48.0194%" y="469" width="0.1617%" height="15" fill="rgb(239,140,53)" fg:x="594" fg:w="2"/><text x="48.2694%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="48.0194%" y="453" width="0.1617%" height="15" fill="rgb(248,95,9)" fg:x="594" fg:w="2"/><text x="48.2694%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="48.0194%" y="437" width="0.1617%" height="15" fill="rgb(254,58,47)" fg:x="594" fg:w="2"/><text x="48.2694%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="48.1811%" y="421" width="0.0808%" height="15" fill="rgb(234,227,14)" fg:x="596" fg:w="1"/><text x="48.4311%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="48.1811%" y="405" width="0.0808%" height="15" fill="rgb(205,192,45)" fg:x="596" fg:w="1"/><text x="48.4311%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.1811%" y="389" width="0.0808%" height="15" fill="rgb(253,187,31)" fg:x="596" fg:w="1"/><text x="48.4311%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.1811%" y="373" width="0.0808%" height="15" fill="rgb(222,6,32)" fg:x="596" fg:w="1"/><text x="48.4311%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.1811%" y="357" width="0.0808%" height="15" fill="rgb(249,190,19)" fg:x="596" fg:w="1"/><text x="48.4311%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.1811%" y="341" width="0.0808%" height="15" fill="rgb(251,28,20)" fg:x="596" fg:w="1"/><text x="48.4311%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (15 samples, 1.21%)</title><rect x="48.3428%" y="389" width="1.2126%" height="15" fill="rgb(210,223,40)" fg:x="598" fg:w="15"/><text x="48.5928%" y="399.50"></text></g><g><title>std::io::Write::write_all (14 samples, 1.13%)</title><rect x="48.4236%" y="373" width="1.1318%" height="15" fill="rgb(216,137,22)" fg:x="599" fg:w="14"/><text x="48.6736%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (11 samples, 0.89%)</title><rect x="48.6661%" y="357" width="0.8892%" height="15" fill="rgb(247,39,34)" fg:x="602" fg:w="11"/><text x="48.9161%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.73%)</title><rect x="48.8278%" y="341" width="0.7276%" height="15" fill="rgb(239,43,50)" fg:x="604" fg:w="9"/><text x="49.0778%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="49.3937%" y="325" width="0.1617%" height="15" fill="rgb(241,212,9)" fg:x="611" fg:w="2"/><text x="49.6437%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="49.3937%" y="309" width="0.1617%" height="15" fill="rgb(205,8,2)" fg:x="611" fg:w="2"/><text x="49.6437%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="49.3937%" y="293" width="0.1617%" height="15" fill="rgb(217,173,54)" fg:x="611" fg:w="2"/><text x="49.6437%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (18 samples, 1.46%)</title><rect x="48.3428%" y="405" width="1.4551%" height="15" fill="rgb(208,149,52)" fg:x="598" fg:w="18"/><text x="48.5928%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="49.5554%" y="389" width="0.2425%" height="15" fill="rgb(239,99,40)" fg:x="613" fg:w="3"/><text x="49.8054%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.7171%" y="373" width="0.0808%" height="15" fill="rgb(233,214,26)" fg:x="615" fg:w="1"/><text x="49.9671%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.7171%" y="357" width="0.0808%" height="15" fill="rgb(231,225,37)" fg:x="615" fg:w="1"/><text x="49.9671%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.65%)</title><rect x="49.7979%" y="389" width="0.6467%" height="15" fill="rgb(252,55,35)" fg:x="616" fg:w="8"/><text x="50.0479%" y="399.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.65%)</title><rect x="49.7979%" y="373" width="0.6467%" height="15" fill="rgb(239,43,18)" fg:x="616" fg:w="8"/><text x="50.0479%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.49%)</title><rect x="49.9596%" y="357" width="0.4850%" height="15" fill="rgb(251,125,49)" fg:x="618" fg:w="6"/><text x="50.2096%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="50.0404%" y="341" width="0.4042%" height="15" fill="rgb(212,83,54)" fg:x="619" fg:w="5"/><text x="50.2904%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="50.2829%" y="325" width="0.1617%" height="15" fill="rgb(250,75,6)" fg:x="622" fg:w="2"/><text x="50.5329%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="50.2829%" y="309" width="0.1617%" height="15" fill="rgb(252,36,40)" fg:x="622" fg:w="2"/><text x="50.5329%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="50.2829%" y="293" width="0.1617%" height="15" fill="rgb(230,91,51)" fg:x="622" fg:w="2"/><text x="50.5329%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="50.4446%" y="373" width="0.0808%" height="15" fill="rgb(212,92,28)" fg:x="624" fg:w="1"/><text x="50.6946%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="50.5255%" y="325" width="0.0808%" height="15" fill="rgb(227,13,22)" fg:x="625" fg:w="1"/><text x="50.7755%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="50.6063%" y="309" width="0.0808%" height="15" fill="rgb(239,204,32)" fg:x="626" fg:w="1"/><text x="50.8563%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="50.6063%" y="325" width="0.1617%" height="15" fill="rgb(228,49,41)" fg:x="626" fg:w="2"/><text x="50.8563%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="50.6871%" y="309" width="0.0808%" height="15" fill="rgb(206,95,6)" fg:x="627" fg:w="1"/><text x="50.9371%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="50.6871%" y="293" width="0.0808%" height="15" fill="rgb(251,20,14)" fg:x="627" fg:w="1"/><text x="50.9371%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.6871%" y="277" width="0.0808%" height="15" fill="rgb(214,99,28)" fg:x="627" fg:w="1"/><text x="50.9371%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="50.5255%" y="373" width="0.3234%" height="15" fill="rgb(239,122,54)" fg:x="625" fg:w="4"/><text x="50.7755%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="50.5255%" y="357" width="0.3234%" height="15" fill="rgb(218,217,46)" fg:x="625" fg:w="4"/><text x="50.7755%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="50.5255%" y="341" width="0.3234%" height="15" fill="rgb(249,106,28)" fg:x="625" fg:w="4"/><text x="50.7755%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.7680%" y="325" width="0.0808%" height="15" fill="rgb(250,158,18)" fg:x="628" fg:w="1"/><text x="51.0180%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.7680%" y="309" width="0.0808%" height="15" fill="rgb(226,137,29)" fg:x="628" fg:w="1"/><text x="51.0180%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.7680%" y="293" width="0.0808%" height="15" fill="rgb(210,188,1)" fg:x="628" fg:w="1"/><text x="51.0180%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="50.8488%" y="373" width="0.2425%" height="15" fill="rgb(227,84,42)" fg:x="629" fg:w="3"/><text x="51.0988%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="50.9297%" y="357" width="0.1617%" height="15" fill="rgb(222,147,48)" fg:x="630" fg:w="2"/><text x="51.1797%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="51.0105%" y="341" width="0.0808%" height="15" fill="rgb(241,150,43)" fg:x="631" fg:w="1"/><text x="51.2605%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.0105%" y="325" width="0.0808%" height="15" fill="rgb(206,139,52)" fg:x="631" fg:w="1"/><text x="51.2605%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="51.2530%" y="357" width="0.0808%" height="15" fill="rgb(230,63,14)" fg:x="634" fg:w="1"/><text x="51.5030%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (10 samples, 0.81%)</title><rect x="51.3339%" y="357" width="0.8084%" height="15" fill="rgb(247,8,20)" fg:x="635" fg:w="10"/><text x="51.5839%" y="367.50"></text></g><g><title>std::io::Write::write_all (10 samples, 0.81%)</title><rect x="51.3339%" y="341" width="0.8084%" height="15" fill="rgb(213,115,4)" fg:x="635" fg:w="10"/><text x="51.5839%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (10 samples, 0.81%)</title><rect x="51.3339%" y="325" width="0.8084%" height="15" fill="rgb(241,79,49)" fg:x="635" fg:w="10"/><text x="51.5839%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.65%)</title><rect x="51.4956%" y="309" width="0.6467%" height="15" fill="rgb(222,42,35)" fg:x="637" fg:w="8"/><text x="51.7456%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.65%)</title><rect x="51.4956%" y="293" width="0.6467%" height="15" fill="rgb(247,59,23)" fg:x="637" fg:w="8"/><text x="51.7456%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.65%)</title><rect x="51.4956%" y="277" width="0.6467%" height="15" fill="rgb(247,93,18)" fg:x="637" fg:w="8"/><text x="51.7456%" y="287.50"></text></g><g><title>realloc (8 samples, 0.65%)</title><rect x="51.4956%" y="261" width="0.6467%" height="15" fill="rgb(249,107,47)" fg:x="637" fg:w="8"/><text x="51.7456%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="52.1423%" y="341" width="0.1617%" height="15" fill="rgb(219,27,1)" fg:x="645" fg:w="2"/><text x="52.3923%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="52.3040%" y="341" width="0.2425%" height="15" fill="rgb(217,82,32)" fg:x="647" fg:w="3"/><text x="52.5540%" y="351.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="52.3040%" y="325" width="0.2425%" height="15" fill="rgb(250,129,47)" fg:x="647" fg:w="3"/><text x="52.5540%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="52.3040%" y="309" width="0.2425%" height="15" fill="rgb(253,88,35)" fg:x="647" fg:w="3"/><text x="52.5540%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.3848%" y="293" width="0.1617%" height="15" fill="rgb(245,221,14)" fg:x="648" fg:w="2"/><text x="52.6348%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="52.5465%" y="341" width="0.1617%" height="15" fill="rgb(217,119,54)" fg:x="650" fg:w="2"/><text x="52.7965%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.6273%" y="325" width="0.0808%" height="15" fill="rgb(247,128,31)" fg:x="651" fg:w="1"/><text x="52.8773%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="52.6273%" y="309" width="0.0808%" height="15" fill="rgb(211,99,22)" fg:x="651" fg:w="1"/><text x="52.8773%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="52.1423%" y="357" width="0.6467%" height="15" fill="rgb(212,20,17)" fg:x="645" fg:w="8"/><text x="52.3923%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.7082%" y="341" width="0.0808%" height="15" fill="rgb(209,159,29)" fg:x="652" fg:w="1"/><text x="52.9582%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.10%)</title><rect x="51.0914%" y="373" width="2.1019%" height="15" fill="rgb(222,177,53)" fg:x="632" fg:w="26"/><text x="51.3414%" y="383.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="52.7890%" y="357" width="0.4042%" height="15" fill="rgb(234,46,43)" fg:x="653" fg:w="5"/><text x="53.0390%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="52.9507%" y="341" width="0.2425%" height="15" fill="rgb(208,108,14)" fg:x="655" fg:w="3"/><text x="53.2007%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="53.0315%" y="325" width="0.1617%" height="15" fill="rgb(226,78,53)" fg:x="656" fg:w="2"/><text x="53.2815%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.07%)</title><rect x="50.4446%" y="389" width="3.0719%" height="15" fill="rgb(230,20,41)" fg:x="624" fg:w="38"/><text x="50.6946%" y="399.50">ser..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="53.1932%" y="373" width="0.3234%" height="15" fill="rgb(213,195,35)" fg:x="658" fg:w="4"/><text x="53.4432%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (53 samples, 4.28%)</title><rect x="49.7979%" y="405" width="4.2846%" height="15" fill="rgb(242,62,36)" fg:x="616" fg:w="53"/><text x="50.0479%" y="415.50">serde..</text></g><g><title>std::io::Write::write_all (7 samples, 0.57%)</title><rect x="53.5166%" y="389" width="0.5659%" height="15" fill="rgb(222,210,37)" fg:x="662" fg:w="7"/><text x="53.7666%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="53.7591%" y="373" width="0.3234%" height="15" fill="rgb(232,107,19)" fg:x="665" fg:w="4"/><text x="54.0091%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="53.7591%" y="357" width="0.3234%" height="15" fill="rgb(235,85,17)" fg:x="665" fg:w="4"/><text x="54.0091%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="54.0016%" y="341" width="0.0808%" height="15" fill="rgb(219,195,31)" fg:x="668" fg:w="1"/><text x="54.2516%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="54.0016%" y="325" width="0.0808%" height="15" fill="rgb(231,183,30)" fg:x="668" fg:w="1"/><text x="54.2516%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="54.0016%" y="309" width="0.0808%" height="15" fill="rgb(212,0,11)" fg:x="668" fg:w="1"/><text x="54.2516%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (74 samples, 5.98%)</title><rect x="48.2619%" y="421" width="5.9822%" height="15" fill="rgb(249,53,54)" fg:x="597" fg:w="74"/><text x="48.5119%" y="431.50">&lt;serde_j..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="54.0825%" y="405" width="0.1617%" height="15" fill="rgb(211,118,13)" fg:x="669" fg:w="2"/><text x="54.3325%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="54.1633%" y="389" width="0.0808%" height="15" fill="rgb(237,42,9)" fg:x="670" fg:w="1"/><text x="54.4133%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.1633%" y="373" width="0.0808%" height="15" fill="rgb(227,68,32)" fg:x="670" fg:w="1"/><text x="54.4133%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="54.2441%" y="405" width="0.0808%" height="15" fill="rgb(238,10,7)" fg:x="671" fg:w="1"/><text x="54.4941%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.3250%" y="389" width="0.0808%" height="15" fill="rgb(224,42,12)" fg:x="672" fg:w="1"/><text x="54.5750%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.4058%" y="389" width="0.0808%" height="15" fill="rgb(252,190,5)" fg:x="673" fg:w="1"/><text x="54.6558%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4867%" y="373" width="0.0808%" height="15" fill="rgb(220,214,39)" fg:x="674" fg:w="1"/><text x="54.7367%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.5675%" y="373" width="0.0808%" height="15" fill="rgb(247,98,4)" fg:x="675" fg:w="1"/><text x="54.8175%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.7292%" y="357" width="0.0808%" height="15" fill="rgb(211,60,12)" fg:x="677" fg:w="1"/><text x="54.9792%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.8909%" y="341" width="0.0808%" height="15" fill="rgb(224,42,10)" fg:x="679" fg:w="1"/><text x="55.1409%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="54.2441%" y="421" width="0.8084%" height="15" fill="rgb(217,167,4)" fg:x="671" fg:w="10"/><text x="54.4941%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="54.3250%" y="405" width="0.7276%" height="15" fill="rgb(253,18,17)" fg:x="672" fg:w="9"/><text x="54.5750%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="54.4867%" y="389" width="0.5659%" height="15" fill="rgb(249,186,44)" fg:x="674" fg:w="7"/><text x="54.7367%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="54.6483%" y="373" width="0.4042%" height="15" fill="rgb(254,124,54)" fg:x="676" fg:w="5"/><text x="54.8983%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="54.8100%" y="357" width="0.2425%" height="15" fill="rgb(220,124,39)" fg:x="678" fg:w="3"/><text x="55.0600%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="54.9717%" y="341" width="0.0808%" height="15" fill="rgb(225,96,46)" fg:x="680" fg:w="1"/><text x="55.2217%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="54.9717%" y="325" width="0.0808%" height="15" fill="rgb(221,106,12)" fg:x="680" fg:w="1"/><text x="55.2217%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.9717%" y="309" width="0.0808%" height="15" fill="rgb(227,133,23)" fg:x="680" fg:w="1"/><text x="55.2217%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="55.1334%" y="389" width="0.0808%" height="15" fill="rgb(216,44,52)" fg:x="682" fg:w="1"/><text x="55.3834%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="55.2142%" y="357" width="0.1617%" height="15" fill="rgb(239,149,7)" fg:x="683" fg:w="2"/><text x="55.4642%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.2951%" y="341" width="0.0808%" height="15" fill="rgb(211,157,31)" fg:x="684" fg:w="1"/><text x="55.5451%" y="351.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="55.3759%" y="341" width="0.3234%" height="15" fill="rgb(206,215,22)" fg:x="685" fg:w="4"/><text x="55.6259%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="55.6993%" y="341" width="0.2425%" height="15" fill="rgb(208,113,15)" fg:x="689" fg:w="3"/><text x="55.9493%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="55.7801%" y="325" width="0.1617%" height="15" fill="rgb(207,189,15)" fg:x="690" fg:w="2"/><text x="56.0301%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.1035%" y="309" width="0.0808%" height="15" fill="rgb(231,115,4)" fg:x="694" fg:w="1"/><text x="56.3535%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.1843%" y="277" width="0.0808%" height="15" fill="rgb(253,117,2)" fg:x="695" fg:w="1"/><text x="56.4343%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.1843%" y="261" width="0.0808%" height="15" fill="rgb(248,48,24)" fg:x="695" fg:w="1"/><text x="56.4343%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="55.2142%" y="389" width="1.1318%" height="15" fill="rgb(241,28,46)" fg:x="683" fg:w="14"/><text x="55.4642%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.13%)</title><rect x="55.2142%" y="373" width="1.1318%" height="15" fill="rgb(216,165,52)" fg:x="683" fg:w="14"/><text x="55.4642%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="55.3759%" y="357" width="0.9701%" height="15" fill="rgb(220,222,34)" fg:x="685" fg:w="12"/><text x="55.6259%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="55.9418%" y="341" width="0.4042%" height="15" fill="rgb(247,222,49)" fg:x="692" fg:w="5"/><text x="56.1918%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="56.0226%" y="325" width="0.3234%" height="15" fill="rgb(240,10,31)" fg:x="693" fg:w="4"/><text x="56.2726%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="56.1843%" y="309" width="0.1617%" height="15" fill="rgb(221,199,35)" fg:x="695" fg:w="2"/><text x="56.4343%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="56.1843%" y="293" width="0.1617%" height="15" fill="rgb(230,223,11)" fg:x="695" fg:w="2"/><text x="56.4343%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.2652%" y="277" width="0.0808%" height="15" fill="rgb(218,82,45)" fg:x="696" fg:w="1"/><text x="56.5152%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="56.4268%" y="341" width="0.1617%" height="15" fill="rgb(233,213,33)" fg:x="698" fg:w="2"/><text x="56.6768%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="56.5077%" y="325" width="0.0808%" height="15" fill="rgb(210,143,52)" fg:x="699" fg:w="1"/><text x="56.7577%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="56.3460%" y="373" width="0.3234%" height="15" fill="rgb(206,95,4)" fg:x="697" fg:w="4"/><text x="56.5960%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="56.3460%" y="357" width="0.3234%" height="15" fill="rgb(246,164,46)" fg:x="697" fg:w="4"/><text x="56.5960%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="56.5885%" y="341" width="0.0808%" height="15" fill="rgb(213,210,47)" fg:x="700" fg:w="1"/><text x="56.8385%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="56.6694%" y="373" width="0.2425%" height="15" fill="rgb(210,12,38)" fg:x="701" fg:w="3"/><text x="56.9194%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="56.7502%" y="357" width="0.1617%" height="15" fill="rgb(252,192,54)" fg:x="702" fg:w="2"/><text x="57.0002%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8310%" y="341" width="0.0808%" height="15" fill="rgb(242,92,6)" fg:x="703" fg:w="1"/><text x="57.0810%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (23 samples, 1.86%)</title><rect x="55.1334%" y="405" width="1.8593%" height="15" fill="rgb(253,154,15)" fg:x="682" fg:w="23"/><text x="55.3834%" y="415.50">&lt;..</text></g><g><title>treediff::diff::diff (8 samples, 0.65%)</title><rect x="56.3460%" y="389" width="0.6467%" height="15" fill="rgb(209,20,43)" fg:x="697" fg:w="8"/><text x="56.5960%" y="399.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="56.9119%" y="373" width="0.0808%" height="15" fill="rgb(232,28,49)" fg:x="704" fg:w="1"/><text x="57.1619%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="56.9927%" y="389" width="0.0808%" height="15" fill="rgb(248,131,53)" fg:x="705" fg:w="1"/><text x="57.2427%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.3161%" y="373" width="0.1617%" height="15" fill="rgb(214,16,30)" fg:x="709" fg:w="2"/><text x="57.5661%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.49%)</title><rect x="57.4778%" y="373" width="0.4850%" height="15" fill="rgb(245,16,0)" fg:x="711" fg:w="6"/><text x="57.7278%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.8011%" y="357" width="0.1617%" height="15" fill="rgb(245,17,35)" fg:x="715" fg:w="2"/><text x="58.0511%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="57.9628%" y="373" width="0.0808%" height="15" fill="rgb(249,27,53)" fg:x="717" fg:w="1"/><text x="58.2128%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="57.9628%" y="357" width="0.0808%" height="15" fill="rgb(214,73,24)" fg:x="717" fg:w="1"/><text x="58.2128%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="58.0437%" y="373" width="0.0808%" height="15" fill="rgb(223,84,37)" fg:x="718" fg:w="1"/><text x="58.2937%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="58.0437%" y="357" width="0.0808%" height="15" fill="rgb(210,109,28)" fg:x="718" fg:w="1"/><text x="58.2937%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="58.1245%" y="373" width="0.0808%" height="15" fill="rgb(208,186,6)" fg:x="719" fg:w="1"/><text x="58.3745%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="58.1245%" y="357" width="0.0808%" height="15" fill="rgb(235,201,30)" fg:x="719" fg:w="1"/><text x="58.3745%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.1245%" y="341" width="0.0808%" height="15" fill="rgb(216,198,48)" fg:x="719" fg:w="1"/><text x="58.3745%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.1245%" y="325" width="0.0808%" height="15" fill="rgb(254,186,25)" fg:x="719" fg:w="1"/><text x="58.3745%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="58.1245%" y="309" width="0.0808%" height="15" fill="rgb(227,87,5)" fg:x="719" fg:w="1"/><text x="58.3745%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="58.2862%" y="341" width="0.1617%" height="15" fill="rgb(236,205,25)" fg:x="721" fg:w="2"/><text x="58.5362%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="58.6095%" y="325" width="0.4042%" height="15" fill="rgb(229,99,32)" fg:x="725" fg:w="5"/><text x="58.8595%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="58.6904%" y="309" width="0.3234%" height="15" fill="rgb(231,177,31)" fg:x="726" fg:w="4"/><text x="58.9404%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="58.7712%" y="293" width="0.2425%" height="15" fill="rgb(246,15,2)" fg:x="727" fg:w="3"/><text x="59.0212%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0137%" y="277" width="0.0808%" height="15" fill="rgb(207,39,15)" fg:x="730" fg:w="1"/><text x="59.2637%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="59.1754%" y="261" width="0.0808%" height="15" fill="rgb(207,44,9)" fg:x="732" fg:w="1"/><text x="59.4254%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="59.1754%" y="245" width="0.0808%" height="15" fill="rgb(225,224,33)" fg:x="732" fg:w="1"/><text x="59.4254%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="59.1754%" y="229" width="0.0808%" height="15" fill="rgb(252,151,3)" fg:x="732" fg:w="1"/><text x="59.4254%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.1754%" y="213" width="0.0808%" height="15" fill="rgb(211,140,13)" fg:x="732" fg:w="1"/><text x="59.4254%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.49%)</title><rect x="59.0137%" y="325" width="0.4850%" height="15" fill="rgb(239,225,17)" fg:x="730" fg:w="6"/><text x="59.2637%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="59.0137%" y="309" width="0.4850%" height="15" fill="rgb(223,170,52)" fg:x="730" fg:w="6"/><text x="59.2637%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="59.0137%" y="293" width="0.4850%" height="15" fill="rgb(212,64,21)" fg:x="730" fg:w="6"/><text x="59.2637%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="59.0946%" y="277" width="0.4042%" height="15" fill="rgb(236,126,48)" fg:x="731" fg:w="5"/><text x="59.3446%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="59.2563%" y="261" width="0.2425%" height="15" fill="rgb(209,135,11)" fg:x="733" fg:w="3"/><text x="59.5063%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="59.6605%" y="293" width="0.0808%" height="15" fill="rgb(228,126,40)" fg:x="738" fg:w="1"/><text x="59.9105%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="59.6605%" y="277" width="0.0808%" height="15" fill="rgb(205,196,36)" fg:x="738" fg:w="1"/><text x="59.9105%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="59.9030%" y="277" width="0.0808%" height="15" fill="rgb(243,160,33)" fg:x="741" fg:w="1"/><text x="60.1530%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="60.1455%" y="261" width="0.2425%" height="15" fill="rgb(210,84,20)" fg:x="744" fg:w="3"/><text x="60.3955%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="60.1455%" y="245" width="0.2425%" height="15" fill="rgb(228,213,30)" fg:x="744" fg:w="3"/><text x="60.3955%" y="255.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="60.1455%" y="229" width="0.2425%" height="15" fill="rgb(252,33,45)" fg:x="744" fg:w="3"/><text x="60.3955%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.89%)</title><rect x="59.6605%" y="309" width="0.8892%" height="15" fill="rgb(254,227,20)" fg:x="738" fg:w="11"/><text x="59.9105%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="59.7413%" y="293" width="0.8084%" height="15" fill="rgb(228,192,2)" fg:x="739" fg:w="10"/><text x="59.9913%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="59.9838%" y="277" width="0.5659%" height="15" fill="rgb(233,32,8)" fg:x="742" fg:w="7"/><text x="60.2338%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="60.3880%" y="261" width="0.1617%" height="15" fill="rgb(220,146,47)" fg:x="747" fg:w="2"/><text x="60.6380%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4689%" y="245" width="0.0808%" height="15" fill="rgb(246,194,1)" fg:x="748" fg:w="1"/><text x="60.7189%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.18%)</title><rect x="58.4479%" y="341" width="2.1827%" height="15" fill="rgb(218,203,9)" fg:x="723" fg:w="27"/><text x="58.6979%" y="351.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.13%)</title><rect x="59.4988%" y="325" width="1.1318%" height="15" fill="rgb(237,97,14)" fg:x="736" fg:w="14"/><text x="59.7488%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.5497%" y="309" width="0.0808%" height="15" fill="rgb(239,76,15)" fg:x="749" fg:w="1"/><text x="60.7997%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (31 samples, 2.51%)</title><rect x="58.2862%" y="357" width="2.5061%" height="15" fill="rgb(222,53,45)" fg:x="721" fg:w="31"/><text x="58.5362%" y="367.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="60.6306%" y="341" width="0.1617%" height="15" fill="rgb(237,88,5)" fg:x="750" fg:w="2"/><text x="60.8806%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.6306%" y="325" width="0.1617%" height="15" fill="rgb(218,223,35)" fg:x="750" fg:w="2"/><text x="60.8806%" y="335.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (49 samples, 3.96%)</title><rect x="56.9927%" y="405" width="3.9612%" height="15" fill="rgb(243,229,38)" fg:x="705" fg:w="49"/><text x="57.2427%" y="415.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (48 samples, 3.88%)</title><rect x="57.0736%" y="389" width="3.8804%" height="15" fill="rgb(240,75,41)" fg:x="706" fg:w="48"/><text x="57.3236%" y="399.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (34 samples, 2.75%)</title><rect x="58.2053%" y="373" width="2.7486%" height="15" fill="rgb(209,110,37)" fg:x="720" fg:w="34"/><text x="58.4553%" y="383.50">se..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.7922%" y="357" width="0.1617%" height="15" fill="rgb(221,130,46)" fg:x="752" fg:w="2"/><text x="61.0422%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.4390%" y="213" width="0.0808%" height="15" fill="rgb(237,160,20)" fg:x="760" fg:w="1"/><text x="61.6890%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.5198%" y="197" width="0.0808%" height="15" fill="rgb(234,126,24)" fg:x="761" fg:w="1"/><text x="61.7698%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.5198%" y="181" width="0.0808%" height="15" fill="rgb(207,177,9)" fg:x="761" fg:w="1"/><text x="61.7698%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.5198%" y="165" width="0.0808%" height="15" fill="rgb(231,191,33)" fg:x="761" fg:w="1"/><text x="61.7698%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.5198%" y="149" width="0.0808%" height="15" fill="rgb(207,42,1)" fg:x="761" fg:w="1"/><text x="61.7698%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="61.4390%" y="229" width="0.2425%" height="15" fill="rgb(218,34,50)" fg:x="760" fg:w="3"/><text x="61.6890%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.5198%" y="213" width="0.1617%" height="15" fill="rgb(254,126,39)" fg:x="761" fg:w="2"/><text x="61.7698%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.6006%" y="197" width="0.0808%" height="15" fill="rgb(251,17,26)" fg:x="762" fg:w="1"/><text x="61.8506%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.6006%" y="181" width="0.0808%" height="15" fill="rgb(252,215,34)" fg:x="762" fg:w="1"/><text x="61.8506%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="61.4390%" y="261" width="0.3234%" height="15" fill="rgb(217,120,44)" fg:x="760" fg:w="4"/><text x="61.6890%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="61.4390%" y="245" width="0.3234%" height="15" fill="rgb(211,31,11)" fg:x="760" fg:w="4"/><text x="61.6890%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.6815%" y="229" width="0.0808%" height="15" fill="rgb(222,69,51)" fg:x="763" fg:w="1"/><text x="61.9315%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.8432%" y="213" width="0.0808%" height="15" fill="rgb(215,229,42)" fg:x="765" fg:w="1"/><text x="62.0932%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8432%" y="197" width="0.0808%" height="15" fill="rgb(212,102,15)" fg:x="765" fg:w="1"/><text x="62.0932%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="61.7623%" y="245" width="0.2425%" height="15" fill="rgb(205,179,41)" fg:x="764" fg:w="3"/><text x="62.0123%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.8432%" y="229" width="0.1617%" height="15" fill="rgb(219,148,46)" fg:x="765" fg:w="2"/><text x="62.0932%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9240%" y="213" width="0.0808%" height="15" fill="rgb(243,40,19)" fg:x="766" fg:w="1"/><text x="62.1740%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9240%" y="197" width="0.0808%" height="15" fill="rgb(208,206,34)" fg:x="766" fg:w="1"/><text x="62.1740%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9240%" y="181" width="0.0808%" height="15" fill="rgb(244,184,38)" fg:x="766" fg:w="1"/><text x="62.1740%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.89%)</title><rect x="61.2773%" y="277" width="0.8892%" height="15" fill="rgb(244,151,47)" fg:x="758" fg:w="11"/><text x="61.5273%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="61.7623%" y="261" width="0.4042%" height="15" fill="rgb(236,134,42)" fg:x="764" fg:w="5"/><text x="62.0123%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.0049%" y="245" width="0.1617%" height="15" fill="rgb(233,93,22)" fg:x="767" fg:w="2"/><text x="62.2549%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.0857%" y="229" width="0.0808%" height="15" fill="rgb(211,202,10)" fg:x="768" fg:w="1"/><text x="62.3357%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="62.1665%" y="277" width="0.1617%" height="15" fill="rgb(240,63,8)" fg:x="769" fg:w="2"/><text x="62.4165%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.1665%" y="261" width="0.1617%" height="15" fill="rgb(214,9,4)" fg:x="769" fg:w="2"/><text x="62.4165%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.29%)</title><rect x="61.1964%" y="309" width="1.2935%" height="15" fill="rgb(243,66,45)" fg:x="757" fg:w="16"/><text x="61.4464%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.21%)</title><rect x="61.2773%" y="293" width="1.2126%" height="15" fill="rgb(220,50,42)" fg:x="758" fg:w="15"/><text x="61.5273%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.3282%" y="277" width="0.1617%" height="15" fill="rgb(220,134,27)" fg:x="771" fg:w="2"/><text x="62.5782%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.3282%" y="261" width="0.1617%" height="15" fill="rgb(246,151,50)" fg:x="771" fg:w="2"/><text x="62.5782%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.3282%" y="245" width="0.1617%" height="15" fill="rgb(238,216,27)" fg:x="771" fg:w="2"/><text x="62.5782%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.49%)</title><rect x="62.4899%" y="309" width="0.4850%" height="15" fill="rgb(250,92,11)" fg:x="773" fg:w="6"/><text x="62.7399%" y="319.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="62.5707%" y="293" width="0.4042%" height="15" fill="rgb(248,183,6)" fg:x="774" fg:w="5"/><text x="62.8207%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24 samples, 1.94%)</title><rect x="61.1156%" y="325" width="1.9402%" height="15" fill="rgb(211,204,50)" fg:x="756" fg:w="24"/><text x="61.3656%" y="335.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.9749%" y="309" width="0.0808%" height="15" fill="rgb(252,55,47)" fg:x="779" fg:w="1"/><text x="63.2249%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.9749%" y="293" width="0.0808%" height="15" fill="rgb(240,198,32)" fg:x="779" fg:w="1"/><text x="63.2249%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.02%)</title><rect x="61.1156%" y="341" width="2.0210%" height="15" fill="rgb(224,203,19)" fg:x="756" fg:w="25"/><text x="61.3656%" y="351.50">&lt;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.0558%" y="325" width="0.0808%" height="15" fill="rgb(205,27,16)" fg:x="780" fg:w="1"/><text x="63.3058%" y="335.50"></text></g><g><title>engine::session::Session::close (199 samples, 16.09%)</title><rect x="47.2110%" y="517" width="16.0873%" height="15" fill="rgb(224,226,17)" fg:x="584" fg:w="199"/><text x="47.4610%" y="527.50">engine::session::Session:..</text></g><g><title>engine::session::state::State::close (192 samples, 15.52%)</title><rect x="47.7769%" y="501" width="15.5214%" height="15" fill="rgb(205,216,54)" fg:x="591" fg:w="192"/><text x="48.0269%" y="511.50">engine::session::state::..</text></g><g><title>engine::session::state::State::flush_entities (191 samples, 15.44%)</title><rect x="47.8577%" y="485" width="15.4406%" height="15" fill="rgb(248,168,46)" fg:x="592" fg:w="191"/><text x="48.1077%" y="495.50">engine::session::state::..</text></g><g><title>core::iter::adapters::try_process (187 samples, 15.12%)</title><rect x="48.1811%" y="469" width="15.1172%" height="15" fill="rgb(226,111,45)" fg:x="596" fg:w="187"/><text x="48.4311%" y="479.50">core::iter::adapters::t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (187 samples, 15.12%)</title><rect x="48.1811%" y="453" width="15.1172%" height="15" fill="rgb(231,15,9)" fg:x="596" fg:w="187"/><text x="48.4311%" y="463.50">&lt;alloc::vec::Vec&lt;T&gt; as ..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (187 samples, 15.12%)</title><rect x="48.1811%" y="437" width="15.1172%" height="15" fill="rgb(243,168,3)" fg:x="596" fg:w="187"/><text x="48.4311%" y="447.50">engine::session::state:..</text></g><g><title>kernel::model::any_entity_changes (102 samples, 8.25%)</title><rect x="55.0525%" y="421" width="8.2458%" height="15" fill="rgb(221,220,54)" fg:x="681" fg:w="102"/><text x="55.3025%" y="431.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (29 samples, 2.34%)</title><rect x="60.9539%" y="405" width="2.3444%" height="15" fill="rgb(232,174,38)" fg:x="754" fg:w="29"/><text x="61.2039%" y="415.50">s..</text></g><g><title>serde_json::de::from_trait (29 samples, 2.34%)</title><rect x="60.9539%" y="389" width="2.3444%" height="15" fill="rgb(205,14,38)" fg:x="754" fg:w="29"/><text x="61.2039%" y="399.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.34%)</title><rect x="60.9539%" y="373" width="2.3444%" height="15" fill="rgb(234,89,19)" fg:x="754" fg:w="29"/><text x="61.2039%" y="383.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.34%)</title><rect x="60.9539%" y="357" width="2.3444%" height="15" fill="rgb(216,68,51)" fg:x="754" fg:w="29"/><text x="61.2039%" y="367.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="63.1366%" y="341" width="0.1617%" height="15" fill="rgb(213,49,2)" fg:x="781" fg:w="2"/><text x="63.3866%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.5408%" y="341" width="0.0808%" height="15" fill="rgb(242,146,30)" fg:x="786" fg:w="1"/><text x="63.7908%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.6217%" y="341" width="0.0808%" height="15" fill="rgb(224,188,11)" fg:x="787" fg:w="1"/><text x="63.8717%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (7 samples, 0.57%)</title><rect x="63.5408%" y="389" width="0.5659%" height="15" fill="rgb(213,159,11)" fg:x="786" fg:w="7"/><text x="63.7908%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.57%)</title><rect x="63.5408%" y="373" width="0.5659%" height="15" fill="rgb(229,13,31)" fg:x="786" fg:w="7"/><text x="63.7908%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="63.5408%" y="357" width="0.5659%" height="15" fill="rgb(209,103,11)" fg:x="786" fg:w="7"/><text x="63.7908%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="63.7025%" y="341" width="0.4042%" height="15" fill="rgb(206,3,4)" fg:x="788" fg:w="5"/><text x="63.9525%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="63.7025%" y="325" width="0.4042%" height="15" fill="rgb(252,10,49)" fg:x="788" fg:w="5"/><text x="63.9525%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="64.0259%" y="309" width="0.0808%" height="15" fill="rgb(217,160,32)" fg:x="792" fg:w="1"/><text x="64.2759%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.5918%" y="277" width="0.1617%" height="15" fill="rgb(249,196,0)" fg:x="799" fg:w="2"/><text x="64.8418%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.6726%" y="261" width="0.0808%" height="15" fill="rgb(213,17,48)" fg:x="800" fg:w="1"/><text x="64.9226%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.6726%" y="245" width="0.0808%" height="15" fill="rgb(206,42,46)" fg:x="800" fg:w="1"/><text x="64.9226%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7534%" y="101" width="0.0808%" height="15" fill="rgb(212,105,24)" fg:x="801" fg:w="1"/><text x="65.0034%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.7534%" y="277" width="0.1617%" height="15" fill="rgb(243,216,30)" fg:x="801" fg:w="2"/><text x="65.0034%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.7534%" y="261" width="0.1617%" height="15" fill="rgb(207,121,3)" fg:x="801" fg:w="2"/><text x="65.0034%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.7534%" y="245" width="0.1617%" height="15" fill="rgb(249,78,0)" fg:x="801" fg:w="2"/><text x="65.0034%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.7534%" y="229" width="0.1617%" height="15" fill="rgb(244,151,32)" fg:x="801" fg:w="2"/><text x="65.0034%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.7534%" y="213" width="0.1617%" height="15" fill="rgb(228,63,25)" fg:x="801" fg:w="2"/><text x="65.0034%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.7534%" y="197" width="0.1617%" height="15" fill="rgb(231,158,23)" fg:x="801" fg:w="2"/><text x="65.0034%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.7534%" y="181" width="0.1617%" height="15" fill="rgb(248,107,23)" fg:x="801" fg:w="2"/><text x="65.0034%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.7534%" y="165" width="0.1617%" height="15" fill="rgb(215,168,21)" fg:x="801" fg:w="2"/><text x="65.0034%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.7534%" y="149" width="0.1617%" height="15" fill="rgb(227,83,22)" fg:x="801" fg:w="2"/><text x="65.0034%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.7534%" y="133" width="0.1617%" height="15" fill="rgb(217,118,43)" fg:x="801" fg:w="2"/><text x="65.0034%" y="143.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.7534%" y="117" width="0.1617%" height="15" fill="rgb(229,220,41)" fg:x="801" fg:w="2"/><text x="65.0034%" y="127.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="64.8343%" y="101" width="0.0808%" height="15" fill="rgb(254,146,46)" fg:x="802" fg:w="1"/><text x="65.0843%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.65%)</title><rect x="64.3492%" y="309" width="0.6467%" height="15" fill="rgb(233,208,31)" fg:x="796" fg:w="8"/><text x="64.5992%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="64.5109%" y="293" width="0.4850%" height="15" fill="rgb(222,162,7)" fg:x="798" fg:w="6"/><text x="64.7609%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9151%" y="277" width="0.0808%" height="15" fill="rgb(230,117,45)" fg:x="803" fg:w="1"/><text x="65.1651%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.9151%" y="261" width="0.0808%" height="15" fill="rgb(239,163,6)" fg:x="803" fg:w="1"/><text x="65.1651%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9151%" y="245" width="0.0808%" height="15" fill="rgb(246,130,17)" fg:x="803" fg:w="1"/><text x="65.1651%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9151%" y="229" width="0.0808%" height="15" fill="rgb(216,84,5)" fg:x="803" fg:w="1"/><text x="65.1651%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.9151%" y="213" width="0.0808%" height="15" fill="rgb(230,200,21)" fg:x="803" fg:w="1"/><text x="65.1651%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.9151%" y="197" width="0.0808%" height="15" fill="rgb(224,2,8)" fg:x="803" fg:w="1"/><text x="65.1651%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.9151%" y="181" width="0.0808%" height="15" fill="rgb(238,178,10)" fg:x="803" fg:w="1"/><text x="65.1651%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.9151%" y="165" width="0.0808%" height="15" fill="rgb(242,153,24)" fg:x="803" fg:w="1"/><text x="65.1651%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.9151%" y="149" width="0.0808%" height="15" fill="rgb(242,32,48)" fg:x="803" fg:w="1"/><text x="65.1651%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.9151%" y="133" width="0.0808%" height="15" fill="rgb(227,36,0)" fg:x="803" fg:w="1"/><text x="65.1651%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.9151%" y="117" width="0.0808%" height="15" fill="rgb(251,33,35)" fg:x="803" fg:w="1"/><text x="65.1651%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.9151%" y="101" width="0.0808%" height="15" fill="rgb(232,168,51)" fg:x="803" fg:w="1"/><text x="65.1651%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.9151%" y="85" width="0.0808%" height="15" fill="rgb(228,56,10)" fg:x="803" fg:w="1"/><text x="65.1651%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9151%" y="69" width="0.0808%" height="15" fill="rgb(231,10,26)" fg:x="803" fg:w="1"/><text x="65.1651%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12 samples, 0.97%)</title><rect x="64.1876%" y="325" width="0.9701%" height="15" fill="rgb(226,202,12)" fg:x="794" fg:w="12"/><text x="64.4376%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.9960%" y="309" width="0.1617%" height="15" fill="rgb(251,49,21)" fg:x="804" fg:w="2"/><text x="65.2460%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.9960%" y="293" width="0.1617%" height="15" fill="rgb(206,228,28)" fg:x="804" fg:w="2"/><text x="65.2460%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.9960%" y="277" width="0.1617%" height="15" fill="rgb(205,198,31)" fg:x="804" fg:w="2"/><text x="65.2460%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.9960%" y="261" width="0.1617%" height="15" fill="rgb(213,69,1)" fg:x="804" fg:w="2"/><text x="65.2460%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.9960%" y="245" width="0.1617%" height="15" fill="rgb(209,177,9)" fg:x="804" fg:w="2"/><text x="65.2460%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.9960%" y="229" width="0.1617%" height="15" fill="rgb(227,119,30)" fg:x="804" fg:w="2"/><text x="65.2460%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.9960%" y="213" width="0.1617%" height="15" fill="rgb(234,106,41)" fg:x="804" fg:w="2"/><text x="65.2460%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.9960%" y="197" width="0.1617%" height="15" fill="rgb(244,103,47)" fg:x="804" fg:w="2"/><text x="65.2460%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.9960%" y="181" width="0.1617%" height="15" fill="rgb(212,211,25)" fg:x="804" fg:w="2"/><text x="65.2460%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.9960%" y="165" width="0.1617%" height="15" fill="rgb(208,63,53)" fg:x="804" fg:w="2"/><text x="65.2460%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.9960%" y="149" width="0.1617%" height="15" fill="rgb(213,176,21)" fg:x="804" fg:w="2"/><text x="65.2460%" y="159.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.9960%" y="133" width="0.1617%" height="15" fill="rgb(243,124,12)" fg:x="804" fg:w="2"/><text x="65.2460%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.1576%" y="277" width="0.0808%" height="15" fill="rgb(239,2,35)" fg:x="806" fg:w="1"/><text x="65.4076%" y="287.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="65.1576%" y="293" width="0.1617%" height="15" fill="rgb(253,169,22)" fg:x="806" fg:w="2"/><text x="65.4076%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.2385%" y="277" width="0.0808%" height="15" fill="rgb(254,51,12)" fg:x="807" fg:w="1"/><text x="65.4885%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.2385%" y="261" width="0.0808%" height="15" fill="rgb(244,17,47)" fg:x="807" fg:w="1"/><text x="65.4885%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.2385%" y="245" width="0.0808%" height="15" fill="rgb(251,45,46)" fg:x="807" fg:w="1"/><text x="65.4885%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.2385%" y="229" width="0.0808%" height="15" fill="rgb(223,87,43)" fg:x="807" fg:w="1"/><text x="65.4885%" y="239.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.2385%" y="213" width="0.0808%" height="15" fill="rgb(230,132,31)" fg:x="807" fg:w="1"/><text x="65.4885%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="65.1576%" y="325" width="0.2425%" height="15" fill="rgb(206,99,1)" fg:x="806" fg:w="3"/><text x="65.4076%" y="335.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="65.1576%" y="309" width="0.2425%" height="15" fill="rgb(227,110,25)" fg:x="806" fg:w="3"/><text x="65.4076%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.3193%" y="293" width="0.0808%" height="15" fill="rgb(217,182,7)" fg:x="808" fg:w="1"/><text x="65.5693%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.4002%" y="245" width="0.0808%" height="15" fill="rgb(250,176,4)" fg:x="809" fg:w="1"/><text x="65.6502%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.4002%" y="229" width="0.0808%" height="15" fill="rgb(244,98,30)" fg:x="809" fg:w="1"/><text x="65.6502%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.4002%" y="213" width="0.0808%" height="15" fill="rgb(228,150,42)" fg:x="809" fg:w="1"/><text x="65.6502%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.4810%" y="197" width="0.0808%" height="15" fill="rgb(231,91,46)" fg:x="810" fg:w="1"/><text x="65.7310%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.4810%" y="181" width="0.0808%" height="15" fill="rgb(252,161,32)" fg:x="810" fg:w="1"/><text x="65.7310%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.4810%" y="165" width="0.0808%" height="15" fill="rgb(236,69,41)" fg:x="810" fg:w="1"/><text x="65.7310%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.4810%" y="149" width="0.0808%" height="15" fill="rgb(212,160,3)" fg:x="810" fg:w="1"/><text x="65.7310%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.6427%" y="117" width="0.0808%" height="15" fill="rgb(216,5,50)" fg:x="812" fg:w="1"/><text x="65.8927%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.6427%" y="101" width="0.0808%" height="15" fill="rgb(241,138,25)" fg:x="812" fg:w="1"/><text x="65.8927%" y="111.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.6427%" y="85" width="0.0808%" height="15" fill="rgb(239,42,18)" fg:x="812" fg:w="1"/><text x="65.8927%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6427%" y="69" width="0.0808%" height="15" fill="rgb(239,40,7)" fg:x="812" fg:w="1"/><text x="65.8927%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.6427%" y="133" width="0.1617%" height="15" fill="rgb(239,11,31)" fg:x="812" fg:w="2"/><text x="65.8927%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7235%" y="117" width="0.0808%" height="15" fill="rgb(224,77,40)" fg:x="813" fg:w="1"/><text x="65.9735%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="65.5618%" y="197" width="0.3234%" height="15" fill="rgb(226,15,5)" fg:x="811" fg:w="4"/><text x="65.8118%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="65.5618%" y="181" width="0.3234%" height="15" fill="rgb(254,188,5)" fg:x="811" fg:w="4"/><text x="65.8118%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="65.5618%" y="165" width="0.3234%" height="15" fill="rgb(241,148,52)" fg:x="811" fg:w="4"/><text x="65.8118%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="65.5618%" y="149" width="0.3234%" height="15" fill="rgb(251,48,36)" fg:x="811" fg:w="4"/><text x="65.8118%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.8044%" y="133" width="0.0808%" height="15" fill="rgb(243,83,13)" fg:x="814" fg:w="1"/><text x="66.0544%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.8044%" y="117" width="0.0808%" height="15" fill="rgb(210,105,0)" fg:x="814" fg:w="1"/><text x="66.0544%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="65.4810%" y="229" width="0.4850%" height="15" fill="rgb(239,60,36)" fg:x="810" fg:w="6"/><text x="65.7310%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="65.4810%" y="213" width="0.4850%" height="15" fill="rgb(210,20,0)" fg:x="810" fg:w="6"/><text x="65.7310%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.8852%" y="197" width="0.0808%" height="15" fill="rgb(244,26,53)" fg:x="815" fg:w="1"/><text x="66.1352%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.8852%" y="181" width="0.0808%" height="15" fill="rgb(240,100,49)" fg:x="815" fg:w="1"/><text x="66.1352%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.0469%" y="197" width="0.0808%" height="15" fill="rgb(250,46,45)" fg:x="817" fg:w="1"/><text x="66.2969%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="65.9660%" y="229" width="0.2425%" height="15" fill="rgb(220,181,29)" fg:x="816" fg:w="3"/><text x="66.2160%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="65.9660%" y="213" width="0.2425%" height="15" fill="rgb(213,137,33)" fg:x="816" fg:w="3"/><text x="66.2160%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="66.1277%" y="197" width="0.0808%" height="15" fill="rgb(213,27,48)" fg:x="818" fg:w="1"/><text x="66.3777%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="66.1277%" y="181" width="0.0808%" height="15" fill="rgb(245,180,39)" fg:x="818" fg:w="1"/><text x="66.3777%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.1277%" y="165" width="0.0808%" height="15" fill="rgb(212,158,42)" fg:x="818" fg:w="1"/><text x="66.3777%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.2086%" y="197" width="0.0808%" height="15" fill="rgb(228,193,18)" fg:x="819" fg:w="1"/><text x="66.4586%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="66.2894%" y="181" width="0.1617%" height="15" fill="rgb(245,172,29)" fg:x="820" fg:w="2"/><text x="66.5394%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="66.2894%" y="165" width="0.1617%" height="15" fill="rgb(207,98,24)" fg:x="820" fg:w="2"/><text x="66.5394%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.2894%" y="149" width="0.1617%" height="15" fill="rgb(249,92,26)" fg:x="820" fg:w="2"/><text x="66.5394%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.2894%" y="133" width="0.1617%" height="15" fill="rgb(217,176,26)" fg:x="820" fg:w="2"/><text x="66.5394%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="66.3703%" y="117" width="0.0808%" height="15" fill="rgb(221,8,39)" fg:x="821" fg:w="1"/><text x="66.6203%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.3703%" y="101" width="0.0808%" height="15" fill="rgb(208,90,18)" fg:x="821" fg:w="1"/><text x="66.6203%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.3703%" y="85" width="0.0808%" height="15" fill="rgb(207,202,30)" fg:x="821" fg:w="1"/><text x="66.6203%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="66.3703%" y="69" width="0.0808%" height="15" fill="rgb(231,124,22)" fg:x="821" fg:w="1"/><text x="66.6203%" y="79.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.3703%" y="53" width="0.0808%" height="15" fill="rgb(206,15,5)" fg:x="821" fg:w="1"/><text x="66.6203%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.3703%" y="37" width="0.0808%" height="15" fill="rgb(239,16,52)" fg:x="821" fg:w="1"/><text x="66.6203%" y="47.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (16 samples, 1.29%)</title><rect x="65.4002%" y="277" width="1.2935%" height="15" fill="rgb(245,213,29)" fg:x="809" fg:w="16"/><text x="65.6502%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (16 samples, 1.29%)</title><rect x="65.4002%" y="261" width="1.2935%" height="15" fill="rgb(213,203,36)" fg:x="809" fg:w="16"/><text x="65.6502%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (15 samples, 1.21%)</title><rect x="65.4810%" y="245" width="1.2126%" height="15" fill="rgb(209,55,18)" fg:x="810" fg:w="15"/><text x="65.7310%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="66.2086%" y="229" width="0.4850%" height="15" fill="rgb(207,133,49)" fg:x="819" fg:w="6"/><text x="66.4586%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="66.2086%" y="213" width="0.4850%" height="15" fill="rgb(240,33,46)" fg:x="819" fg:w="6"/><text x="66.4586%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="66.2894%" y="197" width="0.4042%" height="15" fill="rgb(212,35,2)" fg:x="820" fg:w="5"/><text x="66.5394%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.4511%" y="181" width="0.2425%" height="15" fill="rgb(231,119,28)" fg:x="822" fg:w="3"/><text x="66.7011%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="66.4511%" y="165" width="0.2425%" height="15" fill="rgb(252,178,7)" fg:x="822" fg:w="3"/><text x="66.7011%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="66.4511%" y="149" width="0.2425%" height="15" fill="rgb(251,91,4)" fg:x="822" fg:w="3"/><text x="66.7011%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.4511%" y="133" width="0.2425%" height="15" fill="rgb(233,122,19)" fg:x="822" fg:w="3"/><text x="66.7011%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="66.4511%" y="117" width="0.2425%" height="15" fill="rgb(231,208,46)" fg:x="822" fg:w="3"/><text x="66.7011%" y="127.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="66.4511%" y="101" width="0.2425%" height="15" fill="rgb(243,15,41)" fg:x="822" fg:w="3"/><text x="66.7011%" y="111.50"></text></g><g><title>kernel::model::entity::Entity::from_value (18 samples, 1.46%)</title><rect x="65.4002%" y="325" width="1.4551%" height="15" fill="rgb(210,32,43)" fg:x="809" fg:w="18"/><text x="65.6502%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (18 samples, 1.46%)</title><rect x="65.4002%" y="309" width="1.4551%" height="15" fill="rgb(222,177,15)" fg:x="809" fg:w="18"/><text x="65.6502%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (18 samples, 1.46%)</title><rect x="65.4002%" y="293" width="1.4551%" height="15" fill="rgb(244,121,34)" fg:x="809" fg:w="18"/><text x="65.6502%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.6936%" y="277" width="0.1617%" height="15" fill="rgb(234,138,4)" fg:x="825" fg:w="2"/><text x="66.9436%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7745%" y="261" width="0.0808%" height="15" fill="rgb(240,97,48)" fg:x="826" fg:w="1"/><text x="67.0245%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7745%" y="245" width="0.0808%" height="15" fill="rgb(237,65,54)" fg:x="826" fg:w="1"/><text x="67.0245%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="66.9361%" y="181" width="0.1617%" height="15" fill="rgb(214,25,24)" fg:x="828" fg:w="2"/><text x="67.1861%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.9361%" y="165" width="0.1617%" height="15" fill="rgb(213,5,3)" fg:x="828" fg:w="2"/><text x="67.1861%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="66.9361%" y="149" width="0.1617%" height="15" fill="rgb(219,81,29)" fg:x="828" fg:w="2"/><text x="67.1861%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.0170%" y="133" width="0.0808%" height="15" fill="rgb(220,43,48)" fg:x="829" fg:w="1"/><text x="67.2670%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0170%" y="117" width="0.0808%" height="15" fill="rgb(239,157,2)" fg:x="829" fg:w="1"/><text x="67.2670%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.0170%" y="101" width="0.0808%" height="15" fill="rgb(213,104,43)" fg:x="829" fg:w="1"/><text x="67.2670%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.0170%" y="85" width="0.0808%" height="15" fill="rgb(237,84,9)" fg:x="829" fg:w="1"/><text x="67.2670%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0978%" y="165" width="0.0808%" height="15" fill="rgb(252,6,33)" fg:x="830" fg:w="1"/><text x="67.3478%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.0978%" y="149" width="0.0808%" height="15" fill="rgb(251,172,22)" fg:x="830" fg:w="1"/><text x="67.3478%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="66.9361%" y="197" width="0.3234%" height="15" fill="rgb(244,91,53)" fg:x="828" fg:w="4"/><text x="67.1861%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.0978%" y="181" width="0.1617%" height="15" fill="rgb(219,29,30)" fg:x="830" fg:w="2"/><text x="67.3478%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.1787%" y="165" width="0.0808%" height="15" fill="rgb(213,3,15)" fg:x="831" fg:w="1"/><text x="67.4287%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="66.8553%" y="229" width="0.6467%" height="15" fill="rgb(208,25,28)" fg:x="827" fg:w="8"/><text x="67.1053%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="66.9361%" y="213" width="0.5659%" height="15" fill="rgb(252,144,25)" fg:x="828" fg:w="7"/><text x="67.1861%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="67.2595%" y="197" width="0.2425%" height="15" fill="rgb(226,220,25)" fg:x="832" fg:w="3"/><text x="67.5095%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.3403%" y="181" width="0.1617%" height="15" fill="rgb(212,131,28)" fg:x="833" fg:w="2"/><text x="67.5903%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4212%" y="165" width="0.0808%" height="15" fill="rgb(219,143,52)" fg:x="834" fg:w="1"/><text x="67.6712%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="66.8553%" y="261" width="0.7276%" height="15" fill="rgb(215,56,7)" fg:x="827" fg:w="9"/><text x="67.1053%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="66.8553%" y="245" width="0.7276%" height="15" fill="rgb(239,59,51)" fg:x="827" fg:w="9"/><text x="67.1053%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5020%" y="229" width="0.0808%" height="15" fill="rgb(209,215,4)" fg:x="835" fg:w="1"/><text x="67.7520%" y="239.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (51 samples, 4.12%)</title><rect x="63.5408%" y="405" width="4.1229%" height="15" fill="rgb(221,118,39)" fg:x="786" fg:w="51"/><text x="63.7908%" y="415.50">&lt;plu..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (44 samples, 3.56%)</title><rect x="64.1067%" y="389" width="3.5570%" height="15" fill="rgb(236,6,44)" fg:x="793" fg:w="44"/><text x="64.3567%" y="399.50">&lt;ker..</text></g><g><title>kernel::model::EntityPtrResolver::entity (43 samples, 3.48%)</title><rect x="64.1876%" y="373" width="3.4762%" height="15" fill="rgb(216,122,9)" fg:x="794" fg:w="43"/><text x="64.4376%" y="383.50">ker..</text></g><g><title>engine::session::Session::load_entity (43 samples, 3.48%)</title><rect x="64.1876%" y="357" width="3.4762%" height="15" fill="rgb(244,134,42)" fg:x="794" fg:w="43"/><text x="64.4376%" y="367.50">eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (43 samples, 3.48%)</title><rect x="64.1876%" y="341" width="3.4762%" height="15" fill="rgb(209,189,35)" fg:x="794" fg:w="43"/><text x="64.4376%" y="351.50">eng..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.81%)</title><rect x="66.8553%" y="325" width="0.8084%" height="15" fill="rgb(250,47,36)" fg:x="827" fg:w="10"/><text x="67.1053%" y="335.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.81%)</title><rect x="66.8553%" y="309" width="0.8084%" height="15" fill="rgb(252,112,4)" fg:x="827" fg:w="10"/><text x="67.1053%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.81%)</title><rect x="66.8553%" y="293" width="0.8084%" height="15" fill="rgb(221,79,51)" fg:x="827" fg:w="10"/><text x="67.1053%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="66.8553%" y="277" width="0.8084%" height="15" fill="rgb(232,65,53)" fg:x="827" fg:w="10"/><text x="67.1053%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5829%" y="261" width="0.0808%" height="15" fill="rgb(211,37,7)" fg:x="836" fg:w="1"/><text x="67.8329%" y="271.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (53 samples, 4.28%)</title><rect x="63.4600%" y="421" width="4.2846%" height="15" fill="rgb(234,221,18)" fg:x="785" fg:w="53"/><text x="63.7100%" y="431.50">&lt;engi..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="67.6637%" y="405" width="0.0808%" height="15" fill="rgb(220,158,26)" fg:x="837" fg:w="1"/><text x="67.9137%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="67.6637%" y="389" width="0.0808%" height="15" fill="rgb(220,70,6)" fg:x="837" fg:w="1"/><text x="67.9137%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.9062%" y="245" width="0.0808%" height="15" fill="rgb(250,39,48)" fg:x="840" fg:w="1"/><text x="68.1562%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (58 samples, 4.69%)</title><rect x="63.3791%" y="485" width="4.6888%" height="15" fill="rgb(206,40,27)" fg:x="784" fg:w="58"/><text x="63.6291%" y="495.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::apply_middleware (58 samples, 4.69%)</title><rect x="63.3791%" y="469" width="4.6888%" height="15" fill="rgb(247,80,36)" fg:x="784" fg:w="58"/><text x="63.6291%" y="479.50">kerne..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (57 samples, 4.61%)</title><rect x="63.4600%" y="453" width="4.6079%" height="15" fill="rgb(222,9,20)" fg:x="785" fg:w="57"/><text x="63.7100%" y="463.50">kerne..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (57 samples, 4.61%)</title><rect x="63.4600%" y="437" width="4.6079%" height="15" fill="rgb(217,26,45)" fg:x="785" fg:w="57"/><text x="63.7100%" y="447.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="67.7445%" y="421" width="0.3234%" height="15" fill="rgb(221,67,14)" fg:x="838" fg:w="4"/><text x="67.9945%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="67.7445%" y="405" width="0.3234%" height="15" fill="rgb(248,100,24)" fg:x="838" fg:w="4"/><text x="67.9945%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="67.7445%" y="389" width="0.3234%" height="15" fill="rgb(230,187,16)" fg:x="838" fg:w="4"/><text x="67.9945%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="67.7445%" y="373" width="0.3234%" height="15" fill="rgb(205,108,13)" fg:x="838" fg:w="4"/><text x="67.9945%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="67.7445%" y="357" width="0.3234%" height="15" fill="rgb(235,71,51)" fg:x="838" fg:w="4"/><text x="67.9945%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="67.8254%" y="341" width="0.2425%" height="15" fill="rgb(251,172,48)" fg:x="839" fg:w="3"/><text x="68.0754%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="67.8254%" y="325" width="0.2425%" height="15" fill="rgb(240,96,49)" fg:x="839" fg:w="3"/><text x="68.0754%" y="335.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (3 samples, 0.24%)</title><rect x="67.8254%" y="309" width="0.2425%" height="15" fill="rgb(235,46,36)" fg:x="839" fg:w="3"/><text x="68.0754%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="67.9062%" y="293" width="0.1617%" height="15" fill="rgb(244,3,49)" fg:x="840" fg:w="2"/><text x="68.1562%" y="303.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (2 samples, 0.16%)</title><rect x="67.9062%" y="277" width="0.1617%" height="15" fill="rgb(206,78,54)" fg:x="840" fg:w="2"/><text x="68.1562%" y="287.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.16%)</title><rect x="67.9062%" y="261" width="0.1617%" height="15" fill="rgb(208,85,42)" fg:x="840" fg:w="2"/><text x="68.1562%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.9871%" y="245" width="0.0808%" height="15" fill="rgb(219,196,21)" fg:x="841" fg:w="1"/><text x="68.2371%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (2 samples, 0.16%)</title><rect x="68.1487%" y="453" width="0.1617%" height="15" fill="rgb(238,19,9)" fg:x="843" fg:w="2"/><text x="68.3987%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.2296%" y="437" width="0.0808%" height="15" fill="rgb(206,86,13)" fg:x="844" fg:w="1"/><text x="68.4796%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="68.2296%" y="421" width="0.0808%" height="15" fill="rgb(214,123,40)" fg:x="844" fg:w="1"/><text x="68.4796%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.3913%" y="421" width="0.0808%" height="15" fill="rgb(243,53,5)" fg:x="846" fg:w="1"/><text x="68.6413%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (7 samples, 0.57%)</title><rect x="68.0679%" y="485" width="0.5659%" height="15" fill="rgb(254,186,31)" fg:x="842" fg:w="7"/><text x="68.3179%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (7 samples, 0.57%)</title><rect x="68.0679%" y="469" width="0.5659%" height="15" fill="rgb(221,216,25)" fg:x="842" fg:w="7"/><text x="68.3179%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="68.3104%" y="453" width="0.3234%" height="15" fill="rgb(248,107,42)" fg:x="845" fg:w="4"/><text x="68.5604%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="68.3104%" y="437" width="0.3234%" height="15" fill="rgb(221,85,43)" fg:x="845" fg:w="4"/><text x="68.5604%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.4721%" y="421" width="0.1617%" height="15" fill="rgb(225,34,24)" fg:x="847" fg:w="2"/><text x="68.7221%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.4721%" y="405" width="0.1617%" height="15" fill="rgb(211,119,1)" fg:x="847" fg:w="2"/><text x="68.7221%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.5530%" y="389" width="0.0808%" height="15" fill="rgb(254,216,46)" fg:x="848" fg:w="1"/><text x="68.8030%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5530%" y="373" width="0.0808%" height="15" fill="rgb(238,11,38)" fg:x="848" fg:w="1"/><text x="68.8030%" y="383.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="68.6338%" y="453" width="0.0808%" height="15" fill="rgb(233,50,15)" fg:x="849" fg:w="1"/><text x="68.8838%" y="463.50"></text></g><g><title>&lt;plugins_core::emote::parser::LaughActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="68.6338%" y="437" width="0.0808%" height="15" fill="rgb(217,181,29)" fg:x="849" fg:w="1"/><text x="68.8838%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="68.6338%" y="421" width="0.0808%" height="15" fill="rgb(214,56,3)" fg:x="849" fg:w="1"/><text x="68.8838%" y="431.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="68.6338%" y="485" width="0.1617%" height="15" fill="rgb(230,69,45)" fg:x="849" fg:w="2"/><text x="68.8838%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="68.6338%" y="469" width="0.1617%" height="15" fill="rgb(224,201,50)" fg:x="849" fg:w="2"/><text x="68.8838%" y="479.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="68.7146%" y="453" width="0.0808%" height="15" fill="rgb(217,228,18)" fg:x="850" fg:w="1"/><text x="68.9646%" y="463.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="68.7146%" y="437" width="0.0808%" height="15" fill="rgb(239,33,44)" fg:x="850" fg:w="1"/><text x="68.9646%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="68.7146%" y="421" width="0.0808%" height="15" fill="rgb(248,210,23)" fg:x="850" fg:w="1"/><text x="68.9646%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="68.7146%" y="405" width="0.0808%" height="15" fill="rgb(253,135,8)" fg:x="850" fg:w="1"/><text x="68.9646%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="68.8763%" y="469" width="0.0808%" height="15" fill="rgb(217,98,21)" fg:x="852" fg:w="1"/><text x="69.1263%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.1997%" y="389" width="0.2425%" height="15" fill="rgb(253,130,21)" fg:x="856" fg:w="3"/><text x="69.4497%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.2805%" y="373" width="0.1617%" height="15" fill="rgb(207,81,54)" fg:x="857" fg:w="2"/><text x="69.5305%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.2805%" y="357" width="0.1617%" height="15" fill="rgb(232,48,33)" fg:x="857" fg:w="2"/><text x="69.5305%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="69.2805%" y="341" width="0.1617%" height="15" fill="rgb(211,9,35)" fg:x="857" fg:w="2"/><text x="69.5305%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="69.2805%" y="325" width="0.1617%" height="15" fill="rgb(205,152,21)" fg:x="857" fg:w="2"/><text x="69.5305%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="69.2805%" y="309" width="0.1617%" height="15" fill="rgb(249,21,27)" fg:x="857" fg:w="2"/><text x="69.5305%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="69.2805%" y="293" width="0.1617%" height="15" fill="rgb(252,29,24)" fg:x="857" fg:w="2"/><text x="69.5305%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="69.2805%" y="277" width="0.1617%" height="15" fill="rgb(230,130,50)" fg:x="857" fg:w="2"/><text x="69.5305%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="69.2805%" y="261" width="0.1617%" height="15" fill="rgb(239,144,14)" fg:x="857" fg:w="2"/><text x="69.5305%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="69.2805%" y="245" width="0.1617%" height="15" fill="rgb(227,111,50)" fg:x="857" fg:w="2"/><text x="69.5305%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="69.2805%" y="229" width="0.1617%" height="15" fill="rgb(254,84,20)" fg:x="857" fg:w="2"/><text x="69.5305%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="69.2805%" y="213" width="0.1617%" height="15" fill="rgb(232,90,48)" fg:x="857" fg:w="2"/><text x="69.5305%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.2805%" y="197" width="0.1617%" height="15" fill="rgb(253,63,47)" fg:x="857" fg:w="2"/><text x="69.5305%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="69.0380%" y="421" width="0.4850%" height="15" fill="rgb(251,146,35)" fg:x="854" fg:w="6"/><text x="69.2880%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="69.0380%" y="405" width="0.4850%" height="15" fill="rgb(229,192,35)" fg:x="854" fg:w="6"/><text x="69.2880%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4422%" y="389" width="0.0808%" height="15" fill="rgb(225,68,9)" fg:x="859" fg:w="1"/><text x="69.6922%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.65%)</title><rect x="68.9572%" y="437" width="0.6467%" height="15" fill="rgb(214,97,34)" fg:x="853" fg:w="8"/><text x="69.2072%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.5230%" y="421" width="0.0808%" height="15" fill="rgb(253,31,26)" fg:x="860" fg:w="1"/><text x="69.7730%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6847%" y="341" width="0.0808%" height="15" fill="rgb(225,151,47)" fg:x="862" fg:w="1"/><text x="69.9347%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.6039%" y="389" width="0.2425%" height="15" fill="rgb(206,185,9)" fg:x="861" fg:w="3"/><text x="69.8539%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.6039%" y="373" width="0.2425%" height="15" fill="rgb(249,65,17)" fg:x="861" fg:w="3"/><text x="69.8539%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.6039%" y="357" width="0.2425%" height="15" fill="rgb(220,110,10)" fg:x="861" fg:w="3"/><text x="69.8539%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7656%" y="341" width="0.0808%" height="15" fill="rgb(222,198,49)" fg:x="863" fg:w="1"/><text x="70.0156%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7656%" y="325" width="0.0808%" height="15" fill="rgb(239,81,13)" fg:x="863" fg:w="1"/><text x="70.0156%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.7656%" y="309" width="0.0808%" height="15" fill="rgb(216,128,11)" fg:x="863" fg:w="1"/><text x="70.0156%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.7656%" y="293" width="0.0808%" height="15" fill="rgb(247,156,8)" fg:x="863" fg:w="1"/><text x="70.0156%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.7656%" y="277" width="0.0808%" height="15" fill="rgb(219,173,1)" fg:x="863" fg:w="1"/><text x="70.0156%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7656%" y="261" width="0.0808%" height="15" fill="rgb(227,42,24)" fg:x="863" fg:w="1"/><text x="70.0156%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7656%" y="245" width="0.0808%" height="15" fill="rgb(253,219,50)" fg:x="863" fg:w="1"/><text x="70.0156%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.7656%" y="229" width="0.0808%" height="15" fill="rgb(215,191,54)" fg:x="863" fg:w="1"/><text x="70.0156%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.7656%" y="213" width="0.0808%" height="15" fill="rgb(238,83,12)" fg:x="863" fg:w="1"/><text x="70.0156%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.7656%" y="197" width="0.0808%" height="15" fill="rgb(205,124,9)" fg:x="863" fg:w="1"/><text x="70.0156%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.7656%" y="181" width="0.0808%" height="15" fill="rgb(253,174,7)" fg:x="863" fg:w="1"/><text x="70.0156%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7656%" y="165" width="0.0808%" height="15" fill="rgb(206,134,49)" fg:x="863" fg:w="1"/><text x="70.0156%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.9272%" y="309" width="0.0808%" height="15" fill="rgb(221,89,20)" fg:x="865" fg:w="1"/><text x="70.1772%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.8464%" y="341" width="0.2425%" height="15" fill="rgb(240,205,13)" fg:x="864" fg:w="3"/><text x="70.0964%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.9272%" y="325" width="0.1617%" height="15" fill="rgb(237,174,32)" fg:x="865" fg:w="2"/><text x="70.1772%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.0081%" y="309" width="0.0808%" height="15" fill="rgb(226,12,15)" fg:x="866" fg:w="1"/><text x="70.2581%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.0889%" y="293" width="0.0808%" height="15" fill="rgb(245,160,52)" fg:x="867" fg:w="1"/><text x="70.3389%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="70.1698%" y="293" width="0.1617%" height="15" fill="rgb(253,80,21)" fg:x="868" fg:w="2"/><text x="70.4198%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="70.1698%" y="277" width="0.1617%" height="15" fill="rgb(231,225,22)" fg:x="868" fg:w="2"/><text x="70.4198%" y="287.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="70.1698%" y="261" width="0.1617%" height="15" fill="rgb(253,185,12)" fg:x="868" fg:w="2"/><text x="70.4198%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.1698%" y="245" width="0.1617%" height="15" fill="rgb(234,197,21)" fg:x="868" fg:w="2"/><text x="70.4198%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.1698%" y="229" width="0.1617%" height="15" fill="rgb(210,47,30)" fg:x="868" fg:w="2"/><text x="70.4198%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.2506%" y="213" width="0.0808%" height="15" fill="rgb(246,139,27)" fg:x="869" fg:w="1"/><text x="70.5006%" y="223.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="70.4931%" y="197" width="0.2425%" height="15" fill="rgb(226,130,16)" fg:x="872" fg:w="3"/><text x="70.7431%" y="207.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="70.4931%" y="181" width="0.2425%" height="15" fill="rgb(237,208,20)" fg:x="872" fg:w="3"/><text x="70.7431%" y="191.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="70.4931%" y="165" width="0.2425%" height="15" fill="rgb(245,186,28)" fg:x="872" fg:w="3"/><text x="70.7431%" y="175.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="70.4931%" y="149" width="0.2425%" height="15" fill="rgb(238,105,39)" fg:x="872" fg:w="3"/><text x="70.7431%" y="159.50"></text></g><g><title>&lt;serde::de::Unexpected as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="70.6548%" y="133" width="0.0808%" height="15" fill="rgb(253,228,11)" fg:x="874" fg:w="1"/><text x="70.9048%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.73%)</title><rect x="70.0889%" y="341" width="0.7276%" height="15" fill="rgb(224,136,38)" fg:x="867" fg:w="9"/><text x="70.3389%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.73%)</title><rect x="70.0889%" y="325" width="0.7276%" height="15" fill="rgb(211,3,25)" fg:x="867" fg:w="9"/><text x="70.3389%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (9 samples, 0.73%)</title><rect x="70.0889%" y="309" width="0.7276%" height="15" fill="rgb(238,66,34)" fg:x="867" fg:w="9"/><text x="70.3389%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="70.3314%" y="293" width="0.4850%" height="15" fill="rgb(223,188,11)" fg:x="870" fg:w="6"/><text x="70.5814%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="70.3314%" y="277" width="0.4850%" height="15" fill="rgb(221,10,35)" fg:x="870" fg:w="6"/><text x="70.5814%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (5 samples, 0.40%)</title><rect x="70.4123%" y="261" width="0.4042%" height="15" fill="rgb(223,18,44)" fg:x="871" fg:w="5"/><text x="70.6623%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (5 samples, 0.40%)</title><rect x="70.4123%" y="245" width="0.4042%" height="15" fill="rgb(220,97,41)" fg:x="871" fg:w="5"/><text x="70.6623%" y="255.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (5 samples, 0.40%)</title><rect x="70.4123%" y="229" width="0.4042%" height="15" fill="rgb(206,95,45)" fg:x="871" fg:w="5"/><text x="70.6623%" y="239.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (4 samples, 0.32%)</title><rect x="70.4931%" y="213" width="0.3234%" height="15" fill="rgb(209,96,13)" fg:x="872" fg:w="4"/><text x="70.7431%" y="223.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="70.7357%" y="197" width="0.0808%" height="15" fill="rgb(237,39,34)" fg:x="875" fg:w="1"/><text x="70.9857%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="70.8165%" y="293" width="0.0808%" height="15" fill="rgb(213,49,47)" fg:x="876" fg:w="1"/><text x="71.0665%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.8165%" y="277" width="0.0808%" height="15" fill="rgb(205,107,27)" fg:x="876" fg:w="1"/><text x="71.0665%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.8165%" y="261" width="0.0808%" height="15" fill="rgb(212,142,9)" fg:x="876" fg:w="1"/><text x="71.0665%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.13%)</title><rect x="69.8464%" y="389" width="1.1318%" height="15" fill="rgb(226,182,0)" fg:x="864" fg:w="14"/><text x="70.0964%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.13%)</title><rect x="69.8464%" y="373" width="1.1318%" height="15" fill="rgb(231,3,53)" fg:x="864" fg:w="14"/><text x="70.0964%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (14 samples, 1.13%)</title><rect x="69.8464%" y="357" width="1.1318%" height="15" fill="rgb(246,111,28)" fg:x="864" fg:w="14"/><text x="70.0964%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.8165%" y="341" width="0.1617%" height="15" fill="rgb(254,183,7)" fg:x="876" fg:w="2"/><text x="71.0665%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.8165%" y="325" width="0.1617%" height="15" fill="rgb(247,177,28)" fg:x="876" fg:w="2"/><text x="71.0665%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.8165%" y="309" width="0.1617%" height="15" fill="rgb(244,43,1)" fg:x="876" fg:w="2"/><text x="71.0665%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.8973%" y="293" width="0.0808%" height="15" fill="rgb(207,2,35)" fg:x="877" fg:w="1"/><text x="71.1473%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.8973%" y="277" width="0.0808%" height="15" fill="rgb(213,83,22)" fg:x="877" fg:w="1"/><text x="71.1473%" y="287.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="71.0590%" y="357" width="0.2425%" height="15" fill="rgb(246,212,13)" fg:x="879" fg:w="3"/><text x="71.3090%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.3015%" y="325" width="0.0808%" height="15" fill="rgb(213,127,46)" fg:x="882" fg:w="1"/><text x="71.5515%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.3015%" y="309" width="0.0808%" height="15" fill="rgb(219,215,39)" fg:x="882" fg:w="1"/><text x="71.5515%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 1.86%)</title><rect x="69.6039%" y="437" width="1.8593%" height="15" fill="rgb(227,99,17)" fg:x="861" fg:w="23"/><text x="69.8539%" y="447.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.86%)</title><rect x="69.6039%" y="421" width="1.8593%" height="15" fill="rgb(208,155,18)" fg:x="861" fg:w="23"/><text x="69.8539%" y="431.50">&lt;..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (23 samples, 1.86%)</title><rect x="69.6039%" y="405" width="1.8593%" height="15" fill="rgb(223,204,38)" fg:x="861" fg:w="23"/><text x="69.8539%" y="415.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="70.9782%" y="389" width="0.4850%" height="15" fill="rgb(212,114,21)" fg:x="878" fg:w="6"/><text x="71.2282%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="70.9782%" y="373" width="0.4850%" height="15" fill="rgb(250,74,13)" fg:x="878" fg:w="6"/><text x="71.2282%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.3015%" y="357" width="0.1617%" height="15" fill="rgb(234,7,1)" fg:x="882" fg:w="2"/><text x="71.5515%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="71.3015%" y="341" width="0.1617%" height="15" fill="rgb(207,138,31)" fg:x="882" fg:w="2"/><text x="71.5515%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.3824%" y="325" width="0.0808%" height="15" fill="rgb(215,186,42)" fg:x="883" fg:w="1"/><text x="71.6324%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="71.3824%" y="309" width="0.0808%" height="15" fill="rgb(229,205,49)" fg:x="883" fg:w="1"/><text x="71.6324%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.3824%" y="293" width="0.0808%" height="15" fill="rgb(216,156,32)" fg:x="883" fg:w="1"/><text x="71.6324%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.3824%" y="277" width="0.0808%" height="15" fill="rgb(238,7,21)" fg:x="883" fg:w="1"/><text x="71.6324%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="71.6249%" y="373" width="0.1617%" height="15" fill="rgb(249,190,22)" fg:x="886" fg:w="2"/><text x="71.8749%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7057%" y="357" width="0.0808%" height="15" fill="rgb(253,51,31)" fg:x="887" fg:w="1"/><text x="71.9557%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7866%" y="357" width="0.0808%" height="15" fill="rgb(237,90,54)" fg:x="888" fg:w="1"/><text x="72.0366%" y="367.50"></text></g><g><title>engine::session::internal::Added::find_refs (37 samples, 2.99%)</title><rect x="68.9572%" y="469" width="2.9911%" height="15" fill="rgb(250,214,33)" fg:x="853" fg:w="37"/><text x="69.2072%" y="479.50">eng..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (37 samples, 2.99%)</title><rect x="68.9572%" y="453" width="2.9911%" height="15" fill="rgb(237,10,49)" fg:x="853" fg:w="37"/><text x="69.2072%" y="463.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="71.4632%" y="437" width="0.4850%" height="15" fill="rgb(241,56,36)" fg:x="884" fg:w="6"/><text x="71.7132%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="71.4632%" y="421" width="0.4850%" height="15" fill="rgb(227,164,12)" fg:x="884" fg:w="6"/><text x="71.7132%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="71.5441%" y="405" width="0.4042%" height="15" fill="rgb(249,149,35)" fg:x="885" fg:w="5"/><text x="71.7941%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="71.5441%" y="389" width="0.4042%" height="15" fill="rgb(238,227,50)" fg:x="885" fg:w="5"/><text x="71.7941%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.7866%" y="373" width="0.1617%" height="15" fill="rgb(235,102,45)" fg:x="888" fg:w="2"/><text x="72.0366%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.8674%" y="357" width="0.0808%" height="15" fill="rgb(211,10,38)" fg:x="889" fg:w="1"/><text x="72.1174%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.8674%" y="341" width="0.0808%" height="15" fill="rgb(219,77,48)" fg:x="889" fg:w="1"/><text x="72.1174%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.9483%" y="405" width="0.1617%" height="15" fill="rgb(246,6,15)" fg:x="890" fg:w="2"/><text x="72.1983%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.9483%" y="389" width="0.1617%" height="15" fill="rgb(207,220,2)" fg:x="890" fg:w="2"/><text x="72.1983%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.0291%" y="373" width="0.0808%" height="15" fill="rgb(242,48,14)" fg:x="891" fg:w="1"/><text x="72.2791%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.0291%" y="357" width="0.0808%" height="15" fill="rgb(218,19,27)" fg:x="891" fg:w="1"/><text x="72.2791%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.0291%" y="341" width="0.0808%" height="15" fill="rgb(228,0,35)" fg:x="891" fg:w="1"/><text x="72.2791%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.0291%" y="325" width="0.0808%" height="15" fill="rgb(244,142,54)" fg:x="891" fg:w="1"/><text x="72.2791%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.0291%" y="309" width="0.0808%" height="15" fill="rgb(243,217,40)" fg:x="891" fg:w="1"/><text x="72.2791%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.0291%" y="293" width="0.0808%" height="15" fill="rgb(207,114,16)" fg:x="891" fg:w="1"/><text x="72.2791%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.0291%" y="277" width="0.0808%" height="15" fill="rgb(224,33,25)" fg:x="891" fg:w="1"/><text x="72.2791%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.0291%" y="261" width="0.0808%" height="15" fill="rgb(230,93,54)" fg:x="891" fg:w="1"/><text x="72.2791%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.0291%" y="245" width="0.0808%" height="15" fill="rgb(224,56,24)" fg:x="891" fg:w="1"/><text x="72.2791%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.0291%" y="229" width="0.0808%" height="15" fill="rgb(235,189,50)" fg:x="891" fg:w="1"/><text x="72.2791%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.0291%" y="213" width="0.0808%" height="15" fill="rgb(242,173,8)" fg:x="891" fg:w="1"/><text x="72.2791%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1099%" y="405" width="0.0808%" height="15" fill="rgb(209,206,10)" fg:x="892" fg:w="1"/><text x="72.3599%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1099%" y="389" width="0.0808%" height="15" fill="rgb(213,182,44)" fg:x="892" fg:w="1"/><text x="72.3599%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.1099%" y="373" width="0.0808%" height="15" fill="rgb(243,51,15)" fg:x="892" fg:w="1"/><text x="72.3599%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.1099%" y="357" width="0.0808%" height="15" fill="rgb(241,13,14)" fg:x="892" fg:w="1"/><text x="72.3599%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.1099%" y="341" width="0.0808%" height="15" fill="rgb(239,147,24)" fg:x="892" fg:w="1"/><text x="72.3599%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1099%" y="325" width="0.0808%" height="15" fill="rgb(223,129,16)" fg:x="892" fg:w="1"/><text x="72.3599%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1099%" y="309" width="0.0808%" height="15" fill="rgb(209,169,13)" fg:x="892" fg:w="1"/><text x="72.3599%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.1099%" y="293" width="0.0808%" height="15" fill="rgb(235,159,41)" fg:x="892" fg:w="1"/><text x="72.3599%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.1099%" y="277" width="0.0808%" height="15" fill="rgb(223,219,48)" fg:x="892" fg:w="1"/><text x="72.3599%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.1099%" y="261" width="0.0808%" height="15" fill="rgb(236,80,13)" fg:x="892" fg:w="1"/><text x="72.3599%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.1099%" y="245" width="0.0808%" height="15" fill="rgb(213,5,6)" fg:x="892" fg:w="1"/><text x="72.3599%" y="255.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="72.1099%" y="229" width="0.0808%" height="15" fill="rgb(205,59,21)" fg:x="892" fg:w="1"/><text x="72.3599%" y="239.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="72.1099%" y="213" width="0.0808%" height="15" fill="rgb(247,137,35)" fg:x="892" fg:w="1"/><text x="72.3599%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1908%" y="389" width="0.0808%" height="15" fill="rgb(242,208,28)" fg:x="893" fg:w="1"/><text x="72.4408%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1908%" y="373" width="0.0808%" height="15" fill="rgb(245,62,25)" fg:x="893" fg:w="1"/><text x="72.4408%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1908%" y="357" width="0.0808%" height="15" fill="rgb(233,99,54)" fg:x="893" fg:w="1"/><text x="72.4408%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.1908%" y="341" width="0.0808%" height="15" fill="rgb(213,10,37)" fg:x="893" fg:w="1"/><text x="72.4408%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.1908%" y="325" width="0.0808%" height="15" fill="rgb(235,143,30)" fg:x="893" fg:w="1"/><text x="72.4408%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.1908%" y="309" width="0.0808%" height="15" fill="rgb(250,146,33)" fg:x="893" fg:w="1"/><text x="72.4408%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1908%" y="293" width="0.0808%" height="15" fill="rgb(226,198,42)" fg:x="893" fg:w="1"/><text x="72.4408%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1908%" y="277" width="0.0808%" height="15" fill="rgb(222,55,6)" fg:x="893" fg:w="1"/><text x="72.4408%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.1908%" y="261" width="0.0808%" height="15" fill="rgb(213,224,31)" fg:x="893" fg:w="1"/><text x="72.4408%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.1908%" y="245" width="0.0808%" height="15" fill="rgb(226,103,35)" fg:x="893" fg:w="1"/><text x="72.4408%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.1908%" y="229" width="0.0808%" height="15" fill="rgb(205,66,45)" fg:x="893" fg:w="1"/><text x="72.4408%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.1908%" y="213" width="0.0808%" height="15" fill="rgb(226,51,42)" fg:x="893" fg:w="1"/><text x="72.4408%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="71.9483%" y="453" width="0.4042%" height="15" fill="rgb(206,69,1)" fg:x="890" fg:w="5"/><text x="72.1983%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="71.9483%" y="437" width="0.4042%" height="15" fill="rgb(213,228,47)" fg:x="890" fg:w="5"/><text x="72.1983%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="71.9483%" y="421" width="0.4042%" height="15" fill="rgb(224,204,18)" fg:x="890" fg:w="5"/><text x="72.1983%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.1908%" y="405" width="0.1617%" height="15" fill="rgb(253,187,47)" fg:x="893" fg:w="2"/><text x="72.4408%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.2716%" y="389" width="0.0808%" height="15" fill="rgb(232,61,2)" fg:x="894" fg:w="1"/><text x="72.5216%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="72.4333%" y="341" width="0.1617%" height="15" fill="rgb(213,132,35)" fg:x="896" fg:w="2"/><text x="72.6833%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5950%" y="341" width="0.0808%" height="15" fill="rgb(247,33,21)" fg:x="898" fg:w="1"/><text x="72.8450%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.5950%" y="325" width="0.0808%" height="15" fill="rgb(233,71,46)" fg:x="898" fg:w="1"/><text x="72.8450%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.49%)</title><rect x="72.3525%" y="453" width="0.4850%" height="15" fill="rgb(222,173,43)" fg:x="895" fg:w="6"/><text x="72.6025%" y="463.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="72.3525%" y="437" width="0.4850%" height="15" fill="rgb(249,218,47)" fg:x="895" fg:w="6"/><text x="72.6025%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (6 samples, 0.49%)</title><rect x="72.3525%" y="421" width="0.4850%" height="15" fill="rgb(254,185,48)" fg:x="895" fg:w="6"/><text x="72.6025%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (6 samples, 0.49%)</title><rect x="72.3525%" y="405" width="0.4850%" height="15" fill="rgb(252,165,50)" fg:x="895" fg:w="6"/><text x="72.6025%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="72.3525%" y="389" width="0.4850%" height="15" fill="rgb(206,219,6)" fg:x="895" fg:w="6"/><text x="72.6025%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (5 samples, 0.40%)</title><rect x="72.4333%" y="373" width="0.4042%" height="15" fill="rgb(212,212,45)" fg:x="896" fg:w="5"/><text x="72.6833%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="72.4333%" y="357" width="0.4042%" height="15" fill="rgb(221,31,9)" fg:x="896" fg:w="5"/><text x="72.6833%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="72.6758%" y="341" width="0.1617%" height="15" fill="rgb(234,198,39)" fg:x="899" fg:w="2"/><text x="72.9258%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.6758%" y="325" width="0.1617%" height="15" fill="rgb(252,145,46)" fg:x="899" fg:w="2"/><text x="72.9258%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.9184%" y="373" width="0.0808%" height="15" fill="rgb(237,149,0)" fg:x="902" fg:w="1"/><text x="73.1684%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.9992%" y="293" width="0.0808%" height="15" fill="rgb(229,65,5)" fg:x="903" fg:w="1"/><text x="73.2492%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.9992%" y="277" width="0.0808%" height="15" fill="rgb(235,60,36)" fg:x="903" fg:w="1"/><text x="73.2492%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="72.9992%" y="261" width="0.0808%" height="15" fill="rgb(222,47,18)" fg:x="903" fg:w="1"/><text x="73.2492%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="72.9992%" y="357" width="0.1617%" height="15" fill="rgb(235,114,22)" fg:x="903" fg:w="2"/><text x="73.2492%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="72.9992%" y="341" width="0.1617%" height="15" fill="rgb(209,167,11)" fg:x="903" fg:w="2"/><text x="73.2492%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="72.9992%" y="325" width="0.1617%" height="15" fill="rgb(251,73,18)" fg:x="903" fg:w="2"/><text x="73.2492%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="72.9992%" y="309" width="0.1617%" height="15" fill="rgb(217,60,17)" fg:x="903" fg:w="2"/><text x="73.2492%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="73.0800%" y="293" width="0.0808%" height="15" fill="rgb(224,36,37)" fg:x="904" fg:w="1"/><text x="73.3300%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.0800%" y="277" width="0.0808%" height="15" fill="rgb(211,21,32)" fg:x="904" fg:w="1"/><text x="73.3300%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.0800%" y="261" width="0.0808%" height="15" fill="rgb(231,55,48)" fg:x="904" fg:w="1"/><text x="73.3300%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="73.0800%" y="245" width="0.0808%" height="15" fill="rgb(227,42,18)" fg:x="904" fg:w="1"/><text x="73.3300%" y="255.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.0800%" y="229" width="0.0808%" height="15" fill="rgb(217,2,27)" fg:x="904" fg:w="1"/><text x="73.3300%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0800%" y="213" width="0.0808%" height="15" fill="rgb(251,138,23)" fg:x="904" fg:w="1"/><text x="73.3300%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.1609%" y="357" width="0.1617%" height="15" fill="rgb(226,184,11)" fg:x="905" fg:w="2"/><text x="73.4109%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.2417%" y="341" width="0.0808%" height="15" fill="rgb(242,142,12)" fg:x="906" fg:w="1"/><text x="73.4917%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.3226%" y="325" width="0.0808%" height="15" fill="rgb(234,187,18)" fg:x="907" fg:w="1"/><text x="73.5726%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="73.4842%" y="245" width="0.1617%" height="15" fill="rgb(237,44,42)" fg:x="909" fg:w="2"/><text x="73.7342%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="73.4034%" y="309" width="0.3234%" height="15" fill="rgb(211,90,23)" fg:x="908" fg:w="4"/><text x="73.6534%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="73.4034%" y="293" width="0.3234%" height="15" fill="rgb(207,81,18)" fg:x="908" fg:w="4"/><text x="73.6534%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="73.4034%" y="277" width="0.3234%" height="15" fill="rgb(222,107,28)" fg:x="908" fg:w="4"/><text x="73.6534%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="73.4034%" y="261" width="0.3234%" height="15" fill="rgb(237,83,52)" fg:x="908" fg:w="4"/><text x="73.6534%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.6459%" y="245" width="0.0808%" height="15" fill="rgb(208,67,11)" fg:x="911" fg:w="1"/><text x="73.8959%" y="255.50"></text></g><g><title>kernel::model::entity::Entity::from_value (14 samples, 1.13%)</title><rect x="72.8375%" y="453" width="1.1318%" height="15" fill="rgb(249,157,49)" fg:x="901" fg:w="14"/><text x="73.0875%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.13%)</title><rect x="72.8375%" y="437" width="1.1318%" height="15" fill="rgb(243,200,1)" fg:x="901" fg:w="14"/><text x="73.0875%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.13%)</title><rect x="72.8375%" y="421" width="1.1318%" height="15" fill="rgb(225,162,37)" fg:x="901" fg:w="14"/><text x="73.0875%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.05%)</title><rect x="72.9184%" y="405" width="1.0509%" height="15" fill="rgb(242,92,13)" fg:x="902" fg:w="13"/><text x="73.1684%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.05%)</title><rect x="72.9184%" y="389" width="1.0509%" height="15" fill="rgb(220,43,36)" fg:x="902" fg:w="13"/><text x="73.1684%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.97%)</title><rect x="72.9992%" y="373" width="0.9701%" height="15" fill="rgb(213,165,48)" fg:x="903" fg:w="12"/><text x="73.2492%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="73.3226%" y="357" width="0.6467%" height="15" fill="rgb(227,200,9)" fg:x="907" fg:w="8"/><text x="73.5726%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="73.3226%" y="341" width="0.6467%" height="15" fill="rgb(221,222,28)" fg:x="907" fg:w="8"/><text x="73.5726%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (7 samples, 0.57%)</title><rect x="73.4034%" y="325" width="0.5659%" height="15" fill="rgb(223,142,26)" fg:x="908" fg:w="7"/><text x="73.6534%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="73.7268%" y="309" width="0.2425%" height="15" fill="rgb(243,46,9)" fg:x="912" fg:w="3"/><text x="73.9768%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="73.7268%" y="293" width="0.2425%" height="15" fill="rgb(250,56,11)" fg:x="912" fg:w="3"/><text x="73.9768%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="73.8076%" y="277" width="0.1617%" height="15" fill="rgb(229,113,5)" fg:x="913" fg:w="2"/><text x="74.0576%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="73.8076%" y="261" width="0.1617%" height="15" fill="rgb(244,108,28)" fg:x="913" fg:w="2"/><text x="74.0576%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8884%" y="245" width="0.0808%" height="15" fill="rgb(242,119,50)" fg:x="914" fg:w="1"/><text x="74.1384%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.9693%" y="309" width="0.1617%" height="15" fill="rgb(224,164,23)" fg:x="915" fg:w="2"/><text x="74.2193%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.0501%" y="293" width="0.0808%" height="15" fill="rgb(214,227,44)" fg:x="916" fg:w="1"/><text x="74.3001%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0501%" y="277" width="0.0808%" height="15" fill="rgb(238,202,4)" fg:x="916" fg:w="1"/><text x="74.3001%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0501%" y="261" width="0.0808%" height="15" fill="rgb(213,190,30)" fg:x="916" fg:w="1"/><text x="74.3001%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0501%" y="245" width="0.0808%" height="15" fill="rgb(239,15,2)" fg:x="916" fg:w="1"/><text x="74.3001%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="73.9693%" y="325" width="0.2425%" height="15" fill="rgb(249,229,4)" fg:x="915" fg:w="3"/><text x="74.2193%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.1310%" y="309" width="0.0808%" height="15" fill="rgb(239,75,44)" fg:x="917" fg:w="1"/><text x="74.3810%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.1310%" y="293" width="0.0808%" height="15" fill="rgb(251,206,23)" fg:x="917" fg:w="1"/><text x="74.3810%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.1310%" y="277" width="0.0808%" height="15" fill="rgb(215,208,0)" fg:x="917" fg:w="1"/><text x="74.3810%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.2118%" y="325" width="0.0808%" height="15" fill="rgb(230,75,50)" fg:x="918" fg:w="1"/><text x="74.4618%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2118%" y="309" width="0.0808%" height="15" fill="rgb(246,180,39)" fg:x="918" fg:w="1"/><text x="74.4618%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="73.9693%" y="373" width="0.4850%" height="15" fill="rgb(249,175,24)" fg:x="915" fg:w="6"/><text x="74.2193%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="73.9693%" y="357" width="0.4850%" height="15" fill="rgb(247,176,22)" fg:x="915" fg:w="6"/><text x="74.2193%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="73.9693%" y="341" width="0.4850%" height="15" fill="rgb(241,100,24)" fg:x="915" fg:w="6"/><text x="74.2193%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.2926%" y="325" width="0.1617%" height="15" fill="rgb(233,4,35)" fg:x="919" fg:w="2"/><text x="74.5426%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.2926%" y="309" width="0.1617%" height="15" fill="rgb(211,164,46)" fg:x="919" fg:w="2"/><text x="74.5426%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.2926%" y="293" width="0.1617%" height="15" fill="rgb(242,99,53)" fg:x="919" fg:w="2"/><text x="74.5426%" y="303.50"></text></g><g><title>engine::session::Session::load_entity (71 samples, 5.74%)</title><rect x="68.7955%" y="485" width="5.7397%" height="15" fill="rgb(243,45,33)" fg:x="851" fg:w="71"/><text x="69.0455%" y="495.50">engine:..</text></g><g><title>engine::session::internal::Entities::add_persisted (32 samples, 2.59%)</title><rect x="71.9483%" y="469" width="2.5869%" height="15" fill="rgb(217,55,21)" fg:x="890" fg:w="32"/><text x="72.1983%" y="479.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.57%)</title><rect x="73.9693%" y="453" width="0.5659%" height="15" fill="rgb(245,145,46)" fg:x="915" fg:w="7"/><text x="74.2193%" y="463.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.57%)</title><rect x="73.9693%" y="437" width="0.5659%" height="15" fill="rgb(215,112,45)" fg:x="915" fg:w="7"/><text x="74.2193%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="73.9693%" y="421" width="0.5659%" height="15" fill="rgb(228,104,16)" fg:x="915" fg:w="7"/><text x="74.2193%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="73.9693%" y="405" width="0.5659%" height="15" fill="rgb(239,186,38)" fg:x="915" fg:w="7"/><text x="74.2193%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="73.9693%" y="389" width="0.5659%" height="15" fill="rgb(228,38,35)" fg:x="915" fg:w="7"/><text x="74.2193%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4543%" y="373" width="0.0808%" height="15" fill="rgb(251,42,40)" fg:x="921" fg:w="1"/><text x="74.7043%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6160%" y="389" width="0.0808%" height="15" fill="rgb(210,51,19)" fg:x="923" fg:w="1"/><text x="74.8660%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6160%" y="373" width="0.0808%" height="15" fill="rgb(236,94,42)" fg:x="923" fg:w="1"/><text x="74.8660%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6160%" y="357" width="0.0808%" height="15" fill="rgb(239,167,16)" fg:x="923" fg:w="1"/><text x="74.8660%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6160%" y="341" width="0.0808%" height="15" fill="rgb(252,175,31)" fg:x="923" fg:w="1"/><text x="74.8660%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.6160%" y="325" width="0.0808%" height="15" fill="rgb(206,166,30)" fg:x="923" fg:w="1"/><text x="74.8660%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.6160%" y="309" width="0.0808%" height="15" fill="rgb(206,209,37)" fg:x="923" fg:w="1"/><text x="74.8660%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.6160%" y="293" width="0.0808%" height="15" fill="rgb(226,91,4)" fg:x="923" fg:w="1"/><text x="74.8660%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.6160%" y="277" width="0.0808%" height="15" fill="rgb(222,167,0)" fg:x="923" fg:w="1"/><text x="74.8660%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.6160%" y="261" width="0.0808%" height="15" fill="rgb(211,70,14)" fg:x="923" fg:w="1"/><text x="74.8660%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.6160%" y="245" width="0.0808%" height="15" fill="rgb(214,84,42)" fg:x="923" fg:w="1"/><text x="74.8660%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.6160%" y="229" width="0.0808%" height="15" fill="rgb(235,157,37)" fg:x="923" fg:w="1"/><text x="74.8660%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.6160%" y="213" width="0.0808%" height="15" fill="rgb(225,13,6)" fg:x="923" fg:w="1"/><text x="74.8660%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.6160%" y="197" width="0.0808%" height="15" fill="rgb(205,202,1)" fg:x="923" fg:w="1"/><text x="74.8660%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6160%" y="181" width="0.0808%" height="15" fill="rgb(232,195,26)" fg:x="923" fg:w="1"/><text x="74.8660%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="74.5352%" y="437" width="0.2425%" height="15" fill="rgb(208,102,26)" fg:x="922" fg:w="3"/><text x="74.7852%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="74.5352%" y="421" width="0.2425%" height="15" fill="rgb(215,41,39)" fg:x="922" fg:w="3"/><text x="74.7852%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.6160%" y="405" width="0.1617%" height="15" fill="rgb(247,139,11)" fg:x="923" fg:w="2"/><text x="74.8660%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6968%" y="389" width="0.0808%" height="15" fill="rgb(243,99,6)" fg:x="924" fg:w="1"/><text x="74.9468%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.8585%" y="357" width="0.0808%" height="15" fill="rgb(230,168,48)" fg:x="926" fg:w="1"/><text x="75.1085%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="74.8585%" y="389" width="0.2425%" height="15" fill="rgb(238,227,13)" fg:x="926" fg:w="3"/><text x="75.1085%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.8585%" y="373" width="0.2425%" height="15" fill="rgb(209,109,13)" fg:x="926" fg:w="3"/><text x="75.1085%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.9394%" y="357" width="0.1617%" height="15" fill="rgb(228,195,1)" fg:x="927" fg:w="2"/><text x="75.1894%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0202%" y="341" width="0.0808%" height="15" fill="rgb(230,218,0)" fg:x="928" fg:w="1"/><text x="75.2702%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="74.7777%" y="437" width="0.4042%" height="15" fill="rgb(206,1,45)" fg:x="925" fg:w="5"/><text x="75.0277%" y="447.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="74.8585%" y="421" width="0.3234%" height="15" fill="rgb(209,124,26)" fg:x="926" fg:w="4"/><text x="75.1085%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="74.8585%" y="405" width="0.3234%" height="15" fill="rgb(220,59,8)" fg:x="926" fg:w="4"/><text x="75.1085%" y="415.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="75.1011%" y="389" width="0.0808%" height="15" fill="rgb(251,41,37)" fg:x="929" fg:w="1"/><text x="75.3511%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.1819%" y="421" width="0.0808%" height="15" fill="rgb(239,152,21)" fg:x="930" fg:w="1"/><text x="75.4319%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.1819%" y="405" width="0.0808%" height="15" fill="rgb(226,32,1)" fg:x="930" fg:w="1"/><text x="75.4319%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.1819%" y="389" width="0.0808%" height="15" fill="rgb(230,154,36)" fg:x="930" fg:w="1"/><text x="75.4319%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.1819%" y="373" width="0.0808%" height="15" fill="rgb(208,228,43)" fg:x="930" fg:w="1"/><text x="75.4319%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.1819%" y="357" width="0.0808%" height="15" fill="rgb(214,203,3)" fg:x="930" fg:w="1"/><text x="75.4319%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.1819%" y="341" width="0.0808%" height="15" fill="rgb(207,149,29)" fg:x="930" fg:w="1"/><text x="75.4319%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.1819%" y="325" width="0.0808%" height="15" fill="rgb(250,105,7)" fg:x="930" fg:w="1"/><text x="75.4319%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.1819%" y="309" width="0.0808%" height="15" fill="rgb(232,222,16)" fg:x="930" fg:w="1"/><text x="75.4319%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.1819%" y="293" width="0.0808%" height="15" fill="rgb(209,32,24)" fg:x="930" fg:w="1"/><text x="75.4319%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.1819%" y="277" width="0.0808%" height="15" fill="rgb(225,13,6)" fg:x="930" fg:w="1"/><text x="75.4319%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.1819%" y="261" width="0.0808%" height="15" fill="rgb(245,226,26)" fg:x="930" fg:w="1"/><text x="75.4319%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1819%" y="245" width="0.0808%" height="15" fill="rgb(229,178,27)" fg:x="930" fg:w="1"/><text x="75.4319%" y="255.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="75.1819%" y="437" width="0.1617%" height="15" fill="rgb(205,227,28)" fg:x="930" fg:w="2"/><text x="75.4319%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2627%" y="421" width="0.0808%" height="15" fill="rgb(210,191,45)" fg:x="931" fg:w="1"/><text x="75.5127%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2627%" y="405" width="0.0808%" height="15" fill="rgb(206,124,16)" fg:x="931" fg:w="1"/><text x="75.5127%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="75.2627%" y="389" width="0.0808%" height="15" fill="rgb(210,162,0)" fg:x="931" fg:w="1"/><text x="75.5127%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8286%" y="357" width="0.0808%" height="15" fill="rgb(211,54,38)" fg:x="938" fg:w="1"/><text x="76.0786%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8286%" y="341" width="0.0808%" height="15" fill="rgb(248,192,3)" fg:x="938" fg:w="1"/><text x="76.0786%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="75.9095%" y="341" width="0.1617%" height="15" fill="rgb(233,187,18)" fg:x="939" fg:w="2"/><text x="76.1595%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="75.9095%" y="325" width="0.1617%" height="15" fill="rgb(237,208,14)" fg:x="939" fg:w="2"/><text x="76.1595%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="75.9095%" y="309" width="0.1617%" height="15" fill="rgb(212,77,1)" fg:x="939" fg:w="2"/><text x="76.1595%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="75.9095%" y="293" width="0.1617%" height="15" fill="rgb(210,163,22)" fg:x="939" fg:w="2"/><text x="76.1595%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.1520%" y="309" width="0.0808%" height="15" fill="rgb(250,58,28)" fg:x="942" fg:w="1"/><text x="76.4020%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.1520%" y="293" width="0.0808%" height="15" fill="rgb(254,28,41)" fg:x="942" fg:w="1"/><text x="76.4020%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1520%" y="277" width="0.0808%" height="15" fill="rgb(237,162,36)" fg:x="942" fg:w="1"/><text x="76.4020%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.3945%" y="261" width="0.0808%" height="15" fill="rgb(232,56,6)" fg:x="945" fg:w="1"/><text x="76.6445%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.3945%" y="245" width="0.0808%" height="15" fill="rgb(216,127,42)" fg:x="945" fg:w="1"/><text x="76.6445%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.5562%" y="213" width="0.0808%" height="15" fill="rgb(241,69,15)" fg:x="947" fg:w="1"/><text x="76.8062%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.5562%" y="197" width="0.0808%" height="15" fill="rgb(227,180,19)" fg:x="947" fg:w="1"/><text x="76.8062%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="76.0711%" y="325" width="0.6467%" height="15" fill="rgb(231,188,29)" fg:x="941" fg:w="8"/><text x="76.3211%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (6 samples, 0.49%)</title><rect x="76.2328%" y="309" width="0.4850%" height="15" fill="rgb(224,176,27)" fg:x="943" fg:w="6"/><text x="76.4828%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="76.3137%" y="293" width="0.4042%" height="15" fill="rgb(249,214,19)" fg:x="944" fg:w="5"/><text x="76.5637%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="76.3137%" y="277" width="0.4042%" height="15" fill="rgb(240,0,4)" fg:x="944" fg:w="5"/><text x="76.5637%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="76.4753%" y="261" width="0.2425%" height="15" fill="rgb(233,28,41)" fg:x="946" fg:w="3"/><text x="76.7253%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.4753%" y="245" width="0.2425%" height="15" fill="rgb(220,90,51)" fg:x="946" fg:w="3"/><text x="76.7253%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.4753%" y="229" width="0.2425%" height="15" fill="rgb(250,52,22)" fg:x="946" fg:w="3"/><text x="76.7253%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6370%" y="213" width="0.0808%" height="15" fill="rgb(231,152,36)" fg:x="948" fg:w="1"/><text x="76.8870%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (14 samples, 1.13%)</title><rect x="75.6669%" y="389" width="1.1318%" height="15" fill="rgb(250,218,4)" fg:x="936" fg:w="14"/><text x="75.9169%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.13%)</title><rect x="75.6669%" y="373" width="1.1318%" height="15" fill="rgb(210,38,21)" fg:x="936" fg:w="14"/><text x="75.9169%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.89%)</title><rect x="75.9095%" y="357" width="0.8892%" height="15" fill="rgb(230,75,13)" fg:x="939" fg:w="11"/><text x="76.1595%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="76.0711%" y="341" width="0.7276%" height="15" fill="rgb(250,68,53)" fg:x="941" fg:w="9"/><text x="76.3211%" y="351.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="76.7179%" y="325" width="0.0808%" height="15" fill="rgb(250,210,16)" fg:x="949" fg:w="1"/><text x="76.9679%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.8795%" y="357" width="0.0808%" height="15" fill="rgb(240,132,5)" fg:x="951" fg:w="1"/><text x="77.1295%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.8795%" y="341" width="0.0808%" height="15" fill="rgb(222,148,48)" fg:x="951" fg:w="1"/><text x="77.1295%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.9604%" y="357" width="0.0808%" height="15" fill="rgb(247,181,24)" fg:x="952" fg:w="1"/><text x="77.2104%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (23 samples, 1.86%)</title><rect x="75.3436%" y="437" width="1.8593%" height="15" fill="rgb(239,5,31)" fg:x="932" fg:w="23"/><text x="75.5936%" y="447.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (22 samples, 1.78%)</title><rect x="75.4244%" y="421" width="1.7785%" height="15" fill="rgb(241,152,38)" fg:x="933" fg:w="22"/><text x="75.6744%" y="431.50">s..</text></g><g><title>serde_json::value::de::visit_object (22 samples, 1.78%)</title><rect x="75.4244%" y="405" width="1.7785%" height="15" fill="rgb(246,200,37)" fg:x="933" fg:w="22"/><text x="75.6744%" y="415.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="76.7987%" y="389" width="0.4042%" height="15" fill="rgb(243,210,26)" fg:x="950" fg:w="5"/><text x="77.0487%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="76.7987%" y="373" width="0.4042%" height="15" fill="rgb(222,22,22)" fg:x="950" fg:w="5"/><text x="77.0487%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="77.0412%" y="357" width="0.1617%" height="15" fill="rgb(208,129,28)" fg:x="953" fg:w="2"/><text x="77.2912%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="77.0412%" y="341" width="0.1617%" height="15" fill="rgb(254,169,28)" fg:x="953" fg:w="2"/><text x="77.2912%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="77.0412%" y="325" width="0.1617%" height="15" fill="rgb(225,45,17)" fg:x="953" fg:w="2"/><text x="77.2912%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="77.3646%" y="325" width="0.4042%" height="15" fill="rgb(232,199,2)" fg:x="957" fg:w="5"/><text x="77.6146%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="77.3646%" y="309" width="0.4042%" height="15" fill="rgb(235,33,40)" fg:x="957" fg:w="5"/><text x="77.6146%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="77.4454%" y="293" width="0.3234%" height="15" fill="rgb(237,89,50)" fg:x="958" fg:w="4"/><text x="77.6954%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="77.4454%" y="277" width="0.3234%" height="15" fill="rgb(238,126,5)" fg:x="958" fg:w="4"/><text x="77.6954%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.5263%" y="261" width="0.2425%" height="15" fill="rgb(247,214,42)" fg:x="959" fg:w="3"/><text x="77.7763%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.6071%" y="245" width="0.1617%" height="15" fill="rgb(238,60,45)" fg:x="960" fg:w="2"/><text x="77.8571%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.6880%" y="229" width="0.0808%" height="15" fill="rgb(225,69,44)" fg:x="961" fg:w="1"/><text x="77.9380%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6880%" y="213" width="0.0808%" height="15" fill="rgb(241,13,44)" fg:x="961" fg:w="1"/><text x="77.9380%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="77.3646%" y="341" width="0.4850%" height="15" fill="rgb(227,121,22)" fg:x="957" fg:w="6"/><text x="77.6146%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7688%" y="325" width="0.0808%" height="15" fill="rgb(231,160,23)" fg:x="962" fg:w="1"/><text x="78.0188%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8496%" y="309" width="0.0808%" height="15" fill="rgb(250,179,43)" fg:x="963" fg:w="1"/><text x="78.0996%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="77.2838%" y="373" width="0.7276%" height="15" fill="rgb(233,54,46)" fg:x="956" fg:w="9"/><text x="77.5338%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="77.3646%" y="357" width="0.6467%" height="15" fill="rgb(247,120,42)" fg:x="957" fg:w="8"/><text x="77.6146%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.8496%" y="341" width="0.1617%" height="15" fill="rgb(221,219,12)" fg:x="963" fg:w="2"/><text x="78.0996%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.8496%" y="325" width="0.1617%" height="15" fill="rgb(211,126,8)" fg:x="963" fg:w="2"/><text x="78.0996%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="77.9305%" y="309" width="0.0808%" height="15" fill="rgb(218,154,33)" fg:x="964" fg:w="1"/><text x="78.1805%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="77.9305%" y="293" width="0.0808%" height="15" fill="rgb(212,199,16)" fg:x="964" fg:w="1"/><text x="78.1805%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="78.0113%" y="357" width="0.0808%" height="15" fill="rgb(236,215,46)" fg:x="965" fg:w="1"/><text x="78.2613%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (45 samples, 3.64%)</title><rect x="74.5352%" y="453" width="3.6378%" height="15" fill="rgb(232,32,22)" fg:x="922" fg:w="45"/><text x="74.7852%" y="463.50">engi..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.97%)</title><rect x="77.2029%" y="437" width="0.9701%" height="15" fill="rgb(234,79,15)" fg:x="955" fg:w="12"/><text x="77.4529%" y="447.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.97%)</title><rect x="77.2029%" y="421" width="0.9701%" height="15" fill="rgb(235,187,47)" fg:x="955" fg:w="12"/><text x="77.4529%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="77.2029%" y="405" width="0.9701%" height="15" fill="rgb(244,69,37)" fg:x="955" fg:w="12"/><text x="77.4529%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="77.2838%" y="389" width="0.8892%" height="15" fill="rgb(249,140,25)" fg:x="956" fg:w="11"/><text x="77.5338%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="78.0113%" y="373" width="0.1617%" height="15" fill="rgb(213,69,8)" fg:x="965" fg:w="2"/><text x="78.2613%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0922%" y="357" width="0.0808%" height="15" fill="rgb(220,136,2)" fg:x="966" fg:w="1"/><text x="78.3422%" y="367.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (185 samples, 14.96%)</title><rect x="63.2983%" y="517" width="14.9555%" height="15" fill="rgb(237,50,36)" fg:x="783" fg:w="185"/><text x="63.5483%" y="527.50">engine::session::Sessio..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (185 samples, 14.96%)</title><rect x="63.2983%" y="501" width="14.9555%" height="15" fill="rgb(226,18,11)" fg:x="783" fg:w="185"/><text x="63.5483%" y="511.50">engine::session::Sessio..</text></g><g><title>kernel::model::EntityPtrResolver::world (46 samples, 3.72%)</title><rect x="74.5352%" y="485" width="3.7187%" height="15" fill="rgb(243,156,2)" fg:x="922" fg:w="46"/><text x="74.7852%" y="495.50">kern..</text></g><g><title>engine::session::Session::load_entity (46 samples, 3.72%)</title><rect x="74.5352%" y="469" width="3.7187%" height="15" fill="rgb(218,8,34)" fg:x="922" fg:w="46"/><text x="74.7852%" y="479.50">engi..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="78.1730%" y="453" width="0.0808%" height="15" fill="rgb(250,94,35)" fg:x="967" fg:w="1"/><text x="78.4230%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.1730%" y="437" width="0.0808%" height="15" fill="rgb(229,127,21)" fg:x="967" fg:w="1"/><text x="78.4230%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (969 samples, 78.33%)</title><rect x="0.0000%" y="565" width="78.3347%" height="15" fill="rgb(234,49,5)" fg:x="0" fg:w="969"/><text x="0.2500%" y="575.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (969 samples, 78.33%)</title><rect x="0.0000%" y="549" width="78.3347%" height="15" fill="rgb(248,12,16)" fg:x="0" fg:w="969"/><text x="0.2500%" y="559.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (969 samples, 78.33%)</title><rect x="0.0000%" y="533" width="78.3347%" height="15" fill="rgb(208,220,31)" fg:x="0" fg:w="969"/><text x="0.2500%" y="543.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="78.2538%" y="517" width="0.0808%" height="15" fill="rgb(243,184,0)" fg:x="968" fg:w="1"/><text x="78.5038%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="78.2538%" y="501" width="0.0808%" height="15" fill="rgb(217,38,21)" fg:x="968" fg:w="1"/><text x="78.5038%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.2538%" y="485" width="0.0808%" height="15" fill="rgb(239,120,45)" fg:x="968" fg:w="1"/><text x="78.5038%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.2538%" y="469" width="0.0808%" height="15" fill="rgb(235,33,2)" fg:x="968" fg:w="1"/><text x="78.5038%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="78.3347%" y="501" width="0.0808%" height="15" fill="rgb(249,161,5)" fg:x="969" fg:w="1"/><text x="78.5847%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.3347%" y="485" width="0.0808%" height="15" fill="rgb(250,165,48)" fg:x="969" fg:w="1"/><text x="78.5847%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4964%" y="357" width="0.0808%" height="15" fill="rgb(221,23,45)" fg:x="971" fg:w="1"/><text x="78.7464%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="78.4964%" y="373" width="0.1617%" height="15" fill="rgb(217,108,46)" fg:x="971" fg:w="2"/><text x="78.7464%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.5772%" y="357" width="0.0808%" height="15" fill="rgb(254,26,35)" fg:x="972" fg:w="1"/><text x="78.8272%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6580%" y="373" width="0.0808%" height="15" fill="rgb(218,223,28)" fg:x="973" fg:w="1"/><text x="78.9080%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="78.4155%" y="437" width="0.4850%" height="15" fill="rgb(242,27,47)" fg:x="970" fg:w="6"/><text x="78.6655%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="78.4155%" y="421" width="0.4850%" height="15" fill="rgb(218,39,35)" fg:x="970" fg:w="6"/><text x="78.6655%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="78.4155%" y="405" width="0.4850%" height="15" fill="rgb(232,127,16)" fg:x="970" fg:w="6"/><text x="78.6655%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.4964%" y="389" width="0.4042%" height="15" fill="rgb(231,219,51)" fg:x="971" fg:w="5"/><text x="78.7464%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.7389%" y="373" width="0.1617%" height="15" fill="rgb(217,220,46)" fg:x="974" fg:w="2"/><text x="78.9889%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8197%" y="357" width="0.0808%" height="15" fill="rgb(230,75,1)" fg:x="975" fg:w="1"/><text x="79.0697%" y="367.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="78.9814%" y="405" width="0.3234%" height="15" fill="rgb(218,2,8)" fg:x="977" fg:w="4"/><text x="79.2314%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="79.3048%" y="405" width="0.1617%" height="15" fill="rgb(206,111,30)" fg:x="981" fg:w="2"/><text x="79.5548%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3856%" y="389" width="0.0808%" height="15" fill="rgb(209,135,6)" fg:x="982" fg:w="1"/><text x="79.6356%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="79.4665%" y="373" width="0.1617%" height="15" fill="rgb(205,169,10)" fg:x="983" fg:w="2"/><text x="79.7165%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.6281%" y="357" width="0.0808%" height="15" fill="rgb(212,204,38)" fg:x="985" fg:w="1"/><text x="79.8781%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="79.4665%" y="389" width="0.3234%" height="15" fill="rgb(205,199,14)" fg:x="983" fg:w="4"/><text x="79.7165%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.6281%" y="373" width="0.1617%" height="15" fill="rgb(212,4,6)" fg:x="985" fg:w="2"/><text x="79.8781%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.7090%" y="357" width="0.0808%" height="15" fill="rgb(250,15,10)" fg:x="986" fg:w="1"/><text x="79.9590%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.7090%" y="341" width="0.0808%" height="15" fill="rgb(212,49,51)" fg:x="986" fg:w="1"/><text x="79.9590%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7090%" y="325" width="0.0808%" height="15" fill="rgb(235,21,9)" fg:x="986" fg:w="1"/><text x="79.9590%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7898%" y="373" width="0.0808%" height="15" fill="rgb(251,31,32)" fg:x="987" fg:w="1"/><text x="80.0398%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.13%)</title><rect x="78.9006%" y="437" width="1.1318%" height="15" fill="rgb(246,23,9)" fg:x="976" fg:w="14"/><text x="79.1506%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.13%)</title><rect x="78.9006%" y="421" width="1.1318%" height="15" fill="rgb(225,216,14)" fg:x="976" fg:w="14"/><text x="79.1506%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="79.4665%" y="405" width="0.5659%" height="15" fill="rgb(215,200,26)" fg:x="983" fg:w="7"/><text x="79.7165%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.7898%" y="389" width="0.2425%" height="15" fill="rgb(237,130,47)" fg:x="987" fg:w="3"/><text x="80.0398%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="79.8707%" y="373" width="0.1617%" height="15" fill="rgb(247,74,14)" fg:x="988" fg:w="2"/><text x="80.1207%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9515%" y="357" width="0.0808%" height="15" fill="rgb(254,97,46)" fg:x="989" fg:w="1"/><text x="80.2015%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.78%)</title><rect x="78.4155%" y="453" width="1.7785%" height="15" fill="rgb(234,191,1)" fg:x="970" fg:w="22"/><text x="78.6655%" y="463.50">&lt;..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="80.0323%" y="437" width="0.1617%" height="15" fill="rgb(215,165,14)" fg:x="990" fg:w="2"/><text x="80.2823%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.94%)</title><rect x="78.3347%" y="517" width="1.9402%" height="15" fill="rgb(230,182,6)" fg:x="969" fg:w="24"/><text x="78.5847%" y="527.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (23 samples, 1.86%)</title><rect x="78.4155%" y="501" width="1.8593%" height="15" fill="rgb(210,127,39)" fg:x="970" fg:w="23"/><text x="78.6655%" y="511.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.86%)</title><rect x="78.4155%" y="485" width="1.8593%" height="15" fill="rgb(223,212,51)" fg:x="970" fg:w="23"/><text x="78.6655%" y="495.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (23 samples, 1.86%)</title><rect x="78.4155%" y="469" width="1.8593%" height="15" fill="rgb(226,176,43)" fg:x="970" fg:w="23"/><text x="78.6655%" y="479.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1940%" y="453" width="0.0808%" height="15" fill="rgb(222,155,4)" fg:x="992" fg:w="1"/><text x="80.4440%" y="463.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="80.5174%" y="357" width="0.0808%" height="15" fill="rgb(215,149,7)" fg:x="996" fg:w="1"/><text x="80.7674%" y="367.50"></text></g><g><title>engine::session::Session::initialize (7 samples, 0.57%)</title><rect x="80.3557%" y="469" width="0.5659%" height="15" fill="rgb(252,199,23)" fg:x="994" fg:w="7"/><text x="80.6057%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.57%)</title><rect x="80.3557%" y="453" width="0.5659%" height="15" fill="rgb(245,52,29)" fg:x="994" fg:w="7"/><text x="80.6057%" y="463.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.57%)</title><rect x="80.3557%" y="437" width="0.5659%" height="15" fill="rgb(221,228,19)" fg:x="994" fg:w="7"/><text x="80.6057%" y="447.50"></text></g><g><title>libloading::safe::Library::new (7 samples, 0.57%)</title><rect x="80.3557%" y="421" width="0.5659%" height="15" fill="rgb(253,101,6)" fg:x="994" fg:w="7"/><text x="80.6057%" y="431.50"></text></g><g><title>dlopen (7 samples, 0.57%)</title><rect x="80.3557%" y="405" width="0.5659%" height="15" fill="rgb(211,130,8)" fg:x="994" fg:w="7"/><text x="80.6057%" y="415.50"></text></g><g><title>_dl_catch_error (7 samples, 0.57%)</title><rect x="80.3557%" y="389" width="0.5659%" height="15" fill="rgb(238,37,53)" fg:x="994" fg:w="7"/><text x="80.6057%" y="399.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.57%)</title><rect x="80.3557%" y="373" width="0.5659%" height="15" fill="rgb(235,145,5)" fg:x="994" fg:w="7"/><text x="80.6057%" y="383.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="80.5982%" y="357" width="0.3234%" height="15" fill="rgb(244,12,43)" fg:x="997" fg:w="4"/><text x="80.8482%" y="367.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="80.5982%" y="341" width="0.3234%" height="15" fill="rgb(246,195,24)" fg:x="997" fg:w="4"/><text x="80.8482%" y="351.50"></text></g><g><title>&lt;plugins_core::building::BuildingPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="80.9216%" y="437" width="0.0808%" height="15" fill="rgb(235,163,6)" fg:x="1001" fg:w="1"/><text x="81.1716%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::parser::PutInsideActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="81.0024%" y="437" width="0.0808%" height="15" fill="rgb(236,218,17)" fg:x="1002" fg:w="1"/><text x="81.2524%" y="447.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (11 samples, 0.89%)</title><rect x="80.2749%" y="517" width="0.8892%" height="15" fill="rgb(235,12,38)" fg:x="993" fg:w="11"/><text x="80.5249%" y="527.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (11 samples, 0.89%)</title><rect x="80.2749%" y="501" width="0.8892%" height="15" fill="rgb(225,195,33)" fg:x="993" fg:w="11"/><text x="80.5249%" y="511.50"></text></g><g><title>engine::session::Session::new (11 samples, 0.89%)</title><rect x="80.2749%" y="485" width="0.8892%" height="15" fill="rgb(238,54,35)" fg:x="993" fg:w="11"/><text x="80.5249%" y="495.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="80.9216%" y="469" width="0.2425%" height="15" fill="rgb(238,33,7)" fg:x="1001" fg:w="3"/><text x="81.1716%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="80.9216%" y="453" width="0.2425%" height="15" fill="rgb(245,5,14)" fg:x="1001" fg:w="3"/><text x="81.1716%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.0833%" y="437" width="0.0808%" height="15" fill="rgb(251,95,31)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.0833%" y="421" width="0.0808%" height="15" fill="rgb(222,15,46)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.1641%" y="501" width="0.0808%" height="15" fill="rgb(226,182,24)" fg:x="1004" fg:w="1"/><text x="81.4141%" y="511.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="81.2449%" y="485" width="0.0808%" height="15" fill="rgb(229,105,41)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="495.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="81.2449%" y="469" width="0.0808%" height="15" fill="rgb(216,99,53)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="479.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="81.2449%" y="453" width="0.0808%" height="15" fill="rgb(253,26,20)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="463.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="81.2449%" y="437" width="0.0808%" height="15" fill="rgb(249,155,28)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="447.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="81.2449%" y="421" width="0.0808%" height="15" fill="rgb(241,221,2)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="81.2449%" y="405" width="0.0808%" height="15" fill="rgb(219,124,6)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="415.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="81.2449%" y="389" width="0.0808%" height="15" fill="rgb(233,37,6)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="399.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="81.2449%" y="373" width="0.0808%" height="15" fill="rgb(238,20,14)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.3258%" y="373" width="0.0808%" height="15" fill="rgb(232,106,27)" fg:x="1006" fg:w="1"/><text x="81.5758%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3258%" y="357" width="0.0808%" height="15" fill="rgb(246,157,24)" fg:x="1006" fg:w="1"/><text x="81.5758%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.3258%" y="341" width="0.0808%" height="15" fill="rgb(214,153,10)" fg:x="1006" fg:w="1"/><text x="81.5758%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.4066%" y="373" width="0.1617%" height="15" fill="rgb(212,94,6)" fg:x="1007" fg:w="2"/><text x="81.6566%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.4875%" y="357" width="0.0808%" height="15" fill="rgb(254,25,27)" fg:x="1008" fg:w="1"/><text x="81.7375%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.4875%" y="341" width="0.0808%" height="15" fill="rgb(250,43,52)" fg:x="1008" fg:w="1"/><text x="81.7375%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.4875%" y="325" width="0.0808%" height="15" fill="rgb(221,226,40)" fg:x="1008" fg:w="1"/><text x="81.7375%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.6492%" y="357" width="0.0808%" height="15" fill="rgb(235,162,34)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6492%" y="341" width="0.0808%" height="15" fill="rgb(239,24,26)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6492%" y="325" width="0.0808%" height="15" fill="rgb(244,226,11)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6492%" y="309" width="0.0808%" height="15" fill="rgb(225,23,10)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6492%" y="293" width="0.0808%" height="15" fill="rgb(249,125,6)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.6492%" y="277" width="0.0808%" height="15" fill="rgb(246,212,12)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.6492%" y="261" width="0.0808%" height="15" fill="rgb(230,43,32)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.6492%" y="245" width="0.0808%" height="15" fill="rgb(210,95,23)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="255.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.7300%" y="357" width="0.1617%" height="15" fill="rgb(229,103,33)" fg:x="1011" fg:w="2"/><text x="81.9800%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.8108%" y="341" width="0.0808%" height="15" fill="rgb(222,104,27)" fg:x="1012" fg:w="1"/><text x="82.0608%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.8108%" y="325" width="0.0808%" height="15" fill="rgb(239,221,23)" fg:x="1012" fg:w="1"/><text x="82.0608%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.8108%" y="309" width="0.0808%" height="15" fill="rgb(222,98,21)" fg:x="1012" fg:w="1"/><text x="82.0608%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.8917%" y="341" width="0.0808%" height="15" fill="rgb(231,101,20)" fg:x="1013" fg:w="1"/><text x="82.1417%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.9725%" y="341" width="0.0808%" height="15" fill="rgb(215,150,22)" fg:x="1014" fg:w="1"/><text x="82.2225%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.9725%" y="325" width="0.0808%" height="15" fill="rgb(248,3,34)" fg:x="1014" fg:w="1"/><text x="82.2225%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.9725%" y="309" width="0.0808%" height="15" fill="rgb(220,141,21)" fg:x="1014" fg:w="1"/><text x="82.2225%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.9725%" y="293" width="0.0808%" height="15" fill="rgb(223,41,48)" fg:x="1014" fg:w="1"/><text x="82.2225%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.9725%" y="277" width="0.0808%" height="15" fill="rgb(247,12,5)" fg:x="1014" fg:w="1"/><text x="82.2225%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.9725%" y="261" width="0.0808%" height="15" fill="rgb(206,173,10)" fg:x="1014" fg:w="1"/><text x="82.2225%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.9725%" y="245" width="0.0808%" height="15" fill="rgb(233,214,37)" fg:x="1014" fg:w="1"/><text x="82.2225%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="81.3258%" y="389" width="0.8084%" height="15" fill="rgb(238,86,43)" fg:x="1006" fg:w="10"/><text x="81.5758%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="81.5683%" y="373" width="0.5659%" height="15" fill="rgb(212,182,8)" fg:x="1009" fg:w="7"/><text x="81.8183%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.8917%" y="357" width="0.2425%" height="15" fill="rgb(240,91,47)" fg:x="1013" fg:w="3"/><text x="82.1417%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.0534%" y="341" width="0.0808%" height="15" fill="rgb(209,138,26)" fg:x="1015" fg:w="1"/><text x="82.3034%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.0534%" y="325" width="0.0808%" height="15" fill="rgb(231,163,20)" fg:x="1015" fg:w="1"/><text x="82.3034%" y="335.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.89%)</title><rect x="81.3258%" y="405" width="0.8892%" height="15" fill="rgb(214,91,54)" fg:x="1006" fg:w="11"/><text x="81.5758%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.1342%" y="389" width="0.0808%" height="15" fill="rgb(230,32,17)" fg:x="1016" fg:w="1"/><text x="82.3842%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.1342%" y="373" width="0.0808%" height="15" fill="rgb(231,34,34)" fg:x="1016" fg:w="1"/><text x="82.3842%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.1342%" y="357" width="0.0808%" height="15" fill="rgb(224,228,27)" fg:x="1016" fg:w="1"/><text x="82.3842%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.1342%" y="341" width="0.0808%" height="15" fill="rgb(219,35,40)" fg:x="1016" fg:w="1"/><text x="82.3842%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.1342%" y="325" width="0.0808%" height="15" fill="rgb(234,42,8)" fg:x="1016" fg:w="1"/><text x="82.3842%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1342%" y="309" width="0.0808%" height="15" fill="rgb(226,75,22)" fg:x="1016" fg:w="1"/><text x="82.3842%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.2959%" y="341" width="0.0808%" height="15" fill="rgb(242,203,28)" fg:x="1018" fg:w="1"/><text x="82.5459%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="82.3767%" y="325" width="0.1617%" height="15" fill="rgb(221,3,9)" fg:x="1019" fg:w="2"/><text x="82.6267%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="82.5384%" y="325" width="0.0808%" height="15" fill="rgb(214,34,31)" fg:x="1021" fg:w="1"/><text x="82.7884%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.5384%" y="309" width="0.0808%" height="15" fill="rgb(252,119,15)" fg:x="1021" fg:w="1"/><text x="82.7884%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5384%" y="293" width="0.0808%" height="15" fill="rgb(244,224,31)" fg:x="1021" fg:w="1"/><text x="82.7884%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="82.2150%" y="405" width="0.4850%" height="15" fill="rgb(215,8,51)" fg:x="1017" fg:w="6"/><text x="82.4650%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.49%)</title><rect x="82.2150%" y="389" width="0.4850%" height="15" fill="rgb(207,24,1)" fg:x="1017" fg:w="6"/><text x="82.4650%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="82.2150%" y="373" width="0.4850%" height="15" fill="rgb(245,90,0)" fg:x="1017" fg:w="6"/><text x="82.4650%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="82.2959%" y="357" width="0.4042%" height="15" fill="rgb(246,43,48)" fg:x="1018" fg:w="5"/><text x="82.5459%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="82.3767%" y="341" width="0.3234%" height="15" fill="rgb(252,218,10)" fg:x="1019" fg:w="4"/><text x="82.6267%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6192%" y="325" width="0.0808%" height="15" fill="rgb(231,24,35)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6192%" y="309" width="0.0808%" height="15" fill="rgb(225,66,19)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7001%" y="357" width="0.0808%" height="15" fill="rgb(214,96,51)" fg:x="1023" fg:w="1"/><text x="82.9501%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7001%" y="341" width="0.0808%" height="15" fill="rgb(251,151,47)" fg:x="1023" fg:w="1"/><text x="82.9501%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.8618%" y="325" width="0.0808%" height="15" fill="rgb(236,79,14)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.9426%" y="309" width="0.0808%" height="15" fill="rgb(210,205,11)" fg:x="1026" fg:w="1"/><text x="83.1926%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9426%" y="293" width="0.0808%" height="15" fill="rgb(233,142,53)" fg:x="1026" fg:w="1"/><text x="83.1926%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.0234%" y="261" width="0.0808%" height="15" fill="rgb(212,116,48)" fg:x="1027" fg:w="1"/><text x="83.2734%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="83.1043%" y="261" width="0.0808%" height="15" fill="rgb(234,55,33)" fg:x="1028" fg:w="1"/><text x="83.3543%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.2660%" y="245" width="0.1617%" height="15" fill="rgb(253,92,27)" fg:x="1030" fg:w="2"/><text x="83.5160%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3468%" y="229" width="0.0808%" height="15" fill="rgb(220,7,35)" fg:x="1031" fg:w="1"/><text x="83.5968%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3468%" y="213" width="0.0808%" height="15" fill="rgb(246,124,6)" fg:x="1031" fg:w="1"/><text x="83.5968%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="83.0234%" y="293" width="0.4850%" height="15" fill="rgb(212,111,51)" fg:x="1027" fg:w="6"/><text x="83.2734%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="83.0234%" y="277" width="0.4850%" height="15" fill="rgb(253,116,7)" fg:x="1027" fg:w="6"/><text x="83.2734%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="83.1851%" y="261" width="0.3234%" height="15" fill="rgb(213,145,18)" fg:x="1029" fg:w="4"/><text x="83.4351%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4276%" y="245" width="0.0808%" height="15" fill="rgb(219,149,7)" fg:x="1032" fg:w="1"/><text x="83.6776%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="82.9426%" y="325" width="0.6467%" height="15" fill="rgb(225,156,20)" fg:x="1026" fg:w="8"/><text x="83.1926%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="83.0234%" y="309" width="0.5659%" height="15" fill="rgb(211,98,19)" fg:x="1027" fg:w="7"/><text x="83.2734%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5085%" y="293" width="0.0808%" height="15" fill="rgb(231,192,31)" fg:x="1033" fg:w="1"/><text x="83.7585%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.81%)</title><rect x="82.8618%" y="341" width="0.8084%" height="15" fill="rgb(249,95,19)" fg:x="1025" fg:w="10"/><text x="83.1118%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="83.5893%" y="325" width="0.0808%" height="15" fill="rgb(247,101,36)" fg:x="1034" fg:w="1"/><text x="83.8393%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5893%" y="309" width="0.0808%" height="15" fill="rgb(221,45,43)" fg:x="1034" fg:w="1"/><text x="83.8393%" y="319.50"></text></g><g><title>engine::session::Session::flush (32 samples, 2.59%)</title><rect x="81.2449%" y="501" width="2.5869%" height="15" fill="rgb(220,42,1)" fg:x="1005" fg:w="32"/><text x="81.4949%" y="511.50">en..</text></g><g><title>engine::session::state::State::close (31 samples, 2.51%)</title><rect x="81.3258%" y="485" width="2.5061%" height="15" fill="rgb(236,19,24)" fg:x="1006" fg:w="31"/><text x="81.5758%" y="495.50">en..</text></g><g><title>engine::session::state::State::flush_entities (31 samples, 2.51%)</title><rect x="81.3258%" y="469" width="2.5061%" height="15" fill="rgb(225,192,6)" fg:x="1006" fg:w="31"/><text x="81.5758%" y="479.50">en..</text></g><g><title>core::iter::adapters::try_process (31 samples, 2.51%)</title><rect x="81.3258%" y="453" width="2.5061%" height="15" fill="rgb(242,30,19)" fg:x="1006" fg:w="31"/><text x="81.5758%" y="463.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 2.51%)</title><rect x="81.3258%" y="437" width="2.5061%" height="15" fill="rgb(240,36,6)" fg:x="1006" fg:w="31"/><text x="81.5758%" y="447.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (31 samples, 2.51%)</title><rect x="81.3258%" y="421" width="2.5061%" height="15" fill="rgb(246,40,28)" fg:x="1006" fg:w="31"/><text x="81.5758%" y="431.50">en..</text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.13%)</title><rect x="82.7001%" y="405" width="1.1318%" height="15" fill="rgb(225,155,33)" fg:x="1023" fg:w="14"/><text x="82.9501%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.13%)</title><rect x="82.7001%" y="389" width="1.1318%" height="15" fill="rgb(240,65,18)" fg:x="1023" fg:w="14"/><text x="82.9501%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.13%)</title><rect x="82.7001%" y="373" width="1.1318%" height="15" fill="rgb(217,0,48)" fg:x="1023" fg:w="14"/><text x="82.9501%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.05%)</title><rect x="82.7809%" y="357" width="1.0509%" height="15" fill="rgb(217,80,15)" fg:x="1024" fg:w="13"/><text x="83.0309%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.6702%" y="341" width="0.1617%" height="15" fill="rgb(253,43,51)" fg:x="1035" fg:w="2"/><text x="83.9202%" y="351.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="83.8319%" y="501" width="0.0808%" height="15" fill="rgb(246,60,4)" fg:x="1037" fg:w="1"/><text x="84.0819%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="83.8319%" y="485" width="0.0808%" height="15" fill="rgb(230,40,54)" fg:x="1037" fg:w="1"/><text x="84.0819%" y="495.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.8319%" y="469" width="0.0808%" height="15" fill="rgb(208,20,44)" fg:x="1037" fg:w="1"/><text x="84.0819%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.8319%" y="453" width="0.0808%" height="15" fill="rgb(230,22,22)" fg:x="1037" fg:w="1"/><text x="84.0819%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.8319%" y="437" width="0.0808%" height="15" fill="rgb(207,57,4)" fg:x="1037" fg:w="1"/><text x="84.0819%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.8319%" y="421" width="0.0808%" height="15" fill="rgb(242,130,33)" fg:x="1037" fg:w="1"/><text x="84.0819%" y="431.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="83.8319%" y="405" width="0.0808%" height="15" fill="rgb(218,66,43)" fg:x="1037" fg:w="1"/><text x="84.0819%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.8319%" y="389" width="0.0808%" height="15" fill="rgb(236,105,16)" fg:x="1037" fg:w="1"/><text x="84.0819%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.8319%" y="373" width="0.0808%" height="15" fill="rgb(230,46,15)" fg:x="1037" fg:w="1"/><text x="84.0819%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9935%" y="485" width="0.0808%" height="15" fill="rgb(251,172,40)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9935%" y="469" width="0.0808%" height="15" fill="rgb(225,217,32)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.9935%" y="453" width="0.0808%" height="15" fill="rgb(243,10,29)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.9935%" y="437" width="0.0808%" height="15" fill="rgb(207,102,10)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.9935%" y="421" width="0.0808%" height="15" fill="rgb(241,125,5)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.9935%" y="405" width="0.0808%" height="15" fill="rgb(230,125,29)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.9935%" y="389" width="0.0808%" height="15" fill="rgb(223,65,44)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.9935%" y="373" width="0.0808%" height="15" fill="rgb(224,188,28)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.9935%" y="357" width="0.0808%" height="15" fill="rgb(254,197,27)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.9935%" y="341" width="0.0808%" height="15" fill="rgb(220,200,25)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.9935%" y="325" width="0.0808%" height="15" fill="rgb(239,225,54)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9935%" y="309" width="0.0808%" height="15" fill="rgb(211,59,40)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="319.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="84.0744%" y="469" width="0.0808%" height="15" fill="rgb(213,176,46)" fg:x="1040" fg:w="1"/><text x="84.3244%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="84.0744%" y="453" width="0.0808%" height="15" fill="rgb(226,99,4)" fg:x="1040" fg:w="1"/><text x="84.3244%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0744%" y="437" width="0.0808%" height="15" fill="rgb(239,203,43)" fg:x="1040" fg:w="1"/><text x="84.3244%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0744%" y="421" width="0.0808%" height="15" fill="rgb(246,1,45)" fg:x="1040" fg:w="1"/><text x="84.3244%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1552%" y="389" width="0.0808%" height="15" fill="rgb(231,42,52)" fg:x="1041" fg:w="1"/><text x="84.4052%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1552%" y="373" width="0.0808%" height="15" fill="rgb(240,13,50)" fg:x="1041" fg:w="1"/><text x="84.4052%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.1552%" y="357" width="0.0808%" height="15" fill="rgb(225,81,14)" fg:x="1041" fg:w="1"/><text x="84.4052%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.1552%" y="341" width="0.0808%" height="15" fill="rgb(216,182,23)" fg:x="1041" fg:w="1"/><text x="84.4052%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.1552%" y="325" width="0.0808%" height="15" fill="rgb(233,137,19)" fg:x="1041" fg:w="1"/><text x="84.4052%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.1552%" y="309" width="0.0808%" height="15" fill="rgb(242,61,46)" fg:x="1041" fg:w="1"/><text x="84.4052%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.1552%" y="293" width="0.0808%" height="15" fill="rgb(221,168,51)" fg:x="1041" fg:w="1"/><text x="84.4052%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.1552%" y="277" width="0.0808%" height="15" fill="rgb(238,48,15)" fg:x="1041" fg:w="1"/><text x="84.4052%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.1552%" y="261" width="0.0808%" height="15" fill="rgb(216,13,16)" fg:x="1041" fg:w="1"/><text x="84.4052%" y="271.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.1552%" y="421" width="0.1617%" height="15" fill="rgb(223,185,34)" fg:x="1041" fg:w="2"/><text x="84.4052%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="84.1552%" y="405" width="0.1617%" height="15" fill="rgb(228,94,42)" fg:x="1041" fg:w="2"/><text x="84.4052%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.2361%" y="389" width="0.0808%" height="15" fill="rgb(218,166,43)" fg:x="1042" fg:w="1"/><text x="84.4861%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2361%" y="373" width="0.0808%" height="15" fill="rgb(232,30,50)" fg:x="1042" fg:w="1"/><text x="84.4861%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.2361%" y="357" width="0.0808%" height="15" fill="rgb(245,206,45)" fg:x="1042" fg:w="1"/><text x="84.4861%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2361%" y="341" width="0.0808%" height="15" fill="rgb(220,56,22)" fg:x="1042" fg:w="1"/><text x="84.4861%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.2361%" y="325" width="0.0808%" height="15" fill="rgb(239,129,38)" fg:x="1042" fg:w="1"/><text x="84.4861%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2361%" y="309" width="0.0808%" height="15" fill="rgb(207,68,41)" fg:x="1042" fg:w="1"/><text x="84.4861%" y="319.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="84.2361%" y="293" width="0.0808%" height="15" fill="rgb(221,21,7)" fg:x="1042" fg:w="1"/><text x="84.4861%" y="303.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="84.1552%" y="453" width="0.2425%" height="15" fill="rgb(240,33,25)" fg:x="1041" fg:w="3"/><text x="84.4052%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="84.1552%" y="437" width="0.2425%" height="15" fill="rgb(242,119,10)" fg:x="1041" fg:w="3"/><text x="84.4052%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.3169%" y="421" width="0.0808%" height="15" fill="rgb(214,149,40)" fg:x="1043" fg:w="1"/><text x="84.5669%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="84.3169%" y="405" width="0.0808%" height="15" fill="rgb(228,25,36)" fg:x="1043" fg:w="1"/><text x="84.5669%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3169%" y="389" width="0.0808%" height="15" fill="rgb(222,59,15)" fg:x="1043" fg:w="1"/><text x="84.5669%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.3169%" y="373" width="0.0808%" height="15" fill="rgb(218,170,0)" fg:x="1043" fg:w="1"/><text x="84.5669%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="84.3977%" y="453" width="0.0808%" height="15" fill="rgb(232,173,23)" fg:x="1044" fg:w="1"/><text x="84.6477%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3977%" y="437" width="0.0808%" height="15" fill="rgb(218,116,1)" fg:x="1044" fg:w="1"/><text x="84.6477%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3977%" y="421" width="0.0808%" height="15" fill="rgb(207,34,4)" fg:x="1044" fg:w="1"/><text x="84.6477%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="84.3977%" y="405" width="0.0808%" height="15" fill="rgb(229,54,52)" fg:x="1044" fg:w="1"/><text x="84.6477%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.3977%" y="389" width="0.0808%" height="15" fill="rgb(211,86,23)" fg:x="1044" fg:w="1"/><text x="84.6477%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="84.3977%" y="373" width="0.0808%" height="15" fill="rgb(254,153,34)" fg:x="1044" fg:w="1"/><text x="84.6477%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4786%" y="421" width="0.0808%" height="15" fill="rgb(219,220,14)" fg:x="1045" fg:w="1"/><text x="84.7286%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5594%" y="421" width="0.0808%" height="15" fill="rgb(247,8,26)" fg:x="1046" fg:w="1"/><text x="84.8094%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5594%" y="405" width="0.0808%" height="15" fill="rgb(213,129,42)" fg:x="1046" fg:w="1"/><text x="84.8094%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5594%" y="389" width="0.0808%" height="15" fill="rgb(225,95,41)" fg:x="1046" fg:w="1"/><text x="84.8094%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5594%" y="373" width="0.0808%" height="15" fill="rgb(215,134,24)" fg:x="1046" fg:w="1"/><text x="84.8094%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5594%" y="357" width="0.0808%" height="15" fill="rgb(235,23,54)" fg:x="1046" fg:w="1"/><text x="84.8094%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.65%)</title><rect x="84.0744%" y="485" width="0.6467%" height="15" fill="rgb(229,96,31)" fg:x="1040" fg:w="8"/><text x="84.3244%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="84.1552%" y="469" width="0.5659%" height="15" fill="rgb(206,111,12)" fg:x="1041" fg:w="7"/><text x="84.4052%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="84.4786%" y="453" width="0.2425%" height="15" fill="rgb(222,177,8)" fg:x="1045" fg:w="3"/><text x="84.7286%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="84.4786%" y="437" width="0.2425%" height="15" fill="rgb(251,36,52)" fg:x="1045" fg:w="3"/><text x="84.7286%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.6403%" y="421" width="0.0808%" height="15" fill="rgb(216,182,29)" fg:x="1047" fg:w="1"/><text x="84.8903%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6403%" y="405" width="0.0808%" height="15" fill="rgb(241,145,50)" fg:x="1047" fg:w="1"/><text x="84.8903%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="84.7211%" y="485" width="0.1617%" height="15" fill="rgb(231,71,35)" fg:x="1048" fg:w="2"/><text x="84.9711%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.7211%" y="469" width="0.1617%" height="15" fill="rgb(218,22,17)" fg:x="1048" fg:w="2"/><text x="84.9711%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8019%" y="453" width="0.0808%" height="15" fill="rgb(225,227,6)" fg:x="1049" fg:w="1"/><text x="85.0519%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8828%" y="437" width="0.0808%" height="15" fill="rgb(224,204,17)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8828%" y="421" width="0.0808%" height="15" fill="rgb(227,61,28)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8828%" y="405" width="0.0808%" height="15" fill="rgb(242,148,23)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8828%" y="389" width="0.0808%" height="15" fill="rgb(237,105,33)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8828%" y="373" width="0.0808%" height="15" fill="rgb(238,218,40)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.8828%" y="357" width="0.0808%" height="15" fill="rgb(209,126,11)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.8828%" y="341" width="0.0808%" height="15" fill="rgb(245,90,11)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.8828%" y="325" width="0.0808%" height="15" fill="rgb(211,195,10)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.8828%" y="309" width="0.0808%" height="15" fill="rgb(231,45,45)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.8828%" y="293" width="0.0808%" height="15" fill="rgb(246,100,43)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.8828%" y="277" width="0.0808%" height="15" fill="rgb(241,193,8)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.8828%" y="261" width="0.0808%" height="15" fill="rgb(208,76,19)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.8828%" y="245" width="0.0808%" height="15" fill="rgb(223,69,40)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.8828%" y="229" width="0.0808%" height="15" fill="rgb(207,120,39)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8828%" y="213" width="0.0808%" height="15" fill="rgb(212,209,28)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="223.50"></text></g><g><title>plugins_core::build::Build::save (14 samples, 1.13%)</title><rect x="83.9127%" y="501" width="1.1318%" height="15" fill="rgb(246,82,29)" fg:x="1038" fg:w="14"/><text x="84.1627%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.8828%" y="485" width="0.1617%" height="15" fill="rgb(239,6,40)" fg:x="1050" fg:w="2"/><text x="85.1328%" y="495.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.8828%" y="469" width="0.1617%" height="15" fill="rgb(228,181,35)" fg:x="1050" fg:w="2"/><text x="85.1328%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="84.8828%" y="453" width="0.1617%" height="15" fill="rgb(238,151,2)" fg:x="1050" fg:w="2"/><text x="85.1328%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.9636%" y="437" width="0.0808%" height="15" fill="rgb(236,94,18)" fg:x="1051" fg:w="1"/><text x="85.2136%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9636%" y="421" width="0.0808%" height="15" fill="rgb(208,38,14)" fg:x="1051" fg:w="1"/><text x="85.2136%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.9636%" y="405" width="0.0808%" height="15" fill="rgb(234,215,27)" fg:x="1051" fg:w="1"/><text x="85.2136%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9636%" y="389" width="0.0808%" height="15" fill="rgb(254,211,53)" fg:x="1051" fg:w="1"/><text x="85.2136%" y="399.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (1 samples, 0.08%)</title><rect x="85.0445%" y="501" width="0.0808%" height="15" fill="rgb(216,175,11)" fg:x="1052" fg:w="1"/><text x="85.2945%" y="511.50"></text></g><g><title>plugins_core::tools::set_quantity (1 samples, 0.08%)</title><rect x="85.0445%" y="485" width="0.0808%" height="15" fill="rgb(246,179,26)" fg:x="1052" fg:w="1"/><text x="85.2945%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.0445%" y="469" width="0.0808%" height="15" fill="rgb(249,19,52)" fg:x="1052" fg:w="1"/><text x="85.2945%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="85.0445%" y="453" width="0.0808%" height="15" fill="rgb(230,42,52)" fg:x="1052" fg:w="1"/><text x="85.2945%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="85.0445%" y="437" width="0.0808%" height="15" fill="rgb(221,171,0)" fg:x="1052" fg:w="1"/><text x="85.2945%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="85.1253%" y="469" width="0.0808%" height="15" fill="rgb(222,177,40)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.1253%" y="453" width="0.0808%" height="15" fill="rgb(247,34,16)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.1253%" y="437" width="0.0808%" height="15" fill="rgb(213,217,37)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.1253%" y="421" width="0.0808%" height="15" fill="rgb(231,189,24)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="85.1253%" y="405" width="0.0808%" height="15" fill="rgb(214,22,9)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.1253%" y="389" width="0.0808%" height="15" fill="rgb(212,70,22)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1253%" y="373" width="0.0808%" height="15" fill="rgb(249,64,51)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.1253%" y="357" width="0.0808%" height="15" fill="rgb(249,148,20)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1253%" y="341" width="0.0808%" height="15" fill="rgb(246,46,48)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1253%" y="325" width="0.0808%" height="15" fill="rgb(217,34,48)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1253%" y="309" width="0.0808%" height="15" fill="rgb(222,45,26)" fg:x="1053" fg:w="1"/><text x="85.3753%" y="319.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="85.2061%" y="453" width="0.1617%" height="15" fill="rgb(230,201,36)" fg:x="1054" fg:w="2"/><text x="85.4561%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.2870%" y="437" width="0.0808%" height="15" fill="rgb(217,30,43)" fg:x="1055" fg:w="1"/><text x="85.5370%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.2870%" y="421" width="0.0808%" height="15" fill="rgb(230,197,40)" fg:x="1055" fg:w="1"/><text x="85.5370%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="85.3678%" y="453" width="0.1617%" height="15" fill="rgb(239,181,18)" fg:x="1056" fg:w="2"/><text x="85.6178%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.4487%" y="437" width="0.0808%" height="15" fill="rgb(222,60,39)" fg:x="1057" fg:w="1"/><text x="85.6987%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4487%" y="421" width="0.0808%" height="15" fill="rgb(210,60,22)" fg:x="1057" fg:w="1"/><text x="85.6987%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="85.2061%" y="469" width="0.4042%" height="15" fill="rgb(239,213,48)" fg:x="1054" fg:w="5"/><text x="85.4561%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="85.5295%" y="453" width="0.0808%" height="15" fill="rgb(253,214,23)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.5295%" y="437" width="0.0808%" height="15" fill="rgb(211,98,45)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.5295%" y="421" width="0.0808%" height="15" fill="rgb(239,130,44)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.5295%" y="405" width="0.0808%" height="15" fill="rgb(222,181,35)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="85.5295%" y="389" width="0.0808%" height="15" fill="rgb(219,219,49)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.5295%" y="373" width="0.0808%" height="15" fill="rgb(227,161,51)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5295%" y="357" width="0.0808%" height="15" fill="rgb(239,112,27)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.5295%" y="341" width="0.0808%" height="15" fill="rgb(248,122,18)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5295%" y="325" width="0.0808%" height="15" fill="rgb(245,130,23)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.5295%" y="309" width="0.0808%" height="15" fill="rgb(211,225,28)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5295%" y="293" width="0.0808%" height="15" fill="rgb(242,105,44)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="303.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (7 samples, 0.57%)</title><rect x="85.1253%" y="501" width="0.5659%" height="15" fill="rgb(216,183,46)" fg:x="1053" fg:w="7"/><text x="85.3753%" y="511.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.57%)</title><rect x="85.1253%" y="485" width="0.5659%" height="15" fill="rgb(227,112,9)" fg:x="1053" fg:w="7"/><text x="85.3753%" y="495.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="85.6103%" y="469" width="0.0808%" height="15" fill="rgb(244,21,0)" fg:x="1059" fg:w="1"/><text x="85.8603%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="85.6103%" y="453" width="0.0808%" height="15" fill="rgb(236,185,14)" fg:x="1059" fg:w="1"/><text x="85.8603%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="85.6103%" y="437" width="0.0808%" height="15" fill="rgb(236,170,30)" fg:x="1059" fg:w="1"/><text x="85.8603%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="85.6912%" y="485" width="0.1617%" height="15" fill="rgb(209,198,51)" fg:x="1060" fg:w="2"/><text x="85.9412%" y="495.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="85.6912%" y="469" width="0.1617%" height="15" fill="rgb(205,171,26)" fg:x="1060" fg:w="2"/><text x="85.9412%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="85.6912%" y="453" width="0.1617%" height="15" fill="rgb(246,41,49)" fg:x="1060" fg:w="2"/><text x="85.9412%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.6912%" y="437" width="0.1617%" height="15" fill="rgb(240,229,12)" fg:x="1060" fg:w="2"/><text x="85.9412%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="85.6912%" y="421" width="0.1617%" height="15" fill="rgb(212,8,54)" fg:x="1060" fg:w="2"/><text x="85.9412%" y="431.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="85.6912%" y="405" width="0.1617%" height="15" fill="rgb(230,114,13)" fg:x="1060" fg:w="2"/><text x="85.9412%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.7720%" y="389" width="0.0808%" height="15" fill="rgb(229,130,28)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7720%" y="373" width="0.0808%" height="15" fill="rgb(206,139,15)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7720%" y="357" width="0.0808%" height="15" fill="rgb(241,188,35)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.7720%" y="341" width="0.0808%" height="15" fill="rgb(208,224,26)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.8529%" y="325" width="0.0808%" height="15" fill="rgb(251,131,28)" fg:x="1062" fg:w="1"/><text x="86.1029%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="85.8529%" y="485" width="0.1617%" height="15" fill="rgb(208,153,1)" fg:x="1062" fg:w="2"/><text x="86.1029%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="85.8529%" y="469" width="0.1617%" height="15" fill="rgb(234,33,36)" fg:x="1062" fg:w="2"/><text x="86.1029%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="85.8529%" y="453" width="0.1617%" height="15" fill="rgb(246,42,29)" fg:x="1062" fg:w="2"/><text x="86.1029%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="85.8529%" y="437" width="0.1617%" height="15" fill="rgb(251,114,16)" fg:x="1062" fg:w="2"/><text x="86.1029%" y="447.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="85.8529%" y="421" width="0.1617%" height="15" fill="rgb(233,13,38)" fg:x="1062" fg:w="2"/><text x="86.1029%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.8529%" y="405" width="0.1617%" height="15" fill="rgb(247,120,19)" fg:x="1062" fg:w="2"/><text x="86.1029%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.8529%" y="389" width="0.1617%" height="15" fill="rgb(205,11,16)" fg:x="1062" fg:w="2"/><text x="86.1029%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="85.8529%" y="373" width="0.1617%" height="15" fill="rgb(228,185,19)" fg:x="1062" fg:w="2"/><text x="86.1029%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.8529%" y="357" width="0.1617%" height="15" fill="rgb(239,88,52)" fg:x="1062" fg:w="2"/><text x="86.1029%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.8529%" y="341" width="0.1617%" height="15" fill="rgb(219,23,1)" fg:x="1062" fg:w="2"/><text x="86.1029%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.9337%" y="325" width="0.0808%" height="15" fill="rgb(253,177,16)" fg:x="1063" fg:w="1"/><text x="86.1837%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9337%" y="309" width="0.0808%" height="15" fill="rgb(225,150,40)" fg:x="1063" fg:w="1"/><text x="86.1837%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9337%" y="293" width="0.0808%" height="15" fill="rgb(208,108,30)" fg:x="1063" fg:w="1"/><text x="86.1837%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.9337%" y="277" width="0.0808%" height="15" fill="rgb(214,122,4)" fg:x="1063" fg:w="1"/><text x="86.1837%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.9337%" y="261" width="0.0808%" height="15" fill="rgb(229,74,37)" fg:x="1063" fg:w="1"/><text x="86.1837%" y="271.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="86.0146%" y="469" width="0.1617%" height="15" fill="rgb(233,61,41)" fg:x="1064" fg:w="2"/><text x="86.2646%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.0146%" y="453" width="0.1617%" height="15" fill="rgb(238,191,5)" fg:x="1064" fg:w="2"/><text x="86.2646%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.1762%" y="389" width="0.0808%" height="15" fill="rgb(233,78,24)" fg:x="1066" fg:w="1"/><text x="86.4262%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="86.2571%" y="373" width="0.1617%" height="15" fill="rgb(211,142,8)" fg:x="1067" fg:w="2"/><text x="86.5071%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="86.2571%" y="357" width="0.1617%" height="15" fill="rgb(253,38,53)" fg:x="1067" fg:w="2"/><text x="86.5071%" y="367.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="86.2571%" y="341" width="0.1617%" height="15" fill="rgb(234,63,51)" fg:x="1067" fg:w="2"/><text x="86.5071%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="86.4188%" y="357" width="0.2425%" height="15" fill="rgb(205,23,31)" fg:x="1069" fg:w="3"/><text x="86.6688%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="86.4188%" y="341" width="0.2425%" height="15" fill="rgb(210,184,50)" fg:x="1069" fg:w="3"/><text x="86.6688%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.5804%" y="325" width="0.0808%" height="15" fill="rgb(222,112,26)" fg:x="1071" fg:w="1"/><text x="86.8304%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.6613%" y="341" width="0.1617%" height="15" fill="rgb(250,98,18)" fg:x="1072" fg:w="2"/><text x="86.9113%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.7421%" y="325" width="0.0808%" height="15" fill="rgb(250,34,12)" fg:x="1073" fg:w="1"/><text x="86.9921%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.9038%" y="325" width="0.0808%" height="15" fill="rgb(236,141,30)" fg:x="1075" fg:w="1"/><text x="87.1538%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9038%" y="309" width="0.0808%" height="15" fill="rgb(246,134,38)" fg:x="1075" fg:w="1"/><text x="87.1538%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9038%" y="293" width="0.0808%" height="15" fill="rgb(240,114,4)" fg:x="1075" fg:w="1"/><text x="87.1538%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.9038%" y="277" width="0.0808%" height="15" fill="rgb(243,113,39)" fg:x="1075" fg:w="1"/><text x="87.1538%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.9038%" y="261" width="0.0808%" height="15" fill="rgb(239,215,4)" fg:x="1075" fg:w="1"/><text x="87.1538%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.9038%" y="245" width="0.0808%" height="15" fill="rgb(236,229,45)" fg:x="1075" fg:w="1"/><text x="87.1538%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.9038%" y="229" width="0.0808%" height="15" fill="rgb(242,2,6)" fg:x="1075" fg:w="1"/><text x="87.1538%" y="239.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.9846%" y="325" width="0.1617%" height="15" fill="rgb(239,108,21)" fg:x="1076" fg:w="2"/><text x="87.2346%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.9846%" y="309" width="0.1617%" height="15" fill="rgb(215,168,34)" fg:x="1076" fg:w="2"/><text x="87.2346%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.9846%" y="293" width="0.1617%" height="15" fill="rgb(238,31,17)" fg:x="1076" fg:w="2"/><text x="87.2346%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.0655%" y="277" width="0.0808%" height="15" fill="rgb(220,133,11)" fg:x="1077" fg:w="1"/><text x="87.3155%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.2272%" y="309" width="0.0808%" height="15" fill="rgb(212,158,23)" fg:x="1079" fg:w="1"/><text x="87.4772%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="87.1463%" y="325" width="0.2425%" height="15" fill="rgb(223,172,7)" fg:x="1078" fg:w="3"/><text x="87.3963%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3080%" y="309" width="0.0808%" height="15" fill="rgb(244,3,52)" fg:x="1080" fg:w="1"/><text x="87.5580%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3080%" y="293" width="0.0808%" height="15" fill="rgb(207,69,27)" fg:x="1080" fg:w="1"/><text x="87.5580%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="86.8230%" y="341" width="0.6467%" height="15" fill="rgb(213,136,45)" fg:x="1074" fg:w="8"/><text x="87.0730%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.3888%" y="325" width="0.0808%" height="15" fill="rgb(218,79,17)" fg:x="1081" fg:w="1"/><text x="87.6388%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.3888%" y="309" width="0.0808%" height="15" fill="rgb(216,106,36)" fg:x="1081" fg:w="1"/><text x="87.6388%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.3888%" y="293" width="0.0808%" height="15" fill="rgb(251,27,45)" fg:x="1081" fg:w="1"/><text x="87.6388%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="86.6613%" y="357" width="0.8892%" height="15" fill="rgb(232,21,34)" fg:x="1072" fg:w="11"/><text x="86.9113%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.4697%" y="341" width="0.0808%" height="15" fill="rgb(249,191,16)" fg:x="1082" fg:w="1"/><text x="87.7197%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.4697%" y="325" width="0.0808%" height="15" fill="rgb(224,88,20)" fg:x="1082" fg:w="1"/><text x="87.7197%" y="335.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.21%)</title><rect x="86.4188%" y="373" width="1.2126%" height="15" fill="rgb(237,93,27)" fg:x="1069" fg:w="15"/><text x="86.6688%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.5505%" y="357" width="0.0808%" height="15" fill="rgb(226,198,48)" fg:x="1083" fg:w="1"/><text x="87.8005%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6314%" y="341" width="0.0808%" height="15" fill="rgb(207,162,53)" fg:x="1084" fg:w="1"/><text x="87.8814%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.7122%" y="341" width="0.0808%" height="15" fill="rgb(207,169,9)" fg:x="1085" fg:w="1"/><text x="87.9622%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.8739%" y="325" width="0.0808%" height="15" fill="rgb(224,166,46)" fg:x="1087" fg:w="1"/><text x="88.1239%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.9547%" y="325" width="0.0808%" height="15" fill="rgb(233,26,6)" fg:x="1088" fg:w="1"/><text x="88.2047%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9547%" y="309" width="0.0808%" height="15" fill="rgb(218,106,45)" fg:x="1088" fg:w="1"/><text x="88.2047%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.0356%" y="309" width="0.0808%" height="15" fill="rgb(240,217,4)" fg:x="1089" fg:w="1"/><text x="88.2856%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0356%" y="293" width="0.0808%" height="15" fill="rgb(246,171,10)" fg:x="1089" fg:w="1"/><text x="88.2856%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="87.6314%" y="373" width="0.5659%" height="15" fill="rgb(223,197,30)" fg:x="1084" fg:w="7"/><text x="87.8814%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.57%)</title><rect x="87.6314%" y="357" width="0.5659%" height="15" fill="rgb(207,92,16)" fg:x="1084" fg:w="7"/><text x="87.8814%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="87.7930%" y="341" width="0.4042%" height="15" fill="rgb(211,6,44)" fg:x="1086" fg:w="5"/><text x="88.0430%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.0356%" y="325" width="0.1617%" height="15" fill="rgb(219,139,2)" fg:x="1089" fg:w="2"/><text x="88.2856%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.1164%" y="309" width="0.0808%" height="15" fill="rgb(224,103,21)" fg:x="1090" fg:w="1"/><text x="88.3664%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.1164%" y="293" width="0.0808%" height="15" fill="rgb(254,110,48)" fg:x="1090" fg:w="1"/><text x="88.3664%" y="303.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="88.1973%" y="357" width="0.0808%" height="15" fill="rgb(212,88,19)" fg:x="1091" fg:w="1"/><text x="88.4473%" y="367.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="88.1973%" y="341" width="0.0808%" height="15" fill="rgb(248,103,6)" fg:x="1091" fg:w="1"/><text x="88.4473%" y="351.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="88.1973%" y="325" width="0.0808%" height="15" fill="rgb(214,53,46)" fg:x="1091" fg:w="1"/><text x="88.4473%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1973%" y="309" width="0.0808%" height="15" fill="rgb(236,190,24)" fg:x="1091" fg:w="1"/><text x="88.4473%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2781%" y="277" width="0.0808%" height="15" fill="rgb(254,58,28)" fg:x="1092" fg:w="1"/><text x="88.5281%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3589%" y="229" width="0.0808%" height="15" fill="rgb(243,63,27)" fg:x="1093" fg:w="1"/><text x="88.6089%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3589%" y="213" width="0.0808%" height="15" fill="rgb(206,81,20)" fg:x="1093" fg:w="1"/><text x="88.6089%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3589%" y="197" width="0.0808%" height="15" fill="rgb(252,69,51)" fg:x="1093" fg:w="1"/><text x="88.6089%" y="207.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="88.3589%" y="277" width="0.2425%" height="15" fill="rgb(222,213,4)" fg:x="1093" fg:w="3"/><text x="88.6089%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="88.3589%" y="261" width="0.2425%" height="15" fill="rgb(226,198,12)" fg:x="1093" fg:w="3"/><text x="88.6089%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="88.3589%" y="245" width="0.2425%" height="15" fill="rgb(248,115,11)" fg:x="1093" fg:w="3"/><text x="88.6089%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.4398%" y="229" width="0.1617%" height="15" fill="rgb(221,148,54)" fg:x="1094" fg:w="2"/><text x="88.6898%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.4398%" y="213" width="0.1617%" height="15" fill="rgb(214,209,51)" fg:x="1094" fg:w="2"/><text x="88.6898%" y="223.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.4398%" y="197" width="0.1617%" height="15" fill="rgb(249,116,53)" fg:x="1094" fg:w="2"/><text x="88.6898%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.4398%" y="181" width="0.1617%" height="15" fill="rgb(248,170,1)" fg:x="1094" fg:w="2"/><text x="88.6898%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.5206%" y="165" width="0.0808%" height="15" fill="rgb(244,105,10)" fg:x="1095" fg:w="1"/><text x="88.7706%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.5206%" y="149" width="0.0808%" height="15" fill="rgb(229,100,5)" fg:x="1095" fg:w="1"/><text x="88.7706%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5206%" y="133" width="0.0808%" height="15" fill="rgb(233,221,39)" fg:x="1095" fg:w="1"/><text x="88.7706%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6015%" y="245" width="0.0808%" height="15" fill="rgb(233,88,21)" fg:x="1096" fg:w="1"/><text x="88.8515%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6015%" y="229" width="0.0808%" height="15" fill="rgb(206,13,0)" fg:x="1096" fg:w="1"/><text x="88.8515%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6015%" y="213" width="0.0808%" height="15" fill="rgb(242,15,35)" fg:x="1096" fg:w="1"/><text x="88.8515%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="88.2781%" y="293" width="0.5659%" height="15" fill="rgb(247,142,41)" fg:x="1092" fg:w="7"/><text x="88.5281%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="88.6015%" y="277" width="0.2425%" height="15" fill="rgb(245,51,29)" fg:x="1096" fg:w="3"/><text x="88.8515%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="88.6015%" y="261" width="0.2425%" height="15" fill="rgb(228,209,43)" fg:x="1096" fg:w="3"/><text x="88.8515%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.6823%" y="245" width="0.1617%" height="15" fill="rgb(233,185,9)" fg:x="1097" fg:w="2"/><text x="88.9323%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.6823%" y="229" width="0.1617%" height="15" fill="rgb(226,93,0)" fg:x="1097" fg:w="2"/><text x="88.9323%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.6823%" y="213" width="0.1617%" height="15" fill="rgb(245,194,43)" fg:x="1097" fg:w="2"/><text x="88.9323%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.6823%" y="197" width="0.1617%" height="15" fill="rgb(211,145,34)" fg:x="1097" fg:w="2"/><text x="88.9323%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7631%" y="181" width="0.0808%" height="15" fill="rgb(231,228,28)" fg:x="1098" fg:w="1"/><text x="89.0131%" y="191.50"></text></g><g><title>engine::session::Session::save_changes (34 samples, 2.75%)</title><rect x="86.1762%" y="469" width="2.7486%" height="15" fill="rgb(236,149,4)" fg:x="1066" fg:w="34"/><text x="86.4262%" y="479.50">en..</text></g><g><title>engine::session::state::State::close (34 samples, 2.75%)</title><rect x="86.1762%" y="453" width="2.7486%" height="15" fill="rgb(234,114,38)" fg:x="1066" fg:w="34"/><text x="86.4262%" y="463.50">en..</text></g><g><title>engine::session::state::State::flush_entities (34 samples, 2.75%)</title><rect x="86.1762%" y="437" width="2.7486%" height="15" fill="rgb(246,132,51)" fg:x="1066" fg:w="34"/><text x="86.4262%" y="447.50">en..</text></g><g><title>core::iter::adapters::try_process (34 samples, 2.75%)</title><rect x="86.1762%" y="421" width="2.7486%" height="15" fill="rgb(251,137,22)" fg:x="1066" fg:w="34"/><text x="86.4262%" y="431.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 2.75%)</title><rect x="86.1762%" y="405" width="2.7486%" height="15" fill="rgb(243,59,52)" fg:x="1066" fg:w="34"/><text x="86.4262%" y="415.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (33 samples, 2.67%)</title><rect x="86.2571%" y="389" width="2.6677%" height="15" fill="rgb(239,56,28)" fg:x="1067" fg:w="33"/><text x="86.5071%" y="399.50">en..</text></g><g><title>kernel::model::any_entity_changes (9 samples, 0.73%)</title><rect x="88.1973%" y="373" width="0.7276%" height="15" fill="rgb(218,168,27)" fg:x="1091" fg:w="9"/><text x="88.4473%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.65%)</title><rect x="88.2781%" y="357" width="0.6467%" height="15" fill="rgb(232,165,11)" fg:x="1092" fg:w="8"/><text x="88.5281%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.65%)</title><rect x="88.2781%" y="341" width="0.6467%" height="15" fill="rgb(253,55,41)" fg:x="1092" fg:w="8"/><text x="88.5281%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.65%)</title><rect x="88.2781%" y="325" width="0.6467%" height="15" fill="rgb(233,206,24)" fg:x="1092" fg:w="8"/><text x="88.5281%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.65%)</title><rect x="88.2781%" y="309" width="0.6467%" height="15" fill="rgb(220,199,8)" fg:x="1092" fg:w="8"/><text x="88.5281%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="88.8440%" y="293" width="0.0808%" height="15" fill="rgb(254,65,26)" fg:x="1099" fg:w="1"/><text x="89.0940%" y="303.50"></text></g><g><title>engine::session::Session::flush (37 samples, 2.99%)</title><rect x="86.0146%" y="485" width="2.9911%" height="15" fill="rgb(253,102,23)" fg:x="1064" fg:w="37"/><text x="86.2646%" y="495.50">eng..</text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="88.9248%" y="469" width="0.0808%" height="15" fill="rgb(231,103,35)" fg:x="1100" fg:w="1"/><text x="89.1748%" y="479.50"></text></g><g><title>kernel::session::SetSession&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="88.9248%" y="453" width="0.0808%" height="15" fill="rgb(238,26,10)" fg:x="1100" fg:w="1"/><text x="89.1748%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="89.0057%" y="485" width="0.0808%" height="15" fill="rgb(234,191,34)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="89.0057%" y="469" width="0.0808%" height="15" fill="rgb(206,210,9)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="89.0057%" y="453" width="0.0808%" height="15" fill="rgb(219,155,3)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.0057%" y="437" width="0.0808%" height="15" fill="rgb(221,62,52)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.0057%" y="421" width="0.0808%" height="15" fill="rgb(215,197,36)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="89.0057%" y="405" width="0.0808%" height="15" fill="rgb(226,222,6)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="89.0057%" y="389" width="0.0808%" height="15" fill="rgb(215,58,28)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="89.0057%" y="373" width="0.0808%" height="15" fill="rgb(212,148,2)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0057%" y="357" width="0.0808%" height="15" fill="rgb(208,21,42)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0057%" y="341" width="0.0808%" height="15" fill="rgb(209,107,26)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.0057%" y="325" width="0.0808%" height="15" fill="rgb(254,60,47)" fg:x="1101" fg:w="1"/><text x="89.2557%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="89.0865%" y="469" width="0.0808%" height="15" fill="rgb(207,226,45)" fg:x="1102" fg:w="1"/><text x="89.3365%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="89.0865%" y="453" width="0.0808%" height="15" fill="rgb(223,124,22)" fg:x="1102" fg:w="1"/><text x="89.3365%" y="463.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="89.0865%" y="437" width="0.0808%" height="15" fill="rgb(240,162,13)" fg:x="1102" fg:w="1"/><text x="89.3365%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.0865%" y="421" width="0.0808%" height="15" fill="rgb(244,199,31)" fg:x="1102" fg:w="1"/><text x="89.3365%" y="431.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="89.0865%" y="485" width="0.1617%" height="15" fill="rgb(207,92,16)" fg:x="1102" fg:w="2"/><text x="89.3365%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="89.1673%" y="469" width="0.0808%" height="15" fill="rgb(215,31,19)" fg:x="1103" fg:w="1"/><text x="89.4173%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.3290%" y="453" width="0.0808%" height="15" fill="rgb(245,118,14)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.3290%" y="437" width="0.0808%" height="15" fill="rgb(248,12,46)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="89.3290%" y="421" width="0.0808%" height="15" fill="rgb(209,119,0)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.3290%" y="405" width="0.0808%" height="15" fill="rgb(254,51,44)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3290%" y="389" width="0.0808%" height="15" fill="rgb(253,182,35)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3290%" y="373" width="0.0808%" height="15" fill="rgb(205,198,39)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.3290%" y="357" width="0.0808%" height="15" fill="rgb(251,175,48)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.3290%" y="341" width="0.0808%" height="15" fill="rgb(239,38,17)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.3290%" y="325" width="0.0808%" height="15" fill="rgb(212,101,8)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.3290%" y="309" width="0.0808%" height="15" fill="rgb(228,35,17)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.3290%" y="293" width="0.0808%" height="15" fill="rgb(214,95,8)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="303.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="89.4099%" y="453" width="0.0808%" height="15" fill="rgb(210,176,35)" fg:x="1106" fg:w="1"/><text x="89.6599%" y="463.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="89.4099%" y="437" width="0.0808%" height="15" fill="rgb(226,4,3)" fg:x="1106" fg:w="1"/><text x="89.6599%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.4907%" y="405" width="0.0808%" height="15" fill="rgb(232,133,14)" fg:x="1107" fg:w="1"/><text x="89.7407%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="89.4907%" y="389" width="0.0808%" height="15" fill="rgb(250,191,8)" fg:x="1107" fg:w="1"/><text x="89.7407%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4907%" y="373" width="0.0808%" height="15" fill="rgb(213,12,45)" fg:x="1107" fg:w="1"/><text x="89.7407%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4907%" y="357" width="0.0808%" height="15" fill="rgb(233,78,26)" fg:x="1107" fg:w="1"/><text x="89.7407%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4907%" y="341" width="0.0808%" height="15" fill="rgb(245,222,11)" fg:x="1107" fg:w="1"/><text x="89.7407%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="89.4907%" y="437" width="0.1617%" height="15" fill="rgb(216,174,12)" fg:x="1107" fg:w="2"/><text x="89.7407%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="89.4907%" y="421" width="0.1617%" height="15" fill="rgb(213,15,9)" fg:x="1107" fg:w="2"/><text x="89.7407%" y="431.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="89.5715%" y="405" width="0.0808%" height="15" fill="rgb(238,103,32)" fg:x="1108" fg:w="1"/><text x="89.8215%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5715%" y="389" width="0.0808%" height="15" fill="rgb(245,85,15)" fg:x="1108" fg:w="1"/><text x="89.8215%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="89.6524%" y="405" width="0.0808%" height="15" fill="rgb(254,204,5)" fg:x="1109" fg:w="1"/><text x="89.9024%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="89.6524%" y="389" width="0.0808%" height="15" fill="rgb(231,178,15)" fg:x="1109" fg:w="1"/><text x="89.9024%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.8949%" y="325" width="0.1617%" height="15" fill="rgb(248,151,3)" fg:x="1112" fg:w="2"/><text x="90.1449%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.9757%" y="309" width="0.0808%" height="15" fill="rgb(250,139,13)" fg:x="1113" fg:w="1"/><text x="90.2257%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="89.3290%" y="469" width="0.8084%" height="15" fill="rgb(243,107,53)" fg:x="1105" fg:w="10"/><text x="89.5790%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.65%)</title><rect x="89.4907%" y="453" width="0.6467%" height="15" fill="rgb(232,81,15)" fg:x="1107" fg:w="8"/><text x="89.7407%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.49%)</title><rect x="89.6524%" y="437" width="0.4850%" height="15" fill="rgb(225,187,48)" fg:x="1109" fg:w="6"/><text x="89.9024%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="89.6524%" y="421" width="0.4850%" height="15" fill="rgb(205,116,12)" fg:x="1109" fg:w="6"/><text x="89.9024%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="89.7332%" y="405" width="0.4042%" height="15" fill="rgb(220,222,31)" fg:x="1110" fg:w="5"/><text x="89.9832%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="89.8949%" y="389" width="0.2425%" height="15" fill="rgb(233,187,49)" fg:x="1112" fg:w="3"/><text x="90.1449%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="89.8949%" y="373" width="0.2425%" height="15" fill="rgb(211,168,53)" fg:x="1112" fg:w="3"/><text x="90.1449%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="89.8949%" y="357" width="0.2425%" height="15" fill="rgb(206,160,16)" fg:x="1112" fg:w="3"/><text x="90.1449%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="89.8949%" y="341" width="0.2425%" height="15" fill="rgb(254,164,13)" fg:x="1112" fg:w="3"/><text x="90.1449%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.0566%" y="325" width="0.0808%" height="15" fill="rgb(229,45,30)" fg:x="1114" fg:w="1"/><text x="90.3066%" y="335.50"></text></g><g><title>plugins_core::build::Build::save (12 samples, 0.97%)</title><rect x="89.2482%" y="485" width="0.9701%" height="15" fill="rgb(237,32,10)" fg:x="1104" fg:w="12"/><text x="89.4982%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.1374%" y="469" width="0.0808%" height="15" fill="rgb(251,20,47)" fg:x="1115" fg:w="1"/><text x="90.3874%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.1374%" y="453" width="0.0808%" height="15" fill="rgb(251,116,12)" fg:x="1115" fg:w="1"/><text x="90.3874%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="90.1374%" y="437" width="0.0808%" height="15" fill="rgb(214,227,27)" fg:x="1115" fg:w="1"/><text x="90.3874%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="90.2183%" y="405" width="0.0808%" height="15" fill="rgb(248,10,53)" fg:x="1116" fg:w="1"/><text x="90.4683%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2183%" y="389" width="0.0808%" height="15" fill="rgb(221,176,25)" fg:x="1116" fg:w="1"/><text x="90.4683%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2991%" y="373" width="0.0808%" height="15" fill="rgb(205,70,46)" fg:x="1117" fg:w="1"/><text x="90.5491%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2991%" y="357" width="0.0808%" height="15" fill="rgb(217,45,38)" fg:x="1117" fg:w="1"/><text x="90.5491%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2991%" y="341" width="0.0808%" height="15" fill="rgb(243,6,54)" fg:x="1117" fg:w="1"/><text x="90.5491%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="90.2183%" y="421" width="0.2425%" height="15" fill="rgb(242,76,23)" fg:x="1116" fg:w="3"/><text x="90.4683%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="90.2991%" y="405" width="0.1617%" height="15" fill="rgb(239,166,0)" fg:x="1117" fg:w="2"/><text x="90.5491%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="90.2991%" y="389" width="0.1617%" height="15" fill="rgb(238,174,32)" fg:x="1117" fg:w="2"/><text x="90.5491%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.3800%" y="373" width="0.0808%" height="15" fill="rgb(238,124,44)" fg:x="1118" fg:w="1"/><text x="90.6300%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3800%" y="357" width="0.0808%" height="15" fill="rgb(206,185,9)" fg:x="1118" fg:w="1"/><text x="90.6300%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.3800%" y="341" width="0.0808%" height="15" fill="rgb(215,157,17)" fg:x="1118" fg:w="1"/><text x="90.6300%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3800%" y="325" width="0.0808%" height="15" fill="rgb(251,17,29)" fg:x="1118" fg:w="1"/><text x="90.6300%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.3800%" y="309" width="0.0808%" height="15" fill="rgb(227,113,27)" fg:x="1118" fg:w="1"/><text x="90.6300%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3800%" y="293" width="0.0808%" height="15" fill="rgb(217,226,24)" fg:x="1118" fg:w="1"/><text x="90.6300%" y="303.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="90.2183%" y="453" width="0.3234%" height="15" fill="rgb(251,99,38)" fg:x="1116" fg:w="4"/><text x="90.4683%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="90.2183%" y="437" width="0.3234%" height="15" fill="rgb(231,147,19)" fg:x="1116" fg:w="4"/><text x="90.4683%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="90.4608%" y="421" width="0.0808%" height="15" fill="rgb(230,86,8)" fg:x="1119" fg:w="1"/><text x="90.7108%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.4608%" y="405" width="0.0808%" height="15" fill="rgb(237,159,39)" fg:x="1119" fg:w="1"/><text x="90.7108%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="90.4608%" y="389" width="0.0808%" height="15" fill="rgb(247,179,47)" fg:x="1119" fg:w="1"/><text x="90.7108%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4608%" y="373" width="0.0808%" height="15" fill="rgb(253,152,26)" fg:x="1119" fg:w="1"/><text x="90.7108%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4608%" y="357" width="0.0808%" height="15" fill="rgb(222,211,15)" fg:x="1119" fg:w="1"/><text x="90.7108%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4608%" y="341" width="0.0808%" height="15" fill="rgb(236,193,6)" fg:x="1119" fg:w="1"/><text x="90.7108%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4608%" y="325" width="0.0808%" height="15" fill="rgb(226,206,10)" fg:x="1119" fg:w="1"/><text x="90.7108%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4608%" y="309" width="0.0808%" height="15" fill="rgb(213,125,22)" fg:x="1119" fg:w="1"/><text x="90.7108%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4608%" y="293" width="0.0808%" height="15" fill="rgb(221,66,28)" fg:x="1119" fg:w="1"/><text x="90.7108%" y="303.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (6 samples, 0.49%)</title><rect x="90.2183%" y="485" width="0.4850%" height="15" fill="rgb(222,84,53)" fg:x="1116" fg:w="6"/><text x="90.4683%" y="495.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.49%)</title><rect x="90.2183%" y="469" width="0.4850%" height="15" fill="rgb(243,50,15)" fg:x="1116" fg:w="6"/><text x="90.4683%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="90.5416%" y="453" width="0.1617%" height="15" fill="rgb(208,184,23)" fg:x="1120" fg:w="2"/><text x="90.7916%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="90.6225%" y="437" width="0.0808%" height="15" fill="rgb(221,83,2)" fg:x="1121" fg:w="1"/><text x="90.8725%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="90.7033%" y="469" width="0.0808%" height="15" fill="rgb(236,53,24)" fg:x="1122" fg:w="1"/><text x="90.9533%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.7033%" y="453" width="0.0808%" height="15" fill="rgb(244,171,29)" fg:x="1122" fg:w="1"/><text x="90.9533%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7033%" y="437" width="0.0808%" height="15" fill="rgb(205,19,11)" fg:x="1122" fg:w="1"/><text x="90.9533%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.7033%" y="421" width="0.0808%" height="15" fill="rgb(207,108,29)" fg:x="1122" fg:w="1"/><text x="90.9533%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7033%" y="405" width="0.0808%" height="15" fill="rgb(236,215,43)" fg:x="1122" fg:w="1"/><text x="90.9533%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="90.7033%" y="389" width="0.0808%" height="15" fill="rgb(213,58,35)" fg:x="1122" fg:w="1"/><text x="90.9533%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="90.7033%" y="373" width="0.0808%" height="15" fill="rgb(220,211,46)" fg:x="1122" fg:w="1"/><text x="90.9533%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.08%)</title><rect x="90.7842%" y="405" width="0.0808%" height="15" fill="rgb(212,134,16)" fg:x="1123" fg:w="1"/><text x="91.0342%" y="415.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (1 samples, 0.08%)</title><rect x="90.7842%" y="389" width="0.0808%" height="15" fill="rgb(232,90,44)" fg:x="1123" fg:w="1"/><text x="91.0342%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.7842%" y="373" width="0.0808%" height="15" fill="rgb(212,18,36)" fg:x="1123" fg:w="1"/><text x="91.0342%" y="383.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="90.7842%" y="357" width="0.0808%" height="15" fill="rgb(206,112,24)" fg:x="1123" fg:w="1"/><text x="91.0342%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.7842%" y="341" width="0.0808%" height="15" fill="rgb(238,223,40)" fg:x="1123" fg:w="1"/><text x="91.0342%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7842%" y="325" width="0.0808%" height="15" fill="rgb(226,169,20)" fg:x="1123" fg:w="1"/><text x="91.0342%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7842%" y="309" width="0.0808%" height="15" fill="rgb(241,64,52)" fg:x="1123" fg:w="1"/><text x="91.0342%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.7842%" y="293" width="0.0808%" height="15" fill="rgb(228,120,25)" fg:x="1123" fg:w="1"/><text x="91.0342%" y="303.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (3 samples, 0.24%)</title><rect x="90.7033%" y="485" width="0.2425%" height="15" fill="rgb(234,108,19)" fg:x="1122" fg:w="3"/><text x="90.9533%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="90.7842%" y="469" width="0.1617%" height="15" fill="rgb(236,133,29)" fg:x="1123" fg:w="2"/><text x="91.0342%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="90.7842%" y="453" width="0.1617%" height="15" fill="rgb(246,174,53)" fg:x="1123" fg:w="2"/><text x="91.0342%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="90.7842%" y="437" width="0.1617%" height="15" fill="rgb(210,105,35)" fg:x="1123" fg:w="2"/><text x="91.0342%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="90.7842%" y="421" width="0.1617%" height="15" fill="rgb(225,27,26)" fg:x="1123" fg:w="2"/><text x="91.0342%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="90.8650%" y="405" width="0.0808%" height="15" fill="rgb(233,2,39)" fg:x="1124" fg:w="1"/><text x="91.1150%" y="415.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="90.9458%" y="485" width="0.0808%" height="15" fill="rgb(219,164,26)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="495.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="90.9458%" y="469" width="0.0808%" height="15" fill="rgb(236,211,5)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="90.9458%" y="453" width="0.0808%" height="15" fill="rgb(244,227,23)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="90.9458%" y="437" width="0.0808%" height="15" fill="rgb(230,184,8)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.9458%" y="421" width="0.0808%" height="15" fill="rgb(217,125,48)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.9458%" y="405" width="0.0808%" height="15" fill="rgb(223,192,47)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="90.9458%" y="389" width="0.0808%" height="15" fill="rgb(226,119,10)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.9458%" y="373" width="0.0808%" height="15" fill="rgb(221,49,29)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9458%" y="357" width="0.0808%" height="15" fill="rgb(217,205,19)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.9458%" y="341" width="0.0808%" height="15" fill="rgb(242,104,7)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9458%" y="325" width="0.0808%" height="15" fill="rgb(209,154,48)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.9458%" y="309" width="0.0808%" height="15" fill="rgb(219,213,46)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9458%" y="293" width="0.0808%" height="15" fill="rgb(229,105,38)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.9458%" y="277" width="0.0808%" height="15" fill="rgb(205,151,5)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="287.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (67 samples, 5.42%)</title><rect x="85.6912%" y="501" width="5.4163%" height="15" fill="rgb(248,115,40)" fg:x="1060" fg:w="67"/><text x="85.9412%" y="511.50">plugins..</text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="91.0267%" y="485" width="0.0808%" height="15" fill="rgb(206,179,2)" fg:x="1126" fg:w="1"/><text x="91.2767%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="91.0267%" y="469" width="0.0808%" height="15" fill="rgb(230,103,24)" fg:x="1126" fg:w="1"/><text x="91.2767%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="91.0267%" y="453" width="0.0808%" height="15" fill="rgb(218,152,4)" fg:x="1126" fg:w="1"/><text x="91.2767%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.1075%" y="469" width="0.0808%" height="15" fill="rgb(236,161,54)" fg:x="1127" fg:w="1"/><text x="91.3575%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.1075%" y="453" width="0.0808%" height="15" fill="rgb(226,65,17)" fg:x="1127" fg:w="1"/><text x="91.3575%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.1075%" y="437" width="0.0808%" height="15" fill="rgb(221,134,44)" fg:x="1127" fg:w="1"/><text x="91.3575%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.1075%" y="421" width="0.0808%" height="15" fill="rgb(251,129,4)" fg:x="1127" fg:w="1"/><text x="91.3575%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.1075%" y="405" width="0.0808%" height="15" fill="rgb(244,32,34)" fg:x="1127" fg:w="1"/><text x="91.3575%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.1075%" y="389" width="0.0808%" height="15" fill="rgb(251,224,37)" fg:x="1127" fg:w="1"/><text x="91.3575%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.1075%" y="373" width="0.0808%" height="15" fill="rgb(248,117,31)" fg:x="1127" fg:w="1"/><text x="91.3575%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="91.1884%" y="421" width="0.1617%" height="15" fill="rgb(222,208,37)" fg:x="1128" fg:w="2"/><text x="91.4384%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="91.1884%" y="405" width="0.1617%" height="15" fill="rgb(234,211,25)" fg:x="1128" fg:w="2"/><text x="91.4384%" y="415.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="91.1884%" y="389" width="0.1617%" height="15" fill="rgb(211,72,6)" fg:x="1128" fg:w="2"/><text x="91.4384%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="91.1884%" y="373" width="0.1617%" height="15" fill="rgb(249,198,38)" fg:x="1128" fg:w="2"/><text x="91.4384%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.1884%" y="357" width="0.1617%" height="15" fill="rgb(221,86,51)" fg:x="1128" fg:w="2"/><text x="91.4384%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="91.1884%" y="341" width="0.1617%" height="15" fill="rgb(226,178,43)" fg:x="1128" fg:w="2"/><text x="91.4384%" y="351.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="91.2692%" y="325" width="0.0808%" height="15" fill="rgb(215,145,7)" fg:x="1129" fg:w="1"/><text x="91.5192%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="91.2692%" y="309" width="0.0808%" height="15" fill="rgb(250,202,36)" fg:x="1129" fg:w="1"/><text x="91.5192%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2692%" y="293" width="0.0808%" height="15" fill="rgb(215,86,13)" fg:x="1129" fg:w="1"/><text x="91.5192%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="91.3500%" y="389" width="0.0808%" height="15" fill="rgb(221,134,12)" fg:x="1130" fg:w="1"/><text x="91.6000%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="91.1884%" y="453" width="0.3234%" height="15" fill="rgb(213,82,10)" fg:x="1128" fg:w="4"/><text x="91.4384%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="91.1884%" y="437" width="0.3234%" height="15" fill="rgb(214,142,0)" fg:x="1128" fg:w="4"/><text x="91.4384%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="91.3500%" y="421" width="0.1617%" height="15" fill="rgb(205,145,9)" fg:x="1130" fg:w="2"/><text x="91.6000%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.3500%" y="405" width="0.1617%" height="15" fill="rgb(244,214,8)" fg:x="1130" fg:w="2"/><text x="91.6000%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="91.4309%" y="389" width="0.0808%" height="15" fill="rgb(224,72,51)" fg:x="1131" fg:w="1"/><text x="91.6809%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="91.4309%" y="373" width="0.0808%" height="15" fill="rgb(233,137,37)" fg:x="1131" fg:w="1"/><text x="91.6809%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="91.4309%" y="357" width="0.0808%" height="15" fill="rgb(208,71,28)" fg:x="1131" fg:w="1"/><text x="91.6809%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="91.4309%" y="341" width="0.0808%" height="15" fill="rgb(226,31,7)" fg:x="1131" fg:w="1"/><text x="91.6809%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5117%" y="453" width="0.0808%" height="15" fill="rgb(229,62,18)" fg:x="1132" fg:w="1"/><text x="91.7617%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5117%" y="437" width="0.0808%" height="15" fill="rgb(226,74,28)" fg:x="1132" fg:w="1"/><text x="91.7617%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5117%" y="421" width="0.0808%" height="15" fill="rgb(214,170,18)" fg:x="1132" fg:w="1"/><text x="91.7617%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.5117%" y="405" width="0.0808%" height="15" fill="rgb(227,229,35)" fg:x="1132" fg:w="1"/><text x="91.7617%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.5117%" y="389" width="0.0808%" height="15" fill="rgb(225,181,39)" fg:x="1132" fg:w="1"/><text x="91.7617%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.5117%" y="373" width="0.0808%" height="15" fill="rgb(253,124,44)" fg:x="1132" fg:w="1"/><text x="91.7617%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="91.5117%" y="357" width="0.0808%" height="15" fill="rgb(220,75,18)" fg:x="1132" fg:w="1"/><text x="91.7617%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="91.5117%" y="341" width="0.0808%" height="15" fill="rgb(239,175,43)" fg:x="1132" fg:w="1"/><text x="91.7617%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.5926%" y="405" width="0.0808%" height="15" fill="rgb(228,112,50)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5926%" y="389" width="0.0808%" height="15" fill="rgb(232,105,36)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5926%" y="373" width="0.0808%" height="15" fill="rgb(227,137,47)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.5926%" y="357" width="0.0808%" height="15" fill="rgb(217,51,9)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.5926%" y="341" width="0.0808%" height="15" fill="rgb(245,117,0)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.5926%" y="325" width="0.0808%" height="15" fill="rgb(252,52,30)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.5926%" y="309" width="0.0808%" height="15" fill="rgb(227,85,33)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.5926%" y="293" width="0.0808%" height="15" fill="rgb(220,157,20)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.5926%" y="277" width="0.0808%" height="15" fill="rgb(254,14,34)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.5926%" y="261" width="0.0808%" height="15" fill="rgb(216,103,41)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.5926%" y="245" width="0.0808%" height="15" fill="rgb(245,221,9)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.5926%" y="229" width="0.0808%" height="15" fill="rgb(254,136,47)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5926%" y="213" width="0.0808%" height="15" fill="rgb(235,71,46)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="223.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.65%)</title><rect x="91.1075%" y="501" width="0.6467%" height="15" fill="rgb(242,154,29)" fg:x="1127" fg:w="8"/><text x="91.3575%" y="511.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.65%)</title><rect x="91.1075%" y="485" width="0.6467%" height="15" fill="rgb(210,65,31)" fg:x="1127" fg:w="8"/><text x="91.3575%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (7 samples, 0.57%)</title><rect x="91.1884%" y="469" width="0.5659%" height="15" fill="rgb(244,9,50)" fg:x="1128" fg:w="7"/><text x="91.4384%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="91.5926%" y="453" width="0.1617%" height="15" fill="rgb(215,141,38)" fg:x="1133" fg:w="2"/><text x="91.8426%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="91.5926%" y="437" width="0.1617%" height="15" fill="rgb(241,129,6)" fg:x="1133" fg:w="2"/><text x="91.8426%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="91.5926%" y="421" width="0.1617%" height="15" fill="rgb(253,169,4)" fg:x="1133" fg:w="2"/><text x="91.8426%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.6734%" y="405" width="0.0808%" height="15" fill="rgb(237,82,36)" fg:x="1134" fg:w="1"/><text x="91.9234%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.6734%" y="389" width="0.0808%" height="15" fill="rgb(209,171,11)" fg:x="1134" fg:w="1"/><text x="91.9234%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.6734%" y="373" width="0.0808%" height="15" fill="rgb(242,19,22)" fg:x="1134" fg:w="1"/><text x="91.9234%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.6734%" y="357" width="0.0808%" height="15" fill="rgb(251,122,24)" fg:x="1134" fg:w="1"/><text x="91.9234%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.6734%" y="341" width="0.0808%" height="15" fill="rgb(226,166,42)" fg:x="1134" fg:w="1"/><text x="91.9234%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.6734%" y="325" width="0.0808%" height="15" fill="rgb(244,101,48)" fg:x="1134" fg:w="1"/><text x="91.9234%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.6734%" y="309" width="0.0808%" height="15" fill="rgb(227,125,1)" fg:x="1134" fg:w="1"/><text x="91.9234%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7542%" y="373" width="0.0808%" height="15" fill="rgb(206,79,43)" fg:x="1135" fg:w="1"/><text x="92.0042%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7542%" y="357" width="0.0808%" height="15" fill="rgb(241,109,41)" fg:x="1135" fg:w="1"/><text x="92.0042%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="91.7542%" y="485" width="0.1617%" height="15" fill="rgb(219,73,4)" fg:x="1135" fg:w="2"/><text x="92.0042%" y="495.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="91.7542%" y="469" width="0.1617%" height="15" fill="rgb(239,25,41)" fg:x="1135" fg:w="2"/><text x="92.0042%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="91.7542%" y="453" width="0.1617%" height="15" fill="rgb(208,88,46)" fg:x="1135" fg:w="2"/><text x="92.0042%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.7542%" y="437" width="0.1617%" height="15" fill="rgb(239,184,9)" fg:x="1135" fg:w="2"/><text x="92.0042%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="91.7542%" y="421" width="0.1617%" height="15" fill="rgb(223,114,13)" fg:x="1135" fg:w="2"/><text x="92.0042%" y="431.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="91.7542%" y="405" width="0.1617%" height="15" fill="rgb(214,28,42)" fg:x="1135" fg:w="2"/><text x="92.0042%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="91.7542%" y="389" width="0.1617%" height="15" fill="rgb(252,32,44)" fg:x="1135" fg:w="2"/><text x="92.0042%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="91.8351%" y="373" width="0.0808%" height="15" fill="rgb(231,159,4)" fg:x="1136" fg:w="1"/><text x="92.0851%" y="383.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="91.9159%" y="485" width="0.0808%" height="15" fill="rgb(210,35,26)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="91.9159%" y="469" width="0.0808%" height="15" fill="rgb(208,190,37)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="91.9159%" y="453" width="0.0808%" height="15" fill="rgb(226,148,22)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="91.9159%" y="437" width="0.0808%" height="15" fill="rgb(242,153,24)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="91.9159%" y="421" width="0.0808%" height="15" fill="rgb(213,133,7)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="91.9159%" y="405" width="0.0808%" height="15" fill="rgb(248,206,18)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.9159%" y="389" width="0.0808%" height="15" fill="rgb(233,157,4)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.9159%" y="373" width="0.0808%" height="15" fill="rgb(249,179,32)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.9159%" y="357" width="0.0808%" height="15" fill="rgb(248,69,35)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="91.9159%" y="341" width="0.0808%" height="15" fill="rgb(249,158,38)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="91.9159%" y="325" width="0.0808%" height="15" fill="rgb(223,18,43)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="91.9159%" y="309" width="0.0808%" height="15" fill="rgb(238,42,45)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="91.9159%" y="293" width="0.0808%" height="15" fill="rgb(219,65,47)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="91.9159%" y="277" width="0.0808%" height="15" fill="rgb(248,153,12)" fg:x="1137" fg:w="1"/><text x="92.1659%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="91.9968%" y="453" width="0.1617%" height="15" fill="rgb(240,118,4)" fg:x="1138" fg:w="2"/><text x="92.2468%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.0776%" y="437" width="0.0808%" height="15" fill="rgb(250,96,34)" fg:x="1139" fg:w="1"/><text x="92.3276%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="92.0776%" y="421" width="0.0808%" height="15" fill="rgb(221,15,4)" fg:x="1139" fg:w="1"/><text x="92.3276%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.0776%" y="405" width="0.0808%" height="15" fill="rgb(217,149,33)" fg:x="1139" fg:w="1"/><text x="92.3276%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0776%" y="389" width="0.0808%" height="15" fill="rgb(213,58,29)" fg:x="1139" fg:w="1"/><text x="92.3276%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.0776%" y="373" width="0.0808%" height="15" fill="rgb(236,218,9)" fg:x="1139" fg:w="1"/><text x="92.3276%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0776%" y="357" width="0.0808%" height="15" fill="rgb(248,40,19)" fg:x="1139" fg:w="1"/><text x="92.3276%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.0776%" y="341" width="0.0808%" height="15" fill="rgb(212,17,6)" fg:x="1139" fg:w="1"/><text x="92.3276%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.0776%" y="325" width="0.0808%" height="15" fill="rgb(206,212,20)" fg:x="1139" fg:w="1"/><text x="92.3276%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.0776%" y="309" width="0.0808%" height="15" fill="rgb(229,80,37)" fg:x="1139" fg:w="1"/><text x="92.3276%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="92.1584%" y="437" width="0.0808%" height="15" fill="rgb(253,8,37)" fg:x="1140" fg:w="1"/><text x="92.4084%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="92.1584%" y="421" width="0.0808%" height="15" fill="rgb(215,16,43)" fg:x="1140" fg:w="1"/><text x="92.4084%" y="431.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="92.1584%" y="405" width="0.0808%" height="15" fill="rgb(236,219,16)" fg:x="1140" fg:w="1"/><text x="92.4084%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1584%" y="389" width="0.0808%" height="15" fill="rgb(251,0,3)" fg:x="1140" fg:w="1"/><text x="92.4084%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1584%" y="373" width="0.0808%" height="15" fill="rgb(207,133,37)" fg:x="1140" fg:w="1"/><text x="92.4084%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="92.2393%" y="437" width="0.0808%" height="15" fill="rgb(250,143,20)" fg:x="1141" fg:w="1"/><text x="92.4893%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2393%" y="421" width="0.0808%" height="15" fill="rgb(242,19,50)" fg:x="1141" fg:w="1"/><text x="92.4893%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2393%" y="405" width="0.0808%" height="15" fill="rgb(206,124,43)" fg:x="1141" fg:w="1"/><text x="92.4893%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="92.2393%" y="389" width="0.0808%" height="15" fill="rgb(229,4,38)" fg:x="1141" fg:w="1"/><text x="92.4893%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.2393%" y="373" width="0.0808%" height="15" fill="rgb(247,220,45)" fg:x="1141" fg:w="1"/><text x="92.4893%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="92.3201%" y="405" width="0.0808%" height="15" fill="rgb(247,195,0)" fg:x="1142" fg:w="1"/><text x="92.5701%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="92.3201%" y="389" width="0.0808%" height="15" fill="rgb(252,12,19)" fg:x="1142" fg:w="1"/><text x="92.5701%" y="399.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (140 samples, 11.32%)</title><rect x="81.1641%" y="517" width="11.3177%" height="15" fill="rgb(222,49,50)" fg:x="1004" fg:w="140"/><text x="81.4141%" y="527.50">&lt;tests::HoldingKe..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (9 samples, 0.73%)</title><rect x="91.7542%" y="501" width="0.7276%" height="15" fill="rgb(209,157,28)" fg:x="1135" fg:w="9"/><text x="92.0042%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (6 samples, 0.49%)</title><rect x="91.9968%" y="485" width="0.4850%" height="15" fill="rgb(238,174,24)" fg:x="1138" fg:w="6"/><text x="92.2468%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.49%)</title><rect x="91.9968%" y="469" width="0.4850%" height="15" fill="rgb(224,17,28)" fg:x="1138" fg:w="6"/><text x="92.2468%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="92.1584%" y="453" width="0.3234%" height="15" fill="rgb(249,7,29)" fg:x="1140" fg:w="4"/><text x="92.4084%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="92.3201%" y="437" width="0.1617%" height="15" fill="rgb(243,178,4)" fg:x="1142" fg:w="2"/><text x="92.5701%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="92.3201%" y="421" width="0.1617%" height="15" fill="rgb(246,138,35)" fg:x="1142" fg:w="2"/><text x="92.5701%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="92.4010%" y="405" width="0.0808%" height="15" fill="rgb(251,85,18)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="92.4010%" y="389" width="0.0808%" height="15" fill="rgb(254,55,9)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="92.4010%" y="373" width="0.0808%" height="15" fill="rgb(248,4,50)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="92.4010%" y="357" width="0.0808%" height="15" fill="rgb(215,208,14)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="92.4010%" y="341" width="0.0808%" height="15" fill="rgb(218,37,18)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="92.4010%" y="325" width="0.0808%" height="15" fill="rgb(206,104,13)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="335.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="92.4818%" y="501" width="0.0808%" height="15" fill="rgb(248,94,22)" fg:x="1144" fg:w="1"/><text x="92.7318%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4818%" y="485" width="0.0808%" height="15" fill="rgb(235,42,46)" fg:x="1144" fg:w="1"/><text x="92.7318%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="92.5627%" y="501" width="0.0808%" height="15" fill="rgb(220,228,48)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.5627%" y="485" width="0.0808%" height="15" fill="rgb(216,58,12)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.5627%" y="469" width="0.0808%" height="15" fill="rgb(223,97,52)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.5627%" y="453" width="0.0808%" height="15" fill="rgb(208,159,17)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="463.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="92.5627%" y="437" width="0.0808%" height="15" fill="rgb(215,172,9)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="447.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="92.5627%" y="421" width="0.0808%" height="15" fill="rgb(252,175,30)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="431.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="92.5627%" y="405" width="0.0808%" height="15" fill="rgb(209,159,10)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.5627%" y="389" width="0.0808%" height="15" fill="rgb(229,73,51)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.5627%" y="373" width="0.0808%" height="15" fill="rgb(208,212,43)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="383.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="92.5627%" y="357" width="0.0808%" height="15" fill="rgb(254,123,53)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.5627%" y="341" width="0.0808%" height="15" fill="rgb(254,128,49)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="351.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="92.5627%" y="325" width="0.0808%" height="15" fill="rgb(246,16,16)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.08%)</title><rect x="92.5627%" y="309" width="0.0808%" height="15" fill="rgb(209,200,1)" fg:x="1145" fg:w="1"/><text x="92.8127%" y="319.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="92.6435%" y="469" width="0.1617%" height="15" fill="rgb(235,9,3)" fg:x="1146" fg:w="2"/><text x="92.8935%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="92.7243%" y="453" width="0.0808%" height="15" fill="rgb(233,121,54)" fg:x="1147" fg:w="1"/><text x="92.9743%" y="463.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="92.7243%" y="437" width="0.0808%" height="15" fill="rgb(236,80,25)" fg:x="1147" fg:w="1"/><text x="92.9743%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="92.8860%" y="405" width="0.1617%" height="15" fill="rgb(220,44,24)" fg:x="1149" fg:w="2"/><text x="93.1360%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.8860%" y="389" width="0.1617%" height="15" fill="rgb(236,225,16)" fg:x="1149" fg:w="2"/><text x="93.1360%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.8860%" y="373" width="0.1617%" height="15" fill="rgb(237,140,0)" fg:x="1149" fg:w="2"/><text x="93.1360%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.9669%" y="357" width="0.0808%" height="15" fill="rgb(243,225,53)" fg:x="1150" fg:w="1"/><text x="93.2169%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="93.0477%" y="389" width="0.1617%" height="15" fill="rgb(240,140,30)" fg:x="1151" fg:w="2"/><text x="93.2977%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="93.0477%" y="373" width="0.1617%" height="15" fill="rgb(217,51,16)" fg:x="1151" fg:w="2"/><text x="93.2977%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.1285%" y="357" width="0.0808%" height="15" fill="rgb(245,75,50)" fg:x="1152" fg:w="1"/><text x="93.3785%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1285%" y="341" width="0.0808%" height="15" fill="rgb(208,174,22)" fg:x="1152" fg:w="1"/><text x="93.3785%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.1285%" y="325" width="0.0808%" height="15" fill="rgb(219,98,50)" fg:x="1152" fg:w="1"/><text x="93.3785%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.1285%" y="309" width="0.0808%" height="15" fill="rgb(243,138,3)" fg:x="1152" fg:w="1"/><text x="93.3785%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.1285%" y="293" width="0.0808%" height="15" fill="rgb(243,132,26)" fg:x="1152" fg:w="1"/><text x="93.3785%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="93.2094%" y="373" width="0.1617%" height="15" fill="rgb(250,201,8)" fg:x="1153" fg:w="2"/><text x="93.4594%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.2902%" y="357" width="0.0808%" height="15" fill="rgb(213,91,26)" fg:x="1154" fg:w="1"/><text x="93.5402%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.2902%" y="341" width="0.0808%" height="15" fill="rgb(229,117,1)" fg:x="1154" fg:w="1"/><text x="93.5402%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="93.3711%" y="357" width="0.1617%" height="15" fill="rgb(229,24,6)" fg:x="1155" fg:w="2"/><text x="93.6211%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.4519%" y="341" width="0.0808%" height="15" fill="rgb(206,69,11)" fg:x="1156" fg:w="1"/><text x="93.7019%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.4519%" y="325" width="0.0808%" height="15" fill="rgb(234,111,34)" fg:x="1156" fg:w="1"/><text x="93.7019%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="93.5327%" y="341" width="0.1617%" height="15" fill="rgb(213,187,51)" fg:x="1157" fg:w="2"/><text x="93.7827%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="93.5327%" y="325" width="0.1617%" height="15" fill="rgb(207,45,11)" fg:x="1157" fg:w="2"/><text x="93.7827%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.6136%" y="309" width="0.0808%" height="15" fill="rgb(225,151,47)" fg:x="1158" fg:w="1"/><text x="93.8636%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="93.6136%" y="293" width="0.0808%" height="15" fill="rgb(211,226,5)" fg:x="1158" fg:w="1"/><text x="93.8636%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="93.6944%" y="341" width="0.0808%" height="15" fill="rgb(214,83,52)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="93.6944%" y="325" width="0.0808%" height="15" fill="rgb(229,49,53)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.6944%" y="309" width="0.0808%" height="15" fill="rgb(246,8,28)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.6944%" y="293" width="0.0808%" height="15" fill="rgb(207,28,41)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="93.3711%" y="373" width="0.4850%" height="15" fill="rgb(254,22,25)" fg:x="1155" fg:w="6"/><text x="93.6211%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="93.5327%" y="357" width="0.3234%" height="15" fill="rgb(209,120,42)" fg:x="1157" fg:w="4"/><text x="93.7827%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.7753%" y="341" width="0.0808%" height="15" fill="rgb(216,194,18)" fg:x="1160" fg:w="1"/><text x="94.0253%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.7753%" y="325" width="0.0808%" height="15" fill="rgb(213,70,17)" fg:x="1160" fg:w="1"/><text x="94.0253%" y="335.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.05%)</title><rect x="92.8860%" y="421" width="1.0509%" height="15" fill="rgb(228,66,19)" fg:x="1149" fg:w="13"/><text x="93.1360%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="93.0477%" y="405" width="0.8892%" height="15" fill="rgb(236,221,54)" fg:x="1151" fg:w="11"/><text x="93.2977%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="93.2094%" y="389" width="0.7276%" height="15" fill="rgb(207,175,15)" fg:x="1153" fg:w="9"/><text x="93.4594%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.8561%" y="373" width="0.0808%" height="15" fill="rgb(234,76,8)" fg:x="1161" fg:w="1"/><text x="94.1061%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.8561%" y="357" width="0.0808%" height="15" fill="rgb(243,106,0)" fg:x="1161" fg:w="1"/><text x="94.1061%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.8561%" y="341" width="0.0808%" height="15" fill="rgb(208,48,19)" fg:x="1161" fg:w="1"/><text x="94.1061%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.9369%" y="421" width="0.0808%" height="15" fill="rgb(251,50,29)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.9369%" y="405" width="0.0808%" height="15" fill="rgb(222,31,49)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.9369%" y="389" width="0.0808%" height="15" fill="rgb(232,33,18)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.9369%" y="373" width="0.0808%" height="15" fill="rgb(209,1,44)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.9369%" y="357" width="0.0808%" height="15" fill="rgb(211,7,1)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.1795%" y="357" width="0.0808%" height="15" fill="rgb(224,111,27)" fg:x="1165" fg:w="1"/><text x="94.4295%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3411%" y="341" width="0.0808%" height="15" fill="rgb(252,195,39)" fg:x="1167" fg:w="1"/><text x="94.5911%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.4220%" y="325" width="0.0808%" height="15" fill="rgb(237,198,5)" fg:x="1168" fg:w="1"/><text x="94.6720%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5028%" y="277" width="0.0808%" height="15" fill="rgb(232,148,1)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="94.5028%" y="309" width="0.1617%" height="15" fill="rgb(249,41,3)" fg:x="1169" fg:w="2"/><text x="94.7528%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="94.5028%" y="293" width="0.1617%" height="15" fill="rgb(215,14,33)" fg:x="1169" fg:w="2"/><text x="94.7528%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.5837%" y="277" width="0.0808%" height="15" fill="rgb(209,146,24)" fg:x="1170" fg:w="1"/><text x="94.8337%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.5837%" y="261" width="0.0808%" height="15" fill="rgb(219,51,47)" fg:x="1170" fg:w="1"/><text x="94.8337%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.5837%" y="245" width="0.0808%" height="15" fill="rgb(234,217,40)" fg:x="1170" fg:w="1"/><text x="94.8337%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5837%" y="229" width="0.0808%" height="15" fill="rgb(228,34,26)" fg:x="1170" fg:w="1"/><text x="94.8337%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="94.0986%" y="389" width="0.6467%" height="15" fill="rgb(224,50,29)" fg:x="1164" fg:w="8"/><text x="94.3486%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.65%)</title><rect x="94.0986%" y="373" width="0.6467%" height="15" fill="rgb(205,79,51)" fg:x="1164" fg:w="8"/><text x="94.3486%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="94.2603%" y="357" width="0.4850%" height="15" fill="rgb(218,136,28)" fg:x="1166" fg:w="6"/><text x="94.5103%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="94.4220%" y="341" width="0.3234%" height="15" fill="rgb(220,150,10)" fg:x="1168" fg:w="4"/><text x="94.6720%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="94.5028%" y="325" width="0.2425%" height="15" fill="rgb(242,158,47)" fg:x="1169" fg:w="3"/><text x="94.7528%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.6645%" y="309" width="0.0808%" height="15" fill="rgb(209,68,0)" fg:x="1171" fg:w="1"/><text x="94.9145%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6645%" y="293" width="0.0808%" height="15" fill="rgb(208,13,41)" fg:x="1171" fg:w="1"/><text x="94.9145%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="94.7454%" y="309" width="0.0808%" height="15" fill="rgb(226,201,7)" fg:x="1172" fg:w="1"/><text x="94.9954%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.7454%" y="293" width="0.0808%" height="15" fill="rgb(236,103,26)" fg:x="1172" fg:w="1"/><text x="94.9954%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="94.7454%" y="373" width="0.1617%" height="15" fill="rgb(243,162,8)" fg:x="1172" fg:w="2"/><text x="94.9954%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="94.7454%" y="357" width="0.1617%" height="15" fill="rgb(237,225,11)" fg:x="1172" fg:w="2"/><text x="94.9954%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="94.7454%" y="341" width="0.1617%" height="15" fill="rgb(247,186,32)" fg:x="1172" fg:w="2"/><text x="94.9954%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="94.7454%" y="325" width="0.1617%" height="15" fill="rgb(215,26,28)" fg:x="1172" fg:w="2"/><text x="94.9954%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.8262%" y="309" width="0.0808%" height="15" fill="rgb(208,121,6)" fg:x="1173" fg:w="1"/><text x="95.0762%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="94.9070%" y="373" width="0.0808%" height="15" fill="rgb(225,91,3)" fg:x="1174" fg:w="1"/><text x="95.1570%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="94.9070%" y="357" width="0.0808%" height="15" fill="rgb(246,119,36)" fg:x="1174" fg:w="1"/><text x="95.1570%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9070%" y="341" width="0.0808%" height="15" fill="rgb(254,173,2)" fg:x="1174" fg:w="1"/><text x="95.1570%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (13 samples, 1.05%)</title><rect x="94.0178%" y="405" width="1.0509%" height="15" fill="rgb(209,87,54)" fg:x="1163" fg:w="13"/><text x="94.2678%" y="415.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="94.7454%" y="389" width="0.3234%" height="15" fill="rgb(223,216,20)" fg:x="1172" fg:w="4"/><text x="94.9954%" y="399.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="94.9879%" y="373" width="0.0808%" height="15" fill="rgb(220,31,8)" fg:x="1175" fg:w="1"/><text x="95.2379%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9879%" y="357" width="0.0808%" height="15" fill="rgb(220,185,15)" fg:x="1175" fg:w="1"/><text x="95.2379%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0687%" y="373" width="0.0808%" height="15" fill="rgb(247,190,50)" fg:x="1176" fg:w="1"/><text x="95.3187%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0687%" y="357" width="0.0808%" height="15" fill="rgb(239,173,47)" fg:x="1176" fg:w="1"/><text x="95.3187%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="95.1496%" y="373" width="0.0808%" height="15" fill="rgb(218,190,42)" fg:x="1177" fg:w="1"/><text x="95.3996%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.1496%" y="357" width="0.0808%" height="15" fill="rgb(251,207,16)" fg:x="1177" fg:w="1"/><text x="95.3996%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="95.1496%" y="341" width="0.0808%" height="15" fill="rgb(222,199,47)" fg:x="1177" fg:w="1"/><text x="95.3996%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="95.1496%" y="325" width="0.0808%" height="15" fill="rgb(245,190,7)" fg:x="1177" fg:w="1"/><text x="95.3996%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="95.2304%" y="373" width="0.0808%" height="15" fill="rgb(239,85,38)" fg:x="1178" fg:w="1"/><text x="95.4804%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.2304%" y="357" width="0.0808%" height="15" fill="rgb(229,69,51)" fg:x="1178" fg:w="1"/><text x="95.4804%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="95.3921%" y="341" width="0.0808%" height="15" fill="rgb(231,104,51)" fg:x="1180" fg:w="1"/><text x="95.6421%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="95.4729%" y="325" width="0.1617%" height="15" fill="rgb(235,49,4)" fg:x="1181" fg:w="2"/><text x="95.7229%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="95.4729%" y="309" width="0.1617%" height="15" fill="rgb(246,166,20)" fg:x="1181" fg:w="2"/><text x="95.7229%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="95.4729%" y="293" width="0.1617%" height="15" fill="rgb(230,119,37)" fg:x="1181" fg:w="2"/><text x="95.7229%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="95.5538%" y="277" width="0.0808%" height="15" fill="rgb(234,77,34)" fg:x="1182" fg:w="1"/><text x="95.8038%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="95.5538%" y="261" width="0.0808%" height="15" fill="rgb(211,222,33)" fg:x="1182" fg:w="1"/><text x="95.8038%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5538%" y="245" width="0.0808%" height="15" fill="rgb(226,45,42)" fg:x="1182" fg:w="1"/><text x="95.8038%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5538%" y="229" width="0.0808%" height="15" fill="rgb(215,174,28)" fg:x="1182" fg:w="1"/><text x="95.8038%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5538%" y="213" width="0.0808%" height="15" fill="rgb(254,173,49)" fg:x="1182" fg:w="1"/><text x="95.8038%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="95.4729%" y="341" width="0.4042%" height="15" fill="rgb(229,191,6)" fg:x="1181" fg:w="5"/><text x="95.7229%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="95.6346%" y="325" width="0.2425%" height="15" fill="rgb(212,145,22)" fg:x="1183" fg:w="3"/><text x="95.8846%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="95.7154%" y="309" width="0.1617%" height="15" fill="rgb(226,6,51)" fg:x="1184" fg:w="2"/><text x="95.9654%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7963%" y="293" width="0.0808%" height="15" fill="rgb(227,128,8)" fg:x="1185" fg:w="1"/><text x="96.0463%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7963%" y="277" width="0.0808%" height="15" fill="rgb(205,24,10)" fg:x="1185" fg:w="1"/><text x="96.0463%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.7963%" y="261" width="0.0808%" height="15" fill="rgb(217,147,27)" fg:x="1185" fg:w="1"/><text x="96.0463%" y="271.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.89%)</title><rect x="95.0687%" y="405" width="0.8892%" height="15" fill="rgb(250,82,42)" fg:x="1176" fg:w="11"/><text x="95.3187%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.89%)</title><rect x="95.0687%" y="389" width="0.8892%" height="15" fill="rgb(248,93,17)" fg:x="1176" fg:w="11"/><text x="95.3187%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.65%)</title><rect x="95.3112%" y="373" width="0.6467%" height="15" fill="rgb(254,212,40)" fg:x="1179" fg:w="8"/><text x="95.5612%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.57%)</title><rect x="95.3921%" y="357" width="0.5659%" height="15" fill="rgb(229,209,2)" fg:x="1180" fg:w="7"/><text x="95.6421%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="95.8771%" y="341" width="0.0808%" height="15" fill="rgb(211,50,43)" fg:x="1186" fg:w="1"/><text x="96.1271%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.0388%" y="309" width="0.3234%" height="15" fill="rgb(245,196,29)" fg:x="1188" fg:w="4"/><text x="96.2888%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.0388%" y="293" width="0.3234%" height="15" fill="rgb(216,132,13)" fg:x="1188" fg:w="4"/><text x="96.2888%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.0388%" y="277" width="0.3234%" height="15" fill="rgb(251,108,21)" fg:x="1188" fg:w="4"/><text x="96.2888%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.0388%" y="261" width="0.3234%" height="15" fill="rgb(229,174,54)" fg:x="1188" fg:w="4"/><text x="96.2888%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.1196%" y="245" width="0.2425%" height="15" fill="rgb(211,175,47)" fg:x="1189" fg:w="3"/><text x="96.3696%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.1196%" y="229" width="0.2425%" height="15" fill="rgb(234,5,37)" fg:x="1189" fg:w="3"/><text x="96.3696%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="96.1196%" y="213" width="0.2425%" height="15" fill="rgb(244,150,43)" fg:x="1189" fg:w="3"/><text x="96.3696%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.2005%" y="197" width="0.1617%" height="15" fill="rgb(242,172,38)" fg:x="1190" fg:w="2"/><text x="96.4505%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="95.9580%" y="341" width="0.4850%" height="15" fill="rgb(205,27,8)" fg:x="1187" fg:w="6"/><text x="96.2080%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="95.9580%" y="325" width="0.4850%" height="15" fill="rgb(217,57,3)" fg:x="1187" fg:w="6"/><text x="96.2080%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.3622%" y="309" width="0.0808%" height="15" fill="rgb(242,21,38)" fg:x="1192" fg:w="1"/><text x="96.6122%" y="319.50"></text></g><g><title>engine::session::state::State::close (48 samples, 3.88%)</title><rect x="92.6435%" y="501" width="3.8804%" height="15" fill="rgb(209,64,43)" fg:x="1146" fg:w="48"/><text x="92.8935%" y="511.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (48 samples, 3.88%)</title><rect x="92.6435%" y="485" width="3.8804%" height="15" fill="rgb(222,2,46)" fg:x="1146" fg:w="48"/><text x="92.8935%" y="495.50">engi..</text></g><g><title>core::iter::adapters::try_process (46 samples, 3.72%)</title><rect x="92.8052%" y="469" width="3.7187%" height="15" fill="rgb(218,19,44)" fg:x="1148" fg:w="46"/><text x="93.0552%" y="479.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (46 samples, 3.72%)</title><rect x="92.8052%" y="453" width="3.7187%" height="15" fill="rgb(240,203,42)" fg:x="1148" fg:w="46"/><text x="93.0552%" y="463.50">&lt;all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (45 samples, 3.64%)</title><rect x="92.8860%" y="437" width="3.6378%" height="15" fill="rgb(229,23,45)" fg:x="1149" fg:w="45"/><text x="93.1360%" y="447.50">engi..</text></g><g><title>kernel::model::any_entity_changes (31 samples, 2.51%)</title><rect x="94.0178%" y="421" width="2.5061%" height="15" fill="rgb(205,228,51)" fg:x="1163" fg:w="31"/><text x="94.2678%" y="431.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.57%)</title><rect x="95.9580%" y="405" width="0.5659%" height="15" fill="rgb(239,36,20)" fg:x="1187" fg:w="7"/><text x="96.2080%" y="415.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.57%)</title><rect x="95.9580%" y="389" width="0.5659%" height="15" fill="rgb(248,172,27)" fg:x="1187" fg:w="7"/><text x="96.2080%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="95.9580%" y="373" width="0.5659%" height="15" fill="rgb(244,55,32)" fg:x="1187" fg:w="7"/><text x="96.2080%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="95.9580%" y="357" width="0.5659%" height="15" fill="rgb(215,97,16)" fg:x="1187" fg:w="7"/><text x="96.2080%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.4430%" y="341" width="0.0808%" height="15" fill="rgb(224,80,29)" fg:x="1193" fg:w="1"/><text x="96.6930%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.4430%" y="325" width="0.0808%" height="15" fill="rgb(216,93,47)" fg:x="1193" fg:w="1"/><text x="96.6930%" y="335.50"></text></g><g><title>engine::session::Session::close (51 samples, 4.12%)</title><rect x="92.4818%" y="517" width="4.1229%" height="15" fill="rgb(238,159,10)" fg:x="1144" fg:w="51"/><text x="92.7318%" y="527.50">engi..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="96.5238%" y="501" width="0.0808%" height="15" fill="rgb(223,98,29)" fg:x="1194" fg:w="1"/><text x="96.7738%" y="511.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="96.5238%" y="485" width="0.0808%" height="15" fill="rgb(210,176,23)" fg:x="1194" fg:w="1"/><text x="96.7738%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="96.5238%" y="469" width="0.0808%" height="15" fill="rgb(242,162,27)" fg:x="1194" fg:w="1"/><text x="96.7738%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="96.5238%" y="453" width="0.0808%" height="15" fill="rgb(245,109,32)" fg:x="1194" fg:w="1"/><text x="96.7738%" y="463.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="96.5238%" y="437" width="0.0808%" height="15" fill="rgb(248,87,8)" fg:x="1194" fg:w="1"/><text x="96.7738%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="96.6855%" y="389" width="0.0808%" height="15" fill="rgb(250,160,50)" fg:x="1196" fg:w="1"/><text x="96.9355%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6855%" y="373" width="0.0808%" height="15" fill="rgb(246,165,25)" fg:x="1196" fg:w="1"/><text x="96.9355%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6855%" y="357" width="0.0808%" height="15" fill="rgb(249,219,3)" fg:x="1196" fg:w="1"/><text x="96.9355%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7664%" y="277" width="0.0808%" height="15" fill="rgb(226,66,5)" fg:x="1197" fg:w="1"/><text x="97.0164%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7664%" y="261" width="0.0808%" height="15" fill="rgb(250,220,43)" fg:x="1197" fg:w="1"/><text x="97.0164%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7664%" y="325" width="0.1617%" height="15" fill="rgb(225,111,31)" fg:x="1197" fg:w="2"/><text x="97.0164%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7664%" y="309" width="0.1617%" height="15" fill="rgb(248,106,18)" fg:x="1197" fg:w="2"/><text x="97.0164%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7664%" y="293" width="0.1617%" height="15" fill="rgb(220,226,45)" fg:x="1197" fg:w="2"/><text x="97.0164%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8472%" y="277" width="0.0808%" height="15" fill="rgb(208,58,53)" fg:x="1198" fg:w="1"/><text x="97.0972%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8472%" y="261" width="0.0808%" height="15" fill="rgb(209,133,1)" fg:x="1198" fg:w="1"/><text x="97.0972%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8472%" y="245" width="0.0808%" height="15" fill="rgb(228,216,27)" fg:x="1198" fg:w="1"/><text x="97.0972%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8472%" y="229" width="0.0808%" height="15" fill="rgb(238,155,2)" fg:x="1198" fg:w="1"/><text x="97.0972%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.8472%" y="213" width="0.0808%" height="15" fill="rgb(244,99,37)" fg:x="1198" fg:w="1"/><text x="97.0972%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.8472%" y="197" width="0.0808%" height="15" fill="rgb(254,32,3)" fg:x="1198" fg:w="1"/><text x="97.0972%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.8472%" y="181" width="0.0808%" height="15" fill="rgb(234,46,50)" fg:x="1198" fg:w="1"/><text x="97.0972%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8472%" y="165" width="0.0808%" height="15" fill="rgb(232,118,51)" fg:x="1198" fg:w="1"/><text x="97.0972%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8472%" y="149" width="0.0808%" height="15" fill="rgb(207,24,32)" fg:x="1198" fg:w="1"/><text x="97.0972%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.8472%" y="133" width="0.0808%" height="15" fill="rgb(208,107,43)" fg:x="1198" fg:w="1"/><text x="97.0972%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.9281%" y="325" width="0.0808%" height="15" fill="rgb(231,28,9)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.9281%" y="309" width="0.0808%" height="15" fill="rgb(241,204,15)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="319.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="96.9281%" y="293" width="0.0808%" height="15" fill="rgb(214,54,15)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9281%" y="277" width="0.0808%" height="15" fill="rgb(230,12,28)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.0089%" y="229" width="0.0808%" height="15" fill="rgb(221,171,5)" fg:x="1200" fg:w="1"/><text x="97.2589%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.0089%" y="213" width="0.0808%" height="15" fill="rgb(207,72,25)" fg:x="1200" fg:w="1"/><text x="97.2589%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.0089%" y="197" width="0.0808%" height="15" fill="rgb(249,79,37)" fg:x="1200" fg:w="1"/><text x="97.2589%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.0897%" y="229" width="0.0808%" height="15" fill="rgb(209,98,49)" fg:x="1201" fg:w="1"/><text x="97.3397%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.0897%" y="213" width="0.0808%" height="15" fill="rgb(221,62,13)" fg:x="1201" fg:w="1"/><text x="97.3397%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.0897%" y="197" width="0.0808%" height="15" fill="rgb(223,39,6)" fg:x="1201" fg:w="1"/><text x="97.3397%" y="207.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (7 samples, 0.57%)</title><rect x="96.6855%" y="405" width="0.5659%" height="15" fill="rgb(246,163,20)" fg:x="1196" fg:w="7"/><text x="96.9355%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (6 samples, 0.49%)</title><rect x="96.7664%" y="389" width="0.4850%" height="15" fill="rgb(211,111,29)" fg:x="1197" fg:w="6"/><text x="97.0164%" y="399.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (6 samples, 0.49%)</title><rect x="96.7664%" y="373" width="0.4850%" height="15" fill="rgb(243,118,5)" fg:x="1197" fg:w="6"/><text x="97.0164%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (6 samples, 0.49%)</title><rect x="96.7664%" y="357" width="0.4850%" height="15" fill="rgb(240,144,52)" fg:x="1197" fg:w="6"/><text x="97.0164%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.49%)</title><rect x="96.7664%" y="341" width="0.4850%" height="15" fill="rgb(244,158,36)" fg:x="1197" fg:w="6"/><text x="97.0164%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="97.0089%" y="325" width="0.2425%" height="15" fill="rgb(241,109,37)" fg:x="1200" fg:w="3"/><text x="97.2589%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="97.0089%" y="309" width="0.2425%" height="15" fill="rgb(213,95,32)" fg:x="1200" fg:w="3"/><text x="97.2589%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.0089%" y="293" width="0.2425%" height="15" fill="rgb(252,193,9)" fg:x="1200" fg:w="3"/><text x="97.2589%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="97.0089%" y="277" width="0.2425%" height="15" fill="rgb(225,213,21)" fg:x="1200" fg:w="3"/><text x="97.2589%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.0089%" y="261" width="0.2425%" height="15" fill="rgb(220,172,46)" fg:x="1200" fg:w="3"/><text x="97.2589%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.0089%" y="245" width="0.2425%" height="15" fill="rgb(235,75,41)" fg:x="1200" fg:w="3"/><text x="97.2589%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1706%" y="229" width="0.0808%" height="15" fill="rgb(213,86,9)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.1706%" y="213" width="0.0808%" height="15" fill="rgb(238,127,51)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.1706%" y="197" width="0.0808%" height="15" fill="rgb(215,2,54)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.1706%" y="181" width="0.0808%" height="15" fill="rgb(245,80,6)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.1706%" y="165" width="0.0808%" height="15" fill="rgb(233,106,42)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1706%" y="149" width="0.0808%" height="15" fill="rgb(244,86,38)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.1706%" y="133" width="0.0808%" height="15" fill="rgb(242,167,7)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.1706%" y="117" width="0.0808%" height="15" fill="rgb(218,216,3)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="127.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (8 samples, 0.65%)</title><rect x="96.6855%" y="421" width="0.6467%" height="15" fill="rgb(206,136,36)" fg:x="1196" fg:w="8"/><text x="96.9355%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="97.2514%" y="405" width="0.0808%" height="15" fill="rgb(206,206,15)" fg:x="1203" fg:w="1"/><text x="97.5014%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="97.2514%" y="389" width="0.0808%" height="15" fill="rgb(207,163,34)" fg:x="1203" fg:w="1"/><text x="97.5014%" y="399.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="97.2514%" y="373" width="0.0808%" height="15" fill="rgb(240,127,22)" fg:x="1203" fg:w="1"/><text x="97.5014%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2514%" y="357" width="0.0808%" height="15" fill="rgb(227,49,5)" fg:x="1203" fg:w="1"/><text x="97.5014%" y="367.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="97.4939%" y="261" width="0.0808%" height="15" fill="rgb(231,8,6)" fg:x="1206" fg:w="1"/><text x="97.7439%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.4939%" y="245" width="0.0808%" height="15" fill="rgb(223,21,24)" fg:x="1206" fg:w="1"/><text x="97.7439%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (3 samples, 0.24%)</title><rect x="97.4131%" y="293" width="0.2425%" height="15" fill="rgb(244,44,52)" fg:x="1205" fg:w="3"/><text x="97.6631%" y="303.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (2 samples, 0.16%)</title><rect x="97.4939%" y="277" width="0.1617%" height="15" fill="rgb(207,73,28)" fg:x="1206" fg:w="2"/><text x="97.7439%" y="287.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::SimpleReply&gt;::serialize (1 samples, 0.08%)</title><rect x="97.5748%" y="261" width="0.0808%" height="15" fill="rgb(234,215,10)" fg:x="1207" fg:w="1"/><text x="97.8248%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (13 samples, 1.05%)</title><rect x="96.6855%" y="485" width="1.0509%" height="15" fill="rgb(236,85,3)" fg:x="1196" fg:w="13"/><text x="96.9355%" y="495.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (13 samples, 1.05%)</title><rect x="96.6855%" y="469" width="1.0509%" height="15" fill="rgb(236,102,39)" fg:x="1196" fg:w="13"/><text x="96.9355%" y="479.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (13 samples, 1.05%)</title><rect x="96.6855%" y="453" width="1.0509%" height="15" fill="rgb(243,50,8)" fg:x="1196" fg:w="13"/><text x="96.9355%" y="463.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (13 samples, 1.05%)</title><rect x="96.6855%" y="437" width="1.0509%" height="15" fill="rgb(207,111,4)" fg:x="1196" fg:w="13"/><text x="96.9355%" y="447.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="97.3323%" y="421" width="0.4042%" height="15" fill="rgb(230,52,42)" fg:x="1204" fg:w="5"/><text x="97.5823%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (5 samples, 0.40%)</title><rect x="97.3323%" y="405" width="0.4042%" height="15" fill="rgb(252,178,50)" fg:x="1204" fg:w="5"/><text x="97.5823%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="97.3323%" y="389" width="0.4042%" height="15" fill="rgb(234,46,35)" fg:x="1204" fg:w="5"/><text x="97.5823%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.40%)</title><rect x="97.3323%" y="373" width="0.4042%" height="15" fill="rgb(228,69,37)" fg:x="1204" fg:w="5"/><text x="97.5823%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="97.3323%" y="357" width="0.4042%" height="15" fill="rgb(221,21,11)" fg:x="1204" fg:w="5"/><text x="97.5823%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.40%)</title><rect x="97.3323%" y="341" width="0.4042%" height="15" fill="rgb(223,56,9)" fg:x="1204" fg:w="5"/><text x="97.5823%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.40%)</title><rect x="97.3323%" y="325" width="0.4042%" height="15" fill="rgb(234,30,19)" fg:x="1204" fg:w="5"/><text x="97.5823%" y="335.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (4 samples, 0.32%)</title><rect x="97.4131%" y="309" width="0.3234%" height="15" fill="rgb(211,64,54)" fg:x="1205" fg:w="4"/><text x="97.6631%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="97.6556%" y="293" width="0.0808%" height="15" fill="rgb(250,189,5)" fg:x="1208" fg:w="1"/><text x="97.9056%" y="303.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="97.7365%" y="485" width="0.1617%" height="15" fill="rgb(214,180,13)" fg:x="1209" fg:w="2"/><text x="97.9865%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="97.7365%" y="469" width="0.1617%" height="15" fill="rgb(238,40,40)" fg:x="1209" fg:w="2"/><text x="97.9865%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8981%" y="389" width="0.0808%" height="15" fill="rgb(214,101,38)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8981%" y="373" width="0.0808%" height="15" fill="rgb(242,65,53)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8981%" y="357" width="0.0808%" height="15" fill="rgb(230,22,45)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.8981%" y="341" width="0.0808%" height="15" fill="rgb(223,77,1)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.8981%" y="325" width="0.0808%" height="15" fill="rgb(227,33,37)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.8981%" y="309" width="0.0808%" height="15" fill="rgb(224,148,39)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8981%" y="293" width="0.0808%" height="15" fill="rgb(232,212,39)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8981%" y="277" width="0.0808%" height="15" fill="rgb(251,172,7)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.8981%" y="261" width="0.0808%" height="15" fill="rgb(219,39,9)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.8981%" y="245" width="0.0808%" height="15" fill="rgb(228,118,14)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.8981%" y="229" width="0.0808%" height="15" fill="rgb(207,140,10)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.8981%" y="213" width="0.0808%" height="15" fill="rgb(227,111,53)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8981%" y="197" width="0.0808%" height="15" fill="rgb(216,165,16)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8981%" y="421" width="0.1617%" height="15" fill="rgb(226,111,18)" fg:x="1211" fg:w="2"/><text x="98.1481%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8981%" y="405" width="0.1617%" height="15" fill="rgb(251,27,17)" fg:x="1211" fg:w="2"/><text x="98.1481%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9790%" y="389" width="0.0808%" height="15" fill="rgb(254,69,9)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9790%" y="373" width="0.0808%" height="15" fill="rgb(234,140,37)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.9790%" y="357" width="0.0808%" height="15" fill="rgb(220,93,8)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.9790%" y="341" width="0.0808%" height="15" fill="rgb(236,113,3)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.9790%" y="325" width="0.0808%" height="15" fill="rgb(234,108,23)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.9790%" y="309" width="0.0808%" height="15" fill="rgb(205,114,34)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.9790%" y="293" width="0.0808%" height="15" fill="rgb(236,200,45)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="97.8981%" y="437" width="0.2425%" height="15" fill="rgb(227,194,29)" fg:x="1211" fg:w="3"/><text x="98.1481%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0598%" y="421" width="0.0808%" height="15" fill="rgb(250,76,42)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0598%" y="405" width="0.0808%" height="15" fill="rgb(208,128,8)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0598%" y="389" width="0.0808%" height="15" fill="rgb(229,209,35)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0598%" y="373" width="0.0808%" height="15" fill="rgb(215,39,53)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0598%" y="357" width="0.0808%" height="15" fill="rgb(219,123,41)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0598%" y="341" width="0.0808%" height="15" fill="rgb(212,158,18)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0598%" y="325" width="0.0808%" height="15" fill="rgb(234,196,53)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0598%" y="309" width="0.0808%" height="15" fill="rgb(210,139,12)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0598%" y="293" width="0.0808%" height="15" fill="rgb(220,116,54)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0598%" y="277" width="0.0808%" height="15" fill="rgb(247,103,28)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0598%" y="261" width="0.0808%" height="15" fill="rgb(253,156,45)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0598%" y="245" width="0.0808%" height="15" fill="rgb(237,157,52)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2215%" y="341" width="0.0808%" height="15" fill="rgb(253,112,16)" fg:x="1215" fg:w="1"/><text x="98.4715%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2215%" y="325" width="0.0808%" height="15" fill="rgb(234,70,18)" fg:x="1215" fg:w="1"/><text x="98.4715%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2215%" y="309" width="0.0808%" height="15" fill="rgb(247,138,19)" fg:x="1215" fg:w="1"/><text x="98.4715%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="98.2215%" y="389" width="0.1617%" height="15" fill="rgb(207,171,1)" fg:x="1215" fg:w="2"/><text x="98.4715%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="98.2215%" y="373" width="0.1617%" height="15" fill="rgb(239,213,3)" fg:x="1215" fg:w="2"/><text x="98.4715%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="98.2215%" y="357" width="0.1617%" height="15" fill="rgb(226,112,4)" fg:x="1215" fg:w="2"/><text x="98.4715%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="98.3023%" y="341" width="0.0808%" height="15" fill="rgb(252,170,12)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.3023%" y="325" width="0.0808%" height="15" fill="rgb(241,106,13)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="98.3023%" y="309" width="0.0808%" height="15" fill="rgb(225,73,23)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="98.3023%" y="293" width="0.0808%" height="15" fill="rgb(251,227,29)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.3023%" y="277" width="0.0808%" height="15" fill="rgb(237,144,13)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="287.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="98.3023%" y="261" width="0.0808%" height="15" fill="rgb(232,106,46)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3023%" y="245" width="0.0808%" height="15" fill="rgb(245,154,53)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3023%" y="229" width="0.0808%" height="15" fill="rgb(212,119,47)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="98.3023%" y="213" width="0.0808%" height="15" fill="rgb(253,135,25)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="98.1407%" y="437" width="0.3234%" height="15" fill="rgb(253,208,39)" fg:x="1214" fg:w="4"/><text x="98.3907%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="98.1407%" y="421" width="0.3234%" height="15" fill="rgb(226,64,12)" fg:x="1214" fg:w="4"/><text x="98.3907%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="98.2215%" y="405" width="0.2425%" height="15" fill="rgb(214,162,37)" fg:x="1215" fg:w="3"/><text x="98.4715%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3832%" y="389" width="0.0808%" height="15" fill="rgb(250,104,5)" fg:x="1217" fg:w="1"/><text x="98.6332%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3832%" y="373" width="0.0808%" height="15" fill="rgb(220,202,50)" fg:x="1217" fg:w="1"/><text x="98.6332%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3832%" y="357" width="0.0808%" height="15" fill="rgb(248,67,38)" fg:x="1217" fg:w="1"/><text x="98.6332%" y="367.50"></text></g><g><title>engine::session::internal::Added::find_refs (9 samples, 0.73%)</title><rect x="97.8981%" y="469" width="0.7276%" height="15" fill="rgb(242,94,35)" fg:x="1211" fg:w="9"/><text x="98.1481%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (9 samples, 0.73%)</title><rect x="97.8981%" y="453" width="0.7276%" height="15" fill="rgb(209,78,37)" fg:x="1211" fg:w="9"/><text x="98.1481%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.4640%" y="437" width="0.1617%" height="15" fill="rgb(230,126,47)" fg:x="1218" fg:w="2"/><text x="98.7140%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.4640%" y="421" width="0.1617%" height="15" fill="rgb(222,110,35)" fg:x="1218" fg:w="2"/><text x="98.7140%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.5449%" y="405" width="0.0808%" height="15" fill="rgb(233,154,20)" fg:x="1219" fg:w="1"/><text x="98.7949%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.5449%" y="389" width="0.0808%" height="15" fill="rgb(223,53,50)" fg:x="1219" fg:w="1"/><text x="98.7949%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6257%" y="373" width="0.0808%" height="15" fill="rgb(251,27,26)" fg:x="1220" fg:w="1"/><text x="98.8757%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.6257%" y="357" width="0.0808%" height="15" fill="rgb(223,189,16)" fg:x="1220" fg:w="1"/><text x="98.8757%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="98.6257%" y="453" width="0.2425%" height="15" fill="rgb(207,5,54)" fg:x="1220" fg:w="3"/><text x="98.8757%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.6257%" y="437" width="0.2425%" height="15" fill="rgb(254,124,50)" fg:x="1220" fg:w="3"/><text x="98.8757%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.6257%" y="421" width="0.2425%" height="15" fill="rgb(253,193,24)" fg:x="1220" fg:w="3"/><text x="98.8757%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="98.6257%" y="405" width="0.2425%" height="15" fill="rgb(235,170,24)" fg:x="1220" fg:w="3"/><text x="98.8757%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.6257%" y="389" width="0.2425%" height="15" fill="rgb(222,212,52)" fg:x="1220" fg:w="3"/><text x="98.8757%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.7065%" y="373" width="0.1617%" height="15" fill="rgb(223,17,45)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.7065%" y="357" width="0.1617%" height="15" fill="rgb(227,103,26)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7065%" y="341" width="0.1617%" height="15" fill="rgb(251,151,25)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.7065%" y="325" width="0.1617%" height="15" fill="rgb(248,144,29)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.7065%" y="309" width="0.1617%" height="15" fill="rgb(245,97,16)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7065%" y="293" width="0.1617%" height="15" fill="rgb(220,200,29)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.7874%" y="277" width="0.0808%" height="15" fill="rgb(206,38,29)" fg:x="1222" fg:w="1"/><text x="99.0374%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7874%" y="261" width="0.0808%" height="15" fill="rgb(245,19,52)" fg:x="1222" fg:w="1"/><text x="99.0374%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7874%" y="245" width="0.0808%" height="15" fill="rgb(205,67,43)" fg:x="1222" fg:w="1"/><text x="99.0374%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8682%" y="309" width="0.0808%" height="15" fill="rgb(217,128,23)" fg:x="1223" fg:w="1"/><text x="99.1182%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8682%" y="293" width="0.0808%" height="15" fill="rgb(210,109,28)" fg:x="1223" fg:w="1"/><text x="99.1182%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8682%" y="277" width="0.0808%" height="15" fill="rgb(233,181,7)" fg:x="1223" fg:w="1"/><text x="99.1182%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.8682%" y="261" width="0.0808%" height="15" fill="rgb(244,11,22)" fg:x="1223" fg:w="1"/><text x="99.1182%" y="271.50"></text></g><g><title>engine::session::Session::load_entity (14 samples, 1.13%)</title><rect x="97.8981%" y="485" width="1.1318%" height="15" fill="rgb(205,124,54)" fg:x="1211" fg:w="14"/><text x="98.1481%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="98.6257%" y="469" width="0.4042%" height="15" fill="rgb(218,21,27)" fg:x="1220" fg:w="5"/><text x="98.8757%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="98.8682%" y="453" width="0.1617%" height="15" fill="rgb(224,153,33)" fg:x="1223" fg:w="2"/><text x="99.1182%" y="463.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.8682%" y="437" width="0.1617%" height="15" fill="rgb(240,219,28)" fg:x="1223" fg:w="2"/><text x="99.1182%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8682%" y="421" width="0.1617%" height="15" fill="rgb(214,80,29)" fg:x="1223" fg:w="2"/><text x="99.1182%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8682%" y="405" width="0.1617%" height="15" fill="rgb(247,148,44)" fg:x="1223" fg:w="2"/><text x="99.1182%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8682%" y="389" width="0.1617%" height="15" fill="rgb(243,110,30)" fg:x="1223" fg:w="2"/><text x="99.1182%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8682%" y="373" width="0.1617%" height="15" fill="rgb(243,173,41)" fg:x="1223" fg:w="2"/><text x="99.1182%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8682%" y="357" width="0.1617%" height="15" fill="rgb(225,160,47)" fg:x="1223" fg:w="2"/><text x="99.1182%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8682%" y="341" width="0.1617%" height="15" fill="rgb(215,44,21)" fg:x="1223" fg:w="2"/><text x="99.1182%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8682%" y="325" width="0.1617%" height="15" fill="rgb(248,90,3)" fg:x="1223" fg:w="2"/><text x="99.1182%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="98.9491%" y="309" width="0.0808%" height="15" fill="rgb(220,196,49)" fg:x="1224" fg:w="1"/><text x="99.1991%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="98.9491%" y="293" width="0.0808%" height="15" fill="rgb(217,138,14)" fg:x="1224" fg:w="1"/><text x="99.1991%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9491%" y="277" width="0.0808%" height="15" fill="rgb(219,111,20)" fg:x="1224" fg:w="1"/><text x="99.1991%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0299%" y="437" width="0.0808%" height="15" fill="rgb(218,114,4)" fg:x="1225" fg:w="1"/><text x="99.2799%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.1108%" y="437" width="0.0808%" height="15" fill="rgb(238,133,3)" fg:x="1226" fg:w="1"/><text x="99.3608%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.1108%" y="421" width="0.0808%" height="15" fill="rgb(224,95,0)" fg:x="1226" fg:w="1"/><text x="99.3608%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="99.1108%" y="405" width="0.0808%" height="15" fill="rgb(220,169,35)" fg:x="1226" fg:w="1"/><text x="99.3608%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1108%" y="389" width="0.0808%" height="15" fill="rgb(242,116,47)" fg:x="1226" fg:w="1"/><text x="99.3608%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1108%" y="373" width="0.0808%" height="15" fill="rgb(251,42,20)" fg:x="1226" fg:w="1"/><text x="99.3608%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1108%" y="357" width="0.0808%" height="15" fill="rgb(234,7,34)" fg:x="1226" fg:w="1"/><text x="99.3608%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.1916%" y="357" width="0.0808%" height="15" fill="rgb(243,208,13)" fg:x="1227" fg:w="1"/><text x="99.4416%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.2724%" y="341" width="0.1617%" height="15" fill="rgb(227,33,28)" fg:x="1228" fg:w="2"/><text x="99.5224%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2724%" y="325" width="0.1617%" height="15" fill="rgb(250,47,37)" fg:x="1228" fg:w="2"/><text x="99.5224%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.2724%" y="309" width="0.1617%" height="15" fill="rgb(235,111,52)" fg:x="1228" fg:w="2"/><text x="99.5224%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2724%" y="293" width="0.1617%" height="15" fill="rgb(223,64,28)" fg:x="1228" fg:w="2"/><text x="99.5224%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.2724%" y="277" width="0.1617%" height="15" fill="rgb(236,67,22)" fg:x="1228" fg:w="2"/><text x="99.5224%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2724%" y="261" width="0.1617%" height="15" fill="rgb(243,79,24)" fg:x="1228" fg:w="2"/><text x="99.5224%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3533%" y="245" width="0.0808%" height="15" fill="rgb(241,225,22)" fg:x="1229" fg:w="1"/><text x="99.6033%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3533%" y="229" width="0.0808%" height="15" fill="rgb(228,214,26)" fg:x="1229" fg:w="1"/><text x="99.6033%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.3533%" y="213" width="0.0808%" height="15" fill="rgb(219,84,52)" fg:x="1229" fg:w="1"/><text x="99.6033%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="99.4341%" y="341" width="0.2425%" height="15" fill="rgb(220,12,22)" fg:x="1230" fg:w="3"/><text x="99.6841%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="99.4341%" y="325" width="0.2425%" height="15" fill="rgb(219,9,49)" fg:x="1230" fg:w="3"/><text x="99.6841%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="99.5150%" y="309" width="0.1617%" height="15" fill="rgb(237,40,43)" fg:x="1231" fg:w="2"/><text x="99.7650%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="99.5150%" y="293" width="0.1617%" height="15" fill="rgb(212,189,32)" fg:x="1231" fg:w="2"/><text x="99.7650%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.57%)</title><rect x="99.1916%" y="389" width="0.5659%" height="15" fill="rgb(247,48,9)" fg:x="1227" fg:w="7"/><text x="99.4416%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="99.1916%" y="373" width="0.5659%" height="15" fill="rgb(247,112,3)" fg:x="1227" fg:w="7"/><text x="99.4416%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.49%)</title><rect x="99.2724%" y="357" width="0.4850%" height="15" fill="rgb(243,110,18)" fg:x="1228" fg:w="6"/><text x="99.5224%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6766%" y="341" width="0.0808%" height="15" fill="rgb(233,223,44)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6766%" y="325" width="0.0808%" height="15" fill="rgb(245,160,20)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.6766%" y="309" width="0.0808%" height="15" fill="rgb(225,37,1)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6766%" y="293" width="0.0808%" height="15" fill="rgb(253,227,39)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6766%" y="277" width="0.0808%" height="15" fill="rgb(240,179,26)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="287.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.65%)</title><rect x="99.1916%" y="437" width="0.6467%" height="15" fill="rgb(237,212,23)" fg:x="1227" fg:w="8"/><text x="99.4416%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="99.1916%" y="421" width="0.6467%" height="15" fill="rgb(221,38,11)" fg:x="1227" fg:w="8"/><text x="99.4416%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="99.1916%" y="405" width="0.6467%" height="15" fill="rgb(215,85,6)" fg:x="1227" fg:w="8"/><text x="99.4416%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.7575%" y="389" width="0.0808%" height="15" fill="rgb(239,64,14)" fg:x="1234" fg:w="1"/><text x="100.0075%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.7575%" y="373" width="0.0808%" height="15" fill="rgb(215,150,32)" fg:x="1234" fg:w="1"/><text x="100.0075%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.8383%" y="373" width="0.0808%" height="15" fill="rgb(238,15,13)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8383%" y="357" width="0.0808%" height="15" fill="rgb(251,87,8)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.8383%" y="341" width="0.0808%" height="15" fill="rgb(206,86,1)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8383%" y="325" width="0.0808%" height="15" fill="rgb(208,151,45)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.8383%" y="309" width="0.0808%" height="15" fill="rgb(231,181,24)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8383%" y="293" width="0.0808%" height="15" fill="rgb(240,106,29)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.8383%" y="277" width="0.0808%" height="15" fill="rgb(227,166,11)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8383%" y="261" width="0.0808%" height="15" fill="rgb(254,14,34)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8383%" y="245" width="0.0808%" height="15" fill="rgb(223,222,6)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8383%" y="229" width="0.0808%" height="15" fill="rgb(245,69,24)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8383%" y="213" width="0.0808%" height="15" fill="rgb(213,193,7)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="223.50"></text></g><g><title>all (1,237 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(237,92,51)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="879.50"></text></g><g><title>simple-9bf755a9 (1,237 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(225,194,6)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="863.50">simple-9bf755a9</text></g><g><title>_start (1,237 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(205,159,49)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="847.50">_start</text></g><g><title>__libc_start_main (1,237 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(219,69,2)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="831.50">__libc_start_main</text></g><g><title>main (1,237 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(215,107,24)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (1,237 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(249,208,29)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,237 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(213,147,10)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,237 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(254,140,42)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,237 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(249,9,15)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,237 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(210,19,33)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="735.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,237 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(241,121,22)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,237 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(244,69,52)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,237 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(244,191,54)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="687.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,237 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(250,3,53)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="671.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,237 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(205,77,3)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="655.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,237 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(207,155,3)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,237 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(224,79,2)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="623.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,237 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(243,172,5)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="607.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,237 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(217,23,43)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="591.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (268 samples, 21.67%)</title><rect x="78.3347%" y="565" width="21.6653%" height="15" fill="rgb(223,109,20)" fg:x="969" fg:w="268"/><text x="78.5847%" y="575.50">&lt;criterion::routine::Function&lt;M,F,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (268 samples, 21.67%)</title><rect x="78.3347%" y="549" width="21.6653%" height="15" fill="rgb(232,159,21)" fg:x="969" fg:w="268"/><text x="78.5847%" y="559.50">criterion::bencher::Bencher&lt;M&gt;::it..</text></g><g><title>tests::evaluate_text_in_new_domain (268 samples, 21.67%)</title><rect x="78.3347%" y="533" width="21.6653%" height="15" fill="rgb(219,58,2)" fg:x="969" fg:w="268"/><text x="78.5847%" y="543.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (42 samples, 3.40%)</title><rect x="96.6047%" y="517" width="3.3953%" height="15" fill="rgb(241,56,8)" fg:x="1195" fg:w="42"/><text x="96.8547%" y="527.50">eng..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (42 samples, 3.40%)</title><rect x="96.6047%" y="501" width="3.3953%" height="15" fill="rgb(249,10,27)" fg:x="1195" fg:w="42"/><text x="96.8547%" y="511.50">eng..</text></g><g><title>kernel::model::EntityPtrResolver::world (12 samples, 0.97%)</title><rect x="99.0299%" y="485" width="0.9701%" height="15" fill="rgb(248,177,5)" fg:x="1225" fg:w="12"/><text x="99.2799%" y="495.50"></text></g><g><title>engine::session::Session::load_entity (12 samples, 0.97%)</title><rect x="99.0299%" y="469" width="0.9701%" height="15" fill="rgb(239,12,30)" fg:x="1225" fg:w="12"/><text x="99.2799%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.97%)</title><rect x="99.0299%" y="453" width="0.9701%" height="15" fill="rgb(229,164,25)" fg:x="1225" fg:w="12"/><text x="99.2799%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="99.8383%" y="437" width="0.1617%" height="15" fill="rgb(231,217,50)" fg:x="1235" fg:w="2"/><text x="100.0883%" y="447.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.8383%" y="421" width="0.1617%" height="15" fill="rgb(247,99,32)" fg:x="1235" fg:w="2"/><text x="100.0883%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.8383%" y="405" width="0.1617%" height="15" fill="rgb(240,74,50)" fg:x="1235" fg:w="2"/><text x="100.0883%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.8383%" y="389" width="0.1617%" height="15" fill="rgb(218,54,8)" fg:x="1235" fg:w="2"/><text x="100.0883%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.9192%" y="373" width="0.0808%" height="15" fill="rgb(227,132,20)" fg:x="1236" fg:w="1"/><text x="100.1692%" y="383.50"></text></g></svg></svg>