<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1061.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="1208"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4139%" y="581" width="0.0828%" height="15" fill="rgb(223,80,15)" fg:x="5" fg:w="1"/><text x="0.6639%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4967%" y="549" width="0.0828%" height="15" fill="rgb(219,218,33)" fg:x="6" fg:w="1"/><text x="0.7467%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="0.5795%" y="549" width="0.1656%" height="15" fill="rgb(208,51,11)" fg:x="7" fg:w="2"/><text x="0.8295%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6623%" y="533" width="0.0828%" height="15" fill="rgb(229,165,39)" fg:x="8" fg:w="1"/><text x="0.9123%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9106%" y="501" width="0.0828%" height="15" fill="rgb(241,100,24)" fg:x="11" fg:w="1"/><text x="1.1606%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="0.9106%" y="533" width="0.1656%" height="15" fill="rgb(228,14,23)" fg:x="11" fg:w="2"/><text x="1.1606%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="0.9106%" y="517" width="0.1656%" height="15" fill="rgb(247,116,52)" fg:x="11" fg:w="2"/><text x="1.1606%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9934%" y="501" width="0.0828%" height="15" fill="rgb(216,149,33)" fg:x="12" fg:w="1"/><text x="1.2434%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9934%" y="485" width="0.0828%" height="15" fill="rgb(238,142,29)" fg:x="12" fg:w="1"/><text x="1.2434%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.08%)</title><rect x="0.0828%" y="677" width="1.0762%" height="15" fill="rgb(224,83,40)" fg:x="1" fg:w="13"/><text x="0.3328%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (12 samples, 0.99%)</title><rect x="0.1656%" y="661" width="0.9934%" height="15" fill="rgb(234,165,11)" fg:x="2" fg:w="12"/><text x="0.4156%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.99%)</title><rect x="0.1656%" y="645" width="0.9934%" height="15" fill="rgb(215,96,23)" fg:x="2" fg:w="12"/><text x="0.4156%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (12 samples, 0.99%)</title><rect x="0.1656%" y="629" width="0.9934%" height="15" fill="rgb(233,179,26)" fg:x="2" fg:w="12"/><text x="0.4156%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.91%)</title><rect x="0.2483%" y="613" width="0.9106%" height="15" fill="rgb(225,129,33)" fg:x="3" fg:w="11"/><text x="0.4983%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.83%)</title><rect x="0.3311%" y="597" width="0.8278%" height="15" fill="rgb(237,49,13)" fg:x="4" fg:w="10"/><text x="0.5811%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="0.4967%" y="581" width="0.6623%" height="15" fill="rgb(211,3,31)" fg:x="6" fg:w="8"/><text x="0.7467%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.66%)</title><rect x="0.4967%" y="565" width="0.6623%" height="15" fill="rgb(216,152,19)" fg:x="6" fg:w="8"/><text x="0.7467%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="0.7450%" y="549" width="0.4139%" height="15" fill="rgb(251,121,35)" fg:x="9" fg:w="5"/><text x="0.9950%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.0762%" y="533" width="0.0828%" height="15" fill="rgb(210,217,47)" fg:x="13" fg:w="1"/><text x="1.3262%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.17%)</title><rect x="1.1589%" y="613" width="0.1656%" height="15" fill="rgb(244,116,22)" fg:x="14" fg:w="2"/><text x="1.4089%" y="623.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="1.3245%" y="613" width="0.0828%" height="15" fill="rgb(228,17,21)" fg:x="16" fg:w="1"/><text x="1.5745%" y="623.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="1.3245%" y="597" width="0.0828%" height="15" fill="rgb(240,149,34)" fg:x="16" fg:w="1"/><text x="1.5745%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="1.3245%" y="581" width="0.0828%" height="15" fill="rgb(208,125,47)" fg:x="16" fg:w="1"/><text x="1.5745%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="1.3245%" y="565" width="0.0828%" height="15" fill="rgb(249,186,39)" fg:x="16" fg:w="1"/><text x="1.5745%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="1.4073%" y="533" width="0.2483%" height="15" fill="rgb(240,220,33)" fg:x="17" fg:w="3"/><text x="1.6573%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="1.4073%" y="517" width="0.2483%" height="15" fill="rgb(243,110,23)" fg:x="17" fg:w="3"/><text x="1.6573%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.17%)</title><rect x="1.4901%" y="501" width="0.1656%" height="15" fill="rgb(219,163,46)" fg:x="18" fg:w="2"/><text x="1.7401%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.17%)</title><rect x="1.4901%" y="485" width="0.1656%" height="15" fill="rgb(216,126,30)" fg:x="18" fg:w="2"/><text x="1.7401%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="1.4901%" y="469" width="0.1656%" height="15" fill="rgb(208,139,11)" fg:x="18" fg:w="2"/><text x="1.7401%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5728%" y="453" width="0.0828%" height="15" fill="rgb(213,118,36)" fg:x="19" fg:w="1"/><text x="1.8228%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.50%)</title><rect x="1.4073%" y="597" width="0.4967%" height="15" fill="rgb(226,43,17)" fg:x="17" fg:w="6"/><text x="1.6573%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.50%)</title><rect x="1.4073%" y="581" width="0.4967%" height="15" fill="rgb(254,217,4)" fg:x="17" fg:w="6"/><text x="1.6573%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.50%)</title><rect x="1.4073%" y="565" width="0.4967%" height="15" fill="rgb(210,134,47)" fg:x="17" fg:w="6"/><text x="1.6573%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.50%)</title><rect x="1.4073%" y="549" width="0.4967%" height="15" fill="rgb(237,24,49)" fg:x="17" fg:w="6"/><text x="1.6573%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="1.6556%" y="533" width="0.2483%" height="15" fill="rgb(251,39,46)" fg:x="20" fg:w="3"/><text x="1.9056%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="1.6556%" y="517" width="0.2483%" height="15" fill="rgb(251,220,3)" fg:x="20" fg:w="3"/><text x="1.9056%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="1.6556%" y="501" width="0.2483%" height="15" fill="rgb(228,105,12)" fg:x="20" fg:w="3"/><text x="1.9056%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="1.6556%" y="485" width="0.2483%" height="15" fill="rgb(215,196,1)" fg:x="20" fg:w="3"/><text x="1.9056%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.8212%" y="469" width="0.0828%" height="15" fill="rgb(214,33,39)" fg:x="22" fg:w="1"/><text x="2.0712%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.8212%" y="453" width="0.0828%" height="15" fill="rgb(220,19,52)" fg:x="22" fg:w="1"/><text x="2.0712%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.8212%" y="437" width="0.0828%" height="15" fill="rgb(221,78,38)" fg:x="22" fg:w="1"/><text x="2.0712%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8212%" y="421" width="0.0828%" height="15" fill="rgb(253,30,16)" fg:x="22" fg:w="1"/><text x="2.0712%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="1.9868%" y="501" width="0.0828%" height="15" fill="rgb(242,65,0)" fg:x="24" fg:w="1"/><text x="2.2368%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="1.9868%" y="517" width="0.1656%" height="15" fill="rgb(235,201,12)" fg:x="24" fg:w="2"/><text x="2.2368%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.0695%" y="501" width="0.0828%" height="15" fill="rgb(233,161,9)" fg:x="25" fg:w="1"/><text x="2.3195%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="2.1523%" y="485" width="0.1656%" height="15" fill="rgb(241,207,41)" fg:x="26" fg:w="2"/><text x="2.4023%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="2.2351%" y="469" width="0.0828%" height="15" fill="rgb(212,69,46)" fg:x="27" fg:w="1"/><text x="2.4851%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.3179%" y="485" width="0.0828%" height="15" fill="rgb(239,69,45)" fg:x="28" fg:w="1"/><text x="2.5679%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.3179%" y="469" width="0.0828%" height="15" fill="rgb(242,117,48)" fg:x="28" fg:w="1"/><text x="2.5679%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.50%)</title><rect x="1.9868%" y="533" width="0.4967%" height="15" fill="rgb(228,41,36)" fg:x="24" fg:w="6"/><text x="2.2368%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="2.1523%" y="517" width="0.3311%" height="15" fill="rgb(212,3,32)" fg:x="26" fg:w="4"/><text x="2.4023%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="2.1523%" y="501" width="0.3311%" height="15" fill="rgb(233,41,49)" fg:x="26" fg:w="4"/><text x="2.4023%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.4007%" y="485" width="0.0828%" height="15" fill="rgb(252,170,49)" fg:x="29" fg:w="1"/><text x="2.6507%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.4007%" y="469" width="0.0828%" height="15" fill="rgb(229,53,26)" fg:x="29" fg:w="1"/><text x="2.6507%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.4007%" y="453" width="0.0828%" height="15" fill="rgb(217,157,12)" fg:x="29" fg:w="1"/><text x="2.6507%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (17 samples, 1.41%)</title><rect x="1.1589%" y="645" width="1.4073%" height="15" fill="rgb(227,17,9)" fg:x="14" fg:w="17"/><text x="1.4089%" y="655.50"></text></g><g><title>engine::internal::Entities::prepare_entity (17 samples, 1.41%)</title><rect x="1.1589%" y="629" width="1.4073%" height="15" fill="rgb(218,84,12)" fg:x="14" fg:w="17"/><text x="1.4089%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity (14 samples, 1.16%)</title><rect x="1.4073%" y="613" width="1.1589%" height="15" fill="rgb(212,79,24)" fg:x="17" fg:w="14"/><text x="1.6573%" y="623.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.66%)</title><rect x="1.9040%" y="597" width="0.6623%" height="15" fill="rgb(217,222,37)" fg:x="23" fg:w="8"/><text x="2.1540%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.66%)</title><rect x="1.9040%" y="581" width="0.6623%" height="15" fill="rgb(246,208,8)" fg:x="23" fg:w="8"/><text x="2.1540%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.66%)</title><rect x="1.9040%" y="565" width="0.6623%" height="15" fill="rgb(244,133,10)" fg:x="23" fg:w="8"/><text x="2.1540%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.66%)</title><rect x="1.9040%" y="549" width="0.6623%" height="15" fill="rgb(209,219,41)" fg:x="23" fg:w="8"/><text x="2.1540%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.4834%" y="533" width="0.0828%" height="15" fill="rgb(253,175,45)" fg:x="30" fg:w="1"/><text x="2.7334%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.17%)</title><rect x="2.5662%" y="613" width="0.1656%" height="15" fill="rgb(235,100,37)" fg:x="31" fg:w="2"/><text x="2.8162%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="2.5662%" y="597" width="0.1656%" height="15" fill="rgb(225,87,19)" fg:x="31" fg:w="2"/><text x="2.8162%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="2.5662%" y="581" width="0.1656%" height="15" fill="rgb(217,152,17)" fg:x="31" fg:w="2"/><text x="2.8162%" y="591.50"></text></g><g><title>engine::identifiers::model::get_gid (3 samples, 0.25%)</title><rect x="2.5662%" y="645" width="0.2483%" height="15" fill="rgb(235,72,13)" fg:x="31" fg:w="3"/><text x="2.8162%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.25%)</title><rect x="2.5662%" y="629" width="0.2483%" height="15" fill="rgb(233,140,18)" fg:x="31" fg:w="3"/><text x="2.8162%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="2.7318%" y="613" width="0.0828%" height="15" fill="rgb(207,212,28)" fg:x="33" fg:w="1"/><text x="2.9818%" y="623.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="2.8146%" y="645" width="0.0828%" height="15" fill="rgb(220,130,25)" fg:x="34" fg:w="1"/><text x="3.0646%" y="655.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="2.8146%" y="629" width="0.0828%" height="15" fill="rgb(205,55,34)" fg:x="34" fg:w="1"/><text x="3.0646%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="2.8146%" y="613" width="0.0828%" height="15" fill="rgb(237,54,35)" fg:x="34" fg:w="1"/><text x="3.0646%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.8146%" y="597" width="0.0828%" height="15" fill="rgb(208,67,23)" fg:x="34" fg:w="1"/><text x="3.0646%" y="607.50"></text></g><g><title>kernel::plugins::SessionPlugins::hooks (1 samples, 0.08%)</title><rect x="2.8974%" y="645" width="0.0828%" height="15" fill="rgb(206,207,50)" fg:x="35" fg:w="1"/><text x="3.1474%" y="655.50"></text></g><g><title>dlerror (5 samples, 0.41%)</title><rect x="3.0629%" y="597" width="0.4139%" height="15" fill="rgb(213,211,42)" fg:x="37" fg:w="5"/><text x="3.3129%" y="607.50"></text></g><g><title>__asprintf (3 samples, 0.25%)</title><rect x="3.2285%" y="581" width="0.2483%" height="15" fill="rgb(252,197,50)" fg:x="39" fg:w="3"/><text x="3.4785%" y="591.50"></text></g><g><title>_IO_default_uflow (1 samples, 0.08%)</title><rect x="3.3940%" y="565" width="0.0828%" height="15" fill="rgb(251,211,41)" fg:x="41" fg:w="1"/><text x="3.6440%" y="575.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="3.6424%" y="533" width="0.0828%" height="15" fill="rgb(229,211,5)" fg:x="44" fg:w="1"/><text x="3.8924%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.8841%" y="517" width="0.0828%" height="15" fill="rgb(239,36,31)" fg:x="59" fg:w="1"/><text x="5.1341%" y="527.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (47 samples, 3.89%)</title><rect x="1.1589%" y="677" width="3.8907%" height="15" fill="rgb(248,67,31)" fg:x="14" fg:w="47"/><text x="1.4089%" y="687.50">&lt;eng..</text></g><g><title>engine::session::Session::new (47 samples, 3.89%)</title><rect x="1.1589%" y="661" width="3.8907%" height="15" fill="rgb(249,55,44)" fg:x="14" fg:w="47"/><text x="1.4089%" y="671.50">engi..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (25 samples, 2.07%)</title><rect x="2.9801%" y="645" width="2.0695%" height="15" fill="rgb(216,82,12)" fg:x="36" fg:w="25"/><text x="3.2301%" y="655.50">k..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (25 samples, 2.07%)</title><rect x="2.9801%" y="629" width="2.0695%" height="15" fill="rgb(242,174,1)" fg:x="36" fg:w="25"/><text x="3.2301%" y="639.50">&lt;..</text></g><g><title>libloading::os::unix::Library::open (25 samples, 2.07%)</title><rect x="2.9801%" y="613" width="2.0695%" height="15" fill="rgb(208,120,29)" fg:x="36" fg:w="25"/><text x="3.2301%" y="623.50">l..</text></g><g><title>dlopen (19 samples, 1.57%)</title><rect x="3.4768%" y="597" width="1.5728%" height="15" fill="rgb(221,105,43)" fg:x="42" fg:w="19"/><text x="3.7268%" y="607.50"></text></g><g><title>_dl_catch_error (19 samples, 1.57%)</title><rect x="3.4768%" y="581" width="1.5728%" height="15" fill="rgb(234,124,22)" fg:x="42" fg:w="19"/><text x="3.7268%" y="591.50"></text></g><g><title>_dl_catch_exception (19 samples, 1.57%)</title><rect x="3.4768%" y="565" width="1.5728%" height="15" fill="rgb(212,23,30)" fg:x="42" fg:w="19"/><text x="3.7268%" y="575.50"></text></g><g><title>_dl_catch_exception (17 samples, 1.41%)</title><rect x="3.6424%" y="549" width="1.4073%" height="15" fill="rgb(219,122,53)" fg:x="44" fg:w="17"/><text x="3.8924%" y="559.50"></text></g><g><title>_dl_catch_exception (16 samples, 1.32%)</title><rect x="3.7252%" y="533" width="1.3245%" height="15" fill="rgb(248,84,24)" fg:x="45" fg:w="16"/><text x="3.9752%" y="543.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="4.9669%" y="517" width="0.0828%" height="15" fill="rgb(245,115,18)" fg:x="60" fg:w="1"/><text x="5.2169%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.0497%" y="661" width="0.0828%" height="15" fill="rgb(227,176,51)" fg:x="61" fg:w="1"/><text x="5.2997%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="5.1325%" y="661" width="0.0828%" height="15" fill="rgb(229,63,42)" fg:x="62" fg:w="1"/><text x="5.3825%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.1325%" y="645" width="0.0828%" height="15" fill="rgb(247,202,24)" fg:x="62" fg:w="1"/><text x="5.3825%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.2980%" y="501" width="0.0828%" height="15" fill="rgb(244,173,20)" fg:x="64" fg:w="1"/><text x="5.5480%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.2980%" y="485" width="0.0828%" height="15" fill="rgb(242,81,47)" fg:x="64" fg:w="1"/><text x="5.5480%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.2980%" y="469" width="0.0828%" height="15" fill="rgb(231,185,54)" fg:x="64" fg:w="1"/><text x="5.5480%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.2980%" y="453" width="0.0828%" height="15" fill="rgb(243,55,32)" fg:x="64" fg:w="1"/><text x="5.5480%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.2980%" y="437" width="0.0828%" height="15" fill="rgb(208,167,19)" fg:x="64" fg:w="1"/><text x="5.5480%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.2980%" y="421" width="0.0828%" height="15" fill="rgb(231,72,35)" fg:x="64" fg:w="1"/><text x="5.5480%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.2980%" y="405" width="0.0828%" height="15" fill="rgb(250,173,51)" fg:x="64" fg:w="1"/><text x="5.5480%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="5.2152%" y="629" width="0.2483%" height="15" fill="rgb(209,5,22)" fg:x="63" fg:w="3"/><text x="5.4652%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="5.2152%" y="613" width="0.2483%" height="15" fill="rgb(250,174,19)" fg:x="63" fg:w="3"/><text x="5.4652%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.25%)</title><rect x="5.2152%" y="597" width="0.2483%" height="15" fill="rgb(217,3,49)" fg:x="63" fg:w="3"/><text x="5.4652%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="5.2980%" y="581" width="0.1656%" height="15" fill="rgb(218,225,5)" fg:x="64" fg:w="2"/><text x="5.5480%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="5.2980%" y="565" width="0.1656%" height="15" fill="rgb(236,89,11)" fg:x="64" fg:w="2"/><text x="5.5480%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.17%)</title><rect x="5.2980%" y="549" width="0.1656%" height="15" fill="rgb(206,33,28)" fg:x="64" fg:w="2"/><text x="5.5480%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="5.2980%" y="533" width="0.1656%" height="15" fill="rgb(241,56,42)" fg:x="64" fg:w="2"/><text x="5.5480%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.17%)</title><rect x="5.2980%" y="517" width="0.1656%" height="15" fill="rgb(222,44,11)" fg:x="64" fg:w="2"/><text x="5.5480%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="5.3808%" y="501" width="0.0828%" height="15" fill="rgb(234,111,20)" fg:x="65" fg:w="1"/><text x="5.6308%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="5.3808%" y="485" width="0.0828%" height="15" fill="rgb(237,77,6)" fg:x="65" fg:w="1"/><text x="5.6308%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="5.4636%" y="581" width="0.0828%" height="15" fill="rgb(235,111,23)" fg:x="66" fg:w="1"/><text x="5.7136%" y="591.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.17%)</title><rect x="5.4636%" y="629" width="0.1656%" height="15" fill="rgb(251,135,29)" fg:x="66" fg:w="2"/><text x="5.7136%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.17%)</title><rect x="5.4636%" y="613" width="0.1656%" height="15" fill="rgb(217,57,1)" fg:x="66" fg:w="2"/><text x="5.7136%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.17%)</title><rect x="5.4636%" y="597" width="0.1656%" height="15" fill="rgb(249,119,31)" fg:x="66" fg:w="2"/><text x="5.7136%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="5.5464%" y="581" width="0.0828%" height="15" fill="rgb(233,164,33)" fg:x="67" fg:w="1"/><text x="5.7964%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="5.5464%" y="565" width="0.0828%" height="15" fill="rgb(250,217,43)" fg:x="67" fg:w="1"/><text x="5.7964%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="5.5464%" y="549" width="0.0828%" height="15" fill="rgb(232,154,50)" fg:x="67" fg:w="1"/><text x="5.7964%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="5.5464%" y="533" width="0.0828%" height="15" fill="rgb(227,190,8)" fg:x="67" fg:w="1"/><text x="5.7964%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.7119%" y="581" width="0.0828%" height="15" fill="rgb(209,217,32)" fg:x="69" fg:w="1"/><text x="5.9619%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.58%)</title><rect x="5.7947%" y="565" width="0.5795%" height="15" fill="rgb(243,203,50)" fg:x="70" fg:w="7"/><text x="6.0447%" y="575.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.58%)</title><rect x="5.7947%" y="549" width="0.5795%" height="15" fill="rgb(232,152,27)" fg:x="70" fg:w="7"/><text x="6.0447%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.50%)</title><rect x="5.8775%" y="533" width="0.4967%" height="15" fill="rgb(240,34,29)" fg:x="71" fg:w="6"/><text x="6.1275%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.41%)</title><rect x="5.9603%" y="517" width="0.4139%" height="15" fill="rgb(215,185,52)" fg:x="72" fg:w="5"/><text x="6.2103%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="6.2086%" y="501" width="0.1656%" height="15" fill="rgb(240,89,49)" fg:x="75" fg:w="2"/><text x="6.4586%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="6.2086%" y="485" width="0.1656%" height="15" fill="rgb(225,12,52)" fg:x="75" fg:w="2"/><text x="6.4586%" y="495.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="6.2086%" y="469" width="0.1656%" height="15" fill="rgb(239,128,45)" fg:x="75" fg:w="2"/><text x="6.4586%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.66%)</title><rect x="5.7947%" y="581" width="0.6623%" height="15" fill="rgb(211,78,47)" fg:x="70" fg:w="8"/><text x="6.0447%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.3742%" y="565" width="0.0828%" height="15" fill="rgb(232,31,21)" fg:x="77" fg:w="1"/><text x="6.6242%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.3742%" y="549" width="0.0828%" height="15" fill="rgb(222,168,14)" fg:x="77" fg:w="1"/><text x="6.6242%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.3742%" y="533" width="0.0828%" height="15" fill="rgb(209,128,24)" fg:x="77" fg:w="1"/><text x="6.6242%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.66%)</title><rect x="6.4570%" y="565" width="0.6623%" height="15" fill="rgb(249,35,13)" fg:x="78" fg:w="8"/><text x="6.7070%" y="575.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.50%)</title><rect x="6.6225%" y="549" width="0.4967%" height="15" fill="rgb(218,7,2)" fg:x="80" fg:w="6"/><text x="6.8725%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.41%)</title><rect x="6.7053%" y="533" width="0.4139%" height="15" fill="rgb(238,107,27)" fg:x="81" fg:w="5"/><text x="6.9553%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="6.8709%" y="517" width="0.2483%" height="15" fill="rgb(217,88,38)" fg:x="83" fg:w="3"/><text x="7.1209%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.0364%" y="501" width="0.0828%" height="15" fill="rgb(230,207,0)" fg:x="85" fg:w="1"/><text x="7.2864%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.0364%" y="485" width="0.0828%" height="15" fill="rgb(249,64,54)" fg:x="85" fg:w="1"/><text x="7.2864%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.0364%" y="469" width="0.0828%" height="15" fill="rgb(231,7,11)" fg:x="85" fg:w="1"/><text x="7.2864%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="7.2020%" y="517" width="0.1656%" height="15" fill="rgb(205,149,21)" fg:x="87" fg:w="2"/><text x="7.4520%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.2848%" y="501" width="0.0828%" height="15" fill="rgb(215,126,34)" fg:x="88" fg:w="1"/><text x="7.5348%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.2848%" y="485" width="0.0828%" height="15" fill="rgb(241,132,45)" fg:x="88" fg:w="1"/><text x="7.5348%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.2848%" y="469" width="0.0828%" height="15" fill="rgb(252,69,32)" fg:x="88" fg:w="1"/><text x="7.5348%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="7.3675%" y="517" width="0.1656%" height="15" fill="rgb(232,204,19)" fg:x="89" fg:w="2"/><text x="7.6175%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.4503%" y="501" width="0.0828%" height="15" fill="rgb(249,15,47)" fg:x="90" fg:w="1"/><text x="7.7003%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="7.2020%" y="549" width="0.4139%" height="15" fill="rgb(209,227,23)" fg:x="87" fg:w="5"/><text x="7.4520%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="7.2020%" y="533" width="0.4139%" height="15" fill="rgb(248,92,24)" fg:x="87" fg:w="5"/><text x="7.4520%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.5331%" y="517" width="0.0828%" height="15" fill="rgb(247,59,2)" fg:x="91" fg:w="1"/><text x="7.7831%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.5331%" y="501" width="0.0828%" height="15" fill="rgb(221,30,5)" fg:x="91" fg:w="1"/><text x="7.7831%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="7.6159%" y="549" width="0.4139%" height="15" fill="rgb(208,108,53)" fg:x="92" fg:w="5"/><text x="7.8659%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="7.6987%" y="533" width="0.3311%" height="15" fill="rgb(211,183,26)" fg:x="93" fg:w="4"/><text x="7.9487%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="7.6987%" y="517" width="0.3311%" height="15" fill="rgb(232,132,4)" fg:x="93" fg:w="4"/><text x="7.9487%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.9470%" y="501" width="0.0828%" height="15" fill="rgb(253,128,37)" fg:x="96" fg:w="1"/><text x="8.1970%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.0298%" y="533" width="0.0828%" height="15" fill="rgb(221,58,24)" fg:x="97" fg:w="1"/><text x="8.2798%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="8.1126%" y="533" width="0.2483%" height="15" fill="rgb(230,54,45)" fg:x="98" fg:w="3"/><text x="8.3626%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="8.1126%" y="517" width="0.2483%" height="15" fill="rgb(254,21,18)" fg:x="98" fg:w="3"/><text x="8.3626%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="8.1954%" y="501" width="0.1656%" height="15" fill="rgb(221,108,0)" fg:x="99" fg:w="2"/><text x="8.4454%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.2781%" y="485" width="0.0828%" height="15" fill="rgb(206,95,1)" fg:x="100" fg:w="1"/><text x="8.5281%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="8.3609%" y="533" width="0.1656%" height="15" fill="rgb(237,52,5)" fg:x="101" fg:w="2"/><text x="8.6109%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.4437%" y="517" width="0.0828%" height="15" fill="rgb(218,150,34)" fg:x="102" fg:w="1"/><text x="8.6937%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.4437%" y="501" width="0.0828%" height="15" fill="rgb(235,194,28)" fg:x="102" fg:w="1"/><text x="8.6937%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.49%)</title><rect x="7.1192%" y="565" width="1.4901%" height="15" fill="rgb(245,92,18)" fg:x="86" fg:w="18"/><text x="7.3692%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.58%)</title><rect x="8.0298%" y="549" width="0.5795%" height="15" fill="rgb(253,203,53)" fg:x="97" fg:w="7"/><text x="8.2798%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.5265%" y="533" width="0.0828%" height="15" fill="rgb(249,185,47)" fg:x="103" fg:w="1"/><text x="8.7765%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.5265%" y="517" width="0.0828%" height="15" fill="rgb(252,194,52)" fg:x="103" fg:w="1"/><text x="8.7765%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.5265%" y="501" width="0.0828%" height="15" fill="rgb(210,53,36)" fg:x="103" fg:w="1"/><text x="8.7765%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (36 samples, 2.98%)</title><rect x="5.7119%" y="597" width="2.9801%" height="15" fill="rgb(237,37,25)" fg:x="69" fg:w="36"/><text x="5.9619%" y="607.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.24%)</title><rect x="6.4570%" y="581" width="2.2351%" height="15" fill="rgb(242,116,27)" fg:x="78" fg:w="27"/><text x="6.7070%" y="591.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.6093%" y="565" width="0.0828%" height="15" fill="rgb(213,185,26)" fg:x="104" fg:w="1"/><text x="8.8593%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.6921%" y="565" width="0.0828%" height="15" fill="rgb(225,204,8)" fg:x="105" fg:w="1"/><text x="8.9421%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.8576%" y="549" width="0.0828%" height="15" fill="rgb(254,111,37)" fg:x="107" fg:w="1"/><text x="9.1076%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.9404%" y="549" width="0.0828%" height="15" fill="rgb(242,35,9)" fg:x="108" fg:w="1"/><text x="9.1904%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.9404%" y="533" width="0.0828%" height="15" fill="rgb(232,138,49)" fg:x="108" fg:w="1"/><text x="9.1904%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.0232%" y="533" width="0.0828%" height="15" fill="rgb(247,56,4)" fg:x="109" fg:w="1"/><text x="9.2732%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.1060%" y="533" width="0.0828%" height="15" fill="rgb(226,179,17)" fg:x="110" fg:w="1"/><text x="9.3560%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.1060%" y="517" width="0.0828%" height="15" fill="rgb(216,163,45)" fg:x="110" fg:w="1"/><text x="9.3560%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="9.2715%" y="517" width="0.0828%" height="15" fill="rgb(211,157,3)" fg:x="112" fg:w="1"/><text x="9.5215%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.2715%" y="501" width="0.0828%" height="15" fill="rgb(234,44,20)" fg:x="112" fg:w="1"/><text x="9.5215%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.2715%" y="485" width="0.0828%" height="15" fill="rgb(254,138,23)" fg:x="112" fg:w="1"/><text x="9.5215%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.3543%" y="517" width="0.0828%" height="15" fill="rgb(206,119,39)" fg:x="113" fg:w="1"/><text x="9.6043%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.5199%" y="501" width="0.0828%" height="15" fill="rgb(231,105,52)" fg:x="115" fg:w="1"/><text x="9.7699%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.99%)</title><rect x="8.6921%" y="597" width="0.9934%" height="15" fill="rgb(250,20,5)" fg:x="105" fg:w="12"/><text x="8.9421%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.99%)</title><rect x="8.6921%" y="581" width="0.9934%" height="15" fill="rgb(215,198,30)" fg:x="105" fg:w="12"/><text x="8.9421%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.91%)</title><rect x="8.7748%" y="565" width="0.9106%" height="15" fill="rgb(246,142,8)" fg:x="106" fg:w="11"/><text x="9.0248%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="9.0232%" y="549" width="0.6623%" height="15" fill="rgb(243,26,38)" fg:x="109" fg:w="8"/><text x="9.2732%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.50%)</title><rect x="9.1887%" y="533" width="0.4967%" height="15" fill="rgb(205,133,28)" fg:x="111" fg:w="6"/><text x="9.4387%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="9.4371%" y="517" width="0.2483%" height="15" fill="rgb(212,34,0)" fg:x="114" fg:w="3"/><text x="9.6871%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.6026%" y="501" width="0.0828%" height="15" fill="rgb(251,226,22)" fg:x="116" fg:w="1"/><text x="9.8526%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.6026%" y="485" width="0.0828%" height="15" fill="rgb(252,119,9)" fg:x="116" fg:w="1"/><text x="9.8526%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.6854%" y="581" width="0.0828%" height="15" fill="rgb(213,150,50)" fg:x="117" fg:w="1"/><text x="9.9354%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="9.8510%" y="549" width="0.4139%" height="15" fill="rgb(212,24,39)" fg:x="119" fg:w="5"/><text x="10.1010%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="10.0993%" y="533" width="0.1656%" height="15" fill="rgb(213,46,39)" fg:x="122" fg:w="2"/><text x="10.3493%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.1821%" y="517" width="0.0828%" height="15" fill="rgb(239,106,12)" fg:x="123" fg:w="1"/><text x="10.4321%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2649%" y="549" width="0.0828%" height="15" fill="rgb(249,229,21)" fg:x="124" fg:w="1"/><text x="10.5149%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.2649%" y="533" width="0.0828%" height="15" fill="rgb(212,158,3)" fg:x="124" fg:w="1"/><text x="10.5149%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.2649%" y="517" width="0.0828%" height="15" fill="rgb(253,26,48)" fg:x="124" fg:w="1"/><text x="10.5149%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="10.3477%" y="549" width="0.0828%" height="15" fill="rgb(238,178,20)" fg:x="125" fg:w="1"/><text x="10.5977%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.17%)</title><rect x="10.4305%" y="549" width="0.1656%" height="15" fill="rgb(208,86,15)" fg:x="126" fg:w="2"/><text x="10.6805%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.5132%" y="533" width="0.0828%" height="15" fill="rgb(239,42,53)" fg:x="127" fg:w="1"/><text x="10.7632%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5132%" y="517" width="0.0828%" height="15" fill="rgb(245,226,8)" fg:x="127" fg:w="1"/><text x="10.7632%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.17%)</title><rect x="10.6788%" y="485" width="0.1656%" height="15" fill="rgb(216,176,32)" fg:x="129" fg:w="2"/><text x="10.9288%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="10.6788%" y="469" width="0.1656%" height="15" fill="rgb(231,186,21)" fg:x="129" fg:w="2"/><text x="10.9288%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="10.6788%" y="453" width="0.1656%" height="15" fill="rgb(205,95,49)" fg:x="129" fg:w="2"/><text x="10.9288%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.7616%" y="437" width="0.0828%" height="15" fill="rgb(217,145,8)" fg:x="130" fg:w="1"/><text x="11.0116%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="10.8444%" y="485" width="0.0828%" height="15" fill="rgb(239,144,48)" fg:x="131" fg:w="1"/><text x="11.0944%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.50%)</title><rect x="10.5960%" y="549" width="0.4967%" height="15" fill="rgb(214,189,23)" fg:x="128" fg:w="6"/><text x="10.8460%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.50%)</title><rect x="10.5960%" y="533" width="0.4967%" height="15" fill="rgb(229,157,17)" fg:x="128" fg:w="6"/><text x="10.8460%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.50%)</title><rect x="10.5960%" y="517" width="0.4967%" height="15" fill="rgb(230,5,48)" fg:x="128" fg:w="6"/><text x="10.8460%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (6 samples, 0.50%)</title><rect x="10.5960%" y="501" width="0.4967%" height="15" fill="rgb(224,156,48)" fg:x="128" fg:w="6"/><text x="10.8460%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="10.9272%" y="485" width="0.1656%" height="15" fill="rgb(223,14,29)" fg:x="132" fg:w="2"/><text x="11.1772%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="11.0099%" y="469" width="0.0828%" height="15" fill="rgb(229,96,36)" fg:x="133" fg:w="1"/><text x="11.2599%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.0099%" y="453" width="0.0828%" height="15" fill="rgb(231,102,53)" fg:x="133" fg:w="1"/><text x="11.2599%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0099%" y="437" width="0.0828%" height="15" fill="rgb(210,77,38)" fg:x="133" fg:w="1"/><text x="11.2599%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0099%" y="421" width="0.0828%" height="15" fill="rgb(235,131,6)" fg:x="133" fg:w="1"/><text x="11.2599%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0099%" y="405" width="0.0828%" height="15" fill="rgb(252,55,38)" fg:x="133" fg:w="1"/><text x="11.2599%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="11.0927%" y="549" width="0.0828%" height="15" fill="rgb(246,38,14)" fg:x="134" fg:w="1"/><text x="11.3427%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.1755%" y="501" width="0.0828%" height="15" fill="rgb(242,27,5)" fg:x="135" fg:w="1"/><text x="11.4255%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.1755%" y="485" width="0.0828%" height="15" fill="rgb(228,65,35)" fg:x="135" fg:w="1"/><text x="11.4255%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.2583%" y="501" width="0.0828%" height="15" fill="rgb(245,93,11)" fg:x="136" fg:w="1"/><text x="11.5083%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2583%" y="485" width="0.0828%" height="15" fill="rgb(213,1,31)" fg:x="136" fg:w="1"/><text x="11.5083%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="11.2583%" y="469" width="0.0828%" height="15" fill="rgb(237,205,14)" fg:x="136" fg:w="1"/><text x="11.5083%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.2583%" y="453" width="0.0828%" height="15" fill="rgb(232,118,45)" fg:x="136" fg:w="1"/><text x="11.5083%" y="463.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (70 samples, 5.79%)</title><rect x="5.6291%" y="629" width="5.7947%" height="15" fill="rgb(218,5,6)" fg:x="68" fg:w="70"/><text x="5.8791%" y="639.50">engine:..</text></g><g><title>engine::session::Session::check_for_changes (69 samples, 5.71%)</title><rect x="5.7119%" y="613" width="5.7119%" height="15" fill="rgb(251,87,51)" fg:x="69" fg:w="69"/><text x="5.9619%" y="623.50">engine:..</text></g><g><title>kernel::compare::any_entity_changes (21 samples, 1.74%)</title><rect x="9.6854%" y="597" width="1.7384%" height="15" fill="rgb(207,225,20)" fg:x="117" fg:w="21"/><text x="9.9354%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (20 samples, 1.66%)</title><rect x="9.7682%" y="581" width="1.6556%" height="15" fill="rgb(222,78,54)" fg:x="118" fg:w="20"/><text x="10.0182%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.66%)</title><rect x="9.7682%" y="565" width="1.6556%" height="15" fill="rgb(232,85,16)" fg:x="118" fg:w="20"/><text x="10.0182%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.25%)</title><rect x="11.1755%" y="549" width="0.2483%" height="15" fill="rgb(244,25,33)" fg:x="135" fg:w="3"/><text x="11.4255%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.25%)</title><rect x="11.1755%" y="533" width="0.2483%" height="15" fill="rgb(233,24,36)" fg:x="135" fg:w="3"/><text x="11.4255%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="11.1755%" y="517" width="0.2483%" height="15" fill="rgb(253,49,54)" fg:x="135" fg:w="3"/><text x="11.4255%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="11.3411%" y="501" width="0.0828%" height="15" fill="rgb(245,12,22)" fg:x="137" fg:w="1"/><text x="11.5911%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.3411%" y="485" width="0.0828%" height="15" fill="rgb(253,141,28)" fg:x="137" fg:w="1"/><text x="11.5911%" y="495.50"></text></g><g><title>engine::session::Session::flush (76 samples, 6.29%)</title><rect x="5.2152%" y="661" width="6.2914%" height="15" fill="rgb(225,207,27)" fg:x="63" fg:w="76"/><text x="5.4652%" y="671.50">engine::..</text></g><g><title>engine::session::Session::save_entity_changes (76 samples, 6.29%)</title><rect x="5.2152%" y="645" width="6.2914%" height="15" fill="rgb(220,84,2)" fg:x="63" fg:w="76"/><text x="5.4652%" y="655.50">engine::..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="11.4238%" y="629" width="0.0828%" height="15" fill="rgb(224,37,37)" fg:x="138" fg:w="1"/><text x="11.6738%" y="639.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="11.4238%" y="613" width="0.0828%" height="15" fill="rgb(220,143,18)" fg:x="138" fg:w="1"/><text x="11.6738%" y="623.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="11.4238%" y="597" width="0.0828%" height="15" fill="rgb(210,88,33)" fg:x="138" fg:w="1"/><text x="11.6738%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="11.4238%" y="581" width="0.0828%" height="15" fill="rgb(219,87,51)" fg:x="138" fg:w="1"/><text x="11.6738%" y="591.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="11.4238%" y="565" width="0.0828%" height="15" fill="rgb(211,7,35)" fg:x="138" fg:w="1"/><text x="11.6738%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="11.4238%" y="549" width="0.0828%" height="15" fill="rgb(232,77,2)" fg:x="138" fg:w="1"/><text x="11.6738%" y="559.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="11.4238%" y="533" width="0.0828%" height="15" fill="rgb(249,94,25)" fg:x="138" fg:w="1"/><text x="11.6738%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5066%" y="629" width="0.0828%" height="15" fill="rgb(215,112,2)" fg:x="139" fg:w="1"/><text x="11.7566%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="11.5894%" y="629" width="0.0828%" height="15" fill="rgb(226,115,48)" fg:x="140" fg:w="1"/><text x="11.8394%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="11.6722%" y="629" width="0.0828%" height="15" fill="rgb(249,196,10)" fg:x="141" fg:w="1"/><text x="11.9222%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="11.6722%" y="613" width="0.0828%" height="15" fill="rgb(237,109,14)" fg:x="141" fg:w="1"/><text x="11.9222%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.7550%" y="597" width="0.0828%" height="15" fill="rgb(217,103,53)" fg:x="142" fg:w="1"/><text x="12.0050%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.7550%" y="581" width="0.0828%" height="15" fill="rgb(244,137,9)" fg:x="142" fg:w="1"/><text x="12.0050%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="11.7550%" y="565" width="0.0828%" height="15" fill="rgb(227,201,3)" fg:x="142" fg:w="1"/><text x="12.0050%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9205%" y="565" width="0.0828%" height="15" fill="rgb(243,94,6)" fg:x="144" fg:w="1"/><text x="12.1705%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.25%)</title><rect x="11.8377%" y="597" width="0.2483%" height="15" fill="rgb(235,118,5)" fg:x="143" fg:w="3"/><text x="12.0877%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="11.8377%" y="581" width="0.2483%" height="15" fill="rgb(247,10,30)" fg:x="143" fg:w="3"/><text x="12.0877%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0033%" y="565" width="0.0828%" height="15" fill="rgb(205,26,28)" fg:x="145" fg:w="1"/><text x="12.2533%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0033%" y="549" width="0.0828%" height="15" fill="rgb(206,99,35)" fg:x="145" fg:w="1"/><text x="12.2533%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.0033%" y="533" width="0.0828%" height="15" fill="rgb(238,130,40)" fg:x="145" fg:w="1"/><text x="12.2533%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.41%)</title><rect x="11.7550%" y="629" width="0.4139%" height="15" fill="rgb(224,126,31)" fg:x="142" fg:w="5"/><text x="12.0050%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.41%)</title><rect x="11.7550%" y="613" width="0.4139%" height="15" fill="rgb(254,105,17)" fg:x="142" fg:w="5"/><text x="12.0050%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="12.0861%" y="597" width="0.0828%" height="15" fill="rgb(216,87,36)" fg:x="146" fg:w="1"/><text x="12.3361%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.0861%" y="581" width="0.0828%" height="15" fill="rgb(240,21,12)" fg:x="146" fg:w="1"/><text x="12.3361%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0861%" y="565" width="0.0828%" height="15" fill="rgb(245,192,34)" fg:x="146" fg:w="1"/><text x="12.3361%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2517%" y="581" width="0.0828%" height="15" fill="rgb(226,100,49)" fg:x="148" fg:w="1"/><text x="12.5017%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2517%" y="565" width="0.0828%" height="15" fill="rgb(245,188,27)" fg:x="148" fg:w="1"/><text x="12.5017%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.2517%" y="549" width="0.0828%" height="15" fill="rgb(212,170,8)" fg:x="148" fg:w="1"/><text x="12.5017%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.2517%" y="533" width="0.0828%" height="15" fill="rgb(217,113,29)" fg:x="148" fg:w="1"/><text x="12.5017%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.2517%" y="517" width="0.0828%" height="15" fill="rgb(237,30,3)" fg:x="148" fg:w="1"/><text x="12.5017%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2517%" y="501" width="0.0828%" height="15" fill="rgb(227,19,28)" fg:x="148" fg:w="1"/><text x="12.5017%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2517%" y="485" width="0.0828%" height="15" fill="rgb(239,172,45)" fg:x="148" fg:w="1"/><text x="12.5017%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.2517%" y="469" width="0.0828%" height="15" fill="rgb(254,55,39)" fg:x="148" fg:w="1"/><text x="12.5017%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.2517%" y="453" width="0.0828%" height="15" fill="rgb(249,208,12)" fg:x="148" fg:w="1"/><text x="12.5017%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.2517%" y="437" width="0.0828%" height="15" fill="rgb(240,52,13)" fg:x="148" fg:w="1"/><text x="12.5017%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.2517%" y="421" width="0.0828%" height="15" fill="rgb(252,149,13)" fg:x="148" fg:w="1"/><text x="12.5017%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2517%" y="405" width="0.0828%" height="15" fill="rgb(232,81,48)" fg:x="148" fg:w="1"/><text x="12.5017%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.17%)</title><rect x="12.2517%" y="613" width="0.1656%" height="15" fill="rgb(222,144,2)" fg:x="148" fg:w="2"/><text x="12.5017%" y="623.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.17%)</title><rect x="12.2517%" y="597" width="0.1656%" height="15" fill="rgb(216,81,32)" fg:x="148" fg:w="2"/><text x="12.5017%" y="607.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="12.3344%" y="581" width="0.0828%" height="15" fill="rgb(244,78,51)" fg:x="149" fg:w="1"/><text x="12.5844%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="12.5000%" y="517" width="0.0828%" height="15" fill="rgb(217,66,21)" fg:x="151" fg:w="1"/><text x="12.7500%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="12.5000%" y="501" width="0.0828%" height="15" fill="rgb(247,101,42)" fg:x="151" fg:w="1"/><text x="12.7500%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5000%" y="485" width="0.0828%" height="15" fill="rgb(227,81,39)" fg:x="151" fg:w="1"/><text x="12.7500%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5000%" y="469" width="0.0828%" height="15" fill="rgb(220,223,44)" fg:x="151" fg:w="1"/><text x="12.7500%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.5000%" y="453" width="0.0828%" height="15" fill="rgb(205,218,2)" fg:x="151" fg:w="1"/><text x="12.7500%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.5000%" y="437" width="0.0828%" height="15" fill="rgb(212,207,28)" fg:x="151" fg:w="1"/><text x="12.7500%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.5000%" y="421" width="0.0828%" height="15" fill="rgb(224,12,41)" fg:x="151" fg:w="1"/><text x="12.7500%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.5000%" y="405" width="0.0828%" height="15" fill="rgb(216,118,12)" fg:x="151" fg:w="1"/><text x="12.7500%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5000%" y="389" width="0.0828%" height="15" fill="rgb(252,97,46)" fg:x="151" fg:w="1"/><text x="12.7500%" y="399.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.16%)</title><rect x="11.5066%" y="661" width="1.1589%" height="15" fill="rgb(244,206,19)" fg:x="139" fg:w="14"/><text x="11.7566%" y="671.50"></text></g><g><title>plugins_core::tools::set_container (14 samples, 1.16%)</title><rect x="11.5066%" y="645" width="1.1589%" height="15" fill="rgb(231,84,31)" fg:x="139" fg:w="14"/><text x="11.7566%" y="655.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.50%)</title><rect x="12.1689%" y="629" width="0.4967%" height="15" fill="rgb(244,133,0)" fg:x="147" fg:w="6"/><text x="12.4189%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.25%)</title><rect x="12.4172%" y="613" width="0.2483%" height="15" fill="rgb(223,15,50)" fg:x="150" fg:w="3"/><text x="12.6672%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.25%)</title><rect x="12.4172%" y="597" width="0.2483%" height="15" fill="rgb(250,118,49)" fg:x="150" fg:w="3"/><text x="12.6672%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (2 samples, 0.17%)</title><rect x="12.5000%" y="581" width="0.1656%" height="15" fill="rgb(248,25,38)" fg:x="151" fg:w="2"/><text x="12.7500%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.17%)</title><rect x="12.5000%" y="565" width="0.1656%" height="15" fill="rgb(215,70,14)" fg:x="151" fg:w="2"/><text x="12.7500%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (2 samples, 0.17%)</title><rect x="12.5000%" y="549" width="0.1656%" height="15" fill="rgb(215,28,15)" fg:x="151" fg:w="2"/><text x="12.7500%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="12.5000%" y="533" width="0.1656%" height="15" fill="rgb(243,6,28)" fg:x="151" fg:w="2"/><text x="12.7500%" y="543.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="12.5828%" y="517" width="0.0828%" height="15" fill="rgb(222,130,1)" fg:x="152" fg:w="1"/><text x="12.8328%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.17%)</title><rect x="12.6656%" y="661" width="0.1656%" height="15" fill="rgb(236,166,44)" fg:x="153" fg:w="2"/><text x="12.9156%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.17%)</title><rect x="12.6656%" y="645" width="0.1656%" height="15" fill="rgb(221,108,14)" fg:x="153" fg:w="2"/><text x="12.9156%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="12.7483%" y="629" width="0.0828%" height="15" fill="rgb(252,3,45)" fg:x="154" fg:w="1"/><text x="12.9983%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="12.7483%" y="613" width="0.0828%" height="15" fill="rgb(237,68,30)" fg:x="154" fg:w="1"/><text x="12.9983%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7483%" y="597" width="0.0828%" height="15" fill="rgb(211,79,22)" fg:x="154" fg:w="1"/><text x="12.9983%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="12.8311%" y="645" width="0.0828%" height="15" fill="rgb(252,185,21)" fg:x="155" fg:w="1"/><text x="13.0811%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="12.8311%" y="629" width="0.0828%" height="15" fill="rgb(225,189,26)" fg:x="155" fg:w="1"/><text x="13.0811%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.8311%" y="613" width="0.0828%" height="15" fill="rgb(241,30,40)" fg:x="155" fg:w="1"/><text x="13.0811%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9139%" y="597" width="0.0828%" height="15" fill="rgb(235,215,44)" fg:x="156" fg:w="1"/><text x="13.1639%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9139%" y="581" width="0.0828%" height="15" fill="rgb(205,8,29)" fg:x="156" fg:w="1"/><text x="13.1639%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9139%" y="565" width="0.0828%" height="15" fill="rgb(241,137,42)" fg:x="156" fg:w="1"/><text x="13.1639%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.9139%" y="549" width="0.0828%" height="15" fill="rgb(237,155,2)" fg:x="156" fg:w="1"/><text x="13.1639%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.9139%" y="533" width="0.0828%" height="15" fill="rgb(245,29,42)" fg:x="156" fg:w="1"/><text x="13.1639%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.9139%" y="517" width="0.0828%" height="15" fill="rgb(234,101,35)" fg:x="156" fg:w="1"/><text x="13.1639%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.9139%" y="501" width="0.0828%" height="15" fill="rgb(228,64,37)" fg:x="156" fg:w="1"/><text x="13.1639%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.9139%" y="485" width="0.0828%" height="15" fill="rgb(217,214,36)" fg:x="156" fg:w="1"/><text x="13.1639%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.9139%" y="469" width="0.0828%" height="15" fill="rgb(243,70,3)" fg:x="156" fg:w="1"/><text x="13.1639%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.9139%" y="453" width="0.0828%" height="15" fill="rgb(253,158,52)" fg:x="156" fg:w="1"/><text x="13.1639%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.9139%" y="437" width="0.0828%" height="15" fill="rgb(234,111,54)" fg:x="156" fg:w="1"/><text x="13.1639%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.9139%" y="421" width="0.0828%" height="15" fill="rgb(217,70,32)" fg:x="156" fg:w="1"/><text x="13.1639%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9139%" y="405" width="0.0828%" height="15" fill="rgb(234,18,33)" fg:x="156" fg:w="1"/><text x="13.1639%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="12.9967%" y="597" width="0.0828%" height="15" fill="rgb(234,12,49)" fg:x="157" fg:w="1"/><text x="13.2467%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.9967%" y="581" width="0.0828%" height="15" fill="rgb(236,10,21)" fg:x="157" fg:w="1"/><text x="13.2467%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="13.0795%" y="597" width="0.0828%" height="15" fill="rgb(248,182,45)" fg:x="158" fg:w="1"/><text x="13.3295%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="13.0795%" y="581" width="0.0828%" height="15" fill="rgb(217,95,36)" fg:x="158" fg:w="1"/><text x="13.3295%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="13.1623%" y="597" width="0.0828%" height="15" fill="rgb(212,110,31)" fg:x="159" fg:w="1"/><text x="13.4123%" y="607.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="13.1623%" y="581" width="0.0828%" height="15" fill="rgb(206,32,53)" fg:x="159" fg:w="1"/><text x="13.4123%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1623%" y="565" width="0.0828%" height="15" fill="rgb(246,141,37)" fg:x="159" fg:w="1"/><text x="13.4123%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1623%" y="549" width="0.0828%" height="15" fill="rgb(219,16,7)" fg:x="159" fg:w="1"/><text x="13.4123%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="13.1623%" y="533" width="0.0828%" height="15" fill="rgb(230,205,45)" fg:x="159" fg:w="1"/><text x="13.4123%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1623%" y="517" width="0.0828%" height="15" fill="rgb(231,43,49)" fg:x="159" fg:w="1"/><text x="13.4123%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.17%)</title><rect x="13.2450%" y="597" width="0.1656%" height="15" fill="rgb(212,106,34)" fg:x="160" fg:w="2"/><text x="13.4950%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.17%)</title><rect x="13.2450%" y="581" width="0.1656%" height="15" fill="rgb(206,83,17)" fg:x="160" fg:w="2"/><text x="13.4950%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.17%)</title><rect x="13.2450%" y="565" width="0.1656%" height="15" fill="rgb(244,154,49)" fg:x="160" fg:w="2"/><text x="13.4950%" y="575.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.17%)</title><rect x="13.2450%" y="549" width="0.1656%" height="15" fill="rgb(244,149,49)" fg:x="160" fg:w="2"/><text x="13.4950%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.3278%" y="533" width="0.0828%" height="15" fill="rgb(227,134,18)" fg:x="161" fg:w="1"/><text x="13.5778%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="13.4106%" y="581" width="0.0828%" height="15" fill="rgb(237,116,36)" fg:x="162" fg:w="1"/><text x="13.6606%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="13.4106%" y="565" width="0.0828%" height="15" fill="rgb(205,129,40)" fg:x="162" fg:w="1"/><text x="13.6606%" y="575.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="13.4106%" y="549" width="0.0828%" height="15" fill="rgb(236,178,4)" fg:x="162" fg:w="1"/><text x="13.6606%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="13.4934%" y="565" width="0.0828%" height="15" fill="rgb(251,76,53)" fg:x="163" fg:w="1"/><text x="13.7434%" y="575.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="13.4934%" y="549" width="0.0828%" height="15" fill="rgb(242,92,40)" fg:x="163" fg:w="1"/><text x="13.7434%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4934%" y="533" width="0.0828%" height="15" fill="rgb(209,45,30)" fg:x="163" fg:w="1"/><text x="13.7434%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4934%" y="517" width="0.0828%" height="15" fill="rgb(218,157,36)" fg:x="163" fg:w="1"/><text x="13.7434%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.4934%" y="501" width="0.0828%" height="15" fill="rgb(222,186,16)" fg:x="163" fg:w="1"/><text x="13.7434%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.4934%" y="485" width="0.0828%" height="15" fill="rgb(254,72,35)" fg:x="163" fg:w="1"/><text x="13.7434%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.4934%" y="469" width="0.0828%" height="15" fill="rgb(224,25,35)" fg:x="163" fg:w="1"/><text x="13.7434%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.4934%" y="453" width="0.0828%" height="15" fill="rgb(206,135,52)" fg:x="163" fg:w="1"/><text x="13.7434%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.4934%" y="437" width="0.0828%" height="15" fill="rgb(229,174,47)" fg:x="163" fg:w="1"/><text x="13.7434%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5762%" y="501" width="0.0828%" height="15" fill="rgb(242,184,21)" fg:x="164" fg:w="1"/><text x="13.8262%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5762%" y="485" width="0.0828%" height="15" fill="rgb(213,22,45)" fg:x="164" fg:w="1"/><text x="13.8262%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5762%" y="469" width="0.0828%" height="15" fill="rgb(237,81,54)" fg:x="164" fg:w="1"/><text x="13.8262%" y="479.50"></text></g><g><title>plugins_core::build::Build::leads_to (4 samples, 0.33%)</title><rect x="13.4106%" y="597" width="0.3311%" height="15" fill="rgb(248,177,18)" fg:x="162" fg:w="4"/><text x="13.6606%" y="607.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.25%)</title><rect x="13.4934%" y="581" width="0.2483%" height="15" fill="rgb(254,31,16)" fg:x="163" fg:w="3"/><text x="13.7434%" y="591.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.17%)</title><rect x="13.5762%" y="565" width="0.1656%" height="15" fill="rgb(235,20,31)" fg:x="164" fg:w="2"/><text x="13.8262%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.17%)</title><rect x="13.5762%" y="549" width="0.1656%" height="15" fill="rgb(240,56,43)" fg:x="164" fg:w="2"/><text x="13.8262%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.17%)</title><rect x="13.5762%" y="533" width="0.1656%" height="15" fill="rgb(237,197,51)" fg:x="164" fg:w="2"/><text x="13.8262%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="13.5762%" y="517" width="0.1656%" height="15" fill="rgb(241,162,44)" fg:x="164" fg:w="2"/><text x="13.8262%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6589%" y="501" width="0.0828%" height="15" fill="rgb(224,23,20)" fg:x="165" fg:w="1"/><text x="13.9089%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6589%" y="485" width="0.0828%" height="15" fill="rgb(250,109,34)" fg:x="165" fg:w="1"/><text x="13.9089%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6589%" y="469" width="0.0828%" height="15" fill="rgb(214,175,50)" fg:x="165" fg:w="1"/><text x="13.9089%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6589%" y="453" width="0.0828%" height="15" fill="rgb(213,182,5)" fg:x="165" fg:w="1"/><text x="13.9089%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6589%" y="437" width="0.0828%" height="15" fill="rgb(209,199,19)" fg:x="165" fg:w="1"/><text x="13.9089%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.91%)</title><rect x="12.9139%" y="645" width="0.9106%" height="15" fill="rgb(236,224,42)" fg:x="156" fg:w="11"/><text x="13.1639%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.91%)</title><rect x="12.9139%" y="629" width="0.9106%" height="15" fill="rgb(246,226,29)" fg:x="156" fg:w="11"/><text x="13.1639%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.91%)</title><rect x="12.9139%" y="613" width="0.9106%" height="15" fill="rgb(227,223,11)" fg:x="156" fg:w="11"/><text x="13.1639%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="13.7417%" y="597" width="0.0828%" height="15" fill="rgb(219,7,51)" fg:x="166" fg:w="1"/><text x="13.9917%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7417%" y="581" width="0.0828%" height="15" fill="rgb(245,167,10)" fg:x="166" fg:w="1"/><text x="13.9917%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7417%" y="565" width="0.0828%" height="15" fill="rgb(237,224,16)" fg:x="166" fg:w="1"/><text x="13.9917%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7417%" y="549" width="0.0828%" height="15" fill="rgb(226,132,13)" fg:x="166" fg:w="1"/><text x="13.9917%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.7417%" y="533" width="0.0828%" height="15" fill="rgb(214,140,3)" fg:x="166" fg:w="1"/><text x="13.9917%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.7417%" y="517" width="0.0828%" height="15" fill="rgb(221,177,4)" fg:x="166" fg:w="1"/><text x="13.9917%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.7417%" y="501" width="0.0828%" height="15" fill="rgb(238,139,3)" fg:x="166" fg:w="1"/><text x="13.9917%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.7417%" y="485" width="0.0828%" height="15" fill="rgb(216,17,39)" fg:x="166" fg:w="1"/><text x="13.9917%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.7417%" y="469" width="0.0828%" height="15" fill="rgb(238,120,9)" fg:x="166" fg:w="1"/><text x="13.9917%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.7417%" y="453" width="0.0828%" height="15" fill="rgb(244,92,53)" fg:x="166" fg:w="1"/><text x="13.9917%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.7417%" y="437" width="0.0828%" height="15" fill="rgb(224,148,33)" fg:x="166" fg:w="1"/><text x="13.9917%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.7417%" y="421" width="0.0828%" height="15" fill="rgb(243,6,36)" fg:x="166" fg:w="1"/><text x="13.9917%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.7417%" y="405" width="0.0828%" height="15" fill="rgb(230,102,11)" fg:x="166" fg:w="1"/><text x="13.9917%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7417%" y="389" width="0.0828%" height="15" fill="rgb(234,148,36)" fg:x="166" fg:w="1"/><text x="13.9917%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="13.8245%" y="645" width="0.0828%" height="15" fill="rgb(251,153,25)" fg:x="167" fg:w="1"/><text x="14.0745%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.8245%" y="629" width="0.0828%" height="15" fill="rgb(215,129,8)" fg:x="167" fg:w="1"/><text x="14.0745%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9073%" y="597" width="0.0828%" height="15" fill="rgb(224,128,35)" fg:x="168" fg:w="1"/><text x="14.1573%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.17%)</title><rect x="13.9073%" y="613" width="0.1656%" height="15" fill="rgb(237,56,52)" fg:x="168" fg:w="2"/><text x="14.1573%" y="623.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="13.9901%" y="597" width="0.0828%" height="15" fill="rgb(234,213,19)" fg:x="169" fg:w="1"/><text x="14.2401%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="14.0728%" y="597" width="0.0828%" height="15" fill="rgb(252,82,23)" fg:x="170" fg:w="1"/><text x="14.3228%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="14.0728%" y="581" width="0.0828%" height="15" fill="rgb(254,201,21)" fg:x="170" fg:w="1"/><text x="14.3228%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="14.0728%" y="565" width="0.0828%" height="15" fill="rgb(250,186,11)" fg:x="170" fg:w="1"/><text x="14.3228%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0728%" y="549" width="0.0828%" height="15" fill="rgb(211,174,5)" fg:x="170" fg:w="1"/><text x="14.3228%" y="559.50"></text></g><g><title>engine::identifiers::model::set_gid (2 samples, 0.17%)</title><rect x="14.0728%" y="613" width="0.1656%" height="15" fill="rgb(214,121,10)" fg:x="170" fg:w="2"/><text x="14.3228%" y="623.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="14.1556%" y="597" width="0.0828%" height="15" fill="rgb(241,66,2)" fg:x="171" fg:w="1"/><text x="14.4056%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="14.1556%" y="581" width="0.0828%" height="15" fill="rgb(220,167,19)" fg:x="171" fg:w="1"/><text x="14.4056%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="14.1556%" y="565" width="0.0828%" height="15" fill="rgb(231,54,50)" fg:x="171" fg:w="1"/><text x="14.4056%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.1556%" y="549" width="0.0828%" height="15" fill="rgb(239,217,53)" fg:x="171" fg:w="1"/><text x="14.4056%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="14.1556%" y="533" width="0.0828%" height="15" fill="rgb(248,8,0)" fg:x="171" fg:w="1"/><text x="14.4056%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.1556%" y="517" width="0.0828%" height="15" fill="rgb(229,118,37)" fg:x="171" fg:w="1"/><text x="14.4056%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1556%" y="501" width="0.0828%" height="15" fill="rgb(253,223,43)" fg:x="171" fg:w="1"/><text x="14.4056%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1556%" y="485" width="0.0828%" height="15" fill="rgb(211,77,36)" fg:x="171" fg:w="1"/><text x="14.4056%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1556%" y="469" width="0.0828%" height="15" fill="rgb(219,3,53)" fg:x="171" fg:w="1"/><text x="14.4056%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.50%)</title><rect x="14.4868%" y="549" width="0.4967%" height="15" fill="rgb(244,45,42)" fg:x="175" fg:w="6"/><text x="14.7368%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="14.6523%" y="533" width="0.3311%" height="15" fill="rgb(225,95,27)" fg:x="177" fg:w="4"/><text x="14.9023%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="14.7351%" y="517" width="0.2483%" height="15" fill="rgb(207,74,8)" fg:x="178" fg:w="3"/><text x="14.9851%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.9007%" y="501" width="0.0828%" height="15" fill="rgb(243,63,36)" fg:x="180" fg:w="1"/><text x="15.1507%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.83%)</title><rect x="14.4040%" y="565" width="0.8278%" height="15" fill="rgb(211,180,12)" fg:x="174" fg:w="10"/><text x="14.6540%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="14.9834%" y="549" width="0.2483%" height="15" fill="rgb(254,166,49)" fg:x="181" fg:w="3"/><text x="15.2334%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="15.0662%" y="533" width="0.1656%" height="15" fill="rgb(205,19,0)" fg:x="182" fg:w="2"/><text x="15.3162%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="15.0662%" y="517" width="0.1656%" height="15" fill="rgb(224,172,32)" fg:x="182" fg:w="2"/><text x="15.3162%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.1490%" y="501" width="0.0828%" height="15" fill="rgb(254,136,30)" fg:x="183" fg:w="1"/><text x="15.3990%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.1490%" y="485" width="0.0828%" height="15" fill="rgb(246,19,35)" fg:x="183" fg:w="1"/><text x="15.3990%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.1490%" y="469" width="0.0828%" height="15" fill="rgb(219,24,36)" fg:x="183" fg:w="1"/><text x="15.3990%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="15.2318%" y="549" width="0.3311%" height="15" fill="rgb(251,55,1)" fg:x="184" fg:w="4"/><text x="15.4818%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="15.3146%" y="533" width="0.2483%" height="15" fill="rgb(218,117,39)" fg:x="185" fg:w="3"/><text x="15.5646%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="15.3146%" y="517" width="0.2483%" height="15" fill="rgb(248,169,11)" fg:x="185" fg:w="3"/><text x="15.5646%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="15.3974%" y="501" width="0.1656%" height="15" fill="rgb(244,40,44)" fg:x="186" fg:w="2"/><text x="15.6474%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.4801%" y="485" width="0.0828%" height="15" fill="rgb(234,62,37)" fg:x="187" fg:w="1"/><text x="15.7301%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.4801%" y="469" width="0.0828%" height="15" fill="rgb(207,117,42)" fg:x="187" fg:w="1"/><text x="15.7301%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.4801%" y="453" width="0.0828%" height="15" fill="rgb(213,43,2)" fg:x="187" fg:w="1"/><text x="15.7301%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.5629%" y="533" width="0.0828%" height="15" fill="rgb(244,202,51)" fg:x="188" fg:w="1"/><text x="15.8129%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.6457%" y="501" width="0.0828%" height="15" fill="rgb(253,174,46)" fg:x="189" fg:w="1"/><text x="15.8957%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.6457%" y="485" width="0.0828%" height="15" fill="rgb(251,23,1)" fg:x="189" fg:w="1"/><text x="15.8957%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="15.6457%" y="533" width="0.4139%" height="15" fill="rgb(253,26,1)" fg:x="189" fg:w="5"/><text x="15.8957%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="15.6457%" y="517" width="0.4139%" height="15" fill="rgb(216,89,31)" fg:x="189" fg:w="5"/><text x="15.8957%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="15.7285%" y="501" width="0.3311%" height="15" fill="rgb(209,109,5)" fg:x="190" fg:w="4"/><text x="15.9785%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="15.7285%" y="485" width="0.3311%" height="15" fill="rgb(229,63,13)" fg:x="190" fg:w="4"/><text x="15.9785%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="15.8940%" y="469" width="0.1656%" height="15" fill="rgb(238,137,54)" fg:x="192" fg:w="2"/><text x="16.1440%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.9768%" y="453" width="0.0828%" height="15" fill="rgb(228,1,9)" fg:x="193" fg:w="1"/><text x="16.2268%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.9768%" y="437" width="0.0828%" height="15" fill="rgb(249,120,48)" fg:x="193" fg:w="1"/><text x="16.2268%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.0596%" y="533" width="0.0828%" height="15" fill="rgb(209,72,36)" fg:x="194" fg:w="1"/><text x="16.3096%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.0596%" y="517" width="0.0828%" height="15" fill="rgb(247,98,49)" fg:x="194" fg:w="1"/><text x="16.3096%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.0596%" y="501" width="0.0828%" height="15" fill="rgb(233,75,36)" fg:x="194" fg:w="1"/><text x="16.3096%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.0596%" y="485" width="0.0828%" height="15" fill="rgb(225,14,24)" fg:x="194" fg:w="1"/><text x="16.3096%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.3079%" y="517" width="0.0828%" height="15" fill="rgb(237,193,20)" fg:x="197" fg:w="1"/><text x="16.5579%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.3079%" y="501" width="0.0828%" height="15" fill="rgb(239,122,19)" fg:x="197" fg:w="1"/><text x="16.5579%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="16.4735%" y="501" width="0.1656%" height="15" fill="rgb(231,220,10)" fg:x="199" fg:w="2"/><text x="16.7235%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="16.4735%" y="485" width="0.1656%" height="15" fill="rgb(220,66,15)" fg:x="199" fg:w="2"/><text x="16.7235%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.5563%" y="469" width="0.0828%" height="15" fill="rgb(215,171,52)" fg:x="200" fg:w="1"/><text x="16.8063%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.8874%" y="453" width="0.0828%" height="15" fill="rgb(241,169,50)" fg:x="204" fg:w="1"/><text x="17.1374%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="16.6391%" y="501" width="0.4139%" height="15" fill="rgb(236,189,0)" fg:x="201" fg:w="5"/><text x="16.8891%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="16.7219%" y="485" width="0.3311%" height="15" fill="rgb(217,147,20)" fg:x="202" fg:w="4"/><text x="16.9719%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="16.8046%" y="469" width="0.2483%" height="15" fill="rgb(206,188,39)" fg:x="203" fg:w="3"/><text x="17.0546%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="16.9702%" y="453" width="0.0828%" height="15" fill="rgb(227,118,25)" fg:x="205" fg:w="1"/><text x="17.2202%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.83%)</title><rect x="16.3907%" y="517" width="0.8278%" height="15" fill="rgb(248,171,40)" fg:x="198" fg:w="10"/><text x="16.6407%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="17.0530%" y="501" width="0.1656%" height="15" fill="rgb(251,90,54)" fg:x="206" fg:w="2"/><text x="17.3030%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="17.0530%" y="485" width="0.1656%" height="15" fill="rgb(234,11,46)" fg:x="206" fg:w="2"/><text x="17.3030%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.1358%" y="469" width="0.0828%" height="15" fill="rgb(229,134,13)" fg:x="207" fg:w="1"/><text x="17.3858%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.32%)</title><rect x="16.1424%" y="533" width="1.3245%" height="15" fill="rgb(223,129,3)" fg:x="195" fg:w="16"/><text x="16.3924%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="17.2185%" y="517" width="0.2483%" height="15" fill="rgb(221,124,13)" fg:x="208" fg:w="3"/><text x="17.4685%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.3841%" y="501" width="0.0828%" height="15" fill="rgb(234,3,18)" fg:x="210" fg:w="1"/><text x="17.6341%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.07%)</title><rect x="15.5629%" y="549" width="2.0695%" height="15" fill="rgb(249,199,20)" fg:x="188" fg:w="25"/><text x="15.8129%" y="559.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="17.4669%" y="533" width="0.1656%" height="15" fill="rgb(224,134,6)" fg:x="211" fg:w="2"/><text x="17.7169%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (46 samples, 3.81%)</title><rect x="14.3212%" y="581" width="3.8079%" height="15" fill="rgb(254,83,26)" fg:x="173" fg:w="46"/><text x="14.5712%" y="591.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.90%)</title><rect x="15.2318%" y="565" width="2.8974%" height="15" fill="rgb(217,88,9)" fg:x="184" fg:w="35"/><text x="15.4818%" y="575.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.50%)</title><rect x="17.6325%" y="549" width="0.4967%" height="15" fill="rgb(225,73,2)" fg:x="213" fg:w="6"/><text x="17.8825%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="17.9636%" y="533" width="0.1656%" height="15" fill="rgb(226,44,39)" fg:x="217" fg:w="2"/><text x="18.2136%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.0464%" y="517" width="0.0828%" height="15" fill="rgb(228,53,17)" fg:x="218" fg:w="1"/><text x="18.2964%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.0464%" y="501" width="0.0828%" height="15" fill="rgb(212,27,27)" fg:x="218" fg:w="1"/><text x="18.2964%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.0464%" y="485" width="0.0828%" height="15" fill="rgb(241,50,6)" fg:x="218" fg:w="1"/><text x="18.2964%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.0464%" y="469" width="0.0828%" height="15" fill="rgb(225,28,51)" fg:x="218" fg:w="1"/><text x="18.2964%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.1291%" y="549" width="0.0828%" height="15" fill="rgb(215,33,16)" fg:x="219" fg:w="1"/><text x="18.3791%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.1291%" y="533" width="0.0828%" height="15" fill="rgb(243,40,39)" fg:x="219" fg:w="1"/><text x="18.3791%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3775%" y="533" width="0.0828%" height="15" fill="rgb(225,11,42)" fg:x="222" fg:w="1"/><text x="18.6275%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="18.4603%" y="533" width="0.1656%" height="15" fill="rgb(241,220,38)" fg:x="223" fg:w="2"/><text x="18.7103%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="18.6258%" y="517" width="0.1656%" height="15" fill="rgb(244,52,35)" fg:x="225" fg:w="2"/><text x="18.8758%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="18.7914%" y="517" width="0.1656%" height="15" fill="rgb(246,42,46)" fg:x="227" fg:w="2"/><text x="19.0414%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.8742%" y="501" width="0.0828%" height="15" fill="rgb(205,184,13)" fg:x="228" fg:w="1"/><text x="19.1242%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.99%)</title><rect x="18.1291%" y="581" width="0.9934%" height="15" fill="rgb(209,48,36)" fg:x="219" fg:w="12"/><text x="18.3791%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.99%)</title><rect x="18.1291%" y="565" width="0.9934%" height="15" fill="rgb(244,34,51)" fg:x="219" fg:w="12"/><text x="18.3791%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.91%)</title><rect x="18.2119%" y="549" width="0.9106%" height="15" fill="rgb(221,107,33)" fg:x="220" fg:w="11"/><text x="18.4619%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.50%)</title><rect x="18.6258%" y="533" width="0.4967%" height="15" fill="rgb(224,203,12)" fg:x="225" fg:w="6"/><text x="18.8758%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="18.9570%" y="517" width="0.1656%" height="15" fill="rgb(230,215,18)" fg:x="229" fg:w="2"/><text x="19.2070%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="19.0397%" y="501" width="0.0828%" height="15" fill="rgb(206,185,35)" fg:x="230" fg:w="1"/><text x="19.2897%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.0397%" y="485" width="0.0828%" height="15" fill="rgb(228,140,34)" fg:x="230" fg:w="1"/><text x="19.2897%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.0397%" y="469" width="0.0828%" height="15" fill="rgb(208,93,13)" fg:x="230" fg:w="1"/><text x="19.2897%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="19.2881%" y="533" width="0.1656%" height="15" fill="rgb(221,193,39)" fg:x="233" fg:w="2"/><text x="19.5381%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.50%)</title><rect x="19.4536%" y="533" width="0.4967%" height="15" fill="rgb(241,132,34)" fg:x="235" fg:w="6"/><text x="19.7036%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="19.7020%" y="517" width="0.2483%" height="15" fill="rgb(221,141,10)" fg:x="238" fg:w="3"/><text x="19.9520%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.17%)</title><rect x="19.7848%" y="501" width="0.1656%" height="15" fill="rgb(226,90,31)" fg:x="239" fg:w="2"/><text x="20.0348%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.17%)</title><rect x="19.9503%" y="533" width="0.1656%" height="15" fill="rgb(243,75,5)" fg:x="241" fg:w="2"/><text x="20.2003%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="19.9503%" y="517" width="0.1656%" height="15" fill="rgb(227,156,21)" fg:x="241" fg:w="2"/><text x="20.2003%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="19.9503%" y="501" width="0.1656%" height="15" fill="rgb(250,195,8)" fg:x="241" fg:w="2"/><text x="20.2003%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1159%" y="533" width="0.0828%" height="15" fill="rgb(220,134,5)" fg:x="243" fg:w="1"/><text x="20.3659%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1987%" y="533" width="0.0828%" height="15" fill="rgb(246,106,34)" fg:x="244" fg:w="1"/><text x="20.4487%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5298%" y="485" width="0.0828%" height="15" fill="rgb(205,1,4)" fg:x="248" fg:w="1"/><text x="20.7798%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5298%" y="469" width="0.0828%" height="15" fill="rgb(224,151,29)" fg:x="248" fg:w="1"/><text x="20.7798%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.5298%" y="453" width="0.0828%" height="15" fill="rgb(251,196,0)" fg:x="248" fg:w="1"/><text x="20.7798%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.6126%" y="469" width="0.0828%" height="15" fill="rgb(212,127,0)" fg:x="249" fg:w="1"/><text x="20.8626%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6126%" y="453" width="0.0828%" height="15" fill="rgb(236,71,53)" fg:x="249" fg:w="1"/><text x="20.8626%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6126%" y="437" width="0.0828%" height="15" fill="rgb(227,99,0)" fg:x="249" fg:w="1"/><text x="20.8626%" y="447.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="20.6954%" y="453" width="0.0828%" height="15" fill="rgb(239,89,21)" fg:x="250" fg:w="1"/><text x="20.9454%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="20.6954%" y="469" width="0.1656%" height="15" fill="rgb(243,122,19)" fg:x="250" fg:w="2"/><text x="20.9454%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="20.7781%" y="453" width="0.0828%" height="15" fill="rgb(229,192,45)" fg:x="251" fg:w="1"/><text x="21.0281%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.7781%" y="437" width="0.0828%" height="15" fill="rgb(235,165,35)" fg:x="251" fg:w="1"/><text x="21.0281%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.7781%" y="421" width="0.0828%" height="15" fill="rgb(253,202,0)" fg:x="251" fg:w="1"/><text x="21.0281%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="20.7781%" y="405" width="0.0828%" height="15" fill="rgb(235,51,20)" fg:x="251" fg:w="1"/><text x="21.0281%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (8 samples, 0.66%)</title><rect x="20.2815%" y="533" width="0.6623%" height="15" fill="rgb(218,95,46)" fg:x="245" fg:w="8"/><text x="20.5315%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.58%)</title><rect x="20.3642%" y="517" width="0.5795%" height="15" fill="rgb(212,81,10)" fg:x="246" fg:w="7"/><text x="20.6142%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.58%)</title><rect x="20.3642%" y="501" width="0.5795%" height="15" fill="rgb(240,59,0)" fg:x="246" fg:w="7"/><text x="20.6142%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (4 samples, 0.33%)</title><rect x="20.6126%" y="485" width="0.3311%" height="15" fill="rgb(212,191,42)" fg:x="249" fg:w="4"/><text x="20.8626%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.8609%" y="469" width="0.0828%" height="15" fill="rgb(233,140,3)" fg:x="252" fg:w="1"/><text x="21.1109%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="20.9437%" y="533" width="0.0828%" height="15" fill="rgb(215,69,23)" fg:x="253" fg:w="1"/><text x="21.1937%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="20.9437%" y="517" width="0.0828%" height="15" fill="rgb(240,202,20)" fg:x="253" fg:w="1"/><text x="21.1937%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1093%" y="485" width="0.0828%" height="15" fill="rgb(209,146,50)" fg:x="255" fg:w="1"/><text x="21.3593%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1093%" y="469" width="0.0828%" height="15" fill="rgb(253,102,54)" fg:x="255" fg:w="1"/><text x="21.3593%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.1093%" y="453" width="0.0828%" height="15" fill="rgb(250,173,47)" fg:x="255" fg:w="1"/><text x="21.3593%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.1921%" y="485" width="0.0828%" height="15" fill="rgb(232,142,7)" fg:x="256" fg:w="1"/><text x="21.4421%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.1921%" y="469" width="0.0828%" height="15" fill="rgb(230,157,47)" fg:x="256" fg:w="1"/><text x="21.4421%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.1921%" y="453" width="0.0828%" height="15" fill="rgb(214,177,35)" fg:x="256" fg:w="1"/><text x="21.4421%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.1921%" y="437" width="0.0828%" height="15" fill="rgb(234,119,46)" fg:x="256" fg:w="1"/><text x="21.4421%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.2748%" y="469" width="0.0828%" height="15" fill="rgb(241,180,50)" fg:x="257" fg:w="1"/><text x="21.5248%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.2748%" y="453" width="0.0828%" height="15" fill="rgb(221,54,25)" fg:x="257" fg:w="1"/><text x="21.5248%" y="463.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (87 samples, 7.20%)</title><rect x="14.2384%" y="613" width="7.2020%" height="15" fill="rgb(209,157,44)" fg:x="172" fg:w="87"/><text x="14.4884%" y="623.50">engine::in..</text></g><g><title>engine::session::Session::check_for_changes (87 samples, 7.20%)</title><rect x="14.2384%" y="597" width="7.2020%" height="15" fill="rgb(246,115,41)" fg:x="172" fg:w="87"/><text x="14.4884%" y="607.50">engine::se..</text></g><g><title>kernel::compare::any_entity_changes (28 samples, 2.32%)</title><rect x="19.1225%" y="581" width="2.3179%" height="15" fill="rgb(229,86,1)" fg:x="231" fg:w="28"/><text x="19.3725%" y="591.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (28 samples, 2.32%)</title><rect x="19.1225%" y="565" width="2.3179%" height="15" fill="rgb(240,108,53)" fg:x="231" fg:w="28"/><text x="19.3725%" y="575.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.24%)</title><rect x="19.2053%" y="549" width="2.2351%" height="15" fill="rgb(227,134,2)" fg:x="232" fg:w="27"/><text x="19.4553%" y="559.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.41%)</title><rect x="21.0265%" y="533" width="0.4139%" height="15" fill="rgb(213,129,25)" fg:x="254" fg:w="5"/><text x="21.2765%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.33%)</title><rect x="21.1093%" y="517" width="0.3311%" height="15" fill="rgb(226,35,21)" fg:x="255" fg:w="4"/><text x="21.3593%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="21.1093%" y="501" width="0.3311%" height="15" fill="rgb(208,129,26)" fg:x="255" fg:w="4"/><text x="21.3593%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="21.2748%" y="485" width="0.1656%" height="15" fill="rgb(224,83,6)" fg:x="257" fg:w="2"/><text x="21.5248%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.3576%" y="469" width="0.0828%" height="15" fill="rgb(227,52,39)" fg:x="258" fg:w="1"/><text x="21.6076%" y="479.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="21.4404%" y="581" width="0.0828%" height="15" fill="rgb(241,30,17)" fg:x="259" fg:w="1"/><text x="21.6904%" y="591.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.17%)</title><rect x="21.4404%" y="613" width="0.1656%" height="15" fill="rgb(246,186,42)" fg:x="259" fg:w="2"/><text x="21.6904%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.17%)</title><rect x="21.4404%" y="597" width="0.1656%" height="15" fill="rgb(221,169,15)" fg:x="259" fg:w="2"/><text x="21.6904%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="21.5232%" y="581" width="0.0828%" height="15" fill="rgb(235,108,21)" fg:x="260" fg:w="1"/><text x="21.7732%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="21.5232%" y="565" width="0.0828%" height="15" fill="rgb(219,148,30)" fg:x="260" fg:w="1"/><text x="21.7732%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.5232%" y="549" width="0.0828%" height="15" fill="rgb(220,109,5)" fg:x="260" fg:w="1"/><text x="21.7732%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.5232%" y="533" width="0.0828%" height="15" fill="rgb(213,203,48)" fg:x="260" fg:w="1"/><text x="21.7732%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.5232%" y="517" width="0.0828%" height="15" fill="rgb(244,71,33)" fg:x="260" fg:w="1"/><text x="21.7732%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="21.5232%" y="501" width="0.0828%" height="15" fill="rgb(209,23,2)" fg:x="260" fg:w="1"/><text x="21.7732%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="21.5232%" y="485" width="0.0828%" height="15" fill="rgb(219,97,7)" fg:x="260" fg:w="1"/><text x="21.7732%" y="495.50"></text></g><g><title>engine::session::Session::flush (94 samples, 7.78%)</title><rect x="13.9073%" y="645" width="7.7815%" height="15" fill="rgb(216,161,23)" fg:x="168" fg:w="94"/><text x="14.1573%" y="655.50">engine::ses..</text></g><g><title>engine::session::Session::save_entity_changes (94 samples, 7.78%)</title><rect x="13.9073%" y="629" width="7.7815%" height="15" fill="rgb(207,45,42)" fg:x="168" fg:w="94"/><text x="14.1573%" y="639.50">engine::ses..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="21.6060%" y="613" width="0.0828%" height="15" fill="rgb(241,61,4)" fg:x="261" fg:w="1"/><text x="21.8560%" y="623.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="21.6060%" y="597" width="0.0828%" height="15" fill="rgb(236,170,1)" fg:x="261" fg:w="1"/><text x="21.8560%" y="607.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="21.6060%" y="581" width="0.0828%" height="15" fill="rgb(239,72,5)" fg:x="261" fg:w="1"/><text x="21.8560%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="21.6060%" y="565" width="0.0828%" height="15" fill="rgb(214,13,50)" fg:x="261" fg:w="1"/><text x="21.8560%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="21.6060%" y="549" width="0.0828%" height="15" fill="rgb(224,88,9)" fg:x="261" fg:w="1"/><text x="21.8560%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="21.6060%" y="533" width="0.0828%" height="15" fill="rgb(238,192,34)" fg:x="261" fg:w="1"/><text x="21.8560%" y="543.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="21.6060%" y="517" width="0.0828%" height="15" fill="rgb(217,203,50)" fg:x="261" fg:w="1"/><text x="21.8560%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="21.6887%" y="645" width="0.0828%" height="15" fill="rgb(241,123,32)" fg:x="262" fg:w="1"/><text x="21.9387%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.17%)</title><rect x="21.7715%" y="613" width="0.1656%" height="15" fill="rgb(248,151,39)" fg:x="263" fg:w="2"/><text x="22.0215%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="21.8543%" y="597" width="0.0828%" height="15" fill="rgb(208,89,6)" fg:x="264" fg:w="1"/><text x="22.1043%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="21.8543%" y="581" width="0.0828%" height="15" fill="rgb(254,43,26)" fg:x="264" fg:w="1"/><text x="22.1043%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.8543%" y="565" width="0.0828%" height="15" fill="rgb(216,158,13)" fg:x="264" fg:w="1"/><text x="22.1043%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.8543%" y="549" width="0.0828%" height="15" fill="rgb(212,47,37)" fg:x="264" fg:w="1"/><text x="22.1043%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.8543%" y="533" width="0.0828%" height="15" fill="rgb(254,16,10)" fg:x="264" fg:w="1"/><text x="22.1043%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="21.8543%" y="517" width="0.0828%" height="15" fill="rgb(223,228,16)" fg:x="264" fg:w="1"/><text x="22.1043%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.83%)</title><rect x="21.7715%" y="629" width="0.8278%" height="15" fill="rgb(249,108,50)" fg:x="263" fg:w="10"/><text x="22.0215%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (8 samples, 0.66%)</title><rect x="21.9371%" y="613" width="0.6623%" height="15" fill="rgb(208,220,5)" fg:x="265" fg:w="8"/><text x="22.1871%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (8 samples, 0.66%)</title><rect x="21.9371%" y="597" width="0.6623%" height="15" fill="rgb(217,89,48)" fg:x="265" fg:w="8"/><text x="22.1871%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.66%)</title><rect x="21.9371%" y="581" width="0.6623%" height="15" fill="rgb(212,113,41)" fg:x="265" fg:w="8"/><text x="22.1871%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.66%)</title><rect x="21.9371%" y="565" width="0.6623%" height="15" fill="rgb(231,127,5)" fg:x="265" fg:w="8"/><text x="22.1871%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.66%)</title><rect x="21.9371%" y="549" width="0.6623%" height="15" fill="rgb(217,141,17)" fg:x="265" fg:w="8"/><text x="22.1871%" y="559.50"></text></g><g><title>__libc_malloc (8 samples, 0.66%)</title><rect x="21.9371%" y="533" width="0.6623%" height="15" fill="rgb(245,125,54)" fg:x="265" fg:w="8"/><text x="22.1871%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5993%" y="613" width="0.0828%" height="15" fill="rgb(248,125,3)" fg:x="273" fg:w="1"/><text x="22.8493%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.6821%" y="597" width="0.0828%" height="15" fill="rgb(236,119,51)" fg:x="274" fg:w="1"/><text x="22.9321%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.17%)</title><rect x="22.6821%" y="613" width="0.1656%" height="15" fill="rgb(239,99,8)" fg:x="274" fg:w="2"/><text x="22.9321%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="22.7649%" y="597" width="0.0828%" height="15" fill="rgb(224,228,4)" fg:x="275" fg:w="1"/><text x="23.0149%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.9305%" y="565" width="0.0828%" height="15" fill="rgb(220,131,45)" fg:x="277" fg:w="1"/><text x="23.1805%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.9305%" y="549" width="0.0828%" height="15" fill="rgb(215,62,5)" fg:x="277" fg:w="1"/><text x="23.1805%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.25%)</title><rect x="22.8477%" y="581" width="0.2483%" height="15" fill="rgb(253,12,24)" fg:x="276" fg:w="3"/><text x="23.0977%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0132%" y="565" width="0.0828%" height="15" fill="rgb(248,120,50)" fg:x="278" fg:w="1"/><text x="23.2632%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.0960%" y="549" width="0.0828%" height="15" fill="rgb(245,194,10)" fg:x="279" fg:w="1"/><text x="23.3460%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1788%" y="517" width="0.0828%" height="15" fill="rgb(241,149,38)" fg:x="280" fg:w="1"/><text x="23.4288%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.50%)</title><rect x="22.8477%" y="613" width="0.4967%" height="15" fill="rgb(219,215,7)" fg:x="276" fg:w="6"/><text x="23.0977%" y="623.50"></text></g><g><title>kernel::model::Entity::replace_scope (6 samples, 0.50%)</title><rect x="22.8477%" y="597" width="0.4967%" height="15" fill="rgb(208,120,31)" fg:x="276" fg:w="6"/><text x="23.0977%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.25%)</title><rect x="23.0960%" y="581" width="0.2483%" height="15" fill="rgb(244,30,8)" fg:x="279" fg:w="3"/><text x="23.3460%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="23.0960%" y="565" width="0.2483%" height="15" fill="rgb(238,35,44)" fg:x="279" fg:w="3"/><text x="23.3460%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="23.1788%" y="549" width="0.1656%" height="15" fill="rgb(243,218,37)" fg:x="280" fg:w="2"/><text x="23.4288%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="23.1788%" y="533" width="0.1656%" height="15" fill="rgb(218,169,10)" fg:x="280" fg:w="2"/><text x="23.4288%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="23.2616%" y="517" width="0.0828%" height="15" fill="rgb(221,144,10)" fg:x="281" fg:w="1"/><text x="23.5116%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="23.3444%" y="597" width="0.0828%" height="15" fill="rgb(226,41,38)" fg:x="282" fg:w="1"/><text x="23.5944%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="23.3444%" y="581" width="0.0828%" height="15" fill="rgb(228,3,1)" fg:x="282" fg:w="1"/><text x="23.5944%" y="591.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="23.3444%" y="565" width="0.0828%" height="15" fill="rgb(209,129,12)" fg:x="282" fg:w="1"/><text x="23.5944%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.3444%" y="549" width="0.0828%" height="15" fill="rgb(213,136,33)" fg:x="282" fg:w="1"/><text x="23.5944%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="23.3444%" y="533" width="0.0828%" height="15" fill="rgb(209,181,29)" fg:x="282" fg:w="1"/><text x="23.5944%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (22 samples, 1.82%)</title><rect x="21.7715%" y="645" width="1.8212%" height="15" fill="rgb(234,173,18)" fg:x="263" fg:w="22"/><text x="22.0215%" y="655.50">p..</text></g><g><title>plugins_core::tools::set_container (12 samples, 0.99%)</title><rect x="22.5993%" y="629" width="0.9934%" height="15" fill="rgb(227,73,47)" fg:x="273" fg:w="12"/><text x="22.8493%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.25%)</title><rect x="23.3444%" y="613" width="0.2483%" height="15" fill="rgb(234,9,34)" fg:x="282" fg:w="3"/><text x="23.5944%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.17%)</title><rect x="23.4272%" y="597" width="0.1656%" height="15" fill="rgb(235,172,15)" fg:x="283" fg:w="2"/><text x="23.6772%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.17%)</title><rect x="23.4272%" y="581" width="0.1656%" height="15" fill="rgb(245,61,2)" fg:x="283" fg:w="2"/><text x="23.6772%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (2 samples, 0.17%)</title><rect x="23.4272%" y="565" width="0.1656%" height="15" fill="rgb(238,39,47)" fg:x="283" fg:w="2"/><text x="23.6772%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="23.5099%" y="549" width="0.0828%" height="15" fill="rgb(234,37,24)" fg:x="284" fg:w="1"/><text x="23.7599%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="23.5099%" y="533" width="0.0828%" height="15" fill="rgb(248,223,24)" fg:x="284" fg:w="1"/><text x="23.7599%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.5099%" y="517" width="0.0828%" height="15" fill="rgb(223,12,15)" fg:x="284" fg:w="1"/><text x="23.7599%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.5099%" y="501" width="0.0828%" height="15" fill="rgb(249,6,3)" fg:x="284" fg:w="1"/><text x="23.7599%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.5099%" y="485" width="0.0828%" height="15" fill="rgb(237,105,33)" fg:x="284" fg:w="1"/><text x="23.7599%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.5099%" y="469" width="0.0828%" height="15" fill="rgb(252,208,35)" fg:x="284" fg:w="1"/><text x="23.7599%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="23.5099%" y="453" width="0.0828%" height="15" fill="rgb(215,181,35)" fg:x="284" fg:w="1"/><text x="23.7599%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="23.5099%" y="437" width="0.0828%" height="15" fill="rgb(246,212,3)" fg:x="284" fg:w="1"/><text x="23.7599%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="23.5099%" y="421" width="0.0828%" height="15" fill="rgb(247,156,24)" fg:x="284" fg:w="1"/><text x="23.7599%" y="431.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="23.5927%" y="645" width="0.0828%" height="15" fill="rgb(248,9,31)" fg:x="285" fg:w="1"/><text x="23.8427%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="23.5927%" y="629" width="0.0828%" height="15" fill="rgb(234,26,45)" fg:x="285" fg:w="1"/><text x="23.8427%" y="639.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="23.5927%" y="613" width="0.0828%" height="15" fill="rgb(249,11,32)" fg:x="285" fg:w="1"/><text x="23.8427%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.17%)</title><rect x="23.6755%" y="613" width="0.1656%" height="15" fill="rgb(249,162,33)" fg:x="286" fg:w="2"/><text x="23.9255%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="23.6755%" y="597" width="0.1656%" height="15" fill="rgb(232,4,32)" fg:x="286" fg:w="2"/><text x="23.9255%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="23.6755%" y="581" width="0.1656%" height="15" fill="rgb(212,5,45)" fg:x="286" fg:w="2"/><text x="23.9255%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="23.6755%" y="565" width="0.1656%" height="15" fill="rgb(227,95,13)" fg:x="286" fg:w="2"/><text x="23.9255%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.17%)</title><rect x="23.6755%" y="549" width="0.1656%" height="15" fill="rgb(223,205,10)" fg:x="286" fg:w="2"/><text x="23.9255%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="23.6755%" y="533" width="0.1656%" height="15" fill="rgb(222,178,8)" fg:x="286" fg:w="2"/><text x="23.9255%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.17%)</title><rect x="23.6755%" y="517" width="0.1656%" height="15" fill="rgb(216,13,22)" fg:x="286" fg:w="2"/><text x="23.9255%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="23.6755%" y="501" width="0.1656%" height="15" fill="rgb(240,167,12)" fg:x="286" fg:w="2"/><text x="23.9255%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="23.6755%" y="485" width="0.1656%" height="15" fill="rgb(235,68,35)" fg:x="286" fg:w="2"/><text x="23.9255%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="23.6755%" y="469" width="0.1656%" height="15" fill="rgb(253,40,27)" fg:x="286" fg:w="2"/><text x="23.9255%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="23.6755%" y="453" width="0.1656%" height="15" fill="rgb(214,19,28)" fg:x="286" fg:w="2"/><text x="23.9255%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="23.6755%" y="437" width="0.1656%" height="15" fill="rgb(210,167,45)" fg:x="286" fg:w="2"/><text x="23.9255%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="23.6755%" y="421" width="0.1656%" height="15" fill="rgb(232,97,40)" fg:x="286" fg:w="2"/><text x="23.9255%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="23.6755%" y="405" width="0.1656%" height="15" fill="rgb(250,35,23)" fg:x="286" fg:w="2"/><text x="23.9255%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.25%)</title><rect x="23.6755%" y="629" width="0.2483%" height="15" fill="rgb(248,47,53)" fg:x="286" fg:w="3"/><text x="23.9255%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="23.8411%" y="613" width="0.0828%" height="15" fill="rgb(226,58,50)" fg:x="288" fg:w="1"/><text x="24.0911%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="23.9238%" y="613" width="0.0828%" height="15" fill="rgb(217,105,26)" fg:x="289" fg:w="1"/><text x="24.1738%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9238%" y="597" width="0.0828%" height="15" fill="rgb(208,64,1)" fg:x="289" fg:w="1"/><text x="24.1738%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="24.0066%" y="613" width="0.0828%" height="15" fill="rgb(214,80,1)" fg:x="290" fg:w="1"/><text x="24.2566%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0894%" y="565" width="0.0828%" height="15" fill="rgb(206,175,26)" fg:x="291" fg:w="1"/><text x="24.3394%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0894%" y="549" width="0.0828%" height="15" fill="rgb(235,156,37)" fg:x="291" fg:w="1"/><text x="24.3394%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0894%" y="533" width="0.0828%" height="15" fill="rgb(213,100,9)" fg:x="291" fg:w="1"/><text x="24.3394%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="24.2550%" y="533" width="0.2483%" height="15" fill="rgb(241,15,13)" fg:x="293" fg:w="3"/><text x="24.5050%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="24.2550%" y="517" width="0.2483%" height="15" fill="rgb(205,97,43)" fg:x="293" fg:w="3"/><text x="24.5050%" y="527.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="24.2550%" y="501" width="0.2483%" height="15" fill="rgb(216,106,32)" fg:x="293" fg:w="3"/><text x="24.5050%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (7 samples, 0.58%)</title><rect x="24.0894%" y="581" width="0.5795%" height="15" fill="rgb(226,200,8)" fg:x="291" fg:w="7"/><text x="24.3394%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (6 samples, 0.50%)</title><rect x="24.1722%" y="565" width="0.4967%" height="15" fill="rgb(244,54,29)" fg:x="292" fg:w="6"/><text x="24.4222%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.50%)</title><rect x="24.1722%" y="549" width="0.4967%" height="15" fill="rgb(252,169,12)" fg:x="292" fg:w="6"/><text x="24.4222%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="24.5033%" y="533" width="0.1656%" height="15" fill="rgb(231,199,11)" fg:x="296" fg:w="2"/><text x="24.7533%" y="543.50"></text></g><g><title>plugins_core::build::Build::occupying (13 samples, 1.08%)</title><rect x="23.6755%" y="645" width="1.0762%" height="15" fill="rgb(233,191,18)" fg:x="286" fg:w="13"/><text x="23.9255%" y="655.50"></text></g><g><title>plugins_core::tools::set_occupying (10 samples, 0.83%)</title><rect x="23.9238%" y="629" width="0.8278%" height="15" fill="rgb(215,83,47)" fg:x="289" fg:w="10"/><text x="24.1738%" y="639.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.66%)</title><rect x="24.0894%" y="613" width="0.6623%" height="15" fill="rgb(251,67,19)" fg:x="291" fg:w="8"/><text x="24.3394%" y="623.50"></text></g><g><title>kernel::model::Entity::replace_scope (8 samples, 0.66%)</title><rect x="24.0894%" y="597" width="0.6623%" height="15" fill="rgb(240,7,20)" fg:x="291" fg:w="8"/><text x="24.3394%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="24.6689%" y="581" width="0.0828%" height="15" fill="rgb(210,150,26)" fg:x="298" fg:w="1"/><text x="24.9189%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.6689%" y="565" width="0.0828%" height="15" fill="rgb(228,75,42)" fg:x="298" fg:w="1"/><text x="24.9189%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6689%" y="549" width="0.0828%" height="15" fill="rgb(237,134,48)" fg:x="298" fg:w="1"/><text x="24.9189%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6689%" y="533" width="0.0828%" height="15" fill="rgb(205,80,50)" fg:x="298" fg:w="1"/><text x="24.9189%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6689%" y="517" width="0.0828%" height="15" fill="rgb(217,74,48)" fg:x="298" fg:w="1"/><text x="24.9189%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="24.8344%" y="613" width="0.0828%" height="15" fill="rgb(205,82,50)" fg:x="300" fg:w="1"/><text x="25.0844%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="24.8344%" y="597" width="0.0828%" height="15" fill="rgb(228,1,33)" fg:x="300" fg:w="1"/><text x="25.0844%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8344%" y="581" width="0.0828%" height="15" fill="rgb(214,50,23)" fg:x="300" fg:w="1"/><text x="25.0844%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (148 samples, 12.25%)</title><rect x="12.8311%" y="661" width="12.2517%" height="15" fill="rgb(210,62,9)" fg:x="155" fg:w="148"/><text x="13.0811%" y="671.50">plugins_core::buil..</text></g><g><title>plugins_core::build::Build::with_username (4 samples, 0.33%)</title><rect x="24.7517%" y="645" width="0.3311%" height="15" fill="rgb(210,104,37)" fg:x="299" fg:w="4"/><text x="25.0017%" y="655.50"></text></g><g><title>engine::users::model::add_username_to_key (4 samples, 0.33%)</title><rect x="24.7517%" y="629" width="0.3311%" height="15" fill="rgb(232,104,43)" fg:x="299" fg:w="4"/><text x="25.0017%" y="639.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.17%)</title><rect x="24.9172%" y="613" width="0.1656%" height="15" fill="rgb(244,52,6)" fg:x="301" fg:w="2"/><text x="25.1672%" y="623.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="25.0000%" y="597" width="0.0828%" height="15" fill="rgb(211,174,52)" fg:x="302" fg:w="1"/><text x="25.2500%" y="607.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="25.0000%" y="581" width="0.0828%" height="15" fill="rgb(229,48,4)" fg:x="302" fg:w="1"/><text x="25.2500%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.0000%" y="565" width="0.0828%" height="15" fill="rgb(205,155,16)" fg:x="302" fg:w="1"/><text x="25.2500%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0000%" y="549" width="0.0828%" height="15" fill="rgb(211,141,53)" fg:x="302" fg:w="1"/><text x="25.2500%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0000%" y="533" width="0.0828%" height="15" fill="rgb(240,148,11)" fg:x="302" fg:w="1"/><text x="25.2500%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0000%" y="517" width="0.0828%" height="15" fill="rgb(214,45,23)" fg:x="302" fg:w="1"/><text x="25.2500%" y="527.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="25.0828%" y="629" width="0.0828%" height="15" fill="rgb(248,74,26)" fg:x="303" fg:w="1"/><text x="25.3328%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="25.0828%" y="613" width="0.0828%" height="15" fill="rgb(218,121,16)" fg:x="303" fg:w="1"/><text x="25.3328%" y="623.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="25.0828%" y="597" width="0.0828%" height="15" fill="rgb(218,10,47)" fg:x="303" fg:w="1"/><text x="25.3328%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.0828%" y="581" width="0.0828%" height="15" fill="rgb(227,99,14)" fg:x="303" fg:w="1"/><text x="25.3328%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.0828%" y="565" width="0.0828%" height="15" fill="rgb(229,83,46)" fg:x="303" fg:w="1"/><text x="25.3328%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.0828%" y="549" width="0.0828%" height="15" fill="rgb(228,25,1)" fg:x="303" fg:w="1"/><text x="25.3328%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.0828%" y="533" width="0.0828%" height="15" fill="rgb(252,190,15)" fg:x="303" fg:w="1"/><text x="25.3328%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="25.0828%" y="517" width="0.0828%" height="15" fill="rgb(213,103,51)" fg:x="303" fg:w="1"/><text x="25.3328%" y="527.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="25.0828%" y="501" width="0.0828%" height="15" fill="rgb(220,38,44)" fg:x="303" fg:w="1"/><text x="25.3328%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.0828%" y="485" width="0.0828%" height="15" fill="rgb(210,45,26)" fg:x="303" fg:w="1"/><text x="25.3328%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.0828%" y="469" width="0.0828%" height="15" fill="rgb(205,95,48)" fg:x="303" fg:w="1"/><text x="25.3328%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="25.0828%" y="453" width="0.0828%" height="15" fill="rgb(225,179,37)" fg:x="303" fg:w="1"/><text x="25.3328%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="25.0828%" y="437" width="0.0828%" height="15" fill="rgb(230,209,3)" fg:x="303" fg:w="1"/><text x="25.3328%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="25.0828%" y="421" width="0.0828%" height="15" fill="rgb(248,12,46)" fg:x="303" fg:w="1"/><text x="25.3328%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="25.0828%" y="405" width="0.0828%" height="15" fill="rgb(234,18,0)" fg:x="303" fg:w="1"/><text x="25.3328%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.0828%" y="389" width="0.0828%" height="15" fill="rgb(238,197,14)" fg:x="303" fg:w="1"/><text x="25.3328%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.0828%" y="373" width="0.0828%" height="15" fill="rgb(251,162,48)" fg:x="303" fg:w="1"/><text x="25.3328%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="25.0828%" y="357" width="0.0828%" height="15" fill="rgb(237,73,42)" fg:x="303" fg:w="1"/><text x="25.3328%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.08%)</title><rect x="25.0828%" y="341" width="0.0828%" height="15" fill="rgb(211,108,8)" fg:x="303" fg:w="1"/><text x="25.3328%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.17%)</title><rect x="25.0828%" y="661" width="0.1656%" height="15" fill="rgb(213,45,22)" fg:x="303" fg:w="2"/><text x="25.3328%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.17%)</title><rect x="25.0828%" y="645" width="0.1656%" height="15" fill="rgb(252,154,5)" fg:x="303" fg:w="2"/><text x="25.3328%" y="655.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="25.1656%" y="629" width="0.0828%" height="15" fill="rgb(221,79,52)" fg:x="304" fg:w="1"/><text x="25.4156%" y="639.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="25.2483%" y="597" width="0.0828%" height="15" fill="rgb(229,220,36)" fg:x="305" fg:w="1"/><text x="25.4983%" y="607.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="25.2483%" y="581" width="0.0828%" height="15" fill="rgb(211,17,16)" fg:x="305" fg:w="1"/><text x="25.4983%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.2483%" y="565" width="0.0828%" height="15" fill="rgb(222,55,31)" fg:x="305" fg:w="1"/><text x="25.4983%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="25.2483%" y="549" width="0.0828%" height="15" fill="rgb(221,221,31)" fg:x="305" fg:w="1"/><text x="25.4983%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.17%)</title><rect x="25.2483%" y="613" width="0.1656%" height="15" fill="rgb(227,168,26)" fg:x="305" fg:w="2"/><text x="25.4983%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="25.3311%" y="597" width="0.0828%" height="15" fill="rgb(224,139,9)" fg:x="306" fg:w="1"/><text x="25.5811%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.3311%" y="581" width="0.0828%" height="15" fill="rgb(254,172,0)" fg:x="306" fg:w="1"/><text x="25.5811%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.3311%" y="565" width="0.0828%" height="15" fill="rgb(235,203,1)" fg:x="306" fg:w="1"/><text x="25.5811%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.3311%" y="549" width="0.0828%" height="15" fill="rgb(216,205,24)" fg:x="306" fg:w="1"/><text x="25.5811%" y="559.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="25.3311%" y="533" width="0.0828%" height="15" fill="rgb(233,24,6)" fg:x="306" fg:w="1"/><text x="25.5811%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.25%)</title><rect x="25.4139%" y="597" width="0.2483%" height="15" fill="rgb(244,110,9)" fg:x="307" fg:w="3"/><text x="25.6639%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.17%)</title><rect x="25.4967%" y="581" width="0.1656%" height="15" fill="rgb(239,222,42)" fg:x="308" fg:w="2"/><text x="25.7467%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.17%)</title><rect x="25.4967%" y="565" width="0.1656%" height="15" fill="rgb(218,145,13)" fg:x="308" fg:w="2"/><text x="25.7467%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="25.5795%" y="549" width="0.0828%" height="15" fill="rgb(207,69,11)" fg:x="309" fg:w="1"/><text x="25.8295%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.50%)</title><rect x="25.2483%" y="629" width="0.4967%" height="15" fill="rgb(220,223,22)" fg:x="305" fg:w="6"/><text x="25.4983%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="25.4139%" y="613" width="0.3311%" height="15" fill="rgb(245,102,5)" fg:x="307" fg:w="4"/><text x="25.6639%" y="623.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="25.6623%" y="597" width="0.0828%" height="15" fill="rgb(211,148,2)" fg:x="310" fg:w="1"/><text x="25.9123%" y="607.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="25.6623%" y="581" width="0.0828%" height="15" fill="rgb(241,13,44)" fg:x="310" fg:w="1"/><text x="25.9123%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.6623%" y="565" width="0.0828%" height="15" fill="rgb(219,137,21)" fg:x="310" fg:w="1"/><text x="25.9123%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="25.7450%" y="629" width="0.0828%" height="15" fill="rgb(242,206,5)" fg:x="311" fg:w="1"/><text x="25.9950%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="25.7450%" y="613" width="0.0828%" height="15" fill="rgb(217,114,22)" fg:x="311" fg:w="1"/><text x="25.9950%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::modified (2 samples, 0.17%)</title><rect x="25.8278%" y="613" width="0.1656%" height="15" fill="rgb(253,206,42)" fg:x="312" fg:w="2"/><text x="26.0778%" y="623.50"></text></g><g><title>kernel::model::Props::property_named (2 samples, 0.17%)</title><rect x="25.8278%" y="597" width="0.1656%" height="15" fill="rgb(236,102,18)" fg:x="312" fg:w="2"/><text x="26.0778%" y="607.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (254 samples, 21.03%)</title><rect x="5.0497%" y="677" width="21.0265%" height="15" fill="rgb(208,59,49)" fg:x="61" fg:w="254"/><text x="5.2997%" y="687.50">&lt;tests::HoldingKeyInVessel as tes..</text></g><g><title>plugins_core::build::BuildSurroundings::make (10 samples, 0.83%)</title><rect x="25.2483%" y="661" width="0.8278%" height="15" fill="rgb(215,194,28)" fg:x="305" fg:w="10"/><text x="25.4983%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.83%)</title><rect x="25.2483%" y="645" width="0.8278%" height="15" fill="rgb(243,207,11)" fg:x="305" fg:w="10"/><text x="25.4983%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::set_name (3 samples, 0.25%)</title><rect x="25.8278%" y="629" width="0.2483%" height="15" fill="rgb(254,179,35)" fg:x="312" fg:w="3"/><text x="26.0778%" y="639.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="25.9934%" y="613" width="0.0828%" height="15" fill="rgb(235,97,3)" fg:x="314" fg:w="1"/><text x="26.2434%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.9934%" y="597" width="0.0828%" height="15" fill="rgb(215,155,33)" fg:x="314" fg:w="1"/><text x="26.2434%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.9934%" y="581" width="0.0828%" height="15" fill="rgb(223,128,12)" fg:x="314" fg:w="1"/><text x="26.2434%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="25.9934%" y="565" width="0.0828%" height="15" fill="rgb(208,157,18)" fg:x="314" fg:w="1"/><text x="26.2434%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="26.0762%" y="677" width="0.0828%" height="15" fill="rgb(249,70,54)" fg:x="315" fg:w="1"/><text x="26.3262%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="26.0762%" y="661" width="0.0828%" height="15" fill="rgb(244,118,24)" fg:x="315" fg:w="1"/><text x="26.3262%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.1589%" y="661" width="0.0828%" height="15" fill="rgb(211,54,0)" fg:x="316" fg:w="1"/><text x="26.4089%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.1589%" y="645" width="0.0828%" height="15" fill="rgb(245,137,45)" fg:x="316" fg:w="1"/><text x="26.4089%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.1589%" y="629" width="0.0828%" height="15" fill="rgb(232,154,31)" fg:x="316" fg:w="1"/><text x="26.4089%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.1589%" y="613" width="0.0828%" height="15" fill="rgb(253,6,39)" fg:x="316" fg:w="1"/><text x="26.4089%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="26.1589%" y="597" width="0.0828%" height="15" fill="rgb(234,183,24)" fg:x="316" fg:w="1"/><text x="26.4089%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="26.1589%" y="581" width="0.0828%" height="15" fill="rgb(252,84,40)" fg:x="316" fg:w="1"/><text x="26.4089%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="26.1589%" y="565" width="0.0828%" height="15" fill="rgb(224,65,2)" fg:x="316" fg:w="1"/><text x="26.4089%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.1589%" y="549" width="0.0828%" height="15" fill="rgb(229,38,24)" fg:x="316" fg:w="1"/><text x="26.4089%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.1589%" y="533" width="0.0828%" height="15" fill="rgb(218,131,50)" fg:x="316" fg:w="1"/><text x="26.4089%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4073%" y="629" width="0.0828%" height="15" fill="rgb(233,106,18)" fg:x="319" fg:w="1"/><text x="26.6573%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4073%" y="613" width="0.0828%" height="15" fill="rgb(220,216,11)" fg:x="319" fg:w="1"/><text x="26.6573%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.4073%" y="597" width="0.0828%" height="15" fill="rgb(251,100,45)" fg:x="319" fg:w="1"/><text x="26.6573%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.4073%" y="581" width="0.0828%" height="15" fill="rgb(235,143,32)" fg:x="319" fg:w="1"/><text x="26.6573%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.4073%" y="565" width="0.0828%" height="15" fill="rgb(248,124,34)" fg:x="319" fg:w="1"/><text x="26.6573%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.4073%" y="549" width="0.0828%" height="15" fill="rgb(225,221,4)" fg:x="319" fg:w="1"/><text x="26.6573%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.4073%" y="533" width="0.0828%" height="15" fill="rgb(242,27,43)" fg:x="319" fg:w="1"/><text x="26.6573%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.4073%" y="517" width="0.0828%" height="15" fill="rgb(227,54,8)" fg:x="319" fg:w="1"/><text x="26.6573%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.4073%" y="501" width="0.0828%" height="15" fill="rgb(253,139,49)" fg:x="319" fg:w="1"/><text x="26.6573%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.4073%" y="485" width="0.0828%" height="15" fill="rgb(231,26,43)" fg:x="319" fg:w="1"/><text x="26.6573%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.4073%" y="469" width="0.0828%" height="15" fill="rgb(207,121,39)" fg:x="319" fg:w="1"/><text x="26.6573%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4073%" y="453" width="0.0828%" height="15" fill="rgb(223,101,35)" fg:x="319" fg:w="1"/><text x="26.6573%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.17%)</title><rect x="26.4073%" y="645" width="0.1656%" height="15" fill="rgb(232,87,23)" fg:x="319" fg:w="2"/><text x="26.6573%" y="655.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="26.4901%" y="629" width="0.0828%" height="15" fill="rgb(225,180,29)" fg:x="320" fg:w="1"/><text x="26.7401%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::rollback (1 samples, 0.08%)</title><rect x="26.5728%" y="645" width="0.0828%" height="15" fill="rgb(225,25,17)" fg:x="321" fg:w="1"/><text x="26.8228%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.6556%" y="645" width="0.0828%" height="15" fill="rgb(223,8,52)" fg:x="322" fg:w="1"/><text x="26.9056%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="26.7384%" y="645" width="0.0828%" height="15" fill="rgb(246,42,21)" fg:x="323" fg:w="1"/><text x="26.9884%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="26.7384%" y="629" width="0.0828%" height="15" fill="rgb(205,64,43)" fg:x="323" fg:w="1"/><text x="26.9884%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="26.7384%" y="613" width="0.0828%" height="15" fill="rgb(221,160,13)" fg:x="323" fg:w="1"/><text x="26.9884%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="26.9868%" y="597" width="0.2483%" height="15" fill="rgb(239,58,35)" fg:x="326" fg:w="3"/><text x="27.2368%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.1523%" y="581" width="0.0828%" height="15" fill="rgb(251,26,40)" fg:x="328" fg:w="1"/><text x="27.4023%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="27.2351%" y="597" width="0.1656%" height="15" fill="rgb(247,0,4)" fg:x="329" fg:w="2"/><text x="27.4851%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.17%)</title><rect x="27.2351%" y="581" width="0.1656%" height="15" fill="rgb(218,130,10)" fg:x="329" fg:w="2"/><text x="27.4851%" y="591.50"></text></g><g><title>engine::identifiers::model::get_gid (9 samples, 0.75%)</title><rect x="26.8212%" y="645" width="0.7450%" height="15" fill="rgb(239,32,7)" fg:x="324" fg:w="9"/><text x="27.0712%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.66%)</title><rect x="26.9040%" y="629" width="0.6623%" height="15" fill="rgb(210,192,24)" fg:x="325" fg:w="8"/><text x="27.1540%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.66%)</title><rect x="26.9040%" y="613" width="0.6623%" height="15" fill="rgb(226,212,17)" fg:x="325" fg:w="8"/><text x="27.1540%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="27.4007%" y="597" width="0.1656%" height="15" fill="rgb(219,201,28)" fg:x="331" fg:w="2"/><text x="27.6507%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="27.4007%" y="581" width="0.1656%" height="15" fill="rgb(235,207,41)" fg:x="331" fg:w="2"/><text x="27.6507%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.4834%" y="565" width="0.0828%" height="15" fill="rgb(241,95,54)" fg:x="332" fg:w="1"/><text x="27.7334%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="27.6490%" y="613" width="0.0828%" height="15" fill="rgb(248,12,23)" fg:x="334" fg:w="1"/><text x="27.8990%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.6490%" y="597" width="0.0828%" height="15" fill="rgb(228,173,4)" fg:x="334" fg:w="1"/><text x="27.8990%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.6490%" y="581" width="0.0828%" height="15" fill="rgb(254,99,5)" fg:x="334" fg:w="1"/><text x="27.8990%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.6490%" y="565" width="0.0828%" height="15" fill="rgb(212,184,17)" fg:x="334" fg:w="1"/><text x="27.8990%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.6490%" y="549" width="0.0828%" height="15" fill="rgb(252,174,1)" fg:x="334" fg:w="1"/><text x="27.8990%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.6490%" y="533" width="0.0828%" height="15" fill="rgb(241,118,51)" fg:x="334" fg:w="1"/><text x="27.8990%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.6490%" y="517" width="0.0828%" height="15" fill="rgb(227,94,47)" fg:x="334" fg:w="1"/><text x="27.8990%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.8146%" y="597" width="0.0828%" height="15" fill="rgb(229,104,2)" fg:x="336" fg:w="1"/><text x="28.0646%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="27.8974%" y="581" width="0.4139%" height="15" fill="rgb(219,28,31)" fg:x="337" fg:w="5"/><text x="28.1474%" y="591.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="27.8974%" y="565" width="0.4139%" height="15" fill="rgb(233,109,36)" fg:x="337" fg:w="5"/><text x="28.1474%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="27.9801%" y="549" width="0.3311%" height="15" fill="rgb(246,88,11)" fg:x="338" fg:w="4"/><text x="28.2301%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.33%)</title><rect x="27.9801%" y="533" width="0.3311%" height="15" fill="rgb(209,212,17)" fg:x="338" fg:w="4"/><text x="28.2301%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.25%)</title><rect x="28.0629%" y="517" width="0.2483%" height="15" fill="rgb(243,59,29)" fg:x="339" fg:w="3"/><text x="28.3129%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.25%)</title><rect x="28.0629%" y="501" width="0.2483%" height="15" fill="rgb(244,205,48)" fg:x="339" fg:w="3"/><text x="28.3129%" y="511.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="28.1457%" y="485" width="0.1656%" height="15" fill="rgb(227,30,6)" fg:x="340" fg:w="2"/><text x="28.3957%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.58%)</title><rect x="27.8974%" y="597" width="0.5795%" height="15" fill="rgb(220,205,48)" fg:x="337" fg:w="7"/><text x="28.1474%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="28.3113%" y="581" width="0.1656%" height="15" fill="rgb(250,94,14)" fg:x="342" fg:w="2"/><text x="28.5613%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.3940%" y="565" width="0.0828%" height="15" fill="rgb(216,119,42)" fg:x="343" fg:w="1"/><text x="28.6440%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="28.5596%" y="581" width="0.0828%" height="15" fill="rgb(232,155,0)" fg:x="345" fg:w="1"/><text x="28.8096%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.5596%" y="565" width="0.0828%" height="15" fill="rgb(212,24,32)" fg:x="345" fg:w="1"/><text x="28.8096%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.5596%" y="549" width="0.0828%" height="15" fill="rgb(216,69,20)" fg:x="345" fg:w="1"/><text x="28.8096%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="28.6424%" y="581" width="0.2483%" height="15" fill="rgb(229,73,31)" fg:x="346" fg:w="3"/><text x="28.8924%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="28.7252%" y="565" width="0.1656%" height="15" fill="rgb(224,219,20)" fg:x="347" fg:w="2"/><text x="28.9752%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="28.7252%" y="549" width="0.1656%" height="15" fill="rgb(215,146,41)" fg:x="347" fg:w="2"/><text x="28.9752%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="28.7252%" y="533" width="0.1656%" height="15" fill="rgb(244,71,31)" fg:x="347" fg:w="2"/><text x="28.9752%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.8079%" y="517" width="0.0828%" height="15" fill="rgb(224,24,11)" fg:x="348" fg:w="1"/><text x="29.0579%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.8079%" y="501" width="0.0828%" height="15" fill="rgb(229,76,15)" fg:x="348" fg:w="1"/><text x="29.0579%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.8079%" y="485" width="0.0828%" height="15" fill="rgb(209,93,2)" fg:x="348" fg:w="1"/><text x="29.0579%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="29.0563%" y="549" width="0.2483%" height="15" fill="rgb(216,200,50)" fg:x="351" fg:w="3"/><text x="29.3063%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="29.1391%" y="533" width="0.1656%" height="15" fill="rgb(211,67,34)" fg:x="352" fg:w="2"/><text x="29.3891%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="29.1391%" y="517" width="0.1656%" height="15" fill="rgb(225,87,47)" fg:x="352" fg:w="2"/><text x="29.3891%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.2219%" y="501" width="0.0828%" height="15" fill="rgb(217,185,16)" fg:x="353" fg:w="1"/><text x="29.4719%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="29.3046%" y="533" width="0.0828%" height="15" fill="rgb(205,0,0)" fg:x="354" fg:w="1"/><text x="29.5546%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.3046%" y="517" width="0.0828%" height="15" fill="rgb(207,116,45)" fg:x="354" fg:w="1"/><text x="29.5546%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="29.3046%" y="549" width="0.2483%" height="15" fill="rgb(221,156,26)" fg:x="354" fg:w="3"/><text x="29.5546%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="29.3874%" y="533" width="0.1656%" height="15" fill="rgb(213,140,4)" fg:x="355" fg:w="2"/><text x="29.6374%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="29.3874%" y="517" width="0.1656%" height="15" fill="rgb(231,224,15)" fg:x="355" fg:w="2"/><text x="29.6374%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.4702%" y="501" width="0.0828%" height="15" fill="rgb(244,76,20)" fg:x="356" fg:w="1"/><text x="29.7202%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.4702%" y="485" width="0.0828%" height="15" fill="rgb(238,117,7)" fg:x="356" fg:w="1"/><text x="29.7202%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.83%)</title><rect x="28.9735%" y="565" width="0.8278%" height="15" fill="rgb(235,1,10)" fg:x="350" fg:w="10"/><text x="29.2235%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="29.5530%" y="549" width="0.2483%" height="15" fill="rgb(216,165,6)" fg:x="357" fg:w="3"/><text x="29.8030%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.7185%" y="533" width="0.0828%" height="15" fill="rgb(246,91,35)" fg:x="359" fg:w="1"/><text x="29.9685%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.08%)</title><rect x="28.8907%" y="581" width="1.0762%" height="15" fill="rgb(228,96,24)" fg:x="349" fg:w="13"/><text x="29.1407%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="29.8013%" y="565" width="0.1656%" height="15" fill="rgb(254,217,53)" fg:x="360" fg:w="2"/><text x="30.0513%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="29.8013%" y="549" width="0.1656%" height="15" fill="rgb(209,60,0)" fg:x="360" fg:w="2"/><text x="30.0513%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.8841%" y="533" width="0.0828%" height="15" fill="rgb(250,93,26)" fg:x="361" fg:w="1"/><text x="30.1341%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.65%)</title><rect x="27.7318%" y="613" width="2.6490%" height="15" fill="rgb(211,9,40)" fg:x="335" fg:w="32"/><text x="27.9818%" y="623.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.90%)</title><rect x="28.4768%" y="597" width="1.9040%" height="15" fill="rgb(242,57,20)" fg:x="344" fg:w="23"/><text x="28.7268%" y="607.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="29.9669%" y="581" width="0.4139%" height="15" fill="rgb(248,85,48)" fg:x="362" fg:w="5"/><text x="30.2169%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="30.0497%" y="565" width="0.3311%" height="15" fill="rgb(212,117,2)" fg:x="363" fg:w="4"/><text x="30.2997%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.33%)</title><rect x="30.0497%" y="549" width="0.3311%" height="15" fill="rgb(243,19,3)" fg:x="363" fg:w="4"/><text x="30.2997%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="30.2152%" y="533" width="0.1656%" height="15" fill="rgb(232,217,24)" fg:x="365" fg:w="2"/><text x="30.4652%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="30.2152%" y="517" width="0.1656%" height="15" fill="rgb(224,175,40)" fg:x="365" fg:w="2"/><text x="30.4652%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.2980%" y="501" width="0.0828%" height="15" fill="rgb(212,162,32)" fg:x="366" fg:w="1"/><text x="30.5480%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="30.3808%" y="581" width="0.2483%" height="15" fill="rgb(215,9,4)" fg:x="367" fg:w="3"/><text x="30.6308%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.6291%" y="565" width="0.0828%" height="15" fill="rgb(242,42,7)" fg:x="370" fg:w="1"/><text x="30.8791%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.7119%" y="565" width="0.0828%" height="15" fill="rgb(242,184,45)" fg:x="371" fg:w="1"/><text x="30.9619%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.7119%" y="549" width="0.0828%" height="15" fill="rgb(228,111,51)" fg:x="371" fg:w="1"/><text x="30.9619%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.9603%" y="549" width="0.0828%" height="15" fill="rgb(236,147,17)" fg:x="374" fg:w="1"/><text x="31.2103%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9603%" y="533" width="0.0828%" height="15" fill="rgb(210,75,22)" fg:x="374" fg:w="1"/><text x="31.2103%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="31.0430%" y="533" width="0.0828%" height="15" fill="rgb(217,159,45)" fg:x="375" fg:w="1"/><text x="31.2930%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.0430%" y="517" width="0.0828%" height="15" fill="rgb(245,165,53)" fg:x="375" fg:w="1"/><text x="31.2930%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.0430%" y="501" width="0.0828%" height="15" fill="rgb(251,190,50)" fg:x="375" fg:w="1"/><text x="31.2930%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1258%" y="533" width="0.0828%" height="15" fill="rgb(208,203,29)" fg:x="376" fg:w="1"/><text x="31.3758%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.91%)</title><rect x="30.3808%" y="613" width="0.9106%" height="15" fill="rgb(207,209,35)" fg:x="367" fg:w="11"/><text x="30.6308%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.91%)</title><rect x="30.3808%" y="597" width="0.9106%" height="15" fill="rgb(230,144,49)" fg:x="367" fg:w="11"/><text x="30.6308%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="30.6291%" y="581" width="0.6623%" height="15" fill="rgb(229,31,6)" fg:x="370" fg:w="8"/><text x="30.8791%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.50%)</title><rect x="30.7947%" y="565" width="0.4967%" height="15" fill="rgb(251,129,24)" fg:x="372" fg:w="6"/><text x="31.0447%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="31.0430%" y="549" width="0.2483%" height="15" fill="rgb(235,105,15)" fg:x="375" fg:w="3"/><text x="31.2930%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.2086%" y="533" width="0.0828%" height="15" fill="rgb(216,52,43)" fg:x="377" fg:w="1"/><text x="31.4586%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.5397%" y="565" width="0.0828%" height="15" fill="rgb(238,144,41)" fg:x="381" fg:w="1"/><text x="31.7897%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.6225%" y="565" width="0.0828%" height="15" fill="rgb(243,63,9)" fg:x="382" fg:w="1"/><text x="31.8725%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.7881%" y="549" width="0.0828%" height="15" fill="rgb(246,208,1)" fg:x="384" fg:w="1"/><text x="32.0381%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.25%)</title><rect x="31.8709%" y="549" width="0.2483%" height="15" fill="rgb(233,182,18)" fg:x="385" fg:w="3"/><text x="32.1209%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.2020%" y="517" width="0.0828%" height="15" fill="rgb(242,224,8)" fg:x="389" fg:w="1"/><text x="32.4520%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="32.2848%" y="517" width="0.1656%" height="15" fill="rgb(243,54,37)" fg:x="390" fg:w="2"/><text x="32.5348%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="32.2848%" y="501" width="0.1656%" height="15" fill="rgb(233,192,12)" fg:x="390" fg:w="2"/><text x="32.5348%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.4503%" y="485" width="0.0828%" height="15" fill="rgb(251,192,53)" fg:x="392" fg:w="1"/><text x="32.7003%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.24%)</title><rect x="31.3742%" y="597" width="1.2417%" height="15" fill="rgb(246,141,26)" fg:x="379" fg:w="15"/><text x="31.6242%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.16%)</title><rect x="31.4570%" y="581" width="1.1589%" height="15" fill="rgb(239,195,19)" fg:x="380" fg:w="14"/><text x="31.7070%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.91%)</title><rect x="31.7053%" y="565" width="0.9106%" height="15" fill="rgb(241,16,39)" fg:x="383" fg:w="11"/><text x="31.9553%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.50%)</title><rect x="32.1192%" y="549" width="0.4967%" height="15" fill="rgb(223,13,53)" fg:x="388" fg:w="6"/><text x="32.3692%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="32.2020%" y="533" width="0.4139%" height="15" fill="rgb(214,227,0)" fg:x="389" fg:w="5"/><text x="32.4520%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="32.4503%" y="517" width="0.1656%" height="15" fill="rgb(228,103,26)" fg:x="392" fg:w="2"/><text x="32.7003%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="32.4503%" y="501" width="0.1656%" height="15" fill="rgb(254,177,53)" fg:x="392" fg:w="2"/><text x="32.7003%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.5331%" y="485" width="0.0828%" height="15" fill="rgb(208,201,34)" fg:x="393" fg:w="1"/><text x="32.7831%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="32.6159%" y="581" width="0.0828%" height="15" fill="rgb(212,39,5)" fg:x="394" fg:w="1"/><text x="32.8659%" y="591.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="33.1954%" y="565" width="0.2483%" height="15" fill="rgb(246,117,3)" fg:x="401" fg:w="3"/><text x="33.4454%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.91%)</title><rect x="33.4437%" y="565" width="0.9106%" height="15" fill="rgb(244,118,39)" fg:x="404" fg:w="11"/><text x="33.6937%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="34.1060%" y="549" width="0.2483%" height="15" fill="rgb(241,64,10)" fg:x="412" fg:w="3"/><text x="34.3560%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.2715%" y="533" width="0.0828%" height="15" fill="rgb(229,39,44)" fg:x="414" fg:w="1"/><text x="34.5215%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="34.3543%" y="565" width="0.0828%" height="15" fill="rgb(230,226,3)" fg:x="415" fg:w="1"/><text x="34.6043%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.3543%" y="549" width="0.0828%" height="15" fill="rgb(222,13,42)" fg:x="415" fg:w="1"/><text x="34.6043%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.3543%" y="533" width="0.0828%" height="15" fill="rgb(247,180,54)" fg:x="415" fg:w="1"/><text x="34.6043%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.4371%" y="533" width="0.0828%" height="15" fill="rgb(205,96,16)" fg:x="416" fg:w="1"/><text x="34.6871%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.4371%" y="517" width="0.0828%" height="15" fill="rgb(205,100,21)" fg:x="416" fg:w="1"/><text x="34.6871%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4371%" y="501" width="0.0828%" height="15" fill="rgb(248,51,4)" fg:x="416" fg:w="1"/><text x="34.6871%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="34.8510%" y="517" width="0.0828%" height="15" fill="rgb(217,197,30)" fg:x="421" fg:w="1"/><text x="35.1010%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="34.9338%" y="517" width="0.2483%" height="15" fill="rgb(240,179,40)" fg:x="422" fg:w="3"/><text x="35.1838%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="35.0166%" y="501" width="0.1656%" height="15" fill="rgb(212,185,35)" fg:x="423" fg:w="2"/><text x="35.2666%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0993%" y="485" width="0.0828%" height="15" fill="rgb(251,222,31)" fg:x="424" fg:w="1"/><text x="35.3493%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="35.1821%" y="501" width="0.4139%" height="15" fill="rgb(208,140,36)" fg:x="425" fg:w="5"/><text x="35.4321%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="35.2649%" y="485" width="0.3311%" height="15" fill="rgb(220,148,1)" fg:x="426" fg:w="4"/><text x="35.5149%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="35.3477%" y="469" width="0.2483%" height="15" fill="rgb(254,4,28)" fg:x="427" fg:w="3"/><text x="35.5977%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.17%)</title><rect x="35.4305%" y="453" width="0.1656%" height="15" fill="rgb(222,185,44)" fg:x="428" fg:w="2"/><text x="35.6805%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="35.5960%" y="501" width="0.0828%" height="15" fill="rgb(215,74,39)" fg:x="430" fg:w="1"/><text x="35.8460%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.6788%" y="485" width="0.0828%" height="15" fill="rgb(247,86,4)" fg:x="431" fg:w="1"/><text x="35.9288%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (17 samples, 1.41%)</title><rect x="34.4371%" y="565" width="1.4073%" height="15" fill="rgb(231,105,32)" fg:x="416" fg:w="17"/><text x="34.6871%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.41%)</title><rect x="34.4371%" y="549" width="1.4073%" height="15" fill="rgb(222,65,35)" fg:x="416" fg:w="17"/><text x="34.6871%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.32%)</title><rect x="34.5199%" y="533" width="1.3245%" height="15" fill="rgb(218,145,35)" fg:x="417" fg:w="16"/><text x="34.7699%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (8 samples, 0.66%)</title><rect x="35.1821%" y="517" width="0.6623%" height="15" fill="rgb(208,7,15)" fg:x="425" fg:w="8"/><text x="35.4321%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="35.6788%" y="501" width="0.1656%" height="15" fill="rgb(209,83,13)" fg:x="431" fg:w="2"/><text x="35.9288%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="35.7616%" y="485" width="0.0828%" height="15" fill="rgb(218,3,10)" fg:x="432" fg:w="1"/><text x="36.0116%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.7616%" y="469" width="0.0828%" height="15" fill="rgb(211,219,4)" fg:x="432" fg:w="1"/><text x="36.0116%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="35.7616%" y="453" width="0.0828%" height="15" fill="rgb(228,194,12)" fg:x="432" fg:w="1"/><text x="36.0116%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="35.8444%" y="565" width="0.0828%" height="15" fill="rgb(210,175,7)" fg:x="433" fg:w="1"/><text x="36.0944%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="35.8444%" y="549" width="0.0828%" height="15" fill="rgb(243,132,6)" fg:x="433" fg:w="1"/><text x="36.0944%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.0927%" y="549" width="0.0828%" height="15" fill="rgb(207,72,18)" fg:x="436" fg:w="1"/><text x="36.3427%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1755%" y="549" width="0.0828%" height="15" fill="rgb(236,1,18)" fg:x="437" fg:w="1"/><text x="36.4255%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2583%" y="549" width="0.0828%" height="15" fill="rgb(227,0,18)" fg:x="438" fg:w="1"/><text x="36.5083%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2583%" y="533" width="0.0828%" height="15" fill="rgb(247,37,5)" fg:x="438" fg:w="1"/><text x="36.5083%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.2583%" y="517" width="0.0828%" height="15" fill="rgb(237,179,24)" fg:x="438" fg:w="1"/><text x="36.5083%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="36.3411%" y="517" width="0.4139%" height="15" fill="rgb(226,53,20)" fg:x="439" fg:w="5"/><text x="36.5911%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="36.4238%" y="501" width="0.3311%" height="15" fill="rgb(247,75,7)" fg:x="440" fg:w="4"/><text x="36.6738%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="36.5894%" y="485" width="0.1656%" height="15" fill="rgb(233,96,12)" fg:x="442" fg:w="2"/><text x="36.8394%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="36.7550%" y="517" width="0.0828%" height="15" fill="rgb(224,125,0)" fg:x="444" fg:w="1"/><text x="37.0050%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.9205%" y="501" width="0.0828%" height="15" fill="rgb(224,92,25)" fg:x="446" fg:w="1"/><text x="37.1705%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="37.0033%" y="501" width="0.0828%" height="15" fill="rgb(224,42,24)" fg:x="447" fg:w="1"/><text x="37.2533%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2517%" y="453" width="0.0828%" height="15" fill="rgb(234,132,49)" fg:x="450" fg:w="1"/><text x="37.5017%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="37.1689%" y="485" width="0.2483%" height="15" fill="rgb(248,100,35)" fg:x="449" fg:w="3"/><text x="37.4189%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="37.1689%" y="469" width="0.2483%" height="15" fill="rgb(239,94,40)" fg:x="449" fg:w="3"/><text x="37.4189%" y="479.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="37.3344%" y="453" width="0.0828%" height="15" fill="rgb(235,139,28)" fg:x="451" fg:w="1"/><text x="37.5844%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.24%)</title><rect x="36.3411%" y="533" width="1.2417%" height="15" fill="rgb(217,144,7)" fg:x="439" fg:w="15"/><text x="36.5911%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.75%)</title><rect x="36.8377%" y="517" width="0.7450%" height="15" fill="rgb(227,55,4)" fg:x="445" fg:w="9"/><text x="37.0877%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.50%)</title><rect x="37.0861%" y="501" width="0.4967%" height="15" fill="rgb(252,82,54)" fg:x="448" fg:w="6"/><text x="37.3361%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="37.4172%" y="485" width="0.1656%" height="15" fill="rgb(245,172,4)" fg:x="452" fg:w="2"/><text x="37.6672%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5828%" y="517" width="0.0828%" height="15" fill="rgb(207,26,27)" fg:x="454" fg:w="1"/><text x="37.8328%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (62 samples, 5.13%)</title><rect x="32.6159%" y="597" width="5.1325%" height="15" fill="rgb(252,98,18)" fg:x="394" fg:w="62"/><text x="32.8659%" y="607.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (61 samples, 5.05%)</title><rect x="32.6987%" y="581" width="5.0497%" height="15" fill="rgb(244,8,26)" fg:x="395" fg:w="61"/><text x="32.9487%" y="591.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.82%)</title><rect x="35.9272%" y="565" width="1.8212%" height="15" fill="rgb(237,173,45)" fg:x="434" fg:w="22"/><text x="36.1772%" y="575.50">s..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (17 samples, 1.41%)</title><rect x="36.3411%" y="549" width="1.4073%" height="15" fill="rgb(208,213,49)" fg:x="439" fg:w="17"/><text x="36.5911%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.17%)</title><rect x="37.5828%" y="533" width="0.1656%" height="15" fill="rgb(212,122,37)" fg:x="454" fg:w="2"/><text x="37.8328%" y="543.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="37.6656%" y="517" width="0.0828%" height="15" fill="rgb(213,80,17)" fg:x="455" fg:w="1"/><text x="37.9156%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.6656%" y="501" width="0.0828%" height="15" fill="rgb(206,210,43)" fg:x="455" fg:w="1"/><text x="37.9156%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="37.9139%" y="517" width="0.0828%" height="15" fill="rgb(229,214,3)" fg:x="458" fg:w="1"/><text x="38.1639%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="38.4106%" y="453" width="0.0828%" height="15" fill="rgb(235,213,29)" fg:x="464" fg:w="1"/><text x="38.6606%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.4106%" y="437" width="0.0828%" height="15" fill="rgb(248,135,26)" fg:x="464" fg:w="1"/><text x="38.6606%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="38.4106%" y="421" width="0.0828%" height="15" fill="rgb(242,188,12)" fg:x="464" fg:w="1"/><text x="38.6606%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="38.4106%" y="405" width="0.0828%" height="15" fill="rgb(245,38,12)" fg:x="464" fg:w="1"/><text x="38.6606%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="38.6589%" y="421" width="0.0828%" height="15" fill="rgb(218,42,13)" fg:x="467" fg:w="1"/><text x="38.9089%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.7417%" y="405" width="0.0828%" height="15" fill="rgb(238,132,49)" fg:x="468" fg:w="1"/><text x="38.9917%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="38.5762%" y="437" width="0.4139%" height="15" fill="rgb(209,196,19)" fg:x="466" fg:w="5"/><text x="38.8262%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="38.7417%" y="421" width="0.2483%" height="15" fill="rgb(244,131,22)" fg:x="468" fg:w="3"/><text x="38.9917%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="38.8245%" y="405" width="0.1656%" height="15" fill="rgb(223,18,34)" fg:x="469" fg:w="2"/><text x="39.0745%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="38.8245%" y="389" width="0.1656%" height="15" fill="rgb(252,124,54)" fg:x="469" fg:w="2"/><text x="39.0745%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="38.8245%" y="373" width="0.1656%" height="15" fill="rgb(229,106,42)" fg:x="469" fg:w="2"/><text x="39.0745%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="38.9901%" y="437" width="0.1656%" height="15" fill="rgb(221,129,1)" fg:x="471" fg:w="2"/><text x="39.2401%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.0728%" y="421" width="0.0828%" height="15" fill="rgb(229,74,15)" fg:x="472" fg:w="1"/><text x="39.3228%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.3212%" y="405" width="0.0828%" height="15" fill="rgb(210,206,50)" fg:x="475" fg:w="1"/><text x="39.5712%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.99%)</title><rect x="38.4934%" y="453" width="0.9934%" height="15" fill="rgb(251,114,31)" fg:x="465" fg:w="12"/><text x="38.7434%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="39.1556%" y="437" width="0.3311%" height="15" fill="rgb(215,225,28)" fg:x="473" fg:w="4"/><text x="39.4056%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="39.2384%" y="421" width="0.2483%" height="15" fill="rgb(237,109,14)" fg:x="474" fg:w="3"/><text x="39.4884%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="39.4040%" y="405" width="0.0828%" height="15" fill="rgb(230,13,37)" fg:x="476" fg:w="1"/><text x="39.6540%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="39.4868%" y="453" width="0.0828%" height="15" fill="rgb(231,40,28)" fg:x="477" fg:w="1"/><text x="39.7368%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.4868%" y="437" width="0.0828%" height="15" fill="rgb(231,202,18)" fg:x="477" fg:w="1"/><text x="39.7368%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4868%" y="421" width="0.0828%" height="15" fill="rgb(225,33,18)" fg:x="477" fg:w="1"/><text x="39.7368%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.24%)</title><rect x="38.4106%" y="469" width="1.2417%" height="15" fill="rgb(223,64,47)" fg:x="464" fg:w="15"/><text x="38.6606%" y="479.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="39.5695%" y="453" width="0.0828%" height="15" fill="rgb(234,114,13)" fg:x="478" fg:w="1"/><text x="39.8195%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.6523%" y="469" width="0.0828%" height="15" fill="rgb(248,56,40)" fg:x="479" fg:w="1"/><text x="39.9023%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6523%" y="453" width="0.0828%" height="15" fill="rgb(221,194,21)" fg:x="479" fg:w="1"/><text x="39.9023%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.66%)</title><rect x="38.1623%" y="501" width="1.6556%" height="15" fill="rgb(242,108,46)" fg:x="461" fg:w="20"/><text x="38.4123%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.49%)</title><rect x="38.3278%" y="485" width="1.4901%" height="15" fill="rgb(220,106,10)" fg:x="463" fg:w="18"/><text x="38.5778%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.7351%" y="469" width="0.0828%" height="15" fill="rgb(211,88,4)" fg:x="480" fg:w="1"/><text x="39.9851%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.8179%" y="501" width="0.0828%" height="15" fill="rgb(214,95,34)" fg:x="481" fg:w="1"/><text x="40.0679%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="39.8179%" y="485" width="0.0828%" height="15" fill="rgb(250,160,33)" fg:x="481" fg:w="1"/><text x="40.0679%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26 samples, 2.15%)</title><rect x="37.8311%" y="533" width="2.1523%" height="15" fill="rgb(225,29,10)" fg:x="457" fg:w="26"/><text x="38.0811%" y="543.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24 samples, 1.99%)</title><rect x="37.9967%" y="517" width="1.9868%" height="15" fill="rgb(224,28,30)" fg:x="459" fg:w="24"/><text x="38.2467%" y="527.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9007%" y="501" width="0.0828%" height="15" fill="rgb(231,77,4)" fg:x="482" fg:w="1"/><text x="40.1507%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9007%" y="485" width="0.0828%" height="15" fill="rgb(209,63,21)" fg:x="482" fg:w="1"/><text x="40.1507%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="39.9834%" y="533" width="0.1656%" height="15" fill="rgb(226,22,11)" fg:x="483" fg:w="2"/><text x="40.2334%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="40.0662%" y="517" width="0.0828%" height="15" fill="rgb(216,82,30)" fg:x="484" fg:w="1"/><text x="40.3162%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (33 samples, 2.73%)</title><rect x="37.7483%" y="597" width="2.7318%" height="15" fill="rgb(246,227,38)" fg:x="456" fg:w="33"/><text x="37.9983%" y="607.50">se..</text></g><g><title>serde_json::de::from_trait (33 samples, 2.73%)</title><rect x="37.7483%" y="581" width="2.7318%" height="15" fill="rgb(251,203,53)" fg:x="456" fg:w="33"/><text x="37.9983%" y="591.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.65%)</title><rect x="37.8311%" y="565" width="2.6490%" height="15" fill="rgb(254,101,1)" fg:x="457" fg:w="32"/><text x="38.0811%" y="575.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.65%)</title><rect x="37.8311%" y="549" width="2.6490%" height="15" fill="rgb(241,180,5)" fg:x="457" fg:w="32"/><text x="38.0811%" y="559.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="40.1490%" y="533" width="0.3311%" height="15" fill="rgb(218,168,4)" fg:x="485" fg:w="4"/><text x="40.3990%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="40.3146%" y="517" width="0.1656%" height="15" fill="rgb(224,223,32)" fg:x="487" fg:w="2"/><text x="40.5646%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.17%)</title><rect x="40.3146%" y="501" width="0.1656%" height="15" fill="rgb(236,106,22)" fg:x="487" fg:w="2"/><text x="40.5646%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.41%)</title><rect x="40.5629%" y="581" width="0.4139%" height="15" fill="rgb(206,121,5)" fg:x="490" fg:w="5"/><text x="40.8129%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="40.6457%" y="565" width="0.3311%" height="15" fill="rgb(233,87,28)" fg:x="491" fg:w="4"/><text x="40.8957%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.25%)</title><rect x="40.7285%" y="549" width="0.2483%" height="15" fill="rgb(236,137,17)" fg:x="492" fg:w="3"/><text x="40.9785%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.25%)</title><rect x="40.7285%" y="533" width="0.2483%" height="15" fill="rgb(209,183,38)" fg:x="492" fg:w="3"/><text x="40.9785%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="40.8940%" y="517" width="0.0828%" height="15" fill="rgb(206,162,44)" fg:x="494" fg:w="1"/><text x="41.1440%" y="527.50"></text></g><g><title>kernel::compare::any_entity_changes (118 samples, 9.77%)</title><rect x="31.2914%" y="613" width="9.7682%" height="15" fill="rgb(237,70,39)" fg:x="378" fg:w="118"/><text x="31.5414%" y="623.50">kernel::compar..</text></g><g><title>treediff::diff::diff (7 samples, 0.58%)</title><rect x="40.4801%" y="597" width="0.5795%" height="15" fill="rgb(212,176,5)" fg:x="489" fg:w="7"/><text x="40.7301%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="40.9768%" y="581" width="0.0828%" height="15" fill="rgb(232,95,16)" fg:x="495" fg:w="1"/><text x="41.2268%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.9768%" y="565" width="0.0828%" height="15" fill="rgb(219,115,35)" fg:x="495" fg:w="1"/><text x="41.2268%" y="575.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (164 samples, 13.58%)</title><rect x="27.5662%" y="645" width="13.5762%" height="15" fill="rgb(251,67,27)" fg:x="333" fg:w="164"/><text x="27.8162%" y="655.50">engine::internal::Ent..</text></g><g><title>engine::session::Session::check_for_changes (163 samples, 13.49%)</title><rect x="27.6490%" y="629" width="13.4934%" height="15" fill="rgb(222,95,40)" fg:x="334" fg:w="163"/><text x="27.8990%" y="639.50">engine::session::Ses..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="41.0596%" y="613" width="0.0828%" height="15" fill="rgb(250,35,16)" fg:x="496" fg:w="1"/><text x="41.3096%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0596%" y="597" width="0.0828%" height="15" fill="rgb(224,86,44)" fg:x="496" fg:w="1"/><text x="41.3096%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0596%" y="581" width="0.0828%" height="15" fill="rgb(237,53,53)" fg:x="496" fg:w="1"/><text x="41.3096%" y="591.50"></text></g><g><title>engine::session::Session::save_entity_changes (181 samples, 14.98%)</title><rect x="26.2417%" y="661" width="14.9834%" height="15" fill="rgb(208,171,33)" fg:x="317" fg:w="181"/><text x="26.4917%" y="671.50">engine::session::Sessio..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="41.1424%" y="645" width="0.0828%" height="15" fill="rgb(222,64,27)" fg:x="497" fg:w="1"/><text x="41.3924%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="41.1424%" y="629" width="0.0828%" height="15" fill="rgb(221,121,35)" fg:x="497" fg:w="1"/><text x="41.3924%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="41.1424%" y="613" width="0.0828%" height="15" fill="rgb(228,137,42)" fg:x="497" fg:w="1"/><text x="41.3924%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.1424%" y="597" width="0.0828%" height="15" fill="rgb(227,54,21)" fg:x="497" fg:w="1"/><text x="41.3924%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.1424%" y="581" width="0.0828%" height="15" fill="rgb(240,168,33)" fg:x="497" fg:w="1"/><text x="41.3924%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.1424%" y="565" width="0.0828%" height="15" fill="rgb(243,159,6)" fg:x="497" fg:w="1"/><text x="41.3924%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.1424%" y="549" width="0.0828%" height="15" fill="rgb(205,211,41)" fg:x="497" fg:w="1"/><text x="41.3924%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.1424%" y="533" width="0.0828%" height="15" fill="rgb(253,30,1)" fg:x="497" fg:w="1"/><text x="41.3924%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.1424%" y="517" width="0.0828%" height="15" fill="rgb(226,80,18)" fg:x="497" fg:w="1"/><text x="41.3924%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.1424%" y="501" width="0.0828%" height="15" fill="rgb(253,156,46)" fg:x="497" fg:w="1"/><text x="41.3924%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.1424%" y="485" width="0.0828%" height="15" fill="rgb(248,87,27)" fg:x="497" fg:w="1"/><text x="41.3924%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.1424%" y="469" width="0.0828%" height="15" fill="rgb(227,122,2)" fg:x="497" fg:w="1"/><text x="41.3924%" y="479.50"></text></g><g><title>engine::session::Session::close (184 samples, 15.23%)</title><rect x="26.1589%" y="677" width="15.2318%" height="15" fill="rgb(229,94,39)" fg:x="316" fg:w="184"/><text x="26.4089%" y="687.50">engine::session::Sessio..</text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.17%)</title><rect x="41.2252%" y="661" width="0.1656%" height="15" fill="rgb(225,173,31)" fg:x="498" fg:w="2"/><text x="41.4752%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4735%" y="629" width="0.0828%" height="15" fill="rgb(239,176,30)" fg:x="501" fg:w="1"/><text x="41.7235%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (3 samples, 0.25%)</title><rect x="41.4735%" y="645" width="0.2483%" height="15" fill="rgb(212,104,21)" fg:x="501" fg:w="3"/><text x="41.7235%" y="655.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.17%)</title><rect x="41.5563%" y="629" width="0.1656%" height="15" fill="rgb(240,209,40)" fg:x="502" fg:w="2"/><text x="41.8063%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.6391%" y="613" width="0.0828%" height="15" fill="rgb(234,195,5)" fg:x="503" fg:w="1"/><text x="41.8891%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.6391%" y="597" width="0.0828%" height="15" fill="rgb(238,213,1)" fg:x="503" fg:w="1"/><text x="41.8891%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.6391%" y="581" width="0.0828%" height="15" fill="rgb(235,182,54)" fg:x="503" fg:w="1"/><text x="41.8891%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.6391%" y="565" width="0.0828%" height="15" fill="rgb(229,50,46)" fg:x="503" fg:w="1"/><text x="41.8891%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.6391%" y="549" width="0.0828%" height="15" fill="rgb(219,145,13)" fg:x="503" fg:w="1"/><text x="41.8891%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.6391%" y="533" width="0.0828%" height="15" fill="rgb(220,226,10)" fg:x="503" fg:w="1"/><text x="41.8891%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="41.6391%" y="517" width="0.0828%" height="15" fill="rgb(248,47,30)" fg:x="503" fg:w="1"/><text x="41.8891%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.6391%" y="501" width="0.0828%" height="15" fill="rgb(231,209,44)" fg:x="503" fg:w="1"/><text x="41.8891%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.7219%" y="533" width="0.0828%" height="15" fill="rgb(209,80,30)" fg:x="504" fg:w="1"/><text x="41.9719%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.7219%" y="517" width="0.0828%" height="15" fill="rgb(232,9,14)" fg:x="504" fg:w="1"/><text x="41.9719%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.7219%" y="501" width="0.0828%" height="15" fill="rgb(243,91,43)" fg:x="504" fg:w="1"/><text x="41.9719%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.7219%" y="485" width="0.0828%" height="15" fill="rgb(231,90,52)" fg:x="504" fg:w="1"/><text x="41.9719%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.7219%" y="469" width="0.0828%" height="15" fill="rgb(253,192,44)" fg:x="504" fg:w="1"/><text x="41.9719%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.7219%" y="453" width="0.0828%" height="15" fill="rgb(241,66,31)" fg:x="504" fg:w="1"/><text x="41.9719%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.7219%" y="437" width="0.0828%" height="15" fill="rgb(235,81,37)" fg:x="504" fg:w="1"/><text x="41.9719%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.7219%" y="421" width="0.0828%" height="15" fill="rgb(223,221,9)" fg:x="504" fg:w="1"/><text x="41.9719%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.7219%" y="405" width="0.0828%" height="15" fill="rgb(242,180,7)" fg:x="504" fg:w="1"/><text x="41.9719%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.7219%" y="389" width="0.0828%" height="15" fill="rgb(243,78,19)" fg:x="504" fg:w="1"/><text x="41.9719%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.7219%" y="373" width="0.0828%" height="15" fill="rgb(233,23,17)" fg:x="504" fg:w="1"/><text x="41.9719%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.7219%" y="357" width="0.0828%" height="15" fill="rgb(252,122,45)" fg:x="504" fg:w="1"/><text x="41.9719%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="41.7219%" y="341" width="0.0828%" height="15" fill="rgb(247,108,20)" fg:x="504" fg:w="1"/><text x="41.9719%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.7219%" y="325" width="0.0828%" height="15" fill="rgb(235,84,21)" fg:x="504" fg:w="1"/><text x="41.9719%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="41.7219%" y="309" width="0.0828%" height="15" fill="rgb(247,129,10)" fg:x="504" fg:w="1"/><text x="41.9719%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="41.7219%" y="293" width="0.0828%" height="15" fill="rgb(208,173,14)" fg:x="504" fg:w="1"/><text x="41.9719%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="41.7219%" y="277" width="0.0828%" height="15" fill="rgb(236,31,38)" fg:x="504" fg:w="1"/><text x="41.9719%" y="287.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="41.7219%" y="645" width="0.1656%" height="15" fill="rgb(232,65,17)" fg:x="504" fg:w="2"/><text x="41.9719%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="41.7219%" y="629" width="0.1656%" height="15" fill="rgb(224,45,49)" fg:x="504" fg:w="2"/><text x="41.9719%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="41.7219%" y="613" width="0.1656%" height="15" fill="rgb(225,2,53)" fg:x="504" fg:w="2"/><text x="41.9719%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="41.7219%" y="597" width="0.1656%" height="15" fill="rgb(248,210,53)" fg:x="504" fg:w="2"/><text x="41.9719%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="41.7219%" y="581" width="0.1656%" height="15" fill="rgb(211,1,30)" fg:x="504" fg:w="2"/><text x="41.9719%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.17%)</title><rect x="41.7219%" y="565" width="0.1656%" height="15" fill="rgb(224,96,15)" fg:x="504" fg:w="2"/><text x="41.9719%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.17%)</title><rect x="41.7219%" y="549" width="0.1656%" height="15" fill="rgb(252,45,11)" fg:x="504" fg:w="2"/><text x="41.9719%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.8046%" y="533" width="0.0828%" height="15" fill="rgb(220,125,38)" fg:x="505" fg:w="1"/><text x="42.0546%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.8046%" y="517" width="0.0828%" height="15" fill="rgb(243,161,33)" fg:x="505" fg:w="1"/><text x="42.0546%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="41.8046%" y="501" width="0.0828%" height="15" fill="rgb(248,197,34)" fg:x="505" fg:w="1"/><text x="42.0546%" y="511.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="41.8046%" y="485" width="0.0828%" height="15" fill="rgb(228,165,23)" fg:x="505" fg:w="1"/><text x="42.0546%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.8046%" y="469" width="0.0828%" height="15" fill="rgb(236,94,38)" fg:x="505" fg:w="1"/><text x="42.0546%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="41.8874%" y="645" width="0.0828%" height="15" fill="rgb(220,13,23)" fg:x="506" fg:w="1"/><text x="42.1374%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="41.8874%" y="629" width="0.0828%" height="15" fill="rgb(234,26,39)" fg:x="506" fg:w="1"/><text x="42.1374%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8874%" y="613" width="0.0828%" height="15" fill="rgb(205,117,44)" fg:x="506" fg:w="1"/><text x="42.1374%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="41.9702%" y="597" width="0.0828%" height="15" fill="rgb(250,42,2)" fg:x="507" fg:w="1"/><text x="42.2202%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9702%" y="581" width="0.0828%" height="15" fill="rgb(223,83,14)" fg:x="507" fg:w="1"/><text x="42.2202%" y="591.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="42.0530%" y="517" width="0.0828%" height="15" fill="rgb(241,147,50)" fg:x="508" fg:w="1"/><text x="42.3030%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="42.2185%" y="437" width="0.0828%" height="15" fill="rgb(218,90,6)" fg:x="510" fg:w="1"/><text x="42.4685%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="42.2185%" y="469" width="0.1656%" height="15" fill="rgb(210,191,5)" fg:x="510" fg:w="2"/><text x="42.4685%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="42.2185%" y="453" width="0.1656%" height="15" fill="rgb(225,139,19)" fg:x="510" fg:w="2"/><text x="42.4685%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3013%" y="437" width="0.0828%" height="15" fill="rgb(210,1,33)" fg:x="511" fg:w="1"/><text x="42.5513%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="42.3841%" y="469" width="0.0828%" height="15" fill="rgb(213,50,3)" fg:x="512" fg:w="1"/><text x="42.6341%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.3841%" y="453" width="0.0828%" height="15" fill="rgb(234,227,4)" fg:x="512" fg:w="1"/><text x="42.6341%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="42.1358%" y="517" width="0.4139%" height="15" fill="rgb(246,63,5)" fg:x="509" fg:w="5"/><text x="42.3858%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="42.1358%" y="501" width="0.4139%" height="15" fill="rgb(245,136,27)" fg:x="509" fg:w="5"/><text x="42.3858%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="42.1358%" y="485" width="0.4139%" height="15" fill="rgb(247,199,27)" fg:x="509" fg:w="5"/><text x="42.3858%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.4669%" y="469" width="0.0828%" height="15" fill="rgb(252,158,49)" fg:x="513" fg:w="1"/><text x="42.7169%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.4669%" y="453" width="0.0828%" height="15" fill="rgb(254,73,1)" fg:x="513" fg:w="1"/><text x="42.7169%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.4669%" y="437" width="0.0828%" height="15" fill="rgb(248,93,19)" fg:x="513" fg:w="1"/><text x="42.7169%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.4669%" y="421" width="0.0828%" height="15" fill="rgb(206,67,5)" fg:x="513" fg:w="1"/><text x="42.7169%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.4669%" y="405" width="0.0828%" height="15" fill="rgb(209,210,4)" fg:x="513" fg:w="1"/><text x="42.7169%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (8 samples, 0.66%)</title><rect x="42.0530%" y="581" width="0.6623%" height="15" fill="rgb(214,185,36)" fg:x="508" fg:w="8"/><text x="42.3030%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (8 samples, 0.66%)</title><rect x="42.0530%" y="565" width="0.6623%" height="15" fill="rgb(233,191,26)" fg:x="508" fg:w="8"/><text x="42.3030%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.66%)</title><rect x="42.0530%" y="549" width="0.6623%" height="15" fill="rgb(248,94,17)" fg:x="508" fg:w="8"/><text x="42.3030%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.66%)</title><rect x="42.0530%" y="533" width="0.6623%" height="15" fill="rgb(250,64,4)" fg:x="508" fg:w="8"/><text x="42.3030%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="42.5497%" y="517" width="0.1656%" height="15" fill="rgb(218,41,53)" fg:x="514" fg:w="2"/><text x="42.7997%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="42.5497%" y="501" width="0.1656%" height="15" fill="rgb(251,176,28)" fg:x="514" fg:w="2"/><text x="42.7997%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.6325%" y="485" width="0.0828%" height="15" fill="rgb(247,22,9)" fg:x="515" fg:w="1"/><text x="42.8825%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="42.7152%" y="517" width="0.0828%" height="15" fill="rgb(218,201,14)" fg:x="516" fg:w="1"/><text x="42.9652%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="42.7152%" y="533" width="0.1656%" height="15" fill="rgb(218,94,10)" fg:x="516" fg:w="2"/><text x="42.9652%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7980%" y="517" width="0.0828%" height="15" fill="rgb(222,183,52)" fg:x="517" fg:w="1"/><text x="43.0480%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.8808%" y="533" width="0.0828%" height="15" fill="rgb(242,140,25)" fg:x="518" fg:w="1"/><text x="43.1308%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.0464%" y="469" width="0.0828%" height="15" fill="rgb(235,197,38)" fg:x="520" fg:w="1"/><text x="43.2964%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0464%" y="453" width="0.0828%" height="15" fill="rgb(237,136,15)" fg:x="520" fg:w="1"/><text x="43.2964%" y="463.50"></text></g><g><title>engine::internal::Entities::prepare_entity (16 samples, 1.32%)</title><rect x="41.9702%" y="613" width="1.3245%" height="15" fill="rgb(223,44,49)" fg:x="507" fg:w="16"/><text x="42.2202%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity (15 samples, 1.24%)</title><rect x="42.0530%" y="597" width="1.2417%" height="15" fill="rgb(227,71,15)" fg:x="508" fg:w="15"/><text x="42.3030%" y="607.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.58%)</title><rect x="42.7152%" y="581" width="0.5795%" height="15" fill="rgb(225,153,20)" fg:x="516" fg:w="7"/><text x="42.9652%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.58%)</title><rect x="42.7152%" y="565" width="0.5795%" height="15" fill="rgb(210,190,26)" fg:x="516" fg:w="7"/><text x="42.9652%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.58%)</title><rect x="42.7152%" y="549" width="0.5795%" height="15" fill="rgb(223,147,5)" fg:x="516" fg:w="7"/><text x="42.9652%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="42.9636%" y="533" width="0.3311%" height="15" fill="rgb(207,14,23)" fg:x="519" fg:w="4"/><text x="43.2136%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="42.9636%" y="517" width="0.3311%" height="15" fill="rgb(211,195,53)" fg:x="519" fg:w="4"/><text x="43.2136%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="42.9636%" y="501" width="0.3311%" height="15" fill="rgb(237,75,46)" fg:x="519" fg:w="4"/><text x="43.2136%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="42.9636%" y="485" width="0.3311%" height="15" fill="rgb(254,55,14)" fg:x="519" fg:w="4"/><text x="43.2136%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="43.1291%" y="469" width="0.1656%" height="15" fill="rgb(230,185,30)" fg:x="521" fg:w="2"/><text x="43.3791%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="43.1291%" y="453" width="0.1656%" height="15" fill="rgb(220,14,11)" fg:x="521" fg:w="2"/><text x="43.3791%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.2119%" y="437" width="0.0828%" height="15" fill="rgb(215,169,44)" fg:x="522" fg:w="1"/><text x="43.4619%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.2119%" y="421" width="0.0828%" height="15" fill="rgb(253,203,20)" fg:x="522" fg:w="1"/><text x="43.4619%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.2119%" y="405" width="0.0828%" height="15" fill="rgb(229,225,17)" fg:x="522" fg:w="1"/><text x="43.4619%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.2119%" y="389" width="0.0828%" height="15" fill="rgb(236,76,26)" fg:x="522" fg:w="1"/><text x="43.4619%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2119%" y="373" width="0.0828%" height="15" fill="rgb(234,15,30)" fg:x="522" fg:w="1"/><text x="43.4619%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="43.2947%" y="613" width="0.0828%" height="15" fill="rgb(211,113,48)" fg:x="523" fg:w="1"/><text x="43.5447%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.2947%" y="597" width="0.0828%" height="15" fill="rgb(221,31,36)" fg:x="523" fg:w="1"/><text x="43.5447%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.2947%" y="581" width="0.0828%" height="15" fill="rgb(215,118,52)" fg:x="523" fg:w="1"/><text x="43.5447%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.2947%" y="565" width="0.0828%" height="15" fill="rgb(241,151,27)" fg:x="523" fg:w="1"/><text x="43.5447%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.2947%" y="549" width="0.0828%" height="15" fill="rgb(253,51,3)" fg:x="523" fg:w="1"/><text x="43.5447%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.2947%" y="533" width="0.0828%" height="15" fill="rgb(216,201,24)" fg:x="523" fg:w="1"/><text x="43.5447%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.2947%" y="517" width="0.0828%" height="15" fill="rgb(231,107,4)" fg:x="523" fg:w="1"/><text x="43.5447%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.2947%" y="501" width="0.0828%" height="15" fill="rgb(243,97,54)" fg:x="523" fg:w="1"/><text x="43.5447%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.2947%" y="485" width="0.0828%" height="15" fill="rgb(221,32,51)" fg:x="523" fg:w="1"/><text x="43.5447%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.2947%" y="469" width="0.0828%" height="15" fill="rgb(218,171,35)" fg:x="523" fg:w="1"/><text x="43.5447%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.2947%" y="453" width="0.0828%" height="15" fill="rgb(214,20,53)" fg:x="523" fg:w="1"/><text x="43.5447%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.2947%" y="437" width="0.0828%" height="15" fill="rgb(239,9,52)" fg:x="523" fg:w="1"/><text x="43.5447%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2947%" y="421" width="0.0828%" height="15" fill="rgb(215,114,45)" fg:x="523" fg:w="1"/><text x="43.5447%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.3775%" y="485" width="0.0828%" height="15" fill="rgb(208,118,9)" fg:x="524" fg:w="1"/><text x="43.6275%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.3775%" y="469" width="0.0828%" height="15" fill="rgb(235,7,39)" fg:x="524" fg:w="1"/><text x="43.6275%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="43.3775%" y="453" width="0.0828%" height="15" fill="rgb(243,225,15)" fg:x="524" fg:w="1"/><text x="43.6275%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="43.3775%" y="437" width="0.0828%" height="15" fill="rgb(225,216,18)" fg:x="524" fg:w="1"/><text x="43.6275%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="43.3775%" y="421" width="0.0828%" height="15" fill="rgb(233,36,38)" fg:x="524" fg:w="1"/><text x="43.6275%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="43.3775%" y="405" width="0.0828%" height="15" fill="rgb(239,88,23)" fg:x="524" fg:w="1"/><text x="43.6275%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="43.3775%" y="389" width="0.0828%" height="15" fill="rgb(219,181,35)" fg:x="524" fg:w="1"/><text x="43.6275%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="43.3775%" y="373" width="0.0828%" height="15" fill="rgb(215,18,46)" fg:x="524" fg:w="1"/><text x="43.6275%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.3775%" y="357" width="0.0828%" height="15" fill="rgb(241,38,11)" fg:x="524" fg:w="1"/><text x="43.6275%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="43.3775%" y="341" width="0.0828%" height="15" fill="rgb(248,169,45)" fg:x="524" fg:w="1"/><text x="43.6275%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.3775%" y="325" width="0.0828%" height="15" fill="rgb(239,50,49)" fg:x="524" fg:w="1"/><text x="43.6275%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.3775%" y="309" width="0.0828%" height="15" fill="rgb(231,96,31)" fg:x="524" fg:w="1"/><text x="43.6275%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (19 samples, 1.57%)</title><rect x="41.9702%" y="629" width="1.5728%" height="15" fill="rgb(224,193,37)" fg:x="507" fg:w="19"/><text x="42.2202%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.17%)</title><rect x="43.3775%" y="613" width="0.1656%" height="15" fill="rgb(227,153,50)" fg:x="524" fg:w="2"/><text x="43.6275%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="43.3775%" y="597" width="0.1656%" height="15" fill="rgb(249,228,3)" fg:x="524" fg:w="2"/><text x="43.6275%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="43.3775%" y="581" width="0.1656%" height="15" fill="rgb(219,164,43)" fg:x="524" fg:w="2"/><text x="43.6275%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="43.3775%" y="565" width="0.1656%" height="15" fill="rgb(216,45,41)" fg:x="524" fg:w="2"/><text x="43.6275%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="43.3775%" y="549" width="0.1656%" height="15" fill="rgb(210,226,51)" fg:x="524" fg:w="2"/><text x="43.6275%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="43.3775%" y="533" width="0.1656%" height="15" fill="rgb(209,117,49)" fg:x="524" fg:w="2"/><text x="43.6275%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="43.3775%" y="517" width="0.1656%" height="15" fill="rgb(206,196,24)" fg:x="524" fg:w="2"/><text x="43.6275%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="43.3775%" y="501" width="0.1656%" height="15" fill="rgb(253,218,3)" fg:x="524" fg:w="2"/><text x="43.6275%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.4603%" y="485" width="0.0828%" height="15" fill="rgb(252,166,2)" fg:x="525" fg:w="1"/><text x="43.7103%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="43.4603%" y="469" width="0.0828%" height="15" fill="rgb(236,218,26)" fg:x="525" fg:w="1"/><text x="43.7103%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="43.4603%" y="453" width="0.0828%" height="15" fill="rgb(254,84,19)" fg:x="525" fg:w="1"/><text x="43.7103%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.17%)</title><rect x="43.5430%" y="629" width="0.1656%" height="15" fill="rgb(219,137,29)" fg:x="526" fg:w="2"/><text x="43.7930%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="43.5430%" y="613" width="0.1656%" height="15" fill="rgb(227,47,52)" fg:x="526" fg:w="2"/><text x="43.7930%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="43.7914%" y="565" width="0.0828%" height="15" fill="rgb(229,167,24)" fg:x="529" fg:w="1"/><text x="44.0414%" y="575.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="43.7914%" y="549" width="0.0828%" height="15" fill="rgb(233,164,1)" fg:x="529" fg:w="1"/><text x="44.0414%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.7914%" y="533" width="0.0828%" height="15" fill="rgb(218,88,48)" fg:x="529" fg:w="1"/><text x="44.0414%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.7914%" y="517" width="0.0828%" height="15" fill="rgb(226,214,24)" fg:x="529" fg:w="1"/><text x="44.0414%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.7914%" y="501" width="0.0828%" height="15" fill="rgb(233,29,12)" fg:x="529" fg:w="1"/><text x="44.0414%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.7914%" y="485" width="0.0828%" height="15" fill="rgb(219,120,34)" fg:x="529" fg:w="1"/><text x="44.0414%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.7914%" y="469" width="0.0828%" height="15" fill="rgb(226,78,44)" fg:x="529" fg:w="1"/><text x="44.0414%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.7914%" y="453" width="0.0828%" height="15" fill="rgb(240,15,48)" fg:x="529" fg:w="1"/><text x="44.0414%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.7914%" y="437" width="0.0828%" height="15" fill="rgb(253,176,7)" fg:x="529" fg:w="1"/><text x="44.0414%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.7914%" y="421" width="0.0828%" height="15" fill="rgb(206,166,28)" fg:x="529" fg:w="1"/><text x="44.0414%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.7914%" y="405" width="0.0828%" height="15" fill="rgb(241,53,51)" fg:x="529" fg:w="1"/><text x="44.0414%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.7914%" y="389" width="0.0828%" height="15" fill="rgb(249,112,30)" fg:x="529" fg:w="1"/><text x="44.0414%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.7914%" y="373" width="0.0828%" height="15" fill="rgb(217,85,30)" fg:x="529" fg:w="1"/><text x="44.0414%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.7914%" y="357" width="0.0828%" height="15" fill="rgb(233,49,7)" fg:x="529" fg:w="1"/><text x="44.0414%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="43.7914%" y="341" width="0.0828%" height="15" fill="rgb(234,109,9)" fg:x="529" fg:w="1"/><text x="44.0414%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.7914%" y="325" width="0.0828%" height="15" fill="rgb(253,95,22)" fg:x="529" fg:w="1"/><text x="44.0414%" y="335.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.17%)</title><rect x="43.7914%" y="597" width="0.1656%" height="15" fill="rgb(233,176,25)" fg:x="529" fg:w="2"/><text x="44.0414%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.17%)</title><rect x="43.7914%" y="581" width="0.1656%" height="15" fill="rgb(236,33,39)" fg:x="529" fg:w="2"/><text x="44.0414%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="43.8742%" y="565" width="0.0828%" height="15" fill="rgb(223,226,42)" fg:x="530" fg:w="1"/><text x="44.1242%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="43.8742%" y="549" width="0.0828%" height="15" fill="rgb(216,99,33)" fg:x="530" fg:w="1"/><text x="44.1242%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.8742%" y="533" width="0.0828%" height="15" fill="rgb(235,84,23)" fg:x="530" fg:w="1"/><text x="44.1242%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.8742%" y="517" width="0.0828%" height="15" fill="rgb(232,2,27)" fg:x="530" fg:w="1"/><text x="44.1242%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.8742%" y="501" width="0.0828%" height="15" fill="rgb(241,23,22)" fg:x="530" fg:w="1"/><text x="44.1242%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="43.8742%" y="485" width="0.0828%" height="15" fill="rgb(211,73,27)" fg:x="530" fg:w="1"/><text x="44.1242%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="43.8742%" y="469" width="0.0828%" height="15" fill="rgb(235,109,49)" fg:x="530" fg:w="1"/><text x="44.1242%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.8742%" y="453" width="0.0828%" height="15" fill="rgb(230,99,29)" fg:x="530" fg:w="1"/><text x="44.1242%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.8742%" y="437" width="0.0828%" height="15" fill="rgb(245,199,7)" fg:x="530" fg:w="1"/><text x="44.1242%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="43.8742%" y="421" width="0.0828%" height="15" fill="rgb(217,179,10)" fg:x="530" fg:w="1"/><text x="44.1242%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="43.8742%" y="405" width="0.0828%" height="15" fill="rgb(254,99,47)" fg:x="530" fg:w="1"/><text x="44.1242%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.8742%" y="389" width="0.0828%" height="15" fill="rgb(251,121,7)" fg:x="530" fg:w="1"/><text x="44.1242%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.8742%" y="373" width="0.0828%" height="15" fill="rgb(250,177,26)" fg:x="530" fg:w="1"/><text x="44.1242%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="43.8742%" y="357" width="0.0828%" height="15" fill="rgb(232,88,15)" fg:x="530" fg:w="1"/><text x="44.1242%" y="367.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="43.8742%" y="341" width="0.0828%" height="15" fill="rgb(251,54,54)" fg:x="530" fg:w="1"/><text x="44.1242%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.8742%" y="325" width="0.0828%" height="15" fill="rgb(208,177,15)" fg:x="530" fg:w="1"/><text x="44.1242%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="44.0397%" y="565" width="0.1656%" height="15" fill="rgb(205,97,32)" fg:x="532" fg:w="2"/><text x="44.2897%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="44.0397%" y="549" width="0.1656%" height="15" fill="rgb(217,192,13)" fg:x="532" fg:w="2"/><text x="44.2897%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="44.0397%" y="533" width="0.1656%" height="15" fill="rgb(215,163,41)" fg:x="532" fg:w="2"/><text x="44.2897%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="44.0397%" y="517" width="0.1656%" height="15" fill="rgb(246,83,29)" fg:x="532" fg:w="2"/><text x="44.2897%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.17%)</title><rect x="44.0397%" y="501" width="0.1656%" height="15" fill="rgb(219,2,45)" fg:x="532" fg:w="2"/><text x="44.2897%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="44.0397%" y="485" width="0.1656%" height="15" fill="rgb(242,215,33)" fg:x="532" fg:w="2"/><text x="44.2897%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.17%)</title><rect x="44.0397%" y="469" width="0.1656%" height="15" fill="rgb(217,1,6)" fg:x="532" fg:w="2"/><text x="44.2897%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="44.0397%" y="453" width="0.1656%" height="15" fill="rgb(207,85,52)" fg:x="532" fg:w="2"/><text x="44.2897%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="44.0397%" y="437" width="0.1656%" height="15" fill="rgb(231,171,19)" fg:x="532" fg:w="2"/><text x="44.2897%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="44.0397%" y="421" width="0.1656%" height="15" fill="rgb(207,128,4)" fg:x="532" fg:w="2"/><text x="44.2897%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="44.0397%" y="405" width="0.1656%" height="15" fill="rgb(219,208,4)" fg:x="532" fg:w="2"/><text x="44.2897%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="44.0397%" y="389" width="0.1656%" height="15" fill="rgb(235,161,42)" fg:x="532" fg:w="2"/><text x="44.2897%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="44.0397%" y="373" width="0.1656%" height="15" fill="rgb(247,218,18)" fg:x="532" fg:w="2"/><text x="44.2897%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="44.0397%" y="357" width="0.1656%" height="15" fill="rgb(232,114,51)" fg:x="532" fg:w="2"/><text x="44.2897%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="44.2881%" y="533" width="0.0828%" height="15" fill="rgb(222,95,3)" fg:x="535" fg:w="1"/><text x="44.5381%" y="543.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="44.2881%" y="517" width="0.0828%" height="15" fill="rgb(240,65,29)" fg:x="535" fg:w="1"/><text x="44.5381%" y="527.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="44.3709%" y="533" width="0.0828%" height="15" fill="rgb(249,209,20)" fg:x="536" fg:w="1"/><text x="44.6209%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.4536%" y="533" width="0.0828%" height="15" fill="rgb(241,48,37)" fg:x="537" fg:w="1"/><text x="44.7036%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="44.6192%" y="405" width="0.1656%" height="15" fill="rgb(230,140,42)" fg:x="539" fg:w="2"/><text x="44.8692%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="44.6192%" y="389" width="0.1656%" height="15" fill="rgb(230,176,45)" fg:x="539" fg:w="2"/><text x="44.8692%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.17%)</title><rect x="44.6192%" y="373" width="0.1656%" height="15" fill="rgb(245,112,21)" fg:x="539" fg:w="2"/><text x="44.8692%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="44.7020%" y="357" width="0.0828%" height="15" fill="rgb(207,183,35)" fg:x="540" fg:w="1"/><text x="44.9520%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="44.7020%" y="341" width="0.0828%" height="15" fill="rgb(227,44,33)" fg:x="540" fg:w="1"/><text x="44.9520%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.7020%" y="325" width="0.0828%" height="15" fill="rgb(246,120,21)" fg:x="540" fg:w="1"/><text x="44.9520%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.7848%" y="373" width="0.0828%" height="15" fill="rgb(235,57,52)" fg:x="541" fg:w="1"/><text x="45.0348%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="44.6192%" y="453" width="0.3311%" height="15" fill="rgb(238,84,10)" fg:x="539" fg:w="4"/><text x="44.8692%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="44.6192%" y="437" width="0.3311%" height="15" fill="rgb(251,200,32)" fg:x="539" fg:w="4"/><text x="44.8692%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.33%)</title><rect x="44.6192%" y="421" width="0.3311%" height="15" fill="rgb(247,159,13)" fg:x="539" fg:w="4"/><text x="44.8692%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="44.7848%" y="405" width="0.1656%" height="15" fill="rgb(238,64,4)" fg:x="541" fg:w="2"/><text x="45.0348%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="44.7848%" y="389" width="0.1656%" height="15" fill="rgb(221,131,51)" fg:x="541" fg:w="2"/><text x="45.0348%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="44.8675%" y="373" width="0.0828%" height="15" fill="rgb(242,5,29)" fg:x="542" fg:w="1"/><text x="45.1175%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="44.8675%" y="357" width="0.0828%" height="15" fill="rgb(214,130,32)" fg:x="542" fg:w="1"/><text x="45.1175%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8675%" y="341" width="0.0828%" height="15" fill="rgb(244,210,16)" fg:x="542" fg:w="1"/><text x="45.1175%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.8675%" y="325" width="0.0828%" height="15" fill="rgb(234,48,26)" fg:x="542" fg:w="1"/><text x="45.1175%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.50%)</title><rect x="44.5364%" y="517" width="0.4967%" height="15" fill="rgb(231,82,38)" fg:x="538" fg:w="6"/><text x="44.7864%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.50%)</title><rect x="44.5364%" y="501" width="0.4967%" height="15" fill="rgb(254,128,41)" fg:x="538" fg:w="6"/><text x="44.7864%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.50%)</title><rect x="44.5364%" y="485" width="0.4967%" height="15" fill="rgb(212,73,49)" fg:x="538" fg:w="6"/><text x="44.7864%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.50%)</title><rect x="44.5364%" y="469" width="0.4967%" height="15" fill="rgb(205,62,54)" fg:x="538" fg:w="6"/><text x="44.7864%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.9503%" y="453" width="0.0828%" height="15" fill="rgb(228,0,8)" fg:x="543" fg:w="1"/><text x="45.2003%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.9503%" y="437" width="0.0828%" height="15" fill="rgb(251,28,17)" fg:x="543" fg:w="1"/><text x="45.2003%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.9503%" y="421" width="0.0828%" height="15" fill="rgb(238,105,27)" fg:x="543" fg:w="1"/><text x="45.2003%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.0331%" y="469" width="0.0828%" height="15" fill="rgb(237,216,33)" fg:x="544" fg:w="1"/><text x="45.2831%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.1987%" y="405" width="0.0828%" height="15" fill="rgb(229,228,25)" fg:x="546" fg:w="1"/><text x="45.4487%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.1987%" y="389" width="0.0828%" height="15" fill="rgb(233,75,23)" fg:x="546" fg:w="1"/><text x="45.4487%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.1987%" y="373" width="0.0828%" height="15" fill="rgb(231,207,16)" fg:x="546" fg:w="1"/><text x="45.4487%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.3642%" y="389" width="0.0828%" height="15" fill="rgb(231,191,45)" fg:x="548" fg:w="1"/><text x="45.6142%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.3642%" y="373" width="0.0828%" height="15" fill="rgb(224,133,17)" fg:x="548" fg:w="1"/><text x="45.6142%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.3642%" y="357" width="0.0828%" height="15" fill="rgb(209,178,27)" fg:x="548" fg:w="1"/><text x="45.6142%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.3642%" y="341" width="0.0828%" height="15" fill="rgb(218,37,11)" fg:x="548" fg:w="1"/><text x="45.6142%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.3642%" y="325" width="0.0828%" height="15" fill="rgb(251,226,25)" fg:x="548" fg:w="1"/><text x="45.6142%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3642%" y="309" width="0.0828%" height="15" fill="rgb(209,222,27)" fg:x="548" fg:w="1"/><text x="45.6142%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.32%)</title><rect x="44.2053%" y="565" width="1.3245%" height="15" fill="rgb(238,22,21)" fg:x="534" fg:w="16"/><text x="44.4553%" y="575.50"></text></g><g><title>engine::internal::Entities::prepare_entity (16 samples, 1.32%)</title><rect x="44.2053%" y="549" width="1.3245%" height="15" fill="rgb(233,161,25)" fg:x="534" fg:w="16"/><text x="44.4553%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity (12 samples, 0.99%)</title><rect x="44.5364%" y="533" width="0.9934%" height="15" fill="rgb(226,122,53)" fg:x="538" fg:w="12"/><text x="44.7864%" y="543.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.50%)</title><rect x="45.0331%" y="517" width="0.4967%" height="15" fill="rgb(220,123,17)" fg:x="544" fg:w="6"/><text x="45.2831%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.50%)</title><rect x="45.0331%" y="501" width="0.4967%" height="15" fill="rgb(230,224,35)" fg:x="544" fg:w="6"/><text x="45.2831%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.50%)</title><rect x="45.0331%" y="485" width="0.4967%" height="15" fill="rgb(246,83,8)" fg:x="544" fg:w="6"/><text x="45.2831%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="45.1159%" y="469" width="0.4139%" height="15" fill="rgb(230,214,17)" fg:x="545" fg:w="5"/><text x="45.3659%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="45.1159%" y="453" width="0.4139%" height="15" fill="rgb(222,97,18)" fg:x="545" fg:w="5"/><text x="45.3659%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="45.1987%" y="437" width="0.3311%" height="15" fill="rgb(206,79,1)" fg:x="546" fg:w="4"/><text x="45.4487%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="45.1987%" y="421" width="0.3311%" height="15" fill="rgb(214,121,34)" fg:x="546" fg:w="4"/><text x="45.4487%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="45.2815%" y="405" width="0.2483%" height="15" fill="rgb(249,199,46)" fg:x="547" fg:w="3"/><text x="45.5315%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.4470%" y="389" width="0.0828%" height="15" fill="rgb(214,222,46)" fg:x="549" fg:w="1"/><text x="45.6970%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.4470%" y="373" width="0.0828%" height="15" fill="rgb(248,168,30)" fg:x="549" fg:w="1"/><text x="45.6970%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.4470%" y="357" width="0.0828%" height="15" fill="rgb(226,14,28)" fg:x="549" fg:w="1"/><text x="45.6970%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.4470%" y="341" width="0.0828%" height="15" fill="rgb(253,123,1)" fg:x="549" fg:w="1"/><text x="45.6970%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.4470%" y="325" width="0.0828%" height="15" fill="rgb(225,24,42)" fg:x="549" fg:w="1"/><text x="45.6970%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.5298%" y="533" width="0.0828%" height="15" fill="rgb(216,161,37)" fg:x="550" fg:w="1"/><text x="45.7798%" y="543.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (23 samples, 1.90%)</title><rect x="43.7914%" y="613" width="1.9040%" height="15" fill="rgb(251,164,26)" fg:x="529" fg:w="23"/><text x="44.0414%" y="623.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (21 samples, 1.74%)</title><rect x="43.9570%" y="597" width="1.7384%" height="15" fill="rgb(219,177,3)" fg:x="531" fg:w="21"/><text x="44.2070%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (21 samples, 1.74%)</title><rect x="43.9570%" y="581" width="1.7384%" height="15" fill="rgb(222,65,0)" fg:x="531" fg:w="21"/><text x="44.2070%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="45.5298%" y="565" width="0.1656%" height="15" fill="rgb(223,69,54)" fg:x="550" fg:w="2"/><text x="45.7798%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="45.5298%" y="549" width="0.1656%" height="15" fill="rgb(235,30,27)" fg:x="550" fg:w="2"/><text x="45.7798%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="45.6126%" y="533" width="0.0828%" height="15" fill="rgb(220,183,50)" fg:x="551" fg:w="1"/><text x="45.8626%" y="543.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (25 samples, 2.07%)</title><rect x="43.7086%" y="629" width="2.0695%" height="15" fill="rgb(248,198,15)" fg:x="528" fg:w="25"/><text x="43.9586%" y="639.50">e..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="45.6954%" y="613" width="0.0828%" height="15" fill="rgb(222,211,4)" fg:x="552" fg:w="1"/><text x="45.9454%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="45.6954%" y="597" width="0.0828%" height="15" fill="rgb(214,102,34)" fg:x="552" fg:w="1"/><text x="45.9454%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="45.6954%" y="581" width="0.0828%" height="15" fill="rgb(245,92,5)" fg:x="552" fg:w="1"/><text x="45.9454%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="45.6954%" y="565" width="0.0828%" height="15" fill="rgb(252,72,51)" fg:x="552" fg:w="1"/><text x="45.9454%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="45.6954%" y="549" width="0.0828%" height="15" fill="rgb(252,208,19)" fg:x="552" fg:w="1"/><text x="45.9454%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.6954%" y="533" width="0.0828%" height="15" fill="rgb(211,69,7)" fg:x="552" fg:w="1"/><text x="45.9454%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.6954%" y="517" width="0.0828%" height="15" fill="rgb(211,27,16)" fg:x="552" fg:w="1"/><text x="45.9454%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="45.6954%" y="501" width="0.0828%" height="15" fill="rgb(219,216,14)" fg:x="552" fg:w="1"/><text x="45.9454%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="45.6954%" y="485" width="0.0828%" height="15" fill="rgb(219,71,8)" fg:x="552" fg:w="1"/><text x="45.9454%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.6954%" y="469" width="0.0828%" height="15" fill="rgb(223,170,53)" fg:x="552" fg:w="1"/><text x="45.9454%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.6954%" y="453" width="0.0828%" height="15" fill="rgb(246,21,26)" fg:x="552" fg:w="1"/><text x="45.9454%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.6954%" y="437" width="0.0828%" height="15" fill="rgb(248,20,46)" fg:x="552" fg:w="1"/><text x="45.9454%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.6954%" y="421" width="0.0828%" height="15" fill="rgb(252,94,11)" fg:x="552" fg:w="1"/><text x="45.9454%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="45.6954%" y="405" width="0.0828%" height="15" fill="rgb(236,163,8)" fg:x="552" fg:w="1"/><text x="45.9454%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="45.6954%" y="389" width="0.0828%" height="15" fill="rgb(217,221,45)" fg:x="552" fg:w="1"/><text x="45.9454%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="45.6954%" y="373" width="0.0828%" height="15" fill="rgb(238,38,17)" fg:x="552" fg:w="1"/><text x="45.9454%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="45.6954%" y="357" width="0.0828%" height="15" fill="rgb(242,210,23)" fg:x="552" fg:w="1"/><text x="45.9454%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.6954%" y="341" width="0.0828%" height="15" fill="rgb(250,86,53)" fg:x="552" fg:w="1"/><text x="45.9454%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="45.7781%" y="597" width="0.0828%" height="15" fill="rgb(223,168,25)" fg:x="553" fg:w="1"/><text x="46.0281%" y="607.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="45.7781%" y="581" width="0.0828%" height="15" fill="rgb(251,189,4)" fg:x="553" fg:w="1"/><text x="46.0281%" y="591.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.17%)</title><rect x="45.7781%" y="629" width="0.1656%" height="15" fill="rgb(245,19,28)" fg:x="553" fg:w="2"/><text x="46.0281%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.17%)</title><rect x="45.7781%" y="613" width="0.1656%" height="15" fill="rgb(207,10,34)" fg:x="553" fg:w="2"/><text x="46.0281%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="45.8609%" y="597" width="0.0828%" height="15" fill="rgb(235,153,31)" fg:x="554" fg:w="1"/><text x="46.1109%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="45.8609%" y="581" width="0.0828%" height="15" fill="rgb(228,72,37)" fg:x="554" fg:w="1"/><text x="46.1109%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="45.8609%" y="565" width="0.0828%" height="15" fill="rgb(215,15,16)" fg:x="554" fg:w="1"/><text x="46.1109%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.8609%" y="549" width="0.0828%" height="15" fill="rgb(250,119,29)" fg:x="554" fg:w="1"/><text x="46.1109%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.8609%" y="533" width="0.0828%" height="15" fill="rgb(214,59,1)" fg:x="554" fg:w="1"/><text x="46.1109%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="45.8609%" y="517" width="0.0828%" height="15" fill="rgb(223,109,25)" fg:x="554" fg:w="1"/><text x="46.1109%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="45.8609%" y="501" width="0.0828%" height="15" fill="rgb(230,198,22)" fg:x="554" fg:w="1"/><text x="46.1109%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.8609%" y="485" width="0.0828%" height="15" fill="rgb(245,184,46)" fg:x="554" fg:w="1"/><text x="46.1109%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.8609%" y="469" width="0.0828%" height="15" fill="rgb(253,73,16)" fg:x="554" fg:w="1"/><text x="46.1109%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="45.8609%" y="453" width="0.0828%" height="15" fill="rgb(206,94,45)" fg:x="554" fg:w="1"/><text x="46.1109%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="45.8609%" y="437" width="0.0828%" height="15" fill="rgb(236,83,27)" fg:x="554" fg:w="1"/><text x="46.1109%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.8609%" y="421" width="0.0828%" height="15" fill="rgb(220,196,8)" fg:x="554" fg:w="1"/><text x="46.1109%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.8609%" y="405" width="0.0828%" height="15" fill="rgb(254,185,14)" fg:x="554" fg:w="1"/><text x="46.1109%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="45.8609%" y="389" width="0.0828%" height="15" fill="rgb(226,50,22)" fg:x="554" fg:w="1"/><text x="46.1109%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="45.8609%" y="373" width="0.0828%" height="15" fill="rgb(253,147,0)" fg:x="554" fg:w="1"/><text x="46.1109%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.8609%" y="357" width="0.0828%" height="15" fill="rgb(252,46,33)" fg:x="554" fg:w="1"/><text x="46.1109%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.8609%" y="341" width="0.0828%" height="15" fill="rgb(242,22,54)" fg:x="554" fg:w="1"/><text x="46.1109%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="45.8609%" y="325" width="0.0828%" height="15" fill="rgb(223,178,32)" fg:x="554" fg:w="1"/><text x="46.1109%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="45.8609%" y="309" width="0.0828%" height="15" fill="rgb(214,106,53)" fg:x="554" fg:w="1"/><text x="46.1109%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="45.8609%" y="293" width="0.0828%" height="15" fill="rgb(232,65,50)" fg:x="554" fg:w="1"/><text x="46.1109%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="45.8609%" y="277" width="0.0828%" height="15" fill="rgb(231,110,28)" fg:x="554" fg:w="1"/><text x="46.1109%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.8609%" y="261" width="0.0828%" height="15" fill="rgb(216,71,40)" fg:x="554" fg:w="1"/><text x="46.1109%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="45.9437%" y="613" width="0.0828%" height="15" fill="rgb(229,89,53)" fg:x="555" fg:w="1"/><text x="46.1937%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.9437%" y="597" width="0.0828%" height="15" fill="rgb(210,124,14)" fg:x="555" fg:w="1"/><text x="46.1937%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.0265%" y="613" width="0.0828%" height="15" fill="rgb(236,213,6)" fg:x="556" fg:w="1"/><text x="46.2765%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="46.0265%" y="597" width="0.0828%" height="15" fill="rgb(228,41,5)" fg:x="556" fg:w="1"/><text x="46.2765%" y="607.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (52 samples, 4.30%)</title><rect x="41.9702%" y="645" width="4.3046%" height="15" fill="rgb(221,167,25)" fg:x="507" fg:w="52"/><text x="42.2202%" y="655.50">engin..</text></g><g><title>engine::users::model::username_to_key (4 samples, 0.33%)</title><rect x="45.9437%" y="629" width="0.3311%" height="15" fill="rgb(228,144,37)" fg:x="555" fg:w="4"/><text x="46.1937%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.17%)</title><rect x="46.1093%" y="613" width="0.1656%" height="15" fill="rgb(227,189,38)" fg:x="557" fg:w="2"/><text x="46.3593%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.17%)</title><rect x="46.1093%" y="597" width="0.1656%" height="15" fill="rgb(218,8,2)" fg:x="557" fg:w="2"/><text x="46.3593%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.1921%" y="581" width="0.0828%" height="15" fill="rgb(209,61,28)" fg:x="558" fg:w="1"/><text x="46.4421%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.1921%" y="565" width="0.0828%" height="15" fill="rgb(233,140,39)" fg:x="558" fg:w="1"/><text x="46.4421%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::evaluate (2 samples, 0.17%)</title><rect x="46.2748%" y="645" width="0.1656%" height="15" fill="rgb(251,66,48)" fg:x="559" fg:w="2"/><text x="46.5248%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="46.3576%" y="629" width="0.0828%" height="15" fill="rgb(210,44,45)" fg:x="560" fg:w="1"/><text x="46.6076%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.25%)</title><rect x="47.0199%" y="549" width="0.2483%" height="15" fill="rgb(214,136,46)" fg:x="568" fg:w="3"/><text x="47.2699%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="47.1026%" y="533" width="0.1656%" height="15" fill="rgb(207,130,50)" fg:x="569" fg:w="2"/><text x="47.3526%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="47.2682%" y="549" width="0.1656%" height="15" fill="rgb(228,102,49)" fg:x="571" fg:w="2"/><text x="47.5182%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.25%)</title><rect x="47.4338%" y="533" width="0.2483%" height="15" fill="rgb(253,55,1)" fg:x="573" fg:w="3"/><text x="47.6838%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="47.4338%" y="517" width="0.2483%" height="15" fill="rgb(238,222,9)" fg:x="573" fg:w="3"/><text x="47.6838%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.83%)</title><rect x="46.9371%" y="565" width="0.8278%" height="15" fill="rgb(246,99,6)" fg:x="567" fg:w="10"/><text x="47.1871%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (4 samples, 0.33%)</title><rect x="47.4338%" y="549" width="0.3311%" height="15" fill="rgb(219,110,26)" fg:x="573" fg:w="4"/><text x="47.6838%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="47.6821%" y="533" width="0.0828%" height="15" fill="rgb(239,160,33)" fg:x="576" fg:w="1"/><text x="47.9321%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.49%)</title><rect x="46.6887%" y="581" width="1.4901%" height="15" fill="rgb(220,202,23)" fg:x="564" fg:w="18"/><text x="46.9387%" y="591.50"></text></g><g><title>__libc_free (5 samples, 0.41%)</title><rect x="47.7649%" y="565" width="0.4139%" height="15" fill="rgb(208,80,26)" fg:x="577" fg:w="5"/><text x="48.0149%" y="575.50"></text></g><g><title>__libc_free (10 samples, 0.83%)</title><rect x="48.1788%" y="581" width="0.8278%" height="15" fill="rgb(243,85,7)" fg:x="582" fg:w="10"/><text x="48.4288%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynMessage&gt; (32 samples, 2.65%)</title><rect x="46.4404%" y="613" width="2.6490%" height="15" fill="rgb(228,77,47)" fg:x="561" fg:w="32"/><text x="46.6904%" y="623.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 2.65%)</title><rect x="46.4404%" y="597" width="2.6490%" height="15" fill="rgb(212,226,8)" fg:x="561" fg:w="32"/><text x="46.6904%" y="607.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="49.0066%" y="581" width="0.0828%" height="15" fill="rgb(241,120,54)" fg:x="592" fg:w="1"/><text x="49.2566%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.25%)</title><rect x="49.4205%" y="565" width="0.2483%" height="15" fill="rgb(226,80,16)" fg:x="597" fg:w="3"/><text x="49.6705%" y="575.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="49.6689%" y="565" width="0.2483%" height="15" fill="rgb(240,76,13)" fg:x="600" fg:w="3"/><text x="49.9189%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9172%" y="485" width="0.0828%" height="15" fill="rgb(252,74,8)" fg:x="603" fg:w="1"/><text x="50.1672%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.66%)</title><rect x="49.4205%" y="581" width="0.6623%" height="15" fill="rgb(244,155,2)" fg:x="597" fg:w="8"/><text x="49.6705%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.17%)</title><rect x="49.9172%" y="565" width="0.1656%" height="15" fill="rgb(215,81,35)" fg:x="603" fg:w="2"/><text x="50.1672%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.17%)</title><rect x="49.9172%" y="549" width="0.1656%" height="15" fill="rgb(206,55,2)" fg:x="603" fg:w="2"/><text x="50.1672%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="49.9172%" y="533" width="0.1656%" height="15" fill="rgb(231,2,34)" fg:x="603" fg:w="2"/><text x="50.1672%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="49.9172%" y="517" width="0.1656%" height="15" fill="rgb(242,176,48)" fg:x="603" fg:w="2"/><text x="50.1672%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="49.9172%" y="501" width="0.1656%" height="15" fill="rgb(249,31,36)" fg:x="603" fg:w="2"/><text x="50.1672%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="50.0000%" y="485" width="0.0828%" height="15" fill="rgb(205,18,17)" fg:x="604" fg:w="1"/><text x="50.2500%" y="495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.33%)</title><rect x="50.0828%" y="581" width="0.3311%" height="15" fill="rgb(254,130,5)" fg:x="605" fg:w="4"/><text x="50.3328%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.33%)</title><rect x="50.0828%" y="565" width="0.3311%" height="15" fill="rgb(229,42,45)" fg:x="605" fg:w="4"/><text x="50.3328%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="50.2483%" y="549" width="0.1656%" height="15" fill="rgb(245,95,25)" fg:x="607" fg:w="2"/><text x="50.4983%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="50.4139%" y="581" width="0.1656%" height="15" fill="rgb(249,193,38)" fg:x="609" fg:w="2"/><text x="50.6639%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.17%)</title><rect x="50.4139%" y="565" width="0.1656%" height="15" fill="rgb(241,140,43)" fg:x="609" fg:w="2"/><text x="50.6639%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="50.4967%" y="549" width="0.0828%" height="15" fill="rgb(245,78,48)" fg:x="610" fg:w="1"/><text x="50.7467%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="50.4967%" y="533" width="0.0828%" height="15" fill="rgb(214,92,39)" fg:x="610" fg:w="1"/><text x="50.7467%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.4967%" y="517" width="0.0828%" height="15" fill="rgb(211,189,14)" fg:x="610" fg:w="1"/><text x="50.7467%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="50.9934%" y="517" width="0.1656%" height="15" fill="rgb(218,7,24)" fg:x="616" fg:w="2"/><text x="51.2434%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.0762%" y="501" width="0.0828%" height="15" fill="rgb(224,200,49)" fg:x="617" fg:w="1"/><text x="51.3262%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.17%)</title><rect x="51.7384%" y="437" width="0.1656%" height="15" fill="rgb(218,210,14)" fg:x="625" fg:w="2"/><text x="51.9884%" y="447.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.17%)</title><rect x="51.7384%" y="421" width="0.1656%" height="15" fill="rgb(234,142,31)" fg:x="625" fg:w="2"/><text x="51.9884%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.8212%" y="405" width="0.0828%" height="15" fill="rgb(227,165,2)" fg:x="626" fg:w="1"/><text x="52.0712%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.8212%" y="389" width="0.0828%" height="15" fill="rgb(232,44,46)" fg:x="626" fg:w="1"/><text x="52.0712%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.8212%" y="373" width="0.0828%" height="15" fill="rgb(236,149,47)" fg:x="626" fg:w="1"/><text x="52.0712%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.8212%" y="357" width="0.0828%" height="15" fill="rgb(227,45,31)" fg:x="626" fg:w="1"/><text x="52.0712%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.8212%" y="341" width="0.0828%" height="15" fill="rgb(240,176,51)" fg:x="626" fg:w="1"/><text x="52.0712%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.8212%" y="325" width="0.0828%" height="15" fill="rgb(249,146,41)" fg:x="626" fg:w="1"/><text x="52.0712%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.8212%" y="309" width="0.0828%" height="15" fill="rgb(213,208,4)" fg:x="626" fg:w="1"/><text x="52.0712%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.8212%" y="293" width="0.0828%" height="15" fill="rgb(245,84,36)" fg:x="626" fg:w="1"/><text x="52.0712%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.8212%" y="277" width="0.0828%" height="15" fill="rgb(254,84,18)" fg:x="626" fg:w="1"/><text x="52.0712%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.8212%" y="261" width="0.0828%" height="15" fill="rgb(225,38,54)" fg:x="626" fg:w="1"/><text x="52.0712%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.8212%" y="245" width="0.0828%" height="15" fill="rgb(246,50,30)" fg:x="626" fg:w="1"/><text x="52.0712%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.8212%" y="229" width="0.0828%" height="15" fill="rgb(246,148,9)" fg:x="626" fg:w="1"/><text x="52.0712%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.8212%" y="213" width="0.0828%" height="15" fill="rgb(223,75,4)" fg:x="626" fg:w="1"/><text x="52.0712%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.75%)</title><rect x="51.4073%" y="501" width="0.7450%" height="15" fill="rgb(239,148,41)" fg:x="621" fg:w="9"/><text x="51.6573%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.50%)</title><rect x="51.6556%" y="485" width="0.4967%" height="15" fill="rgb(205,195,3)" fg:x="624" fg:w="6"/><text x="51.9056%" y="495.50"></text></g><g><title>kernel::model::EntityRef::into_entry (5 samples, 0.41%)</title><rect x="51.7384%" y="469" width="0.4139%" height="15" fill="rgb(254,161,1)" fg:x="625" fg:w="5"/><text x="51.9884%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.41%)</title><rect x="51.7384%" y="453" width="0.4139%" height="15" fill="rgb(211,229,8)" fg:x="625" fg:w="5"/><text x="51.9884%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.25%)</title><rect x="51.9040%" y="437" width="0.2483%" height="15" fill="rgb(220,97,9)" fg:x="627" fg:w="3"/><text x="52.1540%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.25%)</title><rect x="51.9040%" y="421" width="0.2483%" height="15" fill="rgb(240,218,8)" fg:x="627" fg:w="3"/><text x="52.1540%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.25%)</title><rect x="51.9040%" y="405" width="0.2483%" height="15" fill="rgb(250,44,0)" fg:x="627" fg:w="3"/><text x="52.1540%" y="415.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="51.9040%" y="389" width="0.2483%" height="15" fill="rgb(236,41,53)" fg:x="627" fg:w="3"/><text x="52.1540%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="51.9040%" y="373" width="0.2483%" height="15" fill="rgb(218,227,13)" fg:x="627" fg:w="3"/><text x="52.1540%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="51.9040%" y="357" width="0.2483%" height="15" fill="rgb(217,94,32)" fg:x="627" fg:w="3"/><text x="52.1540%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.25%)</title><rect x="51.9040%" y="341" width="0.2483%" height="15" fill="rgb(213,217,12)" fg:x="627" fg:w="3"/><text x="52.1540%" y="351.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="51.9040%" y="325" width="0.2483%" height="15" fill="rgb(229,13,46)" fg:x="627" fg:w="3"/><text x="52.1540%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="51.9868%" y="309" width="0.1656%" height="15" fill="rgb(243,139,5)" fg:x="628" fg:w="2"/><text x="52.2368%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.17%)</title><rect x="51.9868%" y="293" width="0.1656%" height="15" fill="rgb(249,38,45)" fg:x="628" fg:w="2"/><text x="52.2368%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="51.9868%" y="277" width="0.1656%" height="15" fill="rgb(216,70,11)" fg:x="628" fg:w="2"/><text x="52.2368%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.0695%" y="261" width="0.0828%" height="15" fill="rgb(253,101,25)" fg:x="629" fg:w="1"/><text x="52.3195%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.0695%" y="245" width="0.0828%" height="15" fill="rgb(207,197,30)" fg:x="629" fg:w="1"/><text x="52.3195%" y="255.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="52.0695%" y="229" width="0.0828%" height="15" fill="rgb(238,87,13)" fg:x="629" fg:w="1"/><text x="52.3195%" y="239.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="52.0695%" y="213" width="0.0828%" height="15" fill="rgb(215,155,8)" fg:x="629" fg:w="1"/><text x="52.3195%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.0695%" y="197" width="0.0828%" height="15" fill="rgb(239,166,38)" fg:x="629" fg:w="1"/><text x="52.3195%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.0695%" y="181" width="0.0828%" height="15" fill="rgb(240,194,35)" fg:x="629" fg:w="1"/><text x="52.3195%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="52.0695%" y="165" width="0.0828%" height="15" fill="rgb(219,10,44)" fg:x="629" fg:w="1"/><text x="52.3195%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="52.0695%" y="149" width="0.0828%" height="15" fill="rgb(251,220,35)" fg:x="629" fg:w="1"/><text x="52.3195%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="52.0695%" y="133" width="0.0828%" height="15" fill="rgb(218,117,13)" fg:x="629" fg:w="1"/><text x="52.3195%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="52.0695%" y="117" width="0.0828%" height="15" fill="rgb(221,213,40)" fg:x="629" fg:w="1"/><text x="52.3195%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.0695%" y="101" width="0.0828%" height="15" fill="rgb(251,224,35)" fg:x="629" fg:w="1"/><text x="52.3195%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.0695%" y="85" width="0.0828%" height="15" fill="rgb(241,33,39)" fg:x="629" fg:w="1"/><text x="52.3195%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.0695%" y="69" width="0.0828%" height="15" fill="rgb(222,74,17)" fg:x="629" fg:w="1"/><text x="52.3195%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="52.0695%" y="53" width="0.0828%" height="15" fill="rgb(225,103,0)" fg:x="629" fg:w="1"/><text x="52.3195%" y="63.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="52.0695%" y="37" width="0.0828%" height="15" fill="rgb(240,0,12)" fg:x="629" fg:w="1"/><text x="52.3195%" y="47.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.1523%" y="469" width="0.0828%" height="15" fill="rgb(233,213,37)" fg:x="630" fg:w="1"/><text x="52.4023%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="52.2351%" y="421" width="0.0828%" height="15" fill="rgb(225,84,52)" fg:x="631" fg:w="1"/><text x="52.4851%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2351%" y="405" width="0.0828%" height="15" fill="rgb(247,160,51)" fg:x="631" fg:w="1"/><text x="52.4851%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2351%" y="389" width="0.0828%" height="15" fill="rgb(244,60,51)" fg:x="631" fg:w="1"/><text x="52.4851%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.2351%" y="373" width="0.0828%" height="15" fill="rgb(233,114,7)" fg:x="631" fg:w="1"/><text x="52.4851%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.2351%" y="357" width="0.0828%" height="15" fill="rgb(246,136,16)" fg:x="631" fg:w="1"/><text x="52.4851%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.2351%" y="341" width="0.0828%" height="15" fill="rgb(243,114,45)" fg:x="631" fg:w="1"/><text x="52.4851%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.2351%" y="325" width="0.0828%" height="15" fill="rgb(247,183,43)" fg:x="631" fg:w="1"/><text x="52.4851%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.2351%" y="309" width="0.0828%" height="15" fill="rgb(251,210,42)" fg:x="631" fg:w="1"/><text x="52.4851%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.2351%" y="293" width="0.0828%" height="15" fill="rgb(221,88,35)" fg:x="631" fg:w="1"/><text x="52.4851%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.2351%" y="277" width="0.0828%" height="15" fill="rgb(242,21,20)" fg:x="631" fg:w="1"/><text x="52.4851%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.2351%" y="261" width="0.0828%" height="15" fill="rgb(233,226,36)" fg:x="631" fg:w="1"/><text x="52.4851%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.2351%" y="245" width="0.0828%" height="15" fill="rgb(243,189,34)" fg:x="631" fg:w="1"/><text x="52.4851%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2351%" y="229" width="0.0828%" height="15" fill="rgb(207,145,50)" fg:x="631" fg:w="1"/><text x="52.4851%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (2 samples, 0.17%)</title><rect x="52.3179%" y="405" width="0.1656%" height="15" fill="rgb(242,1,50)" fg:x="632" fg:w="2"/><text x="52.5679%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4007%" y="389" width="0.0828%" height="15" fill="rgb(231,65,32)" fg:x="633" fg:w="1"/><text x="52.6507%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.4834%" y="325" width="0.0828%" height="15" fill="rgb(208,68,49)" fg:x="634" fg:w="1"/><text x="52.7334%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.4834%" y="309" width="0.0828%" height="15" fill="rgb(253,54,49)" fg:x="634" fg:w="1"/><text x="52.7334%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.25%)</title><rect x="52.4834%" y="389" width="0.2483%" height="15" fill="rgb(245,186,24)" fg:x="634" fg:w="3"/><text x="52.7334%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.25%)</title><rect x="52.4834%" y="373" width="0.2483%" height="15" fill="rgb(209,2,41)" fg:x="634" fg:w="3"/><text x="52.7334%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="52.4834%" y="357" width="0.2483%" height="15" fill="rgb(242,208,54)" fg:x="634" fg:w="3"/><text x="52.7334%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="52.4834%" y="341" width="0.2483%" height="15" fill="rgb(225,9,51)" fg:x="634" fg:w="3"/><text x="52.7334%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="52.5662%" y="325" width="0.1656%" height="15" fill="rgb(207,207,25)" fg:x="635" fg:w="2"/><text x="52.8162%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6490%" y="309" width="0.0828%" height="15" fill="rgb(253,96,18)" fg:x="636" fg:w="1"/><text x="52.8990%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.6490%" y="293" width="0.0828%" height="15" fill="rgb(252,215,20)" fg:x="636" fg:w="1"/><text x="52.8990%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6490%" y="277" width="0.0828%" height="15" fill="rgb(245,227,26)" fg:x="636" fg:w="1"/><text x="52.8990%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.7318%" y="341" width="0.0828%" height="15" fill="rgb(241,208,0)" fg:x="637" fg:w="1"/><text x="52.9818%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7318%" y="325" width="0.0828%" height="15" fill="rgb(224,130,10)" fg:x="637" fg:w="1"/><text x="52.9818%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.8146%" y="341" width="0.0828%" height="15" fill="rgb(237,29,0)" fg:x="638" fg:w="1"/><text x="53.0646%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.9801%" y="309" width="0.0828%" height="15" fill="rgb(219,27,41)" fg:x="640" fg:w="1"/><text x="53.2301%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9801%" y="293" width="0.0828%" height="15" fill="rgb(245,101,19)" fg:x="640" fg:w="1"/><text x="53.2301%" y="303.50"></text></g><g><title>core::iter::adapters::try_process (25 samples, 2.07%)</title><rect x="51.1589%" y="517" width="2.0695%" height="15" fill="rgb(243,44,37)" fg:x="618" fg:w="25"/><text x="51.4089%" y="527.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (13 samples, 1.08%)</title><rect x="52.1523%" y="501" width="1.0762%" height="15" fill="rgb(228,213,43)" fg:x="630" fg:w="13"/><text x="52.4023%" y="511.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (13 samples, 1.08%)</title><rect x="52.1523%" y="485" width="1.0762%" height="15" fill="rgb(219,163,21)" fg:x="630" fg:w="13"/><text x="52.4023%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (12 samples, 0.99%)</title><rect x="52.2351%" y="469" width="0.9934%" height="15" fill="rgb(234,86,24)" fg:x="631" fg:w="12"/><text x="52.4851%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (12 samples, 0.99%)</title><rect x="52.2351%" y="453" width="0.9934%" height="15" fill="rgb(225,10,24)" fg:x="631" fg:w="12"/><text x="52.4851%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.99%)</title><rect x="52.2351%" y="437" width="0.9934%" height="15" fill="rgb(218,109,7)" fg:x="631" fg:w="12"/><text x="52.4851%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (11 samples, 0.91%)</title><rect x="52.3179%" y="421" width="0.9106%" height="15" fill="rgb(210,20,26)" fg:x="632" fg:w="11"/><text x="52.5679%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity (9 samples, 0.75%)</title><rect x="52.4834%" y="405" width="0.7450%" height="15" fill="rgb(216,18,1)" fg:x="634" fg:w="9"/><text x="52.7334%" y="415.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.50%)</title><rect x="52.7318%" y="389" width="0.4967%" height="15" fill="rgb(206,163,23)" fg:x="637" fg:w="6"/><text x="52.9818%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.50%)</title><rect x="52.7318%" y="373" width="0.4967%" height="15" fill="rgb(229,150,31)" fg:x="637" fg:w="6"/><text x="52.9818%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.50%)</title><rect x="52.7318%" y="357" width="0.4967%" height="15" fill="rgb(231,10,5)" fg:x="637" fg:w="6"/><text x="52.9818%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="52.8974%" y="341" width="0.3311%" height="15" fill="rgb(250,40,50)" fg:x="639" fg:w="4"/><text x="53.1474%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="52.9801%" y="325" width="0.2483%" height="15" fill="rgb(217,119,7)" fg:x="640" fg:w="3"/><text x="53.2301%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="53.0629%" y="309" width="0.1656%" height="15" fill="rgb(245,214,40)" fg:x="641" fg:w="2"/><text x="53.3129%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="53.0629%" y="293" width="0.1656%" height="15" fill="rgb(216,187,1)" fg:x="641" fg:w="2"/><text x="53.3129%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="53.0629%" y="277" width="0.1656%" height="15" fill="rgb(237,146,21)" fg:x="641" fg:w="2"/><text x="53.3129%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.1457%" y="261" width="0.0828%" height="15" fill="rgb(210,174,47)" fg:x="642" fg:w="1"/><text x="53.3957%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="53.2285%" y="485" width="0.1656%" height="15" fill="rgb(218,111,39)" fg:x="643" fg:w="2"/><text x="53.4785%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="53.2285%" y="469" width="0.1656%" height="15" fill="rgb(224,95,19)" fg:x="643" fg:w="2"/><text x="53.4785%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="53.2285%" y="453" width="0.1656%" height="15" fill="rgb(234,15,38)" fg:x="643" fg:w="2"/><text x="53.4785%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="53.2285%" y="437" width="0.1656%" height="15" fill="rgb(246,56,12)" fg:x="643" fg:w="2"/><text x="53.4785%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="53.2285%" y="421" width="0.1656%" height="15" fill="rgb(247,16,17)" fg:x="643" fg:w="2"/><text x="53.4785%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.17%)</title><rect x="53.2285%" y="405" width="0.1656%" height="15" fill="rgb(215,151,11)" fg:x="643" fg:w="2"/><text x="53.4785%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="53.2285%" y="389" width="0.1656%" height="15" fill="rgb(225,16,24)" fg:x="643" fg:w="2"/><text x="53.4785%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.17%)</title><rect x="53.2285%" y="373" width="0.1656%" height="15" fill="rgb(217,117,5)" fg:x="643" fg:w="2"/><text x="53.4785%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="53.2285%" y="357" width="0.1656%" height="15" fill="rgb(246,187,53)" fg:x="643" fg:w="2"/><text x="53.4785%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="53.2285%" y="341" width="0.1656%" height="15" fill="rgb(241,71,40)" fg:x="643" fg:w="2"/><text x="53.4785%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="53.2285%" y="325" width="0.1656%" height="15" fill="rgb(231,67,39)" fg:x="643" fg:w="2"/><text x="53.4785%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="53.2285%" y="309" width="0.1656%" height="15" fill="rgb(222,120,24)" fg:x="643" fg:w="2"/><text x="53.4785%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="53.2285%" y="293" width="0.1656%" height="15" fill="rgb(248,3,3)" fg:x="643" fg:w="2"/><text x="53.4785%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="53.2285%" y="277" width="0.1656%" height="15" fill="rgb(228,218,5)" fg:x="643" fg:w="2"/><text x="53.4785%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="53.2285%" y="261" width="0.1656%" height="15" fill="rgb(212,202,43)" fg:x="643" fg:w="2"/><text x="53.4785%" y="271.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="53.4768%" y="469" width="0.0828%" height="15" fill="rgb(235,183,2)" fg:x="646" fg:w="1"/><text x="53.7268%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="53.4768%" y="453" width="0.0828%" height="15" fill="rgb(230,165,10)" fg:x="646" fg:w="1"/><text x="53.7268%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="53.4768%" y="437" width="0.0828%" height="15" fill="rgb(219,54,40)" fg:x="646" fg:w="1"/><text x="53.7268%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="53.4768%" y="421" width="0.0828%" height="15" fill="rgb(244,73,9)" fg:x="646" fg:w="1"/><text x="53.7268%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.25%)</title><rect x="53.3940%" y="485" width="0.2483%" height="15" fill="rgb(212,32,45)" fg:x="645" fg:w="3"/><text x="53.6440%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="53.5596%" y="469" width="0.0828%" height="15" fill="rgb(205,58,31)" fg:x="647" fg:w="1"/><text x="53.8096%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.5596%" y="453" width="0.0828%" height="15" fill="rgb(250,120,43)" fg:x="647" fg:w="1"/><text x="53.8096%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.8907%" y="453" width="0.0828%" height="15" fill="rgb(235,13,10)" fg:x="651" fg:w="1"/><text x="54.1407%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.17%)</title><rect x="53.9735%" y="453" width="0.1656%" height="15" fill="rgb(232,219,31)" fg:x="652" fg:w="2"/><text x="54.2235%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="53.9735%" y="437" width="0.1656%" height="15" fill="rgb(218,157,51)" fg:x="652" fg:w="2"/><text x="54.2235%" y="447.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (41 samples, 3.39%)</title><rect x="50.9934%" y="533" width="3.3940%" height="15" fill="rgb(211,91,52)" fg:x="616" fg:w="41"/><text x="51.2434%" y="543.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.16%)</title><rect x="53.2285%" y="517" width="1.1589%" height="15" fill="rgb(240,173,1)" fg:x="643" fg:w="14"/><text x="53.4785%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (14 samples, 1.16%)</title><rect x="53.2285%" y="501" width="1.1589%" height="15" fill="rgb(248,20,47)" fg:x="643" fg:w="14"/><text x="53.4785%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.75%)</title><rect x="53.6424%" y="485" width="0.7450%" height="15" fill="rgb(217,221,40)" fg:x="648" fg:w="9"/><text x="53.8924%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.75%)</title><rect x="53.6424%" y="469" width="0.7450%" height="15" fill="rgb(226,149,51)" fg:x="648" fg:w="9"/><text x="53.8924%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.25%)</title><rect x="54.1391%" y="453" width="0.2483%" height="15" fill="rgb(252,193,7)" fg:x="654" fg:w="3"/><text x="54.3891%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="54.3046%" y="437" width="0.0828%" height="15" fill="rgb(205,123,0)" fg:x="656" fg:w="1"/><text x="54.5546%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="54.3046%" y="421" width="0.0828%" height="15" fill="rgb(233,173,25)" fg:x="656" fg:w="1"/><text x="54.5546%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.3046%" y="405" width="0.0828%" height="15" fill="rgb(216,63,32)" fg:x="656" fg:w="1"/><text x="54.5546%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3046%" y="389" width="0.0828%" height="15" fill="rgb(209,56,45)" fg:x="656" fg:w="1"/><text x="54.5546%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="54.3874%" y="517" width="0.0828%" height="15" fill="rgb(226,111,49)" fg:x="657" fg:w="1"/><text x="54.6374%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="54.4702%" y="517" width="0.0828%" height="15" fill="rgb(244,181,21)" fg:x="658" fg:w="1"/><text x="54.7202%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="54.6358%" y="485" width="0.4139%" height="15" fill="rgb(222,126,15)" fg:x="660" fg:w="5"/><text x="54.8858%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.33%)</title><rect x="54.7185%" y="469" width="0.3311%" height="15" fill="rgb(222,95,17)" fg:x="661" fg:w="4"/><text x="54.9685%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="54.7185%" y="453" width="0.3311%" height="15" fill="rgb(254,46,5)" fg:x="661" fg:w="4"/><text x="54.9685%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="54.8013%" y="437" width="0.2483%" height="15" fill="rgb(236,216,35)" fg:x="662" fg:w="3"/><text x="55.0513%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="54.8013%" y="421" width="0.2483%" height="15" fill="rgb(217,187,26)" fg:x="662" fg:w="3"/><text x="55.0513%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.25%)</title><rect x="54.8013%" y="405" width="0.2483%" height="15" fill="rgb(207,192,25)" fg:x="662" fg:w="3"/><text x="55.0513%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.25%)</title><rect x="54.8013%" y="389" width="0.2483%" height="15" fill="rgb(253,135,27)" fg:x="662" fg:w="3"/><text x="55.0513%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.25%)</title><rect x="54.8013%" y="373" width="0.2483%" height="15" fill="rgb(211,122,29)" fg:x="662" fg:w="3"/><text x="55.0513%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="54.8013%" y="357" width="0.2483%" height="15" fill="rgb(233,162,40)" fg:x="662" fg:w="3"/><text x="55.0513%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="54.8013%" y="341" width="0.2483%" height="15" fill="rgb(222,184,47)" fg:x="662" fg:w="3"/><text x="55.0513%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.25%)</title><rect x="54.8013%" y="325" width="0.2483%" height="15" fill="rgb(249,99,23)" fg:x="662" fg:w="3"/><text x="55.0513%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.25%)</title><rect x="54.8013%" y="309" width="0.2483%" height="15" fill="rgb(214,60,12)" fg:x="662" fg:w="3"/><text x="55.0513%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.25%)</title><rect x="54.8013%" y="293" width="0.2483%" height="15" fill="rgb(250,229,36)" fg:x="662" fg:w="3"/><text x="55.0513%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.25%)</title><rect x="54.8013%" y="277" width="0.2483%" height="15" fill="rgb(232,195,10)" fg:x="662" fg:w="3"/><text x="55.0513%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="54.8013%" y="261" width="0.2483%" height="15" fill="rgb(205,213,31)" fg:x="662" fg:w="3"/><text x="55.0513%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="55.2152%" y="405" width="0.0828%" height="15" fill="rgb(237,43,8)" fg:x="667" fg:w="1"/><text x="55.4652%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (3 samples, 0.25%)</title><rect x="55.3808%" y="389" width="0.2483%" height="15" fill="rgb(216,208,3)" fg:x="669" fg:w="3"/><text x="55.6308%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5464%" y="373" width="0.0828%" height="15" fill="rgb(228,179,44)" fg:x="671" fg:w="1"/><text x="55.7964%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5464%" y="357" width="0.0828%" height="15" fill="rgb(230,192,27)" fg:x="671" fg:w="1"/><text x="55.7964%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.5464%" y="341" width="0.0828%" height="15" fill="rgb(251,30,38)" fg:x="671" fg:w="1"/><text x="55.7964%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.5464%" y="325" width="0.0828%" height="15" fill="rgb(246,55,52)" fg:x="671" fg:w="1"/><text x="55.7964%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.5464%" y="309" width="0.0828%" height="15" fill="rgb(249,79,26)" fg:x="671" fg:w="1"/><text x="55.7964%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="55.5464%" y="293" width="0.0828%" height="15" fill="rgb(220,202,16)" fg:x="671" fg:w="1"/><text x="55.7964%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="55.5464%" y="277" width="0.0828%" height="15" fill="rgb(250,170,23)" fg:x="671" fg:w="1"/><text x="55.7964%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="55.6291%" y="389" width="0.0828%" height="15" fill="rgb(230,7,37)" fg:x="672" fg:w="1"/><text x="55.8791%" y="399.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="55.6291%" y="373" width="0.0828%" height="15" fill="rgb(213,71,1)" fg:x="672" fg:w="1"/><text x="55.8791%" y="383.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="55.6291%" y="357" width="0.0828%" height="15" fill="rgb(227,87,39)" fg:x="672" fg:w="1"/><text x="55.8791%" y="367.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.17%)</title><rect x="55.7119%" y="389" width="0.1656%" height="15" fill="rgb(210,41,29)" fg:x="673" fg:w="2"/><text x="55.9619%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7947%" y="373" width="0.0828%" height="15" fill="rgb(206,191,31)" fg:x="674" fg:w="1"/><text x="56.0447%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7947%" y="357" width="0.0828%" height="15" fill="rgb(247,75,54)" fg:x="674" fg:w="1"/><text x="56.0447%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="55.7947%" y="341" width="0.0828%" height="15" fill="rgb(208,54,50)" fg:x="674" fg:w="1"/><text x="56.0447%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="55.7947%" y="325" width="0.0828%" height="15" fill="rgb(214,90,37)" fg:x="674" fg:w="1"/><text x="56.0447%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="55.7947%" y="309" width="0.0828%" height="15" fill="rgb(220,132,6)" fg:x="674" fg:w="1"/><text x="56.0447%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.1258%" y="309" width="0.0828%" height="15" fill="rgb(213,167,7)" fg:x="678" fg:w="1"/><text x="56.3758%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="56.2086%" y="309" width="0.1656%" height="15" fill="rgb(243,36,27)" fg:x="679" fg:w="2"/><text x="56.4586%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.2914%" y="293" width="0.0828%" height="15" fill="rgb(235,147,12)" fg:x="680" fg:w="1"/><text x="56.5414%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.3742%" y="277" width="0.0828%" height="15" fill="rgb(212,198,44)" fg:x="681" fg:w="1"/><text x="56.6242%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.5397%" y="197" width="0.0828%" height="15" fill="rgb(218,68,50)" fg:x="683" fg:w="1"/><text x="56.7897%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="56.4570%" y="229" width="0.2483%" height="15" fill="rgb(224,79,48)" fg:x="682" fg:w="3"/><text x="56.7070%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="56.4570%" y="213" width="0.2483%" height="15" fill="rgb(213,191,50)" fg:x="682" fg:w="3"/><text x="56.7070%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.6225%" y="197" width="0.0828%" height="15" fill="rgb(254,146,10)" fg:x="684" fg:w="1"/><text x="56.8725%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="56.4570%" y="261" width="0.3311%" height="15" fill="rgb(215,175,11)" fg:x="682" fg:w="4"/><text x="56.7070%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="56.4570%" y="245" width="0.3311%" height="15" fill="rgb(207,49,7)" fg:x="682" fg:w="4"/><text x="56.7070%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="56.7053%" y="229" width="0.0828%" height="15" fill="rgb(234,144,29)" fg:x="685" fg:w="1"/><text x="56.9553%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.7053%" y="213" width="0.0828%" height="15" fill="rgb(213,222,48)" fg:x="685" fg:w="1"/><text x="56.9553%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.7053%" y="197" width="0.0828%" height="15" fill="rgb(222,8,6)" fg:x="685" fg:w="1"/><text x="56.9553%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.7053%" y="181" width="0.0828%" height="15" fill="rgb(221,114,49)" fg:x="685" fg:w="1"/><text x="56.9553%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.7881%" y="229" width="0.0828%" height="15" fill="rgb(250,140,42)" fg:x="686" fg:w="1"/><text x="57.0381%" y="239.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="56.8709%" y="213" width="0.1656%" height="15" fill="rgb(250,150,27)" fg:x="687" fg:w="2"/><text x="57.1209%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.33%)</title><rect x="56.7881%" y="261" width="0.3311%" height="15" fill="rgb(252,159,3)" fg:x="686" fg:w="4"/><text x="57.0381%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.33%)</title><rect x="56.7881%" y="245" width="0.3311%" height="15" fill="rgb(241,182,3)" fg:x="686" fg:w="4"/><text x="57.0381%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.25%)</title><rect x="56.8709%" y="229" width="0.2483%" height="15" fill="rgb(236,3,9)" fg:x="687" fg:w="3"/><text x="57.1209%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="57.0364%" y="213" width="0.0828%" height="15" fill="rgb(223,227,51)" fg:x="689" fg:w="1"/><text x="57.2864%" y="223.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="57.1192%" y="229" width="0.0828%" height="15" fill="rgb(232,133,30)" fg:x="690" fg:w="1"/><text x="57.3692%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="57.1192%" y="213" width="0.0828%" height="15" fill="rgb(209,93,27)" fg:x="690" fg:w="1"/><text x="57.3692%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.1192%" y="197" width="0.0828%" height="15" fill="rgb(208,108,34)" fg:x="690" fg:w="1"/><text x="57.3692%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.91%)</title><rect x="56.3742%" y="309" width="0.9106%" height="15" fill="rgb(215,189,13)" fg:x="681" fg:w="11"/><text x="56.6242%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.91%)</title><rect x="56.3742%" y="293" width="0.9106%" height="15" fill="rgb(206,88,23)" fg:x="681" fg:w="11"/><text x="56.6242%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (10 samples, 0.83%)</title><rect x="56.4570%" y="277" width="0.8278%" height="15" fill="rgb(240,173,0)" fg:x="682" fg:w="10"/><text x="56.7070%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="57.1192%" y="261" width="0.1656%" height="15" fill="rgb(223,106,52)" fg:x="690" fg:w="2"/><text x="57.3692%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="57.1192%" y="245" width="0.1656%" height="15" fill="rgb(206,130,16)" fg:x="690" fg:w="2"/><text x="57.3692%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.2020%" y="229" width="0.0828%" height="15" fill="rgb(220,54,25)" fg:x="691" fg:w="1"/><text x="57.4520%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.2848%" y="277" width="0.0828%" height="15" fill="rgb(210,4,38)" fg:x="692" fg:w="1"/><text x="57.5348%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (25 samples, 2.07%)</title><rect x="55.8775%" y="373" width="2.0695%" height="15" fill="rgb(238,94,39)" fg:x="675" fg:w="25"/><text x="56.1275%" y="383.50">k..</text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (25 samples, 2.07%)</title><rect x="55.8775%" y="357" width="2.0695%" height="15" fill="rgb(234,124,34)" fg:x="675" fg:w="25"/><text x="56.1275%" y="367.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (24 samples, 1.99%)</title><rect x="55.9603%" y="341" width="1.9868%" height="15" fill="rgb(221,91,40)" fg:x="676" fg:w="24"/><text x="56.2103%" y="351.50">s..</text></g><g><title>serde_json::value::de::visit_object (24 samples, 1.99%)</title><rect x="55.9603%" y="325" width="1.9868%" height="15" fill="rgb(246,53,28)" fg:x="676" fg:w="24"/><text x="56.2103%" y="335.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.66%)</title><rect x="57.2848%" y="309" width="0.6623%" height="15" fill="rgb(229,109,7)" fg:x="692" fg:w="8"/><text x="57.5348%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.66%)</title><rect x="57.2848%" y="293" width="0.6623%" height="15" fill="rgb(249,117,8)" fg:x="692" fg:w="8"/><text x="57.5348%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.58%)</title><rect x="57.3675%" y="277" width="0.5795%" height="15" fill="rgb(210,181,1)" fg:x="693" fg:w="7"/><text x="57.6175%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.50%)</title><rect x="57.4503%" y="261" width="0.4967%" height="15" fill="rgb(211,66,1)" fg:x="694" fg:w="6"/><text x="57.7003%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="57.5331%" y="245" width="0.4139%" height="15" fill="rgb(221,90,14)" fg:x="695" fg:w="5"/><text x="57.7831%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="57.5331%" y="229" width="0.4139%" height="15" fill="rgb(219,222,44)" fg:x="695" fg:w="5"/><text x="57.7831%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="57.7815%" y="213" width="0.1656%" height="15" fill="rgb(246,34,33)" fg:x="698" fg:w="2"/><text x="58.0315%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.8642%" y="197" width="0.0828%" height="15" fill="rgb(227,135,41)" fg:x="699" fg:w="1"/><text x="58.1142%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="58.0298%" y="325" width="0.1656%" height="15" fill="rgb(226,15,14)" fg:x="701" fg:w="2"/><text x="58.2798%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="58.1954%" y="325" width="0.1656%" height="15" fill="rgb(236,148,47)" fg:x="703" fg:w="2"/><text x="58.4454%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.4437%" y="293" width="0.0828%" height="15" fill="rgb(233,162,52)" fg:x="706" fg:w="1"/><text x="58.6937%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.4437%" y="277" width="0.0828%" height="15" fill="rgb(244,35,28)" fg:x="706" fg:w="1"/><text x="58.6937%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.5265%" y="293" width="0.0828%" height="15" fill="rgb(205,121,10)" fg:x="707" fg:w="1"/><text x="58.7765%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.5265%" y="277" width="0.0828%" height="15" fill="rgb(250,58,18)" fg:x="707" fg:w="1"/><text x="58.7765%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5265%" y="261" width="0.0828%" height="15" fill="rgb(216,37,13)" fg:x="707" fg:w="1"/><text x="58.7765%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.6093%" y="261" width="0.0828%" height="15" fill="rgb(221,215,42)" fg:x="708" fg:w="1"/><text x="58.8593%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6093%" y="245" width="0.0828%" height="15" fill="rgb(217,214,19)" fg:x="708" fg:w="1"/><text x="58.8593%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.7748%" y="213" width="0.0828%" height="15" fill="rgb(233,139,13)" fg:x="710" fg:w="1"/><text x="59.0248%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="58.7748%" y="229" width="0.1656%" height="15" fill="rgb(247,168,23)" fg:x="710" fg:w="2"/><text x="59.0248%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.8576%" y="213" width="0.0828%" height="15" fill="rgb(207,202,1)" fg:x="711" fg:w="1"/><text x="59.1076%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.9404%" y="229" width="0.0828%" height="15" fill="rgb(220,155,48)" fg:x="712" fg:w="1"/><text x="59.1904%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.0232%" y="197" width="0.0828%" height="15" fill="rgb(250,43,26)" fg:x="713" fg:w="1"/><text x="59.2732%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.0232%" y="181" width="0.0828%" height="15" fill="rgb(212,190,23)" fg:x="713" fg:w="1"/><text x="59.2732%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.58%)</title><rect x="58.6093%" y="277" width="0.5795%" height="15" fill="rgb(216,39,24)" fg:x="708" fg:w="7"/><text x="58.8593%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.50%)</title><rect x="58.6921%" y="261" width="0.4967%" height="15" fill="rgb(252,113,16)" fg:x="709" fg:w="6"/><text x="58.9421%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.50%)</title><rect x="58.6921%" y="245" width="0.4967%" height="15" fill="rgb(208,113,19)" fg:x="709" fg:w="6"/><text x="58.9421%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="59.0232%" y="229" width="0.1656%" height="15" fill="rgb(234,107,25)" fg:x="713" fg:w="2"/><text x="59.2732%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="59.0232%" y="213" width="0.1656%" height="15" fill="rgb(234,217,51)" fg:x="713" fg:w="2"/><text x="59.2732%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.1060%" y="197" width="0.0828%" height="15" fill="rgb(251,29,42)" fg:x="714" fg:w="1"/><text x="59.3560%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.1060%" y="181" width="0.0828%" height="15" fill="rgb(221,62,51)" fg:x="714" fg:w="1"/><text x="59.3560%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1060%" y="165" width="0.0828%" height="15" fill="rgb(240,192,43)" fg:x="714" fg:w="1"/><text x="59.3560%" y="175.50"></text></g><g><title>core::iter::adapters::try_process (51 samples, 4.22%)</title><rect x="55.0497%" y="469" width="4.2219%" height="15" fill="rgb(224,157,47)" fg:x="665" fg:w="51"/><text x="55.2997%" y="479.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 4.22%)</title><rect x="55.0497%" y="453" width="4.2219%" height="15" fill="rgb(226,84,45)" fg:x="665" fg:w="51"/><text x="55.2997%" y="463.50">&lt;allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50 samples, 4.14%)</title><rect x="55.1325%" y="437" width="4.1391%" height="15" fill="rgb(208,207,23)" fg:x="666" fg:w="50"/><text x="55.3825%" y="447.50">&lt;core..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (50 samples, 4.14%)</title><rect x="55.1325%" y="421" width="4.1391%" height="15" fill="rgb(253,34,51)" fg:x="666" fg:w="50"/><text x="55.3825%" y="431.50">&lt;engi..</text></g><g><title>engine::internal::Entities::prepare_entity (48 samples, 3.97%)</title><rect x="55.2980%" y="405" width="3.9735%" height="15" fill="rgb(227,26,34)" fg:x="668" fg:w="48"/><text x="55.5480%" y="415.50">engi..</text></g><g><title>kernel::model::deserialize_entity (41 samples, 3.39%)</title><rect x="55.8775%" y="389" width="3.3940%" height="15" fill="rgb(245,75,19)" fg:x="675" fg:w="41"/><text x="56.1275%" y="399.50">ker..</text></g><g><title>serde_json::de::from_trait (16 samples, 1.32%)</title><rect x="57.9470%" y="373" width="1.3245%" height="15" fill="rgb(250,191,31)" fg:x="700" fg:w="16"/><text x="58.1970%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16 samples, 1.32%)</title><rect x="57.9470%" y="357" width="1.3245%" height="15" fill="rgb(224,11,50)" fg:x="700" fg:w="16"/><text x="58.1970%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.24%)</title><rect x="58.0298%" y="341" width="1.2417%" height="15" fill="rgb(231,171,7)" fg:x="701" fg:w="15"/><text x="58.2798%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.91%)</title><rect x="58.3609%" y="325" width="0.9106%" height="15" fill="rgb(252,214,10)" fg:x="705" fg:w="11"/><text x="58.6109%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.91%)</title><rect x="58.3609%" y="309" width="0.9106%" height="15" fill="rgb(249,45,46)" fg:x="705" fg:w="11"/><text x="58.6109%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.66%)</title><rect x="58.6093%" y="293" width="0.6623%" height="15" fill="rgb(240,173,7)" fg:x="708" fg:w="8"/><text x="58.8593%" y="303.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="59.1887%" y="277" width="0.0828%" height="15" fill="rgb(235,214,13)" fg:x="715" fg:w="1"/><text x="59.4387%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (52 samples, 4.30%)</title><rect x="55.0497%" y="485" width="4.3046%" height="15" fill="rgb(245,156,8)" fg:x="665" fg:w="52"/><text x="55.2997%" y="495.50">&lt;plug..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="59.2715%" y="469" width="0.0828%" height="15" fill="rgb(235,46,12)" fg:x="716" fg:w="1"/><text x="59.5215%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3543%" y="485" width="0.0828%" height="15" fill="rgb(221,81,14)" fg:x="717" fg:w="1"/><text x="59.6043%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="59.4371%" y="485" width="0.1656%" height="15" fill="rgb(238,207,9)" fg:x="718" fg:w="2"/><text x="59.6871%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.5199%" y="469" width="0.0828%" height="15" fill="rgb(224,129,35)" fg:x="719" fg:w="1"/><text x="59.7699%" y="479.50"></text></g><g><title>plugins_core::tools::get_contained_keys (65 samples, 5.38%)</title><rect x="54.3874%" y="533" width="5.3808%" height="15" fill="rgb(243,218,34)" fg:x="657" fg:w="65"/><text x="54.6374%" y="543.50">plugins..</text></g><g><title>kernel::model::entry::Entry::scope (63 samples, 5.22%)</title><rect x="54.5530%" y="517" width="5.2152%" height="15" fill="rgb(220,166,13)" fg:x="659" fg:w="63"/><text x="54.8030%" y="527.50">kernel..</text></g><g><title>kernel::model::Entity::load_scope (63 samples, 5.22%)</title><rect x="54.5530%" y="501" width="5.2152%" height="15" fill="rgb(227,167,49)" fg:x="659" fg:w="63"/><text x="54.8030%" y="511.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="59.6026%" y="485" width="0.1656%" height="15" fill="rgb(234,142,12)" fg:x="720" fg:w="2"/><text x="59.8526%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="59.6026%" y="469" width="0.1656%" height="15" fill="rgb(207,100,48)" fg:x="720" fg:w="2"/><text x="59.8526%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="59.6854%" y="453" width="0.0828%" height="15" fill="rgb(210,25,14)" fg:x="721" fg:w="1"/><text x="59.9354%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0166%" y="485" width="0.0828%" height="15" fill="rgb(246,116,27)" fg:x="725" fg:w="1"/><text x="60.2666%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0166%" y="469" width="0.0828%" height="15" fill="rgb(214,193,42)" fg:x="725" fg:w="1"/><text x="60.2666%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0166%" y="453" width="0.0828%" height="15" fill="rgb(214,122,8)" fg:x="725" fg:w="1"/><text x="60.2666%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.0166%" y="437" width="0.0828%" height="15" fill="rgb(244,173,18)" fg:x="725" fg:w="1"/><text x="60.2666%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.0166%" y="421" width="0.0828%" height="15" fill="rgb(232,68,19)" fg:x="725" fg:w="1"/><text x="60.2666%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.0166%" y="405" width="0.0828%" height="15" fill="rgb(236,224,1)" fg:x="725" fg:w="1"/><text x="60.2666%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0166%" y="389" width="0.0828%" height="15" fill="rgb(240,11,8)" fg:x="725" fg:w="1"/><text x="60.2666%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0166%" y="373" width="0.0828%" height="15" fill="rgb(244,159,20)" fg:x="725" fg:w="1"/><text x="60.2666%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.0166%" y="357" width="0.0828%" height="15" fill="rgb(240,223,54)" fg:x="725" fg:w="1"/><text x="60.2666%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.0166%" y="341" width="0.0828%" height="15" fill="rgb(237,146,5)" fg:x="725" fg:w="1"/><text x="60.2666%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.0166%" y="325" width="0.0828%" height="15" fill="rgb(218,221,32)" fg:x="725" fg:w="1"/><text x="60.2666%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.0166%" y="309" width="0.0828%" height="15" fill="rgb(244,96,26)" fg:x="725" fg:w="1"/><text x="60.2666%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0166%" y="293" width="0.0828%" height="15" fill="rgb(245,184,37)" fg:x="725" fg:w="1"/><text x="60.2666%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="60.1821%" y="421" width="0.0828%" height="15" fill="rgb(248,91,47)" fg:x="727" fg:w="1"/><text x="60.4321%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.17%)</title><rect x="60.1821%" y="453" width="0.1656%" height="15" fill="rgb(243,199,8)" fg:x="727" fg:w="2"/><text x="60.4321%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.17%)</title><rect x="60.1821%" y="437" width="0.1656%" height="15" fill="rgb(249,12,15)" fg:x="727" fg:w="2"/><text x="60.4321%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="60.2649%" y="421" width="0.0828%" height="15" fill="rgb(245,97,12)" fg:x="728" fg:w="1"/><text x="60.5149%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.33%)</title><rect x="60.0993%" y="485" width="0.3311%" height="15" fill="rgb(244,61,1)" fg:x="726" fg:w="4"/><text x="60.3493%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="60.1821%" y="469" width="0.2483%" height="15" fill="rgb(222,194,10)" fg:x="727" fg:w="3"/><text x="60.4321%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3477%" y="453" width="0.0828%" height="15" fill="rgb(226,178,8)" fg:x="729" fg:w="1"/><text x="60.5977%" y="463.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.58%)</title><rect x="59.9338%" y="501" width="0.5795%" height="15" fill="rgb(241,32,34)" fg:x="724" fg:w="7"/><text x="60.1838%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.4305%" y="485" width="0.0828%" height="15" fill="rgb(254,26,6)" fg:x="730" fg:w="1"/><text x="60.6805%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.4305%" y="469" width="0.0828%" height="15" fill="rgb(249,71,11)" fg:x="730" fg:w="1"/><text x="60.6805%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (119 samples, 9.85%)</title><rect x="50.7450%" y="549" width="9.8510%" height="15" fill="rgb(232,170,27)" fg:x="613" fg:w="119"/><text x="50.9950%" y="559.50">&lt;core::iter::a..</text></g><g><title>plugins_core::tools::get_occupant_keys (10 samples, 0.83%)</title><rect x="59.7682%" y="533" width="0.8278%" height="15" fill="rgb(214,223,17)" fg:x="722" fg:w="10"/><text x="60.0182%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.83%)</title><rect x="59.7682%" y="517" width="0.8278%" height="15" fill="rgb(250,18,15)" fg:x="722" fg:w="10"/><text x="60.0182%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="60.5132%" y="501" width="0.0828%" height="15" fill="rgb(212,153,51)" fg:x="731" fg:w="1"/><text x="60.7632%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (121 samples, 10.02%)</title><rect x="50.6623%" y="565" width="10.0166%" height="15" fill="rgb(219,194,12)" fg:x="612" fg:w="121"/><text x="50.9123%" y="575.50">&lt;alloc::vec::V..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.5960%" y="549" width="0.0828%" height="15" fill="rgb(212,58,17)" fg:x="732" fg:w="1"/><text x="60.8460%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.33%)</title><rect x="60.9272%" y="437" width="0.3311%" height="15" fill="rgb(254,5,10)" fg:x="736" fg:w="4"/><text x="61.1772%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.33%)</title><rect x="60.9272%" y="421" width="0.3311%" height="15" fill="rgb(246,91,7)" fg:x="736" fg:w="4"/><text x="61.1772%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.33%)</title><rect x="60.9272%" y="405" width="0.3311%" height="15" fill="rgb(218,108,49)" fg:x="736" fg:w="4"/><text x="61.1772%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.33%)</title><rect x="60.9272%" y="389" width="0.3311%" height="15" fill="rgb(238,123,20)" fg:x="736" fg:w="4"/><text x="61.1772%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.33%)</title><rect x="60.9272%" y="373" width="0.3311%" height="15" fill="rgb(231,69,23)" fg:x="736" fg:w="4"/><text x="61.1772%" y="383.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.33%)</title><rect x="60.9272%" y="357" width="0.3311%" height="15" fill="rgb(230,209,3)" fg:x="736" fg:w="4"/><text x="61.1772%" y="367.50"></text></g><g><title>__libc_malloc (4 samples, 0.33%)</title><rect x="60.9272%" y="341" width="0.3311%" height="15" fill="rgb(231,19,0)" fg:x="736" fg:w="4"/><text x="61.1772%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.50%)</title><rect x="60.9272%" y="517" width="0.4967%" height="15" fill="rgb(226,192,25)" fg:x="736" fg:w="6"/><text x="61.1772%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.50%)</title><rect x="60.9272%" y="501" width="0.4967%" height="15" fill="rgb(223,175,53)" fg:x="736" fg:w="6"/><text x="61.1772%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.50%)</title><rect x="60.9272%" y="485" width="0.4967%" height="15" fill="rgb(248,35,51)" fg:x="736" fg:w="6"/><text x="61.1772%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.50%)</title><rect x="60.9272%" y="469" width="0.4967%" height="15" fill="rgb(230,37,26)" fg:x="736" fg:w="6"/><text x="61.1772%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.50%)</title><rect x="60.9272%" y="453" width="0.4967%" height="15" fill="rgb(206,120,22)" fg:x="736" fg:w="6"/><text x="61.1772%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.17%)</title><rect x="61.2583%" y="437" width="0.1656%" height="15" fill="rgb(207,165,28)" fg:x="740" fg:w="2"/><text x="61.5083%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.17%)</title><rect x="61.2583%" y="421" width="0.1656%" height="15" fill="rgb(226,23,46)" fg:x="740" fg:w="2"/><text x="61.5083%" y="431.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.25%)</title><rect x="61.5066%" y="501" width="0.2483%" height="15" fill="rgb(208,130,44)" fg:x="743" fg:w="3"/><text x="61.7566%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.17%)</title><rect x="61.5894%" y="485" width="0.1656%" height="15" fill="rgb(231,67,8)" fg:x="744" fg:w="2"/><text x="61.8394%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7550%" y="485" width="0.0828%" height="15" fill="rgb(205,183,22)" fg:x="746" fg:w="1"/><text x="62.0050%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7550%" y="469" width="0.0828%" height="15" fill="rgb(224,47,9)" fg:x="746" fg:w="1"/><text x="62.0050%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.7550%" y="453" width="0.0828%" height="15" fill="rgb(250,183,49)" fg:x="746" fg:w="1"/><text x="62.0050%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.7550%" y="437" width="0.0828%" height="15" fill="rgb(220,151,39)" fg:x="746" fg:w="1"/><text x="62.0050%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.7550%" y="421" width="0.0828%" height="15" fill="rgb(220,118,20)" fg:x="746" fg:w="1"/><text x="62.0050%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7550%" y="405" width="0.0828%" height="15" fill="rgb(231,65,51)" fg:x="746" fg:w="1"/><text x="62.0050%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7550%" y="389" width="0.0828%" height="15" fill="rgb(253,125,37)" fg:x="746" fg:w="1"/><text x="62.0050%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.7550%" y="373" width="0.0828%" height="15" fill="rgb(232,102,6)" fg:x="746" fg:w="1"/><text x="62.0050%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.7550%" y="357" width="0.0828%" height="15" fill="rgb(251,105,13)" fg:x="746" fg:w="1"/><text x="62.0050%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.7550%" y="341" width="0.0828%" height="15" fill="rgb(222,179,29)" fg:x="746" fg:w="1"/><text x="62.0050%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.7550%" y="325" width="0.0828%" height="15" fill="rgb(229,180,53)" fg:x="746" fg:w="1"/><text x="62.0050%" y="335.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="61.7550%" y="309" width="0.0828%" height="15" fill="rgb(238,104,13)" fg:x="746" fg:w="1"/><text x="62.0050%" y="319.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="61.7550%" y="293" width="0.0828%" height="15" fill="rgb(210,130,5)" fg:x="746" fg:w="1"/><text x="62.0050%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="61.9205%" y="373" width="0.1656%" height="15" fill="rgb(233,87,49)" fg:x="748" fg:w="2"/><text x="62.1705%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="61.9205%" y="357" width="0.1656%" height="15" fill="rgb(243,34,9)" fg:x="748" fg:w="2"/><text x="62.1705%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.17%)</title><rect x="61.9205%" y="341" width="0.1656%" height="15" fill="rgb(235,225,10)" fg:x="748" fg:w="2"/><text x="62.1705%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.17%)</title><rect x="61.9205%" y="325" width="0.1656%" height="15" fill="rgb(212,0,30)" fg:x="748" fg:w="2"/><text x="62.1705%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.17%)</title><rect x="61.9205%" y="309" width="0.1656%" height="15" fill="rgb(211,177,0)" fg:x="748" fg:w="2"/><text x="62.1705%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.17%)</title><rect x="61.9205%" y="293" width="0.1656%" height="15" fill="rgb(225,220,11)" fg:x="748" fg:w="2"/><text x="62.1705%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="61.9205%" y="277" width="0.1656%" height="15" fill="rgb(215,10,13)" fg:x="748" fg:w="2"/><text x="62.1705%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="61.9205%" y="261" width="0.1656%" height="15" fill="rgb(240,177,14)" fg:x="748" fg:w="2"/><text x="62.1705%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="61.9205%" y="245" width="0.1656%" height="15" fill="rgb(243,7,39)" fg:x="748" fg:w="2"/><text x="62.1705%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.17%)</title><rect x="61.9205%" y="229" width="0.1656%" height="15" fill="rgb(212,99,0)" fg:x="748" fg:w="2"/><text x="62.1705%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="61.9205%" y="213" width="0.1656%" height="15" fill="rgb(225,162,48)" fg:x="748" fg:w="2"/><text x="62.1705%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="61.9205%" y="197" width="0.1656%" height="15" fill="rgb(246,16,25)" fg:x="748" fg:w="2"/><text x="62.1705%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="62.0861%" y="309" width="0.0828%" height="15" fill="rgb(220,150,2)" fg:x="750" fg:w="1"/><text x="62.3361%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="62.0861%" y="293" width="0.0828%" height="15" fill="rgb(237,113,11)" fg:x="750" fg:w="1"/><text x="62.3361%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.17%)</title><rect x="62.0861%" y="357" width="0.1656%" height="15" fill="rgb(236,70,20)" fg:x="750" fg:w="2"/><text x="62.3361%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="62.0861%" y="341" width="0.1656%" height="15" fill="rgb(234,94,7)" fg:x="750" fg:w="2"/><text x="62.3361%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="62.0861%" y="325" width="0.1656%" height="15" fill="rgb(250,221,0)" fg:x="750" fg:w="2"/><text x="62.3361%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.1689%" y="309" width="0.0828%" height="15" fill="rgb(245,149,46)" fg:x="751" fg:w="1"/><text x="62.4189%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.1689%" y="293" width="0.0828%" height="15" fill="rgb(215,37,27)" fg:x="751" fg:w="1"/><text x="62.4189%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.1689%" y="277" width="0.0828%" height="15" fill="rgb(232,65,3)" fg:x="751" fg:w="1"/><text x="62.4189%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.1689%" y="261" width="0.0828%" height="15" fill="rgb(214,2,16)" fg:x="751" fg:w="1"/><text x="62.4189%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.1689%" y="245" width="0.0828%" height="15" fill="rgb(227,131,50)" fg:x="751" fg:w="1"/><text x="62.4189%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.1689%" y="229" width="0.0828%" height="15" fill="rgb(247,131,45)" fg:x="751" fg:w="1"/><text x="62.4189%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.1689%" y="213" width="0.0828%" height="15" fill="rgb(215,97,47)" fg:x="751" fg:w="1"/><text x="62.4189%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.1689%" y="197" width="0.0828%" height="15" fill="rgb(233,143,12)" fg:x="751" fg:w="1"/><text x="62.4189%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.1689%" y="181" width="0.0828%" height="15" fill="rgb(222,57,17)" fg:x="751" fg:w="1"/><text x="62.4189%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.1689%" y="165" width="0.0828%" height="15" fill="rgb(214,119,38)" fg:x="751" fg:w="1"/><text x="62.4189%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.1689%" y="149" width="0.0828%" height="15" fill="rgb(217,28,47)" fg:x="751" fg:w="1"/><text x="62.4189%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.1689%" y="133" width="0.0828%" height="15" fill="rgb(231,14,52)" fg:x="751" fg:w="1"/><text x="62.4189%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (11 samples, 0.91%)</title><rect x="61.4238%" y="517" width="0.9106%" height="15" fill="rgb(220,158,18)" fg:x="742" fg:w="11"/><text x="61.6738%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.58%)</title><rect x="61.7550%" y="501" width="0.5795%" height="15" fill="rgb(222,143,46)" fg:x="746" fg:w="7"/><text x="62.0050%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.50%)</title><rect x="61.8377%" y="485" width="0.4967%" height="15" fill="rgb(227,165,5)" fg:x="747" fg:w="6"/><text x="62.0877%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.50%)</title><rect x="61.8377%" y="469" width="0.4967%" height="15" fill="rgb(216,222,49)" fg:x="747" fg:w="6"/><text x="62.0877%" y="479.50"></text></g><g><title>core::fmt::write (6 samples, 0.50%)</title><rect x="61.8377%" y="453" width="0.4967%" height="15" fill="rgb(238,73,39)" fg:x="747" fg:w="6"/><text x="62.0877%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.50%)</title><rect x="61.8377%" y="437" width="0.4967%" height="15" fill="rgb(252,115,9)" fg:x="747" fg:w="6"/><text x="62.0877%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (6 samples, 0.50%)</title><rect x="61.8377%" y="421" width="0.4967%" height="15" fill="rgb(238,202,4)" fg:x="747" fg:w="6"/><text x="62.0877%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.50%)</title><rect x="61.8377%" y="405" width="0.4967%" height="15" fill="rgb(252,153,44)" fg:x="747" fg:w="6"/><text x="62.0877%" y="415.50"></text></g><g><title>core::fmt::write (6 samples, 0.50%)</title><rect x="61.8377%" y="389" width="0.4967%" height="15" fill="rgb(235,128,27)" fg:x="747" fg:w="6"/><text x="62.0877%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="62.0861%" y="373" width="0.2483%" height="15" fill="rgb(221,121,47)" fg:x="750" fg:w="3"/><text x="62.3361%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.2517%" y="357" width="0.0828%" height="15" fill="rgb(247,211,47)" fg:x="752" fg:w="1"/><text x="62.5017%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.2517%" y="341" width="0.0828%" height="15" fill="rgb(252,47,49)" fg:x="752" fg:w="1"/><text x="62.5017%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.2517%" y="325" width="0.0828%" height="15" fill="rgb(219,119,53)" fg:x="752" fg:w="1"/><text x="62.5017%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.2517%" y="309" width="0.0828%" height="15" fill="rgb(243,165,53)" fg:x="752" fg:w="1"/><text x="62.5017%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.2517%" y="293" width="0.0828%" height="15" fill="rgb(230,12,35)" fg:x="752" fg:w="1"/><text x="62.5017%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.2517%" y="277" width="0.0828%" height="15" fill="rgb(239,57,49)" fg:x="752" fg:w="1"/><text x="62.5017%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.2517%" y="261" width="0.0828%" height="15" fill="rgb(231,154,7)" fg:x="752" fg:w="1"/><text x="62.5017%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.2517%" y="245" width="0.0828%" height="15" fill="rgb(248,81,34)" fg:x="752" fg:w="1"/><text x="62.5017%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.2517%" y="229" width="0.0828%" height="15" fill="rgb(247,9,5)" fg:x="752" fg:w="1"/><text x="62.5017%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.2517%" y="213" width="0.0828%" height="15" fill="rgb(228,172,27)" fg:x="752" fg:w="1"/><text x="62.5017%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.2517%" y="197" width="0.0828%" height="15" fill="rgb(230,57,44)" fg:x="752" fg:w="1"/><text x="62.5017%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="62.2517%" y="181" width="0.0828%" height="15" fill="rgb(249,35,22)" fg:x="752" fg:w="1"/><text x="62.5017%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="62.2517%" y="165" width="0.0828%" height="15" fill="rgb(250,137,27)" fg:x="752" fg:w="1"/><text x="62.5017%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="62.2517%" y="149" width="0.0828%" height="15" fill="rgb(251,57,31)" fg:x="752" fg:w="1"/><text x="62.5017%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="62.2517%" y="133" width="0.0828%" height="15" fill="rgb(238,60,0)" fg:x="752" fg:w="1"/><text x="62.5017%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="64.4868%" y="261" width="0.1656%" height="15" fill="rgb(242,185,39)" fg:x="779" fg:w="2"/><text x="64.7368%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.25%)</title><rect x="64.4868%" y="277" width="0.2483%" height="15" fill="rgb(240,63,43)" fg:x="779" fg:w="3"/><text x="64.7368%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6523%" y="261" width="0.0828%" height="15" fill="rgb(236,155,6)" fg:x="781" fg:w="1"/><text x="64.9023%" y="271.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.50%)</title><rect x="64.4040%" y="309" width="0.4967%" height="15" fill="rgb(215,11,29)" fg:x="778" fg:w="6"/><text x="64.6540%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="64.4868%" y="293" width="0.4139%" height="15" fill="rgb(228,180,48)" fg:x="779" fg:w="5"/><text x="64.7368%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.17%)</title><rect x="64.7351%" y="277" width="0.1656%" height="15" fill="rgb(241,102,12)" fg:x="782" fg:w="2"/><text x="64.9851%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8179%" y="261" width="0.0828%" height="15" fill="rgb(246,213,4)" fg:x="783" fg:w="1"/><text x="65.0679%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.9007%" y="309" width="0.0828%" height="15" fill="rgb(218,134,35)" fg:x="784" fg:w="1"/><text x="65.1507%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.9007%" y="293" width="0.0828%" height="15" fill="rgb(251,117,35)" fg:x="784" fg:w="1"/><text x="65.1507%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.08%)</title><rect x="64.1556%" y="325" width="1.0762%" height="15" fill="rgb(206,156,45)" fg:x="775" fg:w="13"/><text x="64.4056%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.25%)</title><rect x="64.9834%" y="309" width="0.2483%" height="15" fill="rgb(218,52,27)" fg:x="785" fg:w="3"/><text x="65.2334%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="65.0662%" y="293" width="0.1656%" height="15" fill="rgb(238,83,36)" fg:x="786" fg:w="2"/><text x="65.3162%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 1.49%)</title><rect x="63.9901%" y="341" width="1.4901%" height="15" fill="rgb(218,53,43)" fg:x="773" fg:w="18"/><text x="64.2401%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.25%)</title><rect x="65.2318%" y="325" width="0.2483%" height="15" fill="rgb(239,54,39)" fg:x="788" fg:w="3"/><text x="65.4818%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="65.3146%" y="309" width="0.1656%" height="15" fill="rgb(212,198,13)" fg:x="789" fg:w="2"/><text x="65.5646%" y="319.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="65.7285%" y="261" width="0.0828%" height="15" fill="rgb(234,54,46)" fg:x="794" fg:w="1"/><text x="65.9785%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.8113%" y="261" width="0.0828%" height="15" fill="rgb(217,120,7)" fg:x="795" fg:w="1"/><text x="66.0613%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.50%)</title><rect x="65.4801%" y="277" width="0.4967%" height="15" fill="rgb(246,39,15)" fg:x="791" fg:w="6"/><text x="65.7301%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.8940%" y="261" width="0.0828%" height="15" fill="rgb(242,143,31)" fg:x="796" fg:w="1"/><text x="66.1440%" y="271.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (26 samples, 2.15%)</title><rect x="63.9073%" y="357" width="2.1523%" height="15" fill="rgb(252,60,24)" fg:x="772" fg:w="26"/><text x="64.1573%" y="367.50">&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.58%)</title><rect x="65.4801%" y="341" width="0.5795%" height="15" fill="rgb(249,220,7)" fg:x="791" fg:w="7"/><text x="65.7301%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.58%)</title><rect x="65.4801%" y="325" width="0.5795%" height="15" fill="rgb(236,67,13)" fg:x="791" fg:w="7"/><text x="65.7301%" y="335.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (7 samples, 0.58%)</title><rect x="65.4801%" y="309" width="0.5795%" height="15" fill="rgb(210,62,39)" fg:x="791" fg:w="7"/><text x="65.7301%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.58%)</title><rect x="65.4801%" y="293" width="0.5795%" height="15" fill="rgb(219,122,53)" fg:x="791" fg:w="7"/><text x="65.7301%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="65.9768%" y="277" width="0.0828%" height="15" fill="rgb(218,87,25)" fg:x="797" fg:w="1"/><text x="66.2268%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="66.1424%" y="341" width="0.1656%" height="15" fill="rgb(234,179,48)" fg:x="799" fg:w="2"/><text x="66.3924%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 2.73%)</title><rect x="63.6589%" y="373" width="2.7318%" height="15" fill="rgb(248,90,0)" fg:x="769" fg:w="33"/><text x="63.9089%" y="383.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.33%)</title><rect x="66.0596%" y="357" width="0.3311%" height="15" fill="rgb(207,228,37)" fg:x="798" fg:w="4"/><text x="66.3096%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.3079%" y="341" width="0.0828%" height="15" fill="rgb(235,214,15)" fg:x="801" fg:w="1"/><text x="66.5579%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (36 samples, 2.98%)</title><rect x="63.6589%" y="389" width="2.9801%" height="15" fill="rgb(210,144,39)" fg:x="769" fg:w="36"/><text x="63.9089%" y="399.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.25%)</title><rect x="66.3907%" y="373" width="0.2483%" height="15" fill="rgb(222,67,41)" fg:x="802" fg:w="3"/><text x="66.6407%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="66.3907%" y="357" width="0.2483%" height="15" fill="rgb(205,35,37)" fg:x="802" fg:w="3"/><text x="66.6407%" y="367.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (41 samples, 3.39%)</title><rect x="63.4106%" y="405" width="3.3940%" height="15" fill="rgb(216,125,40)" fg:x="766" fg:w="41"/><text x="63.6606%" y="415.50">&lt;pl..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="66.6391%" y="389" width="0.1656%" height="15" fill="rgb(228,227,20)" fg:x="805" fg:w="2"/><text x="66.8891%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="66.8046%" y="405" width="0.1656%" height="15" fill="rgb(242,173,45)" fg:x="807" fg:w="2"/><text x="67.0546%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.8874%" y="389" width="0.0828%" height="15" fill="rgb(215,79,24)" fg:x="808" fg:w="1"/><text x="67.1374%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="66.9702%" y="389" width="0.1656%" height="15" fill="rgb(238,164,38)" fg:x="809" fg:w="2"/><text x="67.2202%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.17%)</title><rect x="66.9702%" y="373" width="0.1656%" height="15" fill="rgb(245,196,38)" fg:x="809" fg:w="2"/><text x="67.2202%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 4.14%)</title><rect x="63.1623%" y="421" width="4.1391%" height="15" fill="rgb(231,217,29)" fg:x="763" fg:w="50"/><text x="63.4123%" y="431.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.33%)</title><rect x="66.9702%" y="405" width="0.3311%" height="15" fill="rgb(245,6,4)" fg:x="809" fg:w="4"/><text x="67.2202%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.17%)</title><rect x="67.1358%" y="389" width="0.1656%" height="15" fill="rgb(214,76,49)" fg:x="811" fg:w="2"/><text x="67.3858%" y="399.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (63 samples, 5.22%)</title><rect x="62.9139%" y="453" width="5.2152%" height="15" fill="rgb(205,96,12)" fg:x="760" fg:w="63"/><text x="63.1639%" y="463.50">&lt;plugi..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (60 samples, 4.97%)</title><rect x="63.1623%" y="437" width="4.9669%" height="15" fill="rgb(243,131,4)" fg:x="763" fg:w="60"/><text x="63.4123%" y="447.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.83%)</title><rect x="67.3013%" y="421" width="0.8278%" height="15" fill="rgb(214,114,4)" fg:x="813" fg:w="10"/><text x="67.5513%" y="431.50"></text></g><g><title>__libc_malloc (10 samples, 0.83%)</title><rect x="67.3013%" y="405" width="0.8278%" height="15" fill="rgb(234,215,15)" fg:x="813" fg:w="10"/><text x="67.5513%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.1291%" y="453" width="0.0828%" height="15" fill="rgb(250,216,45)" fg:x="823" fg:w="1"/><text x="68.3791%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.1291%" y="437" width="0.0828%" height="15" fill="rgb(236,128,4)" fg:x="823" fg:w="1"/><text x="68.3791%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.41%)</title><rect x="68.2947%" y="437" width="0.4139%" height="15" fill="rgb(234,50,33)" fg:x="825" fg:w="5"/><text x="68.5447%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.17%)</title><rect x="68.5430%" y="421" width="0.1656%" height="15" fill="rgb(253,131,37)" fg:x="828" fg:w="2"/><text x="68.7930%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 6.37%)</title><rect x="62.5000%" y="469" width="6.3742%" height="15" fill="rgb(218,55,27)" fg:x="755" fg:w="77"/><text x="62.7500%" y="479.50">&lt;core::i..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.66%)</title><rect x="68.2119%" y="453" width="0.6623%" height="15" fill="rgb(241,220,28)" fg:x="824" fg:w="8"/><text x="68.4619%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.17%)</title><rect x="68.7086%" y="437" width="0.1656%" height="15" fill="rgb(241,90,48)" fg:x="830" fg:w="2"/><text x="68.9586%" y="447.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (98 samples, 8.11%)</title><rect x="62.3344%" y="501" width="8.1126%" height="15" fill="rgb(216,43,37)" fg:x="753" fg:w="98"/><text x="62.5844%" y="511.50">&lt;plugins_rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (96 samples, 7.95%)</title><rect x="62.5000%" y="485" width="7.9470%" height="15" fill="rgb(207,173,9)" fg:x="755" fg:w="96"/><text x="62.7500%" y="495.50">&lt;std::colle..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (19 samples, 1.57%)</title><rect x="68.8742%" y="469" width="1.5728%" height="15" fill="rgb(240,126,30)" fg:x="832" fg:w="19"/><text x="69.1242%" y="479.50"></text></g><g><title>__libc_malloc (16 samples, 1.32%)</title><rect x="69.1225%" y="453" width="1.3245%" height="15" fill="rgb(228,178,53)" fg:x="835" fg:w="16"/><text x="69.3725%" y="463.50"></text></g><g><title>__libc_malloc (10 samples, 0.83%)</title><rect x="70.5298%" y="453" width="0.8278%" height="15" fill="rgb(217,33,4)" fg:x="852" fg:w="10"/><text x="70.7798%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5232%" y="421" width="0.0828%" height="15" fill="rgb(206,124,34)" fg:x="864" fg:w="1"/><text x="71.7732%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.50%)</title><rect x="71.3576%" y="453" width="0.4967%" height="15" fill="rgb(208,122,53)" fg:x="862" fg:w="6"/><text x="71.6076%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="71.4404%" y="437" width="0.4139%" height="15" fill="rgb(215,202,26)" fg:x="863" fg:w="5"/><text x="71.6904%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.25%)</title><rect x="71.6060%" y="421" width="0.2483%" height="15" fill="rgb(232,198,31)" fg:x="865" fg:w="3"/><text x="71.8560%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="71.8543%" y="453" width="0.0828%" height="15" fill="rgb(222,23,35)" fg:x="868" fg:w="1"/><text x="72.1043%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.8543%" y="437" width="0.0828%" height="15" fill="rgb(242,27,53)" fg:x="868" fg:w="1"/><text x="72.1043%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="71.8543%" y="421" width="0.0828%" height="15" fill="rgb(210,216,42)" fg:x="868" fg:w="1"/><text x="72.1043%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (3 samples, 0.25%)</title><rect x="71.9371%" y="453" width="0.2483%" height="15" fill="rgb(234,39,38)" fg:x="869" fg:w="3"/><text x="72.1871%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="72.0199%" y="437" width="0.1656%" height="15" fill="rgb(235,126,54)" fg:x="870" fg:w="2"/><text x="72.2699%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.1026%" y="421" width="0.0828%" height="15" fill="rgb(235,150,33)" fg:x="871" fg:w="1"/><text x="72.3526%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.1026%" y="405" width="0.0828%" height="15" fill="rgb(249,49,53)" fg:x="871" fg:w="1"/><text x="72.3526%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1026%" y="389" width="0.0828%" height="15" fill="rgb(238,60,50)" fg:x="871" fg:w="1"/><text x="72.3526%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1854%" y="421" width="0.0828%" height="15" fill="rgb(210,5,2)" fg:x="872" fg:w="1"/><text x="72.4354%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.25%)</title><rect x="72.1854%" y="453" width="0.2483%" height="15" fill="rgb(214,207,24)" fg:x="872" fg:w="3"/><text x="72.4354%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="72.1854%" y="437" width="0.2483%" height="15" fill="rgb(228,173,2)" fg:x="872" fg:w="3"/><text x="72.4354%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="72.2682%" y="421" width="0.1656%" height="15" fill="rgb(244,26,8)" fg:x="873" fg:w="2"/><text x="72.5182%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="72.2682%" y="405" width="0.1656%" height="15" fill="rgb(249,153,35)" fg:x="873" fg:w="2"/><text x="72.5182%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="72.2682%" y="389" width="0.1656%" height="15" fill="rgb(221,215,40)" fg:x="873" fg:w="2"/><text x="72.5182%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5166%" y="421" width="0.0828%" height="15" fill="rgb(238,106,35)" fg:x="876" fg:w="1"/><text x="72.7666%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5166%" y="405" width="0.0828%" height="15" fill="rgb(207,195,21)" fg:x="876" fg:w="1"/><text x="72.7666%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5166%" y="389" width="0.0828%" height="15" fill="rgb(205,43,29)" fg:x="876" fg:w="1"/><text x="72.7666%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.7649%" y="405" width="0.0828%" height="15" fill="rgb(236,35,21)" fg:x="879" fg:w="1"/><text x="73.0149%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.7649%" y="389" width="0.0828%" height="15" fill="rgb(244,74,8)" fg:x="879" fg:w="1"/><text x="73.0149%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.7649%" y="373" width="0.0828%" height="15" fill="rgb(241,229,7)" fg:x="879" fg:w="1"/><text x="73.0149%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="72.8477%" y="389" width="0.2483%" height="15" fill="rgb(212,223,25)" fg:x="880" fg:w="3"/><text x="73.0977%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="72.9305%" y="373" width="0.1656%" height="15" fill="rgb(234,58,53)" fg:x="881" fg:w="2"/><text x="73.1805%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="72.9305%" y="357" width="0.1656%" height="15" fill="rgb(244,36,1)" fg:x="881" fg:w="2"/><text x="73.1805%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0960%" y="373" width="0.0828%" height="15" fill="rgb(222,40,54)" fg:x="883" fg:w="1"/><text x="73.3460%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="73.3444%" y="357" width="0.0828%" height="15" fill="rgb(210,207,39)" fg:x="886" fg:w="1"/><text x="73.5944%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4272%" y="341" width="0.0828%" height="15" fill="rgb(234,52,14)" fg:x="887" fg:w="1"/><text x="73.6772%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.50%)</title><rect x="73.0960%" y="389" width="0.4967%" height="15" fill="rgb(239,108,46)" fg:x="883" fg:w="6"/><text x="73.3460%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (5 samples, 0.41%)</title><rect x="73.1788%" y="373" width="0.4139%" height="15" fill="rgb(252,223,5)" fg:x="884" fg:w="5"/><text x="73.4288%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="73.4272%" y="357" width="0.1656%" height="15" fill="rgb(227,181,11)" fg:x="887" fg:w="2"/><text x="73.6772%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.5099%" y="341" width="0.0828%" height="15" fill="rgb(248,126,40)" fg:x="888" fg:w="1"/><text x="73.7599%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="73.5099%" y="325" width="0.0828%" height="15" fill="rgb(243,1,18)" fg:x="888" fg:w="1"/><text x="73.7599%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (16 samples, 1.32%)</title><rect x="72.4338%" y="453" width="1.3245%" height="15" fill="rgb(214,145,23)" fg:x="875" fg:w="16"/><text x="72.6838%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.24%)</title><rect x="72.5166%" y="437" width="1.2417%" height="15" fill="rgb(241,218,11)" fg:x="876" fg:w="15"/><text x="72.7666%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.16%)</title><rect x="72.5993%" y="421" width="1.1589%" height="15" fill="rgb(214,219,24)" fg:x="877" fg:w="14"/><text x="72.8493%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (11 samples, 0.91%)</title><rect x="72.8477%" y="405" width="0.9106%" height="15" fill="rgb(235,32,7)" fg:x="880" fg:w="11"/><text x="73.0977%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="73.5927%" y="389" width="0.1656%" height="15" fill="rgb(227,121,28)" fg:x="889" fg:w="2"/><text x="73.8427%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="73.7583%" y="453" width="0.0828%" height="15" fill="rgb(216,129,49)" fg:x="891" fg:w="1"/><text x="74.0083%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="73.7583%" y="437" width="0.0828%" height="15" fill="rgb(207,194,50)" fg:x="891" fg:w="1"/><text x="74.0083%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0894%" y="437" width="0.0828%" height="15" fill="rgb(207,4,18)" fg:x="895" fg:w="1"/><text x="74.3394%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.1722%" y="437" width="0.0828%" height="15" fill="rgb(213,50,30)" fg:x="896" fg:w="1"/><text x="74.4222%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.3377%" y="421" width="0.0828%" height="15" fill="rgb(208,77,22)" fg:x="898" fg:w="1"/><text x="74.5877%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="74.4205%" y="405" width="0.2483%" height="15" fill="rgb(244,204,34)" fg:x="899" fg:w="3"/><text x="74.6705%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="74.4205%" y="389" width="0.2483%" height="15" fill="rgb(230,20,17)" fg:x="899" fg:w="3"/><text x="74.6705%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="74.4205%" y="373" width="0.2483%" height="15" fill="rgb(237,83,15)" fg:x="899" fg:w="3"/><text x="74.6705%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="74.6689%" y="405" width="0.3311%" height="15" fill="rgb(221,109,25)" fg:x="902" fg:w="4"/><text x="74.9189%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="74.6689%" y="389" width="0.3311%" height="15" fill="rgb(205,194,52)" fg:x="902" fg:w="4"/><text x="74.9189%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.17%)</title><rect x="74.8344%" y="373" width="0.1656%" height="15" fill="rgb(244,173,54)" fg:x="904" fg:w="2"/><text x="75.0844%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.9172%" y="357" width="0.0828%" height="15" fill="rgb(227,181,18)" fg:x="905" fg:w="1"/><text x="75.1672%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.9172%" y="341" width="0.0828%" height="15" fill="rgb(238,36,30)" fg:x="905" fg:w="1"/><text x="75.1672%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9172%" y="325" width="0.0828%" height="15" fill="rgb(254,85,0)" fg:x="905" fg:w="1"/><text x="75.1672%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.1656%" y="389" width="0.0828%" height="15" fill="rgb(247,63,33)" fg:x="908" fg:w="1"/><text x="75.4156%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="75.2483%" y="389" width="0.0828%" height="15" fill="rgb(220,7,54)" fg:x="909" fg:w="1"/><text x="75.4983%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4139%" y="373" width="0.0828%" height="15" fill="rgb(238,227,21)" fg:x="911" fg:w="1"/><text x="75.6639%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="75.3311%" y="389" width="0.2483%" height="15" fill="rgb(237,29,31)" fg:x="910" fg:w="3"/><text x="75.5811%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.4967%" y="373" width="0.0828%" height="15" fill="rgb(211,21,50)" fg:x="912" fg:w="1"/><text x="75.7467%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4967%" y="357" width="0.0828%" height="15" fill="rgb(239,119,2)" fg:x="912" fg:w="1"/><text x="75.7467%" y="367.50"></text></g><g><title>&lt;plugins_rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (162 samples, 13.41%)</title><rect x="62.3344%" y="517" width="13.4106%" height="15" fill="rgb(250,2,39)" fg:x="753" fg:w="162"/><text x="62.5844%" y="527.50">&lt;plugins_rpc_proto::..</text></g><g><title>kernel::model::EntityPtr::to_json_value (64 samples, 5.30%)</title><rect x="70.4470%" y="501" width="5.2980%" height="15" fill="rgb(244,46,53)" fg:x="851" fg:w="64"/><text x="70.6970%" y="511.50">kernel..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (64 samples, 5.30%)</title><rect x="70.4470%" y="485" width="5.2980%" height="15" fill="rgb(209,21,19)" fg:x="851" fg:w="64"/><text x="70.6970%" y="495.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (63 samples, 5.22%)</title><rect x="70.5298%" y="469" width="5.2152%" height="15" fill="rgb(236,145,4)" fg:x="852" fg:w="63"/><text x="70.7798%" y="479.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.90%)</title><rect x="73.8411%" y="453" width="1.9040%" height="15" fill="rgb(220,133,36)" fg:x="892" fg:w="23"/><text x="74.0911%" y="463.50">s..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (18 samples, 1.49%)</title><rect x="74.2550%" y="437" width="1.4901%" height="15" fill="rgb(244,18,3)" fg:x="897" fg:w="18"/><text x="74.5050%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.32%)</title><rect x="74.4205%" y="421" width="1.3245%" height="15" fill="rgb(232,171,48)" fg:x="899" fg:w="16"/><text x="74.6705%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.75%)</title><rect x="75.0000%" y="405" width="0.7450%" height="15" fill="rgb(223,223,53)" fg:x="906" fg:w="9"/><text x="75.2500%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="75.5795%" y="389" width="0.1656%" height="15" fill="rgb(246,92,13)" fg:x="913" fg:w="2"/><text x="75.8295%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (306 samples, 25.33%)</title><rect x="50.5795%" y="581" width="25.3311%" height="15" fill="rgb(229,171,10)" fg:x="611" fg:w="306"/><text x="50.8295%" y="591.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (184 samples, 15.23%)</title><rect x="60.6788%" y="565" width="15.2318%" height="15" fill="rgb(213,131,26)" fg:x="733" fg:w="184"/><text x="60.9288%" y="575.50">alloc::vec::in_place_co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (183 samples, 15.15%)</title><rect x="60.7616%" y="549" width="15.1490%" height="15" fill="rgb(242,87,54)" fg:x="734" fg:w="183"/><text x="61.0116%" y="559.50">&lt;core::iter::adapters::..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (182 samples, 15.07%)</title><rect x="60.8444%" y="533" width="15.0662%" height="15" fill="rgb(237,21,35)" fg:x="735" fg:w="182"/><text x="61.0944%" y="543.50">plugins_rpc::sessions::..</text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="75.7450%" y="517" width="0.1656%" height="15" fill="rgb(253,13,47)" fg:x="915" fg:w="2"/><text x="75.9950%" y="527.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (324 samples, 26.82%)</title><rect x="49.1722%" y="597" width="26.8212%" height="15" fill="rgb(215,122,49)" fg:x="594" fg:w="324"/><text x="49.4222%" y="607.50">&lt;plugins_rpc::sessions::SessionServices as ..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9106%" y="581" width="0.0828%" height="15" fill="rgb(209,179,30)" fg:x="917" fg:w="1"/><text x="76.1606%" y="591.50"></text></g><g><title>&lt;plugins_rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="75.9934%" y="597" width="0.0828%" height="15" fill="rgb(235,100,24)" fg:x="918" fg:w="1"/><text x="76.2434%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="75.9934%" y="581" width="0.0828%" height="15" fill="rgb(209,67,24)" fg:x="918" fg:w="1"/><text x="76.2434%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.9934%" y="565" width="0.0828%" height="15" fill="rgb(206,74,32)" fg:x="918" fg:w="1"/><text x="76.2434%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.9934%" y="549" width="0.0828%" height="15" fill="rgb(212,45,25)" fg:x="918" fg:w="1"/><text x="76.2434%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.9934%" y="533" width="0.0828%" height="15" fill="rgb(239,26,3)" fg:x="918" fg:w="1"/><text x="76.2434%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.9934%" y="517" width="0.0828%" height="15" fill="rgb(218,36,15)" fg:x="918" fg:w="1"/><text x="76.2434%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.9934%" y="501" width="0.0828%" height="15" fill="rgb(206,108,24)" fg:x="918" fg:w="1"/><text x="76.2434%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0762%" y="597" width="0.0828%" height="15" fill="rgb(234,204,42)" fg:x="919" fg:w="1"/><text x="76.3262%" y="607.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (360 samples, 29.80%)</title><rect x="46.4404%" y="645" width="29.8013%" height="15" fill="rgb(229,2,11)" fg:x="561" fg:w="360"/><text x="46.6904%" y="655.50">kernel::plugins::SessionPlugins::have_surroundin..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (360 samples, 29.80%)</title><rect x="46.4404%" y="629" width="29.8013%" height="15" fill="rgb(221,20,48)" fg:x="561" fg:w="360"/><text x="46.6904%" y="639.50">&lt;plugins_dynlib::DynamicPlugin as kernel::plugin..</text></g><g><title>plugins_rpc::querying::have_surroundings (328 samples, 27.15%)</title><rect x="49.0894%" y="613" width="27.1523%" height="15" fill="rgb(244,164,10)" fg:x="593" fg:w="328"/><text x="49.3394%" y="623.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="76.1589%" y="597" width="0.0828%" height="15" fill="rgb(243,229,2)" fg:x="920" fg:w="1"/><text x="76.4089%" y="607.50"></text></g><g><title>plugins_rpc_proto::&lt;impl core::convert::Into&lt;plugins_rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="76.1589%" y="581" width="0.0828%" height="15" fill="rgb(232,131,37)" fg:x="920" fg:w="1"/><text x="76.4089%" y="591.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="76.1589%" y="565" width="0.0828%" height="15" fill="rgb(217,156,11)" fg:x="920" fg:w="1"/><text x="76.4089%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="76.1589%" y="549" width="0.0828%" height="15" fill="rgb(239,99,48)" fg:x="920" fg:w="1"/><text x="76.4089%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.1589%" y="533" width="0.0828%" height="15" fill="rgb(231,209,9)" fg:x="920" fg:w="1"/><text x="76.4089%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.1589%" y="517" width="0.0828%" height="15" fill="rgb(254,97,27)" fg:x="920" fg:w="1"/><text x="76.4089%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.1589%" y="501" width="0.0828%" height="15" fill="rgb(223,151,38)" fg:x="920" fg:w="1"/><text x="76.4089%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.1589%" y="485" width="0.0828%" height="15" fill="rgb(219,206,35)" fg:x="920" fg:w="1"/><text x="76.4089%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.1589%" y="469" width="0.0828%" height="15" fill="rgb(216,130,31)" fg:x="920" fg:w="1"/><text x="76.4089%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="76.1589%" y="453" width="0.0828%" height="15" fill="rgb(251,97,34)" fg:x="920" fg:w="1"/><text x="76.4089%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.1589%" y="437" width="0.0828%" height="15" fill="rgb(246,159,47)" fg:x="920" fg:w="1"/><text x="76.4089%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.17%)</title><rect x="76.2417%" y="645" width="0.1656%" height="15" fill="rgb(232,87,10)" fg:x="921" fg:w="2"/><text x="76.4917%" y="655.50"></text></g><g><title>clock_gettime (2 samples, 0.17%)</title><rect x="76.2417%" y="629" width="0.1656%" height="15" fill="rgb(249,1,37)" fg:x="921" fg:w="2"/><text x="76.4917%" y="639.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (424 samples, 35.10%)</title><rect x="41.3907%" y="677" width="35.0993%" height="15" fill="rgb(239,135,14)" fg:x="500" fg:w="424"/><text x="41.6407%" y="687.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (424 samples, 35.10%)</title><rect x="41.3907%" y="661" width="35.0993%" height="15" fill="rgb(253,116,46)" fg:x="500" fg:w="424"/><text x="41.6407%" y="671.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="76.4073%" y="645" width="0.0828%" height="15" fill="rgb(222,217,37)" fg:x="923" fg:w="1"/><text x="76.6573%" y="655.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="76.4073%" y="629" width="0.0828%" height="15" fill="rgb(252,96,8)" fg:x="923" fg:w="1"/><text x="76.6573%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="76.4073%" y="613" width="0.0828%" height="15" fill="rgb(254,103,41)" fg:x="923" fg:w="1"/><text x="76.6573%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="76.4073%" y="597" width="0.0828%" height="15" fill="rgb(218,213,19)" fg:x="923" fg:w="1"/><text x="76.6573%" y="607.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="76.4073%" y="581" width="0.0828%" height="15" fill="rgb(253,95,21)" fg:x="923" fg:w="1"/><text x="76.6573%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (926 samples, 76.66%)</title><rect x="0.0000%" y="725" width="76.6556%" height="15" fill="rgb(229,26,28)" fg:x="0" fg:w="926"/><text x="0.2500%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (926 samples, 76.66%)</title><rect x="0.0000%" y="709" width="76.6556%" height="15" fill="rgb(230,129,16)" fg:x="0" fg:w="926"/><text x="0.2500%" y="719.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (926 samples, 76.66%)</title><rect x="0.0000%" y="693" width="76.6556%" height="15" fill="rgb(236,126,17)" fg:x="0" fg:w="926"/><text x="0.2500%" y="703.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.17%)</title><rect x="76.4901%" y="677" width="0.1656%" height="15" fill="rgb(209,33,33)" fg:x="924" fg:w="2"/><text x="76.7401%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.17%)</title><rect x="76.4901%" y="661" width="0.1656%" height="15" fill="rgb(227,85,29)" fg:x="924" fg:w="2"/><text x="76.7401%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="76.4901%" y="645" width="0.1656%" height="15" fill="rgb(241,53,46)" fg:x="924" fg:w="2"/><text x="76.7401%" y="655.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="76.4901%" y="629" width="0.1656%" height="15" fill="rgb(228,167,53)" fg:x="924" fg:w="2"/><text x="76.7401%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="76.7384%" y="661" width="0.0828%" height="15" fill="rgb(238,195,45)" fg:x="927" fg:w="1"/><text x="76.9884%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.7384%" y="645" width="0.0828%" height="15" fill="rgb(252,124,45)" fg:x="927" fg:w="1"/><text x="76.9884%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.9040%" y="597" width="0.0828%" height="15" fill="rgb(251,38,35)" fg:x="929" fg:w="1"/><text x="77.1540%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9040%" y="581" width="0.0828%" height="15" fill="rgb(227,33,2)" fg:x="929" fg:w="1"/><text x="77.1540%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.41%)</title><rect x="76.6556%" y="677" width="0.4139%" height="15" fill="rgb(223,157,46)" fg:x="926" fg:w="5"/><text x="76.9056%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (3 samples, 0.25%)</title><rect x="76.8212%" y="661" width="0.2483%" height="15" fill="rgb(222,78,41)" fg:x="928" fg:w="3"/><text x="77.0712%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.25%)</title><rect x="76.8212%" y="645" width="0.2483%" height="15" fill="rgb(248,176,11)" fg:x="928" fg:w="3"/><text x="77.0712%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (2 samples, 0.17%)</title><rect x="76.9040%" y="629" width="0.1656%" height="15" fill="rgb(241,221,18)" fg:x="929" fg:w="2"/><text x="77.1540%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="76.9040%" y="613" width="0.1656%" height="15" fill="rgb(218,85,22)" fg:x="929" fg:w="2"/><text x="77.1540%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9868%" y="597" width="0.0828%" height="15" fill="rgb(222,223,7)" fg:x="930" fg:w="1"/><text x="77.2368%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="77.1523%" y="597" width="0.0828%" height="15" fill="rgb(254,59,39)" fg:x="932" fg:w="1"/><text x="77.4023%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="77.1523%" y="581" width="0.0828%" height="15" fill="rgb(247,100,27)" fg:x="932" fg:w="1"/><text x="77.4023%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1523%" y="565" width="0.0828%" height="15" fill="rgb(237,207,10)" fg:x="932" fg:w="1"/><text x="77.4023%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1523%" y="549" width="0.0828%" height="15" fill="rgb(220,121,28)" fg:x="932" fg:w="1"/><text x="77.4023%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.1523%" y="533" width="0.0828%" height="15" fill="rgb(213,223,20)" fg:x="932" fg:w="1"/><text x="77.4023%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1523%" y="517" width="0.0828%" height="15" fill="rgb(205,121,27)" fg:x="932" fg:w="1"/><text x="77.4023%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.1523%" y="501" width="0.0828%" height="15" fill="rgb(253,24,53)" fg:x="932" fg:w="1"/><text x="77.4023%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="77.1523%" y="485" width="0.0828%" height="15" fill="rgb(224,224,47)" fg:x="932" fg:w="1"/><text x="77.4023%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.1523%" y="469" width="0.0828%" height="15" fill="rgb(250,125,36)" fg:x="932" fg:w="1"/><text x="77.4023%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1523%" y="453" width="0.0828%" height="15" fill="rgb(240,144,38)" fg:x="932" fg:w="1"/><text x="77.4023%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1523%" y="437" width="0.0828%" height="15" fill="rgb(250,15,50)" fg:x="932" fg:w="1"/><text x="77.4023%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1523%" y="421" width="0.0828%" height="15" fill="rgb(210,24,26)" fg:x="932" fg:w="1"/><text x="77.4023%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.2351%" y="517" width="0.0828%" height="15" fill="rgb(234,53,53)" fg:x="933" fg:w="1"/><text x="77.4851%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.25%)</title><rect x="77.1523%" y="645" width="0.2483%" height="15" fill="rgb(208,108,28)" fg:x="932" fg:w="3"/><text x="77.4023%" y="655.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.25%)</title><rect x="77.1523%" y="629" width="0.2483%" height="15" fill="rgb(227,143,7)" fg:x="932" fg:w="3"/><text x="77.4023%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.25%)</title><rect x="77.1523%" y="613" width="0.2483%" height="15" fill="rgb(238,189,38)" fg:x="932" fg:w="3"/><text x="77.4023%" y="623.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.17%)</title><rect x="77.2351%" y="597" width="0.1656%" height="15" fill="rgb(222,69,15)" fg:x="933" fg:w="2"/><text x="77.4851%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="77.2351%" y="581" width="0.1656%" height="15" fill="rgb(213,169,7)" fg:x="933" fg:w="2"/><text x="77.4851%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="77.2351%" y="565" width="0.1656%" height="15" fill="rgb(251,219,4)" fg:x="933" fg:w="2"/><text x="77.4851%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="77.2351%" y="549" width="0.1656%" height="15" fill="rgb(241,55,40)" fg:x="933" fg:w="2"/><text x="77.4851%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="77.2351%" y="533" width="0.1656%" height="15" fill="rgb(243,57,30)" fg:x="933" fg:w="2"/><text x="77.4851%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.3179%" y="517" width="0.0828%" height="15" fill="rgb(234,50,30)" fg:x="934" fg:w="1"/><text x="77.5679%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.3179%" y="501" width="0.0828%" height="15" fill="rgb(239,23,42)" fg:x="934" fg:w="1"/><text x="77.5679%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.3179%" y="485" width="0.0828%" height="15" fill="rgb(217,38,19)" fg:x="934" fg:w="1"/><text x="77.5679%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.3179%" y="469" width="0.0828%" height="15" fill="rgb(215,179,16)" fg:x="934" fg:w="1"/><text x="77.5679%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.3179%" y="453" width="0.0828%" height="15" fill="rgb(254,21,37)" fg:x="934" fg:w="1"/><text x="77.5679%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3179%" y="437" width="0.0828%" height="15" fill="rgb(219,207,48)" fg:x="934" fg:w="1"/><text x="77.5679%" y="447.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="77.4834%" y="597" width="0.0828%" height="15" fill="rgb(227,225,41)" fg:x="936" fg:w="1"/><text x="77.7334%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.33%)</title><rect x="77.4007%" y="629" width="0.3311%" height="15" fill="rgb(223,130,1)" fg:x="935" fg:w="4"/><text x="77.6507%" y="639.50"></text></g><g><title>libloading::os::unix::Library::open (4 samples, 0.33%)</title><rect x="77.4007%" y="613" width="0.3311%" height="15" fill="rgb(249,54,42)" fg:x="935" fg:w="4"/><text x="77.6507%" y="623.50"></text></g><g><title>dlopen (2 samples, 0.17%)</title><rect x="77.5662%" y="597" width="0.1656%" height="15" fill="rgb(248,69,25)" fg:x="937" fg:w="2"/><text x="77.8162%" y="607.50"></text></g><g><title>_dl_catch_error (1 samples, 0.08%)</title><rect x="77.6490%" y="581" width="0.0828%" height="15" fill="rgb(234,21,32)" fg:x="938" fg:w="1"/><text x="77.8990%" y="591.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="77.6490%" y="565" width="0.0828%" height="15" fill="rgb(252,136,6)" fg:x="938" fg:w="1"/><text x="77.8990%" y="575.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="77.6490%" y="549" width="0.0828%" height="15" fill="rgb(245,87,12)" fg:x="938" fg:w="1"/><text x="77.8990%" y="559.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="77.6490%" y="533" width="0.0828%" height="15" fill="rgb(208,12,15)" fg:x="938" fg:w="1"/><text x="77.8990%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (10 samples, 0.83%)</title><rect x="77.0695%" y="677" width="0.8278%" height="15" fill="rgb(250,98,2)" fg:x="931" fg:w="10"/><text x="77.3195%" y="687.50"></text></g><g><title>engine::session::Session::new (9 samples, 0.75%)</title><rect x="77.1523%" y="661" width="0.7450%" height="15" fill="rgb(205,213,15)" fg:x="932" fg:w="9"/><text x="77.4023%" y="671.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.50%)</title><rect x="77.4007%" y="645" width="0.4967%" height="15" fill="rgb(248,192,44)" fg:x="935" fg:w="6"/><text x="77.6507%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.17%)</title><rect x="77.7318%" y="629" width="0.1656%" height="15" fill="rgb(221,89,17)" fg:x="939" fg:w="2"/><text x="77.9818%" y="639.50"></text></g><g><title>clock_gettime (2 samples, 0.17%)</title><rect x="77.7318%" y="613" width="0.1656%" height="15" fill="rgb(209,55,3)" fg:x="939" fg:w="2"/><text x="77.9818%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="77.8974%" y="629" width="0.0828%" height="15" fill="rgb(247,23,45)" fg:x="941" fg:w="1"/><text x="78.1474%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8974%" y="613" width="0.0828%" height="15" fill="rgb(235,152,23)" fg:x="941" fg:w="1"/><text x="78.1474%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8974%" y="597" width="0.0828%" height="15" fill="rgb(244,63,13)" fg:x="941" fg:w="1"/><text x="78.1474%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.8974%" y="581" width="0.0828%" height="15" fill="rgb(227,30,37)" fg:x="941" fg:w="1"/><text x="78.1474%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.8974%" y="565" width="0.0828%" height="15" fill="rgb(224,49,42)" fg:x="941" fg:w="1"/><text x="78.1474%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.8974%" y="549" width="0.0828%" height="15" fill="rgb(218,129,5)" fg:x="941" fg:w="1"/><text x="78.1474%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8974%" y="533" width="0.0828%" height="15" fill="rgb(240,199,54)" fg:x="941" fg:w="1"/><text x="78.1474%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8974%" y="517" width="0.0828%" height="15" fill="rgb(234,31,13)" fg:x="941" fg:w="1"/><text x="78.1474%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.8974%" y="501" width="0.0828%" height="15" fill="rgb(219,73,54)" fg:x="941" fg:w="1"/><text x="78.1474%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.8974%" y="485" width="0.0828%" height="15" fill="rgb(251,162,10)" fg:x="941" fg:w="1"/><text x="78.1474%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.8974%" y="469" width="0.0828%" height="15" fill="rgb(240,138,47)" fg:x="941" fg:w="1"/><text x="78.1474%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.8974%" y="453" width="0.0828%" height="15" fill="rgb(216,138,26)" fg:x="941" fg:w="1"/><text x="78.1474%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8974%" y="437" width="0.0828%" height="15" fill="rgb(243,17,35)" fg:x="941" fg:w="1"/><text x="78.1474%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="77.9801%" y="581" width="0.0828%" height="15" fill="rgb(241,60,18)" fg:x="942" fg:w="1"/><text x="78.2301%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.9801%" y="565" width="0.0828%" height="15" fill="rgb(234,2,44)" fg:x="942" fg:w="1"/><text x="78.2301%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.9801%" y="549" width="0.0828%" height="15" fill="rgb(225,225,33)" fg:x="942" fg:w="1"/><text x="78.2301%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="78.0629%" y="565" width="0.3311%" height="15" fill="rgb(234,50,31)" fg:x="943" fg:w="4"/><text x="78.3129%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="78.2285%" y="549" width="0.1656%" height="15" fill="rgb(249,6,25)" fg:x="945" fg:w="2"/><text x="78.4785%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.3113%" y="533" width="0.0828%" height="15" fill="rgb(241,5,17)" fg:x="946" fg:w="1"/><text x="78.5613%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="78.3113%" y="517" width="0.0828%" height="15" fill="rgb(207,116,10)" fg:x="946" fg:w="1"/><text x="78.5613%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.3940%" y="549" width="0.0828%" height="15" fill="rgb(222,128,18)" fg:x="947" fg:w="1"/><text x="78.6440%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.3940%" y="533" width="0.0828%" height="15" fill="rgb(229,109,25)" fg:x="947" fg:w="1"/><text x="78.6440%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="78.4768%" y="533" width="0.1656%" height="15" fill="rgb(222,102,25)" fg:x="948" fg:w="2"/><text x="78.7268%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.5596%" y="517" width="0.0828%" height="15" fill="rgb(239,211,5)" fg:x="949" fg:w="1"/><text x="78.8096%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.5596%" y="501" width="0.0828%" height="15" fill="rgb(223,136,26)" fg:x="949" fg:w="1"/><text x="78.8096%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.5596%" y="485" width="0.0828%" height="15" fill="rgb(227,30,15)" fg:x="949" fg:w="1"/><text x="78.8096%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="78.6424%" y="533" width="0.1656%" height="15" fill="rgb(247,76,4)" fg:x="950" fg:w="2"/><text x="78.8924%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="78.6424%" y="517" width="0.1656%" height="15" fill="rgb(245,38,48)" fg:x="950" fg:w="2"/><text x="78.8924%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.7252%" y="501" width="0.0828%" height="15" fill="rgb(210,220,14)" fg:x="951" fg:w="1"/><text x="78.9752%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.91%)</title><rect x="77.9801%" y="597" width="0.9106%" height="15" fill="rgb(224,60,51)" fg:x="942" fg:w="11"/><text x="78.2301%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.83%)</title><rect x="78.0629%" y="581" width="0.8278%" height="15" fill="rgb(212,133,49)" fg:x="943" fg:w="10"/><text x="78.3129%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.50%)</title><rect x="78.3940%" y="565" width="0.4967%" height="15" fill="rgb(231,39,22)" fg:x="947" fg:w="6"/><text x="78.6440%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="78.4768%" y="549" width="0.4139%" height="15" fill="rgb(236,173,22)" fg:x="948" fg:w="5"/><text x="78.7268%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8079%" y="533" width="0.0828%" height="15" fill="rgb(210,70,0)" fg:x="952" fg:w="1"/><text x="79.0579%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.8079%" y="517" width="0.0828%" height="15" fill="rgb(215,170,11)" fg:x="952" fg:w="1"/><text x="79.0579%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.8079%" y="501" width="0.0828%" height="15" fill="rgb(220,154,28)" fg:x="952" fg:w="1"/><text x="79.0579%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.8907%" y="565" width="0.0828%" height="15" fill="rgb(240,160,41)" fg:x="953" fg:w="1"/><text x="79.1407%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="78.8907%" y="597" width="0.1656%" height="15" fill="rgb(243,215,41)" fg:x="953" fg:w="2"/><text x="79.1407%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="78.8907%" y="581" width="0.1656%" height="15" fill="rgb(214,208,31)" fg:x="953" fg:w="2"/><text x="79.1407%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.9735%" y="565" width="0.0828%" height="15" fill="rgb(247,57,22)" fg:x="954" fg:w="1"/><text x="79.2235%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.9735%" y="549" width="0.0828%" height="15" fill="rgb(228,73,52)" fg:x="954" fg:w="1"/><text x="79.2235%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.9735%" y="533" width="0.0828%" height="15" fill="rgb(252,60,9)" fg:x="954" fg:w="1"/><text x="79.2235%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0563%" y="549" width="0.0828%" height="15" fill="rgb(233,9,51)" fg:x="955" fg:w="1"/><text x="79.3063%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0563%" y="533" width="0.0828%" height="15" fill="rgb(223,67,14)" fg:x="955" fg:w="1"/><text x="79.3063%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="79.0563%" y="517" width="0.0828%" height="15" fill="rgb(222,86,2)" fg:x="955" fg:w="1"/><text x="79.3063%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.1391%" y="549" width="0.0828%" height="15" fill="rgb(243,58,54)" fg:x="956" fg:w="1"/><text x="79.3891%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.1391%" y="533" width="0.0828%" height="15" fill="rgb(210,200,39)" fg:x="956" fg:w="1"/><text x="79.3891%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.1391%" y="517" width="0.0828%" height="15" fill="rgb(238,135,9)" fg:x="956" fg:w="1"/><text x="79.3891%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.2219%" y="517" width="0.0828%" height="15" fill="rgb(232,179,7)" fg:x="957" fg:w="1"/><text x="79.4719%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.25%)</title><rect x="79.2219%" y="549" width="0.2483%" height="15" fill="rgb(245,65,41)" fg:x="957" fg:w="3"/><text x="79.4719%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="79.2219%" y="533" width="0.2483%" height="15" fill="rgb(227,43,8)" fg:x="957" fg:w="3"/><text x="79.4719%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.17%)</title><rect x="79.3046%" y="517" width="0.1656%" height="15" fill="rgb(235,91,14)" fg:x="958" fg:w="2"/><text x="79.5546%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.17%)</title><rect x="79.3046%" y="501" width="0.1656%" height="15" fill="rgb(235,219,31)" fg:x="958" fg:w="2"/><text x="79.5546%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.3874%" y="485" width="0.0828%" height="15" fill="rgb(227,121,25)" fg:x="959" fg:w="1"/><text x="79.6374%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3874%" y="469" width="0.0828%" height="15" fill="rgb(254,129,24)" fg:x="959" fg:w="1"/><text x="79.6374%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.3874%" y="453" width="0.0828%" height="15" fill="rgb(226,144,49)" fg:x="959" fg:w="1"/><text x="79.6374%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.3874%" y="437" width="0.0828%" height="15" fill="rgb(214,187,32)" fg:x="959" fg:w="1"/><text x="79.6374%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.3874%" y="421" width="0.0828%" height="15" fill="rgb(243,129,46)" fg:x="959" fg:w="1"/><text x="79.6374%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3874%" y="405" width="0.0828%" height="15" fill="rgb(221,185,35)" fg:x="959" fg:w="1"/><text x="79.6374%" y="415.50"></text></g><g><title>engine::session::Session::flush (21 samples, 1.74%)</title><rect x="77.8974%" y="661" width="1.7384%" height="15" fill="rgb(205,0,32)" fg:x="941" fg:w="21"/><text x="78.1474%" y="671.50"></text></g><g><title>engine::session::Session::save_entity_changes (21 samples, 1.74%)</title><rect x="77.8974%" y="645" width="1.7384%" height="15" fill="rgb(229,179,12)" fg:x="941" fg:w="21"/><text x="78.1474%" y="655.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (20 samples, 1.66%)</title><rect x="77.9801%" y="629" width="1.6556%" height="15" fill="rgb(252,107,19)" fg:x="942" fg:w="20"/><text x="78.2301%" y="639.50"></text></g><g><title>engine::session::Session::check_for_changes (20 samples, 1.66%)</title><rect x="77.9801%" y="613" width="1.6556%" height="15" fill="rgb(220,95,27)" fg:x="942" fg:w="20"/><text x="78.2301%" y="623.50"></text></g><g><title>kernel::compare::any_entity_changes (7 samples, 0.58%)</title><rect x="79.0563%" y="597" width="0.5795%" height="15" fill="rgb(240,113,40)" fg:x="955" fg:w="7"/><text x="79.3063%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (7 samples, 0.58%)</title><rect x="79.0563%" y="581" width="0.5795%" height="15" fill="rgb(208,4,43)" fg:x="955" fg:w="7"/><text x="79.3063%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.58%)</title><rect x="79.0563%" y="565" width="0.5795%" height="15" fill="rgb(247,189,30)" fg:x="955" fg:w="7"/><text x="79.3063%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.17%)</title><rect x="79.4702%" y="549" width="0.1656%" height="15" fill="rgb(231,157,17)" fg:x="960" fg:w="2"/><text x="79.7202%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (2 samples, 0.17%)</title><rect x="79.4702%" y="533" width="0.1656%" height="15" fill="rgb(224,139,6)" fg:x="960" fg:w="2"/><text x="79.7202%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.5530%" y="517" width="0.0828%" height="15" fill="rgb(223,83,16)" fg:x="961" fg:w="1"/><text x="79.8030%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5530%" y="501" width="0.0828%" height="15" fill="rgb(232,211,20)" fg:x="961" fg:w="1"/><text x="79.8030%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (2 samples, 0.17%)</title><rect x="79.6358%" y="661" width="0.1656%" height="15" fill="rgb(225,203,35)" fg:x="962" fg:w="2"/><text x="79.8858%" y="671.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.17%)</title><rect x="79.6358%" y="645" width="0.1656%" height="15" fill="rgb(215,211,44)" fg:x="962" fg:w="2"/><text x="79.8858%" y="655.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.17%)</title><rect x="79.6358%" y="629" width="0.1656%" height="15" fill="rgb(248,213,26)" fg:x="962" fg:w="2"/><text x="79.8858%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.17%)</title><rect x="79.6358%" y="613" width="0.1656%" height="15" fill="rgb(214,23,52)" fg:x="962" fg:w="2"/><text x="79.8858%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.17%)</title><rect x="79.6358%" y="597" width="0.1656%" height="15" fill="rgb(225,173,50)" fg:x="962" fg:w="2"/><text x="79.8858%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="79.6358%" y="581" width="0.1656%" height="15" fill="rgb(206,150,22)" fg:x="962" fg:w="2"/><text x="79.8858%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="79.6358%" y="565" width="0.1656%" height="15" fill="rgb(239,64,23)" fg:x="962" fg:w="2"/><text x="79.8858%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.17%)</title><rect x="79.6358%" y="549" width="0.1656%" height="15" fill="rgb(242,50,38)" fg:x="962" fg:w="2"/><text x="79.8858%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="79.6358%" y="533" width="0.1656%" height="15" fill="rgb(217,91,15)" fg:x="962" fg:w="2"/><text x="79.8858%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.7185%" y="517" width="0.0828%" height="15" fill="rgb(230,172,6)" fg:x="963" fg:w="1"/><text x="79.9685%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="79.8013%" y="661" width="0.0828%" height="15" fill="rgb(221,98,26)" fg:x="964" fg:w="1"/><text x="80.0513%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="79.8013%" y="645" width="0.0828%" height="15" fill="rgb(227,210,45)" fg:x="964" fg:w="1"/><text x="80.0513%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="79.8013%" y="629" width="0.0828%" height="15" fill="rgb(206,8,30)" fg:x="964" fg:w="1"/><text x="80.0513%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="79.8013%" y="613" width="0.0828%" height="15" fill="rgb(241,219,17)" fg:x="964" fg:w="1"/><text x="80.0513%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.8013%" y="597" width="0.0828%" height="15" fill="rgb(247,121,29)" fg:x="964" fg:w="1"/><text x="80.0513%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.8013%" y="581" width="0.0828%" height="15" fill="rgb(219,169,49)" fg:x="964" fg:w="1"/><text x="80.0513%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.8013%" y="565" width="0.0828%" height="15" fill="rgb(253,49,49)" fg:x="964" fg:w="1"/><text x="80.0513%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.8013%" y="549" width="0.0828%" height="15" fill="rgb(217,178,3)" fg:x="964" fg:w="1"/><text x="80.0513%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="79.8013%" y="533" width="0.0828%" height="15" fill="rgb(234,73,37)" fg:x="964" fg:w="1"/><text x="80.0513%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="79.8841%" y="581" width="0.0828%" height="15" fill="rgb(250,98,22)" fg:x="965" fg:w="1"/><text x="80.1341%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="79.8841%" y="565" width="0.0828%" height="15" fill="rgb(220,108,37)" fg:x="965" fg:w="1"/><text x="80.1341%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.8841%" y="549" width="0.0828%" height="15" fill="rgb(225,168,10)" fg:x="965" fg:w="1"/><text x="80.1341%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.17%)</title><rect x="79.8841%" y="645" width="0.1656%" height="15" fill="rgb(247,215,21)" fg:x="965" fg:w="2"/><text x="80.1341%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="79.8841%" y="629" width="0.1656%" height="15" fill="rgb(253,189,31)" fg:x="965" fg:w="2"/><text x="80.1341%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.17%)</title><rect x="79.8841%" y="613" width="0.1656%" height="15" fill="rgb(241,54,22)" fg:x="965" fg:w="2"/><text x="80.1341%" y="623.50"></text></g><g><title>plugins_core::build::Build::leads_to (2 samples, 0.17%)</title><rect x="79.8841%" y="597" width="0.1656%" height="15" fill="rgb(211,87,4)" fg:x="965" fg:w="2"/><text x="80.1341%" y="607.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="79.9669%" y="581" width="0.0828%" height="15" fill="rgb(245,112,24)" fg:x="966" fg:w="1"/><text x="80.2169%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="79.9669%" y="565" width="0.0828%" height="15" fill="rgb(235,190,41)" fg:x="966" fg:w="1"/><text x="80.2169%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.0497%" y="613" width="0.0828%" height="15" fill="rgb(214,89,8)" fg:x="967" fg:w="1"/><text x="80.2997%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="80.0497%" y="597" width="0.0828%" height="15" fill="rgb(249,155,35)" fg:x="967" fg:w="1"/><text x="80.2997%" y="607.50"></text></g><g><title>engine::session::Session::save_entity (1 samples, 0.08%)</title><rect x="80.0497%" y="581" width="0.0828%" height="15" fill="rgb(249,88,26)" fg:x="967" fg:w="1"/><text x="80.2997%" y="591.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="80.0497%" y="565" width="0.0828%" height="15" fill="rgb(232,56,8)" fg:x="967" fg:w="1"/><text x="80.2997%" y="575.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="80.1325%" y="613" width="0.0828%" height="15" fill="rgb(240,95,3)" fg:x="968" fg:w="1"/><text x="80.3825%" y="623.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="80.1325%" y="597" width="0.0828%" height="15" fill="rgb(222,44,28)" fg:x="968" fg:w="1"/><text x="80.3825%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="80.1325%" y="581" width="0.0828%" height="15" fill="rgb(234,16,30)" fg:x="968" fg:w="1"/><text x="80.3825%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="80.1325%" y="565" width="0.0828%" height="15" fill="rgb(223,26,17)" fg:x="968" fg:w="1"/><text x="80.3825%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.1325%" y="549" width="0.0828%" height="15" fill="rgb(239,187,47)" fg:x="968" fg:w="1"/><text x="80.3825%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.1325%" y="533" width="0.0828%" height="15" fill="rgb(247,102,50)" fg:x="968" fg:w="1"/><text x="80.3825%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.1325%" y="517" width="0.0828%" height="15" fill="rgb(231,216,22)" fg:x="968" fg:w="1"/><text x="80.3825%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.1325%" y="501" width="0.0828%" height="15" fill="rgb(216,201,26)" fg:x="968" fg:w="1"/><text x="80.3825%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="80.2152%" y="565" width="0.1656%" height="15" fill="rgb(214,186,23)" fg:x="969" fg:w="2"/><text x="80.4652%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.4636%" y="549" width="0.0828%" height="15" fill="rgb(235,184,4)" fg:x="972" fg:w="1"/><text x="80.7136%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4636%" y="533" width="0.0828%" height="15" fill="rgb(244,46,17)" fg:x="972" fg:w="1"/><text x="80.7136%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.4636%" y="517" width="0.0828%" height="15" fill="rgb(248,74,46)" fg:x="972" fg:w="1"/><text x="80.7136%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.4636%" y="501" width="0.0828%" height="15" fill="rgb(243,79,5)" fg:x="972" fg:w="1"/><text x="80.7136%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="80.3808%" y="565" width="0.3311%" height="15" fill="rgb(213,148,1)" fg:x="971" fg:w="4"/><text x="80.6308%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="80.5464%" y="549" width="0.1656%" height="15" fill="rgb(221,30,0)" fg:x="973" fg:w="2"/><text x="80.7964%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.6291%" y="533" width="0.0828%" height="15" fill="rgb(207,85,29)" fg:x="974" fg:w="1"/><text x="80.8791%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.6291%" y="517" width="0.0828%" height="15" fill="rgb(239,31,46)" fg:x="974" fg:w="1"/><text x="80.8791%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.7119%" y="533" width="0.0828%" height="15" fill="rgb(219,6,1)" fg:x="975" fg:w="1"/><text x="80.9619%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7119%" y="517" width="0.0828%" height="15" fill="rgb(229,90,29)" fg:x="975" fg:w="1"/><text x="80.9619%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7119%" y="501" width="0.0828%" height="15" fill="rgb(242,201,42)" fg:x="975" fg:w="1"/><text x="80.9619%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="80.7119%" y="549" width="0.2483%" height="15" fill="rgb(243,80,54)" fg:x="975" fg:w="3"/><text x="80.9619%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="80.7947%" y="533" width="0.1656%" height="15" fill="rgb(223,166,15)" fg:x="976" fg:w="2"/><text x="81.0447%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="80.7947%" y="517" width="0.1656%" height="15" fill="rgb(238,78,27)" fg:x="976" fg:w="2"/><text x="81.0447%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8775%" y="501" width="0.0828%" height="15" fill="rgb(235,28,43)" fg:x="977" fg:w="1"/><text x="81.1275%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8775%" y="485" width="0.0828%" height="15" fill="rgb(240,210,28)" fg:x="977" fg:w="1"/><text x="81.1275%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.99%)</title><rect x="80.2152%" y="581" width="0.9934%" height="15" fill="rgb(253,6,46)" fg:x="969" fg:w="12"/><text x="80.4652%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.50%)</title><rect x="80.7119%" y="565" width="0.4967%" height="15" fill="rgb(250,159,47)" fg:x="975" fg:w="6"/><text x="80.9619%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="80.9603%" y="549" width="0.2483%" height="15" fill="rgb(216,139,2)" fg:x="978" fg:w="3"/><text x="81.2103%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="80.9603%" y="533" width="0.2483%" height="15" fill="rgb(221,124,44)" fg:x="978" fg:w="3"/><text x="81.2103%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="80.9603%" y="517" width="0.2483%" height="15" fill="rgb(205,37,22)" fg:x="978" fg:w="3"/><text x="81.2103%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="81.0430%" y="501" width="0.1656%" height="15" fill="rgb(250,55,8)" fg:x="979" fg:w="2"/><text x="81.2930%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="81.0430%" y="485" width="0.1656%" height="15" fill="rgb(215,83,48)" fg:x="979" fg:w="2"/><text x="81.2930%" y="495.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="81.0430%" y="469" width="0.1656%" height="15" fill="rgb(253,2,32)" fg:x="979" fg:w="2"/><text x="81.2930%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.2086%" y="549" width="0.0828%" height="15" fill="rgb(236,67,28)" fg:x="981" fg:w="1"/><text x="81.4586%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.2914%" y="517" width="0.0828%" height="15" fill="rgb(252,55,15)" fg:x="982" fg:w="1"/><text x="81.5414%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3742%" y="517" width="0.0828%" height="15" fill="rgb(243,173,17)" fg:x="983" fg:w="1"/><text x="81.6242%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3742%" y="501" width="0.0828%" height="15" fill="rgb(215,212,13)" fg:x="983" fg:w="1"/><text x="81.6242%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="81.2086%" y="581" width="0.3311%" height="15" fill="rgb(253,176,6)" fg:x="981" fg:w="4"/><text x="81.4586%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.33%)</title><rect x="81.2086%" y="565" width="0.3311%" height="15" fill="rgb(236,105,26)" fg:x="981" fg:w="4"/><text x="81.4586%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="81.2914%" y="549" width="0.2483%" height="15" fill="rgb(239,226,32)" fg:x="982" fg:w="3"/><text x="81.5414%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="81.2914%" y="533" width="0.2483%" height="15" fill="rgb(236,104,51)" fg:x="982" fg:w="3"/><text x="81.5414%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.4570%" y="517" width="0.0828%" height="15" fill="rgb(220,172,33)" fg:x="984" fg:w="1"/><text x="81.7070%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="81.7053%" y="533" width="0.1656%" height="15" fill="rgb(224,182,25)" fg:x="987" fg:w="2"/><text x="81.9553%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="81.7053%" y="517" width="0.1656%" height="15" fill="rgb(236,184,24)" fg:x="987" fg:w="2"/><text x="81.9553%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.17%)</title><rect x="81.7053%" y="501" width="0.1656%" height="15" fill="rgb(241,221,14)" fg:x="987" fg:w="2"/><text x="81.9553%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8709%" y="501" width="0.0828%" height="15" fill="rgb(227,146,5)" fg:x="989" fg:w="1"/><text x="82.1209%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.0364%" y="469" width="0.0828%" height="15" fill="rgb(214,15,23)" fg:x="991" fg:w="1"/><text x="82.2864%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0364%" y="453" width="0.0828%" height="15" fill="rgb(233,157,31)" fg:x="991" fg:w="1"/><text x="82.2864%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0364%" y="437" width="0.0828%" height="15" fill="rgb(211,27,52)" fg:x="991" fg:w="1"/><text x="82.2864%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.33%)</title><rect x="81.8709%" y="533" width="0.3311%" height="15" fill="rgb(212,223,15)" fg:x="989" fg:w="4"/><text x="82.1209%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="81.8709%" y="517" width="0.3311%" height="15" fill="rgb(254,211,0)" fg:x="989" fg:w="4"/><text x="82.1209%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.25%)</title><rect x="81.9536%" y="501" width="0.2483%" height="15" fill="rgb(205,43,38)" fg:x="990" fg:w="3"/><text x="82.2036%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.17%)</title><rect x="82.0364%" y="485" width="0.1656%" height="15" fill="rgb(242,206,46)" fg:x="991" fg:w="2"/><text x="82.2864%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1192%" y="469" width="0.0828%" height="15" fill="rgb(220,221,12)" fg:x="992" fg:w="1"/><text x="82.3692%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1192%" y="453" width="0.0828%" height="15" fill="rgb(217,156,35)" fg:x="992" fg:w="1"/><text x="82.3692%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2020%" y="517" width="0.0828%" height="15" fill="rgb(207,181,49)" fg:x="993" fg:w="1"/><text x="82.4520%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2020%" y="501" width="0.0828%" height="15" fill="rgb(235,103,47)" fg:x="993" fg:w="1"/><text x="82.4520%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.2020%" y="485" width="0.0828%" height="15" fill="rgb(222,63,28)" fg:x="993" fg:w="1"/><text x="82.4520%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2848%" y="485" width="0.0828%" height="15" fill="rgb(244,137,21)" fg:x="994" fg:w="1"/><text x="82.5348%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.3675%" y="485" width="0.0828%" height="15" fill="rgb(228,35,27)" fg:x="995" fg:w="1"/><text x="82.6175%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3675%" y="469" width="0.0828%" height="15" fill="rgb(226,191,41)" fg:x="995" fg:w="1"/><text x="82.6175%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.3675%" y="453" width="0.0828%" height="15" fill="rgb(210,154,3)" fg:x="995" fg:w="1"/><text x="82.6175%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3675%" y="437" width="0.0828%" height="15" fill="rgb(216,60,49)" fg:x="995" fg:w="1"/><text x="82.6175%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="82.2848%" y="501" width="0.3311%" height="15" fill="rgb(226,17,20)" fg:x="994" fg:w="4"/><text x="82.5348%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="82.4503%" y="485" width="0.1656%" height="15" fill="rgb(206,115,35)" fg:x="996" fg:w="2"/><text x="82.7003%" y="495.50"></text></g><g><title>engine::session::Session::flush (32 samples, 2.65%)</title><rect x="80.0497%" y="645" width="2.6490%" height="15" fill="rgb(227,88,1)" fg:x="967" fg:w="32"/><text x="80.2997%" y="655.50">en..</text></g><g><title>engine::session::Session::save_entity_changes (32 samples, 2.65%)</title><rect x="80.0497%" y="629" width="2.6490%" height="15" fill="rgb(230,222,24)" fg:x="967" fg:w="32"/><text x="80.2997%" y="639.50">en..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (30 samples, 2.48%)</title><rect x="80.2152%" y="613" width="2.4834%" height="15" fill="rgb(214,124,32)" fg:x="969" fg:w="30"/><text x="80.4652%" y="623.50">en..</text></g><g><title>engine::session::Session::check_for_changes (30 samples, 2.48%)</title><rect x="80.2152%" y="597" width="2.4834%" height="15" fill="rgb(240,41,36)" fg:x="969" fg:w="30"/><text x="80.4652%" y="607.50">en..</text></g><g><title>kernel::compare::any_entity_changes (14 samples, 1.16%)</title><rect x="81.5397%" y="581" width="1.1589%" height="15" fill="rgb(221,17,52)" fg:x="985" fg:w="14"/><text x="81.7897%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (13 samples, 1.08%)</title><rect x="81.6225%" y="565" width="1.0762%" height="15" fill="rgb(252,70,16)" fg:x="986" fg:w="13"/><text x="81.8725%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.08%)</title><rect x="81.6225%" y="549" width="1.0762%" height="15" fill="rgb(250,177,4)" fg:x="986" fg:w="13"/><text x="81.8725%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.50%)</title><rect x="82.2020%" y="533" width="0.4967%" height="15" fill="rgb(240,188,47)" fg:x="993" fg:w="6"/><text x="82.4520%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (5 samples, 0.41%)</title><rect x="82.2848%" y="517" width="0.4139%" height="15" fill="rgb(215,92,12)" fg:x="994" fg:w="5"/><text x="82.5348%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.6159%" y="501" width="0.0828%" height="15" fill="rgb(242,110,29)" fg:x="998" fg:w="1"/><text x="82.8659%" y="511.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="82.6159%" y="485" width="0.0828%" height="15" fill="rgb(208,211,26)" fg:x="998" fg:w="1"/><text x="82.8659%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.6159%" y="469" width="0.0828%" height="15" fill="rgb(244,147,6)" fg:x="998" fg:w="1"/><text x="82.8659%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="82.6987%" y="613" width="0.0828%" height="15" fill="rgb(211,130,42)" fg:x="999" fg:w="1"/><text x="82.9487%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.6987%" y="597" width="0.0828%" height="15" fill="rgb(220,63,1)" fg:x="999" fg:w="1"/><text x="82.9487%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.6987%" y="581" width="0.0828%" height="15" fill="rgb(241,212,30)" fg:x="999" fg:w="1"/><text x="82.9487%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.6987%" y="565" width="0.0828%" height="15" fill="rgb(233,153,17)" fg:x="999" fg:w="1"/><text x="82.9487%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.6987%" y="549" width="0.0828%" height="15" fill="rgb(236,3,10)" fg:x="999" fg:w="1"/><text x="82.9487%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.6987%" y="533" width="0.0828%" height="15" fill="rgb(232,41,21)" fg:x="999" fg:w="1"/><text x="82.9487%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.6987%" y="517" width="0.0828%" height="15" fill="rgb(206,63,51)" fg:x="999" fg:w="1"/><text x="82.9487%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.6987%" y="501" width="0.0828%" height="15" fill="rgb(250,214,3)" fg:x="999" fg:w="1"/><text x="82.9487%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.6987%" y="485" width="0.0828%" height="15" fill="rgb(254,89,27)" fg:x="999" fg:w="1"/><text x="82.9487%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.6987%" y="469" width="0.0828%" height="15" fill="rgb(249,41,14)" fg:x="999" fg:w="1"/><text x="82.9487%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.6987%" y="453" width="0.0828%" height="15" fill="rgb(221,196,51)" fg:x="999" fg:w="1"/><text x="82.9487%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="82.6987%" y="437" width="0.0828%" height="15" fill="rgb(214,116,26)" fg:x="999" fg:w="1"/><text x="82.9487%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.6987%" y="421" width="0.0828%" height="15" fill="rgb(236,67,7)" fg:x="999" fg:w="1"/><text x="82.9487%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.6987%" y="405" width="0.0828%" height="15" fill="rgb(253,179,32)" fg:x="999" fg:w="1"/><text x="82.9487%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.6987%" y="389" width="0.0828%" height="15" fill="rgb(218,33,15)" fg:x="999" fg:w="1"/><text x="82.9487%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="82.6987%" y="373" width="0.0828%" height="15" fill="rgb(217,202,41)" fg:x="999" fg:w="1"/><text x="82.9487%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="82.6987%" y="629" width="0.4139%" height="15" fill="rgb(234,133,5)" fg:x="999" fg:w="5"/><text x="82.9487%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="82.7815%" y="613" width="0.3311%" height="15" fill="rgb(240,47,40)" fg:x="1000" fg:w="4"/><text x="83.0315%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (4 samples, 0.33%)</title><rect x="82.7815%" y="597" width="0.3311%" height="15" fill="rgb(234,166,26)" fg:x="1000" fg:w="4"/><text x="83.0315%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.33%)</title><rect x="82.7815%" y="581" width="0.3311%" height="15" fill="rgb(244,125,51)" fg:x="1000" fg:w="4"/><text x="83.0315%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.25%)</title><rect x="82.8642%" y="565" width="0.2483%" height="15" fill="rgb(229,171,11)" fg:x="1001" fg:w="3"/><text x="83.1142%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.25%)</title><rect x="82.8642%" y="549" width="0.2483%" height="15" fill="rgb(224,38,45)" fg:x="1001" fg:w="3"/><text x="83.1142%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="82.8642%" y="533" width="0.2483%" height="15" fill="rgb(237,27,7)" fg:x="1001" fg:w="3"/><text x="83.1142%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1126%" y="581" width="0.0828%" height="15" fill="rgb(216,52,7)" fg:x="1004" fg:w="1"/><text x="83.3626%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1126%" y="565" width="0.0828%" height="15" fill="rgb(243,11,11)" fg:x="1004" fg:w="1"/><text x="83.3626%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1126%" y="549" width="0.0828%" height="15" fill="rgb(253,167,20)" fg:x="1004" fg:w="1"/><text x="83.3626%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1126%" y="533" width="0.0828%" height="15" fill="rgb(215,207,5)" fg:x="1004" fg:w="1"/><text x="83.3626%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1126%" y="517" width="0.0828%" height="15" fill="rgb(252,127,31)" fg:x="1004" fg:w="1"/><text x="83.3626%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.17%)</title><rect x="83.1126%" y="613" width="0.1656%" height="15" fill="rgb(209,106,27)" fg:x="1004" fg:w="2"/><text x="83.3626%" y="623.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.17%)</title><rect x="83.1126%" y="597" width="0.1656%" height="15" fill="rgb(214,220,18)" fg:x="1004" fg:w="2"/><text x="83.3626%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1954%" y="581" width="0.0828%" height="15" fill="rgb(237,89,12)" fg:x="1005" fg:w="1"/><text x="83.4454%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1954%" y="565" width="0.0828%" height="15" fill="rgb(209,167,36)" fg:x="1005" fg:w="1"/><text x="83.4454%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1954%" y="549" width="0.0828%" height="15" fill="rgb(243,45,22)" fg:x="1005" fg:w="1"/><text x="83.4454%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1954%" y="533" width="0.0828%" height="15" fill="rgb(239,2,46)" fg:x="1005" fg:w="1"/><text x="83.4454%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1954%" y="517" width="0.0828%" height="15" fill="rgb(241,101,0)" fg:x="1005" fg:w="1"/><text x="83.4454%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1954%" y="501" width="0.0828%" height="15" fill="rgb(244,34,31)" fg:x="1005" fg:w="1"/><text x="83.4454%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.1954%" y="485" width="0.0828%" height="15" fill="rgb(248,23,22)" fg:x="1005" fg:w="1"/><text x="83.4454%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.66%)</title><rect x="82.6987%" y="645" width="0.6623%" height="15" fill="rgb(218,27,48)" fg:x="999" fg:w="8"/><text x="82.9487%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.25%)</title><rect x="83.1126%" y="629" width="0.2483%" height="15" fill="rgb(232,78,1)" fg:x="1004" fg:w="3"/><text x="83.3626%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="83.2781%" y="613" width="0.0828%" height="15" fill="rgb(233,169,12)" fg:x="1006" fg:w="1"/><text x="83.5281%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="83.3609%" y="645" width="0.0828%" height="15" fill="rgb(225,222,54)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="83.3609%" y="629" width="0.0828%" height="15" fill="rgb(245,126,29)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="83.3609%" y="613" width="0.0828%" height="15" fill="rgb(241,63,48)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3609%" y="597" width="0.0828%" height="15" fill="rgb(235,126,38)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3609%" y="581" width="0.0828%" height="15" fill="rgb(232,96,49)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.3609%" y="565" width="0.0828%" height="15" fill="rgb(211,146,40)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.3609%" y="549" width="0.0828%" height="15" fill="rgb(247,93,44)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.3609%" y="533" width="0.0828%" height="15" fill="rgb(251,41,49)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3609%" y="517" width="0.0828%" height="15" fill="rgb(218,155,12)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3609%" y="501" width="0.0828%" height="15" fill="rgb(221,161,30)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.3609%" y="485" width="0.0828%" height="15" fill="rgb(221,179,11)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.3609%" y="469" width="0.0828%" height="15" fill="rgb(224,170,48)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.3609%" y="453" width="0.0828%" height="15" fill="rgb(223,117,5)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.3609%" y="437" width="0.0828%" height="15" fill="rgb(209,52,20)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3609%" y="421" width="0.0828%" height="15" fill="rgb(209,19,41)" fg:x="1007" fg:w="1"/><text x="83.6109%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="83.4437%" y="629" width="0.0828%" height="15" fill="rgb(210,177,12)" fg:x="1008" fg:w="1"/><text x="83.6937%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="83.4437%" y="613" width="0.0828%" height="15" fill="rgb(211,159,37)" fg:x="1008" fg:w="1"/><text x="83.6937%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="83.4437%" y="597" width="0.0828%" height="15" fill="rgb(209,20,2)" fg:x="1008" fg:w="1"/><text x="83.6937%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4437%" y="581" width="0.0828%" height="15" fill="rgb(244,3,46)" fg:x="1008" fg:w="1"/><text x="83.6937%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.4437%" y="565" width="0.0828%" height="15" fill="rgb(220,94,38)" fg:x="1008" fg:w="1"/><text x="83.6937%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (45 samples, 3.73%)</title><rect x="79.8841%" y="661" width="3.7252%" height="15" fill="rgb(253,14,31)" fg:x="965" fg:w="45"/><text x="80.1341%" y="671.50">plug..</text></g><g><title>plugins_core::build::Build::with_username (2 samples, 0.17%)</title><rect x="83.4437%" y="645" width="0.1656%" height="15" fill="rgb(234,176,13)" fg:x="1008" fg:w="2"/><text x="83.6937%" y="655.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="83.5265%" y="629" width="0.0828%" height="15" fill="rgb(218,62,25)" fg:x="1009" fg:w="1"/><text x="83.7765%" y="639.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="83.5265%" y="613" width="0.0828%" height="15" fill="rgb(216,124,40)" fg:x="1009" fg:w="1"/><text x="83.7765%" y="623.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="83.5265%" y="597" width="0.0828%" height="15" fill="rgb(228,170,12)" fg:x="1009" fg:w="1"/><text x="83.7765%" y="607.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="83.5265%" y="581" width="0.0828%" height="15" fill="rgb(231,226,5)" fg:x="1009" fg:w="1"/><text x="83.7765%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.5265%" y="565" width="0.0828%" height="15" fill="rgb(237,122,22)" fg:x="1009" fg:w="1"/><text x="83.7765%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.5265%" y="549" width="0.0828%" height="15" fill="rgb(209,185,25)" fg:x="1009" fg:w="1"/><text x="83.7765%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="83.6093%" y="661" width="0.0828%" height="15" fill="rgb(228,200,32)" fg:x="1010" fg:w="1"/><text x="83.8593%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="83.6093%" y="645" width="0.0828%" height="15" fill="rgb(217,140,10)" fg:x="1010" fg:w="1"/><text x="83.8593%" y="655.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="83.6093%" y="629" width="0.0828%" height="15" fill="rgb(253,17,24)" fg:x="1010" fg:w="1"/><text x="83.8593%" y="639.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (71 samples, 5.88%)</title><rect x="77.8974%" y="677" width="5.8775%" height="15" fill="rgb(212,61,6)" fg:x="941" fg:w="71"/><text x="78.1474%" y="687.50">&lt;tests:..</text></g><g><title>plugins_core::build::BuildSurroundings::make (1 samples, 0.08%)</title><rect x="83.6921%" y="661" width="0.0828%" height="15" fill="rgb(205,14,25)" fg:x="1011" fg:w="1"/><text x="83.9421%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="83.6921%" y="645" width="0.0828%" height="15" fill="rgb(232,69,41)" fg:x="1011" fg:w="1"/><text x="83.9421%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="83.6921%" y="629" width="0.0828%" height="15" fill="rgb(241,106,47)" fg:x="1011" fg:w="1"/><text x="83.9421%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.7748%" y="645" width="0.0828%" height="15" fill="rgb(210,213,53)" fg:x="1012" fg:w="1"/><text x="84.0248%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.8576%" y="645" width="0.0828%" height="15" fill="rgb(253,175,27)" fg:x="1013" fg:w="1"/><text x="84.1076%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="83.8576%" y="629" width="0.0828%" height="15" fill="rgb(211,171,24)" fg:x="1013" fg:w="1"/><text x="84.1076%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8576%" y="613" width="0.0828%" height="15" fill="rgb(229,80,7)" fg:x="1013" fg:w="1"/><text x="84.1076%" y="623.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="83.9404%" y="645" width="0.0828%" height="15" fill="rgb(212,46,39)" fg:x="1014" fg:w="1"/><text x="84.1904%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="83.9404%" y="629" width="0.0828%" height="15" fill="rgb(240,80,45)" fg:x="1014" fg:w="1"/><text x="84.1904%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="83.9404%" y="613" width="0.0828%" height="15" fill="rgb(253,177,40)" fg:x="1014" fg:w="1"/><text x="84.1904%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.9404%" y="597" width="0.0828%" height="15" fill="rgb(249,200,15)" fg:x="1014" fg:w="1"/><text x="84.1904%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9404%" y="581" width="0.0828%" height="15" fill="rgb(217,78,26)" fg:x="1014" fg:w="1"/><text x="84.1904%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.9404%" y="565" width="0.0828%" height="15" fill="rgb(254,151,32)" fg:x="1014" fg:w="1"/><text x="84.1904%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9404%" y="549" width="0.0828%" height="15" fill="rgb(226,165,27)" fg:x="1014" fg:w="1"/><text x="84.1904%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.17%)</title><rect x="84.1887%" y="597" width="0.1656%" height="15" fill="rgb(250,206,4)" fg:x="1017" fg:w="2"/><text x="84.4387%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="84.1887%" y="581" width="0.1656%" height="15" fill="rgb(231,229,27)" fg:x="1017" fg:w="2"/><text x="84.4387%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="84.1887%" y="565" width="0.1656%" height="15" fill="rgb(239,217,8)" fg:x="1017" fg:w="2"/><text x="84.4387%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.2715%" y="549" width="0.0828%" height="15" fill="rgb(225,204,27)" fg:x="1018" fg:w="1"/><text x="84.5215%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="84.3543%" y="581" width="0.1656%" height="15" fill="rgb(230,56,32)" fg:x="1019" fg:w="2"/><text x="84.6043%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="84.3543%" y="565" width="0.1656%" height="15" fill="rgb(222,56,27)" fg:x="1019" fg:w="2"/><text x="84.6043%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="84.3543%" y="549" width="0.1656%" height="15" fill="rgb(253,108,27)" fg:x="1019" fg:w="2"/><text x="84.6043%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="84.3543%" y="533" width="0.1656%" height="15" fill="rgb(212,87,36)" fg:x="1019" fg:w="2"/><text x="84.6043%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.4371%" y="517" width="0.0828%" height="15" fill="rgb(247,82,36)" fg:x="1020" fg:w="1"/><text x="84.6871%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.4371%" y="501" width="0.0828%" height="15" fill="rgb(222,143,9)" fg:x="1020" fg:w="1"/><text x="84.6871%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.4371%" y="485" width="0.0828%" height="15" fill="rgb(238,162,48)" fg:x="1020" fg:w="1"/><text x="84.6871%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.6026%" y="565" width="0.0828%" height="15" fill="rgb(221,59,43)" fg:x="1022" fg:w="1"/><text x="84.8526%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.6026%" y="549" width="0.0828%" height="15" fill="rgb(205,166,41)" fg:x="1022" fg:w="1"/><text x="84.8526%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.6026%" y="533" width="0.0828%" height="15" fill="rgb(241,186,40)" fg:x="1022" fg:w="1"/><text x="84.8526%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.6026%" y="517" width="0.0828%" height="15" fill="rgb(216,119,35)" fg:x="1022" fg:w="1"/><text x="84.8526%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.6854%" y="549" width="0.0828%" height="15" fill="rgb(208,68,38)" fg:x="1023" fg:w="1"/><text x="84.9354%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="84.5199%" y="581" width="0.4139%" height="15" fill="rgb(217,113,1)" fg:x="1021" fg:w="5"/><text x="84.7699%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="84.6854%" y="565" width="0.2483%" height="15" fill="rgb(242,153,3)" fg:x="1023" fg:w="3"/><text x="84.9354%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="84.7682%" y="549" width="0.1656%" height="15" fill="rgb(229,76,35)" fg:x="1024" fg:w="2"/><text x="85.0182%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="84.7682%" y="533" width="0.1656%" height="15" fill="rgb(229,125,34)" fg:x="1024" fg:w="2"/><text x="85.0182%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="84.7682%" y="517" width="0.1656%" height="15" fill="rgb(238,179,36)" fg:x="1024" fg:w="2"/><text x="85.0182%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="84.7682%" y="501" width="0.1656%" height="15" fill="rgb(244,183,19)" fg:x="1024" fg:w="2"/><text x="85.0182%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.8510%" y="485" width="0.0828%" height="15" fill="rgb(216,85,49)" fg:x="1025" fg:w="1"/><text x="85.1010%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.83%)</title><rect x="84.1887%" y="613" width="0.8278%" height="15" fill="rgb(208,161,47)" fg:x="1017" fg:w="10"/><text x="84.4387%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.66%)</title><rect x="84.3543%" y="597" width="0.6623%" height="15" fill="rgb(233,210,18)" fg:x="1019" fg:w="8"/><text x="84.6043%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.9338%" y="581" width="0.0828%" height="15" fill="rgb(205,104,42)" fg:x="1026" fg:w="1"/><text x="85.1838%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.9338%" y="565" width="0.0828%" height="15" fill="rgb(248,90,43)" fg:x="1026" fg:w="1"/><text x="85.1838%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.0166%" y="549" width="0.0828%" height="15" fill="rgb(206,198,11)" fg:x="1027" fg:w="1"/><text x="85.2666%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0166%" y="533" width="0.0828%" height="15" fill="rgb(239,165,27)" fg:x="1027" fg:w="1"/><text x="85.2666%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="85.0166%" y="613" width="0.3311%" height="15" fill="rgb(246,44,32)" fg:x="1027" fg:w="4"/><text x="85.2666%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.33%)</title><rect x="85.0166%" y="597" width="0.3311%" height="15" fill="rgb(252,65,42)" fg:x="1027" fg:w="4"/><text x="85.2666%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="85.0166%" y="581" width="0.3311%" height="15" fill="rgb(246,197,18)" fg:x="1027" fg:w="4"/><text x="85.2666%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="85.0166%" y="565" width="0.3311%" height="15" fill="rgb(216,192,4)" fg:x="1027" fg:w="4"/><text x="85.2666%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="85.0993%" y="549" width="0.2483%" height="15" fill="rgb(208,117,10)" fg:x="1028" fg:w="3"/><text x="85.3493%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="85.1821%" y="533" width="0.1656%" height="15" fill="rgb(240,61,47)" fg:x="1029" fg:w="2"/><text x="85.4321%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3477%" y="597" width="0.0828%" height="15" fill="rgb(228,178,21)" fg:x="1031" fg:w="1"/><text x="85.5977%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.3477%" y="581" width="0.0828%" height="15" fill="rgb(219,96,54)" fg:x="1031" fg:w="1"/><text x="85.5977%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3477%" y="565" width="0.0828%" height="15" fill="rgb(250,177,24)" fg:x="1031" fg:w="1"/><text x="85.5977%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3477%" y="549" width="0.0828%" height="15" fill="rgb(242,154,46)" fg:x="1031" fg:w="1"/><text x="85.5977%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3477%" y="533" width="0.0828%" height="15" fill="rgb(226,176,29)" fg:x="1031" fg:w="1"/><text x="85.5977%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3477%" y="517" width="0.0828%" height="15" fill="rgb(226,29,2)" fg:x="1031" fg:w="1"/><text x="85.5977%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.3477%" y="501" width="0.0828%" height="15" fill="rgb(237,104,14)" fg:x="1031" fg:w="1"/><text x="85.5977%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.3477%" y="485" width="0.0828%" height="15" fill="rgb(245,207,31)" fg:x="1031" fg:w="1"/><text x="85.5977%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5132%" y="565" width="0.0828%" height="15" fill="rgb(229,211,45)" fg:x="1033" fg:w="1"/><text x="85.7632%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5960%" y="565" width="0.0828%" height="15" fill="rgb(229,113,15)" fg:x="1034" fg:w="1"/><text x="85.8460%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5960%" y="549" width="0.0828%" height="15" fill="rgb(237,147,15)" fg:x="1034" fg:w="1"/><text x="85.8460%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6788%" y="565" width="0.0828%" height="15" fill="rgb(244,120,12)" fg:x="1035" fg:w="1"/><text x="85.9288%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.6788%" y="549" width="0.0828%" height="15" fill="rgb(205,120,12)" fg:x="1035" fg:w="1"/><text x="85.9288%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="85.7616%" y="533" width="0.1656%" height="15" fill="rgb(231,26,45)" fg:x="1036" fg:w="2"/><text x="86.0116%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="85.7616%" y="517" width="0.1656%" height="15" fill="rgb(246,98,1)" fg:x="1036" fg:w="2"/><text x="86.0116%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="85.7616%" y="501" width="0.1656%" height="15" fill="rgb(207,68,45)" fg:x="1036" fg:w="2"/><text x="86.0116%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9272%" y="517" width="0.0828%" height="15" fill="rgb(231,27,38)" fg:x="1038" fg:w="1"/><text x="86.1772%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9272%" y="501" width="0.0828%" height="15" fill="rgb(214,223,3)" fg:x="1038" fg:w="1"/><text x="86.1772%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9272%" y="485" width="0.0828%" height="15" fill="rgb(228,195,46)" fg:x="1038" fg:w="1"/><text x="86.1772%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0099%" y="485" width="0.0828%" height="15" fill="rgb(231,100,42)" fg:x="1039" fg:w="1"/><text x="86.2599%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0099%" y="469" width="0.0828%" height="15" fill="rgb(236,53,4)" fg:x="1039" fg:w="1"/><text x="86.2599%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0099%" y="453" width="0.0828%" height="15" fill="rgb(230,152,12)" fg:x="1039" fg:w="1"/><text x="86.2599%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (5 samples, 0.41%)</title><rect x="85.7616%" y="565" width="0.4139%" height="15" fill="rgb(226,101,19)" fg:x="1036" fg:w="5"/><text x="86.0116%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.41%)</title><rect x="85.7616%" y="549" width="0.4139%" height="15" fill="rgb(250,149,32)" fg:x="1036" fg:w="5"/><text x="86.0116%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.25%)</title><rect x="85.9272%" y="533" width="0.2483%" height="15" fill="rgb(232,178,12)" fg:x="1038" fg:w="3"/><text x="86.1772%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.17%)</title><rect x="86.0099%" y="517" width="0.1656%" height="15" fill="rgb(246,151,17)" fg:x="1039" fg:w="2"/><text x="86.2599%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="86.0099%" y="501" width="0.1656%" height="15" fill="rgb(252,17,51)" fg:x="1039" fg:w="2"/><text x="86.2599%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="86.0927%" y="485" width="0.0828%" height="15" fill="rgb(250,207,23)" fg:x="1040" fg:w="1"/><text x="86.3427%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.0927%" y="469" width="0.0828%" height="15" fill="rgb(205,27,5)" fg:x="1040" fg:w="1"/><text x="86.3427%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1755%" y="565" width="0.0828%" height="15" fill="rgb(224,32,19)" fg:x="1041" fg:w="1"/><text x="86.4255%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.1755%" y="549" width="0.0828%" height="15" fill="rgb(247,214,40)" fg:x="1041" fg:w="1"/><text x="86.4255%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="86.3411%" y="549" width="0.1656%" height="15" fill="rgb(239,199,17)" fg:x="1043" fg:w="2"/><text x="86.5911%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.5066%" y="517" width="0.0828%" height="15" fill="rgb(251,159,9)" fg:x="1045" fg:w="1"/><text x="86.7566%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.5066%" y="501" width="0.0828%" height="15" fill="rgb(225,78,32)" fg:x="1045" fg:w="1"/><text x="86.7566%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.5066%" y="485" width="0.0828%" height="15" fill="rgb(206,97,47)" fg:x="1045" fg:w="1"/><text x="86.7566%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.5894%" y="517" width="0.0828%" height="15" fill="rgb(227,107,4)" fg:x="1046" fg:w="1"/><text x="86.8394%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.5894%" y="501" width="0.0828%" height="15" fill="rgb(241,146,50)" fg:x="1046" fg:w="1"/><text x="86.8394%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.5894%" y="485" width="0.0828%" height="15" fill="rgb(232,92,30)" fg:x="1046" fg:w="1"/><text x="86.8394%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.5894%" y="469" width="0.0828%" height="15" fill="rgb(222,0,40)" fg:x="1046" fg:w="1"/><text x="86.8394%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.5894%" y="453" width="0.0828%" height="15" fill="rgb(219,54,33)" fg:x="1046" fg:w="1"/><text x="86.8394%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.6722%" y="501" width="0.0828%" height="15" fill="rgb(226,209,28)" fg:x="1047" fg:w="1"/><text x="86.9222%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (17 samples, 1.41%)</title><rect x="85.4305%" y="597" width="1.4073%" height="15" fill="rgb(254,205,35)" fg:x="1032" fg:w="17"/><text x="85.6805%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.41%)</title><rect x="85.4305%" y="581" width="1.4073%" height="15" fill="rgb(230,159,3)" fg:x="1032" fg:w="17"/><text x="85.6805%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.58%)</title><rect x="86.2583%" y="565" width="0.5795%" height="15" fill="rgb(232,190,24)" fg:x="1042" fg:w="7"/><text x="86.5083%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.33%)</title><rect x="86.5066%" y="549" width="0.3311%" height="15" fill="rgb(217,227,44)" fg:x="1045" fg:w="4"/><text x="86.7566%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="86.5066%" y="533" width="0.3311%" height="15" fill="rgb(236,211,1)" fg:x="1045" fg:w="4"/><text x="86.7566%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="86.6722%" y="517" width="0.1656%" height="15" fill="rgb(250,127,46)" fg:x="1047" fg:w="2"/><text x="86.9222%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.7550%" y="501" width="0.0828%" height="15" fill="rgb(229,213,6)" fg:x="1048" fg:w="1"/><text x="87.0050%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.7550%" y="485" width="0.0828%" height="15" fill="rgb(237,15,36)" fg:x="1048" fg:w="1"/><text x="87.0050%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.1689%" y="421" width="0.0828%" height="15" fill="rgb(213,131,41)" fg:x="1053" fg:w="1"/><text x="87.4189%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="87.1689%" y="453" width="0.1656%" height="15" fill="rgb(225,82,44)" fg:x="1053" fg:w="2"/><text x="87.4189%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="87.1689%" y="437" width="0.1656%" height="15" fill="rgb(249,42,11)" fg:x="1053" fg:w="2"/><text x="87.4189%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.2517%" y="421" width="0.0828%" height="15" fill="rgb(253,11,29)" fg:x="1054" fg:w="1"/><text x="87.5017%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.4172%" y="437" width="0.0828%" height="15" fill="rgb(206,8,54)" fg:x="1056" fg:w="1"/><text x="87.6672%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4172%" y="421" width="0.0828%" height="15" fill="rgb(222,186,2)" fg:x="1056" fg:w="1"/><text x="87.6672%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="87.1689%" y="469" width="0.4139%" height="15" fill="rgb(221,206,53)" fg:x="1053" fg:w="5"/><text x="87.4189%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="87.3344%" y="453" width="0.2483%" height="15" fill="rgb(230,150,21)" fg:x="1055" fg:w="3"/><text x="87.5844%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.5000%" y="437" width="0.0828%" height="15" fill="rgb(253,202,10)" fg:x="1057" fg:w="1"/><text x="87.7500%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.66%)</title><rect x="87.0033%" y="501" width="0.6623%" height="15" fill="rgb(238,109,40)" fg:x="1051" fg:w="8"/><text x="87.2533%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.50%)</title><rect x="87.1689%" y="485" width="0.4967%" height="15" fill="rgb(247,120,22)" fg:x="1053" fg:w="6"/><text x="87.4189%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.5828%" y="469" width="0.0828%" height="15" fill="rgb(207,43,30)" fg:x="1058" fg:w="1"/><text x="87.8328%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.5828%" y="453" width="0.0828%" height="15" fill="rgb(213,211,24)" fg:x="1058" fg:w="1"/><text x="87.8328%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.5828%" y="437" width="0.0828%" height="15" fill="rgb(239,73,39)" fg:x="1058" fg:w="1"/><text x="87.8328%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.83%)</title><rect x="86.9205%" y="533" width="0.8278%" height="15" fill="rgb(245,182,19)" fg:x="1050" fg:w="10"/><text x="87.1705%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.83%)</title><rect x="86.9205%" y="517" width="0.8278%" height="15" fill="rgb(247,143,26)" fg:x="1050" fg:w="10"/><text x="87.1705%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.6656%" y="501" width="0.0828%" height="15" fill="rgb(228,191,23)" fg:x="1059" fg:w="1"/><text x="87.9156%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="87.6656%" y="485" width="0.0828%" height="15" fill="rgb(253,165,31)" fg:x="1059" fg:w="1"/><text x="87.9156%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.7483%" y="533" width="0.0828%" height="15" fill="rgb(234,138,20)" fg:x="1060" fg:w="1"/><text x="87.9983%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="87.7483%" y="517" width="0.0828%" height="15" fill="rgb(218,191,29)" fg:x="1060" fg:w="1"/><text x="87.9983%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (13 samples, 1.08%)</title><rect x="86.8377%" y="597" width="1.0762%" height="15" fill="rgb(221,157,19)" fg:x="1049" fg:w="13"/><text x="87.0877%" y="607.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.08%)</title><rect x="86.8377%" y="581" width="1.0762%" height="15" fill="rgb(237,26,42)" fg:x="1049" fg:w="13"/><text x="87.0877%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.99%)</title><rect x="86.9205%" y="565" width="0.9934%" height="15" fill="rgb(220,163,24)" fg:x="1050" fg:w="12"/><text x="87.1705%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.99%)</title><rect x="86.9205%" y="549" width="0.9934%" height="15" fill="rgb(242,115,20)" fg:x="1050" fg:w="12"/><text x="87.1705%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.8311%" y="533" width="0.0828%" height="15" fill="rgb(210,206,9)" fg:x="1061" fg:w="1"/><text x="88.0811%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.8311%" y="517" width="0.0828%" height="15" fill="rgb(208,71,17)" fg:x="1061" fg:w="1"/><text x="88.0811%" y="527.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (48 samples, 3.97%)</title><rect x="84.0232%" y="645" width="3.9735%" height="15" fill="rgb(233,7,5)" fg:x="1015" fg:w="48"/><text x="84.2732%" y="655.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (47 samples, 3.89%)</title><rect x="84.1060%" y="629" width="3.8907%" height="15" fill="rgb(207,92,33)" fg:x="1016" fg:w="47"/><text x="84.3560%" y="639.50">engi..</text></g><g><title>kernel::compare::any_entity_changes (32 samples, 2.65%)</title><rect x="85.3477%" y="613" width="2.6490%" height="15" fill="rgb(218,87,9)" fg:x="1031" fg:w="32"/><text x="85.5977%" y="623.50">ke..</text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="87.9139%" y="597" width="0.0828%" height="15" fill="rgb(219,47,37)" fg:x="1062" fg:w="1"/><text x="88.1639%" y="607.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="87.9139%" y="581" width="0.0828%" height="15" fill="rgb(221,152,34)" fg:x="1062" fg:w="1"/><text x="88.1639%" y="591.50"></text></g><g><title>engine::session::Session::close (52 samples, 4.30%)</title><rect x="83.7748%" y="677" width="4.3046%" height="15" fill="rgb(235,176,21)" fg:x="1012" fg:w="52"/><text x="84.0248%" y="687.50">engin..</text></g><g><title>engine::session::Session::save_entity_changes (52 samples, 4.30%)</title><rect x="83.7748%" y="661" width="4.3046%" height="15" fill="rgb(232,212,21)" fg:x="1012" fg:w="52"/><text x="84.0248%" y="671.50">engin..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="87.9967%" y="645" width="0.0828%" height="15" fill="rgb(245,82,39)" fg:x="1063" fg:w="1"/><text x="88.2467%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="87.9967%" y="629" width="0.0828%" height="15" fill="rgb(241,52,51)" fg:x="1063" fg:w="1"/><text x="88.2467%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.9967%" y="613" width="0.0828%" height="15" fill="rgb(219,91,24)" fg:x="1063" fg:w="1"/><text x="88.2467%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="88.0795%" y="629" width="0.0828%" height="15" fill="rgb(241,142,12)" fg:x="1064" fg:w="1"/><text x="88.3295%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0795%" y="613" width="0.0828%" height="15" fill="rgb(230,27,9)" fg:x="1064" fg:w="1"/><text x="88.3295%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (2 samples, 0.17%)</title><rect x="88.0795%" y="645" width="0.1656%" height="15" fill="rgb(249,181,32)" fg:x="1064" fg:w="2"/><text x="88.3295%" y="655.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="88.1623%" y="629" width="0.0828%" height="15" fill="rgb(230,107,3)" fg:x="1065" fg:w="1"/><text x="88.4123%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1623%" y="613" width="0.0828%" height="15" fill="rgb(246,204,14)" fg:x="1065" fg:w="1"/><text x="88.4123%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.17%)</title><rect x="88.2450%" y="597" width="0.1656%" height="15" fill="rgb(213,192,47)" fg:x="1066" fg:w="2"/><text x="88.4950%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.3278%" y="581" width="0.0828%" height="15" fill="rgb(240,44,36)" fg:x="1067" fg:w="1"/><text x="88.5778%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.3278%" y="565" width="0.0828%" height="15" fill="rgb(244,209,38)" fg:x="1067" fg:w="1"/><text x="88.5778%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.3278%" y="549" width="0.0828%" height="15" fill="rgb(219,34,37)" fg:x="1067" fg:w="1"/><text x="88.5778%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.3278%" y="533" width="0.0828%" height="15" fill="rgb(210,28,6)" fg:x="1067" fg:w="1"/><text x="88.5778%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.3278%" y="517" width="0.0828%" height="15" fill="rgb(244,110,52)" fg:x="1067" fg:w="1"/><text x="88.5778%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="88.3278%" y="501" width="0.0828%" height="15" fill="rgb(254,124,47)" fg:x="1067" fg:w="1"/><text x="88.5778%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.3278%" y="485" width="0.0828%" height="15" fill="rgb(254,110,13)" fg:x="1067" fg:w="1"/><text x="88.5778%" y="495.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="88.4106%" y="517" width="0.0828%" height="15" fill="rgb(252,57,21)" fg:x="1068" fg:w="1"/><text x="88.6606%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.4934%" y="485" width="0.0828%" height="15" fill="rgb(242,60,45)" fg:x="1069" fg:w="1"/><text x="88.7434%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4934%" y="469" width="0.0828%" height="15" fill="rgb(234,49,30)" fg:x="1069" fg:w="1"/><text x="88.7434%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.25%)</title><rect x="88.4106%" y="581" width="0.2483%" height="15" fill="rgb(218,98,6)" fg:x="1068" fg:w="3"/><text x="88.6606%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.25%)</title><rect x="88.4106%" y="565" width="0.2483%" height="15" fill="rgb(220,174,29)" fg:x="1068" fg:w="3"/><text x="88.6606%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="88.4106%" y="549" width="0.2483%" height="15" fill="rgb(236,163,23)" fg:x="1068" fg:w="3"/><text x="88.6606%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="88.4106%" y="533" width="0.2483%" height="15" fill="rgb(242,114,45)" fg:x="1068" fg:w="3"/><text x="88.6606%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="88.4934%" y="517" width="0.1656%" height="15" fill="rgb(232,10,53)" fg:x="1069" fg:w="2"/><text x="88.7434%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="88.4934%" y="501" width="0.1656%" height="15" fill="rgb(245,108,29)" fg:x="1069" fg:w="2"/><text x="88.7434%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.5762%" y="485" width="0.0828%" height="15" fill="rgb(240,89,53)" fg:x="1070" fg:w="1"/><text x="88.8262%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5762%" y="469" width="0.0828%" height="15" fill="rgb(226,60,45)" fg:x="1070" fg:w="1"/><text x="88.8262%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.5762%" y="453" width="0.0828%" height="15" fill="rgb(230,41,44)" fg:x="1070" fg:w="1"/><text x="88.8262%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5762%" y="437" width="0.0828%" height="15" fill="rgb(230,26,20)" fg:x="1070" fg:w="1"/><text x="88.8262%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.50%)</title><rect x="88.2450%" y="629" width="0.4967%" height="15" fill="rgb(237,170,32)" fg:x="1066" fg:w="6"/><text x="88.4950%" y="639.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.50%)</title><rect x="88.2450%" y="613" width="0.4967%" height="15" fill="rgb(212,35,42)" fg:x="1066" fg:w="6"/><text x="88.4950%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.33%)</title><rect x="88.4106%" y="597" width="0.3311%" height="15" fill="rgb(227,31,34)" fg:x="1068" fg:w="4"/><text x="88.6606%" y="607.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="88.6589%" y="581" width="0.0828%" height="15" fill="rgb(216,19,18)" fg:x="1071" fg:w="1"/><text x="88.9089%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.6589%" y="565" width="0.0828%" height="15" fill="rgb(211,133,42)" fg:x="1071" fg:w="1"/><text x="88.9089%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.6589%" y="549" width="0.0828%" height="15" fill="rgb(244,66,13)" fg:x="1071" fg:w="1"/><text x="88.9089%" y="559.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="88.6589%" y="533" width="0.0828%" height="15" fill="rgb(218,185,50)" fg:x="1071" fg:w="1"/><text x="88.9089%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.8245%" y="533" width="0.0828%" height="15" fill="rgb(219,149,13)" fg:x="1073" fg:w="1"/><text x="89.0745%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="88.9073%" y="517" width="0.0828%" height="15" fill="rgb(221,125,0)" fg:x="1074" fg:w="1"/><text x="89.1573%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="88.9073%" y="501" width="0.0828%" height="15" fill="rgb(247,126,27)" fg:x="1074" fg:w="1"/><text x="89.1573%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9073%" y="485" width="0.0828%" height="15" fill="rgb(250,138,30)" fg:x="1074" fg:w="1"/><text x="89.1573%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9073%" y="469" width="0.0828%" height="15" fill="rgb(230,151,9)" fg:x="1074" fg:w="1"/><text x="89.1573%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9073%" y="453" width="0.0828%" height="15" fill="rgb(233,80,38)" fg:x="1074" fg:w="1"/><text x="89.1573%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.0728%" y="437" width="0.0828%" height="15" fill="rgb(232,68,43)" fg:x="1076" fg:w="1"/><text x="89.3228%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.0728%" y="421" width="0.0828%" height="15" fill="rgb(254,5,50)" fg:x="1076" fg:w="1"/><text x="89.3228%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1556%" y="389" width="0.0828%" height="15" fill="rgb(225,45,5)" fg:x="1077" fg:w="1"/><text x="89.4056%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1556%" y="373" width="0.0828%" height="15" fill="rgb(239,22,3)" fg:x="1077" fg:w="1"/><text x="89.4056%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1556%" y="357" width="0.0828%" height="15" fill="rgb(243,129,0)" fg:x="1077" fg:w="1"/><text x="89.4056%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.50%)</title><rect x="88.8245%" y="565" width="0.4967%" height="15" fill="rgb(223,164,0)" fg:x="1073" fg:w="6"/><text x="89.0745%" y="575.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.50%)</title><rect x="88.8245%" y="549" width="0.4967%" height="15" fill="rgb(221,46,29)" fg:x="1073" fg:w="6"/><text x="89.0745%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.41%)</title><rect x="88.9073%" y="533" width="0.4139%" height="15" fill="rgb(205,97,47)" fg:x="1074" fg:w="5"/><text x="89.1573%" y="543.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.33%)</title><rect x="88.9901%" y="517" width="0.3311%" height="15" fill="rgb(249,14,8)" fg:x="1075" fg:w="4"/><text x="89.2401%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="88.9901%" y="501" width="0.3311%" height="15" fill="rgb(216,77,3)" fg:x="1075" fg:w="4"/><text x="89.2401%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="88.9901%" y="485" width="0.3311%" height="15" fill="rgb(206,168,54)" fg:x="1075" fg:w="4"/><text x="89.2401%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="88.9901%" y="469" width="0.3311%" height="15" fill="rgb(236,3,41)" fg:x="1075" fg:w="4"/><text x="89.2401%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="89.0728%" y="453" width="0.2483%" height="15" fill="rgb(231,132,24)" fg:x="1076" fg:w="3"/><text x="89.3228%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="89.1556%" y="437" width="0.1656%" height="15" fill="rgb(227,221,40)" fg:x="1077" fg:w="2"/><text x="89.4056%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="89.1556%" y="421" width="0.1656%" height="15" fill="rgb(233,151,11)" fg:x="1077" fg:w="2"/><text x="89.4056%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="89.1556%" y="405" width="0.1656%" height="15" fill="rgb(247,81,35)" fg:x="1077" fg:w="2"/><text x="89.4056%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.2384%" y="389" width="0.0828%" height="15" fill="rgb(243,128,48)" fg:x="1078" fg:w="1"/><text x="89.4884%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.2384%" y="373" width="0.0828%" height="15" fill="rgb(253,16,10)" fg:x="1078" fg:w="1"/><text x="89.4884%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.2384%" y="357" width="0.0828%" height="15" fill="rgb(228,67,27)" fg:x="1078" fg:w="1"/><text x="89.4884%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.2384%" y="341" width="0.0828%" height="15" fill="rgb(231,105,25)" fg:x="1078" fg:w="1"/><text x="89.4884%" y="351.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (8 samples, 0.66%)</title><rect x="88.7417%" y="629" width="0.6623%" height="15" fill="rgb(213,166,47)" fg:x="1072" fg:w="8"/><text x="88.9917%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (7 samples, 0.58%)</title><rect x="88.8245%" y="613" width="0.5795%" height="15" fill="rgb(209,27,10)" fg:x="1073" fg:w="7"/><text x="89.0745%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.58%)</title><rect x="88.8245%" y="597" width="0.5795%" height="15" fill="rgb(241,44,30)" fg:x="1073" fg:w="7"/><text x="89.0745%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.58%)</title><rect x="88.8245%" y="581" width="0.5795%" height="15" fill="rgb(223,216,15)" fg:x="1073" fg:w="7"/><text x="89.0745%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.3212%" y="565" width="0.0828%" height="15" fill="rgb(227,14,7)" fg:x="1079" fg:w="1"/><text x="89.5712%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3212%" y="549" width="0.0828%" height="15" fill="rgb(237,14,5)" fg:x="1079" fg:w="1"/><text x="89.5712%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="89.3212%" y="533" width="0.0828%" height="15" fill="rgb(232,14,36)" fg:x="1079" fg:w="1"/><text x="89.5712%" y="543.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (15 samples, 1.24%)</title><rect x="88.2450%" y="645" width="1.2417%" height="15" fill="rgb(234,0,38)" fg:x="1066" fg:w="15"/><text x="88.4950%" y="655.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="89.4040%" y="629" width="0.0828%" height="15" fill="rgb(207,170,14)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="89.4040%" y="613" width="0.0828%" height="15" fill="rgb(252,45,13)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.4040%" y="597" width="0.0828%" height="15" fill="rgb(213,142,7)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.4040%" y="581" width="0.0828%" height="15" fill="rgb(216,157,23)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.4040%" y="565" width="0.0828%" height="15" fill="rgb(212,145,33)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.4040%" y="549" width="0.0828%" height="15" fill="rgb(233,26,13)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.4040%" y="533" width="0.0828%" height="15" fill="rgb(219,196,19)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.4040%" y="517" width="0.0828%" height="15" fill="rgb(246,56,21)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.4040%" y="501" width="0.0828%" height="15" fill="rgb(222,28,53)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.4040%" y="485" width="0.0828%" height="15" fill="rgb(224,5,27)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.4040%" y="469" width="0.0828%" height="15" fill="rgb(220,153,33)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.4040%" y="453" width="0.0828%" height="15" fill="rgb(226,58,19)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.4040%" y="437" width="0.0828%" height="15" fill="rgb(239,112,23)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="89.4040%" y="421" width="0.0828%" height="15" fill="rgb(251,213,20)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="89.4040%" y="405" width="0.0828%" height="15" fill="rgb(215,181,21)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="89.4040%" y="389" width="0.0828%" height="15" fill="rgb(240,8,35)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="89.4040%" y="373" width="0.0828%" height="15" fill="rgb(232,203,3)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.4040%" y="357" width="0.0828%" height="15" fill="rgb(214,202,43)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.4040%" y="341" width="0.0828%" height="15" fill="rgb(254,35,11)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.4040%" y="325" width="0.0828%" height="15" fill="rgb(239,173,13)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="89.4040%" y="309" width="0.0828%" height="15" fill="rgb(220,141,0)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.4040%" y="293" width="0.0828%" height="15" fill="rgb(210,98,12)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="89.4040%" y="277" width="0.0828%" height="15" fill="rgb(254,153,22)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="89.4040%" y="261" width="0.0828%" height="15" fill="rgb(247,223,17)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="89.4040%" y="245" width="0.0828%" height="15" fill="rgb(246,56,7)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.4040%" y="229" width="0.0828%" height="15" fill="rgb(240,226,12)" fg:x="1080" fg:w="1"/><text x="89.6540%" y="239.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.4868%" y="613" width="0.0828%" height="15" fill="rgb(205,87,46)" fg:x="1081" fg:w="1"/><text x="89.7368%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8179%" y="517" width="0.0828%" height="15" fill="rgb(245,214,51)" fg:x="1085" fg:w="1"/><text x="90.0679%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="89.8179%" y="533" width="0.1656%" height="15" fill="rgb(223,172,33)" fg:x="1085" fg:w="2"/><text x="90.0679%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="89.9007%" y="517" width="0.0828%" height="15" fill="rgb(227,203,34)" fg:x="1086" fg:w="1"/><text x="90.1507%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.9834%" y="533" width="0.0828%" height="15" fill="rgb(248,143,44)" fg:x="1087" fg:w="1"/><text x="90.2334%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.41%)</title><rect x="89.7351%" y="549" width="0.4139%" height="15" fill="rgb(226,162,5)" fg:x="1084" fg:w="5"/><text x="89.9851%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="90.0662%" y="533" width="0.0828%" height="15" fill="rgb(211,143,1)" fg:x="1088" fg:w="1"/><text x="90.3162%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.1490%" y="549" width="0.0828%" height="15" fill="rgb(224,96,15)" fg:x="1089" fg:w="1"/><text x="90.3990%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.58%)</title><rect x="89.7351%" y="565" width="0.5795%" height="15" fill="rgb(222,4,38)" fg:x="1084" fg:w="7"/><text x="89.9851%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="90.2318%" y="549" width="0.0828%" height="15" fill="rgb(253,228,15)" fg:x="1090" fg:w="1"/><text x="90.4818%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="90.2318%" y="533" width="0.0828%" height="15" fill="rgb(242,194,12)" fg:x="1090" fg:w="1"/><text x="90.4818%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.16%)</title><rect x="89.5695%" y="581" width="1.1589%" height="15" fill="rgb(214,177,31)" fg:x="1082" fg:w="14"/><text x="89.8195%" y="591.50"></text></g><g><title>__libc_free (5 samples, 0.41%)</title><rect x="90.3146%" y="565" width="0.4139%" height="15" fill="rgb(226,58,51)" fg:x="1091" fg:w="5"/><text x="90.5646%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynMessage&gt; (16 samples, 1.32%)</title><rect x="89.5695%" y="613" width="1.3245%" height="15" fill="rgb(250,119,16)" fg:x="1082" fg:w="16"/><text x="89.8195%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.32%)</title><rect x="89.5695%" y="597" width="1.3245%" height="15" fill="rgb(223,128,53)" fg:x="1082" fg:w="16"/><text x="89.8195%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="90.7285%" y="581" width="0.1656%" height="15" fill="rgb(251,199,15)" fg:x="1096" fg:w="2"/><text x="90.9785%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="90.8940%" y="581" width="0.2483%" height="15" fill="rgb(235,168,42)" fg:x="1098" fg:w="3"/><text x="91.1440%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="91.0596%" y="565" width="0.0828%" height="15" fill="rgb(250,210,17)" fg:x="1100" fg:w="1"/><text x="91.3096%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.0596%" y="549" width="0.0828%" height="15" fill="rgb(226,36,41)" fg:x="1100" fg:w="1"/><text x="91.3096%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="91.1424%" y="581" width="0.0828%" height="15" fill="rgb(225,87,10)" fg:x="1101" fg:w="1"/><text x="91.3924%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="91.1424%" y="565" width="0.0828%" height="15" fill="rgb(228,83,9)" fg:x="1101" fg:w="1"/><text x="91.3924%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.2252%" y="581" width="0.0828%" height="15" fill="rgb(225,16,36)" fg:x="1102" fg:w="1"/><text x="91.4752%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="91.2252%" y="565" width="0.0828%" height="15" fill="rgb(242,198,13)" fg:x="1102" fg:w="1"/><text x="91.4752%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.2252%" y="549" width="0.0828%" height="15" fill="rgb(239,25,51)" fg:x="1102" fg:w="1"/><text x="91.4752%" y="559.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="91.4735%" y="437" width="0.0828%" height="15" fill="rgb(239,28,37)" fg:x="1105" fg:w="1"/><text x="91.7235%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="91.3907%" y="501" width="0.3311%" height="15" fill="rgb(234,70,17)" fg:x="1104" fg:w="4"/><text x="91.6407%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="91.4735%" y="485" width="0.2483%" height="15" fill="rgb(231,215,53)" fg:x="1105" fg:w="3"/><text x="91.7235%" y="495.50"></text></g><g><title>kernel::model::EntityRef::into_entry (3 samples, 0.25%)</title><rect x="91.4735%" y="469" width="0.2483%" height="15" fill="rgb(218,140,42)" fg:x="1105" fg:w="3"/><text x="91.7235%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.25%)</title><rect x="91.4735%" y="453" width="0.2483%" height="15" fill="rgb(233,227,45)" fg:x="1105" fg:w="3"/><text x="91.7235%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.17%)</title><rect x="91.5563%" y="437" width="0.1656%" height="15" fill="rgb(225,189,21)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="91.5563%" y="421" width="0.1656%" height="15" fill="rgb(237,176,54)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="91.5563%" y="405" width="0.1656%" height="15" fill="rgb(215,131,46)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="91.5563%" y="389" width="0.1656%" height="15" fill="rgb(218,95,20)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="91.5563%" y="373" width="0.1656%" height="15" fill="rgb(208,198,12)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="91.5563%" y="357" width="0.1656%" height="15" fill="rgb(239,107,50)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="91.5563%" y="341" width="0.1656%" height="15" fill="rgb(240,217,37)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="91.5563%" y="325" width="0.1656%" height="15" fill="rgb(242,197,49)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="91.5563%" y="309" width="0.1656%" height="15" fill="rgb(219,171,17)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="91.5563%" y="293" width="0.1656%" height="15" fill="rgb(209,81,40)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="303.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.17%)</title><rect x="91.5563%" y="277" width="0.1656%" height="15" fill="rgb(237,156,30)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.17%)</title><rect x="91.5563%" y="261" width="0.1656%" height="15" fill="rgb(212,127,16)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.17%)</title><rect x="91.5563%" y="245" width="0.1656%" height="15" fill="rgb(226,66,32)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.17%)</title><rect x="91.5563%" y="229" width="0.1656%" height="15" fill="rgb(245,22,46)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="91.5563%" y="213" width="0.1656%" height="15" fill="rgb(210,112,21)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="91.5563%" y="197" width="0.1656%" height="15" fill="rgb(207,118,39)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="91.5563%" y="181" width="0.1656%" height="15" fill="rgb(205,206,35)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.17%)</title><rect x="91.5563%" y="165" width="0.1656%" height="15" fill="rgb(222,120,2)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="91.5563%" y="149" width="0.1656%" height="15" fill="rgb(205,38,18)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.17%)</title><rect x="91.5563%" y="133" width="0.1656%" height="15" fill="rgb(226,61,2)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.17%)</title><rect x="91.5563%" y="117" width="0.1656%" height="15" fill="rgb(242,161,23)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="127.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.17%)</title><rect x="91.5563%" y="101" width="0.1656%" height="15" fill="rgb(213,13,52)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="111.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="91.5563%" y="85" width="0.1656%" height="15" fill="rgb(246,209,47)" fg:x="1106" fg:w="2"/><text x="91.8063%" y="95.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.41%)</title><rect x="91.3907%" y="517" width="0.4139%" height="15" fill="rgb(214,41,3)" fg:x="1104" fg:w="5"/><text x="91.6407%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.7219%" y="501" width="0.0828%" height="15" fill="rgb(236,119,38)" fg:x="1108" fg:w="1"/><text x="91.9719%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="91.8046%" y="517" width="0.0828%" height="15" fill="rgb(218,50,11)" fg:x="1109" fg:w="1"/><text x="92.0546%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="91.8046%" y="501" width="0.0828%" height="15" fill="rgb(228,38,11)" fg:x="1109" fg:w="1"/><text x="92.0546%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="91.9702%" y="421" width="0.0828%" height="15" fill="rgb(212,13,9)" fg:x="1111" fg:w="1"/><text x="92.2202%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9702%" y="405" width="0.0828%" height="15" fill="rgb(208,211,9)" fg:x="1111" fg:w="1"/><text x="92.2202%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9702%" y="389" width="0.0828%" height="15" fill="rgb(239,39,32)" fg:x="1111" fg:w="1"/><text x="92.2202%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.9702%" y="373" width="0.0828%" height="15" fill="rgb(254,179,26)" fg:x="1111" fg:w="1"/><text x="92.2202%" y="383.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (9 samples, 0.75%)</title><rect x="91.3907%" y="533" width="0.7450%" height="15" fill="rgb(249,165,28)" fg:x="1104" fg:w="9"/><text x="91.6407%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.25%)</title><rect x="91.8874%" y="517" width="0.2483%" height="15" fill="rgb(225,59,50)" fg:x="1110" fg:w="3"/><text x="92.1374%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.25%)</title><rect x="91.8874%" y="501" width="0.2483%" height="15" fill="rgb(209,122,5)" fg:x="1110" fg:w="3"/><text x="92.1374%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="91.8874%" y="485" width="0.2483%" height="15" fill="rgb(214,65,34)" fg:x="1110" fg:w="3"/><text x="92.1374%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="91.9702%" y="469" width="0.1656%" height="15" fill="rgb(249,183,32)" fg:x="1111" fg:w="2"/><text x="92.2202%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.17%)</title><rect x="91.9702%" y="453" width="0.1656%" height="15" fill="rgb(218,122,24)" fg:x="1111" fg:w="2"/><text x="92.2202%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.17%)</title><rect x="91.9702%" y="437" width="0.1656%" height="15" fill="rgb(224,109,18)" fg:x="1111" fg:w="2"/><text x="92.2202%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.0530%" y="421" width="0.0828%" height="15" fill="rgb(210,68,50)" fg:x="1112" fg:w="1"/><text x="92.3030%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="92.2185%" y="389" width="0.0828%" height="15" fill="rgb(212,184,34)" fg:x="1114" fg:w="1"/><text x="92.4685%" y="399.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.17%)</title><rect x="92.3013%" y="389" width="0.1656%" height="15" fill="rgb(238,105,48)" fg:x="1115" fg:w="2"/><text x="92.5513%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.17%)</title><rect x="92.3013%" y="373" width="0.1656%" height="15" fill="rgb(222,134,54)" fg:x="1115" fg:w="2"/><text x="92.5513%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3841%" y="357" width="0.0828%" height="15" fill="rgb(246,24,43)" fg:x="1116" fg:w="1"/><text x="92.6341%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="92.3841%" y="341" width="0.0828%" height="15" fill="rgb(227,169,22)" fg:x="1116" fg:w="1"/><text x="92.6341%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3841%" y="325" width="0.0828%" height="15" fill="rgb(253,152,4)" fg:x="1116" fg:w="1"/><text x="92.6341%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.4669%" y="245" width="0.0828%" height="15" fill="rgb(219,158,36)" fg:x="1117" fg:w="1"/><text x="92.7169%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.4669%" y="229" width="0.0828%" height="15" fill="rgb(251,128,40)" fg:x="1117" fg:w="1"/><text x="92.7169%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.6325%" y="213" width="0.0828%" height="15" fill="rgb(254,101,39)" fg:x="1119" fg:w="1"/><text x="92.8825%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="92.5497%" y="245" width="0.2483%" height="15" fill="rgb(221,168,40)" fg:x="1118" fg:w="3"/><text x="92.7997%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="92.5497%" y="229" width="0.2483%" height="15" fill="rgb(221,14,27)" fg:x="1118" fg:w="3"/><text x="92.7997%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.7152%" y="213" width="0.0828%" height="15" fill="rgb(207,36,43)" fg:x="1120" fg:w="1"/><text x="92.9652%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="92.4669%" y="277" width="0.4139%" height="15" fill="rgb(240,172,53)" fg:x="1117" fg:w="5"/><text x="92.7169%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="92.4669%" y="261" width="0.4139%" height="15" fill="rgb(241,138,43)" fg:x="1117" fg:w="5"/><text x="92.7169%" y="271.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="92.7980%" y="245" width="0.0828%" height="15" fill="rgb(227,78,19)" fg:x="1121" fg:w="1"/><text x="93.0480%" y="255.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.50%)</title><rect x="92.4669%" y="373" width="0.4967%" height="15" fill="rgb(215,127,44)" fg:x="1117" fg:w="6"/><text x="92.7169%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.50%)</title><rect x="92.4669%" y="357" width="0.4967%" height="15" fill="rgb(227,13,10)" fg:x="1117" fg:w="6"/><text x="92.7169%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.50%)</title><rect x="92.4669%" y="341" width="0.4967%" height="15" fill="rgb(249,177,6)" fg:x="1117" fg:w="6"/><text x="92.7169%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.50%)</title><rect x="92.4669%" y="325" width="0.4967%" height="15" fill="rgb(215,154,26)" fg:x="1117" fg:w="6"/><text x="92.7169%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.50%)</title><rect x="92.4669%" y="309" width="0.4967%" height="15" fill="rgb(250,168,20)" fg:x="1117" fg:w="6"/><text x="92.7169%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.50%)</title><rect x="92.4669%" y="293" width="0.4967%" height="15" fill="rgb(222,53,38)" fg:x="1117" fg:w="6"/><text x="92.7169%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="92.8808%" y="277" width="0.0828%" height="15" fill="rgb(245,154,5)" fg:x="1122" fg:w="1"/><text x="93.1308%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="92.8808%" y="261" width="0.0828%" height="15" fill="rgb(214,89,50)" fg:x="1122" fg:w="1"/><text x="93.1308%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="92.9636%" y="325" width="0.1656%" height="15" fill="rgb(232,73,14)" fg:x="1123" fg:w="2"/><text x="93.2136%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="92.9636%" y="309" width="0.1656%" height="15" fill="rgb(230,101,20)" fg:x="1123" fg:w="2"/><text x="93.2136%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1291%" y="325" width="0.0828%" height="15" fill="rgb(208,56,28)" fg:x="1125" fg:w="1"/><text x="93.3791%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1291%" y="309" width="0.0828%" height="15" fill="rgb(247,205,22)" fg:x="1125" fg:w="1"/><text x="93.3791%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="93.1291%" y="293" width="0.0828%" height="15" fill="rgb(252,109,51)" fg:x="1125" fg:w="1"/><text x="93.3791%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.2119%" y="277" width="0.0828%" height="15" fill="rgb(220,40,24)" fg:x="1126" fg:w="1"/><text x="93.4619%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.2947%" y="261" width="0.0828%" height="15" fill="rgb(251,108,7)" fg:x="1127" fg:w="1"/><text x="93.5447%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.2947%" y="245" width="0.0828%" height="15" fill="rgb(238,102,51)" fg:x="1127" fg:w="1"/><text x="93.5447%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (16 samples, 1.32%)</title><rect x="92.2185%" y="485" width="1.3245%" height="15" fill="rgb(219,149,34)" fg:x="1114" fg:w="16"/><text x="92.4685%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 1.32%)</title><rect x="92.2185%" y="469" width="1.3245%" height="15" fill="rgb(239,70,0)" fg:x="1114" fg:w="16"/><text x="92.4685%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.32%)</title><rect x="92.2185%" y="453" width="1.3245%" height="15" fill="rgb(246,214,23)" fg:x="1114" fg:w="16"/><text x="92.4685%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 1.32%)</title><rect x="92.2185%" y="437" width="1.3245%" height="15" fill="rgb(239,221,51)" fg:x="1114" fg:w="16"/><text x="92.4685%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.32%)</title><rect x="92.2185%" y="421" width="1.3245%" height="15" fill="rgb(254,62,14)" fg:x="1114" fg:w="16"/><text x="92.4685%" y="431.50"></text></g><g><title>engine::internal::Entities::prepare_entity (16 samples, 1.32%)</title><rect x="92.2185%" y="405" width="1.3245%" height="15" fill="rgb(253,57,33)" fg:x="1114" fg:w="16"/><text x="92.4685%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity (13 samples, 1.08%)</title><rect x="92.4669%" y="389" width="1.0762%" height="15" fill="rgb(229,34,6)" fg:x="1117" fg:w="13"/><text x="92.7169%" y="399.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.58%)</title><rect x="92.9636%" y="373" width="0.5795%" height="15" fill="rgb(235,191,23)" fg:x="1123" fg:w="7"/><text x="93.2136%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.58%)</title><rect x="92.9636%" y="357" width="0.5795%" height="15" fill="rgb(217,207,27)" fg:x="1123" fg:w="7"/><text x="93.2136%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.58%)</title><rect x="92.9636%" y="341" width="0.5795%" height="15" fill="rgb(232,41,44)" fg:x="1123" fg:w="7"/><text x="93.2136%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="93.2119%" y="325" width="0.3311%" height="15" fill="rgb(221,188,19)" fg:x="1126" fg:w="4"/><text x="93.4619%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="93.2119%" y="309" width="0.3311%" height="15" fill="rgb(245,180,45)" fg:x="1126" fg:w="4"/><text x="93.4619%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="93.2119%" y="293" width="0.3311%" height="15" fill="rgb(250,220,42)" fg:x="1126" fg:w="4"/><text x="93.4619%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="93.2947%" y="277" width="0.2483%" height="15" fill="rgb(234,16,34)" fg:x="1127" fg:w="3"/><text x="93.5447%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="93.3775%" y="261" width="0.1656%" height="15" fill="rgb(233,217,23)" fg:x="1128" fg:w="2"/><text x="93.6275%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="93.3775%" y="245" width="0.1656%" height="15" fill="rgb(209,22,46)" fg:x="1128" fg:w="2"/><text x="93.6275%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="93.3775%" y="229" width="0.1656%" height="15" fill="rgb(213,101,18)" fg:x="1128" fg:w="2"/><text x="93.6275%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="93.3775%" y="213" width="0.1656%" height="15" fill="rgb(215,179,52)" fg:x="1128" fg:w="2"/><text x="93.6275%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4603%" y="197" width="0.0828%" height="15" fill="rgb(223,50,25)" fg:x="1129" fg:w="1"/><text x="93.7103%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.5430%" y="485" width="0.0828%" height="15" fill="rgb(224,51,44)" fg:x="1130" fg:w="1"/><text x="93.7930%" y="495.50"></text></g><g><title>plugins_core::tools::get_contained_keys (20 samples, 1.66%)</title><rect x="92.1358%" y="533" width="1.6556%" height="15" fill="rgb(224,13,54)" fg:x="1113" fg:w="20"/><text x="92.3858%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (20 samples, 1.66%)</title><rect x="92.1358%" y="517" width="1.6556%" height="15" fill="rgb(219,58,47)" fg:x="1113" fg:w="20"/><text x="92.3858%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (20 samples, 1.66%)</title><rect x="92.1358%" y="501" width="1.6556%" height="15" fill="rgb(246,124,34)" fg:x="1113" fg:w="20"/><text x="92.3858%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="93.6258%" y="485" width="0.1656%" height="15" fill="rgb(245,109,25)" fg:x="1131" fg:w="2"/><text x="93.8758%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="93.6258%" y="469" width="0.1656%" height="15" fill="rgb(235,48,23)" fg:x="1131" fg:w="2"/><text x="93.8758%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.17%)</title><rect x="93.6258%" y="453" width="0.1656%" height="15" fill="rgb(229,203,36)" fg:x="1131" fg:w="2"/><text x="93.8758%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.17%)</title><rect x="93.6258%" y="437" width="0.1656%" height="15" fill="rgb(234,180,9)" fg:x="1131" fg:w="2"/><text x="93.8758%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.17%)</title><rect x="93.6258%" y="421" width="0.1656%" height="15" fill="rgb(228,98,45)" fg:x="1131" fg:w="2"/><text x="93.8758%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="93.6258%" y="405" width="0.1656%" height="15" fill="rgb(240,24,36)" fg:x="1131" fg:w="2"/><text x="93.8758%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7086%" y="389" width="0.0828%" height="15" fill="rgb(227,154,19)" fg:x="1132" fg:w="1"/><text x="93.9586%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.7914%" y="485" width="0.0828%" height="15" fill="rgb(231,2,48)" fg:x="1133" fg:w="1"/><text x="94.0414%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7914%" y="469" width="0.0828%" height="15" fill="rgb(219,216,0)" fg:x="1133" fg:w="1"/><text x="94.0414%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.7914%" y="453" width="0.0828%" height="15" fill="rgb(251,88,0)" fg:x="1133" fg:w="1"/><text x="94.0414%" y="463.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="93.8742%" y="485" width="0.0828%" height="15" fill="rgb(242,45,45)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.8742%" y="469" width="0.0828%" height="15" fill="rgb(218,149,45)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="93.8742%" y="453" width="0.0828%" height="15" fill="rgb(247,194,10)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="93.8742%" y="437" width="0.0828%" height="15" fill="rgb(234,33,37)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="93.8742%" y="421" width="0.0828%" height="15" fill="rgb(218,61,13)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="431.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.8742%" y="405" width="0.0828%" height="15" fill="rgb(210,80,52)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8742%" y="389" width="0.0828%" height="15" fill="rgb(218,203,27)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8742%" y="373" width="0.0828%" height="15" fill="rgb(209,126,33)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8742%" y="357" width="0.0828%" height="15" fill="rgb(234,173,41)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.8742%" y="341" width="0.0828%" height="15" fill="rgb(228,166,9)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.8742%" y="325" width="0.0828%" height="15" fill="rgb(208,124,43)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.8742%" y="309" width="0.0828%" height="15" fill="rgb(212,154,38)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.8742%" y="293" width="0.0828%" height="15" fill="rgb(246,179,35)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.8742%" y="277" width="0.0828%" height="15" fill="rgb(251,3,50)" fg:x="1134" fg:w="1"/><text x="94.1242%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 2.73%)</title><rect x="91.3079%" y="565" width="2.7318%" height="15" fill="rgb(219,96,8)" fg:x="1103" fg:w="33"/><text x="91.5579%" y="575.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (33 samples, 2.73%)</title><rect x="91.3079%" y="549" width="2.7318%" height="15" fill="rgb(251,216,33)" fg:x="1103" fg:w="33"/><text x="91.5579%" y="559.50">&lt;c..</text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.25%)</title><rect x="93.7914%" y="533" width="0.2483%" height="15" fill="rgb(243,145,29)" fg:x="1133" fg:w="3"/><text x="94.0414%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.25%)</title><rect x="93.7914%" y="517" width="0.2483%" height="15" fill="rgb(210,75,20)" fg:x="1133" fg:w="3"/><text x="94.0414%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.25%)</title><rect x="93.7914%" y="501" width="0.2483%" height="15" fill="rgb(235,56,8)" fg:x="1133" fg:w="3"/><text x="94.0414%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9570%" y="485" width="0.0828%" height="15" fill="rgb(226,175,49)" fg:x="1135" fg:w="1"/><text x="94.2070%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9570%" y="469" width="0.0828%" height="15" fill="rgb(242,204,23)" fg:x="1135" fg:w="1"/><text x="94.2070%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.9570%" y="453" width="0.0828%" height="15" fill="rgb(225,104,24)" fg:x="1135" fg:w="1"/><text x="94.2070%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.9570%" y="437" width="0.0828%" height="15" fill="rgb(253,34,1)" fg:x="1135" fg:w="1"/><text x="94.2070%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.9570%" y="421" width="0.0828%" height="15" fill="rgb(233,199,23)" fg:x="1135" fg:w="1"/><text x="94.2070%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9570%" y="405" width="0.0828%" height="15" fill="rgb(247,7,51)" fg:x="1135" fg:w="1"/><text x="94.2070%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.17%)</title><rect x="94.0397%" y="501" width="0.1656%" height="15" fill="rgb(214,146,12)" fg:x="1136" fg:w="2"/><text x="94.2897%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.17%)</title><rect x="94.0397%" y="485" width="0.1656%" height="15" fill="rgb(234,181,43)" fg:x="1136" fg:w="2"/><text x="94.2897%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.2053%" y="373" width="0.0828%" height="15" fill="rgb(239,148,6)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.2053%" y="357" width="0.0828%" height="15" fill="rgb(206,151,17)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="94.2053%" y="341" width="0.0828%" height="15" fill="rgb(213,215,10)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="94.2053%" y="325" width="0.0828%" height="15" fill="rgb(215,220,44)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="94.2053%" y="309" width="0.0828%" height="15" fill="rgb(245,205,37)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="94.2053%" y="293" width="0.0828%" height="15" fill="rgb(245,130,43)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="94.2053%" y="277" width="0.0828%" height="15" fill="rgb(231,227,38)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="94.2053%" y="261" width="0.0828%" height="15" fill="rgb(233,185,4)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="94.2053%" y="245" width="0.0828%" height="15" fill="rgb(224,154,43)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="94.2053%" y="229" width="0.0828%" height="15" fill="rgb(235,156,15)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="94.2053%" y="213" width="0.0828%" height="15" fill="rgb(211,55,43)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2053%" y="197" width="0.0828%" height="15" fill="rgb(247,149,40)" fg:x="1138" fg:w="1"/><text x="94.4553%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.33%)</title><rect x="94.0397%" y="517" width="0.3311%" height="15" fill="rgb(232,171,16)" fg:x="1136" fg:w="4"/><text x="94.2897%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.17%)</title><rect x="94.2053%" y="501" width="0.1656%" height="15" fill="rgb(215,117,49)" fg:x="1138" fg:w="2"/><text x="94.4553%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="94.2053%" y="485" width="0.1656%" height="15" fill="rgb(246,194,11)" fg:x="1138" fg:w="2"/><text x="94.4553%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="94.2053%" y="469" width="0.1656%" height="15" fill="rgb(242,101,44)" fg:x="1138" fg:w="2"/><text x="94.4553%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="94.2053%" y="453" width="0.1656%" height="15" fill="rgb(226,174,6)" fg:x="1138" fg:w="2"/><text x="94.4553%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="94.2053%" y="437" width="0.1656%" height="15" fill="rgb(213,150,20)" fg:x="1138" fg:w="2"/><text x="94.4553%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="94.2053%" y="421" width="0.1656%" height="15" fill="rgb(222,124,42)" fg:x="1138" fg:w="2"/><text x="94.4553%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="94.2053%" y="405" width="0.1656%" height="15" fill="rgb(250,19,47)" fg:x="1138" fg:w="2"/><text x="94.4553%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="94.2053%" y="389" width="0.1656%" height="15" fill="rgb(241,217,19)" fg:x="1138" fg:w="2"/><text x="94.4553%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.2881%" y="373" width="0.0828%" height="15" fill="rgb(207,210,34)" fg:x="1139" fg:w="1"/><text x="94.5381%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="94.2881%" y="357" width="0.0828%" height="15" fill="rgb(244,45,4)" fg:x="1139" fg:w="1"/><text x="94.5381%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="94.2881%" y="341" width="0.0828%" height="15" fill="rgb(252,134,50)" fg:x="1139" fg:w="1"/><text x="94.5381%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.2881%" y="325" width="0.0828%" height="15" fill="rgb(238,74,2)" fg:x="1139" fg:w="1"/><text x="94.5381%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.25%)</title><rect x="95.4470%" y="277" width="0.2483%" height="15" fill="rgb(226,58,46)" fg:x="1153" fg:w="3"/><text x="95.6970%" y="287.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.17%)</title><rect x="95.5298%" y="261" width="0.1656%" height="15" fill="rgb(232,83,35)" fg:x="1154" fg:w="2"/><text x="95.7798%" y="271.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.41%)</title><rect x="95.3642%" y="309" width="0.4139%" height="15" fill="rgb(212,148,47)" fg:x="1152" fg:w="5"/><text x="95.6142%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="95.4470%" y="293" width="0.3311%" height="15" fill="rgb(235,29,1)" fg:x="1153" fg:w="4"/><text x="95.6970%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.6954%" y="277" width="0.0828%" height="15" fill="rgb(247,55,37)" fg:x="1156" fg:w="1"/><text x="95.9454%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6954%" y="261" width="0.0828%" height="15" fill="rgb(222,48,3)" fg:x="1156" fg:w="1"/><text x="95.9454%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.58%)</title><rect x="95.2815%" y="325" width="0.5795%" height="15" fill="rgb(234,21,33)" fg:x="1151" fg:w="7"/><text x="95.5315%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7781%" y="309" width="0.0828%" height="15" fill="rgb(247,178,53)" fg:x="1157" fg:w="1"/><text x="96.0281%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.7781%" y="293" width="0.0828%" height="15" fill="rgb(225,75,7)" fg:x="1157" fg:w="1"/><text x="96.0281%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.83%)</title><rect x="95.2815%" y="341" width="0.8278%" height="15" fill="rgb(219,199,7)" fg:x="1151" fg:w="10"/><text x="95.5315%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.25%)</title><rect x="95.8609%" y="325" width="0.2483%" height="15" fill="rgb(209,93,42)" fg:x="1158" fg:w="3"/><text x="96.1109%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="95.8609%" y="309" width="0.2483%" height="15" fill="rgb(240,175,17)" fg:x="1158" fg:w="3"/><text x="96.1109%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.25%)</title><rect x="96.1093%" y="325" width="0.2483%" height="15" fill="rgb(232,106,7)" fg:x="1161" fg:w="3"/><text x="96.3593%" y="335.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.25%)</title><rect x="96.1093%" y="309" width="0.2483%" height="15" fill="rgb(242,106,43)" fg:x="1161" fg:w="3"/><text x="96.3593%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="96.1093%" y="293" width="0.2483%" height="15" fill="rgb(242,61,37)" fg:x="1161" fg:w="3"/><text x="96.3593%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.25%)</title><rect x="96.1093%" y="277" width="0.2483%" height="15" fill="rgb(205,72,10)" fg:x="1161" fg:w="3"/><text x="96.3593%" y="287.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.17%)</title><rect x="96.1921%" y="261" width="0.1656%" height="15" fill="rgb(214,184,36)" fg:x="1162" fg:w="2"/><text x="96.4421%" y="271.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (16 samples, 1.32%)</title><rect x="95.1159%" y="357" width="1.3245%" height="15" fill="rgb(206,107,18)" fg:x="1149" fg:w="16"/><text x="95.3659%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="96.1093%" y="341" width="0.3311%" height="15" fill="rgb(210,75,5)" fg:x="1161" fg:w="4"/><text x="96.3593%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3576%" y="325" width="0.0828%" height="15" fill="rgb(205,3,19)" fg:x="1164" fg:w="1"/><text x="96.6076%" y="335.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (20 samples, 1.66%)</title><rect x="94.8675%" y="405" width="1.6556%" height="15" fill="rgb(207,181,42)" fg:x="1146" fg:w="20"/><text x="95.1175%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 1.49%)</title><rect x="95.0331%" y="389" width="1.4901%" height="15" fill="rgb(229,179,43)" fg:x="1148" fg:w="18"/><text x="95.2831%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 1.41%)</title><rect x="95.1159%" y="373" width="1.4073%" height="15" fill="rgb(246,95,30)" fg:x="1149" fg:w="17"/><text x="95.3659%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4404%" y="357" width="0.0828%" height="15" fill="rgb(234,144,45)" fg:x="1165" fg:w="1"/><text x="96.6904%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4404%" y="341" width="0.0828%" height="15" fill="rgb(250,54,25)" fg:x="1165" fg:w="1"/><text x="96.6904%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.5232%" y="389" width="0.0828%" height="15" fill="rgb(215,195,40)" fg:x="1166" fg:w="1"/><text x="96.7732%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 1.99%)</title><rect x="94.7020%" y="421" width="1.9868%" height="15" fill="rgb(233,188,42)" fg:x="1144" fg:w="24"/><text x="94.9520%" y="431.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.17%)</title><rect x="96.5232%" y="405" width="0.1656%" height="15" fill="rgb(247,227,35)" fg:x="1166" fg:w="2"/><text x="96.7732%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6060%" y="389" width="0.0828%" height="15" fill="rgb(249,124,27)" fg:x="1167" fg:w="1"/><text x="96.8560%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 2.32%)</title><rect x="94.4536%" y="469" width="2.3179%" height="15" fill="rgb(219,207,25)" fg:x="1141" fg:w="28"/><text x="94.7036%" y="479.50">&lt;..</text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (27 samples, 2.24%)</title><rect x="94.5364%" y="453" width="2.2351%" height="15" fill="rgb(241,216,47)" fg:x="1142" fg:w="27"/><text x="94.7864%" y="463.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 2.15%)</title><rect x="94.6192%" y="437" width="2.1523%" height="15" fill="rgb(233,82,50)" fg:x="1143" fg:w="26"/><text x="94.8692%" y="447.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="96.6887%" y="421" width="0.0828%" height="15" fill="rgb(232,63,2)" fg:x="1168" fg:w="1"/><text x="96.9387%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6887%" y="405" width="0.0828%" height="15" fill="rgb(236,184,28)" fg:x="1168" fg:w="1"/><text x="96.9387%" y="415.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (37 samples, 3.06%)</title><rect x="94.4536%" y="501" width="3.0629%" height="15" fill="rgb(254,63,27)" fg:x="1141" fg:w="37"/><text x="94.7036%" y="511.50">&lt;pl..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (37 samples, 3.06%)</title><rect x="94.4536%" y="485" width="3.0629%" height="15" fill="rgb(253,106,28)" fg:x="1141" fg:w="37"/><text x="94.7036%" y="495.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.75%)</title><rect x="96.7715%" y="469" width="0.7450%" height="15" fill="rgb(225,141,39)" fg:x="1169" fg:w="9"/><text x="97.0215%" y="479.50"></text></g><g><title>__libc_malloc (8 samples, 0.66%)</title><rect x="96.8543%" y="453" width="0.6623%" height="15" fill="rgb(222,157,20)" fg:x="1170" fg:w="8"/><text x="97.1043%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="97.5166%" y="469" width="0.0828%" height="15" fill="rgb(210,190,9)" fg:x="1178" fg:w="1"/><text x="97.7666%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6821%" y="453" width="0.0828%" height="15" fill="rgb(242,167,7)" fg:x="1180" fg:w="1"/><text x="97.9321%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="97.7649%" y="453" width="0.3311%" height="15" fill="rgb(227,82,41)" fg:x="1181" fg:w="4"/><text x="98.0149%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="97.8477%" y="437" width="0.2483%" height="15" fill="rgb(222,131,13)" fg:x="1182" fg:w="3"/><text x="98.0977%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.17%)</title><rect x="97.9305%" y="421" width="0.1656%" height="15" fill="rgb(221,98,26)" fg:x="1183" fg:w="2"/><text x="98.1805%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="98.0960%" y="453" width="0.0828%" height="15" fill="rgb(251,63,52)" fg:x="1185" fg:w="1"/><text x="98.3460%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2616%" y="421" width="0.0828%" height="15" fill="rgb(246,25,43)" fg:x="1187" fg:w="1"/><text x="98.5116%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.25%)</title><rect x="98.1788%" y="453" width="0.2483%" height="15" fill="rgb(247,167,15)" fg:x="1186" fg:w="3"/><text x="98.4288%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="98.1788%" y="437" width="0.2483%" height="15" fill="rgb(240,104,42)" fg:x="1186" fg:w="3"/><text x="98.4288%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3444%" y="421" width="0.0828%" height="15" fill="rgb(224,54,6)" fg:x="1188" fg:w="1"/><text x="98.5944%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5099%" y="405" width="0.0828%" height="15" fill="rgb(244,108,35)" fg:x="1190" fg:w="1"/><text x="98.7599%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5927%" y="405" width="0.0828%" height="15" fill="rgb(216,154,2)" fg:x="1191" fg:w="1"/><text x="98.8427%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5927%" y="389" width="0.0828%" height="15" fill="rgb(222,8,47)" fg:x="1191" fg:w="1"/><text x="98.8427%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5927%" y="373" width="0.0828%" height="15" fill="rgb(252,93,1)" fg:x="1191" fg:w="1"/><text x="98.8427%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="98.6755%" y="389" width="0.0828%" height="15" fill="rgb(223,226,51)" fg:x="1192" fg:w="1"/><text x="98.9255%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.7583%" y="389" width="0.0828%" height="15" fill="rgb(206,147,9)" fg:x="1193" fg:w="1"/><text x="99.0083%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="98.7583%" y="373" width="0.0828%" height="15" fill="rgb(248,180,41)" fg:x="1193" fg:w="1"/><text x="99.0083%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="98.7583%" y="357" width="0.0828%" height="15" fill="rgb(209,47,50)" fg:x="1193" fg:w="1"/><text x="99.0083%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.50%)</title><rect x="98.4272%" y="453" width="0.4967%" height="15" fill="rgb(243,65,31)" fg:x="1189" fg:w="6"/><text x="98.6772%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.41%)</title><rect x="98.5099%" y="437" width="0.4139%" height="15" fill="rgb(228,128,1)" fg:x="1190" fg:w="5"/><text x="98.7599%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.41%)</title><rect x="98.5099%" y="421" width="0.4139%" height="15" fill="rgb(231,192,16)" fg:x="1190" fg:w="5"/><text x="98.7599%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.25%)</title><rect x="98.6755%" y="405" width="0.2483%" height="15" fill="rgb(224,26,40)" fg:x="1192" fg:w="3"/><text x="98.9255%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8411%" y="389" width="0.0828%" height="15" fill="rgb(214,192,17)" fg:x="1194" fg:w="1"/><text x="99.0911%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0066%" y="405" width="0.0828%" height="15" fill="rgb(225,147,18)" fg:x="1196" fg:w="1"/><text x="99.2566%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0066%" y="389" width="0.0828%" height="15" fill="rgb(205,35,11)" fg:x="1196" fg:w="1"/><text x="99.2566%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0066%" y="373" width="0.0828%" height="15" fill="rgb(242,40,42)" fg:x="1196" fg:w="1"/><text x="99.2566%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="99.0894%" y="405" width="0.0828%" height="15" fill="rgb(250,170,13)" fg:x="1197" fg:w="1"/><text x="99.3394%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="99.0894%" y="389" width="0.0828%" height="15" fill="rgb(240,161,28)" fg:x="1197" fg:w="1"/><text x="99.3394%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="99.0894%" y="373" width="0.0828%" height="15" fill="rgb(245,179,12)" fg:x="1197" fg:w="1"/><text x="99.3394%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0894%" y="357" width="0.0828%" height="15" fill="rgb(250,92,32)" fg:x="1197" fg:w="1"/><text x="99.3394%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="99.2550%" y="389" width="0.0828%" height="15" fill="rgb(233,10,40)" fg:x="1199" fg:w="1"/><text x="99.5050%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="99.3377%" y="373" width="0.1656%" height="15" fill="rgb(217,98,1)" fg:x="1200" fg:w="2"/><text x="99.5877%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="99.3377%" y="389" width="0.2483%" height="15" fill="rgb(238,202,7)" fg:x="1200" fg:w="3"/><text x="99.5877%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="99.5033%" y="373" width="0.0828%" height="15" fill="rgb(222,91,3)" fg:x="1202" fg:w="1"/><text x="99.7533%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::to_json_value (26 samples, 2.15%)</title><rect x="97.5166%" y="501" width="2.1523%" height="15" fill="rgb(211,170,49)" fg:x="1178" fg:w="26"/><text x="97.7666%" y="511.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (26 samples, 2.15%)</title><rect x="97.5166%" y="485" width="2.1523%" height="15" fill="rgb(253,139,18)" fg:x="1178" fg:w="26"/><text x="97.7666%" y="495.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.07%)</title><rect x="97.5993%" y="469" width="2.0695%" height="15" fill="rgb(222,4,43)" fg:x="1179" fg:w="25"/><text x="97.8493%" y="479.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.75%)</title><rect x="98.9238%" y="453" width="0.7450%" height="15" fill="rgb(207,205,12)" fg:x="1195" fg:w="9"/><text x="99.1738%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (9 samples, 0.75%)</title><rect x="98.9238%" y="437" width="0.7450%" height="15" fill="rgb(216,159,46)" fg:x="1195" fg:w="9"/><text x="99.1738%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.75%)</title><rect x="98.9238%" y="421" width="0.7450%" height="15" fill="rgb(236,115,1)" fg:x="1195" fg:w="9"/><text x="99.1738%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.50%)</title><rect x="99.1722%" y="405" width="0.4967%" height="15" fill="rgb(251,35,33)" fg:x="1198" fg:w="6"/><text x="99.4222%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5861%" y="389" width="0.0828%" height="15" fill="rgb(248,62,51)" fg:x="1203" fg:w="1"/><text x="99.8361%" y="399.50"></text></g><g><title>&lt;plugins_rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (65 samples, 5.38%)</title><rect x="94.3709%" y="517" width="5.3808%" height="15" fill="rgb(254,180,19)" fg:x="1140" fg:w="65"/><text x="94.6209%" y="527.50">&lt;plugin..</text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="99.6689%" y="501" width="0.0828%" height="15" fill="rgb(217,100,32)" fg:x="1204" fg:w="1"/><text x="99.9189%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (103 samples, 8.53%)</title><rect x="91.3079%" y="581" width="8.5265%" height="15" fill="rgb(224,71,22)" fg:x="1103" fg:w="103"/><text x="91.5579%" y="591.50">core::iter::..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (70 samples, 5.79%)</title><rect x="94.0397%" y="565" width="5.7947%" height="15" fill="rgb(251,185,33)" fg:x="1136" fg:w="70"/><text x="94.2897%" y="575.50">alloc::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (70 samples, 5.79%)</title><rect x="94.0397%" y="549" width="5.7947%" height="15" fill="rgb(209,75,48)" fg:x="1136" fg:w="70"/><text x="94.2897%" y="559.50">&lt;core::..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (70 samples, 5.79%)</title><rect x="94.0397%" y="533" width="5.7947%" height="15" fill="rgb(253,190,16)" fg:x="1136" fg:w="70"/><text x="94.2897%" y="543.50">plugins..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="99.7517%" y="517" width="0.0828%" height="15" fill="rgb(226,140,1)" fg:x="1205" fg:w="1"/><text x="100.0017%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="99.7517%" y="501" width="0.0828%" height="15" fill="rgb(206,75,30)" fg:x="1205" fg:w="1"/><text x="100.0017%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.7517%" y="485" width="0.0828%" height="15" fill="rgb(231,208,37)" fg:x="1205" fg:w="1"/><text x="100.0017%" y="495.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (109 samples, 9.02%)</title><rect x="90.8940%" y="597" width="9.0232%" height="15" fill="rgb(238,136,40)" fg:x="1098" fg:w="109"/><text x="91.1440%" y="607.50">&lt;plugins_rpc:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8344%" y="581" width="0.0828%" height="15" fill="rgb(247,137,17)" fg:x="1206" fg:w="1"/><text x="100.0844%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8344%" y="565" width="0.0828%" height="15" fill="rgb(240,60,40)" fg:x="1206" fg:w="1"/><text x="100.0844%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="99.8344%" y="549" width="0.0828%" height="15" fill="rgb(236,68,50)" fg:x="1206" fg:w="1"/><text x="100.0844%" y="559.50"></text></g><g><title>all (1,208 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(230,42,12)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="1039.50"></text></g><g><title>simple-255e00ed (1,208 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(219,16,16)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="1023.50">simple-255e00ed</text></g><g><title>_start (1,208 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(220,38,35)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="1007.50">_start</text></g><g><title>__libc_start_main (1,208 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(228,33,1)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="991.50">__libc_start_main</text></g><g><title>main (1,208 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(241,46,31)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="975.50">main</text></g><g><title>std::rt::lang_start_internal (1,208 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(232,58,20)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,208 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(206,228,53)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,208 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(206,88,33)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,208 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(238,69,7)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,208 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(250,21,46)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,208 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(215,212,21)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,208 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(211,35,12)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,208 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(231,184,16)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,208 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(242,140,15)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="831.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,208 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(220,37,14)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="815.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,208 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(223,146,22)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,208 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(216,132,15)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="783.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,208 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(248,83,5)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="767.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,208 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(231,206,48)" fg:x="0" fg:w="1208"/><text x="0.2500%" y="751.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (282 samples, 23.34%)</title><rect x="76.6556%" y="725" width="23.3444%" height="15" fill="rgb(253,185,37)" fg:x="926" fg:w="282"/><text x="76.9056%" y="735.50">&lt;criterion::routine::Function&lt;M,F,T&gt; ..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (282 samples, 23.34%)</title><rect x="76.6556%" y="709" width="23.3444%" height="15" fill="rgb(208,21,44)" fg:x="926" fg:w="282"/><text x="76.9056%" y="719.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (282 samples, 23.34%)</title><rect x="76.6556%" y="693" width="23.3444%" height="15" fill="rgb(236,125,4)" fg:x="926" fg:w="282"/><text x="76.9056%" y="703.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (144 samples, 11.92%)</title><rect x="88.0795%" y="677" width="11.9205%" height="15" fill="rgb(226,134,25)" fg:x="1064" fg:w="144"/><text x="88.3295%" y="687.50">engine::session::S..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (144 samples, 11.92%)</title><rect x="88.0795%" y="661" width="11.9205%" height="15" fill="rgb(250,201,12)" fg:x="1064" fg:w="144"/><text x="88.3295%" y="671.50">engine::perform::S..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (127 samples, 10.51%)</title><rect x="89.4868%" y="645" width="10.5132%" height="15" fill="rgb(225,92,18)" fg:x="1081" fg:w="127"/><text x="89.7368%" y="655.50">kernel::plugins..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (127 samples, 10.51%)</title><rect x="89.4868%" y="629" width="10.5132%" height="15" fill="rgb(227,35,22)" fg:x="1081" fg:w="127"/><text x="89.7368%" y="639.50">&lt;plugins_dynlib..</text></g><g><title>plugins_rpc::querying::have_surroundings (110 samples, 9.11%)</title><rect x="90.8940%" y="613" width="9.1060%" height="15" fill="rgb(214,180,52)" fg:x="1098" fg:w="110"/><text x="91.1440%" y="623.50">plugins_rpc::..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="99.9172%" y="597" width="0.0828%" height="15" fill="rgb(233,55,38)" fg:x="1207" fg:w="1"/><text x="100.1672%" y="607.50"></text></g></svg></svg>