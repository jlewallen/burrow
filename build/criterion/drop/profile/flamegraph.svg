<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="1257"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.32%)</title><rect x="0.0796%" y="645" width="0.3182%" height="15" fill="rgb(205,19,11)" fg:x="1" fg:w="4"/><text x="0.3296%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="0.0796%" y="629" width="0.3182%" height="15" fill="rgb(207,108,29)" fg:x="1" fg:w="4"/><text x="0.3296%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.3182%" y="613" width="0.0796%" height="15" fill="rgb(236,215,43)" fg:x="4" fg:w="1"/><text x="0.5682%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.7955%" y="549" width="0.1591%" height="15" fill="rgb(213,58,35)" fg:x="10" fg:w="2"/><text x="1.0455%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9547%" y="549" width="0.0796%" height="15" fill="rgb(220,211,46)" fg:x="12" fg:w="1"/><text x="1.2047%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.0342%" y="533" width="0.0796%" height="15" fill="rgb(212,134,16)" fg:x="13" fg:w="1"/><text x="1.2842%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.0342%" y="517" width="0.0796%" height="15" fill="rgb(232,90,44)" fg:x="13" fg:w="1"/><text x="1.2842%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0342%" y="501" width="0.0796%" height="15" fill="rgb(212,18,36)" fg:x="13" fg:w="1"/><text x="1.2842%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.1138%" y="533" width="0.1591%" height="15" fill="rgb(206,112,24)" fg:x="14" fg:w="2"/><text x="1.3638%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.2729%" y="533" width="0.1591%" height="15" fill="rgb(238,223,40)" fg:x="16" fg:w="2"/><text x="1.5229%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3524%" y="517" width="0.0796%" height="15" fill="rgb(226,169,20)" fg:x="17" fg:w="1"/><text x="1.6024%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.5115%" y="517" width="0.1591%" height="15" fill="rgb(241,64,52)" fg:x="19" fg:w="2"/><text x="1.7615%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.6706%" y="517" width="0.1591%" height="15" fill="rgb(228,120,25)" fg:x="21" fg:w="2"/><text x="1.9206%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7502%" y="501" width="0.0796%" height="15" fill="rgb(234,108,19)" fg:x="22" fg:w="1"/><text x="2.0002%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.9889%" y="501" width="0.1591%" height="15" fill="rgb(236,133,29)" fg:x="25" fg:w="2"/><text x="2.2389%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="2.1480%" y="501" width="0.3182%" height="15" fill="rgb(246,174,53)" fg:x="27" fg:w="4"/><text x="2.3980%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.3071%" y="485" width="0.1591%" height="15" fill="rgb(210,105,35)" fg:x="29" fg:w="2"/><text x="2.5571%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4662%" y="485" width="0.0796%" height="15" fill="rgb(225,27,26)" fg:x="31" fg:w="1"/><text x="2.7162%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.15%)</title><rect x="0.5569%" y="565" width="2.1480%" height="15" fill="rgb(233,2,39)" fg:x="7" fg:w="27"/><text x="0.8069%" y="575.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.67%)</title><rect x="1.0342%" y="549" width="1.6706%" height="15" fill="rgb(219,164,26)" fg:x="13" fg:w="21"/><text x="1.2842%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.27%)</title><rect x="1.4320%" y="533" width="1.2729%" height="15" fill="rgb(236,211,5)" fg:x="18" fg:w="16"/><text x="1.6820%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="1.8298%" y="517" width="0.8751%" height="15" fill="rgb(244,227,23)" fg:x="23" fg:w="11"/><text x="2.0798%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="2.4662%" y="501" width="0.2387%" height="15" fill="rgb(230,184,8)" fg:x="31" fg:w="3"/><text x="2.7162%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.5457%" y="485" width="0.1591%" height="15" fill="rgb(217,125,48)" fg:x="32" fg:w="2"/><text x="2.7957%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6253%" y="469" width="0.0796%" height="15" fill="rgb(223,192,47)" fg:x="33" fg:w="1"/><text x="2.8753%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 2.39%)</title><rect x="0.3978%" y="597" width="2.3866%" height="15" fill="rgb(226,119,10)" fg:x="5" fg:w="30"/><text x="0.6478%" y="607.50">&lt;a..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 2.39%)</title><rect x="0.3978%" y="581" width="2.3866%" height="15" fill="rgb(221,49,29)" fg:x="5" fg:w="30"/><text x="0.6478%" y="591.50">&lt;h..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.7049%" y="565" width="0.0796%" height="15" fill="rgb(217,205,19)" fg:x="34" fg:w="1"/><text x="2.9549%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 2.78%)</title><rect x="0.0796%" y="661" width="2.7844%" height="15" fill="rgb(242,104,7)" fg:x="1" fg:w="35"/><text x="0.3296%" y="671.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (31 samples, 2.47%)</title><rect x="0.3978%" y="645" width="2.4662%" height="15" fill="rgb(209,154,48)" fg:x="5" fg:w="31"/><text x="0.6478%" y="655.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.47%)</title><rect x="0.3978%" y="629" width="2.4662%" height="15" fill="rgb(219,213,46)" fg:x="5" fg:w="31"/><text x="0.6478%" y="639.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (31 samples, 2.47%)</title><rect x="0.3978%" y="613" width="2.4662%" height="15" fill="rgb(229,105,38)" fg:x="5" fg:w="31"/><text x="0.6478%" y="623.50">co..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.7844%" y="597" width="0.0796%" height="15" fill="rgb(205,151,5)" fg:x="35" fg:w="1"/><text x="3.0344%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="2.8640%" y="629" width="0.0796%" height="15" fill="rgb(248,115,40)" fg:x="36" fg:w="1"/><text x="3.1140%" y="639.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="3.0231%" y="613" width="0.0796%" height="15" fill="rgb(206,179,2)" fg:x="38" fg:w="1"/><text x="3.2731%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.0231%" y="597" width="0.0796%" height="15" fill="rgb(230,103,24)" fg:x="38" fg:w="1"/><text x="3.2731%" y="607.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="3.1026%" y="597" width="0.0796%" height="15" fill="rgb(218,152,4)" fg:x="39" fg:w="1"/><text x="3.3526%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.1822%" y="565" width="0.0796%" height="15" fill="rgb(236,161,54)" fg:x="40" fg:w="1"/><text x="3.4322%" y="575.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="3.2617%" y="549" width="0.0796%" height="15" fill="rgb(226,65,17)" fg:x="41" fg:w="1"/><text x="3.5117%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="3.2617%" y="533" width="0.0796%" height="15" fill="rgb(221,134,44)" fg:x="41" fg:w="1"/><text x="3.5117%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="3.2617%" y="517" width="0.0796%" height="15" fill="rgb(251,129,4)" fg:x="41" fg:w="1"/><text x="3.5117%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="3.2617%" y="501" width="0.0796%" height="15" fill="rgb(244,32,34)" fg:x="41" fg:w="1"/><text x="3.5117%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="3.2617%" y="485" width="0.0796%" height="15" fill="rgb(251,224,37)" fg:x="41" fg:w="1"/><text x="3.5117%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="3.2617%" y="469" width="0.0796%" height="15" fill="rgb(248,117,31)" fg:x="41" fg:w="1"/><text x="3.5117%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="3.2617%" y="453" width="0.0796%" height="15" fill="rgb(222,208,37)" fg:x="41" fg:w="1"/><text x="3.5117%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="3.2617%" y="565" width="0.1591%" height="15" fill="rgb(234,211,25)" fg:x="41" fg:w="2"/><text x="3.5117%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="3.3413%" y="549" width="0.0796%" height="15" fill="rgb(211,72,6)" fg:x="42" fg:w="1"/><text x="3.5913%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="3.3413%" y="533" width="0.0796%" height="15" fill="rgb(249,198,38)" fg:x="42" fg:w="1"/><text x="3.5913%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="3.3413%" y="517" width="0.0796%" height="15" fill="rgb(221,86,51)" fg:x="42" fg:w="1"/><text x="3.5913%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.3413%" y="501" width="0.0796%" height="15" fill="rgb(226,178,43)" fg:x="42" fg:w="1"/><text x="3.5913%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.3413%" y="485" width="0.0796%" height="15" fill="rgb(215,145,7)" fg:x="42" fg:w="1"/><text x="3.5913%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="3.3413%" y="469" width="0.0796%" height="15" fill="rgb(250,202,36)" fg:x="42" fg:w="1"/><text x="3.5913%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="3.3413%" y="453" width="0.0796%" height="15" fill="rgb(215,86,13)" fg:x="42" fg:w="1"/><text x="3.5913%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="3.3413%" y="437" width="0.0796%" height="15" fill="rgb(221,134,12)" fg:x="42" fg:w="1"/><text x="3.5913%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="3.3413%" y="421" width="0.0796%" height="15" fill="rgb(213,82,10)" fg:x="42" fg:w="1"/><text x="3.5913%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="3.3413%" y="405" width="0.0796%" height="15" fill="rgb(214,142,0)" fg:x="42" fg:w="1"/><text x="3.5913%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="3.3413%" y="389" width="0.0796%" height="15" fill="rgb(205,145,9)" fg:x="42" fg:w="1"/><text x="3.5913%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.3413%" y="373" width="0.0796%" height="15" fill="rgb(244,214,8)" fg:x="42" fg:w="1"/><text x="3.5913%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="3.3413%" y="357" width="0.0796%" height="15" fill="rgb(224,72,51)" fg:x="42" fg:w="1"/><text x="3.5913%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.3413%" y="341" width="0.0796%" height="15" fill="rgb(233,137,37)" fg:x="42" fg:w="1"/><text x="3.5913%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="3.3413%" y="325" width="0.0796%" height="15" fill="rgb(208,71,28)" fg:x="42" fg:w="1"/><text x="3.5913%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="3.3413%" y="309" width="0.0796%" height="15" fill="rgb(226,31,7)" fg:x="42" fg:w="1"/><text x="3.5913%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="3.3413%" y="293" width="0.0796%" height="15" fill="rgb(229,62,18)" fg:x="42" fg:w="1"/><text x="3.5913%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.3413%" y="277" width="0.0796%" height="15" fill="rgb(226,74,28)" fg:x="42" fg:w="1"/><text x="3.5913%" y="287.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="3.5800%" y="533" width="0.1591%" height="15" fill="rgb(214,170,18)" fg:x="45" fg:w="2"/><text x="3.8300%" y="543.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="3.5004%" y="549" width="0.3182%" height="15" fill="rgb(227,229,35)" fg:x="44" fg:w="4"/><text x="3.7504%" y="559.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="3.7391%" y="533" width="0.0796%" height="15" fill="rgb(225,181,39)" fg:x="47" fg:w="1"/><text x="3.9891%" y="543.50"></text></g><g><title>dlopen (18 samples, 1.43%)</title><rect x="3.8186%" y="549" width="1.4320%" height="15" fill="rgb(253,124,44)" fg:x="48" fg:w="18"/><text x="4.0686%" y="559.50"></text></g><g><title>_dl_catch_error (18 samples, 1.43%)</title><rect x="3.8186%" y="533" width="1.4320%" height="15" fill="rgb(220,75,18)" fg:x="48" fg:w="18"/><text x="4.0686%" y="543.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.43%)</title><rect x="3.8186%" y="517" width="1.4320%" height="15" fill="rgb(239,175,43)" fg:x="48" fg:w="18"/><text x="4.0686%" y="527.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.43%)</title><rect x="3.8186%" y="501" width="1.4320%" height="15" fill="rgb(228,112,50)" fg:x="48" fg:w="18"/><text x="4.0686%" y="511.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.43%)</title><rect x="3.8186%" y="485" width="1.4320%" height="15" fill="rgb(232,105,36)" fg:x="48" fg:w="18"/><text x="4.0686%" y="495.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="5.1710%" y="469" width="0.0796%" height="15" fill="rgb(227,137,47)" fg:x="65" fg:w="1"/><text x="5.4210%" y="479.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="5.1710%" y="453" width="0.0796%" height="15" fill="rgb(217,51,9)" fg:x="65" fg:w="1"/><text x="5.4210%" y="463.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (28 samples, 2.23%)</title><rect x="3.1822%" y="581" width="2.2275%" height="15" fill="rgb(245,117,0)" fg:x="40" fg:w="28"/><text x="3.4322%" y="591.50">&lt;..</text></g><g><title>libloading::safe::Library::new (25 samples, 1.99%)</title><rect x="3.4208%" y="565" width="1.9889%" height="15" fill="rgb(252,52,30)" fg:x="43" fg:w="25"/><text x="3.6708%" y="575.50">l..</text></g><g><title>libloading::util::cstr_cow_from_bytes (2 samples, 0.16%)</title><rect x="5.2506%" y="549" width="0.1591%" height="15" fill="rgb(227,85,33)" fg:x="66" fg:w="2"/><text x="5.5006%" y="559.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.16%)</title><rect x="5.2506%" y="533" width="0.1591%" height="15" fill="rgb(220,157,20)" fg:x="66" fg:w="2"/><text x="5.5006%" y="543.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (2 samples, 0.16%)</title><rect x="5.2506%" y="517" width="0.1591%" height="15" fill="rgb(254,14,34)" fg:x="66" fg:w="2"/><text x="5.5006%" y="527.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="5.3302%" y="501" width="0.0796%" height="15" fill="rgb(216,103,41)" fg:x="67" fg:w="1"/><text x="5.5802%" y="511.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="5.3302%" y="485" width="0.0796%" height="15" fill="rgb(245,221,9)" fg:x="67" fg:w="1"/><text x="5.5802%" y="495.50"></text></g><g><title>core::slice::memchr::repeat_byte (1 samples, 0.08%)</title><rect x="5.3302%" y="469" width="0.0796%" height="15" fill="rgb(254,136,47)" fg:x="67" fg:w="1"/><text x="5.5802%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="5.4097%" y="581" width="0.0796%" height="15" fill="rgb(235,71,46)" fg:x="68" fg:w="1"/><text x="5.6597%" y="591.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (30 samples, 2.39%)</title><rect x="3.1822%" y="597" width="2.3866%" height="15" fill="rgb(242,154,29)" fg:x="40" fg:w="30"/><text x="3.4322%" y="607.50">ke..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="5.4893%" y="581" width="0.0796%" height="15" fill="rgb(210,65,31)" fg:x="69" fg:w="1"/><text x="5.7393%" y="591.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="5.4893%" y="565" width="0.0796%" height="15" fill="rgb(244,9,50)" fg:x="69" fg:w="1"/><text x="5.7393%" y="575.50"></text></g><g><title>engine::session::Session::initialize (34 samples, 2.70%)</title><rect x="3.1026%" y="613" width="2.7049%" height="15" fill="rgb(215,141,38)" fg:x="39" fg:w="34"/><text x="3.3526%" y="623.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="5.5688%" y="597" width="0.2387%" height="15" fill="rgb(241,129,6)" fg:x="70" fg:w="3"/><text x="5.8188%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="5.5688%" y="581" width="0.2387%" height="15" fill="rgb(253,169,4)" fg:x="70" fg:w="3"/><text x="5.8188%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="5.5688%" y="565" width="0.2387%" height="15" fill="rgb(237,82,36)" fg:x="70" fg:w="3"/><text x="5.8188%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="5.5688%" y="549" width="0.2387%" height="15" fill="rgb(209,171,11)" fg:x="70" fg:w="3"/><text x="5.8188%" y="559.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="5.5688%" y="533" width="0.2387%" height="15" fill="rgb(242,19,22)" fg:x="70" fg:w="3"/><text x="5.8188%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (39 samples, 3.10%)</title><rect x="2.8640%" y="661" width="3.1026%" height="15" fill="rgb(251,122,24)" fg:x="36" fg:w="39"/><text x="3.1140%" y="671.50">&lt;en..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (39 samples, 3.10%)</title><rect x="2.8640%" y="645" width="3.1026%" height="15" fill="rgb(226,166,42)" fg:x="36" fg:w="39"/><text x="3.1140%" y="655.50">eng..</text></g><g><title>engine::session::Session::new (38 samples, 3.02%)</title><rect x="2.9435%" y="629" width="3.0231%" height="15" fill="rgb(244,101,48)" fg:x="37" fg:w="38"/><text x="3.1935%" y="639.50">eng..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="5.8075%" y="613" width="0.1591%" height="15" fill="rgb(227,125,1)" fg:x="73" fg:w="2"/><text x="6.0575%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.8075%" y="597" width="0.1591%" height="15" fill="rgb(206,79,43)" fg:x="73" fg:w="2"/><text x="6.0575%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.8870%" y="581" width="0.0796%" height="15" fill="rgb(241,109,41)" fg:x="74" fg:w="1"/><text x="6.1370%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.8870%" y="565" width="0.0796%" height="15" fill="rgb(219,73,4)" fg:x="74" fg:w="1"/><text x="6.1370%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="5.9666%" y="645" width="0.0796%" height="15" fill="rgb(239,25,41)" fg:x="75" fg:w="1"/><text x="6.2166%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.0461%" y="645" width="0.1591%" height="15" fill="rgb(208,88,46)" fg:x="76" fg:w="2"/><text x="6.2961%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.1257%" y="629" width="0.0796%" height="15" fill="rgb(239,184,9)" fg:x="77" fg:w="1"/><text x="6.3757%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.1257%" y="613" width="0.0796%" height="15" fill="rgb(223,114,13)" fg:x="77" fg:w="1"/><text x="6.3757%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.1257%" y="597" width="0.0796%" height="15" fill="rgb(214,28,42)" fg:x="77" fg:w="1"/><text x="6.3757%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.1257%" y="581" width="0.0796%" height="15" fill="rgb(252,32,44)" fg:x="77" fg:w="1"/><text x="6.3757%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.1257%" y="565" width="0.0796%" height="15" fill="rgb(231,159,4)" fg:x="77" fg:w="1"/><text x="6.3757%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.1257%" y="549" width="0.0796%" height="15" fill="rgb(210,35,26)" fg:x="77" fg:w="1"/><text x="6.3757%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.1257%" y="533" width="0.0796%" height="15" fill="rgb(208,190,37)" fg:x="77" fg:w="1"/><text x="6.3757%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="6.1257%" y="517" width="0.0796%" height="15" fill="rgb(226,148,22)" fg:x="77" fg:w="1"/><text x="6.3757%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="6.1257%" y="501" width="0.0796%" height="15" fill="rgb(242,153,24)" fg:x="77" fg:w="1"/><text x="6.3757%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="6.1257%" y="485" width="0.0796%" height="15" fill="rgb(213,133,7)" fg:x="77" fg:w="1"/><text x="6.3757%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="6.1257%" y="469" width="0.0796%" height="15" fill="rgb(248,206,18)" fg:x="77" fg:w="1"/><text x="6.3757%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.1257%" y="453" width="0.0796%" height="15" fill="rgb(233,157,4)" fg:x="77" fg:w="1"/><text x="6.3757%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="6.2053%" y="645" width="0.0796%" height="15" fill="rgb(249,179,32)" fg:x="78" fg:w="1"/><text x="6.4553%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="6.2053%" y="629" width="0.0796%" height="15" fill="rgb(248,69,35)" fg:x="78" fg:w="1"/><text x="6.4553%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="6.2053%" y="613" width="0.0796%" height="15" fill="rgb(249,158,38)" fg:x="78" fg:w="1"/><text x="6.4553%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.2053%" y="597" width="0.0796%" height="15" fill="rgb(223,18,43)" fg:x="78" fg:w="1"/><text x="6.4553%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (3 samples, 0.24%)</title><rect x="6.2848%" y="645" width="0.2387%" height="15" fill="rgb(238,42,45)" fg:x="79" fg:w="3"/><text x="6.5348%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (2 samples, 0.16%)</title><rect x="6.3644%" y="629" width="0.1591%" height="15" fill="rgb(219,65,47)" fg:x="80" fg:w="2"/><text x="6.6144%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="6.4439%" y="613" width="0.0796%" height="15" fill="rgb(248,153,12)" fg:x="81" fg:w="1"/><text x="6.6939%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.4439%" y="597" width="0.0796%" height="15" fill="rgb(240,118,4)" fg:x="81" fg:w="1"/><text x="6.6939%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="6.5235%" y="629" width="0.0796%" height="15" fill="rgb(250,96,34)" fg:x="82" fg:w="1"/><text x="6.7735%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.5235%" y="613" width="0.0796%" height="15" fill="rgb(221,15,4)" fg:x="82" fg:w="1"/><text x="6.7735%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="6.5235%" y="597" width="0.0796%" height="15" fill="rgb(217,149,33)" fg:x="82" fg:w="1"/><text x="6.7735%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="6.6826%" y="565" width="0.0796%" height="15" fill="rgb(213,58,29)" fg:x="84" fg:w="1"/><text x="6.9326%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.6826%" y="549" width="0.0796%" height="15" fill="rgb(236,218,9)" fg:x="84" fg:w="1"/><text x="6.9326%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="6.6030%" y="597" width="0.2387%" height="15" fill="rgb(248,40,19)" fg:x="83" fg:w="3"/><text x="6.8530%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="6.6030%" y="581" width="0.2387%" height="15" fill="rgb(212,17,6)" fg:x="83" fg:w="3"/><text x="6.8530%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.7621%" y="565" width="0.0796%" height="15" fill="rgb(206,212,20)" fg:x="85" fg:w="1"/><text x="7.0121%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="6.9212%" y="565" width="0.2387%" height="15" fill="rgb(229,80,37)" fg:x="87" fg:w="3"/><text x="7.1712%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="6.9212%" y="549" width="0.2387%" height="15" fill="rgb(253,8,37)" fg:x="87" fg:w="3"/><text x="7.1712%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="6.9212%" y="533" width="0.2387%" height="15" fill="rgb(215,16,43)" fg:x="87" fg:w="3"/><text x="7.1712%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="6.9212%" y="517" width="0.2387%" height="15" fill="rgb(236,219,16)" fg:x="87" fg:w="3"/><text x="7.1712%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="6.9212%" y="501" width="0.2387%" height="15" fill="rgb(251,0,3)" fg:x="87" fg:w="3"/><text x="7.1712%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.24%)</title><rect x="6.9212%" y="485" width="0.2387%" height="15" fill="rgb(207,133,37)" fg:x="87" fg:w="3"/><text x="7.1712%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.24%)</title><rect x="6.9212%" y="469" width="0.2387%" height="15" fill="rgb(250,143,20)" fg:x="87" fg:w="3"/><text x="7.1712%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.2395%" y="549" width="0.0796%" height="15" fill="rgb(242,19,50)" fg:x="91" fg:w="1"/><text x="7.4895%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="7.3190%" y="549" width="0.3182%" height="15" fill="rgb(206,124,43)" fg:x="92" fg:w="4"/><text x="7.5690%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="7.3986%" y="533" width="0.2387%" height="15" fill="rgb(229,4,38)" fg:x="93" fg:w="3"/><text x="7.6486%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.3986%" y="517" width="0.2387%" height="15" fill="rgb(247,220,45)" fg:x="93" fg:w="3"/><text x="7.6486%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.3986%" y="501" width="0.2387%" height="15" fill="rgb(247,195,0)" fg:x="93" fg:w="3"/><text x="7.6486%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.4781%" y="485" width="0.1591%" height="15" fill="rgb(252,12,19)" fg:x="94" fg:w="2"/><text x="7.7281%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="7.7168%" y="533" width="0.4773%" height="15" fill="rgb(222,49,50)" fg:x="97" fg:w="6"/><text x="7.9668%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="7.8759%" y="517" width="0.3182%" height="15" fill="rgb(209,157,28)" fg:x="99" fg:w="4"/><text x="8.1259%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="7.8759%" y="501" width="0.3182%" height="15" fill="rgb(238,174,24)" fg:x="99" fg:w="4"/><text x="8.1259%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="7.9554%" y="485" width="0.2387%" height="15" fill="rgb(224,17,28)" fg:x="100" fg:w="3"/><text x="8.2054%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.1146%" y="469" width="0.0796%" height="15" fill="rgb(249,7,29)" fg:x="102" fg:w="1"/><text x="8.3646%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.1146%" y="453" width="0.0796%" height="15" fill="rgb(243,178,4)" fg:x="102" fg:w="1"/><text x="8.3646%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.1146%" y="437" width="0.0796%" height="15" fill="rgb(246,138,35)" fg:x="102" fg:w="1"/><text x="8.3646%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.4328%" y="485" width="0.0796%" height="15" fill="rgb(251,85,18)" fg:x="106" fg:w="1"/><text x="8.6828%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="8.3532%" y="517" width="0.2387%" height="15" fill="rgb(254,55,9)" fg:x="105" fg:w="3"/><text x="8.6032%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="8.3532%" y="501" width="0.2387%" height="15" fill="rgb(248,4,50)" fg:x="105" fg:w="3"/><text x="8.6032%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.5123%" y="485" width="0.0796%" height="15" fill="rgb(215,208,14)" fg:x="107" fg:w="1"/><text x="8.7623%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.5123%" y="469" width="0.0796%" height="15" fill="rgb(218,37,18)" fg:x="107" fg:w="1"/><text x="8.7623%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="8.5919%" y="517" width="0.3978%" height="15" fill="rgb(206,104,13)" fg:x="108" fg:w="5"/><text x="8.8419%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.7510%" y="501" width="0.2387%" height="15" fill="rgb(248,94,22)" fg:x="110" fg:w="3"/><text x="9.0010%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.8305%" y="485" width="0.1591%" height="15" fill="rgb(235,42,46)" fg:x="111" fg:w="2"/><text x="9.0805%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.8305%" y="469" width="0.1591%" height="15" fill="rgb(220,228,48)" fg:x="111" fg:w="2"/><text x="9.0805%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.9101%" y="453" width="0.0796%" height="15" fill="rgb(216,58,12)" fg:x="112" fg:w="1"/><text x="9.1601%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.9101%" y="437" width="0.0796%" height="15" fill="rgb(223,97,52)" fg:x="112" fg:w="1"/><text x="9.1601%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.9101%" y="421" width="0.0796%" height="15" fill="rgb(208,159,17)" fg:x="112" fg:w="1"/><text x="9.1601%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="8.9897%" y="485" width="0.3182%" height="15" fill="rgb(215,172,9)" fg:x="113" fg:w="4"/><text x="9.2397%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="9.0692%" y="469" width="0.2387%" height="15" fill="rgb(252,175,30)" fg:x="114" fg:w="3"/><text x="9.3192%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.2283%" y="453" width="0.0796%" height="15" fill="rgb(209,159,10)" fg:x="116" fg:w="1"/><text x="9.4783%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.2283%" y="437" width="0.0796%" height="15" fill="rgb(229,73,51)" fg:x="116" fg:w="1"/><text x="9.4783%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.3079%" y="453" width="0.0796%" height="15" fill="rgb(208,212,43)" fg:x="117" fg:w="1"/><text x="9.5579%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.3079%" y="437" width="0.0796%" height="15" fill="rgb(254,123,53)" fg:x="117" fg:w="1"/><text x="9.5579%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.3079%" y="421" width="0.0796%" height="15" fill="rgb(254,128,49)" fg:x="117" fg:w="1"/><text x="9.5579%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.3079%" y="405" width="0.0796%" height="15" fill="rgb(246,16,16)" fg:x="117" fg:w="1"/><text x="9.5579%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.3874%" y="453" width="0.1591%" height="15" fill="rgb(209,200,1)" fg:x="118" fg:w="2"/><text x="9.6374%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.3874%" y="437" width="0.1591%" height="15" fill="rgb(235,9,3)" fg:x="118" fg:w="2"/><text x="9.6374%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.4670%" y="421" width="0.0796%" height="15" fill="rgb(233,121,54)" fg:x="119" fg:w="1"/><text x="9.7170%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.4670%" y="405" width="0.0796%" height="15" fill="rgb(236,80,25)" fg:x="119" fg:w="1"/><text x="9.7170%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.4670%" y="389" width="0.0796%" height="15" fill="rgb(220,44,24)" fg:x="119" fg:w="1"/><text x="9.7170%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.4670%" y="373" width="0.0796%" height="15" fill="rgb(236,225,16)" fg:x="119" fg:w="1"/><text x="9.7170%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.4670%" y="357" width="0.0796%" height="15" fill="rgb(237,140,0)" fg:x="119" fg:w="1"/><text x="9.7170%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="9.3079%" y="469" width="0.3182%" height="15" fill="rgb(243,225,53)" fg:x="117" fg:w="4"/><text x="9.5579%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.5465%" y="453" width="0.0796%" height="15" fill="rgb(240,140,30)" fg:x="120" fg:w="1"/><text x="9.7965%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="8.9897%" y="501" width="0.7955%" height="15" fill="rgb(217,51,16)" fg:x="113" fg:w="10"/><text x="9.2397%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="9.3079%" y="485" width="0.4773%" height="15" fill="rgb(245,75,50)" fg:x="117" fg:w="6"/><text x="9.5579%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.6261%" y="469" width="0.1591%" height="15" fill="rgb(208,174,22)" fg:x="121" fg:w="2"/><text x="9.8761%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.7056%" y="453" width="0.0796%" height="15" fill="rgb(219,98,50)" fg:x="122" fg:w="1"/><text x="9.9556%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.95%)</title><rect x="8.9897%" y="517" width="0.9547%" height="15" fill="rgb(243,138,3)" fg:x="113" fg:w="12"/><text x="9.2397%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.7852%" y="501" width="0.1591%" height="15" fill="rgb(243,132,26)" fg:x="123" fg:w="2"/><text x="10.0352%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.7852%" y="485" width="0.1591%" height="15" fill="rgb(250,201,8)" fg:x="123" fg:w="2"/><text x="10.0352%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="9.8648%" y="469" width="0.0796%" height="15" fill="rgb(213,91,26)" fg:x="124" fg:w="1"/><text x="10.1148%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 1.99%)</title><rect x="8.1941%" y="533" width="1.9889%" height="15" fill="rgb(229,117,1)" fg:x="103" fg:w="25"/><text x="8.4441%" y="543.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="9.9443%" y="517" width="0.2387%" height="15" fill="rgb(229,24,6)" fg:x="125" fg:w="3"/><text x="10.1943%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.0239%" y="501" width="0.1591%" height="15" fill="rgb(206,69,11)" fg:x="126" fg:w="2"/><text x="10.2739%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="10.1034%" y="485" width="0.0796%" height="15" fill="rgb(234,111,34)" fg:x="127" fg:w="1"/><text x="10.3534%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.02%)</title><rect x="7.6372%" y="549" width="3.0231%" height="15" fill="rgb(213,187,51)" fg:x="96" fg:w="38"/><text x="7.8872%" y="559.50">ser..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="10.1830%" y="533" width="0.4773%" height="15" fill="rgb(207,45,11)" fg:x="128" fg:w="6"/><text x="10.4330%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="10.3421%" y="517" width="0.3182%" height="15" fill="rgb(225,151,47)" fg:x="130" fg:w="4"/><text x="10.5921%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.5012%" y="501" width="0.1591%" height="15" fill="rgb(211,226,5)" fg:x="132" fg:w="2"/><text x="10.7512%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.5807%" y="485" width="0.0796%" height="15" fill="rgb(214,83,52)" fg:x="133" fg:w="1"/><text x="10.8307%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.5807%" y="469" width="0.0796%" height="15" fill="rgb(229,49,53)" fg:x="133" fg:w="1"/><text x="10.8307%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.5807%" y="453" width="0.0796%" height="15" fill="rgb(246,8,28)" fg:x="133" fg:w="1"/><text x="10.8307%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (46 samples, 3.66%)</title><rect x="7.1599%" y="565" width="3.6595%" height="15" fill="rgb(207,28,41)" fg:x="90" fg:w="46"/><text x="7.4099%" y="575.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.6603%" y="549" width="0.1591%" height="15" fill="rgb(254,22,25)" fg:x="134" fg:w="2"/><text x="10.9103%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.6603%" y="533" width="0.1591%" height="15" fill="rgb(209,120,42)" fg:x="134" fg:w="2"/><text x="10.9103%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.7399%" y="517" width="0.0796%" height="15" fill="rgb(216,194,18)" fg:x="135" fg:w="1"/><text x="10.9899%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9785%" y="533" width="0.0796%" height="15" fill="rgb(213,70,17)" fg:x="138" fg:w="1"/><text x="11.2285%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.2172%" y="517" width="0.0796%" height="15" fill="rgb(228,66,19)" fg:x="141" fg:w="1"/><text x="11.4672%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2172%" y="501" width="0.0796%" height="15" fill="rgb(236,221,54)" fg:x="141" fg:w="1"/><text x="11.4672%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="11.3763%" y="485" width="0.1591%" height="15" fill="rgb(207,175,15)" fg:x="143" fg:w="2"/><text x="11.6263%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="11.3763%" y="469" width="0.1591%" height="15" fill="rgb(234,76,8)" fg:x="143" fg:w="2"/><text x="11.6263%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="11.3763%" y="453" width="0.1591%" height="15" fill="rgb(243,106,0)" fg:x="143" fg:w="2"/><text x="11.6263%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5354%" y="469" width="0.0796%" height="15" fill="rgb(208,48,19)" fg:x="145" fg:w="1"/><text x="11.7854%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.6150%" y="453" width="0.0796%" height="15" fill="rgb(251,50,29)" fg:x="146" fg:w="1"/><text x="11.8650%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.6945%" y="437" width="0.0796%" height="15" fill="rgb(222,31,49)" fg:x="147" fg:w="1"/><text x="11.9445%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="10.8194%" y="565" width="1.0342%" height="15" fill="rgb(232,33,18)" fg:x="136" fg:w="13"/><text x="11.0694%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.03%)</title><rect x="10.8194%" y="549" width="1.0342%" height="15" fill="rgb(209,1,44)" fg:x="136" fg:w="13"/><text x="11.0694%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="11.0581%" y="533" width="0.7955%" height="15" fill="rgb(211,7,1)" fg:x="139" fg:w="10"/><text x="11.3081%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="11.2967%" y="517" width="0.5569%" height="15" fill="rgb(224,111,27)" fg:x="142" fg:w="7"/><text x="11.5467%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="11.3763%" y="501" width="0.4773%" height="15" fill="rgb(252,195,39)" fg:x="143" fg:w="6"/><text x="11.6263%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="11.5354%" y="485" width="0.3182%" height="15" fill="rgb(237,198,5)" fg:x="145" fg:w="4"/><text x="11.7854%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="11.6150%" y="469" width="0.2387%" height="15" fill="rgb(232,148,1)" fg:x="146" fg:w="3"/><text x="11.8650%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.6945%" y="453" width="0.1591%" height="15" fill="rgb(249,41,3)" fg:x="147" fg:w="2"/><text x="11.9445%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.7741%" y="437" width="0.0796%" height="15" fill="rgb(215,14,33)" fg:x="148" fg:w="1"/><text x="12.0241%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="11.8536%" y="549" width="0.0796%" height="15" fill="rgb(209,146,24)" fg:x="149" fg:w="1"/><text x="12.1036%" y="559.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="11.8536%" y="533" width="0.0796%" height="15" fill="rgb(219,51,47)" fg:x="149" fg:w="1"/><text x="12.1036%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="12.0127%" y="517" width="0.3978%" height="15" fill="rgb(234,217,40)" fg:x="151" fg:w="5"/><text x="12.2627%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="12.1718%" y="501" width="0.2387%" height="15" fill="rgb(228,34,26)" fg:x="153" fg:w="3"/><text x="12.4218%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="12.1718%" y="485" width="0.2387%" height="15" fill="rgb(224,50,29)" fg:x="153" fg:w="3"/><text x="12.4218%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4105%" y="517" width="0.0796%" height="15" fill="rgb(205,79,51)" fg:x="156" fg:w="1"/><text x="12.6605%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4901%" y="517" width="0.0796%" height="15" fill="rgb(218,136,28)" fg:x="157" fg:w="1"/><text x="12.7401%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.4901%" y="501" width="0.0796%" height="15" fill="rgb(220,150,10)" fg:x="157" fg:w="1"/><text x="12.7401%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="12.5696%" y="517" width="0.1591%" height="15" fill="rgb(242,158,47)" fg:x="158" fg:w="2"/><text x="12.8196%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.6492%" y="501" width="0.0796%" height="15" fill="rgb(209,68,0)" fg:x="159" fg:w="1"/><text x="12.8992%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="12.9674%" y="437" width="0.2387%" height="15" fill="rgb(208,13,41)" fg:x="163" fg:w="3"/><text x="13.2174%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="13.0469%" y="421" width="0.1591%" height="15" fill="rgb(226,201,7)" fg:x="164" fg:w="2"/><text x="13.2969%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1265%" y="405" width="0.0796%" height="15" fill="rgb(236,103,26)" fg:x="165" fg:w="1"/><text x="13.3765%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.64%)</title><rect x="12.8083%" y="469" width="0.6364%" height="15" fill="rgb(243,162,8)" fg:x="161" fg:w="8"/><text x="13.0583%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="12.8878%" y="453" width="0.5569%" height="15" fill="rgb(237,225,11)" fg:x="162" fg:w="7"/><text x="13.1378%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="13.2060%" y="437" width="0.2387%" height="15" fill="rgb(247,186,32)" fg:x="166" fg:w="3"/><text x="13.4560%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6834%" y="405" width="0.0796%" height="15" fill="rgb(215,26,28)" fg:x="172" fg:w="1"/><text x="13.9334%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6834%" y="389" width="0.0796%" height="15" fill="rgb(208,121,6)" fg:x="172" fg:w="1"/><text x="13.9334%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.6834%" y="373" width="0.0796%" height="15" fill="rgb(225,91,3)" fg:x="172" fg:w="1"/><text x="13.9334%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.2403%" y="373" width="0.1591%" height="15" fill="rgb(246,119,36)" fg:x="179" fg:w="2"/><text x="14.4903%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3198%" y="357" width="0.0796%" height="15" fill="rgb(254,173,2)" fg:x="180" fg:w="1"/><text x="14.5698%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="14.5585%" y="357" width="0.3182%" height="15" fill="rgb(209,87,54)" fg:x="183" fg:w="4"/><text x="14.8085%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="14.6380%" y="341" width="0.2387%" height="15" fill="rgb(223,216,20)" fg:x="184" fg:w="3"/><text x="14.8880%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7971%" y="325" width="0.0796%" height="15" fill="rgb(220,31,8)" fg:x="186" fg:w="1"/><text x="15.0471%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7971%" y="309" width="0.0796%" height="15" fill="rgb(220,185,15)" fg:x="186" fg:w="1"/><text x="15.0471%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="14.0811%" y="389" width="0.8751%" height="15" fill="rgb(247,190,50)" fg:x="177" fg:w="11"/><text x="14.3311%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="14.3994%" y="373" width="0.5569%" height="15" fill="rgb(239,173,47)" fg:x="181" fg:w="7"/><text x="14.6494%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8767%" y="357" width="0.0796%" height="15" fill="rgb(218,190,42)" fg:x="187" fg:w="1"/><text x="15.1267%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.43%)</title><rect x="13.6834%" y="421" width="1.4320%" height="15" fill="rgb(251,207,16)" fg:x="172" fg:w="18"/><text x="13.9334%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.35%)</title><rect x="13.7629%" y="405" width="1.3524%" height="15" fill="rgb(222,199,47)" fg:x="173" fg:w="17"/><text x="14.0129%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.9562%" y="389" width="0.1591%" height="15" fill="rgb(245,190,7)" fg:x="188" fg:w="2"/><text x="15.2062%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (23 samples, 1.83%)</title><rect x="13.4447%" y="453" width="1.8298%" height="15" fill="rgb(239,85,38)" fg:x="169" fg:w="23"/><text x="13.6947%" y="463.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (23 samples, 1.83%)</title><rect x="13.4447%" y="437" width="1.8298%" height="15" fill="rgb(229,69,51)" fg:x="169" fg:w="23"/><text x="13.6947%" y="447.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.1154%" y="421" width="0.1591%" height="15" fill="rgb(231,104,51)" fg:x="190" fg:w="2"/><text x="15.3654%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (34 samples, 2.70%)</title><rect x="12.7287%" y="485" width="2.7049%" height="15" fill="rgb(235,49,4)" fg:x="160" fg:w="34"/><text x="12.9787%" y="495.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (25 samples, 1.99%)</title><rect x="13.4447%" y="469" width="1.9889%" height="15" fill="rgb(246,166,20)" fg:x="169" fg:w="25"/><text x="13.6947%" y="479.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.2745%" y="453" width="0.1591%" height="15" fill="rgb(230,119,37)" fg:x="192" fg:w="2"/><text x="15.5245%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (37 samples, 2.94%)</title><rect x="12.7287%" y="501" width="2.9435%" height="15" fill="rgb(234,77,34)" fg:x="160" fg:w="37"/><text x="12.9787%" y="511.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="15.4336%" y="485" width="0.2387%" height="15" fill="rgb(211,222,33)" fg:x="194" fg:w="3"/><text x="15.6836%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.5131%" y="469" width="0.1591%" height="15" fill="rgb(226,45,42)" fg:x="195" fg:w="2"/><text x="15.7631%" y="479.50"></text></g><g><title>engine::session::Session::flush (116 samples, 9.23%)</title><rect x="6.5235%" y="645" width="9.2283%" height="15" fill="rgb(215,174,28)" fg:x="82" fg:w="116"/><text x="6.7735%" y="655.50">engine::sessi..</text></g><g><title>engine::session::state::State::close (115 samples, 9.15%)</title><rect x="6.6030%" y="629" width="9.1488%" height="15" fill="rgb(254,173,49)" fg:x="83" fg:w="115"/><text x="6.8530%" y="639.50">engine::sessi..</text></g><g><title>engine::session::state::State::flush_entities (115 samples, 9.15%)</title><rect x="6.6030%" y="613" width="9.1488%" height="15" fill="rgb(229,191,6)" fg:x="83" fg:w="115"/><text x="6.8530%" y="623.50">engine::sessi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (112 samples, 8.91%)</title><rect x="6.8417%" y="597" width="8.9101%" height="15" fill="rgb(212,145,22)" fg:x="86" fg:w="112"/><text x="7.0917%" y="607.50">engine::sessi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (112 samples, 8.91%)</title><rect x="6.8417%" y="581" width="8.9101%" height="15" fill="rgb(226,6,51)" fg:x="86" fg:w="112"/><text x="7.0917%" y="591.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (49 samples, 3.90%)</title><rect x="11.8536%" y="565" width="3.8982%" height="15" fill="rgb(227,128,8)" fg:x="149" fg:w="49"/><text x="12.1036%" y="575.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (48 samples, 3.82%)</title><rect x="11.9332%" y="549" width="3.8186%" height="15" fill="rgb(205,24,10)" fg:x="150" fg:w="48"/><text x="12.1832%" y="559.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (48 samples, 3.82%)</title><rect x="11.9332%" y="533" width="3.8186%" height="15" fill="rgb(217,147,27)" fg:x="150" fg:w="48"/><text x="12.1832%" y="543.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 3.02%)</title><rect x="12.7287%" y="517" width="3.0231%" height="15" fill="rgb(250,82,42)" fg:x="160" fg:w="38"/><text x="12.9787%" y="527.50">ser..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6722%" y="501" width="0.0796%" height="15" fill="rgb(248,93,17)" fg:x="197" fg:w="1"/><text x="15.9222%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="15.8313%" y="597" width="0.1591%" height="15" fill="rgb(254,212,40)" fg:x="199" fg:w="2"/><text x="16.0813%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="15.9109%" y="581" width="0.0796%" height="15" fill="rgb(229,209,2)" fg:x="200" fg:w="1"/><text x="16.1609%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.9109%" y="565" width="0.0796%" height="15" fill="rgb(211,50,43)" fg:x="200" fg:w="1"/><text x="16.1609%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="15.8313%" y="613" width="0.2387%" height="15" fill="rgb(245,196,29)" fg:x="199" fg:w="3"/><text x="16.0813%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.9905%" y="597" width="0.0796%" height="15" fill="rgb(216,132,13)" fg:x="201" fg:w="1"/><text x="16.2405%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.9905%" y="581" width="0.0796%" height="15" fill="rgb(251,108,21)" fg:x="201" fg:w="1"/><text x="16.2405%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.9905%" y="565" width="0.0796%" height="15" fill="rgb(229,174,54)" fg:x="201" fg:w="1"/><text x="16.2405%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.9905%" y="549" width="0.0796%" height="15" fill="rgb(211,175,47)" fg:x="201" fg:w="1"/><text x="16.2405%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.9905%" y="533" width="0.0796%" height="15" fill="rgb(234,5,37)" fg:x="201" fg:w="1"/><text x="16.2405%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="15.9905%" y="517" width="0.0796%" height="15" fill="rgb(244,150,43)" fg:x="201" fg:w="1"/><text x="16.2405%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.0700%" y="597" width="0.0796%" height="15" fill="rgb(242,172,38)" fg:x="202" fg:w="1"/><text x="16.3200%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.0700%" y="613" width="0.1591%" height="15" fill="rgb(205,27,8)" fg:x="202" fg:w="2"/><text x="16.3200%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.1496%" y="597" width="0.0796%" height="15" fill="rgb(217,57,3)" fg:x="203" fg:w="1"/><text x="16.3996%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.1496%" y="581" width="0.0796%" height="15" fill="rgb(242,21,38)" fg:x="203" fg:w="1"/><text x="16.3996%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1496%" y="565" width="0.0796%" height="15" fill="rgb(209,64,43)" fg:x="203" fg:w="1"/><text x="16.3996%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.1496%" y="549" width="0.0796%" height="15" fill="rgb(222,2,46)" fg:x="203" fg:w="1"/><text x="16.3996%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1496%" y="533" width="0.0796%" height="15" fill="rgb(218,19,44)" fg:x="203" fg:w="1"/><text x="16.3996%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.1496%" y="517" width="0.0796%" height="15" fill="rgb(240,203,42)" fg:x="203" fg:w="1"/><text x="16.3996%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.2291%" y="597" width="0.0796%" height="15" fill="rgb(229,23,45)" fg:x="204" fg:w="1"/><text x="16.4791%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.2291%" y="581" width="0.0796%" height="15" fill="rgb(205,228,51)" fg:x="204" fg:w="1"/><text x="16.4791%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2291%" y="565" width="0.0796%" height="15" fill="rgb(239,36,20)" fg:x="204" fg:w="1"/><text x="16.4791%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2291%" y="549" width="0.0796%" height="15" fill="rgb(248,172,27)" fg:x="204" fg:w="1"/><text x="16.4791%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2291%" y="533" width="0.0796%" height="15" fill="rgb(244,55,32)" fg:x="204" fg:w="1"/><text x="16.4791%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2291%" y="517" width="0.0796%" height="15" fill="rgb(215,97,16)" fg:x="204" fg:w="1"/><text x="16.4791%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="16.2291%" y="613" width="0.1591%" height="15" fill="rgb(224,80,29)" fg:x="204" fg:w="2"/><text x="16.4791%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.3087%" y="597" width="0.0796%" height="15" fill="rgb(216,93,47)" fg:x="205" fg:w="1"/><text x="16.5587%" y="607.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3087%" y="581" width="0.0796%" height="15" fill="rgb(238,159,10)" fg:x="205" fg:w="1"/><text x="16.5587%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3087%" y="565" width="0.0796%" height="15" fill="rgb(223,98,29)" fg:x="205" fg:w="1"/><text x="16.5587%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3087%" y="549" width="0.0796%" height="15" fill="rgb(210,176,23)" fg:x="205" fg:w="1"/><text x="16.5587%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3087%" y="533" width="0.0796%" height="15" fill="rgb(242,162,27)" fg:x="205" fg:w="1"/><text x="16.5587%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.3087%" y="517" width="0.0796%" height="15" fill="rgb(245,109,32)" fg:x="205" fg:w="1"/><text x="16.5587%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="16.3087%" y="501" width="0.0796%" height="15" fill="rgb(248,87,8)" fg:x="205" fg:w="1"/><text x="16.5587%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.3882%" y="565" width="0.1591%" height="15" fill="rgb(250,160,50)" fg:x="206" fg:w="2"/><text x="16.6382%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.3882%" y="549" width="0.1591%" height="15" fill="rgb(246,165,25)" fg:x="206" fg:w="2"/><text x="16.6382%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.3882%" y="533" width="0.1591%" height="15" fill="rgb(249,219,3)" fg:x="206" fg:w="2"/><text x="16.6382%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.3882%" y="517" width="0.1591%" height="15" fill="rgb(226,66,5)" fg:x="206" fg:w="2"/><text x="16.6382%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.3882%" y="501" width="0.1591%" height="15" fill="rgb(250,220,43)" fg:x="206" fg:w="2"/><text x="16.6382%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4678%" y="485" width="0.0796%" height="15" fill="rgb(225,111,31)" fg:x="207" fg:w="1"/><text x="16.7178%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4678%" y="469" width="0.0796%" height="15" fill="rgb(248,106,18)" fg:x="207" fg:w="1"/><text x="16.7178%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.4678%" y="453" width="0.0796%" height="15" fill="rgb(220,226,45)" fg:x="207" fg:w="1"/><text x="16.7178%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.4678%" y="437" width="0.0796%" height="15" fill="rgb(208,58,53)" fg:x="207" fg:w="1"/><text x="16.7178%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.4678%" y="421" width="0.0796%" height="15" fill="rgb(209,133,1)" fg:x="207" fg:w="1"/><text x="16.7178%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.4678%" y="405" width="0.0796%" height="15" fill="rgb(228,216,27)" fg:x="207" fg:w="1"/><text x="16.7178%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.4678%" y="389" width="0.0796%" height="15" fill="rgb(238,155,2)" fg:x="207" fg:w="1"/><text x="16.7178%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.4678%" y="373" width="0.0796%" height="15" fill="rgb(244,99,37)" fg:x="207" fg:w="1"/><text x="16.7178%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.4678%" y="357" width="0.0796%" height="15" fill="rgb(254,32,3)" fg:x="207" fg:w="1"/><text x="16.7178%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.4678%" y="341" width="0.0796%" height="15" fill="rgb(234,46,50)" fg:x="207" fg:w="1"/><text x="16.7178%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.4678%" y="325" width="0.0796%" height="15" fill="rgb(232,118,51)" fg:x="207" fg:w="1"/><text x="16.7178%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.4678%" y="309" width="0.0796%" height="15" fill="rgb(207,24,32)" fg:x="207" fg:w="1"/><text x="16.7178%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.4678%" y="293" width="0.0796%" height="15" fill="rgb(208,107,43)" fg:x="207" fg:w="1"/><text x="16.7178%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.4678%" y="277" width="0.0796%" height="15" fill="rgb(231,28,9)" fg:x="207" fg:w="1"/><text x="16.7178%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="16.5473%" y="469" width="0.1591%" height="15" fill="rgb(241,204,15)" fg:x="208" fg:w="2"/><text x="16.7973%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="16.5473%" y="453" width="0.1591%" height="15" fill="rgb(214,54,15)" fg:x="208" fg:w="2"/><text x="16.7973%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="16.5473%" y="437" width="0.1591%" height="15" fill="rgb(230,12,28)" fg:x="208" fg:w="2"/><text x="16.7973%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="16.5473%" y="421" width="0.1591%" height="15" fill="rgb(221,171,5)" fg:x="208" fg:w="2"/><text x="16.7973%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="16.5473%" y="405" width="0.1591%" height="15" fill="rgb(207,72,25)" fg:x="208" fg:w="2"/><text x="16.7973%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="16.5473%" y="389" width="0.1591%" height="15" fill="rgb(249,79,37)" fg:x="208" fg:w="2"/><text x="16.7973%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="16.5473%" y="373" width="0.1591%" height="15" fill="rgb(209,98,49)" fg:x="208" fg:w="2"/><text x="16.7973%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="16.5473%" y="357" width="0.1591%" height="15" fill="rgb(221,62,13)" fg:x="208" fg:w="2"/><text x="16.7973%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="16.5473%" y="341" width="0.1591%" height="15" fill="rgb(223,39,6)" fg:x="208" fg:w="2"/><text x="16.7973%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="16.5473%" y="325" width="0.1591%" height="15" fill="rgb(246,163,20)" fg:x="208" fg:w="2"/><text x="16.7973%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="16.5473%" y="309" width="0.1591%" height="15" fill="rgb(211,111,29)" fg:x="208" fg:w="2"/><text x="16.7973%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.5473%" y="293" width="0.1591%" height="15" fill="rgb(243,118,5)" fg:x="208" fg:w="2"/><text x="16.7973%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.5473%" y="533" width="0.2387%" height="15" fill="rgb(240,144,52)" fg:x="208" fg:w="3"/><text x="16.7973%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.5473%" y="517" width="0.2387%" height="15" fill="rgb(244,158,36)" fg:x="208" fg:w="3"/><text x="16.7973%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.5473%" y="501" width="0.2387%" height="15" fill="rgb(241,109,37)" fg:x="208" fg:w="3"/><text x="16.7973%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.5473%" y="485" width="0.2387%" height="15" fill="rgb(213,95,32)" fg:x="208" fg:w="3"/><text x="16.7973%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7064%" y="469" width="0.0796%" height="15" fill="rgb(252,193,9)" fg:x="210" fg:w="1"/><text x="16.9564%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="16.3882%" y="597" width="0.4773%" height="15" fill="rgb(225,213,21)" fg:x="206" fg:w="6"/><text x="16.6382%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="16.3882%" y="581" width="0.4773%" height="15" fill="rgb(220,172,46)" fg:x="206" fg:w="6"/><text x="16.6382%" y="591.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="16.5473%" y="565" width="0.3182%" height="15" fill="rgb(235,75,41)" fg:x="208" fg:w="4"/><text x="16.7973%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="16.5473%" y="549" width="0.3182%" height="15" fill="rgb(213,86,9)" fg:x="208" fg:w="4"/><text x="16.7973%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.7860%" y="533" width="0.0796%" height="15" fill="rgb(238,127,51)" fg:x="211" fg:w="1"/><text x="17.0360%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.7860%" y="517" width="0.0796%" height="15" fill="rgb(215,2,54)" fg:x="211" fg:w="1"/><text x="17.0360%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7860%" y="501" width="0.0796%" height="15" fill="rgb(245,80,6)" fg:x="211" fg:w="1"/><text x="17.0360%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7860%" y="485" width="0.0796%" height="15" fill="rgb(233,106,42)" fg:x="211" fg:w="1"/><text x="17.0360%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7860%" y="469" width="0.0796%" height="15" fill="rgb(244,86,38)" fg:x="211" fg:w="1"/><text x="17.0360%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8656%" y="533" width="0.0796%" height="15" fill="rgb(242,167,7)" fg:x="212" fg:w="1"/><text x="17.1156%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (27 samples, 2.15%)</title><rect x="15.8313%" y="629" width="2.1480%" height="15" fill="rgb(218,216,3)" fg:x="199" fg:w="27"/><text x="16.0813%" y="639.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (20 samples, 1.59%)</title><rect x="16.3882%" y="613" width="1.5911%" height="15" fill="rgb(206,136,36)" fg:x="206" fg:w="20"/><text x="16.6382%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (14 samples, 1.11%)</title><rect x="16.8656%" y="597" width="1.1138%" height="15" fill="rgb(206,206,15)" fg:x="212" fg:w="14"/><text x="17.1156%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 1.11%)</title><rect x="16.8656%" y="581" width="1.1138%" height="15" fill="rgb(207,163,34)" fg:x="212" fg:w="14"/><text x="17.1156%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 1.11%)</title><rect x="16.8656%" y="565" width="1.1138%" height="15" fill="rgb(240,127,22)" fg:x="212" fg:w="14"/><text x="17.1156%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 1.11%)</title><rect x="16.8656%" y="549" width="1.1138%" height="15" fill="rgb(227,49,5)" fg:x="212" fg:w="14"/><text x="17.1156%" y="559.50"></text></g><g><title>__libc_malloc (13 samples, 1.03%)</title><rect x="16.9451%" y="533" width="1.0342%" height="15" fill="rgb(231,8,6)" fg:x="213" fg:w="13"/><text x="17.1951%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="17.9793%" y="565" width="0.0796%" height="15" fill="rgb(223,21,24)" fg:x="226" fg:w="1"/><text x="18.2293%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.0589%" y="501" width="0.0796%" height="15" fill="rgb(244,44,52)" fg:x="227" fg:w="1"/><text x="18.3089%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="18.0589%" y="533" width="0.1591%" height="15" fill="rgb(207,73,28)" fg:x="227" fg:w="2"/><text x="18.3089%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="18.0589%" y="517" width="0.1591%" height="15" fill="rgb(234,215,10)" fg:x="227" fg:w="2"/><text x="18.3089%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.1384%" y="501" width="0.0796%" height="15" fill="rgb(236,85,3)" fg:x="228" fg:w="1"/><text x="18.3884%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.1384%" y="485" width="0.0796%" height="15" fill="rgb(236,102,39)" fg:x="228" fg:w="1"/><text x="18.3884%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="17.9793%" y="581" width="0.3182%" height="15" fill="rgb(243,50,8)" fg:x="226" fg:w="4"/><text x="18.2293%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="18.0589%" y="565" width="0.2387%" height="15" fill="rgb(207,111,4)" fg:x="227" fg:w="3"/><text x="18.3089%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.0589%" y="549" width="0.2387%" height="15" fill="rgb(230,52,42)" fg:x="227" fg:w="3"/><text x="18.3089%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2180%" y="533" width="0.0796%" height="15" fill="rgb(252,178,50)" fg:x="229" fg:w="1"/><text x="18.4680%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2180%" y="517" width="0.0796%" height="15" fill="rgb(234,46,35)" fg:x="229" fg:w="1"/><text x="18.4680%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2180%" y="501" width="0.0796%" height="15" fill="rgb(228,69,37)" fg:x="229" fg:w="1"/><text x="18.4680%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2180%" y="485" width="0.0796%" height="15" fill="rgb(221,21,11)" fg:x="229" fg:w="1"/><text x="18.4680%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2975%" y="517" width="0.0796%" height="15" fill="rgb(223,56,9)" fg:x="230" fg:w="1"/><text x="18.5475%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2975%" y="501" width="0.0796%" height="15" fill="rgb(234,30,19)" fg:x="230" fg:w="1"/><text x="18.5475%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2975%" y="485" width="0.0796%" height="15" fill="rgb(211,64,54)" fg:x="230" fg:w="1"/><text x="18.5475%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.2975%" y="469" width="0.0796%" height="15" fill="rgb(250,189,5)" fg:x="230" fg:w="1"/><text x="18.5475%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.2975%" y="453" width="0.0796%" height="15" fill="rgb(214,180,13)" fg:x="230" fg:w="1"/><text x="18.5475%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.2975%" y="437" width="0.0796%" height="15" fill="rgb(238,40,40)" fg:x="230" fg:w="1"/><text x="18.5475%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.2975%" y="421" width="0.0796%" height="15" fill="rgb(214,101,38)" fg:x="230" fg:w="1"/><text x="18.5475%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.2975%" y="405" width="0.0796%" height="15" fill="rgb(242,65,53)" fg:x="230" fg:w="1"/><text x="18.5475%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.2975%" y="389" width="0.0796%" height="15" fill="rgb(230,22,45)" fg:x="230" fg:w="1"/><text x="18.5475%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.2975%" y="373" width="0.0796%" height="15" fill="rgb(223,77,1)" fg:x="230" fg:w="1"/><text x="18.5475%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.2975%" y="533" width="0.1591%" height="15" fill="rgb(227,33,37)" fg:x="230" fg:w="2"/><text x="18.5475%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3771%" y="517" width="0.0796%" height="15" fill="rgb(224,148,39)" fg:x="231" fg:w="1"/><text x="18.6271%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="17.9793%" y="613" width="0.7955%" height="15" fill="rgb(232,212,39)" fg:x="226" fg:w="10"/><text x="18.2293%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="17.9793%" y="597" width="0.7955%" height="15" fill="rgb(251,172,7)" fg:x="226" fg:w="10"/><text x="18.2293%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="18.2975%" y="581" width="0.4773%" height="15" fill="rgb(219,39,9)" fg:x="230" fg:w="6"/><text x="18.5475%" y="591.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="18.2975%" y="565" width="0.4773%" height="15" fill="rgb(228,118,14)" fg:x="230" fg:w="6"/><text x="18.5475%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="18.2975%" y="549" width="0.4773%" height="15" fill="rgb(207,140,10)" fg:x="230" fg:w="6"/><text x="18.5475%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="18.4566%" y="533" width="0.3182%" height="15" fill="rgb(227,111,53)" fg:x="232" fg:w="4"/><text x="18.7066%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="18.4566%" y="517" width="0.3182%" height="15" fill="rgb(216,165,16)" fg:x="232" fg:w="4"/><text x="18.7066%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="18.4566%" y="501" width="0.3182%" height="15" fill="rgb(226,111,18)" fg:x="232" fg:w="4"/><text x="18.7066%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="18.4566%" y="485" width="0.3182%" height="15" fill="rgb(251,27,17)" fg:x="232" fg:w="4"/><text x="18.7066%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="18.4566%" y="469" width="0.3182%" height="15" fill="rgb(254,69,9)" fg:x="232" fg:w="4"/><text x="18.7066%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="18.4566%" y="453" width="0.3182%" height="15" fill="rgb(234,140,37)" fg:x="232" fg:w="4"/><text x="18.7066%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="18.4566%" y="437" width="0.3182%" height="15" fill="rgb(220,93,8)" fg:x="232" fg:w="4"/><text x="18.7066%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="18.4566%" y="421" width="0.3182%" height="15" fill="rgb(236,113,3)" fg:x="232" fg:w="4"/><text x="18.7066%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.6953%" y="405" width="0.0796%" height="15" fill="rgb(234,108,23)" fg:x="235" fg:w="1"/><text x="18.9453%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="18.7749%" y="613" width="0.0796%" height="15" fill="rgb(205,114,34)" fg:x="236" fg:w="1"/><text x="19.0249%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.7749%" y="597" width="0.0796%" height="15" fill="rgb(236,200,45)" fg:x="236" fg:w="1"/><text x="19.0249%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.7749%" y="581" width="0.0796%" height="15" fill="rgb(227,194,29)" fg:x="236" fg:w="1"/><text x="19.0249%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.7749%" y="565" width="0.0796%" height="15" fill="rgb(250,76,42)" fg:x="236" fg:w="1"/><text x="19.0249%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="18.8544%" y="613" width="0.1591%" height="15" fill="rgb(208,128,8)" fg:x="237" fg:w="2"/><text x="19.1044%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9340%" y="597" width="0.0796%" height="15" fill="rgb(229,209,35)" fg:x="238" fg:w="1"/><text x="19.1840%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.9340%" y="581" width="0.0796%" height="15" fill="rgb(215,39,53)" fg:x="238" fg:w="1"/><text x="19.1840%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.9340%" y="565" width="0.0796%" height="15" fill="rgb(219,123,41)" fg:x="238" fg:w="1"/><text x="19.1840%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9340%" y="549" width="0.0796%" height="15" fill="rgb(212,158,18)" fg:x="238" fg:w="1"/><text x="19.1840%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.9340%" y="533" width="0.0796%" height="15" fill="rgb(234,196,53)" fg:x="238" fg:w="1"/><text x="19.1840%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9340%" y="517" width="0.0796%" height="15" fill="rgb(210,139,12)" fg:x="238" fg:w="1"/><text x="19.1840%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.0135%" y="517" width="0.1591%" height="15" fill="rgb(220,116,54)" fg:x="239" fg:w="2"/><text x="19.2635%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.0135%" y="501" width="0.1591%" height="15" fill="rgb(247,103,28)" fg:x="239" fg:w="2"/><text x="19.2635%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.0135%" y="485" width="0.1591%" height="15" fill="rgb(253,156,45)" fg:x="239" fg:w="2"/><text x="19.2635%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.0135%" y="469" width="0.1591%" height="15" fill="rgb(237,157,52)" fg:x="239" fg:w="2"/><text x="19.2635%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.0135%" y="453" width="0.1591%" height="15" fill="rgb(253,112,16)" fg:x="239" fg:w="2"/><text x="19.2635%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0931%" y="437" width="0.0796%" height="15" fill="rgb(234,70,18)" fg:x="240" fg:w="1"/><text x="19.3431%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="19.0135%" y="565" width="0.2387%" height="15" fill="rgb(247,138,19)" fg:x="239" fg:w="3"/><text x="19.2635%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="19.0135%" y="549" width="0.2387%" height="15" fill="rgb(207,171,1)" fg:x="239" fg:w="3"/><text x="19.2635%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="19.0135%" y="533" width="0.2387%" height="15" fill="rgb(239,213,3)" fg:x="239" fg:w="3"/><text x="19.2635%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.1726%" y="517" width="0.0796%" height="15" fill="rgb(226,112,4)" fg:x="241" fg:w="1"/><text x="19.4226%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.1726%" y="501" width="0.0796%" height="15" fill="rgb(252,170,12)" fg:x="241" fg:w="1"/><text x="19.4226%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.1726%" y="485" width="0.0796%" height="15" fill="rgb(241,106,13)" fg:x="241" fg:w="1"/><text x="19.4226%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.1726%" y="469" width="0.0796%" height="15" fill="rgb(225,73,23)" fg:x="241" fg:w="1"/><text x="19.4226%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.1726%" y="453" width="0.0796%" height="15" fill="rgb(251,227,29)" fg:x="241" fg:w="1"/><text x="19.4226%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.1726%" y="437" width="0.0796%" height="15" fill="rgb(237,144,13)" fg:x="241" fg:w="1"/><text x="19.4226%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.2522%" y="517" width="0.1591%" height="15" fill="rgb(232,106,46)" fg:x="242" fg:w="2"/><text x="19.5022%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.2522%" y="501" width="0.1591%" height="15" fill="rgb(245,154,53)" fg:x="242" fg:w="2"/><text x="19.5022%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.2522%" y="485" width="0.1591%" height="15" fill="rgb(212,119,47)" fg:x="242" fg:w="2"/><text x="19.5022%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.2522%" y="469" width="0.1591%" height="15" fill="rgb(253,135,25)" fg:x="242" fg:w="2"/><text x="19.5022%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3317%" y="453" width="0.0796%" height="15" fill="rgb(253,208,39)" fg:x="243" fg:w="1"/><text x="19.5817%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="19.3317%" y="437" width="0.0796%" height="15" fill="rgb(226,64,12)" fg:x="243" fg:w="1"/><text x="19.5817%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4113%" y="517" width="0.0796%" height="15" fill="rgb(214,162,37)" fg:x="244" fg:w="1"/><text x="19.6613%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4909%" y="517" width="0.0796%" height="15" fill="rgb(250,104,5)" fg:x="245" fg:w="1"/><text x="19.7409%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.4909%" y="501" width="0.0796%" height="15" fill="rgb(220,202,50)" fg:x="245" fg:w="1"/><text x="19.7409%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.4909%" y="485" width="0.0796%" height="15" fill="rgb(248,67,38)" fg:x="245" fg:w="1"/><text x="19.7409%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.6500%" y="389" width="0.0796%" height="15" fill="rgb(242,94,35)" fg:x="247" fg:w="1"/><text x="19.9000%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.7295%" y="389" width="0.0796%" height="15" fill="rgb(209,78,37)" fg:x="248" fg:w="1"/><text x="19.9795%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7295%" y="373" width="0.0796%" height="15" fill="rgb(230,126,47)" fg:x="248" fg:w="1"/><text x="19.9795%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="19.0135%" y="613" width="0.8751%" height="15" fill="rgb(222,110,35)" fg:x="239" fg:w="11"/><text x="19.2635%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="19.0135%" y="597" width="0.8751%" height="15" fill="rgb(233,154,20)" fg:x="239" fg:w="11"/><text x="19.2635%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.88%)</title><rect x="19.0135%" y="581" width="0.8751%" height="15" fill="rgb(223,53,50)" fg:x="239" fg:w="11"/><text x="19.2635%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="19.2522%" y="565" width="0.6364%" height="15" fill="rgb(251,27,26)" fg:x="242" fg:w="8"/><text x="19.5022%" y="575.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="19.2522%" y="549" width="0.6364%" height="15" fill="rgb(223,189,16)" fg:x="242" fg:w="8"/><text x="19.5022%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="19.2522%" y="533" width="0.6364%" height="15" fill="rgb(207,5,54)" fg:x="242" fg:w="8"/><text x="19.5022%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="19.5704%" y="517" width="0.3182%" height="15" fill="rgb(254,124,50)" fg:x="246" fg:w="4"/><text x="19.8204%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="19.5704%" y="501" width="0.3182%" height="15" fill="rgb(253,193,24)" fg:x="246" fg:w="4"/><text x="19.8204%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="19.5704%" y="485" width="0.3182%" height="15" fill="rgb(235,170,24)" fg:x="246" fg:w="4"/><text x="19.8204%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="19.5704%" y="469" width="0.3182%" height="15" fill="rgb(222,212,52)" fg:x="246" fg:w="4"/><text x="19.8204%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="19.6500%" y="453" width="0.2387%" height="15" fill="rgb(223,17,45)" fg:x="247" fg:w="3"/><text x="19.9000%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.6500%" y="437" width="0.2387%" height="15" fill="rgb(227,103,26)" fg:x="247" fg:w="3"/><text x="19.9000%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="19.6500%" y="421" width="0.2387%" height="15" fill="rgb(251,151,25)" fg:x="247" fg:w="3"/><text x="19.9000%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.6500%" y="405" width="0.2387%" height="15" fill="rgb(248,144,29)" fg:x="247" fg:w="3"/><text x="19.9000%" y="415.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="19.8091%" y="389" width="0.0796%" height="15" fill="rgb(245,97,16)" fg:x="249" fg:w="1"/><text x="20.0591%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9682%" y="597" width="0.0796%" height="15" fill="rgb(220,200,29)" fg:x="251" fg:w="1"/><text x="20.2182%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="20.0477%" y="597" width="0.0796%" height="15" fill="rgb(206,38,29)" fg:x="252" fg:w="1"/><text x="20.2977%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.1273%" y="581" width="0.0796%" height="15" fill="rgb(245,19,52)" fg:x="253" fg:w="1"/><text x="20.3773%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="20.3660%" y="517" width="0.0796%" height="15" fill="rgb(205,67,43)" fg:x="256" fg:w="1"/><text x="20.6160%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (60 samples, 4.77%)</title><rect x="15.7518%" y="645" width="4.7733%" height="15" fill="rgb(217,128,23)" fg:x="198" fg:w="60"/><text x="16.0018%" y="655.50">plugin..</text></g><g><title>plugins_core::tools::set_container (32 samples, 2.55%)</title><rect x="17.9793%" y="629" width="2.5457%" height="15" fill="rgb(210,109,28)" fg:x="226" fg:w="32"/><text x="18.2293%" y="639.50">pl..</text></g><g><title>plugins_core::location::Location::set (8 samples, 0.64%)</title><rect x="19.8886%" y="613" width="0.6364%" height="15" fill="rgb(233,181,7)" fg:x="250" fg:w="8"/><text x="20.1386%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="20.1273%" y="597" width="0.3978%" height="15" fill="rgb(244,11,22)" fg:x="253" fg:w="5"/><text x="20.3773%" y="607.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (4 samples, 0.32%)</title><rect x="20.2068%" y="581" width="0.3182%" height="15" fill="rgb(205,124,54)" fg:x="254" fg:w="4"/><text x="20.4568%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="20.2864%" y="565" width="0.2387%" height="15" fill="rgb(218,21,27)" fg:x="255" fg:w="3"/><text x="20.5364%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="20.2864%" y="549" width="0.2387%" height="15" fill="rgb(224,153,33)" fg:x="255" fg:w="3"/><text x="20.5364%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="20.2864%" y="533" width="0.2387%" height="15" fill="rgb(240,219,28)" fg:x="255" fg:w="3"/><text x="20.5364%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.4455%" y="517" width="0.0796%" height="15" fill="rgb(214,80,29)" fg:x="257" fg:w="1"/><text x="20.6955%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="20.5251%" y="613" width="0.1591%" height="15" fill="rgb(247,148,44)" fg:x="258" fg:w="2"/><text x="20.7751%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="20.5251%" y="597" width="0.1591%" height="15" fill="rgb(243,110,30)" fg:x="258" fg:w="2"/><text x="20.7751%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="20.5251%" y="581" width="0.1591%" height="15" fill="rgb(243,173,41)" fg:x="258" fg:w="2"/><text x="20.7751%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="20.5251%" y="565" width="0.1591%" height="15" fill="rgb(225,160,47)" fg:x="258" fg:w="2"/><text x="20.7751%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.5251%" y="549" width="0.1591%" height="15" fill="rgb(215,44,21)" fg:x="258" fg:w="2"/><text x="20.7751%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="20.5251%" y="533" width="0.1591%" height="15" fill="rgb(248,90,3)" fg:x="258" fg:w="2"/><text x="20.7751%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="20.5251%" y="517" width="0.1591%" height="15" fill="rgb(220,196,49)" fg:x="258" fg:w="2"/><text x="20.7751%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="20.5251%" y="501" width="0.1591%" height="15" fill="rgb(217,138,14)" fg:x="258" fg:w="2"/><text x="20.7751%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.5251%" y="485" width="0.1591%" height="15" fill="rgb(219,111,20)" fg:x="258" fg:w="2"/><text x="20.7751%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="20.5251%" y="469" width="0.1591%" height="15" fill="rgb(218,114,4)" fg:x="258" fg:w="2"/><text x="20.7751%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="20.5251%" y="453" width="0.1591%" height="15" fill="rgb(238,133,3)" fg:x="258" fg:w="2"/><text x="20.7751%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="20.5251%" y="437" width="0.1591%" height="15" fill="rgb(224,95,0)" fg:x="258" fg:w="2"/><text x="20.7751%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.5251%" y="421" width="0.1591%" height="15" fill="rgb(220,169,35)" fg:x="258" fg:w="2"/><text x="20.7751%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="20.5251%" y="405" width="0.1591%" height="15" fill="rgb(242,116,47)" fg:x="258" fg:w="2"/><text x="20.7751%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="20.5251%" y="389" width="0.1591%" height="15" fill="rgb(251,42,20)" fg:x="258" fg:w="2"/><text x="20.7751%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="20.5251%" y="373" width="0.1591%" height="15" fill="rgb(234,7,34)" fg:x="258" fg:w="2"/><text x="20.7751%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.6046%" y="357" width="0.0796%" height="15" fill="rgb(243,208,13)" fg:x="259" fg:w="1"/><text x="20.8546%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6842%" y="549" width="0.0796%" height="15" fill="rgb(227,33,28)" fg:x="260" fg:w="1"/><text x="20.9342%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6842%" y="533" width="0.0796%" height="15" fill="rgb(250,47,37)" fg:x="260" fg:w="1"/><text x="20.9342%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6842%" y="517" width="0.0796%" height="15" fill="rgb(235,111,52)" fg:x="260" fg:w="1"/><text x="20.9342%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6842%" y="501" width="0.0796%" height="15" fill="rgb(223,64,28)" fg:x="260" fg:w="1"/><text x="20.9342%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6842%" y="485" width="0.0796%" height="15" fill="rgb(236,67,22)" fg:x="260" fg:w="1"/><text x="20.9342%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.6842%" y="469" width="0.0796%" height="15" fill="rgb(243,79,24)" fg:x="260" fg:w="1"/><text x="20.9342%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.6842%" y="453" width="0.0796%" height="15" fill="rgb(241,225,22)" fg:x="260" fg:w="1"/><text x="20.9342%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.6842%" y="437" width="0.0796%" height="15" fill="rgb(228,214,26)" fg:x="260" fg:w="1"/><text x="20.9342%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6842%" y="421" width="0.0796%" height="15" fill="rgb(219,84,52)" fg:x="260" fg:w="1"/><text x="20.9342%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6842%" y="405" width="0.0796%" height="15" fill="rgb(220,12,22)" fg:x="260" fg:w="1"/><text x="20.9342%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.6842%" y="389" width="0.0796%" height="15" fill="rgb(219,9,49)" fg:x="260" fg:w="1"/><text x="20.9342%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.6842%" y="373" width="0.0796%" height="15" fill="rgb(237,40,43)" fg:x="260" fg:w="1"/><text x="20.9342%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.6842%" y="357" width="0.0796%" height="15" fill="rgb(212,189,32)" fg:x="260" fg:w="1"/><text x="20.9342%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.6842%" y="341" width="0.0796%" height="15" fill="rgb(247,48,9)" fg:x="260" fg:w="1"/><text x="20.9342%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6842%" y="325" width="0.0796%" height="15" fill="rgb(247,112,3)" fg:x="260" fg:w="1"/><text x="20.9342%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.6842%" y="565" width="0.1591%" height="15" fill="rgb(243,110,18)" fg:x="260" fg:w="2"/><text x="20.9342%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7637%" y="549" width="0.0796%" height="15" fill="rgb(233,223,44)" fg:x="261" fg:w="1"/><text x="21.0137%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7637%" y="533" width="0.0796%" height="15" fill="rgb(245,160,20)" fg:x="261" fg:w="1"/><text x="21.0137%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.7637%" y="517" width="0.0796%" height="15" fill="rgb(225,37,1)" fg:x="261" fg:w="1"/><text x="21.0137%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.7637%" y="501" width="0.0796%" height="15" fill="rgb(253,227,39)" fg:x="261" fg:w="1"/><text x="21.0137%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.7637%" y="485" width="0.0796%" height="15" fill="rgb(240,179,26)" fg:x="261" fg:w="1"/><text x="21.0137%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7637%" y="469" width="0.0796%" height="15" fill="rgb(237,212,23)" fg:x="261" fg:w="1"/><text x="21.0137%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7637%" y="453" width="0.0796%" height="15" fill="rgb(221,38,11)" fg:x="261" fg:w="1"/><text x="21.0137%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.7637%" y="437" width="0.0796%" height="15" fill="rgb(215,85,6)" fg:x="261" fg:w="1"/><text x="21.0137%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.7637%" y="421" width="0.0796%" height="15" fill="rgb(239,64,14)" fg:x="261" fg:w="1"/><text x="21.0137%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.7637%" y="405" width="0.0796%" height="15" fill="rgb(215,150,32)" fg:x="261" fg:w="1"/><text x="21.0137%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.7637%" y="389" width="0.0796%" height="15" fill="rgb(238,15,13)" fg:x="261" fg:w="1"/><text x="21.0137%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7637%" y="373" width="0.0796%" height="15" fill="rgb(251,87,8)" fg:x="261" fg:w="1"/><text x="21.0137%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9228%" y="501" width="0.0796%" height="15" fill="rgb(206,86,1)" fg:x="263" fg:w="1"/><text x="21.1728%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.0024%" y="501" width="0.0796%" height="15" fill="rgb(208,151,45)" fg:x="264" fg:w="1"/><text x="21.2524%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.80%)</title><rect x="20.6842%" y="613" width="0.7955%" height="15" fill="rgb(231,181,24)" fg:x="260" fg:w="10"/><text x="20.9342%" y="623.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="20.6842%" y="597" width="0.7955%" height="15" fill="rgb(240,106,29)" fg:x="260" fg:w="10"/><text x="20.9342%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="20.6842%" y="581" width="0.7955%" height="15" fill="rgb(227,166,11)" fg:x="260" fg:w="10"/><text x="20.9342%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="20.8433%" y="565" width="0.6364%" height="15" fill="rgb(254,14,34)" fg:x="262" fg:w="8"/><text x="21.0933%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="20.8433%" y="549" width="0.6364%" height="15" fill="rgb(223,222,6)" fg:x="262" fg:w="8"/><text x="21.0933%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="20.9228%" y="533" width="0.5569%" height="15" fill="rgb(245,69,24)" fg:x="263" fg:w="7"/><text x="21.1728%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="20.9228%" y="517" width="0.5569%" height="15" fill="rgb(213,193,7)" fg:x="263" fg:w="7"/><text x="21.1728%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="21.0819%" y="501" width="0.3978%" height="15" fill="rgb(237,92,51)" fg:x="265" fg:w="5"/><text x="21.3319%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="21.0819%" y="485" width="0.3978%" height="15" fill="rgb(225,194,6)" fg:x="265" fg:w="5"/><text x="21.3319%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="21.1615%" y="469" width="0.3182%" height="15" fill="rgb(205,159,49)" fg:x="266" fg:w="4"/><text x="21.4115%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="21.1615%" y="453" width="0.3182%" height="15" fill="rgb(219,69,2)" fg:x="266" fg:w="4"/><text x="21.4115%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.3206%" y="437" width="0.1591%" height="15" fill="rgb(215,107,24)" fg:x="268" fg:w="2"/><text x="21.5706%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.3206%" y="421" width="0.1591%" height="15" fill="rgb(249,208,29)" fg:x="268" fg:w="2"/><text x="21.5706%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="21.4002%" y="405" width="0.0796%" height="15" fill="rgb(213,147,10)" fg:x="269" fg:w="1"/><text x="21.6502%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="21.4002%" y="389" width="0.0796%" height="15" fill="rgb(254,140,42)" fg:x="269" fg:w="1"/><text x="21.6502%" y="399.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="21.4002%" y="373" width="0.0796%" height="15" fill="rgb(249,9,15)" fg:x="269" fg:w="1"/><text x="21.6502%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4797%" y="613" width="0.0796%" height="15" fill="rgb(210,19,33)" fg:x="270" fg:w="1"/><text x="21.7297%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (2 samples, 0.16%)</title><rect x="21.5593%" y="597" width="0.1591%" height="15" fill="rgb(241,121,22)" fg:x="271" fg:w="2"/><text x="21.8093%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="21.5593%" y="581" width="0.1591%" height="15" fill="rgb(244,69,52)" fg:x="271" fg:w="2"/><text x="21.8093%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.5593%" y="565" width="0.1591%" height="15" fill="rgb(244,191,54)" fg:x="271" fg:w="2"/><text x="21.8093%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="21.7979%" y="565" width="0.1591%" height="15" fill="rgb(250,3,53)" fg:x="274" fg:w="2"/><text x="22.0479%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8775%" y="549" width="0.0796%" height="15" fill="rgb(205,77,3)" fg:x="275" fg:w="1"/><text x="22.1275%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8775%" y="533" width="0.0796%" height="15" fill="rgb(207,155,3)" fg:x="275" fg:w="1"/><text x="22.1275%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.0366%" y="533" width="0.0796%" height="15" fill="rgb(224,79,2)" fg:x="277" fg:w="1"/><text x="22.2866%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (6 samples, 0.48%)</title><rect x="21.7184%" y="597" width="0.4773%" height="15" fill="rgb(243,172,5)" fg:x="273" fg:w="6"/><text x="21.9684%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="21.7184%" y="581" width="0.4773%" height="15" fill="rgb(217,23,43)" fg:x="273" fg:w="6"/><text x="21.9684%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="21.9570%" y="565" width="0.2387%" height="15" fill="rgb(223,109,20)" fg:x="276" fg:w="3"/><text x="22.2070%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="21.9570%" y="549" width="0.2387%" height="15" fill="rgb(232,159,21)" fg:x="276" fg:w="3"/><text x="22.2070%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.1161%" y="533" width="0.0796%" height="15" fill="rgb(219,58,2)" fg:x="278" fg:w="1"/><text x="22.3661%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.1161%" y="517" width="0.0796%" height="15" fill="rgb(241,56,8)" fg:x="278" fg:w="1"/><text x="22.3661%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="22.1161%" y="501" width="0.0796%" height="15" fill="rgb(249,10,27)" fg:x="278" fg:w="1"/><text x="22.3661%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.1957%" y="549" width="0.0796%" height="15" fill="rgb(248,177,5)" fg:x="279" fg:w="1"/><text x="22.4457%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (10 samples, 0.80%)</title><rect x="21.5593%" y="613" width="0.7955%" height="15" fill="rgb(239,12,30)" fg:x="271" fg:w="10"/><text x="21.8093%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="22.1957%" y="597" width="0.1591%" height="15" fill="rgb(229,164,25)" fg:x="279" fg:w="2"/><text x="22.4457%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="22.1957%" y="581" width="0.1591%" height="15" fill="rgb(231,217,50)" fg:x="279" fg:w="2"/><text x="22.4457%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="22.1957%" y="565" width="0.1591%" height="15" fill="rgb(247,99,32)" fg:x="279" fg:w="2"/><text x="22.4457%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.2753%" y="549" width="0.0796%" height="15" fill="rgb(240,74,50)" fg:x="280" fg:w="1"/><text x="22.5253%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.2753%" y="533" width="0.0796%" height="15" fill="rgb(218,54,8)" fg:x="280" fg:w="1"/><text x="22.5253%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.4344%" y="533" width="0.0796%" height="15" fill="rgb(227,132,20)" fg:x="282" fg:w="1"/><text x="22.6844%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="22.4344%" y="565" width="0.1591%" height="15" fill="rgb(232,134,12)" fg:x="282" fg:w="2"/><text x="22.6844%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.4344%" y="549" width="0.1591%" height="15" fill="rgb(250,129,18)" fg:x="282" fg:w="2"/><text x="22.6844%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5139%" y="533" width="0.0796%" height="15" fill="rgb(232,129,47)" fg:x="283" fg:w="1"/><text x="22.7639%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5139%" y="517" width="0.0796%" height="15" fill="rgb(230,31,40)" fg:x="283" fg:w="1"/><text x="22.7639%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5139%" y="501" width="0.0796%" height="15" fill="rgb(232,126,10)" fg:x="283" fg:w="1"/><text x="22.7639%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5139%" y="485" width="0.0796%" height="15" fill="rgb(205,46,31)" fg:x="283" fg:w="1"/><text x="22.7639%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.5139%" y="469" width="0.0796%" height="15" fill="rgb(232,37,37)" fg:x="283" fg:w="1"/><text x="22.7639%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5139%" y="453" width="0.0796%" height="15" fill="rgb(240,91,16)" fg:x="283" fg:w="1"/><text x="22.7639%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5139%" y="437" width="0.0796%" height="15" fill="rgb(224,160,9)" fg:x="283" fg:w="1"/><text x="22.7639%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5139%" y="421" width="0.0796%" height="15" fill="rgb(215,116,14)" fg:x="283" fg:w="1"/><text x="22.7639%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5139%" y="405" width="0.0796%" height="15" fill="rgb(235,46,36)" fg:x="283" fg:w="1"/><text x="22.7639%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5139%" y="389" width="0.0796%" height="15" fill="rgb(238,39,28)" fg:x="283" fg:w="1"/><text x="22.7639%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5935%" y="533" width="0.0796%" height="15" fill="rgb(242,125,29)" fg:x="284" fg:w="1"/><text x="22.8435%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.5935%" y="517" width="0.0796%" height="15" fill="rgb(238,211,30)" fg:x="284" fg:w="1"/><text x="22.8435%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.5935%" y="501" width="0.0796%" height="15" fill="rgb(227,201,28)" fg:x="284" fg:w="1"/><text x="22.8435%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5935%" y="485" width="0.0796%" height="15" fill="rgb(238,77,29)" fg:x="284" fg:w="1"/><text x="22.8435%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.6730%" y="453" width="0.0796%" height="15" fill="rgb(213,221,40)" fg:x="285" fg:w="1"/><text x="22.9230%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.6730%" y="437" width="0.0796%" height="15" fill="rgb(226,220,44)" fg:x="285" fg:w="1"/><text x="22.9230%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="22.6730%" y="421" width="0.0796%" height="15" fill="rgb(228,90,23)" fg:x="285" fg:w="1"/><text x="22.9230%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (29 samples, 2.31%)</title><rect x="20.5251%" y="645" width="2.3071%" height="15" fill="rgb(235,72,29)" fg:x="258" fg:w="29"/><text x="20.7751%" y="655.50">p..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (29 samples, 2.31%)</title><rect x="20.5251%" y="629" width="2.3071%" height="15" fill="rgb(248,117,39)" fg:x="258" fg:w="29"/><text x="20.7751%" y="639.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="22.3548%" y="613" width="0.4773%" height="15" fill="rgb(225,43,28)" fg:x="281" fg:w="6"/><text x="22.6048%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="22.3548%" y="597" width="0.4773%" height="15" fill="rgb(240,93,4)" fg:x="281" fg:w="6"/><text x="22.6048%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="22.4344%" y="581" width="0.3978%" height="15" fill="rgb(234,178,27)" fg:x="282" fg:w="5"/><text x="22.6844%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="22.5935%" y="565" width="0.2387%" height="15" fill="rgb(254,88,22)" fg:x="284" fg:w="3"/><text x="22.8435%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.5935%" y="549" width="0.2387%" height="15" fill="rgb(240,206,50)" fg:x="284" fg:w="3"/><text x="22.8435%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="22.6730%" y="533" width="0.1591%" height="15" fill="rgb(249,103,8)" fg:x="285" fg:w="2"/><text x="22.9230%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.6730%" y="517" width="0.1591%" height="15" fill="rgb(241,178,36)" fg:x="285" fg:w="2"/><text x="22.9230%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="22.6730%" y="501" width="0.1591%" height="15" fill="rgb(246,110,15)" fg:x="285" fg:w="2"/><text x="22.9230%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.6730%" y="485" width="0.1591%" height="15" fill="rgb(207,14,43)" fg:x="285" fg:w="2"/><text x="22.9230%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="22.6730%" y="469" width="0.1591%" height="15" fill="rgb(253,219,19)" fg:x="285" fg:w="2"/><text x="22.9230%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="22.7526%" y="453" width="0.0796%" height="15" fill="rgb(216,126,5)" fg:x="286" fg:w="1"/><text x="23.0026%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.7526%" y="437" width="0.0796%" height="15" fill="rgb(218,78,42)" fg:x="286" fg:w="1"/><text x="23.0026%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.7526%" y="421" width="0.0796%" height="15" fill="rgb(215,154,40)" fg:x="286" fg:w="1"/><text x="23.0026%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.7526%" y="405" width="0.0796%" height="15" fill="rgb(235,129,32)" fg:x="286" fg:w="1"/><text x="23.0026%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.8321%" y="613" width="0.0796%" height="15" fill="rgb(218,51,8)" fg:x="287" fg:w="1"/><text x="23.0821%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.8321%" y="597" width="0.0796%" height="15" fill="rgb(245,48,4)" fg:x="287" fg:w="1"/><text x="23.0821%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9117%" y="597" width="0.0796%" height="15" fill="rgb(250,175,12)" fg:x="288" fg:w="1"/><text x="23.1617%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="22.8321%" y="645" width="0.2387%" height="15" fill="rgb(237,95,40)" fg:x="287" fg:w="3"/><text x="23.0821%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="22.8321%" y="629" width="0.2387%" height="15" fill="rgb(244,120,0)" fg:x="287" fg:w="3"/><text x="23.0821%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="22.9117%" y="613" width="0.1591%" height="15" fill="rgb(241,19,42)" fg:x="288" fg:w="2"/><text x="23.1617%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.9912%" y="597" width="0.0796%" height="15" fill="rgb(217,174,48)" fg:x="289" fg:w="1"/><text x="23.2412%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.9912%" y="581" width="0.0796%" height="15" fill="rgb(239,36,38)" fg:x="289" fg:w="1"/><text x="23.2412%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.1504%" y="629" width="0.0796%" height="15" fill="rgb(220,63,49)" fg:x="291" fg:w="1"/><text x="23.4004%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="23.1504%" y="613" width="0.0796%" height="15" fill="rgb(240,101,13)" fg:x="291" fg:w="1"/><text x="23.4004%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="23.3095%" y="613" width="0.1591%" height="15" fill="rgb(209,184,51)" fg:x="293" fg:w="2"/><text x="23.5595%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.3890%" y="597" width="0.0796%" height="15" fill="rgb(206,136,39)" fg:x="294" fg:w="1"/><text x="23.6390%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.3890%" y="581" width="0.0796%" height="15" fill="rgb(254,47,45)" fg:x="294" fg:w="1"/><text x="23.6390%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.3890%" y="565" width="0.0796%" height="15" fill="rgb(252,103,20)" fg:x="294" fg:w="1"/><text x="23.6390%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.3890%" y="549" width="0.0796%" height="15" fill="rgb(230,69,12)" fg:x="294" fg:w="1"/><text x="23.6390%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.3890%" y="533" width="0.0796%" height="15" fill="rgb(219,2,28)" fg:x="294" fg:w="1"/><text x="23.6390%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.3890%" y="517" width="0.0796%" height="15" fill="rgb(210,9,12)" fg:x="294" fg:w="1"/><text x="23.6390%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.3890%" y="501" width="0.0796%" height="15" fill="rgb(235,99,33)" fg:x="294" fg:w="1"/><text x="23.6390%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.3890%" y="485" width="0.0796%" height="15" fill="rgb(230,11,38)" fg:x="294" fg:w="1"/><text x="23.6390%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.3890%" y="469" width="0.0796%" height="15" fill="rgb(217,129,0)" fg:x="294" fg:w="1"/><text x="23.6390%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.3890%" y="453" width="0.0796%" height="15" fill="rgb(222,198,4)" fg:x="294" fg:w="1"/><text x="23.6390%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.3890%" y="437" width="0.0796%" height="15" fill="rgb(246,170,27)" fg:x="294" fg:w="1"/><text x="23.6390%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.4686%" y="565" width="0.0796%" height="15" fill="rgb(229,17,28)" fg:x="295" fg:w="1"/><text x="23.7186%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.4686%" y="549" width="0.0796%" height="15" fill="rgb(233,198,48)" fg:x="295" fg:w="1"/><text x="23.7186%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.4686%" y="533" width="0.0796%" height="15" fill="rgb(238,103,23)" fg:x="295" fg:w="1"/><text x="23.7186%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.5481%" y="565" width="0.0796%" height="15" fill="rgb(206,91,41)" fg:x="296" fg:w="1"/><text x="23.7981%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.5481%" y="549" width="0.0796%" height="15" fill="rgb(227,34,25)" fg:x="296" fg:w="1"/><text x="23.7981%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.5481%" y="533" width="0.0796%" height="15" fill="rgb(210,110,44)" fg:x="296" fg:w="1"/><text x="23.7981%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.5481%" y="517" width="0.0796%" height="15" fill="rgb(216,189,8)" fg:x="296" fg:w="1"/><text x="23.7981%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.5481%" y="501" width="0.0796%" height="15" fill="rgb(234,9,46)" fg:x="296" fg:w="1"/><text x="23.7981%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5481%" y="485" width="0.0796%" height="15" fill="rgb(251,200,5)" fg:x="296" fg:w="1"/><text x="23.7981%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="23.2299%" y="629" width="0.4773%" height="15" fill="rgb(238,165,37)" fg:x="292" fg:w="6"/><text x="23.4799%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="23.4686%" y="613" width="0.2387%" height="15" fill="rgb(232,77,38)" fg:x="295" fg:w="3"/><text x="23.7186%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="23.4686%" y="597" width="0.2387%" height="15" fill="rgb(253,179,33)" fg:x="295" fg:w="3"/><text x="23.7186%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="23.4686%" y="581" width="0.2387%" height="15" fill="rgb(240,13,35)" fg:x="295" fg:w="3"/><text x="23.7186%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.6277%" y="565" width="0.0796%" height="15" fill="rgb(242,150,49)" fg:x="297" fg:w="1"/><text x="23.8777%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6277%" y="549" width="0.0796%" height="15" fill="rgb(237,176,28)" fg:x="297" fg:w="1"/><text x="23.8777%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.6277%" y="533" width="0.0796%" height="15" fill="rgb(214,176,33)" fg:x="297" fg:w="1"/><text x="23.8777%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6277%" y="517" width="0.0796%" height="15" fill="rgb(214,25,12)" fg:x="297" fg:w="1"/><text x="23.8777%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.6277%" y="501" width="0.0796%" height="15" fill="rgb(238,190,20)" fg:x="297" fg:w="1"/><text x="23.8777%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6277%" y="485" width="0.0796%" height="15" fill="rgb(208,11,19)" fg:x="297" fg:w="1"/><text x="23.8777%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="23.6277%" y="469" width="0.0796%" height="15" fill="rgb(239,90,4)" fg:x="297" fg:w="1"/><text x="23.8777%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.6277%" y="453" width="0.0796%" height="15" fill="rgb(248,110,3)" fg:x="297" fg:w="1"/><text x="23.8777%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="23.7072%" y="597" width="0.0796%" height="15" fill="rgb(210,41,30)" fg:x="298" fg:w="1"/><text x="23.9572%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.7072%" y="581" width="0.0796%" height="15" fill="rgb(239,36,8)" fg:x="298" fg:w="1"/><text x="23.9572%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="23.7072%" y="629" width="0.1591%" height="15" fill="rgb(237,201,47)" fg:x="298" fg:w="2"/><text x="23.9572%" y="639.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="23.7072%" y="613" width="0.1591%" height="15" fill="rgb(224,140,29)" fg:x="298" fg:w="2"/><text x="23.9572%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.7868%" y="597" width="0.0796%" height="15" fill="rgb(231,209,17)" fg:x="299" fg:w="1"/><text x="24.0368%" y="607.50"></text></g><g><title>&lt;engine::users::model::Usernames as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="23.7868%" y="581" width="0.0796%" height="15" fill="rgb(249,196,1)" fg:x="299" fg:w="1"/><text x="24.0368%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.7868%" y="565" width="0.0796%" height="15" fill="rgb(223,207,51)" fg:x="299" fg:w="1"/><text x="24.0368%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7868%" y="549" width="0.0796%" height="15" fill="rgb(210,14,40)" fg:x="299" fg:w="1"/><text x="24.0368%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="23.8663%" y="565" width="0.2387%" height="15" fill="rgb(250,20,52)" fg:x="300" fg:w="3"/><text x="24.1163%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="23.9459%" y="549" width="0.1591%" height="15" fill="rgb(241,46,11)" fg:x="301" fg:w="2"/><text x="24.1959%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="23.9459%" y="533" width="0.1591%" height="15" fill="rgb(219,105,5)" fg:x="301" fg:w="2"/><text x="24.1959%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.1050%" y="501" width="0.0796%" height="15" fill="rgb(252,77,35)" fg:x="303" fg:w="1"/><text x="24.3550%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.1050%" y="485" width="0.0796%" height="15" fill="rgb(243,119,2)" fg:x="303" fg:w="1"/><text x="24.3550%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (5 samples, 0.40%)</title><rect x="23.8663%" y="581" width="0.3978%" height="15" fill="rgb(206,82,28)" fg:x="300" fg:w="5"/><text x="24.1163%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="24.1050%" y="565" width="0.1591%" height="15" fill="rgb(227,120,12)" fg:x="303" fg:w="2"/><text x="24.3550%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="24.1050%" y="549" width="0.1591%" height="15" fill="rgb(229,134,41)" fg:x="303" fg:w="2"/><text x="24.3550%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="24.1050%" y="533" width="0.1591%" height="15" fill="rgb(239,96,32)" fg:x="303" fg:w="2"/><text x="24.3550%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.1050%" y="517" width="0.1591%" height="15" fill="rgb(225,46,27)" fg:x="303" fg:w="2"/><text x="24.3550%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.1846%" y="501" width="0.0796%" height="15" fill="rgb(215,168,2)" fg:x="304" fg:w="1"/><text x="24.4346%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1846%" y="485" width="0.0796%" height="15" fill="rgb(207,170,52)" fg:x="304" fg:w="1"/><text x="24.4346%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.1846%" y="469" width="0.0796%" height="15" fill="rgb(237,198,36)" fg:x="304" fg:w="1"/><text x="24.4346%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="24.2641%" y="549" width="0.0796%" height="15" fill="rgb(213,27,14)" fg:x="305" fg:w="1"/><text x="24.5141%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="24.2641%" y="533" width="0.0796%" height="15" fill="rgb(218,77,5)" fg:x="305" fg:w="1"/><text x="24.5141%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.2641%" y="517" width="0.0796%" height="15" fill="rgb(230,219,39)" fg:x="305" fg:w="1"/><text x="24.5141%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.2641%" y="501" width="0.0796%" height="15" fill="rgb(245,177,7)" fg:x="305" fg:w="1"/><text x="24.5141%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.2641%" y="485" width="0.0796%" height="15" fill="rgb(246,44,46)" fg:x="305" fg:w="1"/><text x="24.5141%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.2641%" y="469" width="0.0796%" height="15" fill="rgb(207,173,15)" fg:x="305" fg:w="1"/><text x="24.5141%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="24.2641%" y="453" width="0.0796%" height="15" fill="rgb(245,170,50)" fg:x="305" fg:w="1"/><text x="24.5141%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.2641%" y="437" width="0.0796%" height="15" fill="rgb(233,156,21)" fg:x="305" fg:w="1"/><text x="24.5141%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.2641%" y="421" width="0.0796%" height="15" fill="rgb(253,146,27)" fg:x="305" fg:w="1"/><text x="24.5141%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.2641%" y="405" width="0.0796%" height="15" fill="rgb(247,66,29)" fg:x="305" fg:w="1"/><text x="24.5141%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="24.2641%" y="389" width="0.0796%" height="15" fill="rgb(218,207,26)" fg:x="305" fg:w="1"/><text x="24.5141%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.2641%" y="373" width="0.0796%" height="15" fill="rgb(234,93,26)" fg:x="305" fg:w="1"/><text x="24.5141%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.2641%" y="357" width="0.0796%" height="15" fill="rgb(214,75,48)" fg:x="305" fg:w="1"/><text x="24.5141%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.2641%" y="341" width="0.0796%" height="15" fill="rgb(229,119,22)" fg:x="305" fg:w="1"/><text x="24.5141%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="24.2641%" y="325" width="0.0796%" height="15" fill="rgb(226,153,19)" fg:x="305" fg:w="1"/><text x="24.5141%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.2641%" y="309" width="0.0796%" height="15" fill="rgb(220,204,36)" fg:x="305" fg:w="1"/><text x="24.5141%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3437%" y="501" width="0.0796%" height="15" fill="rgb(253,181,43)" fg:x="306" fg:w="1"/><text x="24.5937%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3437%" y="485" width="0.0796%" height="15" fill="rgb(211,41,51)" fg:x="306" fg:w="1"/><text x="24.5937%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3437%" y="469" width="0.0796%" height="15" fill="rgb(207,215,0)" fg:x="306" fg:w="1"/><text x="24.5937%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3437%" y="453" width="0.0796%" height="15" fill="rgb(212,153,10)" fg:x="306" fg:w="1"/><text x="24.5937%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3437%" y="437" width="0.0796%" height="15" fill="rgb(251,171,36)" fg:x="306" fg:w="1"/><text x="24.5937%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3437%" y="421" width="0.0796%" height="15" fill="rgb(225,219,41)" fg:x="306" fg:w="1"/><text x="24.5937%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="24.2641%" y="581" width="0.2387%" height="15" fill="rgb(208,200,1)" fg:x="305" fg:w="3"/><text x="24.5141%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="24.2641%" y="565" width="0.2387%" height="15" fill="rgb(206,75,47)" fg:x="305" fg:w="3"/><text x="24.5141%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="24.3437%" y="549" width="0.1591%" height="15" fill="rgb(248,3,16)" fg:x="306" fg:w="2"/><text x="24.5937%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="24.3437%" y="533" width="0.1591%" height="15" fill="rgb(242,157,36)" fg:x="306" fg:w="2"/><text x="24.5937%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.3437%" y="517" width="0.1591%" height="15" fill="rgb(215,175,11)" fg:x="306" fg:w="2"/><text x="24.5937%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.4232%" y="501" width="0.0796%" height="15" fill="rgb(252,222,22)" fg:x="307" fg:w="1"/><text x="24.6732%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4232%" y="485" width="0.0796%" height="15" fill="rgb(250,121,35)" fg:x="307" fg:w="1"/><text x="24.6732%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.4232%" y="469" width="0.0796%" height="15" fill="rgb(233,120,49)" fg:x="307" fg:w="1"/><text x="24.6732%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4232%" y="453" width="0.0796%" height="15" fill="rgb(205,201,14)" fg:x="307" fg:w="1"/><text x="24.6732%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.4232%" y="437" width="0.0796%" height="15" fill="rgb(219,58,45)" fg:x="307" fg:w="1"/><text x="24.6732%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4232%" y="421" width="0.0796%" height="15" fill="rgb(251,65,12)" fg:x="307" fg:w="1"/><text x="24.6732%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.4232%" y="405" width="0.0796%" height="15" fill="rgb(224,47,31)" fg:x="307" fg:w="1"/><text x="24.6732%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4232%" y="389" width="0.0796%" height="15" fill="rgb(233,74,26)" fg:x="307" fg:w="1"/><text x="24.6732%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.4232%" y="373" width="0.0796%" height="15" fill="rgb(231,211,31)" fg:x="307" fg:w="1"/><text x="24.6732%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5823%" y="533" width="0.0796%" height="15" fill="rgb(239,167,5)" fg:x="309" fg:w="1"/><text x="24.8323%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6619%" y="501" width="0.0796%" height="15" fill="rgb(241,85,0)" fg:x="310" fg:w="1"/><text x="24.9119%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6619%" y="485" width="0.0796%" height="15" fill="rgb(229,130,21)" fg:x="310" fg:w="1"/><text x="24.9119%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6619%" y="469" width="0.0796%" height="15" fill="rgb(254,84,49)" fg:x="310" fg:w="1"/><text x="24.9119%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6619%" y="453" width="0.0796%" height="15" fill="rgb(235,85,21)" fg:x="310" fg:w="1"/><text x="24.9119%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6619%" y="437" width="0.0796%" height="15" fill="rgb(246,128,52)" fg:x="310" fg:w="1"/><text x="24.9119%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="24.5823%" y="549" width="0.2387%" height="15" fill="rgb(243,114,49)" fg:x="309" fg:w="3"/><text x="24.8323%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="24.6619%" y="533" width="0.1591%" height="15" fill="rgb(240,224,22)" fg:x="310" fg:w="2"/><text x="24.9119%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.6619%" y="517" width="0.1591%" height="15" fill="rgb(247,201,52)" fg:x="310" fg:w="2"/><text x="24.9119%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.7414%" y="501" width="0.0796%" height="15" fill="rgb(231,70,45)" fg:x="311" fg:w="1"/><text x="24.9914%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.7414%" y="485" width="0.0796%" height="15" fill="rgb(217,215,20)" fg:x="311" fg:w="1"/><text x="24.9914%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.7414%" y="469" width="0.0796%" height="15" fill="rgb(226,170,30)" fg:x="311" fg:w="1"/><text x="24.9914%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.7414%" y="453" width="0.0796%" height="15" fill="rgb(220,190,43)" fg:x="311" fg:w="1"/><text x="24.9914%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="24.8210%" y="549" width="0.0796%" height="15" fill="rgb(218,20,18)" fg:x="312" fg:w="1"/><text x="25.0710%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="24.8210%" y="533" width="0.0796%" height="15" fill="rgb(245,37,26)" fg:x="312" fg:w="1"/><text x="25.0710%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.8210%" y="517" width="0.0796%" height="15" fill="rgb(241,127,29)" fg:x="312" fg:w="1"/><text x="25.0710%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="24.9006%" y="533" width="0.0796%" height="15" fill="rgb(241,33,26)" fg:x="313" fg:w="1"/><text x="25.1506%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.9006%" y="517" width="0.0796%" height="15" fill="rgb(220,106,21)" fg:x="313" fg:w="1"/><text x="25.1506%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.9006%" y="501" width="0.0796%" height="15" fill="rgb(225,125,35)" fg:x="313" fg:w="1"/><text x="25.1506%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="24.9801%" y="517" width="0.1591%" height="15" fill="rgb(248,80,22)" fg:x="314" fg:w="2"/><text x="25.2301%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="24.9801%" y="501" width="0.1591%" height="15" fill="rgb(231,117,39)" fg:x="314" fg:w="2"/><text x="25.2301%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="24.9801%" y="485" width="0.1591%" height="15" fill="rgb(239,183,16)" fg:x="314" fg:w="2"/><text x="25.2301%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="24.9801%" y="469" width="0.1591%" height="15" fill="rgb(221,61,19)" fg:x="314" fg:w="2"/><text x="25.2301%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="24.9006%" y="549" width="0.3182%" height="15" fill="rgb(239,196,44)" fg:x="313" fg:w="4"/><text x="25.1506%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="24.9801%" y="533" width="0.2387%" height="15" fill="rgb(206,113,19)" fg:x="314" fg:w="3"/><text x="25.2301%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1392%" y="517" width="0.0796%" height="15" fill="rgb(245,114,12)" fg:x="316" fg:w="1"/><text x="25.3892%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1392%" y="501" width="0.0796%" height="15" fill="rgb(247,89,39)" fg:x="316" fg:w="1"/><text x="25.3892%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1392%" y="485" width="0.0796%" height="15" fill="rgb(213,85,14)" fg:x="316" fg:w="1"/><text x="25.3892%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1392%" y="469" width="0.0796%" height="15" fill="rgb(249,206,33)" fg:x="316" fg:w="1"/><text x="25.3892%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1392%" y="453" width="0.0796%" height="15" fill="rgb(235,167,47)" fg:x="316" fg:w="1"/><text x="25.3892%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="25.2983%" y="501" width="0.0796%" height="15" fill="rgb(217,177,16)" fg:x="318" fg:w="1"/><text x="25.5483%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.2983%" y="485" width="0.0796%" height="15" fill="rgb(250,228,29)" fg:x="318" fg:w="1"/><text x="25.5483%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2983%" y="469" width="0.0796%" height="15" fill="rgb(216,195,42)" fg:x="318" fg:w="1"/><text x="25.5483%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5370%" y="469" width="0.0796%" height="15" fill="rgb(232,192,32)" fg:x="321" fg:w="1"/><text x="25.7870%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5370%" y="453" width="0.0796%" height="15" fill="rgb(211,8,47)" fg:x="321" fg:w="1"/><text x="25.7870%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5370%" y="437" width="0.0796%" height="15" fill="rgb(251,201,9)" fg:x="321" fg:w="1"/><text x="25.7870%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5370%" y="421" width="0.0796%" height="15" fill="rgb(206,185,47)" fg:x="321" fg:w="1"/><text x="25.7870%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5370%" y="405" width="0.0796%" height="15" fill="rgb(245,54,32)" fg:x="321" fg:w="1"/><text x="25.7870%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.5370%" y="389" width="0.0796%" height="15" fill="rgb(208,1,8)" fg:x="321" fg:w="1"/><text x="25.7870%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="25.6165%" y="469" width="0.2387%" height="15" fill="rgb(228,57,24)" fg:x="322" fg:w="3"/><text x="25.8665%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8552%" y="469" width="0.0796%" height="15" fill="rgb(251,24,8)" fg:x="325" fg:w="1"/><text x="26.1052%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.51%)</title><rect x="24.5028%" y="565" width="1.5115%" height="15" fill="rgb(236,196,50)" fg:x="308" fg:w="19"/><text x="24.7528%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="25.2188%" y="549" width="0.7955%" height="15" fill="rgb(246,222,29)" fg:x="317" fg:w="10"/><text x="25.4688%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (10 samples, 0.80%)</title><rect x="25.2188%" y="533" width="0.7955%" height="15" fill="rgb(211,34,40)" fg:x="317" fg:w="10"/><text x="25.4688%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (9 samples, 0.72%)</title><rect x="25.2983%" y="517" width="0.7160%" height="15" fill="rgb(210,66,51)" fg:x="318" fg:w="9"/><text x="25.5483%" y="527.50"></text></g><g><title>kernel::model::props::save_props (8 samples, 0.64%)</title><rect x="25.3779%" y="501" width="0.6364%" height="15" fill="rgb(250,56,43)" fg:x="319" fg:w="8"/><text x="25.6279%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.64%)</title><rect x="25.3779%" y="485" width="0.6364%" height="15" fill="rgb(240,111,50)" fg:x="319" fg:w="8"/><text x="25.6279%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9348%" y="469" width="0.0796%" height="15" fill="rgb(209,117,13)" fg:x="326" fg:w="1"/><text x="26.1848%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.9348%" y="453" width="0.0796%" height="15" fill="rgb(232,164,45)" fg:x="326" fg:w="1"/><text x="26.1848%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9348%" y="437" width="0.0796%" height="15" fill="rgb(205,69,32)" fg:x="326" fg:w="1"/><text x="26.1848%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.0143%" y="389" width="0.0796%" height="15" fill="rgb(240,147,45)" fg:x="327" fg:w="1"/><text x="26.2643%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0143%" y="373" width="0.0796%" height="15" fill="rgb(221,94,48)" fg:x="327" fg:w="1"/><text x="26.2643%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.0143%" y="469" width="0.1591%" height="15" fill="rgb(249,209,17)" fg:x="327" fg:w="2"/><text x="26.2643%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="26.0143%" y="453" width="0.1591%" height="15" fill="rgb(228,57,28)" fg:x="327" fg:w="2"/><text x="26.2643%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.0143%" y="437" width="0.1591%" height="15" fill="rgb(250,133,26)" fg:x="327" fg:w="2"/><text x="26.2643%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.0143%" y="421" width="0.1591%" height="15" fill="rgb(254,15,16)" fg:x="327" fg:w="2"/><text x="26.2643%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.0143%" y="405" width="0.1591%" height="15" fill="rgb(209,147,42)" fg:x="327" fg:w="2"/><text x="26.2643%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.0939%" y="389" width="0.0796%" height="15" fill="rgb(208,5,29)" fg:x="328" fg:w="1"/><text x="26.3439%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.0939%" y="373" width="0.0796%" height="15" fill="rgb(250,73,31)" fg:x="328" fg:w="1"/><text x="26.3439%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="26.1734%" y="373" width="0.0796%" height="15" fill="rgb(238,45,10)" fg:x="329" fg:w="1"/><text x="26.4234%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.2530%" y="373" width="0.0796%" height="15" fill="rgb(214,104,5)" fg:x="330" fg:w="1"/><text x="26.5030%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="26.0143%" y="517" width="0.4773%" height="15" fill="rgb(242,217,19)" fg:x="327" fg:w="6"/><text x="26.2643%" y="527.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="26.0143%" y="501" width="0.4773%" height="15" fill="rgb(246,113,27)" fg:x="327" fg:w="6"/><text x="26.2643%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="26.0143%" y="485" width="0.4773%" height="15" fill="rgb(221,34,27)" fg:x="327" fg:w="6"/><text x="26.2643%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="26.1734%" y="469" width="0.3182%" height="15" fill="rgb(246,109,6)" fg:x="329" fg:w="4"/><text x="26.4234%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="26.1734%" y="453" width="0.3182%" height="15" fill="rgb(217,12,25)" fg:x="329" fg:w="4"/><text x="26.4234%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="26.1734%" y="437" width="0.3182%" height="15" fill="rgb(250,195,5)" fg:x="329" fg:w="4"/><text x="26.4234%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="26.1734%" y="421" width="0.3182%" height="15" fill="rgb(244,140,45)" fg:x="329" fg:w="4"/><text x="26.4234%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="26.1734%" y="405" width="0.3182%" height="15" fill="rgb(230,64,14)" fg:x="329" fg:w="4"/><text x="26.4234%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="26.1734%" y="389" width="0.3182%" height="15" fill="rgb(206,27,27)" fg:x="329" fg:w="4"/><text x="26.4234%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.3325%" y="373" width="0.1591%" height="15" fill="rgb(230,14,50)" fg:x="331" fg:w="2"/><text x="26.5825%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.3325%" y="357" width="0.1591%" height="15" fill="rgb(237,172,14)" fg:x="331" fg:w="2"/><text x="26.5825%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.4121%" y="341" width="0.0796%" height="15" fill="rgb(209,25,21)" fg:x="332" fg:w="1"/><text x="26.6621%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4916%" y="469" width="0.0796%" height="15" fill="rgb(248,148,22)" fg:x="333" fg:w="1"/><text x="26.7416%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4916%" y="453" width="0.0796%" height="15" fill="rgb(234,100,22)" fg:x="333" fg:w="1"/><text x="26.7416%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4916%" y="437" width="0.0796%" height="15" fill="rgb(210,20,30)" fg:x="333" fg:w="1"/><text x="26.7416%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4916%" y="421" width="0.0796%" height="15" fill="rgb(232,58,0)" fg:x="333" fg:w="1"/><text x="26.7416%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4916%" y="405" width="0.0796%" height="15" fill="rgb(221,68,13)" fg:x="333" fg:w="1"/><text x="26.7416%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4916%" y="389" width="0.0796%" height="15" fill="rgb(231,194,11)" fg:x="333" fg:w="1"/><text x="26.7416%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4916%" y="373" width="0.0796%" height="15" fill="rgb(235,51,41)" fg:x="333" fg:w="1"/><text x="26.7416%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.4916%" y="357" width="0.0796%" height="15" fill="rgb(240,50,32)" fg:x="333" fg:w="1"/><text x="26.7416%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.4916%" y="341" width="0.0796%" height="15" fill="rgb(240,185,36)" fg:x="333" fg:w="1"/><text x="26.7416%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.4916%" y="325" width="0.0796%" height="15" fill="rgb(211,168,15)" fg:x="333" fg:w="1"/><text x="26.7416%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.4916%" y="309" width="0.0796%" height="15" fill="rgb(221,70,0)" fg:x="333" fg:w="1"/><text x="26.7416%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.4916%" y="293" width="0.0796%" height="15" fill="rgb(205,21,33)" fg:x="333" fg:w="1"/><text x="26.7416%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.4916%" y="277" width="0.0796%" height="15" fill="rgb(225,106,10)" fg:x="333" fg:w="1"/><text x="26.7416%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.4916%" y="261" width="0.0796%" height="15" fill="rgb(236,200,50)" fg:x="333" fg:w="1"/><text x="26.7416%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.4916%" y="245" width="0.0796%" height="15" fill="rgb(249,93,23)" fg:x="333" fg:w="1"/><text x="26.7416%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.4916%" y="229" width="0.0796%" height="15" fill="rgb(244,115,35)" fg:x="333" fg:w="1"/><text x="26.7416%" y="239.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="26.0143%" y="549" width="0.6364%" height="15" fill="rgb(231,129,47)" fg:x="327" fg:w="8"/><text x="26.2643%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="26.0143%" y="533" width="0.6364%" height="15" fill="rgb(225,160,50)" fg:x="327" fg:w="8"/><text x="26.2643%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="26.4916%" y="517" width="0.1591%" height="15" fill="rgb(218,135,23)" fg:x="333" fg:w="2"/><text x="26.7416%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.4916%" y="501" width="0.1591%" height="15" fill="rgb(227,119,14)" fg:x="333" fg:w="2"/><text x="26.7416%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.4916%" y="485" width="0.1591%" height="15" fill="rgb(242,138,13)" fg:x="333" fg:w="2"/><text x="26.7416%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.5712%" y="469" width="0.0796%" height="15" fill="rgb(215,11,16)" fg:x="334" fg:w="1"/><text x="26.8212%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.5712%" y="453" width="0.0796%" height="15" fill="rgb(234,170,50)" fg:x="334" fg:w="1"/><text x="26.8212%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.5712%" y="437" width="0.0796%" height="15" fill="rgb(233,34,20)" fg:x="334" fg:w="1"/><text x="26.8212%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.5712%" y="421" width="0.0796%" height="15" fill="rgb(237,100,45)" fg:x="334" fg:w="1"/><text x="26.8212%" y="431.50"></text></g><g><title>plugins_core::build::Build::leads_to (28 samples, 2.23%)</title><rect x="24.5028%" y="581" width="2.2275%" height="15" fill="rgb(231,184,36)" fg:x="308" fg:w="28"/><text x="24.7528%" y="591.50">p..</text></g><g><title>plugins_core::tools::leads_to (9 samples, 0.72%)</title><rect x="26.0143%" y="565" width="0.7160%" height="15" fill="rgb(252,93,2)" fg:x="327" fg:w="9"/><text x="26.2643%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="26.6508%" y="549" width="0.0796%" height="15" fill="rgb(248,176,47)" fg:x="335" fg:w="1"/><text x="26.9008%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="26.6508%" y="533" width="0.0796%" height="15" fill="rgb(249,125,23)" fg:x="335" fg:w="1"/><text x="26.9008%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.7303%" y="517" width="0.0796%" height="15" fill="rgb(239,67,42)" fg:x="336" fg:w="1"/><text x="26.9803%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.7303%" y="501" width="0.0796%" height="15" fill="rgb(244,162,4)" fg:x="336" fg:w="1"/><text x="26.9803%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.7303%" y="485" width="0.0796%" height="15" fill="rgb(214,150,38)" fg:x="336" fg:w="1"/><text x="26.9803%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.7303%" y="469" width="0.0796%" height="15" fill="rgb(228,211,28)" fg:x="336" fg:w="1"/><text x="26.9803%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.7303%" y="453" width="0.0796%" height="15" fill="rgb(212,98,48)" fg:x="336" fg:w="1"/><text x="26.9803%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.7303%" y="437" width="0.0796%" height="15" fill="rgb(213,45,13)" fg:x="336" fg:w="1"/><text x="26.9803%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.7303%" y="421" width="0.0796%" height="15" fill="rgb(218,35,29)" fg:x="336" fg:w="1"/><text x="26.9803%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.7303%" y="405" width="0.0796%" height="15" fill="rgb(244,13,3)" fg:x="336" fg:w="1"/><text x="26.9803%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.7303%" y="389" width="0.0796%" height="15" fill="rgb(235,170,19)" fg:x="336" fg:w="1"/><text x="26.9803%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (38 samples, 3.02%)</title><rect x="23.8663%" y="629" width="3.0231%" height="15" fill="rgb(233,193,43)" fg:x="300" fg:w="38"/><text x="24.1163%" y="639.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 3.02%)</title><rect x="23.8663%" y="613" width="3.0231%" height="15" fill="rgb(228,223,20)" fg:x="300" fg:w="38"/><text x="24.1163%" y="623.50">&lt;al..</text></g><g><title>plugins_core::build::QuickThing::make (38 samples, 3.02%)</title><rect x="23.8663%" y="597" width="3.0231%" height="15" fill="rgb(208,85,54)" fg:x="300" fg:w="38"/><text x="24.1163%" y="607.50">plu..</text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="26.7303%" y="581" width="0.1591%" height="15" fill="rgb(254,14,45)" fg:x="336" fg:w="2"/><text x="26.9803%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="26.7303%" y="565" width="0.1591%" height="15" fill="rgb(247,99,29)" fg:x="336" fg:w="2"/><text x="26.9803%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.7303%" y="549" width="0.1591%" height="15" fill="rgb(225,180,54)" fg:x="336" fg:w="2"/><text x="26.9803%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.7303%" y="533" width="0.1591%" height="15" fill="rgb(239,88,43)" fg:x="336" fg:w="2"/><text x="26.9803%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.8099%" y="517" width="0.0796%" height="15" fill="rgb(209,47,11)" fg:x="337" fg:w="1"/><text x="27.0599%" y="527.50"></text></g><g><title>&lt;kernel::session::SetSession as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.8894%" y="613" width="0.0796%" height="15" fill="rgb(219,179,23)" fg:x="338" fg:w="1"/><text x="27.1394%" y="623.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="27.0485%" y="597" width="0.0796%" height="15" fill="rgb(213,183,19)" fg:x="340" fg:w="1"/><text x="27.2985%" y="607.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="27.0485%" y="581" width="0.0796%" height="15" fill="rgb(210,11,9)" fg:x="340" fg:w="1"/><text x="27.2985%" y="591.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="27.0485%" y="565" width="0.0796%" height="15" fill="rgb(239,194,16)" fg:x="340" fg:w="1"/><text x="27.2985%" y="575.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="27.0485%" y="549" width="0.0796%" height="15" fill="rgb(246,23,50)" fg:x="340" fg:w="1"/><text x="27.2985%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="27.0485%" y="533" width="0.0796%" height="15" fill="rgb(245,10,41)" fg:x="340" fg:w="1"/><text x="27.2985%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="27.0485%" y="517" width="0.0796%" height="15" fill="rgb(228,43,24)" fg:x="340" fg:w="1"/><text x="27.2985%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="27.0485%" y="501" width="0.0796%" height="15" fill="rgb(220,151,0)" fg:x="340" fg:w="1"/><text x="27.2985%" y="511.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="27.0485%" y="485" width="0.0796%" height="15" fill="rgb(232,219,10)" fg:x="340" fg:w="1"/><text x="27.2985%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="27.2076%" y="565" width="0.0796%" height="15" fill="rgb(227,217,48)" fg:x="342" fg:w="1"/><text x="27.4576%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="27.3667%" y="533" width="0.1591%" height="15" fill="rgb(210,66,35)" fg:x="344" fg:w="2"/><text x="27.6167%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="27.3667%" y="517" width="0.1591%" height="15" fill="rgb(254,6,7)" fg:x="344" fg:w="2"/><text x="27.6167%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.4463%" y="501" width="0.0796%" height="15" fill="rgb(235,222,42)" fg:x="345" fg:w="1"/><text x="27.6963%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.4463%" y="485" width="0.0796%" height="15" fill="rgb(245,126,5)" fg:x="345" fg:w="1"/><text x="27.6963%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.4463%" y="469" width="0.0796%" height="15" fill="rgb(215,73,17)" fg:x="345" fg:w="1"/><text x="27.6963%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.4463%" y="453" width="0.0796%" height="15" fill="rgb(219,198,52)" fg:x="345" fg:w="1"/><text x="27.6963%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.4463%" y="437" width="0.0796%" height="15" fill="rgb(217,159,18)" fg:x="345" fg:w="1"/><text x="27.6963%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.4463%" y="421" width="0.0796%" height="15" fill="rgb(212,177,18)" fg:x="345" fg:w="1"/><text x="27.6963%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.4463%" y="405" width="0.0796%" height="15" fill="rgb(241,10,11)" fg:x="345" fg:w="1"/><text x="27.6963%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.4463%" y="389" width="0.0796%" height="15" fill="rgb(232,114,35)" fg:x="345" fg:w="1"/><text x="27.6963%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.4463%" y="373" width="0.0796%" height="15" fill="rgb(238,222,8)" fg:x="345" fg:w="1"/><text x="27.6963%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.4463%" y="357" width="0.0796%" height="15" fill="rgb(251,153,44)" fg:x="345" fg:w="1"/><text x="27.6963%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4463%" y="341" width="0.0796%" height="15" fill="rgb(210,140,51)" fg:x="345" fg:w="1"/><text x="27.6963%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="27.2872%" y="565" width="0.3182%" height="15" fill="rgb(222,63,0)" fg:x="343" fg:w="4"/><text x="27.5372%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="27.2872%" y="549" width="0.3182%" height="15" fill="rgb(240,18,40)" fg:x="343" fg:w="4"/><text x="27.5372%" y="559.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="27.5259%" y="533" width="0.0796%" height="15" fill="rgb(237,88,16)" fg:x="346" fg:w="1"/><text x="27.7759%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="27.5259%" y="517" width="0.0796%" height="15" fill="rgb(251,117,13)" fg:x="346" fg:w="1"/><text x="27.7759%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="27.6850%" y="549" width="0.0796%" height="15" fill="rgb(251,228,8)" fg:x="348" fg:w="1"/><text x="27.9350%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.6850%" y="533" width="0.0796%" height="15" fill="rgb(205,107,49)" fg:x="348" fg:w="1"/><text x="27.9350%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.6850%" y="517" width="0.0796%" height="15" fill="rgb(238,72,41)" fg:x="348" fg:w="1"/><text x="27.9350%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="27.8441%" y="533" width="0.0796%" height="15" fill="rgb(248,183,52)" fg:x="350" fg:w="1"/><text x="28.0941%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.8441%" y="517" width="0.0796%" height="15" fill="rgb(215,58,20)" fg:x="350" fg:w="1"/><text x="28.0941%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.8441%" y="501" width="0.0796%" height="15" fill="rgb(209,49,13)" fg:x="350" fg:w="1"/><text x="28.0941%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.8441%" y="485" width="0.0796%" height="15" fill="rgb(208,113,17)" fg:x="350" fg:w="1"/><text x="28.0941%" y="495.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="27.8441%" y="469" width="0.0796%" height="15" fill="rgb(208,14,22)" fg:x="350" fg:w="1"/><text x="28.0941%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="28.1623%" y="501" width="0.3182%" height="15" fill="rgb(222,95,2)" fg:x="354" fg:w="4"/><text x="28.4123%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.2418%" y="485" width="0.2387%" height="15" fill="rgb(253,180,37)" fg:x="355" fg:w="3"/><text x="28.4918%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.3214%" y="469" width="0.1591%" height="15" fill="rgb(250,81,33)" fg:x="356" fg:w="2"/><text x="28.5714%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="28.0827%" y="517" width="0.4773%" height="15" fill="rgb(251,151,41)" fg:x="353" fg:w="6"/><text x="28.3327%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.4805%" y="501" width="0.0796%" height="15" fill="rgb(210,135,17)" fg:x="358" fg:w="1"/><text x="28.7305%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="29.2761%" y="453" width="0.3978%" height="15" fill="rgb(239,21,29)" fg:x="368" fg:w="5"/><text x="29.5261%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.5943%" y="437" width="0.0796%" height="15" fill="rgb(231,215,16)" fg:x="372" fg:w="1"/><text x="29.8443%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.5943%" y="421" width="0.0796%" height="15" fill="rgb(239,151,54)" fg:x="372" fg:w="1"/><text x="29.8443%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.5943%" y="405" width="0.0796%" height="15" fill="rgb(222,122,38)" fg:x="372" fg:w="1"/><text x="29.8443%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (14 samples, 1.11%)</title><rect x="28.6396%" y="501" width="1.1138%" height="15" fill="rgb(243,128,1)" fg:x="360" fg:w="14"/><text x="28.8896%" y="511.50"></text></g><g><title>std::io::Write::write_all (10 samples, 0.80%)</title><rect x="28.9578%" y="485" width="0.7955%" height="15" fill="rgb(225,74,21)" fg:x="364" fg:w="10"/><text x="29.2078%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (9 samples, 0.72%)</title><rect x="29.0374%" y="469" width="0.7160%" height="15" fill="rgb(216,210,10)" fg:x="365" fg:w="9"/><text x="29.2874%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.6738%" y="453" width="0.0796%" height="15" fill="rgb(228,76,19)" fg:x="373" fg:w="1"/><text x="29.9238%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.9920%" y="453" width="0.0796%" height="15" fill="rgb(236,80,34)" fg:x="377" fg:w="1"/><text x="30.2420%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="29.9920%" y="485" width="0.2387%" height="15" fill="rgb(225,173,23)" fg:x="377" fg:w="3"/><text x="30.2420%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="29.9920%" y="469" width="0.2387%" height="15" fill="rgb(253,38,1)" fg:x="377" fg:w="3"/><text x="30.2420%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="30.0716%" y="453" width="0.1591%" height="15" fill="rgb(206,155,35)" fg:x="378" fg:w="2"/><text x="30.3216%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="30.0716%" y="437" width="0.1591%" height="15" fill="rgb(254,27,53)" fg:x="378" fg:w="2"/><text x="30.3216%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.1512%" y="421" width="0.0796%" height="15" fill="rgb(225,52,41)" fg:x="379" fg:w="1"/><text x="30.4012%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="30.2307%" y="485" width="0.3182%" height="15" fill="rgb(244,53,18)" fg:x="380" fg:w="4"/><text x="30.4807%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="30.3103%" y="469" width="0.2387%" height="15" fill="rgb(254,206,48)" fg:x="381" fg:w="3"/><text x="30.5603%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.3898%" y="453" width="0.1591%" height="15" fill="rgb(236,182,23)" fg:x="382" fg:w="2"/><text x="30.6398%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.3898%" y="437" width="0.1591%" height="15" fill="rgb(236,191,37)" fg:x="382" fg:w="2"/><text x="30.6398%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="30.6285%" y="469" width="0.0796%" height="15" fill="rgb(245,53,8)" fg:x="385" fg:w="1"/><text x="30.8785%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.6285%" y="453" width="0.0796%" height="15" fill="rgb(245,147,9)" fg:x="385" fg:w="1"/><text x="30.8785%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.6285%" y="437" width="0.0796%" height="15" fill="rgb(218,24,48)" fg:x="385" fg:w="1"/><text x="30.8785%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="30.6285%" y="421" width="0.0796%" height="15" fill="rgb(254,23,9)" fg:x="385" fg:w="1"/><text x="30.8785%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="30.7876%" y="453" width="0.2387%" height="15" fill="rgb(244,105,9)" fg:x="387" fg:w="3"/><text x="31.0376%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.8671%" y="437" width="0.1591%" height="15" fill="rgb(212,142,22)" fg:x="388" fg:w="2"/><text x="31.1171%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.9467%" y="421" width="0.0796%" height="15" fill="rgb(221,114,49)" fg:x="389" fg:w="1"/><text x="31.1967%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.9467%" y="405" width="0.0796%" height="15" fill="rgb(223,210,25)" fg:x="389" fg:w="1"/><text x="31.1967%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="31.0263%" y="437" width="0.1591%" height="15" fill="rgb(235,162,44)" fg:x="390" fg:w="2"/><text x="31.2763%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="31.0263%" y="421" width="0.1591%" height="15" fill="rgb(237,65,45)" fg:x="390" fg:w="2"/><text x="31.2763%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="31.0263%" y="405" width="0.1591%" height="15" fill="rgb(208,79,9)" fg:x="390" fg:w="2"/><text x="31.2763%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="31.1854%" y="437" width="0.6364%" height="15" fill="rgb(215,228,8)" fg:x="392" fg:w="8"/><text x="31.4354%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="31.2649%" y="421" width="0.5569%" height="15" fill="rgb(205,185,17)" fg:x="393" fg:w="7"/><text x="31.5149%" y="431.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="31.3445%" y="405" width="0.4773%" height="15" fill="rgb(213,62,36)" fg:x="394" fg:w="6"/><text x="31.5945%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="31.5036%" y="389" width="0.3182%" height="15" fill="rgb(209,34,9)" fg:x="396" fg:w="4"/><text x="31.7536%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="31.5831%" y="373" width="0.2387%" height="15" fill="rgb(246,151,27)" fg:x="397" fg:w="3"/><text x="31.8331%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.7422%" y="357" width="0.0796%" height="15" fill="rgb(218,206,3)" fg:x="399" fg:w="1"/><text x="31.9922%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.7422%" y="341" width="0.0796%" height="15" fill="rgb(242,202,1)" fg:x="399" fg:w="1"/><text x="31.9922%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.7422%" y="325" width="0.0796%" height="15" fill="rgb(227,185,16)" fg:x="399" fg:w="1"/><text x="31.9922%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.35%)</title><rect x="30.5489%" y="485" width="1.3524%" height="15" fill="rgb(241,1,14)" fg:x="384" fg:w="17"/><text x="30.7989%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="30.7080%" y="469" width="1.1933%" height="15" fill="rgb(212,113,25)" fg:x="386" fg:w="15"/><text x="30.9580%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="31.0263%" y="453" width="0.8751%" height="15" fill="rgb(247,37,43)" fg:x="390" fg:w="11"/><text x="31.2763%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.8218%" y="437" width="0.0796%" height="15" fill="rgb(226,54,8)" fg:x="400" fg:w="1"/><text x="32.0718%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.8218%" y="421" width="0.0796%" height="15" fill="rgb(251,205,25)" fg:x="400" fg:w="1"/><text x="32.0718%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.8218%" y="405" width="0.0796%" height="15" fill="rgb(246,87,35)" fg:x="400" fg:w="1"/><text x="32.0718%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.8218%" y="389" width="0.0796%" height="15" fill="rgb(251,145,46)" fg:x="400" fg:w="1"/><text x="32.0718%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.8218%" y="373" width="0.0796%" height="15" fill="rgb(210,210,33)" fg:x="400" fg:w="1"/><text x="32.0718%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.8218%" y="357" width="0.0796%" height="15" fill="rgb(221,151,11)" fg:x="400" fg:w="1"/><text x="32.0718%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.31%)</title><rect x="29.7534%" y="501" width="2.3071%" height="15" fill="rgb(208,160,28)" fg:x="374" fg:w="29"/><text x="30.0034%" y="511.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="31.9014%" y="485" width="0.1591%" height="15" fill="rgb(243,69,29)" fg:x="401" fg:w="2"/><text x="32.1514%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="31.9014%" y="469" width="0.1591%" height="15" fill="rgb(224,144,4)" fg:x="401" fg:w="2"/><text x="32.1514%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="31.9014%" y="453" width="0.1591%" height="15" fill="rgb(211,140,38)" fg:x="401" fg:w="2"/><text x="32.1514%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="32.2196%" y="469" width="0.2387%" height="15" fill="rgb(252,189,15)" fg:x="405" fg:w="3"/><text x="32.4696%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="32.2991%" y="453" width="0.1591%" height="15" fill="rgb(251,175,23)" fg:x="406" fg:w="2"/><text x="32.5491%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="32.2991%" y="437" width="0.1591%" height="15" fill="rgb(212,184,11)" fg:x="406" fg:w="2"/><text x="32.5491%" y="447.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="32.2991%" y="421" width="0.1591%" height="15" fill="rgb(217,205,6)" fg:x="406" fg:w="2"/><text x="32.5491%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (50 samples, 3.98%)</title><rect x="28.5601%" y="517" width="3.9777%" height="15" fill="rgb(235,45,45)" fg:x="359" fg:w="50"/><text x="28.8101%" y="527.50">serd..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="32.0605%" y="501" width="0.4773%" height="15" fill="rgb(211,157,53)" fg:x="403" fg:w="6"/><text x="32.3105%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="32.1400%" y="485" width="0.3978%" height="15" fill="rgb(212,13,8)" fg:x="404" fg:w="5"/><text x="32.3900%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="32.4582%" y="469" width="0.0796%" height="15" fill="rgb(218,80,36)" fg:x="408" fg:w="1"/><text x="32.7082%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (59 samples, 4.69%)</title><rect x="27.9236%" y="533" width="4.6937%" height="15" fill="rgb(211,123,43)" fg:x="351" fg:w="59"/><text x="28.1736%" y="543.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.5378%" y="517" width="0.0796%" height="15" fill="rgb(206,165,2)" fg:x="409" fg:w="1"/><text x="32.7878%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.5378%" y="501" width="0.0796%" height="15" fill="rgb(248,63,35)" fg:x="409" fg:w="1"/><text x="32.7878%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.5378%" y="485" width="0.0796%" height="15" fill="rgb(219,133,41)" fg:x="409" fg:w="1"/><text x="32.7878%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.6173%" y="501" width="0.0796%" height="15" fill="rgb(206,175,46)" fg:x="410" fg:w="1"/><text x="32.8673%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.6969%" y="501" width="0.0796%" height="15" fill="rgb(224,41,35)" fg:x="411" fg:w="1"/><text x="32.9469%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.6969%" y="485" width="0.0796%" height="15" fill="rgb(226,113,24)" fg:x="411" fg:w="1"/><text x="32.9469%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="32.7765%" y="485" width="0.2387%" height="15" fill="rgb(219,51,41)" fg:x="412" fg:w="3"/><text x="33.0265%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.0151%" y="469" width="0.0796%" height="15" fill="rgb(220,145,47)" fg:x="415" fg:w="1"/><text x="33.2651%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.1742%" y="453" width="0.0796%" height="15" fill="rgb(239,121,47)" fg:x="417" fg:w="1"/><text x="33.4242%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2538%" y="437" width="0.0796%" height="15" fill="rgb(207,60,40)" fg:x="418" fg:w="1"/><text x="33.5038%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3333%" y="421" width="0.0796%" height="15" fill="rgb(224,229,11)" fg:x="419" fg:w="1"/><text x="33.5833%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.4129%" y="421" width="0.0796%" height="15" fill="rgb(252,28,32)" fg:x="420" fg:w="1"/><text x="33.6629%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="32.6173%" y="533" width="0.9547%" height="15" fill="rgb(207,52,49)" fg:x="410" fg:w="12"/><text x="32.8673%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.95%)</title><rect x="32.6173%" y="517" width="0.9547%" height="15" fill="rgb(243,51,50)" fg:x="410" fg:w="12"/><text x="32.8673%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="32.7765%" y="501" width="0.7955%" height="15" fill="rgb(212,92,21)" fg:x="412" fg:w="10"/><text x="33.0265%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="33.0151%" y="485" width="0.5569%" height="15" fill="rgb(230,183,50)" fg:x="415" fg:w="7"/><text x="33.2651%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="33.0947%" y="469" width="0.4773%" height="15" fill="rgb(225,48,9)" fg:x="416" fg:w="6"/><text x="33.3447%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="33.2538%" y="453" width="0.3182%" height="15" fill="rgb(254,44,4)" fg:x="418" fg:w="4"/><text x="33.5038%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="33.3333%" y="437" width="0.2387%" height="15" fill="rgb(252,128,37)" fg:x="419" fg:w="3"/><text x="33.5833%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.4924%" y="421" width="0.0796%" height="15" fill="rgb(227,178,8)" fg:x="421" fg:w="1"/><text x="33.7424%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.4924%" y="405" width="0.0796%" height="15" fill="rgb(205,206,32)" fg:x="421" fg:w="1"/><text x="33.7424%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.4924%" y="389" width="0.0796%" height="15" fill="rgb(220,218,22)" fg:x="421" fg:w="1"/><text x="33.7424%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.6516%" y="501" width="0.1591%" height="15" fill="rgb(236,41,28)" fg:x="423" fg:w="2"/><text x="33.9016%" y="511.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.32%)</title><rect x="33.5720%" y="517" width="0.3182%" height="15" fill="rgb(219,37,7)" fg:x="422" fg:w="4"/><text x="33.8220%" y="527.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="33.8107%" y="501" width="0.0796%" height="15" fill="rgb(206,160,15)" fg:x="425" fg:w="1"/><text x="34.0607%" y="511.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="33.8107%" y="485" width="0.0796%" height="15" fill="rgb(208,82,21)" fg:x="425" fg:w="1"/><text x="34.0607%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0493%" y="485" width="0.0796%" height="15" fill="rgb(226,130,25)" fg:x="428" fg:w="1"/><text x="34.2993%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.1289%" y="485" width="0.2387%" height="15" fill="rgb(212,72,24)" fg:x="429" fg:w="3"/><text x="34.3789%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2880%" y="469" width="0.0796%" height="15" fill="rgb(206,28,16)" fg:x="431" fg:w="1"/><text x="34.5380%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.2880%" y="453" width="0.0796%" height="15" fill="rgb(249,41,5)" fg:x="431" fg:w="1"/><text x="34.5380%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="34.3675%" y="485" width="0.1591%" height="15" fill="rgb(233,96,48)" fg:x="432" fg:w="2"/><text x="34.6175%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.3675%" y="469" width="0.1591%" height="15" fill="rgb(240,198,11)" fg:x="432" fg:w="2"/><text x="34.6175%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="34.5267%" y="485" width="0.1591%" height="15" fill="rgb(209,175,35)" fg:x="434" fg:w="2"/><text x="34.7767%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.5267%" y="469" width="0.1591%" height="15" fill="rgb(214,40,51)" fg:x="434" fg:w="2"/><text x="34.7767%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6062%" y="453" width="0.0796%" height="15" fill="rgb(252,56,4)" fg:x="435" fg:w="1"/><text x="34.8562%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="34.6858%" y="485" width="0.3978%" height="15" fill="rgb(219,131,5)" fg:x="436" fg:w="5"/><text x="34.9358%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="34.7653%" y="469" width="0.3182%" height="15" fill="rgb(223,67,53)" fg:x="437" fg:w="4"/><text x="35.0153%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.9244%" y="453" width="0.1591%" height="15" fill="rgb(227,154,8)" fg:x="439" fg:w="2"/><text x="35.1744%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.4018%" y="437" width="0.1591%" height="15" fill="rgb(216,174,51)" fg:x="445" fg:w="2"/><text x="35.6518%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.4018%" y="421" width="0.1591%" height="15" fill="rgb(239,60,34)" fg:x="445" fg:w="2"/><text x="35.6518%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.4018%" y="405" width="0.1591%" height="15" fill="rgb(236,165,48)" fg:x="445" fg:w="2"/><text x="35.6518%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (2 samples, 0.16%)</title><rect x="35.5609%" y="421" width="0.1591%" height="15" fill="rgb(210,37,26)" fg:x="447" fg:w="2"/><text x="35.8109%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6404%" y="405" width="0.0796%" height="15" fill="rgb(211,3,17)" fg:x="448" fg:w="1"/><text x="35.8904%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.7995%" y="405" width="0.0796%" height="15" fill="rgb(234,88,49)" fg:x="450" fg:w="1"/><text x="36.0495%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.0382%" y="357" width="0.0796%" height="15" fill="rgb(233,40,17)" fg:x="453" fg:w="1"/><text x="36.2882%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.64%)</title><rect x="35.5609%" y="437" width="0.6364%" height="15" fill="rgb(235,127,31)" fg:x="447" fg:w="8"/><text x="35.8109%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="35.7200%" y="421" width="0.4773%" height="15" fill="rgb(248,167,17)" fg:x="449" fg:w="6"/><text x="35.9700%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="35.8791%" y="405" width="0.3182%" height="15" fill="rgb(218,179,8)" fg:x="451" fg:w="4"/><text x="36.1291%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="35.8791%" y="389" width="0.3182%" height="15" fill="rgb(216,92,14)" fg:x="451" fg:w="4"/><text x="36.1291%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="35.8791%" y="373" width="0.3182%" height="15" fill="rgb(221,198,46)" fg:x="451" fg:w="4"/><text x="36.1291%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.1177%" y="357" width="0.0796%" height="15" fill="rgb(244,7,25)" fg:x="454" fg:w="1"/><text x="36.3677%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.2768%" y="421" width="0.0796%" height="15" fill="rgb(233,75,6)" fg:x="456" fg:w="1"/><text x="36.5268%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.3564%" y="421" width="0.0796%" height="15" fill="rgb(240,189,41)" fg:x="457" fg:w="1"/><text x="36.6064%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5155%" y="373" width="0.0796%" height="15" fill="rgb(237,157,21)" fg:x="459" fg:w="1"/><text x="36.7655%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="36.4360%" y="405" width="0.2387%" height="15" fill="rgb(210,136,49)" fg:x="458" fg:w="3"/><text x="36.6860%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.5155%" y="389" width="0.1591%" height="15" fill="rgb(210,68,29)" fg:x="459" fg:w="2"/><text x="36.7655%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.5951%" y="373" width="0.0796%" height="15" fill="rgb(247,207,20)" fg:x="460" fg:w="1"/><text x="36.8451%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.8337%" y="357" width="0.0796%" height="15" fill="rgb(224,73,48)" fg:x="463" fg:w="1"/><text x="37.0837%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9928%" y="309" width="0.0796%" height="15" fill="rgb(215,136,47)" fg:x="465" fg:w="1"/><text x="37.2428%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9928%" y="293" width="0.0796%" height="15" fill="rgb(232,222,16)" fg:x="465" fg:w="1"/><text x="37.2428%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.9928%" y="277" width="0.0796%" height="15" fill="rgb(249,202,47)" fg:x="465" fg:w="1"/><text x="37.2428%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="36.7542%" y="389" width="0.5569%" height="15" fill="rgb(236,56,8)" fg:x="462" fg:w="7"/><text x="37.0042%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="36.7542%" y="373" width="0.5569%" height="15" fill="rgb(222,6,3)" fg:x="462" fg:w="7"/><text x="37.0042%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="36.9133%" y="357" width="0.3978%" height="15" fill="rgb(254,222,28)" fg:x="464" fg:w="5"/><text x="37.1633%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="36.9928%" y="341" width="0.3182%" height="15" fill="rgb(219,57,23)" fg:x="465" fg:w="4"/><text x="37.2428%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="36.9928%" y="325" width="0.3182%" height="15" fill="rgb(251,106,48)" fg:x="465" fg:w="4"/><text x="37.2428%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="37.0724%" y="309" width="0.2387%" height="15" fill="rgb(242,2,23)" fg:x="466" fg:w="3"/><text x="37.3224%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="37.2315%" y="293" width="0.0796%" height="15" fill="rgb(212,109,31)" fg:x="468" fg:w="1"/><text x="37.4815%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 1.99%)</title><rect x="35.4018%" y="453" width="1.9889%" height="15" fill="rgb(241,9,22)" fg:x="445" fg:w="25"/><text x="35.6518%" y="463.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.19%)</title><rect x="36.1973%" y="437" width="1.1933%" height="15" fill="rgb(209,64,27)" fg:x="455" fg:w="15"/><text x="36.4473%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.95%)</title><rect x="36.4360%" y="421" width="0.9547%" height="15" fill="rgb(248,13,44)" fg:x="458" fg:w="12"/><text x="36.6860%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="36.6746%" y="405" width="0.7160%" height="15" fill="rgb(213,86,6)" fg:x="461" fg:w="9"/><text x="36.9246%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3111%" y="389" width="0.0796%" height="15" fill="rgb(247,11,18)" fg:x="469" fg:w="1"/><text x="37.5611%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="37.3906%" y="453" width="0.0796%" height="15" fill="rgb(252,31,11)" fg:x="470" fg:w="1"/><text x="37.6406%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (31 samples, 2.47%)</title><rect x="35.4018%" y="469" width="2.4662%" height="15" fill="rgb(215,63,51)" fg:x="445" fg:w="31"/><text x="35.6518%" y="479.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="37.4702%" y="453" width="0.3978%" height="15" fill="rgb(222,180,4)" fg:x="471" fg:w="5"/><text x="37.7202%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.7088%" y="437" width="0.1591%" height="15" fill="rgb(233,4,23)" fg:x="474" fg:w="2"/><text x="37.9588%" y="447.50"></text></g><g><title>engine::session::Session::flush (139 samples, 11.06%)</title><rect x="26.8894%" y="629" width="11.0581%" height="15" fill="rgb(230,116,22)" fg:x="338" fg:w="139"/><text x="27.1394%" y="639.50">engine::session:..</text></g><g><title>engine::session::Session::save_changes (138 samples, 10.98%)</title><rect x="26.9690%" y="613" width="10.9785%" height="15" fill="rgb(222,20,14)" fg:x="339" fg:w="138"/><text x="27.2190%" y="623.50">engine::session:..</text></g><g><title>engine::session::state::State::close (136 samples, 10.82%)</title><rect x="27.1281%" y="597" width="10.8194%" height="15" fill="rgb(210,176,43)" fg:x="341" fg:w="136"/><text x="27.3781%" y="607.50">engine::session:..</text></g><g><title>engine::session::state::State::flush_entities (136 samples, 10.82%)</title><rect x="27.1281%" y="581" width="10.8194%" height="15" fill="rgb(219,67,32)" fg:x="341" fg:w="136"/><text x="27.3781%" y="591.50">engine::session:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (130 samples, 10.34%)</title><rect x="27.6054%" y="565" width="10.3421%" height="15" fill="rgb(228,91,39)" fg:x="347" fg:w="130"/><text x="27.8554%" y="575.50">engine::session..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (128 samples, 10.18%)</title><rect x="27.7645%" y="549" width="10.1830%" height="15" fill="rgb(254,63,14)" fg:x="349" fg:w="128"/><text x="28.0145%" y="559.50">engine::session..</text></g><g><title>kernel::model::any_entity_changes (55 samples, 4.38%)</title><rect x="33.5720%" y="533" width="4.3755%" height="15" fill="rgb(216,171,39)" fg:x="422" fg:w="55"/><text x="33.8220%" y="543.50">kerne..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (51 samples, 4.06%)</title><rect x="33.8902%" y="517" width="4.0573%" height="15" fill="rgb(248,68,25)" fg:x="426" fg:w="51"/><text x="34.1402%" y="527.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (51 samples, 4.06%)</title><rect x="33.8902%" y="501" width="4.0573%" height="15" fill="rgb(239,63,16)" fg:x="426" fg:w="51"/><text x="34.1402%" y="511.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 2.86%)</title><rect x="35.0835%" y="485" width="2.8640%" height="15" fill="rgb(225,111,43)" fg:x="441" fg:w="36"/><text x="35.3335%" y="495.50">se..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8679%" y="469" width="0.0796%" height="15" fill="rgb(246,165,17)" fg:x="476" fg:w="1"/><text x="38.1179%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1862%" y="485" width="0.0796%" height="15" fill="rgb(208,124,1)" fg:x="480" fg:w="1"/><text x="38.4362%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="38.0270%" y="597" width="0.3182%" height="15" fill="rgb(234,147,33)" fg:x="478" fg:w="4"/><text x="38.2770%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="38.0270%" y="581" width="0.3182%" height="15" fill="rgb(240,86,30)" fg:x="478" fg:w="4"/><text x="38.2770%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="38.0270%" y="565" width="0.3182%" height="15" fill="rgb(237,34,51)" fg:x="478" fg:w="4"/><text x="38.2770%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="38.1066%" y="549" width="0.2387%" height="15" fill="rgb(232,131,41)" fg:x="479" fg:w="3"/><text x="38.3566%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.1066%" y="533" width="0.2387%" height="15" fill="rgb(227,129,53)" fg:x="479" fg:w="3"/><text x="38.3566%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.1862%" y="517" width="0.1591%" height="15" fill="rgb(230,90,35)" fg:x="480" fg:w="2"/><text x="38.4362%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.1862%" y="501" width="0.1591%" height="15" fill="rgb(248,88,27)" fg:x="480" fg:w="2"/><text x="38.4362%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.2657%" y="485" width="0.0796%" height="15" fill="rgb(223,18,17)" fg:x="481" fg:w="1"/><text x="38.5157%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4248%" y="549" width="0.0796%" height="15" fill="rgb(241,11,10)" fg:x="483" fg:w="1"/><text x="38.6748%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4248%" y="533" width="0.0796%" height="15" fill="rgb(232,111,52)" fg:x="483" fg:w="1"/><text x="38.6748%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.4248%" y="517" width="0.0796%" height="15" fill="rgb(228,67,8)" fg:x="483" fg:w="1"/><text x="38.6748%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (9 samples, 0.72%)</title><rect x="37.9475%" y="629" width="0.7160%" height="15" fill="rgb(251,168,31)" fg:x="477" fg:w="9"/><text x="38.1975%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="38.0270%" y="613" width="0.6364%" height="15" fill="rgb(249,164,11)" fg:x="478" fg:w="8"/><text x="38.2770%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="38.3453%" y="597" width="0.3182%" height="15" fill="rgb(239,81,9)" fg:x="482" fg:w="4"/><text x="38.5953%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="38.3453%" y="581" width="0.3182%" height="15" fill="rgb(222,145,38)" fg:x="482" fg:w="4"/><text x="38.5953%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="38.3453%" y="565" width="0.3182%" height="15" fill="rgb(238,80,54)" fg:x="482" fg:w="4"/><text x="38.5953%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.5044%" y="549" width="0.1591%" height="15" fill="rgb(237,116,16)" fg:x="484" fg:w="2"/><text x="38.7544%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.5044%" y="533" width="0.1591%" height="15" fill="rgb(218,135,19)" fg:x="484" fg:w="2"/><text x="38.7544%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.5044%" y="517" width="0.1591%" height="15" fill="rgb(216,207,44)" fg:x="484" fg:w="2"/><text x="38.7544%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.5044%" y="501" width="0.1591%" height="15" fill="rgb(226,152,40)" fg:x="484" fg:w="2"/><text x="38.7544%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="38.6635%" y="597" width="0.1591%" height="15" fill="rgb(219,98,35)" fg:x="486" fg:w="2"/><text x="38.9135%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="38.7430%" y="581" width="0.0796%" height="15" fill="rgb(222,136,46)" fg:x="487" fg:w="1"/><text x="38.9930%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.7430%" y="565" width="0.0796%" height="15" fill="rgb(222,71,8)" fg:x="487" fg:w="1"/><text x="38.9930%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.7430%" y="549" width="0.0796%" height="15" fill="rgb(209,89,53)" fg:x="487" fg:w="1"/><text x="38.9930%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.7430%" y="533" width="0.0796%" height="15" fill="rgb(210,97,51)" fg:x="487" fg:w="1"/><text x="38.9930%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.7430%" y="517" width="0.0796%" height="15" fill="rgb(248,65,21)" fg:x="487" fg:w="1"/><text x="38.9930%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.7430%" y="501" width="0.0796%" height="15" fill="rgb(222,5,31)" fg:x="487" fg:w="1"/><text x="38.9930%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.7430%" y="485" width="0.0796%" height="15" fill="rgb(241,16,30)" fg:x="487" fg:w="1"/><text x="38.9930%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.7430%" y="469" width="0.0796%" height="15" fill="rgb(215,86,30)" fg:x="487" fg:w="1"/><text x="38.9930%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.7430%" y="453" width="0.0796%" height="15" fill="rgb(235,26,44)" fg:x="487" fg:w="1"/><text x="38.9930%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.7430%" y="437" width="0.0796%" height="15" fill="rgb(228,147,14)" fg:x="487" fg:w="1"/><text x="38.9930%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.7430%" y="421" width="0.0796%" height="15" fill="rgb(253,38,50)" fg:x="487" fg:w="1"/><text x="38.9930%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.7430%" y="405" width="0.0796%" height="15" fill="rgb(251,151,16)" fg:x="487" fg:w="1"/><text x="38.9930%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.7430%" y="389" width="0.0796%" height="15" fill="rgb(224,64,19)" fg:x="487" fg:w="1"/><text x="38.9930%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="38.7430%" y="373" width="0.0796%" height="15" fill="rgb(235,214,47)" fg:x="487" fg:w="1"/><text x="38.9930%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.7430%" y="357" width="0.0796%" height="15" fill="rgb(218,15,19)" fg:x="487" fg:w="1"/><text x="38.9930%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.8226%" y="581" width="0.0796%" height="15" fill="rgb(247,209,3)" fg:x="488" fg:w="1"/><text x="39.0726%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.9021%" y="581" width="0.0796%" height="15" fill="rgb(217,29,2)" fg:x="489" fg:w="1"/><text x="39.1521%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.0613%" y="549" width="0.1591%" height="15" fill="rgb(234,9,9)" fg:x="491" fg:w="2"/><text x="39.3113%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.0613%" y="533" width="0.1591%" height="15" fill="rgb(207,43,14)" fg:x="491" fg:w="2"/><text x="39.3113%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.0613%" y="517" width="0.1591%" height="15" fill="rgb(216,219,36)" fg:x="491" fg:w="2"/><text x="39.3113%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.0613%" y="501" width="0.1591%" height="15" fill="rgb(238,12,26)" fg:x="491" fg:w="2"/><text x="39.3113%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.0613%" y="485" width="0.1591%" height="15" fill="rgb(226,67,30)" fg:x="491" fg:w="2"/><text x="39.3113%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.0613%" y="469" width="0.1591%" height="15" fill="rgb(229,154,7)" fg:x="491" fg:w="2"/><text x="39.3113%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.2204%" y="549" width="0.0796%" height="15" fill="rgb(249,90,18)" fg:x="493" fg:w="1"/><text x="39.4704%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.2204%" y="533" width="0.0796%" height="15" fill="rgb(223,53,15)" fg:x="493" fg:w="1"/><text x="39.4704%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.2204%" y="517" width="0.0796%" height="15" fill="rgb(253,86,38)" fg:x="493" fg:w="1"/><text x="39.4704%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.2999%" y="453" width="0.0796%" height="15" fill="rgb(222,198,9)" fg:x="494" fg:w="1"/><text x="39.5499%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="38.8226%" y="597" width="0.6364%" height="15" fill="rgb(240,146,25)" fg:x="488" fg:w="8"/><text x="39.0726%" y="607.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="38.9817%" y="581" width="0.4773%" height="15" fill="rgb(225,38,10)" fg:x="490" fg:w="6"/><text x="39.2317%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="38.9817%" y="565" width="0.4773%" height="15" fill="rgb(246,93,4)" fg:x="490" fg:w="6"/><text x="39.2317%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.2999%" y="549" width="0.1591%" height="15" fill="rgb(222,55,18)" fg:x="494" fg:w="2"/><text x="39.5499%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.2999%" y="533" width="0.1591%" height="15" fill="rgb(233,137,48)" fg:x="494" fg:w="2"/><text x="39.5499%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.2999%" y="517" width="0.1591%" height="15" fill="rgb(214,8,54)" fg:x="494" fg:w="2"/><text x="39.5499%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.2999%" y="501" width="0.1591%" height="15" fill="rgb(206,75,4)" fg:x="494" fg:w="2"/><text x="39.5499%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.2999%" y="485" width="0.1591%" height="15" fill="rgb(238,171,14)" fg:x="494" fg:w="2"/><text x="39.5499%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.2999%" y="469" width="0.1591%" height="15" fill="rgb(233,70,41)" fg:x="494" fg:w="2"/><text x="39.5499%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.3795%" y="453" width="0.0796%" height="15" fill="rgb(214,68,36)" fg:x="495" fg:w="1"/><text x="39.6295%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.3795%" y="437" width="0.0796%" height="15" fill="rgb(223,29,5)" fg:x="495" fg:w="1"/><text x="39.6295%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.4590%" y="549" width="0.0796%" height="15" fill="rgb(251,22,40)" fg:x="496" fg:w="1"/><text x="39.7090%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.4590%" y="533" width="0.0796%" height="15" fill="rgb(210,67,41)" fg:x="496" fg:w="1"/><text x="39.7090%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.4590%" y="517" width="0.0796%" height="15" fill="rgb(225,177,31)" fg:x="496" fg:w="1"/><text x="39.7090%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.5386%" y="549" width="0.0796%" height="15" fill="rgb(221,229,11)" fg:x="497" fg:w="1"/><text x="39.7886%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="39.4590%" y="581" width="0.2387%" height="15" fill="rgb(247,172,52)" fg:x="496" fg:w="3"/><text x="39.7090%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="39.4590%" y="565" width="0.2387%" height="15" fill="rgb(212,73,19)" fg:x="496" fg:w="3"/><text x="39.7090%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.6181%" y="549" width="0.0796%" height="15" fill="rgb(244,7,46)" fg:x="498" fg:w="1"/><text x="39.8681%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.6181%" y="533" width="0.0796%" height="15" fill="rgb(230,113,20)" fg:x="498" fg:w="1"/><text x="39.8681%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.6181%" y="517" width="0.0796%" height="15" fill="rgb(209,97,30)" fg:x="498" fg:w="1"/><text x="39.8681%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.6181%" y="501" width="0.0796%" height="15" fill="rgb(243,89,12)" fg:x="498" fg:w="1"/><text x="39.8681%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7772%" y="565" width="0.0796%" height="15" fill="rgb(228,32,19)" fg:x="500" fg:w="1"/><text x="40.0272%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7772%" y="549" width="0.0796%" height="15" fill="rgb(248,25,17)" fg:x="500" fg:w="1"/><text x="40.0272%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7772%" y="533" width="0.0796%" height="15" fill="rgb(232,161,29)" fg:x="500" fg:w="1"/><text x="40.0272%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.7772%" y="517" width="0.0796%" height="15" fill="rgb(251,192,11)" fg:x="500" fg:w="1"/><text x="40.0272%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.7772%" y="501" width="0.0796%" height="15" fill="rgb(240,47,32)" fg:x="500" fg:w="1"/><text x="40.0272%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.7772%" y="485" width="0.0796%" height="15" fill="rgb(250,16,45)" fg:x="500" fg:w="1"/><text x="40.0272%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7772%" y="469" width="0.0796%" height="15" fill="rgb(227,217,42)" fg:x="500" fg:w="1"/><text x="40.0272%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7772%" y="453" width="0.0796%" height="15" fill="rgb(206,82,54)" fg:x="500" fg:w="1"/><text x="40.0272%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.7772%" y="437" width="0.0796%" height="15" fill="rgb(243,145,25)" fg:x="500" fg:w="1"/><text x="40.0272%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.7772%" y="421" width="0.0796%" height="15" fill="rgb(207,166,24)" fg:x="500" fg:w="1"/><text x="40.0272%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.7772%" y="405" width="0.0796%" height="15" fill="rgb(215,191,44)" fg:x="500" fg:w="1"/><text x="40.0272%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.7772%" y="389" width="0.0796%" height="15" fill="rgb(234,218,51)" fg:x="500" fg:w="1"/><text x="40.0272%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7772%" y="373" width="0.0796%" height="15" fill="rgb(245,133,21)" fg:x="500" fg:w="1"/><text x="40.0272%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (7 samples, 0.56%)</title><rect x="39.4590%" y="597" width="0.5569%" height="15" fill="rgb(230,136,45)" fg:x="496" fg:w="7"/><text x="39.7090%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="39.6977%" y="581" width="0.3182%" height="15" fill="rgb(247,63,43)" fg:x="499" fg:w="4"/><text x="39.9477%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="39.8568%" y="565" width="0.1591%" height="15" fill="rgb(254,223,31)" fg:x="501" fg:w="2"/><text x="40.1068%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="39.8568%" y="549" width="0.1591%" height="15" fill="rgb(236,185,0)" fg:x="501" fg:w="2"/><text x="40.1068%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.8568%" y="533" width="0.1591%" height="15" fill="rgb(231,139,46)" fg:x="501" fg:w="2"/><text x="40.1068%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.8568%" y="517" width="0.1591%" height="15" fill="rgb(236,147,31)" fg:x="501" fg:w="2"/><text x="40.1068%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0159%" y="517" width="0.0796%" height="15" fill="rgb(225,222,22)" fg:x="503" fg:w="1"/><text x="40.2659%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0159%" y="501" width="0.0796%" height="15" fill="rgb(225,193,14)" fg:x="503" fg:w="1"/><text x="40.2659%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="40.0159%" y="549" width="0.1591%" height="15" fill="rgb(253,193,46)" fg:x="503" fg:w="2"/><text x="40.2659%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.0159%" y="533" width="0.1591%" height="15" fill="rgb(218,187,39)" fg:x="503" fg:w="2"/><text x="40.2659%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.0955%" y="517" width="0.0796%" height="15" fill="rgb(227,162,48)" fg:x="504" fg:w="1"/><text x="40.3455%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0955%" y="501" width="0.0796%" height="15" fill="rgb(222,25,5)" fg:x="504" fg:w="1"/><text x="40.3455%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.0955%" y="485" width="0.0796%" height="15" fill="rgb(211,205,16)" fg:x="504" fg:w="1"/><text x="40.3455%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1750%" y="517" width="0.0796%" height="15" fill="rgb(244,191,2)" fg:x="505" fg:w="1"/><text x="40.4250%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1750%" y="501" width="0.0796%" height="15" fill="rgb(248,159,12)" fg:x="505" fg:w="1"/><text x="40.4250%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1750%" y="485" width="0.0796%" height="15" fill="rgb(235,204,17)" fg:x="505" fg:w="1"/><text x="40.4250%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1750%" y="469" width="0.0796%" height="15" fill="rgb(240,21,27)" fg:x="505" fg:w="1"/><text x="40.4250%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.1750%" y="453" width="0.0796%" height="15" fill="rgb(224,170,31)" fg:x="505" fg:w="1"/><text x="40.4250%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.2546%" y="485" width="0.0796%" height="15" fill="rgb(223,145,32)" fg:x="506" fg:w="1"/><text x="40.5046%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2546%" y="469" width="0.0796%" height="15" fill="rgb(243,100,5)" fg:x="506" fg:w="1"/><text x="40.5046%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.2546%" y="517" width="0.1591%" height="15" fill="rgb(242,131,51)" fg:x="506" fg:w="2"/><text x="40.5046%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="40.2546%" y="501" width="0.1591%" height="15" fill="rgb(223,156,46)" fg:x="506" fg:w="2"/><text x="40.5046%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.3341%" y="485" width="0.0796%" height="15" fill="rgb(215,10,40)" fg:x="507" fg:w="1"/><text x="40.5841%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3341%" y="469" width="0.0796%" height="15" fill="rgb(233,155,0)" fg:x="507" fg:w="1"/><text x="40.5841%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.83%)</title><rect x="38.6635%" y="613" width="1.8298%" height="15" fill="rgb(247,78,6)" fg:x="486" fg:w="23"/><text x="38.9135%" y="623.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="40.0159%" y="597" width="0.4773%" height="15" fill="rgb(237,217,21)" fg:x="503" fg:w="6"/><text x="40.2659%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="40.0159%" y="581" width="0.4773%" height="15" fill="rgb(212,1,21)" fg:x="503" fg:w="6"/><text x="40.2659%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="40.0159%" y="565" width="0.4773%" height="15" fill="rgb(213,7,14)" fg:x="503" fg:w="6"/><text x="40.2659%" y="575.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="40.1750%" y="549" width="0.3182%" height="15" fill="rgb(225,84,14)" fg:x="505" fg:w="4"/><text x="40.4250%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="40.1750%" y="533" width="0.3182%" height="15" fill="rgb(239,216,39)" fg:x="505" fg:w="4"/><text x="40.4250%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="40.4137%" y="517" width="0.0796%" height="15" fill="rgb(253,29,23)" fg:x="508" fg:w="1"/><text x="40.6637%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.4137%" y="501" width="0.0796%" height="15" fill="rgb(220,167,50)" fg:x="508" fg:w="1"/><text x="40.6637%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="40.4137%" y="485" width="0.0796%" height="15" fill="rgb(232,141,1)" fg:x="508" fg:w="1"/><text x="40.6637%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.4137%" y="469" width="0.0796%" height="15" fill="rgb(222,210,1)" fg:x="508" fg:w="1"/><text x="40.6637%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="40.4137%" y="453" width="0.0796%" height="15" fill="rgb(219,84,10)" fg:x="508" fg:w="1"/><text x="40.6637%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="40.4137%" y="437" width="0.0796%" height="15" fill="rgb(245,188,6)" fg:x="508" fg:w="1"/><text x="40.6637%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.4137%" y="421" width="0.0796%" height="15" fill="rgb(252,139,39)" fg:x="508" fg:w="1"/><text x="40.6637%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="40.4137%" y="405" width="0.0796%" height="15" fill="rgb(218,42,26)" fg:x="508" fg:w="1"/><text x="40.6637%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.4137%" y="389" width="0.0796%" height="15" fill="rgb(237,226,51)" fg:x="508" fg:w="1"/><text x="40.6637%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="40.4932%" y="597" width="0.0796%" height="15" fill="rgb(246,15,17)" fg:x="509" fg:w="1"/><text x="40.7432%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="40.4932%" y="581" width="0.0796%" height="15" fill="rgb(228,170,42)" fg:x="509" fg:w="1"/><text x="40.7432%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8115%" y="437" width="0.0796%" height="15" fill="rgb(248,118,53)" fg:x="513" fg:w="1"/><text x="41.0615%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8115%" y="421" width="0.0796%" height="15" fill="rgb(207,30,10)" fg:x="513" fg:w="1"/><text x="41.0615%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.8115%" y="405" width="0.0796%" height="15" fill="rgb(217,104,38)" fg:x="513" fg:w="1"/><text x="41.0615%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.8115%" y="389" width="0.0796%" height="15" fill="rgb(211,165,26)" fg:x="513" fg:w="1"/><text x="41.0615%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.8115%" y="373" width="0.0796%" height="15" fill="rgb(247,38,9)" fg:x="513" fg:w="1"/><text x="41.0615%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.8115%" y="357" width="0.0796%" height="15" fill="rgb(218,187,8)" fg:x="513" fg:w="1"/><text x="41.0615%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.8115%" y="341" width="0.0796%" height="15" fill="rgb(247,94,28)" fg:x="513" fg:w="1"/><text x="41.0615%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.8115%" y="325" width="0.0796%" height="15" fill="rgb(218,173,30)" fg:x="513" fg:w="1"/><text x="41.0615%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="40.6523%" y="517" width="0.3182%" height="15" fill="rgb(245,45,36)" fg:x="511" fg:w="4"/><text x="40.9023%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.7319%" y="501" width="0.2387%" height="15" fill="rgb(221,172,44)" fg:x="512" fg:w="3"/><text x="40.9819%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.7319%" y="485" width="0.2387%" height="15" fill="rgb(222,45,12)" fg:x="512" fg:w="3"/><text x="40.9819%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.7319%" y="469" width="0.2387%" height="15" fill="rgb(250,10,22)" fg:x="512" fg:w="3"/><text x="40.9819%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.7319%" y="453" width="0.2387%" height="15" fill="rgb(239,27,0)" fg:x="512" fg:w="3"/><text x="40.9819%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8910%" y="437" width="0.0796%" height="15" fill="rgb(223,118,22)" fg:x="514" fg:w="1"/><text x="41.1410%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="40.6523%" y="565" width="0.3978%" height="15" fill="rgb(251,81,25)" fg:x="511" fg:w="5"/><text x="40.9023%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="40.6523%" y="549" width="0.3978%" height="15" fill="rgb(237,225,53)" fg:x="511" fg:w="5"/><text x="40.9023%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="40.6523%" y="533" width="0.3978%" height="15" fill="rgb(237,186,51)" fg:x="511" fg:w="5"/><text x="40.9023%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.9706%" y="517" width="0.0796%" height="15" fill="rgb(247,209,11)" fg:x="515" fg:w="1"/><text x="41.2206%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9706%" y="501" width="0.0796%" height="15" fill="rgb(223,109,27)" fg:x="515" fg:w="1"/><text x="41.2206%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.9706%" y="485" width="0.0796%" height="15" fill="rgb(246,181,13)" fg:x="515" fg:w="1"/><text x="41.2206%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9706%" y="469" width="0.0796%" height="15" fill="rgb(234,57,44)" fg:x="515" fg:w="1"/><text x="41.2206%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.9706%" y="453" width="0.0796%" height="15" fill="rgb(211,227,50)" fg:x="515" fg:w="1"/><text x="41.2206%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9706%" y="437" width="0.0796%" height="15" fill="rgb(254,57,34)" fg:x="515" fg:w="1"/><text x="41.2206%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.9706%" y="421" width="0.0796%" height="15" fill="rgb(227,212,26)" fg:x="515" fg:w="1"/><text x="41.2206%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2092%" y="453" width="0.0796%" height="15" fill="rgb(244,169,44)" fg:x="518" fg:w="1"/><text x="41.4592%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="41.2092%" y="437" width="0.0796%" height="15" fill="rgb(236,135,50)" fg:x="518" fg:w="1"/><text x="41.4592%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="41.2092%" y="421" width="0.0796%" height="15" fill="rgb(241,89,30)" fg:x="518" fg:w="1"/><text x="41.4592%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.2888%" y="373" width="0.0796%" height="15" fill="rgb(206,113,34)" fg:x="519" fg:w="1"/><text x="41.5388%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.2888%" y="357" width="0.0796%" height="15" fill="rgb(218,104,52)" fg:x="519" fg:w="1"/><text x="41.5388%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.2888%" y="341" width="0.0796%" height="15" fill="rgb(223,82,32)" fg:x="519" fg:w="1"/><text x="41.5388%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.2888%" y="325" width="0.0796%" height="15" fill="rgb(249,219,30)" fg:x="519" fg:w="1"/><text x="41.5388%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.2888%" y="309" width="0.0796%" height="15" fill="rgb(233,141,21)" fg:x="519" fg:w="1"/><text x="41.5388%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.2888%" y="293" width="0.0796%" height="15" fill="rgb(252,87,44)" fg:x="519" fg:w="1"/><text x="41.5388%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.2888%" y="277" width="0.0796%" height="15" fill="rgb(229,48,33)" fg:x="519" fg:w="1"/><text x="41.5388%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.1297%" y="517" width="0.3182%" height="15" fill="rgb(229,23,22)" fg:x="517" fg:w="4"/><text x="41.3797%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.1297%" y="501" width="0.3182%" height="15" fill="rgb(244,116,16)" fg:x="517" fg:w="4"/><text x="41.3797%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.1297%" y="485" width="0.3182%" height="15" fill="rgb(247,45,10)" fg:x="517" fg:w="4"/><text x="41.3797%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.1297%" y="469" width="0.3182%" height="15" fill="rgb(228,60,29)" fg:x="517" fg:w="4"/><text x="41.3797%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.2888%" y="453" width="0.1591%" height="15" fill="rgb(205,129,15)" fg:x="519" fg:w="2"/><text x="41.5388%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.2888%" y="437" width="0.1591%" height="15" fill="rgb(206,229,4)" fg:x="519" fg:w="2"/><text x="41.5388%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="41.2888%" y="421" width="0.1591%" height="15" fill="rgb(249,191,30)" fg:x="519" fg:w="2"/><text x="41.5388%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="41.2888%" y="405" width="0.1591%" height="15" fill="rgb(250,84,54)" fg:x="519" fg:w="2"/><text x="41.5388%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="41.2888%" y="389" width="0.1591%" height="15" fill="rgb(207,25,53)" fg:x="519" fg:w="2"/><text x="41.5388%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="41.3683%" y="373" width="0.0796%" height="15" fill="rgb(235,40,8)" fg:x="520" fg:w="1"/><text x="41.6183%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.3683%" y="357" width="0.0796%" height="15" fill="rgb(226,169,33)" fg:x="520" fg:w="1"/><text x="41.6183%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4479%" y="469" width="0.0796%" height="15" fill="rgb(238,110,8)" fg:x="521" fg:w="1"/><text x="41.6979%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.4479%" y="517" width="0.1591%" height="15" fill="rgb(251,206,12)" fg:x="521" fg:w="2"/><text x="41.6979%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="41.4479%" y="501" width="0.1591%" height="15" fill="rgb(248,171,18)" fg:x="521" fg:w="2"/><text x="41.6979%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.4479%" y="485" width="0.1591%" height="15" fill="rgb(213,65,46)" fg:x="521" fg:w="2"/><text x="41.6979%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.5274%" y="469" width="0.0796%" height="15" fill="rgb(211,154,15)" fg:x="522" fg:w="1"/><text x="41.7774%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.5274%" y="453" width="0.0796%" height="15" fill="rgb(217,75,43)" fg:x="522" fg:w="1"/><text x="41.7774%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.5274%" y="437" width="0.0796%" height="15" fill="rgb(230,32,33)" fg:x="522" fg:w="1"/><text x="41.7774%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5274%" y="421" width="0.0796%" height="15" fill="rgb(221,100,16)" fg:x="522" fg:w="1"/><text x="41.7774%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.6866%" y="421" width="0.0796%" height="15" fill="rgb(212,129,47)" fg:x="524" fg:w="1"/><text x="41.9366%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.6866%" y="405" width="0.0796%" height="15" fill="rgb(239,217,47)" fg:x="524" fg:w="1"/><text x="41.9366%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (17 samples, 1.35%)</title><rect x="40.5728%" y="597" width="1.3524%" height="15" fill="rgb(230,84,24)" fg:x="510" fg:w="17"/><text x="40.8228%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (17 samples, 1.35%)</title><rect x="40.5728%" y="581" width="1.3524%" height="15" fill="rgb(214,153,51)" fg:x="510" fg:w="17"/><text x="40.8228%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="41.0501%" y="565" width="0.8751%" height="15" fill="rgb(231,6,35)" fg:x="516" fg:w="11"/><text x="41.3001%" y="575.50"></text></g><g><title>kernel::model::props::load_props (11 samples, 0.88%)</title><rect x="41.0501%" y="549" width="0.8751%" height="15" fill="rgb(229,122,30)" fg:x="516" fg:w="11"/><text x="41.3001%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="41.0501%" y="533" width="0.8751%" height="15" fill="rgb(234,71,10)" fg:x="516" fg:w="11"/><text x="41.3001%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="41.6070%" y="517" width="0.3182%" height="15" fill="rgb(215,173,26)" fg:x="523" fg:w="4"/><text x="41.8570%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="41.6070%" y="501" width="0.3182%" height="15" fill="rgb(248,118,52)" fg:x="523" fg:w="4"/><text x="41.8570%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.6866%" y="485" width="0.2387%" height="15" fill="rgb(237,55,46)" fg:x="524" fg:w="3"/><text x="41.9366%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.6866%" y="469" width="0.2387%" height="15" fill="rgb(243,214,43)" fg:x="524" fg:w="3"/><text x="41.9366%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="41.6866%" y="453" width="0.2387%" height="15" fill="rgb(252,123,30)" fg:x="524" fg:w="3"/><text x="41.9366%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.6866%" y="437" width="0.2387%" height="15" fill="rgb(215,73,39)" fg:x="524" fg:w="3"/><text x="41.9366%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.7661%" y="421" width="0.1591%" height="15" fill="rgb(251,194,29)" fg:x="525" fg:w="2"/><text x="42.0161%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.8457%" y="405" width="0.0796%" height="15" fill="rgb(224,58,52)" fg:x="526" fg:w="1"/><text x="42.0957%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="41.9252%" y="597" width="0.0796%" height="15" fill="rgb(248,106,46)" fg:x="527" fg:w="1"/><text x="42.1752%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9252%" y="581" width="0.0796%" height="15" fill="rgb(223,80,29)" fg:x="527" fg:w="1"/><text x="42.1752%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9252%" y="565" width="0.0796%" height="15" fill="rgb(243,137,9)" fg:x="527" fg:w="1"/><text x="42.1752%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9252%" y="549" width="0.0796%" height="15" fill="rgb(235,121,28)" fg:x="527" fg:w="1"/><text x="42.1752%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.9252%" y="533" width="0.0796%" height="15" fill="rgb(219,121,41)" fg:x="527" fg:w="1"/><text x="42.1752%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.9252%" y="517" width="0.0796%" height="15" fill="rgb(251,60,6)" fg:x="527" fg:w="1"/><text x="42.1752%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.9252%" y="501" width="0.0796%" height="15" fill="rgb(208,12,30)" fg:x="527" fg:w="1"/><text x="42.1752%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9252%" y="485" width="0.0796%" height="15" fill="rgb(207,176,36)" fg:x="527" fg:w="1"/><text x="42.1752%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9252%" y="469" width="0.0796%" height="15" fill="rgb(211,188,29)" fg:x="527" fg:w="1"/><text x="42.1752%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.9252%" y="453" width="0.0796%" height="15" fill="rgb(220,184,37)" fg:x="527" fg:w="1"/><text x="42.1752%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.9252%" y="437" width="0.0796%" height="15" fill="rgb(239,87,37)" fg:x="527" fg:w="1"/><text x="42.1752%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.9252%" y="421" width="0.0796%" height="15" fill="rgb(232,113,44)" fg:x="527" fg:w="1"/><text x="42.1752%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.9252%" y="405" width="0.0796%" height="15" fill="rgb(246,25,39)" fg:x="527" fg:w="1"/><text x="42.1752%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9252%" y="389" width="0.0796%" height="15" fill="rgb(247,30,13)" fg:x="527" fg:w="1"/><text x="42.1752%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.1639%" y="549" width="0.0796%" height="15" fill="rgb(230,176,35)" fg:x="530" fg:w="1"/><text x="42.4139%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.2434%" y="549" width="0.1591%" height="15" fill="rgb(222,23,18)" fg:x="531" fg:w="2"/><text x="42.4934%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3230%" y="533" width="0.0796%" height="15" fill="rgb(234,86,8)" fg:x="532" fg:w="1"/><text x="42.5730%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.3230%" y="517" width="0.0796%" height="15" fill="rgb(206,218,47)" fg:x="532" fg:w="1"/><text x="42.5730%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (6 samples, 0.48%)</title><rect x="42.0048%" y="581" width="0.4773%" height="15" fill="rgb(229,35,31)" fg:x="528" fg:w="6"/><text x="42.2548%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="42.0843%" y="565" width="0.3978%" height="15" fill="rgb(242,81,7)" fg:x="529" fg:w="5"/><text x="42.3343%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="42.4025%" y="549" width="0.0796%" height="15" fill="rgb(231,11,35)" fg:x="533" fg:w="1"/><text x="42.6525%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="42.0048%" y="597" width="0.5569%" height="15" fill="rgb(219,218,17)" fg:x="528" fg:w="7"/><text x="42.2548%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4821%" y="581" width="0.0796%" height="15" fill="rgb(221,83,32)" fg:x="534" fg:w="1"/><text x="42.7321%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.5617%" y="581" width="0.0796%" height="15" fill="rgb(233,49,54)" fg:x="535" fg:w="1"/><text x="42.8117%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.6412%" y="501" width="0.1591%" height="15" fill="rgb(206,18,51)" fg:x="536" fg:w="2"/><text x="42.8912%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.6412%" y="485" width="0.1591%" height="15" fill="rgb(249,193,15)" fg:x="536" fg:w="2"/><text x="42.8912%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7208%" y="469" width="0.0796%" height="15" fill="rgb(245,186,19)" fg:x="537" fg:w="1"/><text x="42.9708%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="42.6412%" y="549" width="0.2387%" height="15" fill="rgb(230,4,24)" fg:x="536" fg:w="3"/><text x="42.8912%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="42.6412%" y="533" width="0.2387%" height="15" fill="rgb(234,75,27)" fg:x="536" fg:w="3"/><text x="42.8912%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="42.6412%" y="517" width="0.2387%" height="15" fill="rgb(244,187,35)" fg:x="536" fg:w="3"/><text x="42.8912%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8003%" y="501" width="0.0796%" height="15" fill="rgb(241,97,43)" fg:x="538" fg:w="1"/><text x="43.0503%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8003%" y="485" width="0.0796%" height="15" fill="rgb(236,94,2)" fg:x="538" fg:w="1"/><text x="43.0503%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8003%" y="469" width="0.0796%" height="15" fill="rgb(231,175,7)" fg:x="538" fg:w="1"/><text x="43.0503%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.9594%" y="485" width="0.1591%" height="15" fill="rgb(236,89,47)" fg:x="540" fg:w="2"/><text x="43.2094%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.0390%" y="469" width="0.0796%" height="15" fill="rgb(213,191,37)" fg:x="541" fg:w="1"/><text x="43.2890%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.0390%" y="453" width="0.0796%" height="15" fill="rgb(252,0,34)" fg:x="541" fg:w="1"/><text x="43.2890%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.0390%" y="437" width="0.0796%" height="15" fill="rgb(208,145,44)" fg:x="541" fg:w="1"/><text x="43.2890%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.1185%" y="485" width="0.1591%" height="15" fill="rgb(227,95,50)" fg:x="542" fg:w="2"/><text x="43.3685%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.1185%" y="469" width="0.1591%" height="15" fill="rgb(222,136,24)" fg:x="542" fg:w="2"/><text x="43.3685%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="43.1185%" y="453" width="0.1591%" height="15" fill="rgb(218,105,10)" fg:x="542" fg:w="2"/><text x="43.3685%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="43.1185%" y="437" width="0.1591%" height="15" fill="rgb(216,65,28)" fg:x="542" fg:w="2"/><text x="43.3685%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="43.1185%" y="421" width="0.1591%" height="15" fill="rgb(229,6,28)" fg:x="542" fg:w="2"/><text x="43.3685%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="43.1185%" y="405" width="0.1591%" height="15" fill="rgb(222,160,42)" fg:x="542" fg:w="2"/><text x="43.3685%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="43.1185%" y="389" width="0.1591%" height="15" fill="rgb(235,83,49)" fg:x="542" fg:w="2"/><text x="43.3685%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="43.1185%" y="373" width="0.1591%" height="15" fill="rgb(236,86,36)" fg:x="542" fg:w="2"/><text x="43.3685%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="43.1185%" y="357" width="0.1591%" height="15" fill="rgb(236,19,41)" fg:x="542" fg:w="2"/><text x="43.3685%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="43.1185%" y="341" width="0.1591%" height="15" fill="rgb(217,71,31)" fg:x="542" fg:w="2"/><text x="43.3685%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="43.1185%" y="325" width="0.1591%" height="15" fill="rgb(236,209,25)" fg:x="542" fg:w="2"/><text x="43.3685%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.1185%" y="309" width="0.1591%" height="15" fill="rgb(247,104,21)" fg:x="542" fg:w="2"/><text x="43.3685%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="42.9594%" y="501" width="0.3978%" height="15" fill="rgb(243,80,38)" fg:x="540" fg:w="5"/><text x="43.2094%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2776%" y="485" width="0.0796%" height="15" fill="rgb(232,109,38)" fg:x="544" fg:w="1"/><text x="43.5276%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.3572%" y="437" width="0.0796%" height="15" fill="rgb(212,177,53)" fg:x="545" fg:w="1"/><text x="43.6072%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.3572%" y="421" width="0.0796%" height="15" fill="rgb(227,30,34)" fg:x="545" fg:w="1"/><text x="43.6072%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.4368%" y="421" width="0.0796%" height="15" fill="rgb(205,175,25)" fg:x="546" fg:w="1"/><text x="43.6868%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="43.3572%" y="501" width="0.2387%" height="15" fill="rgb(249,39,54)" fg:x="545" fg:w="3"/><text x="43.6072%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="43.3572%" y="485" width="0.2387%" height="15" fill="rgb(215,54,37)" fg:x="545" fg:w="3"/><text x="43.6072%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="43.3572%" y="469" width="0.2387%" height="15" fill="rgb(205,60,46)" fg:x="545" fg:w="3"/><text x="43.6072%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="43.3572%" y="453" width="0.2387%" height="15" fill="rgb(238,89,29)" fg:x="545" fg:w="3"/><text x="43.6072%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="43.4368%" y="437" width="0.1591%" height="15" fill="rgb(212,48,10)" fg:x="546" fg:w="2"/><text x="43.6868%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.5163%" y="421" width="0.0796%" height="15" fill="rgb(237,186,28)" fg:x="547" fg:w="1"/><text x="43.7663%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.5959%" y="405" width="0.0796%" height="15" fill="rgb(237,204,4)" fg:x="548" fg:w="1"/><text x="43.8459%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (15 samples, 1.19%)</title><rect x="42.5617%" y="597" width="1.1933%" height="15" fill="rgb(237,15,47)" fg:x="535" fg:w="15"/><text x="42.8117%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.11%)</title><rect x="42.6412%" y="581" width="1.1138%" height="15" fill="rgb(244,110,25)" fg:x="536" fg:w="14"/><text x="42.8912%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.11%)</title><rect x="42.6412%" y="565" width="1.1138%" height="15" fill="rgb(241,12,16)" fg:x="536" fg:w="14"/><text x="42.8912%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="42.8799%" y="549" width="0.8751%" height="15" fill="rgb(235,25,9)" fg:x="539" fg:w="11"/><text x="43.1299%" y="559.50"></text></g><g><title>kernel::model::props::load_props (11 samples, 0.88%)</title><rect x="42.8799%" y="533" width="0.8751%" height="15" fill="rgb(245,159,19)" fg:x="539" fg:w="11"/><text x="43.1299%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="42.8799%" y="517" width="0.8751%" height="15" fill="rgb(236,63,32)" fg:x="539" fg:w="11"/><text x="43.1299%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.5959%" y="501" width="0.1591%" height="15" fill="rgb(235,32,52)" fg:x="548" fg:w="2"/><text x="43.8459%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.5959%" y="485" width="0.1591%" height="15" fill="rgb(209,176,21)" fg:x="548" fg:w="2"/><text x="43.8459%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.5959%" y="469" width="0.1591%" height="15" fill="rgb(205,90,42)" fg:x="548" fg:w="2"/><text x="43.8459%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.5959%" y="453" width="0.1591%" height="15" fill="rgb(213,132,16)" fg:x="548" fg:w="2"/><text x="43.8459%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="43.5959%" y="437" width="0.1591%" height="15" fill="rgb(232,11,22)" fg:x="548" fg:w="2"/><text x="43.8459%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.5959%" y="421" width="0.1591%" height="15" fill="rgb(248,167,41)" fg:x="548" fg:w="2"/><text x="43.8459%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.6754%" y="405" width="0.0796%" height="15" fill="rgb(209,127,6)" fg:x="549" fg:w="1"/><text x="43.9254%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.6754%" y="389" width="0.0796%" height="15" fill="rgb(246,210,34)" fg:x="549" fg:w="1"/><text x="43.9254%" y="399.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="43.6754%" y="373" width="0.0796%" height="15" fill="rgb(238,165,13)" fg:x="549" fg:w="1"/><text x="43.9254%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (66 samples, 5.25%)</title><rect x="38.6635%" y="629" width="5.2506%" height="15" fill="rgb(233,98,15)" fg:x="486" fg:w="66"/><text x="38.9135%" y="639.50">plugin..</text></g><g><title>plugins_core::tools::set_container (43 samples, 3.42%)</title><rect x="40.4932%" y="613" width="3.4208%" height="15" fill="rgb(215,215,51)" fg:x="509" fg:w="43"/><text x="40.7432%" y="623.50">plu..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="43.7550%" y="597" width="0.1591%" height="15" fill="rgb(217,161,25)" fg:x="550" fg:w="2"/><text x="44.0050%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="43.8345%" y="581" width="0.0796%" height="15" fill="rgb(217,167,48)" fg:x="551" fg:w="1"/><text x="44.0845%" y="591.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="43.8345%" y="565" width="0.0796%" height="15" fill="rgb(205,163,34)" fg:x="551" fg:w="1"/><text x="44.0845%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.8345%" y="549" width="0.0796%" height="15" fill="rgb(241,197,31)" fg:x="551" fg:w="1"/><text x="44.0845%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="43.8345%" y="533" width="0.0796%" height="15" fill="rgb(225,123,11)" fg:x="551" fg:w="1"/><text x="44.0845%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.8345%" y="517" width="0.0796%" height="15" fill="rgb(217,4,20)" fg:x="551" fg:w="1"/><text x="44.0845%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.9141%" y="549" width="0.0796%" height="15" fill="rgb(215,55,9)" fg:x="552" fg:w="1"/><text x="44.1641%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.9141%" y="533" width="0.0796%" height="15" fill="rgb(218,165,5)" fg:x="552" fg:w="1"/><text x="44.1641%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.9141%" y="517" width="0.0796%" height="15" fill="rgb(222,175,15)" fg:x="552" fg:w="1"/><text x="44.1641%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.9141%" y="501" width="0.0796%" height="15" fill="rgb(223,85,34)" fg:x="552" fg:w="1"/><text x="44.1641%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.9141%" y="485" width="0.0796%" height="15" fill="rgb(234,228,29)" fg:x="552" fg:w="1"/><text x="44.1641%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.9141%" y="469" width="0.0796%" height="15" fill="rgb(239,7,28)" fg:x="552" fg:w="1"/><text x="44.1641%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.9141%" y="453" width="0.0796%" height="15" fill="rgb(252,222,53)" fg:x="552" fg:w="1"/><text x="44.1641%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.9141%" y="437" width="0.0796%" height="15" fill="rgb(232,146,44)" fg:x="552" fg:w="1"/><text x="44.1641%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.9141%" y="421" width="0.0796%" height="15" fill="rgb(243,223,53)" fg:x="552" fg:w="1"/><text x="44.1641%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.9141%" y="405" width="0.0796%" height="15" fill="rgb(219,128,25)" fg:x="552" fg:w="1"/><text x="44.1641%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.9141%" y="389" width="0.0796%" height="15" fill="rgb(223,56,32)" fg:x="552" fg:w="1"/><text x="44.1641%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.9141%" y="373" width="0.0796%" height="15" fill="rgb(237,41,3)" fg:x="552" fg:w="1"/><text x="44.1641%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.9141%" y="357" width="0.0796%" height="15" fill="rgb(235,138,9)" fg:x="552" fg:w="1"/><text x="44.1641%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.9141%" y="341" width="0.0796%" height="15" fill="rgb(214,131,10)" fg:x="552" fg:w="1"/><text x="44.1641%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.9141%" y="325" width="0.0796%" height="15" fill="rgb(229,89,7)" fg:x="552" fg:w="1"/><text x="44.1641%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.9936%" y="549" width="0.0796%" height="15" fill="rgb(240,24,42)" fg:x="553" fg:w="1"/><text x="44.2436%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.9936%" y="533" width="0.0796%" height="15" fill="rgb(243,188,54)" fg:x="553" fg:w="1"/><text x="44.2436%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.9936%" y="517" width="0.0796%" height="15" fill="rgb(246,92,22)" fg:x="553" fg:w="1"/><text x="44.2436%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.9936%" y="501" width="0.0796%" height="15" fill="rgb(211,176,51)" fg:x="553" fg:w="1"/><text x="44.2436%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.9936%" y="485" width="0.0796%" height="15" fill="rgb(246,207,34)" fg:x="553" fg:w="1"/><text x="44.2436%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.9936%" y="469" width="0.0796%" height="15" fill="rgb(239,95,2)" fg:x="553" fg:w="1"/><text x="44.2436%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="43.9141%" y="629" width="0.2387%" height="15" fill="rgb(211,124,25)" fg:x="552" fg:w="3"/><text x="44.1641%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="43.9141%" y="613" width="0.2387%" height="15" fill="rgb(231,221,19)" fg:x="552" fg:w="3"/><text x="44.1641%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="43.9141%" y="597" width="0.2387%" height="15" fill="rgb(239,183,19)" fg:x="552" fg:w="3"/><text x="44.1641%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="43.9141%" y="581" width="0.2387%" height="15" fill="rgb(221,130,29)" fg:x="552" fg:w="3"/><text x="44.1641%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="43.9141%" y="565" width="0.2387%" height="15" fill="rgb(206,130,36)" fg:x="552" fg:w="3"/><text x="44.1641%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.0732%" y="549" width="0.0796%" height="15" fill="rgb(215,70,19)" fg:x="554" fg:w="1"/><text x="44.3232%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.0732%" y="533" width="0.0796%" height="15" fill="rgb(244,16,43)" fg:x="554" fg:w="1"/><text x="44.3232%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.0732%" y="517" width="0.0796%" height="15" fill="rgb(222,115,32)" fg:x="554" fg:w="1"/><text x="44.3232%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.0732%" y="501" width="0.0796%" height="15" fill="rgb(247,48,25)" fg:x="554" fg:w="1"/><text x="44.3232%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.0732%" y="485" width="0.0796%" height="15" fill="rgb(226,180,51)" fg:x="554" fg:w="1"/><text x="44.3232%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.0732%" y="469" width="0.0796%" height="15" fill="rgb(217,142,42)" fg:x="554" fg:w="1"/><text x="44.3232%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.0732%" y="453" width="0.0796%" height="15" fill="rgb(220,178,3)" fg:x="554" fg:w="1"/><text x="44.3232%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.0732%" y="437" width="0.0796%" height="15" fill="rgb(217,221,4)" fg:x="554" fg:w="1"/><text x="44.3232%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.0732%" y="421" width="0.0796%" height="15" fill="rgb(237,63,43)" fg:x="554" fg:w="1"/><text x="44.3232%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.0732%" y="405" width="0.0796%" height="15" fill="rgb(220,57,8)" fg:x="554" fg:w="1"/><text x="44.3232%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0732%" y="389" width="0.0796%" height="15" fill="rgb(254,186,27)" fg:x="554" fg:w="1"/><text x="44.3232%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="44.1527%" y="597" width="0.0796%" height="15" fill="rgb(251,57,28)" fg:x="555" fg:w="1"/><text x="44.4027%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.1527%" y="581" width="0.0796%" height="15" fill="rgb(215,228,0)" fg:x="555" fg:w="1"/><text x="44.4027%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.1527%" y="565" width="0.0796%" height="15" fill="rgb(237,218,39)" fg:x="555" fg:w="1"/><text x="44.4027%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1527%" y="549" width="0.0796%" height="15" fill="rgb(207,2,54)" fg:x="555" fg:w="1"/><text x="44.4027%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.1527%" y="533" width="0.0796%" height="15" fill="rgb(232,76,50)" fg:x="555" fg:w="1"/><text x="44.4027%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1527%" y="517" width="0.0796%" height="15" fill="rgb(211,85,31)" fg:x="555" fg:w="1"/><text x="44.4027%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.1527%" y="501" width="0.0796%" height="15" fill="rgb(223,210,27)" fg:x="555" fg:w="1"/><text x="44.4027%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1527%" y="485" width="0.0796%" height="15" fill="rgb(254,36,8)" fg:x="555" fg:w="1"/><text x="44.4027%" y="495.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="44.1527%" y="469" width="0.0796%" height="15" fill="rgb(213,4,25)" fg:x="555" fg:w="1"/><text x="44.4027%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.3119%" y="565" width="0.0796%" height="15" fill="rgb(224,2,39)" fg:x="557" fg:w="1"/><text x="44.5619%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.3914%" y="565" width="0.0796%" height="15" fill="rgb(208,8,39)" fg:x="558" fg:w="1"/><text x="44.6414%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.3914%" y="549" width="0.0796%" height="15" fill="rgb(216,226,3)" fg:x="558" fg:w="1"/><text x="44.6414%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.3914%" y="533" width="0.0796%" height="15" fill="rgb(249,139,31)" fg:x="558" fg:w="1"/><text x="44.6414%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="44.1527%" y="629" width="0.3978%" height="15" fill="rgb(242,170,35)" fg:x="555" fg:w="5"/><text x="44.4027%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="44.1527%" y="613" width="0.3978%" height="15" fill="rgb(238,14,9)" fg:x="555" fg:w="5"/><text x="44.4027%" y="623.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="44.2323%" y="597" width="0.3182%" height="15" fill="rgb(251,81,46)" fg:x="556" fg:w="4"/><text x="44.4823%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="44.2323%" y="581" width="0.3182%" height="15" fill="rgb(230,23,4)" fg:x="556" fg:w="4"/><text x="44.4823%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="44.4710%" y="565" width="0.0796%" height="15" fill="rgb(211,85,25)" fg:x="559" fg:w="1"/><text x="44.7210%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.4710%" y="549" width="0.0796%" height="15" fill="rgb(252,23,31)" fg:x="559" fg:w="1"/><text x="44.7210%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="44.4710%" y="533" width="0.0796%" height="15" fill="rgb(234,163,38)" fg:x="559" fg:w="1"/><text x="44.7210%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.4710%" y="517" width="0.0796%" height="15" fill="rgb(210,190,50)" fg:x="559" fg:w="1"/><text x="44.7210%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="44.4710%" y="501" width="0.0796%" height="15" fill="rgb(228,158,3)" fg:x="559" fg:w="1"/><text x="44.7210%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="44.4710%" y="485" width="0.0796%" height="15" fill="rgb(216,130,0)" fg:x="559" fg:w="1"/><text x="44.7210%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.4710%" y="469" width="0.0796%" height="15" fill="rgb(224,184,10)" fg:x="559" fg:w="1"/><text x="44.7210%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.4710%" y="453" width="0.0796%" height="15" fill="rgb(214,202,18)" fg:x="559" fg:w="1"/><text x="44.7210%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.4710%" y="437" width="0.0796%" height="15" fill="rgb(213,229,54)" fg:x="559" fg:w="1"/><text x="44.7210%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.4710%" y="421" width="0.0796%" height="15" fill="rgb(246,120,0)" fg:x="559" fg:w="1"/><text x="44.7210%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6301%" y="533" width="0.0796%" height="15" fill="rgb(237,6,15)" fg:x="561" fg:w="1"/><text x="44.8801%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6301%" y="517" width="0.0796%" height="15" fill="rgb(252,156,15)" fg:x="561" fg:w="1"/><text x="44.8801%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6301%" y="501" width="0.0796%" height="15" fill="rgb(249,78,18)" fg:x="561" fg:w="1"/><text x="44.8801%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6301%" y="485" width="0.0796%" height="15" fill="rgb(230,223,44)" fg:x="561" fg:w="1"/><text x="44.8801%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6301%" y="469" width="0.0796%" height="15" fill="rgb(230,222,32)" fg:x="561" fg:w="1"/><text x="44.8801%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.6301%" y="453" width="0.0796%" height="15" fill="rgb(247,54,6)" fg:x="561" fg:w="1"/><text x="44.8801%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.6301%" y="437" width="0.0796%" height="15" fill="rgb(247,115,45)" fg:x="561" fg:w="1"/><text x="44.8801%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.6301%" y="421" width="0.0796%" height="15" fill="rgb(213,203,37)" fg:x="561" fg:w="1"/><text x="44.8801%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6301%" y="405" width="0.0796%" height="15" fill="rgb(248,188,18)" fg:x="561" fg:w="1"/><text x="44.8801%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6301%" y="389" width="0.0796%" height="15" fill="rgb(206,80,8)" fg:x="561" fg:w="1"/><text x="44.8801%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.6301%" y="373" width="0.0796%" height="15" fill="rgb(245,217,31)" fg:x="561" fg:w="1"/><text x="44.8801%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.6301%" y="357" width="0.0796%" height="15" fill="rgb(220,193,15)" fg:x="561" fg:w="1"/><text x="44.8801%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.6301%" y="341" width="0.0796%" height="15" fill="rgb(226,7,19)" fg:x="561" fg:w="1"/><text x="44.8801%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.6301%" y="325" width="0.0796%" height="15" fill="rgb(222,145,31)" fg:x="561" fg:w="1"/><text x="44.8801%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6301%" y="309" width="0.0796%" height="15" fill="rgb(241,193,36)" fg:x="561" fg:w="1"/><text x="44.8801%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="44.6301%" y="597" width="0.1591%" height="15" fill="rgb(225,123,33)" fg:x="561" fg:w="2"/><text x="44.8801%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="44.6301%" y="581" width="0.1591%" height="15" fill="rgb(246,136,38)" fg:x="561" fg:w="2"/><text x="44.8801%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="44.6301%" y="565" width="0.1591%" height="15" fill="rgb(243,56,24)" fg:x="561" fg:w="2"/><text x="44.8801%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.6301%" y="549" width="0.1591%" height="15" fill="rgb(215,147,2)" fg:x="561" fg:w="2"/><text x="44.8801%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7096%" y="533" width="0.0796%" height="15" fill="rgb(209,155,27)" fg:x="562" fg:w="1"/><text x="44.9596%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="44.7892%" y="581" width="0.3182%" height="15" fill="rgb(222,177,11)" fg:x="563" fg:w="4"/><text x="45.0392%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="44.7892%" y="565" width="0.3182%" height="15" fill="rgb(212,227,15)" fg:x="563" fg:w="4"/><text x="45.0392%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="44.7892%" y="549" width="0.3182%" height="15" fill="rgb(214,138,20)" fg:x="563" fg:w="4"/><text x="45.0392%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.8687%" y="533" width="0.2387%" height="15" fill="rgb(221,170,31)" fg:x="564" fg:w="3"/><text x="45.1187%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.8687%" y="517" width="0.2387%" height="15" fill="rgb(253,207,5)" fg:x="564" fg:w="3"/><text x="45.1187%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0278%" y="501" width="0.0796%" height="15" fill="rgb(212,64,37)" fg:x="566" fg:w="1"/><text x="45.2778%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0278%" y="485" width="0.0796%" height="15" fill="rgb(208,113,51)" fg:x="566" fg:w="1"/><text x="45.2778%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.0278%" y="469" width="0.0796%" height="15" fill="rgb(237,15,5)" fg:x="566" fg:w="1"/><text x="45.2778%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.0278%" y="453" width="0.0796%" height="15" fill="rgb(238,33,18)" fg:x="566" fg:w="1"/><text x="45.2778%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.0278%" y="437" width="0.0796%" height="15" fill="rgb(253,206,50)" fg:x="566" fg:w="1"/><text x="45.2778%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0278%" y="421" width="0.0796%" height="15" fill="rgb(242,158,43)" fg:x="566" fg:w="1"/><text x="45.2778%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0278%" y="405" width="0.0796%" height="15" fill="rgb(213,125,27)" fg:x="566" fg:w="1"/><text x="45.2778%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.0278%" y="389" width="0.0796%" height="15" fill="rgb(233,161,31)" fg:x="566" fg:w="1"/><text x="45.2778%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.0278%" y="373" width="0.0796%" height="15" fill="rgb(218,135,6)" fg:x="566" fg:w="1"/><text x="45.2778%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.0278%" y="357" width="0.0796%" height="15" fill="rgb(222,73,53)" fg:x="566" fg:w="1"/><text x="45.2778%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.0278%" y="341" width="0.0796%" height="15" fill="rgb(229,66,53)" fg:x="566" fg:w="1"/><text x="45.2778%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0278%" y="325" width="0.0796%" height="15" fill="rgb(208,128,19)" fg:x="566" fg:w="1"/><text x="45.2778%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.1074%" y="565" width="0.1591%" height="15" fill="rgb(235,70,27)" fg:x="567" fg:w="2"/><text x="45.3574%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.1074%" y="549" width="0.1591%" height="15" fill="rgb(241,130,30)" fg:x="567" fg:w="2"/><text x="45.3574%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.1870%" y="533" width="0.0796%" height="15" fill="rgb(222,57,48)" fg:x="568" fg:w="1"/><text x="45.4370%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.1870%" y="517" width="0.0796%" height="15" fill="rgb(225,204,29)" fg:x="568" fg:w="1"/><text x="45.4370%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.1870%" y="501" width="0.0796%" height="15" fill="rgb(240,196,35)" fg:x="568" fg:w="1"/><text x="45.4370%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.1870%" y="485" width="0.0796%" height="15" fill="rgb(215,150,16)" fg:x="568" fg:w="1"/><text x="45.4370%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.1870%" y="469" width="0.0796%" height="15" fill="rgb(209,170,13)" fg:x="568" fg:w="1"/><text x="45.4370%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.1870%" y="453" width="0.0796%" height="15" fill="rgb(235,75,31)" fg:x="568" fg:w="1"/><text x="45.4370%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.1870%" y="437" width="0.0796%" height="15" fill="rgb(252,1,47)" fg:x="568" fg:w="1"/><text x="45.4370%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.1870%" y="421" width="0.0796%" height="15" fill="rgb(241,2,36)" fg:x="568" fg:w="1"/><text x="45.4370%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.1870%" y="405" width="0.0796%" height="15" fill="rgb(236,191,4)" fg:x="568" fg:w="1"/><text x="45.4370%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.1870%" y="389" width="0.0796%" height="15" fill="rgb(212,65,35)" fg:x="568" fg:w="1"/><text x="45.4370%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.1870%" y="373" width="0.0796%" height="15" fill="rgb(209,49,33)" fg:x="568" fg:w="1"/><text x="45.4370%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (7 samples, 0.56%)</title><rect x="44.7892%" y="597" width="0.5569%" height="15" fill="rgb(208,36,46)" fg:x="563" fg:w="7"/><text x="45.0392%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="45.1074%" y="581" width="0.2387%" height="15" fill="rgb(210,125,2)" fg:x="567" fg:w="3"/><text x="45.3574%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="45.2665%" y="565" width="0.0796%" height="15" fill="rgb(225,62,6)" fg:x="569" fg:w="1"/><text x="45.5165%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.2665%" y="549" width="0.0796%" height="15" fill="rgb(210,54,27)" fg:x="569" fg:w="1"/><text x="45.5165%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.2665%" y="533" width="0.0796%" height="15" fill="rgb(249,189,52)" fg:x="569" fg:w="1"/><text x="45.5165%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.2665%" y="517" width="0.0796%" height="15" fill="rgb(225,134,40)" fg:x="569" fg:w="1"/><text x="45.5165%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3461%" y="517" width="0.0796%" height="15" fill="rgb(206,13,37)" fg:x="570" fg:w="1"/><text x="45.5961%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3461%" y="501" width="0.0796%" height="15" fill="rgb(232,114,28)" fg:x="570" fg:w="1"/><text x="45.5961%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3461%" y="485" width="0.0796%" height="15" fill="rgb(253,215,8)" fg:x="570" fg:w="1"/><text x="45.5961%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3461%" y="469" width="0.0796%" height="15" fill="rgb(254,64,19)" fg:x="570" fg:w="1"/><text x="45.5961%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3461%" y="453" width="0.0796%" height="15" fill="rgb(242,18,46)" fg:x="570" fg:w="1"/><text x="45.5961%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.3461%" y="437" width="0.0796%" height="15" fill="rgb(239,192,30)" fg:x="570" fg:w="1"/><text x="45.5961%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.3461%" y="421" width="0.0796%" height="15" fill="rgb(232,73,14)" fg:x="570" fg:w="1"/><text x="45.5961%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.3461%" y="405" width="0.0796%" height="15" fill="rgb(225,51,9)" fg:x="570" fg:w="1"/><text x="45.5961%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.3461%" y="389" width="0.0796%" height="15" fill="rgb(242,217,54)" fg:x="570" fg:w="1"/><text x="45.5961%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.3461%" y="373" width="0.0796%" height="15" fill="rgb(216,93,3)" fg:x="570" fg:w="1"/><text x="45.5961%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.3461%" y="357" width="0.0796%" height="15" fill="rgb(230,119,33)" fg:x="570" fg:w="1"/><text x="45.5961%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.3461%" y="341" width="0.0796%" height="15" fill="rgb(238,170,27)" fg:x="570" fg:w="1"/><text x="45.5961%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.3461%" y="325" width="0.0796%" height="15" fill="rgb(229,8,2)" fg:x="570" fg:w="1"/><text x="45.5961%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.3461%" y="309" width="0.0796%" height="15" fill="rgb(205,214,42)" fg:x="570" fg:w="1"/><text x="45.5961%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.3461%" y="293" width="0.0796%" height="15" fill="rgb(245,113,1)" fg:x="570" fg:w="1"/><text x="45.5961%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.3461%" y="277" width="0.0796%" height="15" fill="rgb(252,50,2)" fg:x="570" fg:w="1"/><text x="45.5961%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3461%" y="261" width="0.0796%" height="15" fill="rgb(225,122,24)" fg:x="570" fg:w="1"/><text x="45.5961%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="44.6301%" y="613" width="0.8751%" height="15" fill="rgb(234,129,31)" fg:x="561" fg:w="11"/><text x="44.8801%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="45.3461%" y="597" width="0.1591%" height="15" fill="rgb(219,177,4)" fg:x="570" fg:w="2"/><text x="45.5961%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="45.3461%" y="581" width="0.1591%" height="15" fill="rgb(225,142,27)" fg:x="570" fg:w="2"/><text x="45.5961%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="45.3461%" y="565" width="0.1591%" height="15" fill="rgb(205,107,51)" fg:x="570" fg:w="2"/><text x="45.5961%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="45.3461%" y="549" width="0.1591%" height="15" fill="rgb(236,223,15)" fg:x="570" fg:w="2"/><text x="45.5961%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="45.3461%" y="533" width="0.1591%" height="15" fill="rgb(235,133,11)" fg:x="570" fg:w="2"/><text x="45.5961%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="45.4256%" y="517" width="0.0796%" height="15" fill="rgb(247,172,13)" fg:x="571" fg:w="1"/><text x="45.6756%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.4256%" y="501" width="0.0796%" height="15" fill="rgb(233,191,41)" fg:x="571" fg:w="1"/><text x="45.6756%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="45.4256%" y="485" width="0.0796%" height="15" fill="rgb(250,65,16)" fg:x="571" fg:w="1"/><text x="45.6756%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.4256%" y="469" width="0.0796%" height="15" fill="rgb(206,10,27)" fg:x="571" fg:w="1"/><text x="45.6756%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="45.4256%" y="453" width="0.0796%" height="15" fill="rgb(212,96,22)" fg:x="571" fg:w="1"/><text x="45.6756%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="45.4256%" y="437" width="0.0796%" height="15" fill="rgb(206,50,0)" fg:x="571" fg:w="1"/><text x="45.6756%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.4256%" y="421" width="0.0796%" height="15" fill="rgb(249,105,52)" fg:x="571" fg:w="1"/><text x="45.6756%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="45.4256%" y="405" width="0.0796%" height="15" fill="rgb(216,93,51)" fg:x="571" fg:w="1"/><text x="45.6756%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.4256%" y="389" width="0.0796%" height="15" fill="rgb(217,172,13)" fg:x="571" fg:w="1"/><text x="45.6756%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="45.4256%" y="373" width="0.0796%" height="15" fill="rgb(235,199,38)" fg:x="571" fg:w="1"/><text x="45.6756%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.5052%" y="613" width="0.0796%" height="15" fill="rgb(221,97,33)" fg:x="572" fg:w="1"/><text x="45.7552%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (2 samples, 0.16%)</title><rect x="45.6643%" y="597" width="0.1591%" height="15" fill="rgb(205,156,50)" fg:x="574" fg:w="2"/><text x="45.9143%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="45.7438%" y="581" width="0.0796%" height="15" fill="rgb(215,142,19)" fg:x="575" fg:w="1"/><text x="45.9938%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="45.8234%" y="565" width="0.0796%" height="15" fill="rgb(232,170,7)" fg:x="576" fg:w="1"/><text x="46.0734%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="45.8234%" y="549" width="0.0796%" height="15" fill="rgb(223,50,17)" fg:x="576" fg:w="1"/><text x="46.0734%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.8234%" y="533" width="0.0796%" height="15" fill="rgb(230,103,46)" fg:x="576" fg:w="1"/><text x="46.0734%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.8234%" y="517" width="0.0796%" height="15" fill="rgb(254,30,34)" fg:x="576" fg:w="1"/><text x="46.0734%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.8234%" y="501" width="0.0796%" height="15" fill="rgb(235,198,1)" fg:x="576" fg:w="1"/><text x="46.0734%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.8234%" y="485" width="0.0796%" height="15" fill="rgb(217,105,47)" fg:x="576" fg:w="1"/><text x="46.0734%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.8234%" y="469" width="0.0796%" height="15" fill="rgb(231,18,12)" fg:x="576" fg:w="1"/><text x="46.0734%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8234%" y="453" width="0.0796%" height="15" fill="rgb(218,196,1)" fg:x="576" fg:w="1"/><text x="46.0734%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="45.8234%" y="597" width="0.1591%" height="15" fill="rgb(210,32,3)" fg:x="576" fg:w="2"/><text x="46.0734%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="45.8234%" y="581" width="0.1591%" height="15" fill="rgb(227,178,30)" fg:x="576" fg:w="2"/><text x="46.0734%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="45.9029%" y="565" width="0.0796%" height="15" fill="rgb(231,140,27)" fg:x="577" fg:w="1"/><text x="46.1529%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="45.9029%" y="549" width="0.0796%" height="15" fill="rgb(206,66,35)" fg:x="577" fg:w="1"/><text x="46.1529%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.9029%" y="533" width="0.0796%" height="15" fill="rgb(212,34,2)" fg:x="577" fg:w="1"/><text x="46.1529%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.9029%" y="517" width="0.0796%" height="15" fill="rgb(207,201,33)" fg:x="577" fg:w="1"/><text x="46.1529%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.9029%" y="501" width="0.0796%" height="15" fill="rgb(221,135,32)" fg:x="577" fg:w="1"/><text x="46.1529%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.9029%" y="485" width="0.0796%" height="15" fill="rgb(206,77,31)" fg:x="577" fg:w="1"/><text x="46.1529%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.9029%" y="469" width="0.0796%" height="15" fill="rgb(252,198,50)" fg:x="577" fg:w="1"/><text x="46.1529%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.9029%" y="453" width="0.0796%" height="15" fill="rgb(206,79,27)" fg:x="577" fg:w="1"/><text x="46.1529%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.9029%" y="437" width="0.0796%" height="15" fill="rgb(228,108,9)" fg:x="577" fg:w="1"/><text x="46.1529%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="46.0621%" y="549" width="0.0796%" height="15" fill="rgb(213,9,39)" fg:x="579" fg:w="1"/><text x="46.3121%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="46.0621%" y="533" width="0.0796%" height="15" fill="rgb(252,51,13)" fg:x="579" fg:w="1"/><text x="46.3121%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="46.0621%" y="581" width="0.2387%" height="15" fill="rgb(218,202,39)" fg:x="579" fg:w="3"/><text x="46.3121%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="46.0621%" y="565" width="0.2387%" height="15" fill="rgb(214,122,21)" fg:x="579" fg:w="3"/><text x="46.3121%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="46.1416%" y="549" width="0.1591%" height="15" fill="rgb(217,205,48)" fg:x="580" fg:w="2"/><text x="46.3916%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="46.1416%" y="533" width="0.1591%" height="15" fill="rgb(230,216,13)" fg:x="580" fg:w="2"/><text x="46.3916%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.1416%" y="517" width="0.1591%" height="15" fill="rgb(249,118,4)" fg:x="580" fg:w="2"/><text x="46.3916%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.2212%" y="501" width="0.0796%" height="15" fill="rgb(212,207,40)" fg:x="581" fg:w="1"/><text x="46.4712%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="45.9825%" y="597" width="0.3978%" height="15" fill="rgb(217,156,26)" fg:x="578" fg:w="5"/><text x="46.2325%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="46.3007%" y="581" width="0.0796%" height="15" fill="rgb(226,86,34)" fg:x="582" fg:w="1"/><text x="46.5507%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.3007%" y="565" width="0.0796%" height="15" fill="rgb(217,111,30)" fg:x="582" fg:w="1"/><text x="46.5507%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="46.3007%" y="549" width="0.0796%" height="15" fill="rgb(228,64,18)" fg:x="582" fg:w="1"/><text x="46.5507%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.3007%" y="533" width="0.0796%" height="15" fill="rgb(254,217,48)" fg:x="582" fg:w="1"/><text x="46.5507%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.3803%" y="549" width="0.0796%" height="15" fill="rgb(226,156,48)" fg:x="583" fg:w="1"/><text x="46.6303%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.3803%" y="533" width="0.0796%" height="15" fill="rgb(236,168,20)" fg:x="583" fg:w="1"/><text x="46.6303%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.3803%" y="517" width="0.0796%" height="15" fill="rgb(239,210,33)" fg:x="583" fg:w="1"/><text x="46.6303%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.3803%" y="501" width="0.0796%" height="15" fill="rgb(242,85,17)" fg:x="583" fg:w="1"/><text x="46.6303%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.3803%" y="485" width="0.0796%" height="15" fill="rgb(221,196,15)" fg:x="583" fg:w="1"/><text x="46.6303%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.3803%" y="469" width="0.0796%" height="15" fill="rgb(249,76,21)" fg:x="583" fg:w="1"/><text x="46.6303%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.3803%" y="453" width="0.0796%" height="15" fill="rgb(243,67,29)" fg:x="583" fg:w="1"/><text x="46.6303%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.3803%" y="437" width="0.0796%" height="15" fill="rgb(240,159,2)" fg:x="583" fg:w="1"/><text x="46.6303%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.3803%" y="421" width="0.0796%" height="15" fill="rgb(244,64,3)" fg:x="583" fg:w="1"/><text x="46.6303%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.3803%" y="405" width="0.0796%" height="15" fill="rgb(220,86,40)" fg:x="583" fg:w="1"/><text x="46.6303%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.3803%" y="389" width="0.0796%" height="15" fill="rgb(222,194,51)" fg:x="583" fg:w="1"/><text x="46.6303%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.3803%" y="373" width="0.0796%" height="15" fill="rgb(207,154,19)" fg:x="583" fg:w="1"/><text x="46.6303%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="46.4598%" y="533" width="0.0796%" height="15" fill="rgb(206,178,36)" fg:x="584" fg:w="1"/><text x="46.7098%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.4598%" y="517" width="0.0796%" height="15" fill="rgb(218,8,24)" fg:x="584" fg:w="1"/><text x="46.7098%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.4598%" y="501" width="0.0796%" height="15" fill="rgb(226,83,41)" fg:x="584" fg:w="1"/><text x="46.7098%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.5394%" y="437" width="0.0796%" height="15" fill="rgb(224,23,22)" fg:x="585" fg:w="1"/><text x="46.7894%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.5394%" y="421" width="0.0796%" height="15" fill="rgb(218,198,45)" fg:x="585" fg:w="1"/><text x="46.7894%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.5394%" y="501" width="0.1591%" height="15" fill="rgb(249,147,41)" fg:x="585" fg:w="2"/><text x="46.7894%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.5394%" y="485" width="0.1591%" height="15" fill="rgb(244,224,13)" fg:x="585" fg:w="2"/><text x="46.7894%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.5394%" y="469" width="0.1591%" height="15" fill="rgb(225,97,27)" fg:x="585" fg:w="2"/><text x="46.7894%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.5394%" y="453" width="0.1591%" height="15" fill="rgb(254,64,0)" fg:x="585" fg:w="2"/><text x="46.7894%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.6189%" y="437" width="0.0796%" height="15" fill="rgb(208,130,43)" fg:x="586" fg:w="1"/><text x="46.8689%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.6189%" y="421" width="0.0796%" height="15" fill="rgb(247,91,25)" fg:x="586" fg:w="1"/><text x="46.8689%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.6189%" y="405" width="0.0796%" height="15" fill="rgb(215,218,42)" fg:x="586" fg:w="1"/><text x="46.8689%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.6189%" y="389" width="0.0796%" height="15" fill="rgb(233,9,24)" fg:x="586" fg:w="1"/><text x="46.8689%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.6189%" y="373" width="0.0796%" height="15" fill="rgb(252,105,38)" fg:x="586" fg:w="1"/><text x="46.8689%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.6189%" y="357" width="0.0796%" height="15" fill="rgb(225,40,49)" fg:x="586" fg:w="1"/><text x="46.8689%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.6189%" y="341" width="0.0796%" height="15" fill="rgb(232,196,19)" fg:x="586" fg:w="1"/><text x="46.8689%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.6189%" y="325" width="0.0796%" height="15" fill="rgb(207,35,15)" fg:x="586" fg:w="1"/><text x="46.8689%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.6189%" y="309" width="0.0796%" height="15" fill="rgb(238,68,36)" fg:x="586" fg:w="1"/><text x="46.8689%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.6189%" y="293" width="0.0796%" height="15" fill="rgb(205,158,20)" fg:x="586" fg:w="1"/><text x="46.8689%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.6189%" y="277" width="0.0796%" height="15" fill="rgb(232,32,22)" fg:x="586" fg:w="1"/><text x="46.8689%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6189%" y="261" width="0.0796%" height="15" fill="rgb(210,169,6)" fg:x="586" fg:w="1"/><text x="46.8689%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.6985%" y="501" width="0.0796%" height="15" fill="rgb(229,28,12)" fg:x="587" fg:w="1"/><text x="46.9485%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="46.6985%" y="485" width="0.0796%" height="15" fill="rgb(229,78,10)" fg:x="587" fg:w="1"/><text x="46.9485%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="46.4598%" y="549" width="0.3978%" height="15" fill="rgb(223,139,54)" fg:x="584" fg:w="5"/><text x="46.7098%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="46.5394%" y="533" width="0.3182%" height="15" fill="rgb(207,110,4)" fg:x="585" fg:w="4"/><text x="46.7894%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="46.5394%" y="517" width="0.3182%" height="15" fill="rgb(248,30,41)" fg:x="585" fg:w="4"/><text x="46.7894%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.7780%" y="501" width="0.0796%" height="15" fill="rgb(235,54,25)" fg:x="588" fg:w="1"/><text x="47.0280%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.7780%" y="485" width="0.0796%" height="15" fill="rgb(213,107,41)" fg:x="588" fg:w="1"/><text x="47.0280%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.7780%" y="469" width="0.0796%" height="15" fill="rgb(237,102,9)" fg:x="588" fg:w="1"/><text x="47.0280%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.8576%" y="437" width="0.0796%" height="15" fill="rgb(252,137,49)" fg:x="589" fg:w="1"/><text x="47.1076%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.8576%" y="421" width="0.0796%" height="15" fill="rgb(233,202,33)" fg:x="589" fg:w="1"/><text x="47.1076%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.8576%" y="405" width="0.0796%" height="15" fill="rgb(223,14,51)" fg:x="589" fg:w="1"/><text x="47.1076%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.8576%" y="389" width="0.0796%" height="15" fill="rgb(248,70,23)" fg:x="589" fg:w="1"/><text x="47.1076%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.8576%" y="373" width="0.0796%" height="15" fill="rgb(209,207,47)" fg:x="589" fg:w="1"/><text x="47.1076%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.8576%" y="357" width="0.0796%" height="15" fill="rgb(245,124,2)" fg:x="589" fg:w="1"/><text x="47.1076%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.8576%" y="341" width="0.0796%" height="15" fill="rgb(249,208,11)" fg:x="589" fg:w="1"/><text x="47.1076%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.8576%" y="325" width="0.0796%" height="15" fill="rgb(247,112,7)" fg:x="589" fg:w="1"/><text x="47.1076%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.8576%" y="309" width="0.0796%" height="15" fill="rgb(209,192,31)" fg:x="589" fg:w="1"/><text x="47.1076%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.8576%" y="293" width="0.0796%" height="15" fill="rgb(236,55,19)" fg:x="589" fg:w="1"/><text x="47.1076%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.8576%" y="277" width="0.0796%" height="15" fill="rgb(252,89,41)" fg:x="589" fg:w="1"/><text x="47.1076%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.8576%" y="261" width="0.0796%" height="15" fill="rgb(220,172,14)" fg:x="589" fg:w="1"/><text x="47.1076%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8576%" y="245" width="0.0796%" height="15" fill="rgb(252,65,2)" fg:x="589" fg:w="1"/><text x="47.1076%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.8576%" y="469" width="0.1591%" height="15" fill="rgb(250,20,8)" fg:x="589" fg:w="2"/><text x="47.1076%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.8576%" y="453" width="0.1591%" height="15" fill="rgb(234,149,13)" fg:x="589" fg:w="2"/><text x="47.1076%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.9372%" y="437" width="0.0796%" height="15" fill="rgb(223,219,12)" fg:x="590" fg:w="1"/><text x="47.1872%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.9372%" y="421" width="0.0796%" height="15" fill="rgb(234,13,49)" fg:x="590" fg:w="1"/><text x="47.1872%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.9372%" y="405" width="0.0796%" height="15" fill="rgb(214,41,25)" fg:x="590" fg:w="1"/><text x="47.1872%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.9372%" y="389" width="0.0796%" height="15" fill="rgb(232,198,52)" fg:x="590" fg:w="1"/><text x="47.1872%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.9372%" y="373" width="0.0796%" height="15" fill="rgb(236,111,46)" fg:x="590" fg:w="1"/><text x="47.1872%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.9372%" y="357" width="0.0796%" height="15" fill="rgb(253,30,20)" fg:x="590" fg:w="1"/><text x="47.1872%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.9372%" y="341" width="0.0796%" height="15" fill="rgb(247,141,17)" fg:x="590" fg:w="1"/><text x="47.1872%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.9372%" y="325" width="0.0796%" height="15" fill="rgb(214,195,21)" fg:x="590" fg:w="1"/><text x="47.1872%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.9372%" y="309" width="0.0796%" height="15" fill="rgb(214,98,12)" fg:x="590" fg:w="1"/><text x="47.1872%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.9372%" y="293" width="0.0796%" height="15" fill="rgb(239,4,26)" fg:x="590" fg:w="1"/><text x="47.1872%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.9372%" y="277" width="0.0796%" height="15" fill="rgb(234,210,35)" fg:x="590" fg:w="1"/><text x="47.1872%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9372%" y="261" width="0.0796%" height="15" fill="rgb(252,178,27)" fg:x="590" fg:w="1"/><text x="47.1872%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="46.8576%" y="485" width="0.2387%" height="15" fill="rgb(217,50,1)" fg:x="589" fg:w="3"/><text x="47.1076%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.0167%" y="469" width="0.0796%" height="15" fill="rgb(233,137,5)" fg:x="591" fg:w="1"/><text x="47.2667%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="46.8576%" y="501" width="0.3182%" height="15" fill="rgb(217,227,25)" fg:x="589" fg:w="4"/><text x="47.1076%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.0963%" y="485" width="0.0796%" height="15" fill="rgb(242,89,38)" fg:x="592" fg:w="1"/><text x="47.3463%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.1758%" y="501" width="0.0796%" height="15" fill="rgb(212,190,30)" fg:x="593" fg:w="1"/><text x="47.4258%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="47.1758%" y="485" width="0.0796%" height="15" fill="rgb(222,120,8)" fg:x="593" fg:w="1"/><text x="47.4258%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.3349%" y="405" width="0.0796%" height="15" fill="rgb(227,181,9)" fg:x="595" fg:w="1"/><text x="47.5849%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.4145%" y="405" width="0.0796%" height="15" fill="rgb(222,125,29)" fg:x="596" fg:w="1"/><text x="47.6645%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.4145%" y="389" width="0.0796%" height="15" fill="rgb(215,153,31)" fg:x="596" fg:w="1"/><text x="47.6645%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.4940%" y="341" width="0.0796%" height="15" fill="rgb(228,77,30)" fg:x="597" fg:w="1"/><text x="47.7440%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (310 samples, 24.66%)</title><rect x="23.0708%" y="645" width="24.6619%" height="15" fill="rgb(226,110,9)" fg:x="290" fg:w="310"/><text x="23.3208%" y="655.50">plugins_core::build::BuildSurroundings:..</text></g><g><title>plugins_core::build::Build::occupying (40 samples, 3.18%)</title><rect x="44.5505%" y="629" width="3.1822%" height="15" fill="rgb(219,111,7)" fg:x="560" fg:w="40"/><text x="44.8005%" y="639.50">plu..</text></g><g><title>plugins_core::tools::set_occupying (27 samples, 2.15%)</title><rect x="45.5847%" y="613" width="2.1480%" height="15" fill="rgb(229,167,25)" fg:x="573" fg:w="27"/><text x="45.8347%" y="623.50">p..</text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (17 samples, 1.35%)</title><rect x="46.3803%" y="597" width="1.3524%" height="15" fill="rgb(209,77,43)" fg:x="583" fg:w="17"/><text x="46.6303%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (17 samples, 1.35%)</title><rect x="46.3803%" y="581" width="1.3524%" height="15" fill="rgb(233,70,39)" fg:x="583" fg:w="17"/><text x="46.6303%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (17 samples, 1.35%)</title><rect x="46.3803%" y="565" width="1.3524%" height="15" fill="rgb(207,171,44)" fg:x="583" fg:w="17"/><text x="46.6303%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="46.8576%" y="549" width="0.8751%" height="15" fill="rgb(244,91,6)" fg:x="589" fg:w="11"/><text x="47.1076%" y="559.50"></text></g><g><title>kernel::model::props::load_props (11 samples, 0.88%)</title><rect x="46.8576%" y="533" width="0.8751%" height="15" fill="rgb(234,136,12)" fg:x="589" fg:w="11"/><text x="47.1076%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="46.8576%" y="517" width="0.8751%" height="15" fill="rgb(216,210,38)" fg:x="589" fg:w="11"/><text x="47.1076%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="47.2554%" y="501" width="0.4773%" height="15" fill="rgb(241,227,7)" fg:x="594" fg:w="6"/><text x="47.5054%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="47.2554%" y="485" width="0.4773%" height="15" fill="rgb(241,222,11)" fg:x="594" fg:w="6"/><text x="47.5054%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="47.3349%" y="469" width="0.3978%" height="15" fill="rgb(246,86,18)" fg:x="595" fg:w="5"/><text x="47.5849%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="47.3349%" y="453" width="0.3978%" height="15" fill="rgb(224,151,49)" fg:x="595" fg:w="5"/><text x="47.5849%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="47.3349%" y="437" width="0.3978%" height="15" fill="rgb(235,4,41)" fg:x="595" fg:w="5"/><text x="47.5849%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="47.3349%" y="421" width="0.3978%" height="15" fill="rgb(218,30,52)" fg:x="595" fg:w="5"/><text x="47.5849%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="47.4940%" y="405" width="0.2387%" height="15" fill="rgb(205,124,51)" fg:x="597" fg:w="3"/><text x="47.7440%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="47.4940%" y="389" width="0.2387%" height="15" fill="rgb(237,126,51)" fg:x="597" fg:w="3"/><text x="47.7440%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="47.4940%" y="373" width="0.2387%" height="15" fill="rgb(225,32,46)" fg:x="597" fg:w="3"/><text x="47.7440%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="47.4940%" y="357" width="0.2387%" height="15" fill="rgb(251,60,49)" fg:x="597" fg:w="3"/><text x="47.7440%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="47.5736%" y="341" width="0.1591%" height="15" fill="rgb(234,18,23)" fg:x="598" fg:w="2"/><text x="47.8236%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="47.6531%" y="325" width="0.0796%" height="15" fill="rgb(234,25,23)" fg:x="599" fg:w="1"/><text x="47.9031%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="47.7327%" y="613" width="0.1591%" height="15" fill="rgb(210,43,52)" fg:x="600" fg:w="2"/><text x="47.9827%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="47.8123%" y="597" width="0.0796%" height="15" fill="rgb(237,198,21)" fg:x="601" fg:w="1"/><text x="48.0623%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="47.8123%" y="581" width="0.0796%" height="15" fill="rgb(211,20,34)" fg:x="601" fg:w="1"/><text x="48.0623%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.8123%" y="565" width="0.0796%" height="15" fill="rgb(221,155,50)" fg:x="601" fg:w="1"/><text x="48.0623%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="47.8123%" y="549" width="0.0796%" height="15" fill="rgb(213,214,53)" fg:x="601" fg:w="1"/><text x="48.0623%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="47.7327%" y="645" width="0.2387%" height="15" fill="rgb(215,229,48)" fg:x="600" fg:w="3"/><text x="47.9827%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="47.7327%" y="629" width="0.2387%" height="15" fill="rgb(243,88,5)" fg:x="600" fg:w="3"/><text x="47.9827%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="47.8918%" y="613" width="0.0796%" height="15" fill="rgb(216,199,8)" fg:x="602" fg:w="1"/><text x="48.1418%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="47.8918%" y="597" width="0.0796%" height="15" fill="rgb(241,22,4)" fg:x="602" fg:w="1"/><text x="48.1418%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="47.8918%" y="581" width="0.0796%" height="15" fill="rgb(209,190,22)" fg:x="602" fg:w="1"/><text x="48.1418%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="47.8918%" y="565" width="0.0796%" height="15" fill="rgb(251,138,45)" fg:x="602" fg:w="1"/><text x="48.1418%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.8918%" y="549" width="0.0796%" height="15" fill="rgb(219,111,22)" fg:x="602" fg:w="1"/><text x="48.1418%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.8918%" y="533" width="0.0796%" height="15" fill="rgb(253,29,49)" fg:x="602" fg:w="1"/><text x="48.1418%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.8918%" y="517" width="0.0796%" height="15" fill="rgb(238,129,49)" fg:x="602" fg:w="1"/><text x="48.1418%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.8918%" y="501" width="0.0796%" height="15" fill="rgb(240,26,41)" fg:x="602" fg:w="1"/><text x="48.1418%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.8918%" y="485" width="0.0796%" height="15" fill="rgb(221,47,33)" fg:x="602" fg:w="1"/><text x="48.1418%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.8918%" y="469" width="0.0796%" height="15" fill="rgb(216,200,17)" fg:x="602" fg:w="1"/><text x="48.1418%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.8918%" y="453" width="0.0796%" height="15" fill="rgb(230,151,26)" fg:x="602" fg:w="1"/><text x="48.1418%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.8918%" y="437" width="0.0796%" height="15" fill="rgb(242,182,16)" fg:x="602" fg:w="1"/><text x="48.1418%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.8918%" y="421" width="0.0796%" height="15" fill="rgb(236,35,53)" fg:x="602" fg:w="1"/><text x="48.1418%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.8918%" y="405" width="0.0796%" height="15" fill="rgb(214,180,28)" fg:x="602" fg:w="1"/><text x="48.1418%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.8918%" y="389" width="0.0796%" height="15" fill="rgb(208,173,36)" fg:x="602" fg:w="1"/><text x="48.1418%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.8918%" y="373" width="0.0796%" height="15" fill="rgb(218,39,15)" fg:x="602" fg:w="1"/><text x="48.1418%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.8918%" y="357" width="0.0796%" height="15" fill="rgb(213,145,15)" fg:x="602" fg:w="1"/><text x="48.1418%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="47.9714%" y="597" width="0.0796%" height="15" fill="rgb(242,110,37)" fg:x="603" fg:w="1"/><text x="48.2214%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="47.9714%" y="581" width="0.0796%" height="15" fill="rgb(247,146,22)" fg:x="603" fg:w="1"/><text x="48.2214%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="47.9714%" y="565" width="0.0796%" height="15" fill="rgb(215,191,7)" fg:x="603" fg:w="1"/><text x="48.2214%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.9714%" y="549" width="0.0796%" height="15" fill="rgb(240,158,1)" fg:x="603" fg:w="1"/><text x="48.2214%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.9714%" y="533" width="0.0796%" height="15" fill="rgb(241,78,32)" fg:x="603" fg:w="1"/><text x="48.2214%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.9714%" y="517" width="0.0796%" height="15" fill="rgb(248,83,10)" fg:x="603" fg:w="1"/><text x="48.2214%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.9714%" y="501" width="0.0796%" height="15" fill="rgb(241,52,0)" fg:x="603" fg:w="1"/><text x="48.2214%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.9714%" y="485" width="0.0796%" height="15" fill="rgb(238,37,13)" fg:x="603" fg:w="1"/><text x="48.2214%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.9714%" y="469" width="0.0796%" height="15" fill="rgb(242,194,17)" fg:x="603" fg:w="1"/><text x="48.2214%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.9714%" y="453" width="0.0796%" height="15" fill="rgb(236,96,3)" fg:x="603" fg:w="1"/><text x="48.2214%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.9714%" y="437" width="0.0796%" height="15" fill="rgb(235,148,34)" fg:x="603" fg:w="1"/><text x="48.2214%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.9714%" y="421" width="0.0796%" height="15" fill="rgb(254,12,11)" fg:x="603" fg:w="1"/><text x="48.2214%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.9714%" y="405" width="0.0796%" height="15" fill="rgb(207,31,54)" fg:x="603" fg:w="1"/><text x="48.2214%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.9714%" y="389" width="0.0796%" height="15" fill="rgb(252,14,28)" fg:x="603" fg:w="1"/><text x="48.2214%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.9714%" y="373" width="0.0796%" height="15" fill="rgb(252,108,36)" fg:x="603" fg:w="1"/><text x="48.2214%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.9714%" y="357" width="0.0796%" height="15" fill="rgb(214,149,7)" fg:x="603" fg:w="1"/><text x="48.2214%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="48.0509%" y="597" width="0.0796%" height="15" fill="rgb(243,94,12)" fg:x="604" fg:w="1"/><text x="48.3009%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="48.0509%" y="581" width="0.0796%" height="15" fill="rgb(208,36,10)" fg:x="604" fg:w="1"/><text x="48.3009%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="48.0509%" y="565" width="0.0796%" height="15" fill="rgb(233,185,52)" fg:x="604" fg:w="1"/><text x="48.3009%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.0509%" y="549" width="0.0796%" height="15" fill="rgb(234,50,45)" fg:x="604" fg:w="1"/><text x="48.3009%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.0509%" y="533" width="0.0796%" height="15" fill="rgb(228,92,54)" fg:x="604" fg:w="1"/><text x="48.3009%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.0509%" y="517" width="0.0796%" height="15" fill="rgb(224,85,25)" fg:x="604" fg:w="1"/><text x="48.3009%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.0509%" y="501" width="0.0796%" height="15" fill="rgb(246,1,45)" fg:x="604" fg:w="1"/><text x="48.3009%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.0509%" y="485" width="0.0796%" height="15" fill="rgb(240,66,23)" fg:x="604" fg:w="1"/><text x="48.3009%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.0509%" y="469" width="0.0796%" height="15" fill="rgb(222,96,27)" fg:x="604" fg:w="1"/><text x="48.3009%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.0509%" y="453" width="0.0796%" height="15" fill="rgb(212,136,10)" fg:x="604" fg:w="1"/><text x="48.3009%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.0509%" y="437" width="0.0796%" height="15" fill="rgb(226,192,50)" fg:x="604" fg:w="1"/><text x="48.3009%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.0509%" y="421" width="0.0796%" height="15" fill="rgb(241,182,31)" fg:x="604" fg:w="1"/><text x="48.3009%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (2 samples, 0.16%)</title><rect x="48.2100%" y="581" width="0.1591%" height="15" fill="rgb(219,205,47)" fg:x="606" fg:w="2"/><text x="48.4600%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="48.2896%" y="565" width="0.0796%" height="15" fill="rgb(207,96,14)" fg:x="607" fg:w="1"/><text x="48.5396%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.2896%" y="549" width="0.0796%" height="15" fill="rgb(216,119,9)" fg:x="607" fg:w="1"/><text x="48.5396%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="48.3691%" y="581" width="0.0796%" height="15" fill="rgb(235,62,36)" fg:x="608" fg:w="1"/><text x="48.6191%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="48.4487%" y="549" width="0.0796%" height="15" fill="rgb(214,41,27)" fg:x="609" fg:w="1"/><text x="48.6987%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="48.4487%" y="533" width="0.0796%" height="15" fill="rgb(214,174,37)" fg:x="609" fg:w="1"/><text x="48.6987%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="48.4487%" y="517" width="0.0796%" height="15" fill="rgb(212,11,25)" fg:x="609" fg:w="1"/><text x="48.6987%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4487%" y="501" width="0.0796%" height="15" fill="rgb(217,71,35)" fg:x="609" fg:w="1"/><text x="48.6987%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.48%)</title><rect x="48.1305%" y="597" width="0.4773%" height="15" fill="rgb(234,152,9)" fg:x="605" fg:w="6"/><text x="48.3805%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="48.4487%" y="581" width="0.1591%" height="15" fill="rgb(228,32,51)" fg:x="609" fg:w="2"/><text x="48.6987%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="48.4487%" y="565" width="0.1591%" height="15" fill="rgb(209,14,47)" fg:x="609" fg:w="2"/><text x="48.6987%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="48.5282%" y="549" width="0.0796%" height="15" fill="rgb(218,201,17)" fg:x="610" fg:w="1"/><text x="48.7782%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="48.6874%" y="549" width="0.0796%" height="15" fill="rgb(218,98,15)" fg:x="612" fg:w="1"/><text x="48.9374%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.6874%" y="533" width="0.0796%" height="15" fill="rgb(233,202,29)" fg:x="612" fg:w="1"/><text x="48.9374%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="48.7669%" y="549" width="0.0796%" height="15" fill="rgb(207,196,44)" fg:x="613" fg:w="1"/><text x="49.0169%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="48.7669%" y="533" width="0.0796%" height="15" fill="rgb(218,63,34)" fg:x="613" fg:w="1"/><text x="49.0169%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.7669%" y="517" width="0.0796%" height="15" fill="rgb(209,10,5)" fg:x="613" fg:w="1"/><text x="49.0169%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.7669%" y="501" width="0.0796%" height="15" fill="rgb(224,36,28)" fg:x="613" fg:w="1"/><text x="49.0169%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.7669%" y="485" width="0.0796%" height="15" fill="rgb(249,178,7)" fg:x="613" fg:w="1"/><text x="49.0169%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.7669%" y="469" width="0.0796%" height="15" fill="rgb(253,163,10)" fg:x="613" fg:w="1"/><text x="49.0169%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.7669%" y="453" width="0.0796%" height="15" fill="rgb(245,67,46)" fg:x="613" fg:w="1"/><text x="49.0169%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.7669%" y="437" width="0.0796%" height="15" fill="rgb(225,14,18)" fg:x="613" fg:w="1"/><text x="49.0169%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.7669%" y="421" width="0.0796%" height="15" fill="rgb(217,41,54)" fg:x="613" fg:w="1"/><text x="49.0169%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.7669%" y="405" width="0.0796%" height="15" fill="rgb(222,111,11)" fg:x="613" fg:w="1"/><text x="49.0169%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.7669%" y="389" width="0.0796%" height="15" fill="rgb(211,85,31)" fg:x="613" fg:w="1"/><text x="49.0169%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.7669%" y="373" width="0.0796%" height="15" fill="rgb(223,29,26)" fg:x="613" fg:w="1"/><text x="49.0169%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="48.7669%" y="357" width="0.0796%" height="15" fill="rgb(236,124,50)" fg:x="613" fg:w="1"/><text x="49.0169%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="48.7669%" y="341" width="0.0796%" height="15" fill="rgb(219,148,15)" fg:x="613" fg:w="1"/><text x="49.0169%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="48.7669%" y="325" width="0.0796%" height="15" fill="rgb(248,159,33)" fg:x="613" fg:w="1"/><text x="49.0169%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.8465%" y="517" width="0.0796%" height="15" fill="rgb(252,65,8)" fg:x="614" fg:w="1"/><text x="49.0965%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.8465%" y="501" width="0.0796%" height="15" fill="rgb(236,45,7)" fg:x="614" fg:w="1"/><text x="49.0965%" y="511.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="48.8465%" y="485" width="0.0796%" height="15" fill="rgb(244,3,48)" fg:x="614" fg:w="1"/><text x="49.0965%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="48.8465%" y="469" width="0.0796%" height="15" fill="rgb(224,123,53)" fg:x="614" fg:w="1"/><text x="49.0965%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.11%)</title><rect x="47.9714%" y="613" width="1.1138%" height="15" fill="rgb(223,173,15)" fg:x="603" fg:w="14"/><text x="48.2214%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="48.6078%" y="597" width="0.4773%" height="15" fill="rgb(254,181,5)" fg:x="611" fg:w="6"/><text x="48.8578%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="48.6874%" y="581" width="0.3978%" height="15" fill="rgb(243,124,33)" fg:x="612" fg:w="5"/><text x="48.9374%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="48.6874%" y="565" width="0.3978%" height="15" fill="rgb(253,220,11)" fg:x="612" fg:w="5"/><text x="48.9374%" y="575.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="48.8465%" y="549" width="0.2387%" height="15" fill="rgb(217,14,4)" fg:x="614" fg:w="3"/><text x="49.0965%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="48.8465%" y="533" width="0.2387%" height="15" fill="rgb(209,196,12)" fg:x="614" fg:w="3"/><text x="49.0965%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="48.9260%" y="517" width="0.1591%" height="15" fill="rgb(237,108,29)" fg:x="615" fg:w="2"/><text x="49.1760%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="48.9260%" y="501" width="0.1591%" height="15" fill="rgb(216,173,20)" fg:x="615" fg:w="2"/><text x="49.1760%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="48.9260%" y="485" width="0.1591%" height="15" fill="rgb(245,27,6)" fg:x="615" fg:w="2"/><text x="49.1760%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="48.9260%" y="469" width="0.1591%" height="15" fill="rgb(210,181,20)" fg:x="615" fg:w="2"/><text x="49.1760%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="48.9260%" y="453" width="0.1591%" height="15" fill="rgb(235,213,1)" fg:x="615" fg:w="2"/><text x="49.1760%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="48.9260%" y="437" width="0.1591%" height="15" fill="rgb(239,68,43)" fg:x="615" fg:w="2"/><text x="49.1760%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="49.0056%" y="421" width="0.0796%" height="15" fill="rgb(254,137,43)" fg:x="616" fg:w="1"/><text x="49.2556%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="49.0056%" y="405" width="0.0796%" height="15" fill="rgb(252,170,38)" fg:x="616" fg:w="1"/><text x="49.2556%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.0851%" y="517" width="0.0796%" height="15" fill="rgb(234,21,42)" fg:x="617" fg:w="1"/><text x="49.3351%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.0851%" y="501" width="0.0796%" height="15" fill="rgb(216,145,40)" fg:x="617" fg:w="1"/><text x="49.3351%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.0851%" y="485" width="0.0796%" height="15" fill="rgb(251,73,9)" fg:x="617" fg:w="1"/><text x="49.3351%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.0851%" y="469" width="0.0796%" height="15" fill="rgb(242,54,6)" fg:x="617" fg:w="1"/><text x="49.3351%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.0851%" y="453" width="0.0796%" height="15" fill="rgb(239,70,7)" fg:x="617" fg:w="1"/><text x="49.3351%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.0851%" y="437" width="0.0796%" height="15" fill="rgb(216,159,35)" fg:x="617" fg:w="1"/><text x="49.3351%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.0851%" y="421" width="0.0796%" height="15" fill="rgb(224,50,39)" fg:x="617" fg:w="1"/><text x="49.3351%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="49.0851%" y="597" width="0.1591%" height="15" fill="rgb(235,9,35)" fg:x="617" fg:w="2"/><text x="49.3351%" y="607.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="49.0851%" y="581" width="0.1591%" height="15" fill="rgb(239,34,21)" fg:x="617" fg:w="2"/><text x="49.3351%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="49.0851%" y="565" width="0.1591%" height="15" fill="rgb(218,162,43)" fg:x="617" fg:w="2"/><text x="49.3351%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="49.0851%" y="549" width="0.1591%" height="15" fill="rgb(219,89,33)" fg:x="617" fg:w="2"/><text x="49.3351%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="49.0851%" y="533" width="0.1591%" height="15" fill="rgb(226,125,37)" fg:x="617" fg:w="2"/><text x="49.3351%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.1647%" y="517" width="0.0796%" height="15" fill="rgb(233,149,30)" fg:x="618" fg:w="1"/><text x="49.4147%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="49.1647%" y="501" width="0.0796%" height="15" fill="rgb(236,8,18)" fg:x="618" fg:w="1"/><text x="49.4147%" y="511.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="49.1647%" y="485" width="0.0796%" height="15" fill="rgb(205,176,9)" fg:x="618" fg:w="1"/><text x="49.4147%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.1647%" y="469" width="0.0796%" height="15" fill="rgb(252,103,44)" fg:x="618" fg:w="1"/><text x="49.4147%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.1647%" y="453" width="0.0796%" height="15" fill="rgb(207,68,53)" fg:x="618" fg:w="1"/><text x="49.4147%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.1647%" y="437" width="0.0796%" height="15" fill="rgb(218,193,48)" fg:x="618" fg:w="1"/><text x="49.4147%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.1647%" y="421" width="0.0796%" height="15" fill="rgb(234,121,52)" fg:x="618" fg:w="1"/><text x="49.4147%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.1647%" y="405" width="0.0796%" height="15" fill="rgb(227,218,49)" fg:x="618" fg:w="1"/><text x="49.4147%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.1647%" y="389" width="0.0796%" height="15" fill="rgb(221,8,7)" fg:x="618" fg:w="1"/><text x="49.4147%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.1647%" y="373" width="0.0796%" height="15" fill="rgb(217,151,36)" fg:x="618" fg:w="1"/><text x="49.4147%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.2442%" y="533" width="0.0796%" height="15" fill="rgb(213,71,5)" fg:x="619" fg:w="1"/><text x="49.4942%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.2442%" y="517" width="0.0796%" height="15" fill="rgb(225,145,43)" fg:x="619" fg:w="1"/><text x="49.4942%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="49.2442%" y="597" width="0.2387%" height="15" fill="rgb(235,118,19)" fg:x="619" fg:w="3"/><text x="49.4942%" y="607.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="49.2442%" y="581" width="0.2387%" height="15" fill="rgb(214,102,36)" fg:x="619" fg:w="3"/><text x="49.4942%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="49.2442%" y="565" width="0.2387%" height="15" fill="rgb(220,56,43)" fg:x="619" fg:w="3"/><text x="49.4942%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="49.2442%" y="549" width="0.2387%" height="15" fill="rgb(246,136,46)" fg:x="619" fg:w="3"/><text x="49.4942%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="49.3238%" y="533" width="0.1591%" height="15" fill="rgb(249,99,12)" fg:x="620" fg:w="2"/><text x="49.5738%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="49.3238%" y="517" width="0.1591%" height="15" fill="rgb(224,31,42)" fg:x="620" fg:w="2"/><text x="49.5738%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.4033%" y="501" width="0.0796%" height="15" fill="rgb(208,96,21)" fg:x="621" fg:w="1"/><text x="49.6533%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.4033%" y="485" width="0.0796%" height="15" fill="rgb(237,229,7)" fg:x="621" fg:w="1"/><text x="49.6533%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.4033%" y="469" width="0.0796%" height="15" fill="rgb(210,12,6)" fg:x="621" fg:w="1"/><text x="49.6533%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (6 samples, 0.48%)</title><rect x="49.0851%" y="613" width="0.4773%" height="15" fill="rgb(240,9,34)" fg:x="617" fg:w="6"/><text x="49.3351%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="49.4829%" y="597" width="0.0796%" height="15" fill="rgb(211,68,37)" fg:x="622" fg:w="1"/><text x="49.7329%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="49.4829%" y="581" width="0.0796%" height="15" fill="rgb(249,138,50)" fg:x="622" fg:w="1"/><text x="49.7329%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="49.4829%" y="565" width="0.0796%" height="15" fill="rgb(243,185,40)" fg:x="622" fg:w="1"/><text x="49.7329%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="49.4829%" y="549" width="0.0796%" height="15" fill="rgb(242,92,35)" fg:x="622" fg:w="1"/><text x="49.7329%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.4829%" y="533" width="0.0796%" height="15" fill="rgb(244,98,5)" fg:x="622" fg:w="1"/><text x="49.7329%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4829%" y="517" width="0.0796%" height="15" fill="rgb(228,186,29)" fg:x="622" fg:w="1"/><text x="49.7329%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.4829%" y="501" width="0.0796%" height="15" fill="rgb(253,7,44)" fg:x="622" fg:w="1"/><text x="49.7329%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4829%" y="485" width="0.0796%" height="15" fill="rgb(216,11,45)" fg:x="622" fg:w="1"/><text x="49.7329%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.4829%" y="469" width="0.0796%" height="15" fill="rgb(205,67,3)" fg:x="622" fg:w="1"/><text x="49.7329%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4829%" y="453" width="0.0796%" height="15" fill="rgb(250,18,3)" fg:x="622" fg:w="1"/><text x="49.7329%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="49.4829%" y="437" width="0.0796%" height="15" fill="rgb(241,222,43)" fg:x="622" fg:w="1"/><text x="49.7329%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="49.5625%" y="453" width="0.0796%" height="15" fill="rgb(233,115,3)" fg:x="623" fg:w="1"/><text x="49.8125%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="49.5625%" y="437" width="0.0796%" height="15" fill="rgb(215,165,25)" fg:x="623" fg:w="1"/><text x="49.8125%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="49.5625%" y="421" width="0.0796%" height="15" fill="rgb(234,179,6)" fg:x="623" fg:w="1"/><text x="49.8125%" y="431.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="49.5625%" y="581" width="0.1591%" height="15" fill="rgb(215,82,23)" fg:x="623" fg:w="2"/><text x="49.8125%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="49.5625%" y="565" width="0.1591%" height="15" fill="rgb(211,47,18)" fg:x="623" fg:w="2"/><text x="49.8125%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="49.5625%" y="549" width="0.1591%" height="15" fill="rgb(248,17,9)" fg:x="623" fg:w="2"/><text x="49.8125%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="49.5625%" y="533" width="0.1591%" height="15" fill="rgb(210,212,12)" fg:x="623" fg:w="2"/><text x="49.8125%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="49.5625%" y="517" width="0.1591%" height="15" fill="rgb(230,135,45)" fg:x="623" fg:w="2"/><text x="49.8125%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="49.5625%" y="501" width="0.1591%" height="15" fill="rgb(214,121,41)" fg:x="623" fg:w="2"/><text x="49.8125%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="49.5625%" y="485" width="0.1591%" height="15" fill="rgb(239,165,45)" fg:x="623" fg:w="2"/><text x="49.8125%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="49.5625%" y="469" width="0.1591%" height="15" fill="rgb(214,85,51)" fg:x="623" fg:w="2"/><text x="49.8125%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.6420%" y="453" width="0.0796%" height="15" fill="rgb(223,90,27)" fg:x="624" fg:w="1"/><text x="49.8920%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (23 samples, 1.83%)</title><rect x="47.9714%" y="645" width="1.8298%" height="15" fill="rgb(244,84,11)" fg:x="603" fg:w="23"/><text x="48.2214%" y="655.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (23 samples, 1.83%)</title><rect x="47.9714%" y="629" width="1.8298%" height="15" fill="rgb(253,41,47)" fg:x="603" fg:w="23"/><text x="48.2214%" y="639.50">p..</text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="49.5625%" y="613" width="0.2387%" height="15" fill="rgb(232,39,5)" fg:x="623" fg:w="3"/><text x="49.8125%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="49.5625%" y="597" width="0.2387%" height="15" fill="rgb(211,93,4)" fg:x="623" fg:w="3"/><text x="49.8125%" y="607.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="49.7216%" y="581" width="0.0796%" height="15" fill="rgb(219,50,49)" fg:x="625" fg:w="1"/><text x="49.9716%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="49.9602%" y="613" width="0.0796%" height="15" fill="rgb(232,80,19)" fg:x="628" fg:w="1"/><text x="50.2102%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="49.9602%" y="597" width="0.0796%" height="15" fill="rgb(215,227,39)" fg:x="628" fg:w="1"/><text x="50.2102%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="49.9602%" y="581" width="0.0796%" height="15" fill="rgb(211,99,12)" fg:x="628" fg:w="1"/><text x="50.2102%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="49.9602%" y="565" width="0.0796%" height="15" fill="rgb(214,158,5)" fg:x="628" fg:w="1"/><text x="50.2102%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.9602%" y="549" width="0.0796%" height="15" fill="rgb(242,19,53)" fg:x="628" fg:w="1"/><text x="50.2102%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.9602%" y="533" width="0.0796%" height="15" fill="rgb(208,18,20)" fg:x="628" fg:w="1"/><text x="50.2102%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.9602%" y="517" width="0.0796%" height="15" fill="rgb(250,44,11)" fg:x="628" fg:w="1"/><text x="50.2102%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.9602%" y="501" width="0.0796%" height="15" fill="rgb(238,159,13)" fg:x="628" fg:w="1"/><text x="50.2102%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.9602%" y="485" width="0.0796%" height="15" fill="rgb(231,74,18)" fg:x="628" fg:w="1"/><text x="50.2102%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.9602%" y="469" width="0.0796%" height="15" fill="rgb(229,219,45)" fg:x="628" fg:w="1"/><text x="50.2102%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.9602%" y="453" width="0.0796%" height="15" fill="rgb(210,221,1)" fg:x="628" fg:w="1"/><text x="50.2102%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.9602%" y="437" width="0.0796%" height="15" fill="rgb(209,60,51)" fg:x="628" fg:w="1"/><text x="50.2102%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.9602%" y="421" width="0.0796%" height="15" fill="rgb(252,97,34)" fg:x="628" fg:w="1"/><text x="50.2102%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9602%" y="405" width="0.0796%" height="15" fill="rgb(243,211,37)" fg:x="628" fg:w="1"/><text x="50.2102%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9602%" y="389" width="0.0796%" height="15" fill="rgb(210,229,37)" fg:x="628" fg:w="1"/><text x="50.2102%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.9602%" y="373" width="0.0796%" height="15" fill="rgb(220,208,43)" fg:x="628" fg:w="1"/><text x="50.2102%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.9602%" y="357" width="0.0796%" height="15" fill="rgb(218,118,50)" fg:x="628" fg:w="1"/><text x="50.2102%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.9602%" y="341" width="0.0796%" height="15" fill="rgb(254,169,52)" fg:x="628" fg:w="1"/><text x="50.2102%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.9602%" y="325" width="0.0796%" height="15" fill="rgb(221,214,37)" fg:x="628" fg:w="1"/><text x="50.2102%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.9602%" y="309" width="0.0796%" height="15" fill="rgb(254,186,32)" fg:x="628" fg:w="1"/><text x="50.2102%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.9602%" y="293" width="0.0796%" height="15" fill="rgb(215,144,43)" fg:x="628" fg:w="1"/><text x="50.2102%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.9602%" y="277" width="0.0796%" height="15" fill="rgb(252,21,46)" fg:x="628" fg:w="1"/><text x="50.2102%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.9602%" y="261" width="0.0796%" height="15" fill="rgb(207,166,46)" fg:x="628" fg:w="1"/><text x="50.2102%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.9602%" y="245" width="0.0796%" height="15" fill="rgb(253,37,49)" fg:x="628" fg:w="1"/><text x="50.2102%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9602%" y="229" width="0.0796%" height="15" fill="rgb(222,97,20)" fg:x="628" fg:w="1"/><text x="50.2102%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.0398%" y="565" width="0.0796%" height="15" fill="rgb(244,181,26)" fg:x="629" fg:w="1"/><text x="50.2898%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.0398%" y="549" width="0.0796%" height="15" fill="rgb(241,22,29)" fg:x="629" fg:w="1"/><text x="50.2898%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.0398%" y="533" width="0.0796%" height="15" fill="rgb(206,200,43)" fg:x="629" fg:w="1"/><text x="50.2898%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.0398%" y="517" width="0.0796%" height="15" fill="rgb(226,224,43)" fg:x="629" fg:w="1"/><text x="50.2898%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.0398%" y="501" width="0.0796%" height="15" fill="rgb(253,129,28)" fg:x="629" fg:w="1"/><text x="50.2898%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.0398%" y="485" width="0.0796%" height="15" fill="rgb(252,99,33)" fg:x="629" fg:w="1"/><text x="50.2898%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.0398%" y="469" width="0.0796%" height="15" fill="rgb(208,123,45)" fg:x="629" fg:w="1"/><text x="50.2898%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.0398%" y="453" width="0.0796%" height="15" fill="rgb(251,106,12)" fg:x="629" fg:w="1"/><text x="50.2898%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.0398%" y="437" width="0.0796%" height="15" fill="rgb(240,209,35)" fg:x="629" fg:w="1"/><text x="50.2898%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.0398%" y="421" width="0.0796%" height="15" fill="rgb(214,52,50)" fg:x="629" fg:w="1"/><text x="50.2898%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.0398%" y="405" width="0.0796%" height="15" fill="rgb(234,119,4)" fg:x="629" fg:w="1"/><text x="50.2898%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.0398%" y="389" width="0.0796%" height="15" fill="rgb(228,181,36)" fg:x="629" fg:w="1"/><text x="50.2898%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.0398%" y="373" width="0.0796%" height="15" fill="rgb(213,171,42)" fg:x="629" fg:w="1"/><text x="50.2898%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="50.0398%" y="613" width="0.1591%" height="15" fill="rgb(239,14,41)" fg:x="629" fg:w="2"/><text x="50.2898%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="50.0398%" y="597" width="0.1591%" height="15" fill="rgb(239,111,46)" fg:x="629" fg:w="2"/><text x="50.2898%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="50.0398%" y="581" width="0.1591%" height="15" fill="rgb(214,72,7)" fg:x="629" fg:w="2"/><text x="50.2898%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.1193%" y="565" width="0.0796%" height="15" fill="rgb(221,114,1)" fg:x="630" fg:w="1"/><text x="50.3693%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.1193%" y="549" width="0.0796%" height="15" fill="rgb(213,143,14)" fg:x="630" fg:w="1"/><text x="50.3693%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.1193%" y="533" width="0.0796%" height="15" fill="rgb(220,221,53)" fg:x="630" fg:w="1"/><text x="50.3693%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.1193%" y="517" width="0.0796%" height="15" fill="rgb(236,189,27)" fg:x="630" fg:w="1"/><text x="50.3693%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="50.1193%" y="501" width="0.0796%" height="15" fill="rgb(252,139,49)" fg:x="630" fg:w="1"/><text x="50.3693%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.1193%" y="485" width="0.0796%" height="15" fill="rgb(231,158,33)" fg:x="630" fg:w="1"/><text x="50.3693%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.1193%" y="469" width="0.0796%" height="15" fill="rgb(207,201,15)" fg:x="630" fg:w="1"/><text x="50.3693%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.1193%" y="453" width="0.0796%" height="15" fill="rgb(218,43,48)" fg:x="630" fg:w="1"/><text x="50.3693%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.1193%" y="437" width="0.0796%" height="15" fill="rgb(244,63,52)" fg:x="630" fg:w="1"/><text x="50.3693%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.1193%" y="421" width="0.0796%" height="15" fill="rgb(236,60,17)" fg:x="630" fg:w="1"/><text x="50.3693%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="50.1989%" y="565" width="0.0796%" height="15" fill="rgb(205,206,29)" fg:x="631" fg:w="1"/><text x="50.4489%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="50.1989%" y="549" width="0.0796%" height="15" fill="rgb(205,209,35)" fg:x="631" fg:w="1"/><text x="50.4489%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.1989%" y="533" width="0.0796%" height="15" fill="rgb(227,112,14)" fg:x="631" fg:w="1"/><text x="50.4489%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.1989%" y="517" width="0.0796%" height="15" fill="rgb(248,151,9)" fg:x="631" fg:w="1"/><text x="50.4489%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.1989%" y="501" width="0.0796%" height="15" fill="rgb(247,45,40)" fg:x="631" fg:w="1"/><text x="50.4489%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.1989%" y="485" width="0.0796%" height="15" fill="rgb(232,185,16)" fg:x="631" fg:w="1"/><text x="50.4489%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="50.1989%" y="469" width="0.0796%" height="15" fill="rgb(215,45,44)" fg:x="631" fg:w="1"/><text x="50.4489%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.1989%" y="453" width="0.0796%" height="15" fill="rgb(206,69,32)" fg:x="631" fg:w="1"/><text x="50.4489%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.1989%" y="437" width="0.0796%" height="15" fill="rgb(233,98,50)" fg:x="631" fg:w="1"/><text x="50.4489%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.1989%" y="421" width="0.0796%" height="15" fill="rgb(232,217,52)" fg:x="631" fg:w="1"/><text x="50.4489%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.1989%" y="405" width="0.0796%" height="15" fill="rgb(250,42,51)" fg:x="631" fg:w="1"/><text x="50.4489%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.2784%" y="549" width="0.0796%" height="15" fill="rgb(241,200,26)" fg:x="632" fg:w="1"/><text x="50.5284%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="50.1989%" y="597" width="0.3182%" height="15" fill="rgb(207,10,32)" fg:x="631" fg:w="4"/><text x="50.4489%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="50.1989%" y="581" width="0.3182%" height="15" fill="rgb(214,63,15)" fg:x="631" fg:w="4"/><text x="50.4489%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="50.2784%" y="565" width="0.2387%" height="15" fill="rgb(234,176,14)" fg:x="632" fg:w="3"/><text x="50.5284%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="50.3580%" y="549" width="0.1591%" height="15" fill="rgb(226,104,52)" fg:x="633" fg:w="2"/><text x="50.6080%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="50.3580%" y="533" width="0.1591%" height="15" fill="rgb(211,222,1)" fg:x="633" fg:w="2"/><text x="50.6080%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="50.3580%" y="517" width="0.1591%" height="15" fill="rgb(237,7,3)" fg:x="633" fg:w="2"/><text x="50.6080%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="50.3580%" y="501" width="0.1591%" height="15" fill="rgb(218,143,7)" fg:x="633" fg:w="2"/><text x="50.6080%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="50.3580%" y="485" width="0.1591%" height="15" fill="rgb(208,25,22)" fg:x="633" fg:w="2"/><text x="50.6080%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="50.3580%" y="469" width="0.1591%" height="15" fill="rgb(228,127,16)" fg:x="633" fg:w="2"/><text x="50.6080%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="50.4375%" y="453" width="0.0796%" height="15" fill="rgb(237,86,27)" fg:x="634" fg:w="1"/><text x="50.6875%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="50.4375%" y="437" width="0.0796%" height="15" fill="rgb(207,125,19)" fg:x="634" fg:w="1"/><text x="50.6875%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4375%" y="421" width="0.0796%" height="15" fill="rgb(243,195,0)" fg:x="634" fg:w="1"/><text x="50.6875%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="49.8807%" y="629" width="0.7160%" height="15" fill="rgb(230,95,18)" fg:x="627" fg:w="9"/><text x="50.1307%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="50.1989%" y="613" width="0.3978%" height="15" fill="rgb(232,157,21)" fg:x="631" fg:w="5"/><text x="50.4489%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="50.5171%" y="597" width="0.0796%" height="15" fill="rgb(212,120,50)" fg:x="635" fg:w="1"/><text x="50.7671%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.5171%" y="581" width="0.0796%" height="15" fill="rgb(222,204,44)" fg:x="635" fg:w="1"/><text x="50.7671%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.5171%" y="565" width="0.0796%" height="15" fill="rgb(236,6,33)" fg:x="635" fg:w="1"/><text x="50.7671%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="50.5171%" y="549" width="0.0796%" height="15" fill="rgb(247,11,38)" fg:x="635" fg:w="1"/><text x="50.7671%" y="559.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="50.5967%" y="597" width="0.0796%" height="15" fill="rgb(215,111,0)" fg:x="636" fg:w="1"/><text x="50.8467%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.5967%" y="581" width="0.0796%" height="15" fill="rgb(211,65,46)" fg:x="636" fg:w="1"/><text x="50.8467%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.5967%" y="565" width="0.0796%" height="15" fill="rgb(216,5,12)" fg:x="636" fg:w="1"/><text x="50.8467%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="50.5967%" y="549" width="0.0796%" height="15" fill="rgb(226,7,2)" fg:x="636" fg:w="1"/><text x="50.8467%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.6762%" y="565" width="0.0796%" height="15" fill="rgb(242,116,12)" fg:x="637" fg:w="1"/><text x="50.9262%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.6762%" y="549" width="0.0796%" height="15" fill="rgb(249,209,7)" fg:x="637" fg:w="1"/><text x="50.9262%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.6762%" y="533" width="0.0796%" height="15" fill="rgb(232,73,17)" fg:x="637" fg:w="1"/><text x="50.9262%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="50.5967%" y="629" width="0.2387%" height="15" fill="rgb(214,13,32)" fg:x="636" fg:w="3"/><text x="50.8467%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="50.5967%" y="613" width="0.2387%" height="15" fill="rgb(221,125,10)" fg:x="636" fg:w="3"/><text x="50.8467%" y="623.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="50.6762%" y="597" width="0.1591%" height="15" fill="rgb(246,7,44)" fg:x="637" fg:w="2"/><text x="50.9262%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="50.6762%" y="581" width="0.1591%" height="15" fill="rgb(239,18,35)" fg:x="637" fg:w="2"/><text x="50.9262%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="50.7558%" y="565" width="0.0796%" height="15" fill="rgb(250,222,16)" fg:x="638" fg:w="1"/><text x="51.0058%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="50.7558%" y="549" width="0.0796%" height="15" fill="rgb(219,100,8)" fg:x="638" fg:w="1"/><text x="51.0058%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.7558%" y="533" width="0.0796%" height="15" fill="rgb(240,62,13)" fg:x="638" fg:w="1"/><text x="51.0058%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="50.8353%" y="613" width="0.0796%" height="15" fill="rgb(253,194,2)" fg:x="639" fg:w="1"/><text x="51.0853%" y="623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="50.8353%" y="597" width="0.0796%" height="15" fill="rgb(235,58,31)" fg:x="639" fg:w="1"/><text x="51.0853%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="50.8353%" y="581" width="0.0796%" height="15" fill="rgb(231,37,11)" fg:x="639" fg:w="1"/><text x="51.0853%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="50.9149%" y="581" width="0.0796%" height="15" fill="rgb(235,133,0)" fg:x="640" fg:w="1"/><text x="51.1649%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="50.9149%" y="565" width="0.0796%" height="15" fill="rgb(212,185,40)" fg:x="640" fg:w="1"/><text x="51.1649%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="50.9149%" y="549" width="0.0796%" height="15" fill="rgb(216,68,42)" fg:x="640" fg:w="1"/><text x="51.1649%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.9149%" y="533" width="0.0796%" height="15" fill="rgb(239,81,4)" fg:x="640" fg:w="1"/><text x="51.1649%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.9149%" y="517" width="0.0796%" height="15" fill="rgb(206,86,6)" fg:x="640" fg:w="1"/><text x="51.1649%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.9149%" y="501" width="0.0796%" height="15" fill="rgb(249,95,27)" fg:x="640" fg:w="1"/><text x="51.1649%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.9149%" y="485" width="0.0796%" height="15" fill="rgb(205,155,45)" fg:x="640" fg:w="1"/><text x="51.1649%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="50.9149%" y="469" width="0.0796%" height="15" fill="rgb(213,55,42)" fg:x="640" fg:w="1"/><text x="51.1649%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.9149%" y="453" width="0.0796%" height="15" fill="rgb(249,197,4)" fg:x="640" fg:w="1"/><text x="51.1649%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (567 samples, 45.11%)</title><rect x="5.9666%" y="661" width="45.1074%" height="15" fill="rgb(212,128,32)" fg:x="75" fg:w="567"/><text x="6.2166%" y="671.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (16 samples, 1.27%)</title><rect x="49.8011%" y="645" width="1.2729%" height="15" fill="rgb(252,47,30)" fg:x="626" fg:w="16"/><text x="50.0511%" y="655.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="50.8353%" y="629" width="0.2387%" height="15" fill="rgb(209,79,18)" fg:x="639" fg:w="3"/><text x="51.0853%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="50.9149%" y="613" width="0.1591%" height="15" fill="rgb(225,81,38)" fg:x="640" fg:w="2"/><text x="51.1649%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="50.9149%" y="597" width="0.1591%" height="15" fill="rgb(205,95,16)" fg:x="640" fg:w="2"/><text x="51.1649%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="50.9944%" y="581" width="0.0796%" height="15" fill="rgb(214,30,4)" fg:x="641" fg:w="1"/><text x="51.2444%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="50.9944%" y="565" width="0.0796%" height="15" fill="rgb(232,137,22)" fg:x="641" fg:w="1"/><text x="51.2444%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="50.9944%" y="549" width="0.0796%" height="15" fill="rgb(232,156,19)" fg:x="641" fg:w="1"/><text x="51.2444%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.1535%" y="629" width="0.1591%" height="15" fill="rgb(248,157,26)" fg:x="643" fg:w="2"/><text x="51.4035%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.1535%" y="613" width="0.1591%" height="15" fill="rgb(242,24,3)" fg:x="643" fg:w="2"/><text x="51.4035%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.1535%" y="597" width="0.1591%" height="15" fill="rgb(218,195,48)" fg:x="643" fg:w="2"/><text x="51.4035%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.1535%" y="581" width="0.1591%" height="15" fill="rgb(214,193,36)" fg:x="643" fg:w="2"/><text x="51.4035%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.1535%" y="565" width="0.1591%" height="15" fill="rgb(242,110,40)" fg:x="643" fg:w="2"/><text x="51.4035%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.1535%" y="549" width="0.1591%" height="15" fill="rgb(233,150,26)" fg:x="643" fg:w="2"/><text x="51.4035%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.1535%" y="533" width="0.1591%" height="15" fill="rgb(239,200,30)" fg:x="643" fg:w="2"/><text x="51.4035%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="51.1535%" y="517" width="0.1591%" height="15" fill="rgb(226,28,11)" fg:x="643" fg:w="2"/><text x="51.4035%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="51.1535%" y="501" width="0.1591%" height="15" fill="rgb(220,26,48)" fg:x="643" fg:w="2"/><text x="51.4035%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="51.1535%" y="485" width="0.1591%" height="15" fill="rgb(232,10,11)" fg:x="643" fg:w="2"/><text x="51.4035%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="51.1535%" y="469" width="0.1591%" height="15" fill="rgb(252,143,50)" fg:x="643" fg:w="2"/><text x="51.4035%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.1535%" y="453" width="0.1591%" height="15" fill="rgb(206,58,22)" fg:x="643" fg:w="2"/><text x="51.4035%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="51.1535%" y="645" width="0.3182%" height="15" fill="rgb(250,9,45)" fg:x="643" fg:w="4"/><text x="51.4035%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.3126%" y="629" width="0.1591%" height="15" fill="rgb(225,148,14)" fg:x="645" fg:w="2"/><text x="51.5626%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="51.4718%" y="645" width="0.0796%" height="15" fill="rgb(205,178,40)" fg:x="647" fg:w="1"/><text x="51.7218%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="51.4718%" y="629" width="0.0796%" height="15" fill="rgb(215,201,4)" fg:x="647" fg:w="1"/><text x="51.7218%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.4718%" y="613" width="0.0796%" height="15" fill="rgb(219,223,24)" fg:x="647" fg:w="1"/><text x="51.7218%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.4718%" y="597" width="0.0796%" height="15" fill="rgb(217,19,31)" fg:x="647" fg:w="1"/><text x="51.7218%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.4718%" y="581" width="0.0796%" height="15" fill="rgb(235,33,3)" fg:x="647" fg:w="1"/><text x="51.7218%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="51.4718%" y="565" width="0.0796%" height="15" fill="rgb(221,39,18)" fg:x="647" fg:w="1"/><text x="51.7218%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="51.4718%" y="549" width="0.0796%" height="15" fill="rgb(242,162,33)" fg:x="647" fg:w="1"/><text x="51.7218%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.4718%" y="533" width="0.0796%" height="15" fill="rgb(233,215,28)" fg:x="647" fg:w="1"/><text x="51.7218%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.4718%" y="517" width="0.0796%" height="15" fill="rgb(212,117,9)" fg:x="647" fg:w="1"/><text x="51.7218%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="51.4718%" y="501" width="0.0796%" height="15" fill="rgb(237,70,47)" fg:x="647" fg:w="1"/><text x="51.7218%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="51.5513%" y="613" width="0.0796%" height="15" fill="rgb(206,177,13)" fg:x="648" fg:w="1"/><text x="51.8013%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="51.6309%" y="613" width="0.1591%" height="15" fill="rgb(209,174,33)" fg:x="649" fg:w="2"/><text x="51.8809%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="51.6309%" y="597" width="0.1591%" height="15" fill="rgb(226,6,11)" fg:x="649" fg:w="2"/><text x="51.8809%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="51.6309%" y="581" width="0.1591%" height="15" fill="rgb(240,214,6)" fg:x="649" fg:w="2"/><text x="51.8809%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7104%" y="565" width="0.0796%" height="15" fill="rgb(254,214,40)" fg:x="650" fg:w="1"/><text x="51.9604%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7104%" y="549" width="0.0796%" height="15" fill="rgb(230,187,15)" fg:x="650" fg:w="1"/><text x="51.9604%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.7104%" y="533" width="0.0796%" height="15" fill="rgb(250,11,27)" fg:x="650" fg:w="1"/><text x="51.9604%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.7104%" y="517" width="0.0796%" height="15" fill="rgb(243,107,19)" fg:x="650" fg:w="1"/><text x="51.9604%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.7104%" y="501" width="0.0796%" height="15" fill="rgb(253,66,26)" fg:x="650" fg:w="1"/><text x="51.9604%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="51.7104%" y="485" width="0.0796%" height="15" fill="rgb(228,43,8)" fg:x="650" fg:w="1"/><text x="51.9604%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.7104%" y="469" width="0.0796%" height="15" fill="rgb(232,197,36)" fg:x="650" fg:w="1"/><text x="51.9604%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="51.7900%" y="581" width="0.0796%" height="15" fill="rgb(221,182,31)" fg:x="651" fg:w="1"/><text x="52.0400%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="51.7900%" y="565" width="0.0796%" height="15" fill="rgb(244,25,36)" fg:x="651" fg:w="1"/><text x="52.0400%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.7900%" y="549" width="0.0796%" height="15" fill="rgb(247,101,19)" fg:x="651" fg:w="1"/><text x="52.0400%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.7900%" y="533" width="0.0796%" height="15" fill="rgb(223,117,19)" fg:x="651" fg:w="1"/><text x="52.0400%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.7900%" y="517" width="0.0796%" height="15" fill="rgb(249,63,38)" fg:x="651" fg:w="1"/><text x="52.0400%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="51.8695%" y="549" width="0.1591%" height="15" fill="rgb(220,143,23)" fg:x="652" fg:w="2"/><text x="52.1195%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.9491%" y="533" width="0.0796%" height="15" fill="rgb(252,183,22)" fg:x="653" fg:w="1"/><text x="52.1991%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="51.8695%" y="565" width="0.2387%" height="15" fill="rgb(243,176,15)" fg:x="652" fg:w="3"/><text x="52.1195%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.0286%" y="549" width="0.0796%" height="15" fill="rgb(244,204,46)" fg:x="654" fg:w="1"/><text x="52.2786%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="52.0286%" y="533" width="0.0796%" height="15" fill="rgb(227,28,54)" fg:x="654" fg:w="1"/><text x="52.2786%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="52.2673%" y="549" width="0.1591%" height="15" fill="rgb(231,10,15)" fg:x="657" fg:w="2"/><text x="52.5173%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="52.4264%" y="549" width="0.0796%" height="15" fill="rgb(210,200,17)" fg:x="659" fg:w="1"/><text x="52.6764%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.4264%" y="533" width="0.0796%" height="15" fill="rgb(251,106,46)" fg:x="659" fg:w="1"/><text x="52.6764%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="52.4264%" y="517" width="0.0796%" height="15" fill="rgb(218,211,15)" fg:x="659" fg:w="1"/><text x="52.6764%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.4264%" y="501" width="0.0796%" height="15" fill="rgb(239,62,10)" fg:x="659" fg:w="1"/><text x="52.6764%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.7446%" y="501" width="0.1591%" height="15" fill="rgb(225,53,53)" fg:x="663" fg:w="2"/><text x="52.9946%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="52.7446%" y="485" width="0.1591%" height="15" fill="rgb(207,16,24)" fg:x="663" fg:w="2"/><text x="52.9946%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="52.7446%" y="469" width="0.1591%" height="15" fill="rgb(217,52,28)" fg:x="663" fg:w="2"/><text x="52.9946%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="52.7446%" y="453" width="0.1591%" height="15" fill="rgb(246,1,5)" fg:x="663" fg:w="2"/><text x="52.9946%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="52.5060%" y="549" width="0.4773%" height="15" fill="rgb(221,29,26)" fg:x="660" fg:w="6"/><text x="52.7560%" y="559.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="52.5855%" y="533" width="0.3978%" height="15" fill="rgb(250,133,32)" fg:x="661" fg:w="5"/><text x="52.8355%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="52.7446%" y="517" width="0.2387%" height="15" fill="rgb(236,63,16)" fg:x="663" fg:w="3"/><text x="52.9946%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="52.9037%" y="501" width="0.0796%" height="15" fill="rgb(231,159,14)" fg:x="665" fg:w="1"/><text x="53.1537%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="53.0628%" y="501" width="0.0796%" height="15" fill="rgb(207,102,36)" fg:x="667" fg:w="1"/><text x="53.3128%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="53.1424%" y="501" width="0.1591%" height="15" fill="rgb(230,224,31)" fg:x="668" fg:w="2"/><text x="53.3924%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="53.1424%" y="485" width="0.1591%" height="15" fill="rgb(215,182,16)" fg:x="668" fg:w="2"/><text x="53.3924%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="53.1424%" y="469" width="0.1591%" height="15" fill="rgb(226,113,2)" fg:x="668" fg:w="2"/><text x="53.3924%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="53.0628%" y="533" width="0.3978%" height="15" fill="rgb(241,18,35)" fg:x="667" fg:w="5"/><text x="53.3128%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="53.0628%" y="517" width="0.3978%" height="15" fill="rgb(240,165,44)" fg:x="667" fg:w="5"/><text x="53.3128%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="53.3015%" y="501" width="0.1591%" height="15" fill="rgb(229,130,47)" fg:x="670" fg:w="2"/><text x="53.5515%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.3811%" y="485" width="0.0796%" height="15" fill="rgb(223,93,7)" fg:x="671" fg:w="1"/><text x="53.6311%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.3811%" y="469" width="0.0796%" height="15" fill="rgb(205,180,36)" fg:x="671" fg:w="1"/><text x="53.6311%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="53.4606%" y="533" width="0.1591%" height="15" fill="rgb(221,103,28)" fg:x="672" fg:w="2"/><text x="53.7106%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="53.5402%" y="517" width="0.0796%" height="15" fill="rgb(212,4,3)" fg:x="673" fg:w="1"/><text x="53.7902%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.5402%" y="501" width="0.0796%" height="15" fill="rgb(209,221,53)" fg:x="673" fg:w="1"/><text x="53.7902%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.5402%" y="485" width="0.0796%" height="15" fill="rgb(233,229,52)" fg:x="673" fg:w="1"/><text x="53.7902%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="53.6993%" y="517" width="0.3182%" height="15" fill="rgb(254,127,37)" fg:x="675" fg:w="4"/><text x="53.9493%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="53.7788%" y="501" width="0.2387%" height="15" fill="rgb(207,161,26)" fg:x="676" fg:w="3"/><text x="54.0288%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.9379%" y="485" width="0.0796%" height="15" fill="rgb(223,75,5)" fg:x="678" fg:w="1"/><text x="54.1879%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.0971%" y="501" width="0.0796%" height="15" fill="rgb(235,115,52)" fg:x="680" fg:w="1"/><text x="54.3471%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="54.1766%" y="501" width="0.3182%" height="15" fill="rgb(240,91,46)" fg:x="681" fg:w="4"/><text x="54.4266%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="54.2562%" y="485" width="0.2387%" height="15" fill="rgb(251,144,21)" fg:x="682" fg:w="3"/><text x="54.5062%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="54.3357%" y="469" width="0.1591%" height="15" fill="rgb(247,220,47)" fg:x="683" fg:w="2"/><text x="54.5857%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.4153%" y="453" width="0.0796%" height="15" fill="rgb(253,122,1)" fg:x="684" fg:w="1"/><text x="54.6653%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="54.4948%" y="485" width="0.2387%" height="15" fill="rgb(221,0,24)" fg:x="685" fg:w="3"/><text x="54.7448%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="54.5744%" y="469" width="0.1591%" height="15" fill="rgb(220,204,54)" fg:x="686" fg:w="2"/><text x="54.8244%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="54.6539%" y="453" width="0.0796%" height="15" fill="rgb(205,96,25)" fg:x="687" fg:w="1"/><text x="54.9039%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="54.7335%" y="469" width="0.0796%" height="15" fill="rgb(247,77,20)" fg:x="688" fg:w="1"/><text x="54.9835%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="54.7335%" y="453" width="0.0796%" height="15" fill="rgb(245,151,8)" fg:x="688" fg:w="1"/><text x="54.9835%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="54.7335%" y="437" width="0.0796%" height="15" fill="rgb(242,158,39)" fg:x="688" fg:w="1"/><text x="54.9835%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.7335%" y="421" width="0.0796%" height="15" fill="rgb(222,214,50)" fg:x="688" fg:w="1"/><text x="54.9835%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="54.8130%" y="469" width="0.5569%" height="15" fill="rgb(229,60,39)" fg:x="689" fg:w="7"/><text x="55.0630%" y="479.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="54.8926%" y="453" width="0.4773%" height="15" fill="rgb(240,148,18)" fg:x="690" fg:w="6"/><text x="55.1426%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="54.8926%" y="437" width="0.4773%" height="15" fill="rgb(215,96,11)" fg:x="690" fg:w="6"/><text x="55.1426%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="54.8926%" y="421" width="0.4773%" height="15" fill="rgb(238,162,53)" fg:x="690" fg:w="6"/><text x="55.1426%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.48%)</title><rect x="54.8926%" y="405" width="0.4773%" height="15" fill="rgb(214,83,18)" fg:x="690" fg:w="6"/><text x="55.1426%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.48%)</title><rect x="54.8926%" y="389" width="0.4773%" height="15" fill="rgb(248,117,24)" fg:x="690" fg:w="6"/><text x="55.1426%" y="399.50"></text></g><g><title>realloc (6 samples, 0.48%)</title><rect x="54.8926%" y="373" width="0.4773%" height="15" fill="rgb(238,190,6)" fg:x="690" fg:w="6"/><text x="55.1426%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="54.7335%" y="485" width="0.7160%" height="15" fill="rgb(213,51,6)" fg:x="688" fg:w="9"/><text x="54.9835%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="55.3699%" y="469" width="0.0796%" height="15" fill="rgb(212,136,1)" fg:x="696" fg:w="1"/><text x="55.6199%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="55.3699%" y="453" width="0.0796%" height="15" fill="rgb(221,192,14)" fg:x="696" fg:w="1"/><text x="55.6199%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="55.3699%" y="437" width="0.0796%" height="15" fill="rgb(244,38,54)" fg:x="696" fg:w="1"/><text x="55.6199%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.67%)</title><rect x="54.0175%" y="517" width="1.6706%" height="15" fill="rgb(240,45,28)" fg:x="679" fg:w="21"/><text x="54.2675%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="54.4948%" y="501" width="1.1933%" height="15" fill="rgb(240,123,12)" fg:x="685" fg:w="15"/><text x="54.7448%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="55.4495%" y="485" width="0.2387%" height="15" fill="rgb(216,14,30)" fg:x="697" fg:w="3"/><text x="55.6995%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="55.4495%" y="469" width="0.2387%" height="15" fill="rgb(212,50,24)" fg:x="697" fg:w="3"/><text x="55.6995%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="55.6086%" y="453" width="0.0796%" height="15" fill="rgb(253,229,47)" fg:x="699" fg:w="1"/><text x="55.8586%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.15%)</title><rect x="53.6197%" y="533" width="2.1480%" height="15" fill="rgb(214,26,17)" fg:x="674" fg:w="27"/><text x="53.8697%" y="543.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="55.6881%" y="517" width="0.0796%" height="15" fill="rgb(252,60,11)" fg:x="700" fg:w="1"/><text x="55.9381%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 2.94%)</title><rect x="52.9833%" y="549" width="2.9435%" height="15" fill="rgb(209,59,37)" fg:x="666" fg:w="37"/><text x="53.2333%" y="559.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="55.7677%" y="533" width="0.1591%" height="15" fill="rgb(228,126,53)" fg:x="701" fg:w="2"/><text x="56.0177%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="55.8473%" y="517" width="0.0796%" height="15" fill="rgb(233,99,2)" fg:x="702" fg:w="1"/><text x="56.0973%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="55.8473%" y="501" width="0.0796%" height="15" fill="rgb(217,106,34)" fg:x="702" fg:w="1"/><text x="56.0973%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (57 samples, 4.53%)</title><rect x="51.8695%" y="581" width="4.5346%" height="15" fill="rgb(222,46,19)" fg:x="652" fg:w="57"/><text x="52.1195%" y="591.50">&lt;serd..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (54 samples, 4.30%)</title><rect x="52.1082%" y="565" width="4.2959%" height="15" fill="rgb(251,87,31)" fg:x="655" fg:w="54"/><text x="52.3582%" y="575.50">serde..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="55.9268%" y="549" width="0.4773%" height="15" fill="rgb(213,70,51)" fg:x="703" fg:w="6"/><text x="56.1768%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="56.0859%" y="533" width="0.3182%" height="15" fill="rgb(229,144,18)" fg:x="705" fg:w="4"/><text x="56.3359%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="56.0859%" y="517" width="0.3182%" height="15" fill="rgb(254,60,26)" fg:x="705" fg:w="4"/><text x="56.3359%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="56.2450%" y="501" width="0.1591%" height="15" fill="rgb(243,127,51)" fg:x="707" fg:w="2"/><text x="56.4950%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="56.2450%" y="485" width="0.1591%" height="15" fill="rgb(221,51,25)" fg:x="707" fg:w="2"/><text x="56.4950%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="56.2450%" y="469" width="0.1591%" height="15" fill="rgb(205,42,7)" fg:x="707" fg:w="2"/><text x="56.4950%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="56.4837%" y="549" width="0.1591%" height="15" fill="rgb(236,177,48)" fg:x="710" fg:w="2"/><text x="56.7337%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="56.6428%" y="549" width="0.1591%" height="15" fill="rgb(226,79,31)" fg:x="712" fg:w="2"/><text x="56.8928%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="56.6428%" y="533" width="0.1591%" height="15" fill="rgb(216,170,12)" fg:x="712" fg:w="2"/><text x="56.8928%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.9610%" y="533" width="0.0796%" height="15" fill="rgb(208,62,51)" fg:x="716" fg:w="1"/><text x="57.2110%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.9610%" y="517" width="0.0796%" height="15" fill="rgb(254,129,9)" fg:x="716" fg:w="1"/><text x="57.2110%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="57.0406%" y="517" width="0.1591%" height="15" fill="rgb(243,209,31)" fg:x="717" fg:w="2"/><text x="57.2906%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="57.1997%" y="501" width="0.1591%" height="15" fill="rgb(213,159,23)" fg:x="719" fg:w="2"/><text x="57.4497%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="57.3588%" y="501" width="0.0796%" height="15" fill="rgb(249,77,39)" fg:x="721" fg:w="1"/><text x="57.6088%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="57.3588%" y="485" width="0.0796%" height="15" fill="rgb(230,13,33)" fg:x="721" fg:w="1"/><text x="57.6088%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.4383%" y="485" width="0.0796%" height="15" fill="rgb(215,215,7)" fg:x="722" fg:w="1"/><text x="57.6883%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.4383%" y="469" width="0.0796%" height="15" fill="rgb(222,92,25)" fg:x="722" fg:w="1"/><text x="57.6883%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.5179%" y="469" width="0.0796%" height="15" fill="rgb(215,173,22)" fg:x="723" fg:w="1"/><text x="57.7679%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.5975%" y="453" width="0.0796%" height="15" fill="rgb(247,205,52)" fg:x="724" fg:w="1"/><text x="57.8475%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.5975%" y="437" width="0.0796%" height="15" fill="rgb(240,210,37)" fg:x="724" fg:w="1"/><text x="57.8475%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.35%)</title><rect x="56.4041%" y="581" width="1.3524%" height="15" fill="rgb(224,13,10)" fg:x="709" fg:w="17"/><text x="56.6541%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.35%)</title><rect x="56.4041%" y="565" width="1.3524%" height="15" fill="rgb(209,48,33)" fg:x="709" fg:w="17"/><text x="56.6541%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="56.8019%" y="549" width="0.9547%" height="15" fill="rgb(228,219,23)" fg:x="714" fg:w="12"/><text x="57.0519%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="57.0406%" y="533" width="0.7160%" height="15" fill="rgb(239,46,49)" fg:x="717" fg:w="9"/><text x="57.2906%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="57.1997%" y="517" width="0.5569%" height="15" fill="rgb(206,172,51)" fg:x="719" fg:w="7"/><text x="57.4497%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="57.4383%" y="501" width="0.3182%" height="15" fill="rgb(213,212,35)" fg:x="722" fg:w="4"/><text x="57.6883%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="57.5179%" y="485" width="0.2387%" height="15" fill="rgb(252,40,27)" fg:x="723" fg:w="3"/><text x="57.7679%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="57.5975%" y="469" width="0.1591%" height="15" fill="rgb(212,33,41)" fg:x="724" fg:w="2"/><text x="57.8475%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.6770%" y="453" width="0.0796%" height="15" fill="rgb(232,160,27)" fg:x="725" fg:w="1"/><text x="57.9270%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="57.7566%" y="549" width="0.0796%" height="15" fill="rgb(244,160,20)" fg:x="726" fg:w="1"/><text x="58.0066%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.7566%" y="533" width="0.0796%" height="15" fill="rgb(205,66,20)" fg:x="726" fg:w="1"/><text x="58.0066%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="57.9157%" y="517" width="0.1591%" height="15" fill="rgb(236,158,6)" fg:x="728" fg:w="2"/><text x="58.1657%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.9952%" y="501" width="0.0796%" height="15" fill="rgb(232,25,36)" fg:x="729" fg:w="1"/><text x="58.2452%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="58.1543%" y="501" width="0.1591%" height="15" fill="rgb(220,153,35)" fg:x="731" fg:w="2"/><text x="58.4043%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.3930%" y="485" width="0.0796%" height="15" fill="rgb(216,5,8)" fg:x="734" fg:w="1"/><text x="58.6430%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.4726%" y="485" width="0.0796%" height="15" fill="rgb(240,97,3)" fg:x="735" fg:w="1"/><text x="58.7226%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.5521%" y="469" width="0.0796%" height="15" fill="rgb(220,99,26)" fg:x="736" fg:w="1"/><text x="58.8021%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.5521%" y="453" width="0.0796%" height="15" fill="rgb(237,96,2)" fg:x="736" fg:w="1"/><text x="58.8021%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.6317%" y="453" width="0.0796%" height="15" fill="rgb(217,197,47)" fg:x="737" fg:w="1"/><text x="58.8817%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.6317%" y="437" width="0.0796%" height="15" fill="rgb(252,133,54)" fg:x="737" fg:w="1"/><text x="58.8817%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.7112%" y="437" width="0.0796%" height="15" fill="rgb(233,37,30)" fg:x="738" fg:w="1"/><text x="58.9612%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.7112%" y="421" width="0.0796%" height="15" fill="rgb(239,182,12)" fg:x="738" fg:w="1"/><text x="58.9612%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="57.8361%" y="549" width="1.0342%" height="15" fill="rgb(245,83,39)" fg:x="727" fg:w="13"/><text x="58.0861%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.03%)</title><rect x="57.8361%" y="533" width="1.0342%" height="15" fill="rgb(222,109,36)" fg:x="727" fg:w="13"/><text x="58.0861%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="58.0748%" y="517" width="0.7955%" height="15" fill="rgb(237,95,44)" fg:x="730" fg:w="10"/><text x="58.3248%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="58.3134%" y="501" width="0.5569%" height="15" fill="rgb(216,36,54)" fg:x="733" fg:w="7"/><text x="58.5634%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="58.5521%" y="485" width="0.3182%" height="15" fill="rgb(236,164,3)" fg:x="736" fg:w="4"/><text x="58.8021%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="58.6317%" y="469" width="0.2387%" height="15" fill="rgb(223,15,21)" fg:x="737" fg:w="3"/><text x="58.8817%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="58.7112%" y="453" width="0.1591%" height="15" fill="rgb(239,191,12)" fg:x="738" fg:w="2"/><text x="58.9612%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.7908%" y="437" width="0.0796%" height="15" fill="rgb(231,191,37)" fg:x="739" fg:w="1"/><text x="59.0408%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.7908%" y="421" width="0.0796%" height="15" fill="rgb(209,155,36)" fg:x="739" fg:w="1"/><text x="59.0408%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.7908%" y="405" width="0.0796%" height="15" fill="rgb(216,222,49)" fg:x="739" fg:w="1"/><text x="59.0408%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="58.8703%" y="533" width="0.1591%" height="15" fill="rgb(218,181,2)" fg:x="740" fg:w="2"/><text x="59.1203%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="58.8703%" y="517" width="0.1591%" height="15" fill="rgb(239,125,9)" fg:x="740" fg:w="2"/><text x="59.1203%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (17 samples, 1.35%)</title><rect x="57.7566%" y="565" width="1.3524%" height="15" fill="rgb(233,103,7)" fg:x="726" fg:w="17"/><text x="58.0066%" y="575.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="58.8703%" y="549" width="0.2387%" height="15" fill="rgb(209,223,5)" fg:x="740" fg:w="3"/><text x="59.1203%" y="559.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="59.0294%" y="533" width="0.0796%" height="15" fill="rgb(234,71,27)" fg:x="742" fg:w="1"/><text x="59.2794%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.0294%" y="517" width="0.0796%" height="15" fill="rgb(251,202,16)" fg:x="742" fg:w="1"/><text x="59.2794%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1885%" y="533" width="0.0796%" height="15" fill="rgb(231,180,0)" fg:x="744" fg:w="1"/><text x="59.4385%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.2681%" y="533" width="0.1591%" height="15" fill="rgb(223,58,28)" fg:x="745" fg:w="2"/><text x="59.5181%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.3477%" y="517" width="0.0796%" height="15" fill="rgb(250,34,24)" fg:x="746" fg:w="1"/><text x="59.5977%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.3477%" y="501" width="0.0796%" height="15" fill="rgb(235,24,16)" fg:x="746" fg:w="1"/><text x="59.5977%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="59.4272%" y="533" width="0.0796%" height="15" fill="rgb(219,28,33)" fg:x="747" fg:w="1"/><text x="59.6772%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="59.4272%" y="517" width="0.0796%" height="15" fill="rgb(228,150,43)" fg:x="747" fg:w="1"/><text x="59.6772%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4272%" y="501" width="0.0796%" height="15" fill="rgb(221,228,36)" fg:x="747" fg:w="1"/><text x="59.6772%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="59.5068%" y="533" width="0.1591%" height="15" fill="rgb(232,116,17)" fg:x="748" fg:w="2"/><text x="59.7568%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="59.5863%" y="517" width="0.0796%" height="15" fill="rgb(220,110,51)" fg:x="749" fg:w="1"/><text x="59.8363%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="59.6659%" y="533" width="0.1591%" height="15" fill="rgb(207,26,25)" fg:x="750" fg:w="2"/><text x="59.9159%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="59.6659%" y="517" width="0.1591%" height="15" fill="rgb(223,58,19)" fg:x="750" fg:w="2"/><text x="59.9159%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.6659%" y="501" width="0.1591%" height="15" fill="rgb(234,125,39)" fg:x="750" fg:w="2"/><text x="59.9159%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7454%" y="485" width="0.0796%" height="15" fill="rgb(241,48,36)" fg:x="751" fg:w="1"/><text x="59.9954%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="60.0636%" y="517" width="0.0796%" height="15" fill="rgb(217,148,51)" fg:x="755" fg:w="1"/><text x="60.3136%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="60.1432%" y="501" width="0.0796%" height="15" fill="rgb(247,17,25)" fg:x="756" fg:w="1"/><text x="60.3932%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="60.2228%" y="501" width="0.0796%" height="15" fill="rgb(219,89,38)" fg:x="757" fg:w="1"/><text x="60.4728%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.3023%" y="485" width="0.1591%" height="15" fill="rgb(220,145,2)" fg:x="758" fg:w="2"/><text x="60.5523%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.3023%" y="469" width="0.1591%" height="15" fill="rgb(244,66,47)" fg:x="758" fg:w="2"/><text x="60.5523%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.3023%" y="453" width="0.1591%" height="15" fill="rgb(226,182,5)" fg:x="758" fg:w="2"/><text x="60.5523%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="60.4614%" y="469" width="0.0796%" height="15" fill="rgb(211,98,20)" fg:x="760" fg:w="1"/><text x="60.7114%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="60.7001%" y="453" width="0.3182%" height="15" fill="rgb(217,103,52)" fg:x="763" fg:w="4"/><text x="60.9501%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="60.7796%" y="437" width="0.2387%" height="15" fill="rgb(208,125,52)" fg:x="764" fg:w="3"/><text x="61.0296%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.8592%" y="421" width="0.1591%" height="15" fill="rgb(244,70,13)" fg:x="765" fg:w="2"/><text x="61.1092%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.64%)</title><rect x="60.4614%" y="485" width="0.6364%" height="15" fill="rgb(253,124,3)" fg:x="760" fg:w="8"/><text x="60.7114%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="60.5410%" y="469" width="0.5569%" height="15" fill="rgb(222,145,32)" fg:x="761" fg:w="7"/><text x="60.7910%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.0183%" y="453" width="0.0796%" height="15" fill="rgb(232,183,47)" fg:x="767" fg:w="1"/><text x="61.2683%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="61.4956%" y="469" width="0.0796%" height="15" fill="rgb(246,226,4)" fg:x="773" fg:w="1"/><text x="61.7456%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.5752%" y="469" width="0.0796%" height="15" fill="rgb(228,185,46)" fg:x="774" fg:w="1"/><text x="61.8252%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="61.6547%" y="469" width="0.0796%" height="15" fill="rgb(213,196,4)" fg:x="775" fg:w="1"/><text x="61.9047%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="61.7343%" y="453" width="0.2387%" height="15" fill="rgb(212,2,45)" fg:x="776" fg:w="3"/><text x="61.9843%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="61.7343%" y="437" width="0.2387%" height="15" fill="rgb(217,145,50)" fg:x="776" fg:w="3"/><text x="61.9843%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.8138%" y="421" width="0.1591%" height="15" fill="rgb(242,10,46)" fg:x="777" fg:w="2"/><text x="62.0638%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="61.9730%" y="453" width="0.0796%" height="15" fill="rgb(252,91,48)" fg:x="779" fg:w="1"/><text x="62.2230%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="61.9730%" y="437" width="0.0796%" height="15" fill="rgb(216,72,13)" fg:x="779" fg:w="1"/><text x="62.2230%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.1321%" y="421" width="0.0796%" height="15" fill="rgb(219,6,37)" fg:x="781" fg:w="1"/><text x="62.3821%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.1321%" y="405" width="0.0796%" height="15" fill="rgb(236,185,40)" fg:x="781" fg:w="1"/><text x="62.3821%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="62.1321%" y="389" width="0.0796%" height="15" fill="rgb(208,81,48)" fg:x="781" fg:w="1"/><text x="62.3821%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.4503%" y="389" width="0.1591%" height="15" fill="rgb(211,42,33)" fg:x="785" fg:w="2"/><text x="62.7003%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.5298%" y="373" width="0.0796%" height="15" fill="rgb(211,90,39)" fg:x="786" fg:w="1"/><text x="62.7798%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="62.6889%" y="357" width="0.2387%" height="15" fill="rgb(218,136,12)" fg:x="788" fg:w="3"/><text x="62.9389%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="62.6889%" y="341" width="0.2387%" height="15" fill="rgb(234,12,32)" fg:x="788" fg:w="3"/><text x="62.9389%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="62.6889%" y="325" width="0.2387%" height="15" fill="rgb(221,164,18)" fg:x="788" fg:w="3"/><text x="62.9389%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.27%)</title><rect x="61.7343%" y="469" width="1.2729%" height="15" fill="rgb(239,135,14)" fg:x="776" fg:w="16"/><text x="61.9843%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.95%)</title><rect x="62.0525%" y="453" width="0.9547%" height="15" fill="rgb(226,198,47)" fg:x="780" fg:w="12"/><text x="62.3025%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="62.1321%" y="437" width="0.8751%" height="15" fill="rgb(244,121,47)" fg:x="781" fg:w="11"/><text x="62.3821%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="62.2116%" y="421" width="0.7955%" height="15" fill="rgb(226,21,48)" fg:x="782" fg:w="10"/><text x="62.4616%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="62.4503%" y="405" width="0.5569%" height="15" fill="rgb(215,178,47)" fg:x="785" fg:w="7"/><text x="62.7003%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="62.6094%" y="389" width="0.3978%" height="15" fill="rgb(206,212,19)" fg:x="787" fg:w="5"/><text x="62.8594%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="62.6889%" y="373" width="0.3182%" height="15" fill="rgb(230,104,34)" fg:x="788" fg:w="4"/><text x="62.9389%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="62.9276%" y="357" width="0.0796%" height="15" fill="rgb(210,96,51)" fg:x="791" fg:w="1"/><text x="63.1776%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (36 samples, 2.86%)</title><rect x="60.3023%" y="501" width="2.8640%" height="15" fill="rgb(229,111,47)" fg:x="758" fg:w="36"/><text x="60.5523%" y="511.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (26 samples, 2.07%)</title><rect x="61.0979%" y="485" width="2.0684%" height="15" fill="rgb(218,174,45)" fg:x="768" fg:w="26"/><text x="61.3479%" y="495.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.0072%" y="469" width="0.1591%" height="15" fill="rgb(215,21,32)" fg:x="792" fg:w="2"/><text x="63.2572%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (41 samples, 3.26%)</title><rect x="60.1432%" y="517" width="3.2617%" height="15" fill="rgb(235,72,21)" fg:x="756" fg:w="41"/><text x="60.3932%" y="527.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="63.1663%" y="501" width="0.2387%" height="15" fill="rgb(250,113,30)" fg:x="794" fg:w="3"/><text x="63.4163%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (46 samples, 3.66%)</title><rect x="59.8250%" y="533" width="3.6595%" height="15" fill="rgb(244,136,34)" fg:x="752" fg:w="46"/><text x="60.0750%" y="543.50">serd..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4049%" y="517" width="0.0796%" height="15" fill="rgb(213,226,47)" fg:x="797" fg:w="1"/><text x="63.6549%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4049%" y="501" width="0.0796%" height="15" fill="rgb(224,136,40)" fg:x="797" fg:w="1"/><text x="63.6549%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (56 samples, 4.46%)</title><rect x="59.1090%" y="549" width="4.4551%" height="15" fill="rgb(253,124,12)" fg:x="743" fg:w="56"/><text x="59.3590%" y="559.50">&lt;serd..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="63.4845%" y="533" width="0.0796%" height="15" fill="rgb(210,67,8)" fg:x="798" fg:w="1"/><text x="63.7345%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="63.4845%" y="517" width="0.0796%" height="15" fill="rgb(210,204,0)" fg:x="798" fg:w="1"/><text x="63.7345%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (57 samples, 4.53%)</title><rect x="59.1090%" y="565" width="4.5346%" height="15" fill="rgb(217,179,22)" fg:x="743" fg:w="57"/><text x="59.3590%" y="575.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="63.5640%" y="549" width="0.0796%" height="15" fill="rgb(237,192,33)" fg:x="799" fg:w="1"/><text x="63.8140%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="64.2800%" y="453" width="0.1591%" height="15" fill="rgb(211,104,28)" fg:x="808" fg:w="2"/><text x="64.5300%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.5187%" y="421" width="0.0796%" height="15" fill="rgb(214,75,30)" fg:x="811" fg:w="1"/><text x="64.7687%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.5187%" y="405" width="0.0796%" height="15" fill="rgb(220,227,12)" fg:x="811" fg:w="1"/><text x="64.7687%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5187%" y="389" width="0.0796%" height="15" fill="rgb(233,134,28)" fg:x="811" fg:w="1"/><text x="64.7687%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5187%" y="373" width="0.0796%" height="15" fill="rgb(215,146,24)" fg:x="811" fg:w="1"/><text x="64.7687%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5187%" y="357" width="0.0796%" height="15" fill="rgb(248,227,20)" fg:x="811" fg:w="1"/><text x="64.7687%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.5982%" y="309" width="0.0796%" height="15" fill="rgb(250,44,42)" fg:x="812" fg:w="1"/><text x="64.8482%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.6778%" y="309" width="0.0796%" height="15" fill="rgb(219,5,35)" fg:x="813" fg:w="1"/><text x="64.9278%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="64.5982%" y="341" width="0.2387%" height="15" fill="rgb(241,132,32)" fg:x="812" fg:w="3"/><text x="64.8482%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.5982%" y="325" width="0.2387%" height="15" fill="rgb(234,212,51)" fg:x="812" fg:w="3"/><text x="64.8482%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.7574%" y="309" width="0.0796%" height="15" fill="rgb(242,173,29)" fg:x="814" fg:w="1"/><text x="65.0074%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.7574%" y="293" width="0.0796%" height="15" fill="rgb(212,159,2)" fg:x="814" fg:w="1"/><text x="65.0074%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7574%" y="277" width="0.0796%" height="15" fill="rgb(238,165,31)" fg:x="814" fg:w="1"/><text x="65.0074%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.8369%" y="341" width="0.0796%" height="15" fill="rgb(241,57,36)" fg:x="815" fg:w="1"/><text x="65.0869%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8369%" y="325" width="0.0796%" height="15" fill="rgb(249,7,4)" fg:x="815" fg:w="1"/><text x="65.0869%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="64.5982%" y="373" width="0.4773%" height="15" fill="rgb(250,137,44)" fg:x="812" fg:w="6"/><text x="64.8482%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="64.5982%" y="357" width="0.4773%" height="15" fill="rgb(244,185,1)" fg:x="812" fg:w="6"/><text x="64.8482%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.9165%" y="341" width="0.1591%" height="15" fill="rgb(216,5,53)" fg:x="816" fg:w="2"/><text x="65.1665%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9960%" y="325" width="0.0796%" height="15" fill="rgb(234,89,21)" fg:x="817" fg:w="1"/><text x="65.2460%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9960%" y="309" width="0.0796%" height="15" fill="rgb(250,81,43)" fg:x="817" fg:w="1"/><text x="65.2460%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="64.5982%" y="405" width="0.5569%" height="15" fill="rgb(243,132,11)" fg:x="812" fg:w="7"/><text x="64.8482%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="64.5982%" y="389" width="0.5569%" height="15" fill="rgb(253,159,28)" fg:x="812" fg:w="7"/><text x="64.8482%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.0756%" y="373" width="0.0796%" height="15" fill="rgb(237,167,34)" fg:x="818" fg:w="1"/><text x="65.3256%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.1551%" y="405" width="0.0796%" height="15" fill="rgb(237,16,50)" fg:x="819" fg:w="1"/><text x="65.4051%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="64.5187%" y="437" width="0.8751%" height="15" fill="rgb(247,125,2)" fg:x="811" fg:w="11"/><text x="64.7687%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="64.5982%" y="421" width="0.7955%" height="15" fill="rgb(254,35,3)" fg:x="812" fg:w="10"/><text x="64.8482%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.2347%" y="405" width="0.1591%" height="15" fill="rgb(237,209,21)" fg:x="820" fg:w="2"/><text x="65.4847%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.2347%" y="389" width="0.1591%" height="15" fill="rgb(224,122,20)" fg:x="820" fg:w="2"/><text x="65.4847%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.2347%" y="373" width="0.1591%" height="15" fill="rgb(224,11,46)" fg:x="820" fg:w="2"/><text x="65.4847%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.43%)</title><rect x="64.0414%" y="469" width="1.4320%" height="15" fill="rgb(248,21,33)" fg:x="805" fg:w="18"/><text x="64.2914%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.03%)</title><rect x="64.4391%" y="453" width="1.0342%" height="15" fill="rgb(222,144,7)" fg:x="810" fg:w="13"/><text x="64.6891%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.3938%" y="437" width="0.0796%" height="15" fill="rgb(205,141,37)" fg:x="822" fg:w="1"/><text x="65.6438%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="65.3938%" y="421" width="0.0796%" height="15" fill="rgb(237,130,8)" fg:x="822" fg:w="1"/><text x="65.6438%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="65.5529%" y="453" width="0.0796%" height="15" fill="rgb(209,179,39)" fg:x="824" fg:w="1"/><text x="65.8029%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6325%" y="453" width="0.0796%" height="15" fill="rgb(207,52,17)" fg:x="825" fg:w="1"/><text x="65.8825%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 1.99%)</title><rect x="63.8027%" y="501" width="1.9889%" height="15" fill="rgb(253,158,17)" fg:x="802" fg:w="25"/><text x="64.0527%" y="511.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24 samples, 1.91%)</title><rect x="63.8823%" y="485" width="1.9093%" height="15" fill="rgb(208,19,53)" fg:x="803" fg:w="24"/><text x="64.1323%" y="495.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="65.4733%" y="469" width="0.3182%" height="15" fill="rgb(233,152,13)" fg:x="823" fg:w="4"/><text x="65.7233%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="65.7120%" y="453" width="0.0796%" height="15" fill="rgb(231,84,1)" fg:x="826" fg:w="1"/><text x="65.9620%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.7916%" y="501" width="0.0796%" height="15" fill="rgb(229,142,48)" fg:x="827" fg:w="1"/><text x="66.0416%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="65.7916%" y="485" width="0.0796%" height="15" fill="rgb(248,70,29)" fg:x="827" fg:w="1"/><text x="66.0416%" y="495.50"></text></g><g><title>engine::session::state::State::close (182 samples, 14.48%)</title><rect x="51.5513%" y="645" width="14.4789%" height="15" fill="rgb(250,85,7)" fg:x="648" fg:w="182"/><text x="51.8013%" y="655.50">engine::session::state..</text></g><g><title>engine::session::state::State::flush_entities (182 samples, 14.48%)</title><rect x="51.5513%" y="629" width="14.4789%" height="15" fill="rgb(235,140,43)" fg:x="648" fg:w="182"/><text x="51.8013%" y="639.50">engine::session::state..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (179 samples, 14.24%)</title><rect x="51.7900%" y="613" width="14.2403%" height="15" fill="rgb(216,0,5)" fg:x="651" fg:w="179"/><text x="52.0400%" y="623.50">engine::session::inter..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (179 samples, 14.24%)</title><rect x="51.7900%" y="597" width="14.2403%" height="15" fill="rgb(223,167,29)" fg:x="651" fg:w="179"/><text x="52.0400%" y="607.50">engine::session::state..</text></g><g><title>kernel::model::any_entity_changes (104 samples, 8.27%)</title><rect x="57.7566%" y="581" width="8.2737%" height="15" fill="rgb(229,150,33)" fg:x="726" fg:w="104"/><text x="58.0066%" y="591.50">kernel::mode..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (30 samples, 2.39%)</title><rect x="63.6436%" y="565" width="2.3866%" height="15" fill="rgb(227,26,52)" fg:x="800" fg:w="30"/><text x="63.8936%" y="575.50">se..</text></g><g><title>serde_json::de::from_trait (30 samples, 2.39%)</title><rect x="63.6436%" y="549" width="2.3866%" height="15" fill="rgb(250,60,52)" fg:x="800" fg:w="30"/><text x="63.8936%" y="559.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (30 samples, 2.39%)</title><rect x="63.6436%" y="533" width="2.3866%" height="15" fill="rgb(228,81,46)" fg:x="800" fg:w="30"/><text x="63.8936%" y="543.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.31%)</title><rect x="63.7232%" y="517" width="2.3071%" height="15" fill="rgb(225,218,31)" fg:x="801" fg:w="29"/><text x="63.9732%" y="527.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.8711%" y="501" width="0.1591%" height="15" fill="rgb(230,35,16)" fg:x="828" fg:w="2"/><text x="66.1211%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9507%" y="485" width="0.0796%" height="15" fill="rgb(247,100,0)" fg:x="829" fg:w="1"/><text x="66.2007%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="65.9507%" y="469" width="0.0796%" height="15" fill="rgb(223,135,11)" fg:x="829" fg:w="1"/><text x="66.2007%" y="479.50"></text></g><g><title>engine::session::Session::close (189 samples, 15.04%)</title><rect x="51.0740%" y="661" width="15.0358%" height="15" fill="rgb(207,136,0)" fg:x="642" fg:w="189"/><text x="51.3240%" y="671.50">engine::session::Sessio..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="66.0302%" y="645" width="0.0796%" height="15" fill="rgb(246,131,25)" fg:x="830" fg:w="1"/><text x="66.2802%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="66.1893%" y="533" width="0.1591%" height="15" fill="rgb(209,47,12)" fg:x="832" fg:w="2"/><text x="66.4393%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="66.1893%" y="517" width="0.1591%" height="15" fill="rgb(221,25,16)" fg:x="832" fg:w="2"/><text x="66.4393%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="66.2689%" y="501" width="0.0796%" height="15" fill="rgb(223,164,33)" fg:x="833" fg:w="1"/><text x="66.5189%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2689%" y="485" width="0.0796%" height="15" fill="rgb(220,26,23)" fg:x="833" fg:w="1"/><text x="66.5189%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2689%" y="469" width="0.0796%" height="15" fill="rgb(231,224,1)" fg:x="833" fg:w="1"/><text x="66.5189%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.2689%" y="453" width="0.0796%" height="15" fill="rgb(229,221,24)" fg:x="833" fg:w="1"/><text x="66.5189%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.2689%" y="437" width="0.0796%" height="15" fill="rgb(213,34,10)" fg:x="833" fg:w="1"/><text x="66.5189%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.2689%" y="421" width="0.0796%" height="15" fill="rgb(215,33,11)" fg:x="833" fg:w="1"/><text x="66.5189%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.2689%" y="405" width="0.0796%" height="15" fill="rgb(216,20,41)" fg:x="833" fg:w="1"/><text x="66.5189%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.2689%" y="389" width="0.0796%" height="15" fill="rgb(228,43,31)" fg:x="833" fg:w="1"/><text x="66.5189%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.2689%" y="373" width="0.0796%" height="15" fill="rgb(227,83,26)" fg:x="833" fg:w="1"/><text x="66.5189%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.2689%" y="357" width="0.0796%" height="15" fill="rgb(217,168,19)" fg:x="833" fg:w="1"/><text x="66.5189%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.2689%" y="341" width="0.0796%" height="15" fill="rgb(231,34,33)" fg:x="833" fg:w="1"/><text x="66.5189%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.2689%" y="325" width="0.0796%" height="15" fill="rgb(230,120,51)" fg:x="833" fg:w="1"/><text x="66.5189%" y="335.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="66.2689%" y="309" width="0.0796%" height="15" fill="rgb(215,138,27)" fg:x="833" fg:w="1"/><text x="66.5189%" y="319.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="66.2689%" y="293" width="0.0796%" height="15" fill="rgb(246,80,47)" fg:x="833" fg:w="1"/><text x="66.5189%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.3484%" y="501" width="0.0796%" height="15" fill="rgb(215,57,53)" fg:x="834" fg:w="1"/><text x="66.5984%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.4280%" y="309" width="0.0796%" height="15" fill="rgb(229,137,5)" fg:x="835" fg:w="1"/><text x="66.6780%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4280%" y="293" width="0.0796%" height="15" fill="rgb(210,86,2)" fg:x="835" fg:w="1"/><text x="66.6780%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4280%" y="277" width="0.0796%" height="15" fill="rgb(231,226,51)" fg:x="835" fg:w="1"/><text x="66.6780%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.4280%" y="261" width="0.0796%" height="15" fill="rgb(216,62,29)" fg:x="835" fg:w="1"/><text x="66.6780%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.4280%" y="245" width="0.0796%" height="15" fill="rgb(248,202,3)" fg:x="835" fg:w="1"/><text x="66.6780%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.4280%" y="229" width="0.0796%" height="15" fill="rgb(225,181,7)" fg:x="835" fg:w="1"/><text x="66.6780%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4280%" y="213" width="0.0796%" height="15" fill="rgb(247,170,54)" fg:x="835" fg:w="1"/><text x="66.6780%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4280%" y="197" width="0.0796%" height="15" fill="rgb(236,204,33)" fg:x="835" fg:w="1"/><text x="66.6780%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.4280%" y="181" width="0.0796%" height="15" fill="rgb(216,45,30)" fg:x="835" fg:w="1"/><text x="66.6780%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.4280%" y="165" width="0.0796%" height="15" fill="rgb(213,203,16)" fg:x="835" fg:w="1"/><text x="66.6780%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.4280%" y="149" width="0.0796%" height="15" fill="rgb(215,46,16)" fg:x="835" fg:w="1"/><text x="66.6780%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.4280%" y="133" width="0.0796%" height="15" fill="rgb(217,162,46)" fg:x="835" fg:w="1"/><text x="66.6780%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.4280%" y="117" width="0.0796%" height="15" fill="rgb(224,189,20)" fg:x="835" fg:w="1"/><text x="66.6780%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.4280%" y="325" width="0.1591%" height="15" fill="rgb(232,35,51)" fg:x="835" fg:w="2"/><text x="66.6780%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5076%" y="309" width="0.0796%" height="15" fill="rgb(243,221,46)" fg:x="836" fg:w="1"/><text x="66.7576%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5076%" y="293" width="0.0796%" height="15" fill="rgb(248,16,16)" fg:x="836" fg:w="1"/><text x="66.7576%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.5076%" y="277" width="0.0796%" height="15" fill="rgb(220,168,13)" fg:x="836" fg:w="1"/><text x="66.7576%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.5076%" y="261" width="0.0796%" height="15" fill="rgb(243,102,39)" fg:x="836" fg:w="1"/><text x="66.7576%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.5076%" y="245" width="0.0796%" height="15" fill="rgb(245,82,32)" fg:x="836" fg:w="1"/><text x="66.7576%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.5076%" y="229" width="0.0796%" height="15" fill="rgb(230,164,19)" fg:x="836" fg:w="1"/><text x="66.7576%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.5076%" y="213" width="0.0796%" height="15" fill="rgb(221,9,41)" fg:x="836" fg:w="1"/><text x="66.7576%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.5076%" y="197" width="0.0796%" height="15" fill="rgb(216,93,0)" fg:x="836" fg:w="1"/><text x="66.7576%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.5076%" y="181" width="0.0796%" height="15" fill="rgb(235,113,9)" fg:x="836" fg:w="1"/><text x="66.7576%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.5076%" y="165" width="0.0796%" height="15" fill="rgb(209,224,10)" fg:x="836" fg:w="1"/><text x="66.7576%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.5076%" y="149" width="0.0796%" height="15" fill="rgb(226,54,34)" fg:x="836" fg:w="1"/><text x="66.7576%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5076%" y="133" width="0.0796%" height="15" fill="rgb(222,60,8)" fg:x="836" fg:w="1"/><text x="66.7576%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.4280%" y="373" width="0.2387%" height="15" fill="rgb(248,228,41)" fg:x="835" fg:w="3"/><text x="66.6780%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.4280%" y="357" width="0.2387%" height="15" fill="rgb(226,31,32)" fg:x="835" fg:w="3"/><text x="66.6780%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.4280%" y="341" width="0.2387%" height="15" fill="rgb(242,132,49)" fg:x="835" fg:w="3"/><text x="66.6780%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5871%" y="325" width="0.0796%" height="15" fill="rgb(224,194,19)" fg:x="837" fg:w="1"/><text x="66.8371%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5871%" y="309" width="0.0796%" height="15" fill="rgb(232,200,51)" fg:x="837" fg:w="1"/><text x="66.8371%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.5871%" y="293" width="0.0796%" height="15" fill="rgb(235,60,46)" fg:x="837" fg:w="1"/><text x="66.8371%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.5871%" y="277" width="0.0796%" height="15" fill="rgb(240,109,52)" fg:x="837" fg:w="1"/><text x="66.8371%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.5871%" y="261" width="0.0796%" height="15" fill="rgb(215,78,37)" fg:x="837" fg:w="1"/><text x="66.8371%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.5871%" y="245" width="0.0796%" height="15" fill="rgb(225,141,7)" fg:x="837" fg:w="1"/><text x="66.8371%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.5871%" y="229" width="0.0796%" height="15" fill="rgb(216,102,54)" fg:x="837" fg:w="1"/><text x="66.8371%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.5871%" y="213" width="0.0796%" height="15" fill="rgb(238,143,13)" fg:x="837" fg:w="1"/><text x="66.8371%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.5871%" y="197" width="0.0796%" height="15" fill="rgb(219,45,51)" fg:x="837" fg:w="1"/><text x="66.8371%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.5871%" y="181" width="0.0796%" height="15" fill="rgb(242,105,46)" fg:x="837" fg:w="1"/><text x="66.8371%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.5871%" y="165" width="0.0796%" height="15" fill="rgb(206,154,49)" fg:x="837" fg:w="1"/><text x="66.8371%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5871%" y="149" width="0.0796%" height="15" fill="rgb(239,215,4)" fg:x="837" fg:w="1"/><text x="66.8371%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.6667%" y="277" width="0.0796%" height="15" fill="rgb(238,82,17)" fg:x="838" fg:w="1"/><text x="66.9167%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="66.4280%" y="421" width="0.3978%" height="15" fill="rgb(242,49,30)" fg:x="835" fg:w="5"/><text x="66.6780%" y="431.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="66.4280%" y="405" width="0.3978%" height="15" fill="rgb(248,5,16)" fg:x="835" fg:w="5"/><text x="66.6780%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="66.4280%" y="389" width="0.3978%" height="15" fill="rgb(237,138,32)" fg:x="835" fg:w="5"/><text x="66.6780%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.6667%" y="373" width="0.1591%" height="15" fill="rgb(235,79,45)" fg:x="838" fg:w="2"/><text x="66.9167%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.6667%" y="357" width="0.1591%" height="15" fill="rgb(213,105,25)" fg:x="838" fg:w="2"/><text x="66.9167%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.6667%" y="341" width="0.1591%" height="15" fill="rgb(251,131,7)" fg:x="838" fg:w="2"/><text x="66.9167%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.6667%" y="325" width="0.1591%" height="15" fill="rgb(211,155,7)" fg:x="838" fg:w="2"/><text x="66.9167%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="66.6667%" y="309" width="0.1591%" height="15" fill="rgb(243,70,15)" fg:x="838" fg:w="2"/><text x="66.9167%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.6667%" y="293" width="0.1591%" height="15" fill="rgb(215,171,2)" fg:x="838" fg:w="2"/><text x="66.9167%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.7462%" y="277" width="0.0796%" height="15" fill="rgb(244,121,35)" fg:x="839" fg:w="1"/><text x="66.9962%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7462%" y="261" width="0.0796%" height="15" fill="rgb(249,147,17)" fg:x="839" fg:w="1"/><text x="66.9962%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.7462%" y="245" width="0.0796%" height="15" fill="rgb(241,193,52)" fg:x="839" fg:w="1"/><text x="66.9962%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7462%" y="229" width="0.0796%" height="15" fill="rgb(217,159,39)" fg:x="839" fg:w="1"/><text x="66.9962%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="66.4280%" y="453" width="0.4773%" height="15" fill="rgb(248,110,0)" fg:x="835" fg:w="6"/><text x="66.6780%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="66.4280%" y="437" width="0.4773%" height="15" fill="rgb(233,227,0)" fg:x="835" fg:w="6"/><text x="66.6780%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="66.8258%" y="421" width="0.0796%" height="15" fill="rgb(252,55,2)" fg:x="840" fg:w="1"/><text x="67.0758%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="66.8258%" y="405" width="0.0796%" height="15" fill="rgb(224,194,24)" fg:x="840" fg:w="1"/><text x="67.0758%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="66.8258%" y="389" width="0.0796%" height="15" fill="rgb(247,5,33)" fg:x="840" fg:w="1"/><text x="67.0758%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8258%" y="373" width="0.0796%" height="15" fill="rgb(242,66,47)" fg:x="840" fg:w="1"/><text x="67.0758%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8258%" y="357" width="0.0796%" height="15" fill="rgb(213,107,12)" fg:x="840" fg:w="1"/><text x="67.0758%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8258%" y="341" width="0.0796%" height="15" fill="rgb(206,131,1)" fg:x="840" fg:w="1"/><text x="67.0758%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8258%" y="325" width="0.0796%" height="15" fill="rgb(214,9,36)" fg:x="840" fg:w="1"/><text x="67.0758%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="66.9053%" y="341" width="0.0796%" height="15" fill="rgb(251,215,18)" fg:x="841" fg:w="1"/><text x="67.1553%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.0644%" y="325" width="0.0796%" height="15" fill="rgb(251,64,9)" fg:x="843" fg:w="1"/><text x="67.3144%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.1440%" y="325" width="0.0796%" height="15" fill="rgb(235,68,21)" fg:x="844" fg:w="1"/><text x="67.3940%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.1440%" y="309" width="0.0796%" height="15" fill="rgb(240,69,38)" fg:x="844" fg:w="1"/><text x="67.3940%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.2235%" y="229" width="0.0796%" height="15" fill="rgb(231,18,27)" fg:x="845" fg:w="1"/><text x="67.4735%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.2235%" y="213" width="0.0796%" height="15" fill="rgb(215,154,25)" fg:x="845" fg:w="1"/><text x="67.4735%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.2235%" y="197" width="0.0796%" height="15" fill="rgb(224,33,46)" fg:x="845" fg:w="1"/><text x="67.4735%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.2235%" y="309" width="0.1591%" height="15" fill="rgb(248,191,53)" fg:x="845" fg:w="2"/><text x="67.4735%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.2235%" y="293" width="0.1591%" height="15" fill="rgb(231,3,37)" fg:x="845" fg:w="2"/><text x="67.4735%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.2235%" y="277" width="0.1591%" height="15" fill="rgb(209,152,2)" fg:x="845" fg:w="2"/><text x="67.4735%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.2235%" y="261" width="0.1591%" height="15" fill="rgb(212,208,43)" fg:x="845" fg:w="2"/><text x="67.4735%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.2235%" y="245" width="0.1591%" height="15" fill="rgb(208,60,49)" fg:x="845" fg:w="2"/><text x="67.4735%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.3031%" y="229" width="0.0796%" height="15" fill="rgb(245,135,6)" fg:x="846" fg:w="1"/><text x="67.5531%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.3031%" y="213" width="0.0796%" height="15" fill="rgb(243,86,23)" fg:x="846" fg:w="1"/><text x="67.5531%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.3031%" y="197" width="0.0796%" height="15" fill="rgb(223,7,20)" fg:x="846" fg:w="1"/><text x="67.5531%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.3031%" y="181" width="0.0796%" height="15" fill="rgb(212,182,17)" fg:x="846" fg:w="1"/><text x="67.5531%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3031%" y="165" width="0.0796%" height="15" fill="rgb(237,94,50)" fg:x="846" fg:w="1"/><text x="67.5531%" y="175.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="66.9053%" y="437" width="0.8751%" height="15" fill="rgb(232,185,44)" fg:x="841" fg:w="11"/><text x="67.1553%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="66.9053%" y="421" width="0.8751%" height="15" fill="rgb(205,50,36)" fg:x="841" fg:w="11"/><text x="67.1553%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="66.9053%" y="405" width="0.8751%" height="15" fill="rgb(252,32,32)" fg:x="841" fg:w="11"/><text x="67.1553%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="66.9053%" y="389" width="0.8751%" height="15" fill="rgb(241,123,33)" fg:x="841" fg:w="11"/><text x="67.1553%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="66.9053%" y="373" width="0.8751%" height="15" fill="rgb(212,140,16)" fg:x="841" fg:w="11"/><text x="67.1553%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="66.9053%" y="357" width="0.8751%" height="15" fill="rgb(247,132,5)" fg:x="841" fg:w="11"/><text x="67.1553%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="66.9849%" y="341" width="0.7955%" height="15" fill="rgb(209,137,38)" fg:x="842" fg:w="10"/><text x="67.2349%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="67.2235%" y="325" width="0.5569%" height="15" fill="rgb(248,32,42)" fg:x="845" fg:w="7"/><text x="67.4735%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="67.3827%" y="309" width="0.3978%" height="15" fill="rgb(216,188,40)" fg:x="847" fg:w="5"/><text x="67.6327%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="67.3827%" y="293" width="0.3978%" height="15" fill="rgb(209,127,53)" fg:x="847" fg:w="5"/><text x="67.6327%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="67.5418%" y="277" width="0.2387%" height="15" fill="rgb(254,162,9)" fg:x="849" fg:w="3"/><text x="67.7918%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.6213%" y="261" width="0.1591%" height="15" fill="rgb(219,183,10)" fg:x="850" fg:w="2"/><text x="67.8713%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.7804%" y="405" width="0.0796%" height="15" fill="rgb(217,192,21)" fg:x="852" fg:w="1"/><text x="68.0304%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="67.8600%" y="357" width="0.1591%" height="15" fill="rgb(251,89,27)" fg:x="853" fg:w="2"/><text x="68.1100%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="67.8600%" y="341" width="0.1591%" height="15" fill="rgb(253,55,28)" fg:x="853" fg:w="2"/><text x="68.1100%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="67.8600%" y="325" width="0.1591%" height="15" fill="rgb(216,159,8)" fg:x="853" fg:w="2"/><text x="68.1100%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.9395%" y="309" width="0.0796%" height="15" fill="rgb(231,228,44)" fg:x="854" fg:w="1"/><text x="68.1895%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.9395%" y="293" width="0.0796%" height="15" fill="rgb(247,34,48)" fg:x="854" fg:w="1"/><text x="68.1895%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.2578%" y="261" width="0.1591%" height="15" fill="rgb(247,222,18)" fg:x="858" fg:w="2"/><text x="68.5078%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3373%" y="245" width="0.0796%" height="15" fill="rgb(227,49,4)" fg:x="859" fg:w="1"/><text x="68.5873%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="67.8600%" y="405" width="0.6364%" height="15" fill="rgb(219,189,53)" fg:x="853" fg:w="8"/><text x="68.1100%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="67.8600%" y="389" width="0.6364%" height="15" fill="rgb(241,160,53)" fg:x="853" fg:w="8"/><text x="68.1100%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="67.8600%" y="373" width="0.6364%" height="15" fill="rgb(227,115,4)" fg:x="853" fg:w="8"/><text x="68.1100%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="68.0191%" y="357" width="0.4773%" height="15" fill="rgb(215,28,28)" fg:x="855" fg:w="6"/><text x="68.2691%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="68.0191%" y="341" width="0.4773%" height="15" fill="rgb(237,143,40)" fg:x="855" fg:w="6"/><text x="68.2691%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="68.0986%" y="325" width="0.3978%" height="15" fill="rgb(205,107,24)" fg:x="856" fg:w="5"/><text x="68.3486%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.40%)</title><rect x="68.0986%" y="309" width="0.3978%" height="15" fill="rgb(209,112,35)" fg:x="856" fg:w="5"/><text x="68.3486%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="68.1782%" y="293" width="0.3182%" height="15" fill="rgb(206,135,5)" fg:x="857" fg:w="4"/><text x="68.4282%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.2578%" y="277" width="0.2387%" height="15" fill="rgb(227,217,38)" fg:x="858" fg:w="3"/><text x="68.5078%" y="287.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="68.4169%" y="261" width="0.0796%" height="15" fill="rgb(205,0,41)" fg:x="860" fg:w="1"/><text x="68.6669%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (22 samples, 1.75%)</title><rect x="66.9053%" y="453" width="1.7502%" height="15" fill="rgb(220,20,40)" fg:x="841" fg:w="22"/><text x="67.1553%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="67.7804%" y="437" width="0.8751%" height="15" fill="rgb(216,145,3)" fg:x="852" fg:w="11"/><text x="68.0304%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="67.7804%" y="421" width="0.8751%" height="15" fill="rgb(207,130,51)" fg:x="852" fg:w="11"/><text x="68.0304%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.4964%" y="405" width="0.1591%" height="15" fill="rgb(252,93,13)" fg:x="861" fg:w="2"/><text x="68.7464%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.4964%" y="389" width="0.1591%" height="15" fill="rgb(210,105,15)" fg:x="861" fg:w="2"/><text x="68.7464%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.5760%" y="373" width="0.0796%" height="15" fill="rgb(212,126,31)" fg:x="862" fg:w="1"/><text x="68.8260%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="68.6555%" y="437" width="0.0796%" height="15" fill="rgb(241,167,46)" fg:x="863" fg:w="1"/><text x="68.9055%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.7351%" y="341" width="0.0796%" height="15" fill="rgb(217,143,19)" fg:x="864" fg:w="1"/><text x="68.9851%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.7351%" y="325" width="0.0796%" height="15" fill="rgb(235,117,33)" fg:x="864" fg:w="1"/><text x="68.9851%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="68.6555%" y="453" width="0.2387%" height="15" fill="rgb(247,95,6)" fg:x="863" fg:w="3"/><text x="68.9055%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="68.7351%" y="437" width="0.1591%" height="15" fill="rgb(243,206,43)" fg:x="864" fg:w="2"/><text x="68.9851%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="68.7351%" y="421" width="0.1591%" height="15" fill="rgb(229,65,54)" fg:x="864" fg:w="2"/><text x="68.9851%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.7351%" y="405" width="0.1591%" height="15" fill="rgb(247,137,34)" fg:x="864" fg:w="2"/><text x="68.9851%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.7351%" y="389" width="0.1591%" height="15" fill="rgb(245,174,44)" fg:x="864" fg:w="2"/><text x="68.9851%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.7351%" y="373" width="0.1591%" height="15" fill="rgb(223,64,15)" fg:x="864" fg:w="2"/><text x="68.9851%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.7351%" y="357" width="0.1591%" height="15" fill="rgb(243,153,36)" fg:x="864" fg:w="2"/><text x="68.9851%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.8146%" y="341" width="0.0796%" height="15" fill="rgb(252,23,4)" fg:x="865" fg:w="1"/><text x="69.0646%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8146%" y="325" width="0.0796%" height="15" fill="rgb(209,132,13)" fg:x="865" fg:w="1"/><text x="69.0646%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.8146%" y="309" width="0.0796%" height="15" fill="rgb(209,196,21)" fg:x="865" fg:w="1"/><text x="69.0646%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8146%" y="293" width="0.0796%" height="15" fill="rgb(252,197,1)" fg:x="865" fg:w="1"/><text x="69.0646%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (33 samples, 2.63%)</title><rect x="66.4280%" y="485" width="2.6253%" height="15" fill="rgb(229,42,46)" fg:x="835" fg:w="33"/><text x="66.6780%" y="495.50">&lt;e..</text></g><g><title>engine::session::internal::Entities::add_persisted (33 samples, 2.63%)</title><rect x="66.4280%" y="469" width="2.6253%" height="15" fill="rgb(219,85,8)" fg:x="835" fg:w="33"/><text x="66.6780%" y="479.50">en..</text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="68.8942%" y="453" width="0.1591%" height="15" fill="rgb(223,185,14)" fg:x="866" fg:w="2"/><text x="69.1442%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.8942%" y="437" width="0.1591%" height="15" fill="rgb(217,196,18)" fg:x="866" fg:w="2"/><text x="69.1442%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.9737%" y="421" width="0.0796%" height="15" fill="rgb(220,122,37)" fg:x="867" fg:w="1"/><text x="69.2237%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="68.9737%" y="405" width="0.0796%" height="15" fill="rgb(236,135,33)" fg:x="867" fg:w="1"/><text x="69.2237%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (34 samples, 2.70%)</title><rect x="66.4280%" y="501" width="2.7049%" height="15" fill="rgb(222,86,54)" fg:x="835" fg:w="34"/><text x="66.6780%" y="511.50">&lt;e..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="69.0533%" y="485" width="0.0796%" height="15" fill="rgb(227,42,22)" fg:x="868" fg:w="1"/><text x="69.3033%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0533%" y="469" width="0.0796%" height="15" fill="rgb(243,101,27)" fg:x="868" fg:w="1"/><text x="69.3033%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0533%" y="453" width="0.0796%" height="15" fill="rgb(229,100,8)" fg:x="868" fg:w="1"/><text x="69.3033%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.0533%" y="437" width="0.0796%" height="15" fill="rgb(252,68,10)" fg:x="868" fg:w="1"/><text x="69.3033%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.0533%" y="421" width="0.0796%" height="15" fill="rgb(219,19,31)" fg:x="868" fg:w="1"/><text x="69.3033%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.0533%" y="405" width="0.0796%" height="15" fill="rgb(246,150,44)" fg:x="868" fg:w="1"/><text x="69.3033%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.0533%" y="389" width="0.0796%" height="15" fill="rgb(211,14,39)" fg:x="868" fg:w="1"/><text x="69.3033%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.0533%" y="373" width="0.0796%" height="15" fill="rgb(221,98,29)" fg:x="868" fg:w="1"/><text x="69.3033%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.0533%" y="357" width="0.0796%" height="15" fill="rgb(221,70,26)" fg:x="868" fg:w="1"/><text x="69.3033%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.0533%" y="341" width="0.0796%" height="15" fill="rgb(236,146,30)" fg:x="868" fg:w="1"/><text x="69.3033%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.0533%" y="325" width="0.0796%" height="15" fill="rgb(226,94,34)" fg:x="868" fg:w="1"/><text x="69.3033%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.0533%" y="309" width="0.0796%" height="15" fill="rgb(248,132,21)" fg:x="868" fg:w="1"/><text x="69.3033%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0533%" y="293" width="0.0796%" height="15" fill="rgb(245,43,50)" fg:x="868" fg:w="1"/><text x="69.3033%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.1329%" y="501" width="0.1591%" height="15" fill="rgb(245,132,31)" fg:x="869" fg:w="2"/><text x="69.3829%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.2124%" y="485" width="0.0796%" height="15" fill="rgb(230,171,4)" fg:x="870" fg:w="1"/><text x="69.4624%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.2124%" y="469" width="0.0796%" height="15" fill="rgb(235,6,45)" fg:x="870" fg:w="1"/><text x="69.4624%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.2124%" y="453" width="0.0796%" height="15" fill="rgb(220,80,28)" fg:x="870" fg:w="1"/><text x="69.4624%" y="463.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (40 samples, 3.18%)</title><rect x="66.1893%" y="549" width="3.1822%" height="15" fill="rgb(242,171,9)" fg:x="832" fg:w="40"/><text x="66.4393%" y="559.50">&lt;pl..</text></g><g><title>kernel::model::entry::Entry::scope (38 samples, 3.02%)</title><rect x="66.3484%" y="533" width="3.0231%" height="15" fill="rgb(214,135,29)" fg:x="834" fg:w="38"/><text x="66.5984%" y="543.50">ker..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (38 samples, 3.02%)</title><rect x="66.3484%" y="517" width="3.0231%" height="15" fill="rgb(221,229,16)" fg:x="834" fg:w="38"/><text x="66.5984%" y="527.50">ker..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="69.2920%" y="501" width="0.0796%" height="15" fill="rgb(253,59,46)" fg:x="871" fg:w="1"/><text x="69.5420%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="69.4511%" y="501" width="0.0796%" height="15" fill="rgb(250,147,20)" fg:x="873" fg:w="1"/><text x="69.7011%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="69.4511%" y="485" width="0.0796%" height="15" fill="rgb(236,64,48)" fg:x="873" fg:w="1"/><text x="69.7011%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4511%" y="469" width="0.0796%" height="15" fill="rgb(240,37,42)" fg:x="873" fg:w="1"/><text x="69.7011%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="69.4511%" y="517" width="0.2387%" height="15" fill="rgb(220,41,50)" fg:x="873" fg:w="3"/><text x="69.7011%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="69.5306%" y="501" width="0.1591%" height="15" fill="rgb(216,51,14)" fg:x="874" fg:w="2"/><text x="69.7806%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="69.6102%" y="485" width="0.0796%" height="15" fill="rgb(215,83,10)" fg:x="875" fg:w="1"/><text x="69.8602%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="69.6102%" y="469" width="0.0796%" height="15" fill="rgb(206,144,17)" fg:x="875" fg:w="1"/><text x="69.8602%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="69.6102%" y="453" width="0.0796%" height="15" fill="rgb(219,196,37)" fg:x="875" fg:w="1"/><text x="69.8602%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.6102%" y="437" width="0.0796%" height="15" fill="rgb(226,135,26)" fg:x="875" fg:w="1"/><text x="69.8602%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="69.6102%" y="421" width="0.0796%" height="15" fill="rgb(237,195,40)" fg:x="875" fg:w="1"/><text x="69.8602%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="69.6102%" y="405" width="0.0796%" height="15" fill="rgb(228,182,42)" fg:x="875" fg:w="1"/><text x="69.8602%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="69.6102%" y="389" width="0.0796%" height="15" fill="rgb(224,135,50)" fg:x="875" fg:w="1"/><text x="69.8602%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.6102%" y="373" width="0.0796%" height="15" fill="rgb(236,215,34)" fg:x="875" fg:w="1"/><text x="69.8602%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="69.6102%" y="357" width="0.0796%" height="15" fill="rgb(244,213,27)" fg:x="875" fg:w="1"/><text x="69.8602%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="69.6102%" y="341" width="0.0796%" height="15" fill="rgb(233,37,53)" fg:x="875" fg:w="1"/><text x="69.8602%" y="351.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (45 samples, 3.58%)</title><rect x="66.1893%" y="565" width="3.5800%" height="15" fill="rgb(222,132,14)" fg:x="832" fg:w="45"/><text x="66.4393%" y="575.50">&lt;eng..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (5 samples, 0.40%)</title><rect x="69.3715%" y="549" width="0.3978%" height="15" fill="rgb(219,202,29)" fg:x="872" fg:w="5"/><text x="69.6215%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="69.3715%" y="533" width="0.3978%" height="15" fill="rgb(226,157,39)" fg:x="872" fg:w="5"/><text x="69.6215%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="69.6897%" y="517" width="0.0796%" height="15" fill="rgb(235,213,2)" fg:x="876" fg:w="1"/><text x="69.9397%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="69.6897%" y="501" width="0.0796%" height="15" fill="rgb(250,121,2)" fg:x="876" fg:w="1"/><text x="69.9397%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="69.6897%" y="485" width="0.0796%" height="15" fill="rgb(206,192,33)" fg:x="876" fg:w="1"/><text x="69.9397%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.7693%" y="485" width="0.0796%" height="15" fill="rgb(240,161,6)" fg:x="877" fg:w="1"/><text x="70.0193%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="69.9284%" y="437" width="0.0796%" height="15" fill="rgb(246,53,30)" fg:x="879" fg:w="1"/><text x="70.1784%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="69.9284%" y="421" width="0.0796%" height="15" fill="rgb(219,123,43)" fg:x="879" fg:w="1"/><text x="70.1784%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="69.9284%" y="405" width="0.0796%" height="15" fill="rgb(236,53,49)" fg:x="879" fg:w="1"/><text x="70.1784%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (49 samples, 3.90%)</title><rect x="66.1893%" y="629" width="3.8982%" height="15" fill="rgb(241,156,1)" fg:x="832" fg:w="49"/><text x="66.4393%" y="639.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::apply_middleware (49 samples, 3.90%)</title><rect x="66.1893%" y="613" width="3.8982%" height="15" fill="rgb(209,73,26)" fg:x="832" fg:w="49"/><text x="66.4393%" y="623.50">kern..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (49 samples, 3.90%)</title><rect x="66.1893%" y="597" width="3.8982%" height="15" fill="rgb(206,114,3)" fg:x="832" fg:w="49"/><text x="66.4393%" y="607.50">kern..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (49 samples, 3.90%)</title><rect x="66.1893%" y="581" width="3.8982%" height="15" fill="rgb(230,214,9)" fg:x="832" fg:w="49"/><text x="66.4393%" y="591.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="69.7693%" y="565" width="0.3182%" height="15" fill="rgb(240,184,46)" fg:x="877" fg:w="4"/><text x="70.0193%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="69.7693%" y="549" width="0.3182%" height="15" fill="rgb(242,169,54)" fg:x="877" fg:w="4"/><text x="70.0193%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="69.7693%" y="533" width="0.3182%" height="15" fill="rgb(207,168,50)" fg:x="877" fg:w="4"/><text x="70.0193%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="69.7693%" y="517" width="0.3182%" height="15" fill="rgb(240,114,2)" fg:x="877" fg:w="4"/><text x="70.0193%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="69.7693%" y="501" width="0.3182%" height="15" fill="rgb(211,17,40)" fg:x="877" fg:w="4"/><text x="70.0193%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="69.8488%" y="485" width="0.2387%" height="15" fill="rgb(235,97,36)" fg:x="878" fg:w="3"/><text x="70.0988%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="69.9284%" y="469" width="0.1591%" height="15" fill="rgb(208,164,11)" fg:x="879" fg:w="2"/><text x="70.1784%" y="479.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="69.9284%" y="453" width="0.1591%" height="15" fill="rgb(242,11,17)" fg:x="879" fg:w="2"/><text x="70.1784%" y="463.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="70.0080%" y="437" width="0.0796%" height="15" fill="rgb(215,86,33)" fg:x="880" fg:w="1"/><text x="70.2580%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="70.0875%" y="549" width="0.1591%" height="15" fill="rgb(245,185,28)" fg:x="881" fg:w="2"/><text x="70.3375%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="70.0875%" y="533" width="0.1591%" height="15" fill="rgb(231,89,42)" fg:x="881" fg:w="2"/><text x="70.3375%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.0875%" y="517" width="0.1591%" height="15" fill="rgb(210,18,47)" fg:x="881" fg:w="2"/><text x="70.3375%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.0875%" y="501" width="0.1591%" height="15" fill="rgb(214,84,8)" fg:x="881" fg:w="2"/><text x="70.3375%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.0875%" y="485" width="0.1591%" height="15" fill="rgb(214,222,23)" fg:x="881" fg:w="2"/><text x="70.3375%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.0875%" y="469" width="0.1591%" height="15" fill="rgb(213,104,21)" fg:x="881" fg:w="2"/><text x="70.3375%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.0875%" y="453" width="0.1591%" height="15" fill="rgb(238,138,6)" fg:x="881" fg:w="2"/><text x="70.3375%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="70.0875%" y="437" width="0.1591%" height="15" fill="rgb(205,167,50)" fg:x="881" fg:w="2"/><text x="70.3375%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.0875%" y="421" width="0.1591%" height="15" fill="rgb(230,105,27)" fg:x="881" fg:w="2"/><text x="70.3375%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.0875%" y="405" width="0.1591%" height="15" fill="rgb(222,97,48)" fg:x="881" fg:w="2"/><text x="70.3375%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.0875%" y="389" width="0.1591%" height="15" fill="rgb(222,197,14)" fg:x="881" fg:w="2"/><text x="70.3375%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.0875%" y="373" width="0.1591%" height="15" fill="rgb(210,105,47)" fg:x="881" fg:w="2"/><text x="70.3375%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1671%" y="357" width="0.0796%" height="15" fill="rgb(238,158,19)" fg:x="882" fg:w="1"/><text x="70.4171%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.1671%" y="341" width="0.0796%" height="15" fill="rgb(226,176,23)" fg:x="882" fg:w="1"/><text x="70.4171%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3262%" y="501" width="0.0796%" height="15" fill="rgb(208,79,31)" fg:x="884" fg:w="1"/><text x="70.5762%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3262%" y="485" width="0.0796%" height="15" fill="rgb(221,154,21)" fg:x="884" fg:w="1"/><text x="70.5762%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3262%" y="469" width="0.0796%" height="15" fill="rgb(213,61,41)" fg:x="884" fg:w="1"/><text x="70.5762%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3262%" y="453" width="0.0796%" height="15" fill="rgb(215,28,33)" fg:x="884" fg:w="1"/><text x="70.5762%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3262%" y="437" width="0.0796%" height="15" fill="rgb(231,139,26)" fg:x="884" fg:w="1"/><text x="70.5762%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3262%" y="421" width="0.0796%" height="15" fill="rgb(232,159,16)" fg:x="884" fg:w="1"/><text x="70.5762%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.3262%" y="405" width="0.0796%" height="15" fill="rgb(233,80,10)" fg:x="884" fg:w="1"/><text x="70.5762%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.3262%" y="389" width="0.0796%" height="15" fill="rgb(208,147,29)" fg:x="884" fg:w="1"/><text x="70.5762%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.3262%" y="373" width="0.0796%" height="15" fill="rgb(213,10,12)" fg:x="884" fg:w="1"/><text x="70.5762%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.4057%" y="405" width="0.1591%" height="15" fill="rgb(231,218,13)" fg:x="885" fg:w="2"/><text x="70.6557%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.4057%" y="389" width="0.1591%" height="15" fill="rgb(244,199,44)" fg:x="885" fg:w="2"/><text x="70.6557%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.4853%" y="373" width="0.0796%" height="15" fill="rgb(240,144,53)" fg:x="886" fg:w="1"/><text x="70.7353%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="70.0875%" y="581" width="0.5569%" height="15" fill="rgb(223,57,28)" fg:x="881" fg:w="7"/><text x="70.3375%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="70.0875%" y="565" width="0.5569%" height="15" fill="rgb(213,134,38)" fg:x="881" fg:w="7"/><text x="70.3375%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="70.2466%" y="549" width="0.3978%" height="15" fill="rgb(251,182,42)" fg:x="883" fg:w="5"/><text x="70.4966%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="70.2466%" y="533" width="0.3978%" height="15" fill="rgb(229,93,13)" fg:x="883" fg:w="5"/><text x="70.4966%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="70.2466%" y="517" width="0.3978%" height="15" fill="rgb(234,171,3)" fg:x="883" fg:w="5"/><text x="70.4966%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.4057%" y="501" width="0.2387%" height="15" fill="rgb(241,105,32)" fg:x="885" fg:w="3"/><text x="70.6557%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.4057%" y="485" width="0.2387%" height="15" fill="rgb(221,66,3)" fg:x="885" fg:w="3"/><text x="70.6557%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.4057%" y="469" width="0.2387%" height="15" fill="rgb(248,155,29)" fg:x="885" fg:w="3"/><text x="70.6557%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.4057%" y="453" width="0.2387%" height="15" fill="rgb(231,31,5)" fg:x="885" fg:w="3"/><text x="70.6557%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="70.4057%" y="437" width="0.2387%" height="15" fill="rgb(213,188,31)" fg:x="885" fg:w="3"/><text x="70.6557%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.4057%" y="421" width="0.2387%" height="15" fill="rgb(212,104,33)" fg:x="885" fg:w="3"/><text x="70.6557%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="70.5648%" y="405" width="0.0796%" height="15" fill="rgb(254,77,51)" fg:x="887" fg:w="1"/><text x="70.8148%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="70.6444%" y="517" width="0.1591%" height="15" fill="rgb(234,39,26)" fg:x="888" fg:w="2"/><text x="70.8944%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="70.9626%" y="501" width="0.0796%" height="15" fill="rgb(208,88,36)" fg:x="892" fg:w="1"/><text x="71.2126%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.1217%" y="485" width="0.0796%" height="15" fill="rgb(243,222,10)" fg:x="894" fg:w="1"/><text x="71.3717%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.2013%" y="453" width="0.0796%" height="15" fill="rgb(218,133,52)" fg:x="895" fg:w="1"/><text x="71.4513%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="71.2013%" y="437" width="0.0796%" height="15" fill="rgb(222,25,26)" fg:x="895" fg:w="1"/><text x="71.4513%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.2808%" y="453" width="0.1591%" height="15" fill="rgb(243,174,24)" fg:x="896" fg:w="2"/><text x="71.5308%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.3604%" y="437" width="0.0796%" height="15" fill="rgb(233,188,52)" fg:x="897" fg:w="1"/><text x="71.6104%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3604%" y="421" width="0.0796%" height="15" fill="rgb(208,89,14)" fg:x="897" fg:w="1"/><text x="71.6104%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.5990%" y="421" width="0.0796%" height="15" fill="rgb(205,204,21)" fg:x="900" fg:w="1"/><text x="71.8490%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.6786%" y="421" width="0.1591%" height="15" fill="rgb(246,39,28)" fg:x="901" fg:w="2"/><text x="71.9286%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.6786%" y="405" width="0.1591%" height="15" fill="rgb(235,71,19)" fg:x="901" fg:w="2"/><text x="71.9286%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.6786%" y="389" width="0.1591%" height="15" fill="rgb(211,62,39)" fg:x="901" fg:w="2"/><text x="71.9286%" y="399.50"></text></g><g><title>serde_json::de::from_trait (18 samples, 1.43%)</title><rect x="70.6444%" y="565" width="1.4320%" height="15" fill="rgb(246,118,20)" fg:x="888" fg:w="18"/><text x="70.8944%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18 samples, 1.43%)</title><rect x="70.6444%" y="549" width="1.4320%" height="15" fill="rgb(230,82,12)" fg:x="888" fg:w="18"/><text x="70.8944%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.43%)</title><rect x="70.6444%" y="533" width="1.4320%" height="15" fill="rgb(205,212,34)" fg:x="888" fg:w="18"/><text x="70.8944%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16 samples, 1.27%)</title><rect x="70.8035%" y="517" width="1.2729%" height="15" fill="rgb(239,90,1)" fg:x="890" fg:w="16"/><text x="71.0535%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.03%)</title><rect x="71.0422%" y="501" width="1.0342%" height="15" fill="rgb(225,198,50)" fg:x="893" fg:w="13"/><text x="71.2922%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="71.2013%" y="485" width="0.8751%" height="15" fill="rgb(227,208,48)" fg:x="895" fg:w="11"/><text x="71.4513%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="71.2013%" y="469" width="0.8751%" height="15" fill="rgb(238,134,41)" fg:x="895" fg:w="11"/><text x="71.4513%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="71.4399%" y="453" width="0.6364%" height="15" fill="rgb(241,58,39)" fg:x="898" fg:w="8"/><text x="71.6899%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="71.5195%" y="437" width="0.5569%" height="15" fill="rgb(214,126,4)" fg:x="899" fg:w="7"/><text x="71.7695%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="71.8377%" y="421" width="0.2387%" height="15" fill="rgb(235,149,4)" fg:x="903" fg:w="3"/><text x="72.0877%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="71.8377%" y="405" width="0.2387%" height="15" fill="rgb(236,59,29)" fg:x="903" fg:w="3"/><text x="72.0877%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="71.8377%" y="389" width="0.2387%" height="15" fill="rgb(246,11,33)" fg:x="903" fg:w="3"/><text x="72.0877%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.9173%" y="373" width="0.1591%" height="15" fill="rgb(232,180,35)" fg:x="904" fg:w="2"/><text x="72.1673%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.9968%" y="357" width="0.0796%" height="15" fill="rgb(220,35,37)" fg:x="905" fg:w="1"/><text x="72.2468%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.9968%" y="341" width="0.0796%" height="15" fill="rgb(238,107,48)" fg:x="905" fg:w="1"/><text x="72.2468%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.4741%" y="501" width="0.0796%" height="15" fill="rgb(205,65,21)" fg:x="911" fg:w="1"/><text x="72.7241%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4741%" y="485" width="0.0796%" height="15" fill="rgb(246,138,48)" fg:x="911" fg:w="1"/><text x="72.7241%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.5537%" y="501" width="0.0796%" height="15" fill="rgb(209,220,47)" fg:x="912" fg:w="1"/><text x="72.8037%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.6333%" y="501" width="0.0796%" height="15" fill="rgb(222,162,49)" fg:x="913" fg:w="1"/><text x="72.8833%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.6333%" y="485" width="0.0796%" height="15" fill="rgb(243,123,11)" fg:x="913" fg:w="1"/><text x="72.8833%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.6333%" y="469" width="0.0796%" height="15" fill="rgb(221,229,41)" fg:x="913" fg:w="1"/><text x="72.8833%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.9515%" y="421" width="0.0796%" height="15" fill="rgb(216,68,4)" fg:x="917" fg:w="1"/><text x="73.2015%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.9515%" y="405" width="0.0796%" height="15" fill="rgb(207,88,35)" fg:x="917" fg:w="1"/><text x="73.2015%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="72.9515%" y="389" width="0.0796%" height="15" fill="rgb(252,2,5)" fg:x="917" fg:w="1"/><text x="73.2015%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.9515%" y="373" width="0.0796%" height="15" fill="rgb(209,173,7)" fg:x="917" fg:w="1"/><text x="73.2015%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.9515%" y="357" width="0.0796%" height="15" fill="rgb(210,198,52)" fg:x="917" fg:w="1"/><text x="73.2015%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.9515%" y="341" width="0.0796%" height="15" fill="rgb(228,152,32)" fg:x="917" fg:w="1"/><text x="73.2015%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="72.9515%" y="453" width="0.1591%" height="15" fill="rgb(249,98,29)" fg:x="917" fg:w="2"/><text x="73.2015%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="72.9515%" y="437" width="0.1591%" height="15" fill="rgb(205,148,48)" fg:x="917" fg:w="2"/><text x="73.2015%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="73.0310%" y="421" width="0.0796%" height="15" fill="rgb(236,69,34)" fg:x="918" fg:w="1"/><text x="73.2810%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0310%" y="405" width="0.0796%" height="15" fill="rgb(220,151,41)" fg:x="918" fg:w="1"/><text x="73.2810%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="73.1106%" y="453" width="0.0796%" height="15" fill="rgb(254,106,24)" fg:x="919" fg:w="1"/><text x="73.3606%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.1901%" y="437" width="0.1591%" height="15" fill="rgb(210,37,48)" fg:x="920" fg:w="2"/><text x="73.4401%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.2697%" y="421" width="0.0796%" height="15" fill="rgb(254,131,5)" fg:x="921" fg:w="1"/><text x="73.5197%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.2697%" y="405" width="0.0796%" height="15" fill="rgb(216,55,41)" fg:x="921" fg:w="1"/><text x="73.5197%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="72.7128%" y="485" width="0.7160%" height="15" fill="rgb(250,35,31)" fg:x="914" fg:w="9"/><text x="72.9628%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="72.7924%" y="469" width="0.6364%" height="15" fill="rgb(207,124,33)" fg:x="915" fg:w="8"/><text x="73.0424%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="73.1901%" y="453" width="0.2387%" height="15" fill="rgb(249,175,17)" fg:x="920" fg:w="3"/><text x="73.4401%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="73.3492%" y="437" width="0.0796%" height="15" fill="rgb(224,175,39)" fg:x="922" fg:w="1"/><text x="73.5992%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.5084%" y="437" width="0.0796%" height="15" fill="rgb(208,67,49)" fg:x="924" fg:w="1"/><text x="73.7584%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="73.4288%" y="485" width="0.2387%" height="15" fill="rgb(222,188,41)" fg:x="923" fg:w="3"/><text x="73.6788%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="73.4288%" y="469" width="0.2387%" height="15" fill="rgb(243,213,30)" fg:x="923" fg:w="3"/><text x="73.6788%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="73.4288%" y="453" width="0.2387%" height="15" fill="rgb(253,100,45)" fg:x="923" fg:w="3"/><text x="73.6788%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="73.5879%" y="437" width="0.0796%" height="15" fill="rgb(226,24,44)" fg:x="925" fg:w="1"/><text x="73.8379%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="73.5879%" y="421" width="0.0796%" height="15" fill="rgb(215,41,24)" fg:x="925" fg:w="1"/><text x="73.8379%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="73.5879%" y="405" width="0.0796%" height="15" fill="rgb(254,53,33)" fg:x="925" fg:w="1"/><text x="73.8379%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.5879%" y="389" width="0.0796%" height="15" fill="rgb(242,103,10)" fg:x="925" fg:w="1"/><text x="73.8379%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (18 samples, 1.43%)</title><rect x="72.3946%" y="533" width="1.4320%" height="15" fill="rgb(246,29,21)" fg:x="910" fg:w="18"/><text x="72.6446%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (18 samples, 1.43%)</title><rect x="72.3946%" y="517" width="1.4320%" height="15" fill="rgb(251,154,1)" fg:x="910" fg:w="18"/><text x="72.6446%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (14 samples, 1.11%)</title><rect x="72.7128%" y="501" width="1.1138%" height="15" fill="rgb(254,212,26)" fg:x="914" fg:w="14"/><text x="72.9628%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.6675%" y="485" width="0.1591%" height="15" fill="rgb(251,187,46)" fg:x="926" fg:w="2"/><text x="73.9175%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.6675%" y="469" width="0.1591%" height="15" fill="rgb(224,208,14)" fg:x="926" fg:w="2"/><text x="73.9175%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="73.7470%" y="453" width="0.0796%" height="15" fill="rgb(222,176,26)" fg:x="927" fg:w="1"/><text x="73.9970%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7470%" y="437" width="0.0796%" height="15" fill="rgb(241,219,52)" fg:x="927" fg:w="1"/><text x="73.9970%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.7470%" y="421" width="0.0796%" height="15" fill="rgb(252,198,21)" fg:x="927" fg:w="1"/><text x="73.9970%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="73.7470%" y="405" width="0.0796%" height="15" fill="rgb(244,196,23)" fg:x="927" fg:w="1"/><text x="73.9970%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7470%" y="389" width="0.0796%" height="15" fill="rgb(239,121,44)" fg:x="927" fg:w="1"/><text x="73.9970%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.7470%" y="373" width="0.0796%" height="15" fill="rgb(249,203,23)" fg:x="927" fg:w="1"/><text x="73.9970%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="73.7470%" y="357" width="0.0796%" height="15" fill="rgb(238,219,10)" fg:x="927" fg:w="1"/><text x="73.9970%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7470%" y="341" width="0.0796%" height="15" fill="rgb(241,35,46)" fg:x="927" fg:w="1"/><text x="73.9970%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.7470%" y="325" width="0.0796%" height="15" fill="rgb(218,28,6)" fg:x="927" fg:w="1"/><text x="73.9970%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (42 samples, 3.34%)</title><rect x="70.6444%" y="581" width="3.3413%" height="15" fill="rgb(233,151,50)" fg:x="888" fg:w="42"/><text x="70.8944%" y="591.50">&lt;ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (24 samples, 1.91%)</title><rect x="72.0764%" y="565" width="1.9093%" height="15" fill="rgb(208,57,8)" fg:x="906" fg:w="24"/><text x="72.3264%" y="575.50">s..</text></g><g><title>serde_json::value::de::visit_object (24 samples, 1.91%)</title><rect x="72.0764%" y="549" width="1.9093%" height="15" fill="rgb(253,99,10)" fg:x="906" fg:w="24"/><text x="72.3264%" y="559.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.8266%" y="533" width="0.1591%" height="15" fill="rgb(237,196,49)" fg:x="928" fg:w="2"/><text x="74.0766%" y="543.50"></text></g><g><title>kernel::session::get_my_session (2 samples, 0.16%)</title><rect x="74.0652%" y="533" width="0.1591%" height="15" fill="rgb(209,51,3)" fg:x="931" fg:w="2"/><text x="74.3152%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.2243%" y="437" width="0.1591%" height="15" fill="rgb(238,129,10)" fg:x="933" fg:w="2"/><text x="74.4743%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.3039%" y="421" width="0.0796%" height="15" fill="rgb(246,201,16)" fg:x="934" fg:w="1"/><text x="74.5539%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="74.3039%" y="405" width="0.0796%" height="15" fill="rgb(250,160,20)" fg:x="934" fg:w="1"/><text x="74.5539%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.3835%" y="437" width="0.0796%" height="15" fill="rgb(251,107,25)" fg:x="935" fg:w="1"/><text x="74.6335%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3835%" y="421" width="0.0796%" height="15" fill="rgb(212,103,39)" fg:x="935" fg:w="1"/><text x="74.6335%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="73.9857%" y="581" width="0.6364%" height="15" fill="rgb(207,9,29)" fg:x="930" fg:w="8"/><text x="74.2357%" y="591.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="73.9857%" y="565" width="0.6364%" height="15" fill="rgb(227,84,3)" fg:x="930" fg:w="8"/><text x="74.2357%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="73.9857%" y="549" width="0.6364%" height="15" fill="rgb(242,194,7)" fg:x="930" fg:w="8"/><text x="74.2357%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="74.2243%" y="533" width="0.3978%" height="15" fill="rgb(230,40,4)" fg:x="933" fg:w="5"/><text x="74.4743%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="74.2243%" y="517" width="0.3978%" height="15" fill="rgb(243,229,33)" fg:x="933" fg:w="5"/><text x="74.4743%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="74.2243%" y="501" width="0.3978%" height="15" fill="rgb(240,65,24)" fg:x="933" fg:w="5"/><text x="74.4743%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="74.2243%" y="485" width="0.3978%" height="15" fill="rgb(212,28,20)" fg:x="933" fg:w="5"/><text x="74.4743%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="74.2243%" y="469" width="0.3978%" height="15" fill="rgb(209,72,3)" fg:x="933" fg:w="5"/><text x="74.4743%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="74.2243%" y="453" width="0.3978%" height="15" fill="rgb(238,170,36)" fg:x="933" fg:w="5"/><text x="74.4743%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.4630%" y="437" width="0.1591%" height="15" fill="rgb(236,19,38)" fg:x="936" fg:w="2"/><text x="74.7130%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.4630%" y="421" width="0.1591%" height="15" fill="rgb(230,67,43)" fg:x="936" fg:w="2"/><text x="74.7130%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5426%" y="405" width="0.0796%" height="15" fill="rgb(227,14,36)" fg:x="937" fg:w="1"/><text x="74.7926%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5426%" y="389" width="0.0796%" height="15" fill="rgb(247,171,49)" fg:x="937" fg:w="1"/><text x="74.7926%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="74.5426%" y="373" width="0.0796%" height="15" fill="rgb(235,164,51)" fg:x="937" fg:w="1"/><text x="74.7926%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6221%" y="581" width="0.0796%" height="15" fill="rgb(246,107,20)" fg:x="938" fg:w="1"/><text x="74.8721%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (60 samples, 4.77%)</title><rect x="70.0875%" y="613" width="4.7733%" height="15" fill="rgb(226,88,18)" fg:x="881" fg:w="60"/><text x="70.3375%" y="623.50">&lt;engin..</text></g><g><title>engine::session::internal::Entities::add_persisted (60 samples, 4.77%)</title><rect x="70.0875%" y="597" width="4.7733%" height="15" fill="rgb(235,136,9)" fg:x="881" fg:w="60"/><text x="70.3375%" y="607.50">engine..</text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="74.7017%" y="581" width="0.1591%" height="15" fill="rgb(209,3,34)" fg:x="939" fg:w="2"/><text x="74.9517%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7812%" y="565" width="0.0796%" height="15" fill="rgb(213,38,19)" fg:x="940" fg:w="1"/><text x="75.0312%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.7812%" y="549" width="0.0796%" height="15" fill="rgb(254,24,24)" fg:x="940" fg:w="1"/><text x="75.0312%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="74.8608%" y="453" width="0.1591%" height="15" fill="rgb(219,122,42)" fg:x="941" fg:w="2"/><text x="75.1108%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (63 samples, 5.01%)</title><rect x="70.0875%" y="629" width="5.0119%" height="15" fill="rgb(205,128,31)" fg:x="881" fg:w="63"/><text x="70.3375%" y="639.50">&lt;engin..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="74.8608%" y="613" width="0.2387%" height="15" fill="rgb(212,142,0)" fg:x="941" fg:w="3"/><text x="75.1108%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="74.8608%" y="597" width="0.2387%" height="15" fill="rgb(211,25,35)" fg:x="941" fg:w="3"/><text x="75.1108%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="74.8608%" y="581" width="0.2387%" height="15" fill="rgb(220,150,53)" fg:x="941" fg:w="3"/><text x="75.1108%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="74.8608%" y="565" width="0.2387%" height="15" fill="rgb(220,30,24)" fg:x="941" fg:w="3"/><text x="75.1108%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="74.8608%" y="549" width="0.2387%" height="15" fill="rgb(218,86,23)" fg:x="941" fg:w="3"/><text x="75.1108%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="74.8608%" y="533" width="0.2387%" height="15" fill="rgb(206,62,27)" fg:x="941" fg:w="3"/><text x="75.1108%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="74.8608%" y="517" width="0.2387%" height="15" fill="rgb(249,174,0)" fg:x="941" fg:w="3"/><text x="75.1108%" y="527.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="74.8608%" y="501" width="0.2387%" height="15" fill="rgb(246,67,27)" fg:x="941" fg:w="3"/><text x="75.1108%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="74.8608%" y="485" width="0.2387%" height="15" fill="rgb(250,195,30)" fg:x="941" fg:w="3"/><text x="75.1108%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="74.8608%" y="469" width="0.2387%" height="15" fill="rgb(251,171,50)" fg:x="941" fg:w="3"/><text x="75.1108%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.0199%" y="453" width="0.0796%" height="15" fill="rgb(236,196,10)" fg:x="943" fg:w="1"/><text x="75.2699%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.0199%" y="437" width="0.0796%" height="15" fill="rgb(249,228,52)" fg:x="943" fg:w="1"/><text x="75.2699%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.0199%" y="421" width="0.0796%" height="15" fill="rgb(219,60,51)" fg:x="943" fg:w="1"/><text x="75.2699%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.0199%" y="405" width="0.0796%" height="15" fill="rgb(240,198,24)" fg:x="943" fg:w="1"/><text x="75.2699%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.0199%" y="389" width="0.0796%" height="15" fill="rgb(240,192,40)" fg:x="943" fg:w="1"/><text x="75.2699%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="75.0199%" y="373" width="0.0796%" height="15" fill="rgb(219,118,5)" fg:x="943" fg:w="1"/><text x="75.2699%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="75.0199%" y="357" width="0.0796%" height="15" fill="rgb(205,202,34)" fg:x="943" fg:w="1"/><text x="75.2699%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="75.0199%" y="341" width="0.0796%" height="15" fill="rgb(234,153,26)" fg:x="943" fg:w="1"/><text x="75.2699%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="75.0199%" y="325" width="0.0796%" height="15" fill="rgb(229,26,29)" fg:x="943" fg:w="1"/><text x="75.2699%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.0199%" y="309" width="0.0796%" height="15" fill="rgb(237,115,21)" fg:x="943" fg:w="1"/><text x="75.2699%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.0199%" y="293" width="0.0796%" height="15" fill="rgb(252,144,15)" fg:x="943" fg:w="1"/><text x="75.2699%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.0199%" y="277" width="0.0796%" height="15" fill="rgb(232,26,13)" fg:x="943" fg:w="1"/><text x="75.2699%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="75.0199%" y="261" width="0.0796%" height="15" fill="rgb(206,44,19)" fg:x="943" fg:w="1"/><text x="75.2699%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.0199%" y="245" width="0.0796%" height="15" fill="rgb(249,159,2)" fg:x="943" fg:w="1"/><text x="75.2699%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="75.0199%" y="229" width="0.0796%" height="15" fill="rgb(231,5,32)" fg:x="943" fg:w="1"/><text x="75.2699%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="75.0199%" y="213" width="0.0796%" height="15" fill="rgb(249,210,18)" fg:x="943" fg:w="1"/><text x="75.2699%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="75.0199%" y="197" width="0.0796%" height="15" fill="rgb(215,223,36)" fg:x="943" fg:w="1"/><text x="75.2699%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.0199%" y="181" width="0.0796%" height="15" fill="rgb(245,185,20)" fg:x="943" fg:w="1"/><text x="75.2699%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="75.0994%" y="597" width="0.1591%" height="15" fill="rgb(206,224,11)" fg:x="944" fg:w="2"/><text x="75.3494%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.1790%" y="581" width="0.0796%" height="15" fill="rgb(248,73,42)" fg:x="945" fg:w="1"/><text x="75.4290%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.3381%" y="501" width="0.0796%" height="15" fill="rgb(219,149,31)" fg:x="947" fg:w="1"/><text x="75.5881%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (5 samples, 0.40%)</title><rect x="75.0994%" y="629" width="0.3978%" height="15" fill="rgb(243,104,17)" fg:x="944" fg:w="5"/><text x="75.3494%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="75.0994%" y="613" width="0.3978%" height="15" fill="rgb(244,117,33)" fg:x="944" fg:w="5"/><text x="75.3494%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="75.2586%" y="597" width="0.2387%" height="15" fill="rgb(251,25,47)" fg:x="946" fg:w="3"/><text x="75.5086%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="75.2586%" y="581" width="0.2387%" height="15" fill="rgb(249,70,13)" fg:x="946" fg:w="3"/><text x="75.5086%" y="591.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.2586%" y="565" width="0.2387%" height="15" fill="rgb(217,133,18)" fg:x="946" fg:w="3"/><text x="75.5086%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.2586%" y="549" width="0.2387%" height="15" fill="rgb(248,97,28)" fg:x="946" fg:w="3"/><text x="75.5086%" y="559.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.2586%" y="533" width="0.2387%" height="15" fill="rgb(237,193,4)" fg:x="946" fg:w="3"/><text x="75.5086%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.2586%" y="517" width="0.2387%" height="15" fill="rgb(247,198,45)" fg:x="946" fg:w="3"/><text x="75.5086%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="75.4177%" y="501" width="0.0796%" height="15" fill="rgb(245,2,20)" fg:x="948" fg:w="1"/><text x="75.6677%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="75.6563%" y="597" width="0.1591%" height="15" fill="rgb(210,71,36)" fg:x="951" fg:w="2"/><text x="75.9063%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="75.7359%" y="581" width="0.0796%" height="15" fill="rgb(238,114,30)" fg:x="952" fg:w="1"/><text x="75.9859%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7359%" y="565" width="0.0796%" height="15" fill="rgb(241,200,2)" fg:x="952" fg:w="1"/><text x="75.9859%" y="575.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (124 samples, 9.86%)</title><rect x="66.1098%" y="661" width="9.8648%" height="15" fill="rgb(232,106,18)" fg:x="831" fg:w="124"/><text x="66.3598%" y="671.50">engine::sessio..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (124 samples, 9.86%)</title><rect x="66.1098%" y="645" width="9.8648%" height="15" fill="rgb(211,141,18)" fg:x="831" fg:w="124"/><text x="66.3598%" y="655.50">engine::sessio..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (6 samples, 0.48%)</title><rect x="75.4972%" y="629" width="0.4773%" height="15" fill="rgb(224,9,9)" fg:x="949" fg:w="6"/><text x="75.7472%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.48%)</title><rect x="75.4972%" y="613" width="0.4773%" height="15" fill="rgb(249,137,46)" fg:x="949" fg:w="6"/><text x="75.7472%" y="623.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="75.8154%" y="597" width="0.1591%" height="15" fill="rgb(236,44,45)" fg:x="953" fg:w="2"/><text x="76.0654%" y="607.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.16%)</title><rect x="75.8154%" y="581" width="0.1591%" height="15" fill="rgb(205,68,40)" fg:x="953" fg:w="2"/><text x="76.0654%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="75.8154%" y="565" width="0.1591%" height="15" fill="rgb(214,198,49)" fg:x="953" fg:w="2"/><text x="76.0654%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="75.8154%" y="549" width="0.1591%" height="15" fill="rgb(226,140,45)" fg:x="953" fg:w="2"/><text x="76.0654%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (957 samples, 76.13%)</title><rect x="0.0000%" y="709" width="76.1337%" height="15" fill="rgb(209,109,20)" fg:x="0" fg:w="957"/><text x="0.2500%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (957 samples, 76.13%)</title><rect x="0.0000%" y="693" width="76.1337%" height="15" fill="rgb(217,33,46)" fg:x="0" fg:w="957"/><text x="0.2500%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (957 samples, 76.13%)</title><rect x="0.0000%" y="677" width="76.1337%" height="15" fill="rgb(232,150,33)" fg:x="0" fg:w="957"/><text x="0.2500%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="75.9745%" y="661" width="0.1591%" height="15" fill="rgb(233,76,25)" fg:x="955" fg:w="2"/><text x="76.2245%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="75.9745%" y="645" width="0.1591%" height="15" fill="rgb(254,219,23)" fg:x="955" fg:w="2"/><text x="76.2245%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="75.9745%" y="629" width="0.1591%" height="15" fill="rgb(233,108,4)" fg:x="955" fg:w="2"/><text x="76.2245%" y="639.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="75.9745%" y="613" width="0.1591%" height="15" fill="rgb(229,98,6)" fg:x="955" fg:w="2"/><text x="76.2245%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="76.1337%" y="645" width="0.1591%" height="15" fill="rgb(217,40,27)" fg:x="957" fg:w="2"/><text x="76.3837%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="76.1337%" y="629" width="0.1591%" height="15" fill="rgb(221,35,43)" fg:x="957" fg:w="2"/><text x="76.3837%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.2928%" y="613" width="0.0796%" height="15" fill="rgb(212,107,11)" fg:x="959" fg:w="1"/><text x="76.5428%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.4519%" y="549" width="0.0796%" height="15" fill="rgb(245,42,44)" fg:x="961" fg:w="1"/><text x="76.7019%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4519%" y="533" width="0.0796%" height="15" fill="rgb(209,31,12)" fg:x="961" fg:w="1"/><text x="76.7019%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6110%" y="501" width="0.0796%" height="15" fill="rgb(210,228,54)" fg:x="963" fg:w="1"/><text x="76.8610%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="76.4519%" y="565" width="0.3978%" height="15" fill="rgb(241,19,33)" fg:x="961" fg:w="5"/><text x="76.7019%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="76.5314%" y="549" width="0.3182%" height="15" fill="rgb(229,51,27)" fg:x="962" fg:w="4"/><text x="76.7814%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="76.5314%" y="533" width="0.3182%" height="15" fill="rgb(214,167,49)" fg:x="962" fg:w="4"/><text x="76.7814%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="76.5314%" y="517" width="0.3182%" height="15" fill="rgb(248,140,47)" fg:x="962" fg:w="4"/><text x="76.7814%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="76.6905%" y="501" width="0.1591%" height="15" fill="rgb(228,6,51)" fg:x="964" fg:w="2"/><text x="76.9405%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="76.1337%" y="661" width="0.7955%" height="15" fill="rgb(242,44,53)" fg:x="957" fg:w="10"/><text x="76.3837%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (8 samples, 0.64%)</title><rect x="76.2928%" y="645" width="0.6364%" height="15" fill="rgb(249,90,50)" fg:x="959" fg:w="8"/><text x="76.5428%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="76.2928%" y="629" width="0.6364%" height="15" fill="rgb(222,84,19)" fg:x="959" fg:w="8"/><text x="76.5428%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (7 samples, 0.56%)</title><rect x="76.3723%" y="613" width="0.5569%" height="15" fill="rgb(214,140,12)" fg:x="960" fg:w="7"/><text x="76.6223%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="76.3723%" y="597" width="0.5569%" height="15" fill="rgb(210,20,43)" fg:x="960" fg:w="7"/><text x="76.6223%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="76.4519%" y="581" width="0.4773%" height="15" fill="rgb(243,1,40)" fg:x="961" fg:w="6"/><text x="76.7019%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8496%" y="565" width="0.0796%" height="15" fill="rgb(224,102,26)" fg:x="966" fg:w="1"/><text x="77.0996%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="76.9292%" y="597" width="0.1591%" height="15" fill="rgb(221,179,1)" fg:x="967" fg:w="2"/><text x="77.1792%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="76.9292%" y="581" width="0.1591%" height="15" fill="rgb(216,209,47)" fg:x="967" fg:w="2"/><text x="77.1792%" y="591.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="76.9292%" y="565" width="0.1591%" height="15" fill="rgb(251,135,9)" fg:x="967" fg:w="2"/><text x="77.1792%" y="575.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="77.0883%" y="549" width="0.3182%" height="15" fill="rgb(242,9,36)" fg:x="969" fg:w="4"/><text x="77.3383%" y="559.50"></text></g><g><title>__asprintf (4 samples, 0.32%)</title><rect x="77.0883%" y="533" width="0.3182%" height="15" fill="rgb(249,60,37)" fg:x="969" fg:w="4"/><text x="77.3383%" y="543.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (11 samples, 0.88%)</title><rect x="77.0883%" y="597" width="0.8751%" height="15" fill="rgb(230,66,45)" fg:x="969" fg:w="11"/><text x="77.3383%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (11 samples, 0.88%)</title><rect x="77.0883%" y="581" width="0.8751%" height="15" fill="rgb(216,1,47)" fg:x="969" fg:w="11"/><text x="77.3383%" y="591.50"></text></g><g><title>libloading::safe::Library::new (11 samples, 0.88%)</title><rect x="77.0883%" y="565" width="0.8751%" height="15" fill="rgb(235,8,23)" fg:x="969" fg:w="11"/><text x="77.3383%" y="575.50"></text></g><g><title>dlopen (7 samples, 0.56%)</title><rect x="77.4065%" y="549" width="0.5569%" height="15" fill="rgb(225,136,11)" fg:x="973" fg:w="7"/><text x="77.6565%" y="559.50"></text></g><g><title>_dl_catch_error (7 samples, 0.56%)</title><rect x="77.4065%" y="533" width="0.5569%" height="15" fill="rgb(228,63,44)" fg:x="973" fg:w="7"/><text x="77.6565%" y="543.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="77.4065%" y="517" width="0.5569%" height="15" fill="rgb(240,43,52)" fg:x="973" fg:w="7"/><text x="77.6565%" y="527.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="77.4065%" y="501" width="0.5569%" height="15" fill="rgb(217,167,36)" fg:x="973" fg:w="7"/><text x="77.6565%" y="511.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="77.4065%" y="485" width="0.5569%" height="15" fill="rgb(250,19,6)" fg:x="973" fg:w="7"/><text x="77.6565%" y="495.50"></text></g><g><title>engine::session::Session::initialize (15 samples, 1.19%)</title><rect x="76.9292%" y="613" width="1.1933%" height="15" fill="rgb(236,60,51)" fg:x="967" fg:w="15"/><text x="77.1792%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="77.9634%" y="597" width="0.1591%" height="15" fill="rgb(222,217,20)" fg:x="980" fg:w="2"/><text x="78.2134%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="77.9634%" y="581" width="0.1591%" height="15" fill="rgb(242,65,52)" fg:x="980" fg:w="2"/><text x="78.2134%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.0430%" y="565" width="0.0796%" height="15" fill="rgb(217,5,41)" fg:x="981" fg:w="1"/><text x="78.2930%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.0430%" y="549" width="0.0796%" height="15" fill="rgb(223,208,53)" fg:x="981" fg:w="1"/><text x="78.2930%" y="559.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (17 samples, 1.35%)</title><rect x="76.9292%" y="661" width="1.3524%" height="15" fill="rgb(221,104,30)" fg:x="967" fg:w="17"/><text x="77.1792%" y="671.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (17 samples, 1.35%)</title><rect x="76.9292%" y="645" width="1.3524%" height="15" fill="rgb(230,210,42)" fg:x="967" fg:w="17"/><text x="77.1792%" y="655.50"></text></g><g><title>engine::session::Session::new (17 samples, 1.35%)</title><rect x="76.9292%" y="629" width="1.3524%" height="15" fill="rgb(206,205,27)" fg:x="967" fg:w="17"/><text x="77.1792%" y="639.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="78.1225%" y="613" width="0.1591%" height="15" fill="rgb(233,114,38)" fg:x="982" fg:w="2"/><text x="78.3725%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="78.1225%" y="597" width="0.1591%" height="15" fill="rgb(216,174,36)" fg:x="982" fg:w="2"/><text x="78.3725%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="78.1225%" y="581" width="0.1591%" height="15" fill="rgb(211,30,9)" fg:x="982" fg:w="2"/><text x="78.3725%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="78.1225%" y="565" width="0.1591%" height="15" fill="rgb(216,8,21)" fg:x="982" fg:w="2"/><text x="78.3725%" y="575.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="78.1225%" y="549" width="0.1591%" height="15" fill="rgb(237,209,39)" fg:x="982" fg:w="2"/><text x="78.3725%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2816%" y="645" width="0.0796%" height="15" fill="rgb(235,111,47)" fg:x="984" fg:w="1"/><text x="78.5316%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="78.4407%" y="629" width="0.0796%" height="15" fill="rgb(216,139,9)" fg:x="986" fg:w="1"/><text x="78.6907%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4407%" y="613" width="0.0796%" height="15" fill="rgb(248,185,4)" fg:x="986" fg:w="1"/><text x="78.6907%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4407%" y="597" width="0.0796%" height="15" fill="rgb(239,185,25)" fg:x="986" fg:w="1"/><text x="78.6907%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.4407%" y="581" width="0.0796%" height="15" fill="rgb(233,207,8)" fg:x="986" fg:w="1"/><text x="78.6907%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.4407%" y="565" width="0.0796%" height="15" fill="rgb(249,220,24)" fg:x="986" fg:w="1"/><text x="78.6907%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.4407%" y="549" width="0.0796%" height="15" fill="rgb(221,50,14)" fg:x="986" fg:w="1"/><text x="78.6907%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.4407%" y="533" width="0.0796%" height="15" fill="rgb(227,79,42)" fg:x="986" fg:w="1"/><text x="78.6907%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.4407%" y="517" width="0.0796%" height="15" fill="rgb(228,218,49)" fg:x="986" fg:w="1"/><text x="78.6907%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.4407%" y="501" width="0.0796%" height="15" fill="rgb(249,18,15)" fg:x="986" fg:w="1"/><text x="78.6907%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.4407%" y="485" width="0.0796%" height="15" fill="rgb(212,84,27)" fg:x="986" fg:w="1"/><text x="78.6907%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.4407%" y="469" width="0.0796%" height="15" fill="rgb(207,83,24)" fg:x="986" fg:w="1"/><text x="78.6907%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.4407%" y="453" width="0.0796%" height="15" fill="rgb(219,61,7)" fg:x="986" fg:w="1"/><text x="78.6907%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4407%" y="437" width="0.0796%" height="15" fill="rgb(211,43,29)" fg:x="986" fg:w="1"/><text x="78.6907%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="78.5203%" y="629" width="0.0796%" height="15" fill="rgb(243,15,23)" fg:x="987" fg:w="1"/><text x="78.7703%" y="639.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="78.5203%" y="613" width="0.0796%" height="15" fill="rgb(217,52,28)" fg:x="987" fg:w="1"/><text x="78.7703%" y="623.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="78.5203%" y="597" width="0.0796%" height="15" fill="rgb(210,35,6)" fg:x="987" fg:w="1"/><text x="78.7703%" y="607.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="78.5203%" y="581" width="0.0796%" height="15" fill="rgb(237,187,28)" fg:x="987" fg:w="1"/><text x="78.7703%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="78.5203%" y="565" width="0.0796%" height="15" fill="rgb(231,136,24)" fg:x="987" fg:w="1"/><text x="78.7703%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="78.5203%" y="549" width="0.0796%" height="15" fill="rgb(205,176,52)" fg:x="987" fg:w="1"/><text x="78.7703%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="78.5203%" y="533" width="0.0796%" height="15" fill="rgb(218,65,12)" fg:x="987" fg:w="1"/><text x="78.7703%" y="543.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="78.5203%" y="517" width="0.0796%" height="15" fill="rgb(234,101,21)" fg:x="987" fg:w="1"/><text x="78.7703%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="78.5998%" y="565" width="0.0796%" height="15" fill="rgb(206,13,20)" fg:x="988" fg:w="1"/><text x="78.8498%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5998%" y="549" width="0.0796%" height="15" fill="rgb(236,89,44)" fg:x="988" fg:w="1"/><text x="78.8498%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5998%" y="533" width="0.0796%" height="15" fill="rgb(225,52,17)" fg:x="988" fg:w="1"/><text x="78.8498%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.5998%" y="517" width="0.0796%" height="15" fill="rgb(214,27,25)" fg:x="988" fg:w="1"/><text x="78.8498%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.5998%" y="501" width="0.0796%" height="15" fill="rgb(240,141,35)" fg:x="988" fg:w="1"/><text x="78.8498%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.5998%" y="485" width="0.0796%" height="15" fill="rgb(216,126,3)" fg:x="988" fg:w="1"/><text x="78.8498%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="78.5998%" y="597" width="0.1591%" height="15" fill="rgb(249,196,23)" fg:x="988" fg:w="2"/><text x="78.8498%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="78.5998%" y="581" width="0.1591%" height="15" fill="rgb(215,185,43)" fg:x="988" fg:w="2"/><text x="78.8498%" y="591.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="78.6794%" y="565" width="0.0796%" height="15" fill="rgb(208,194,36)" fg:x="989" fg:w="1"/><text x="78.9294%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6794%" y="549" width="0.0796%" height="15" fill="rgb(245,182,12)" fg:x="989" fg:w="1"/><text x="78.9294%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.8385%" y="533" width="0.1591%" height="15" fill="rgb(244,222,52)" fg:x="991" fg:w="2"/><text x="79.0885%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.8385%" y="517" width="0.1591%" height="15" fill="rgb(236,222,51)" fg:x="991" fg:w="2"/><text x="79.0885%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.9181%" y="501" width="0.0796%" height="15" fill="rgb(254,71,22)" fg:x="992" fg:w="1"/><text x="79.1681%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.9181%" y="485" width="0.0796%" height="15" fill="rgb(250,104,15)" fg:x="992" fg:w="1"/><text x="79.1681%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.0772%" y="517" width="0.0796%" height="15" fill="rgb(229,223,46)" fg:x="994" fg:w="1"/><text x="79.3272%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0772%" y="501" width="0.0796%" height="15" fill="rgb(209,129,18)" fg:x="994" fg:w="1"/><text x="79.3272%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.0772%" y="485" width="0.0796%" height="15" fill="rgb(224,160,1)" fg:x="994" fg:w="1"/><text x="79.3272%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.0772%" y="469" width="0.0796%" height="15" fill="rgb(237,112,21)" fg:x="994" fg:w="1"/><text x="79.3272%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.0772%" y="453" width="0.0796%" height="15" fill="rgb(215,198,53)" fg:x="994" fg:w="1"/><text x="79.3272%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="79.1567%" y="517" width="0.2387%" height="15" fill="rgb(218,227,35)" fg:x="995" fg:w="3"/><text x="79.4067%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.2363%" y="501" width="0.1591%" height="15" fill="rgb(232,121,22)" fg:x="996" fg:w="2"/><text x="79.4863%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.2363%" y="485" width="0.1591%" height="15" fill="rgb(235,52,54)" fg:x="996" fg:w="2"/><text x="79.4863%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.3158%" y="469" width="0.0796%" height="15" fill="rgb(219,21,44)" fg:x="997" fg:w="1"/><text x="79.5658%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.3158%" y="453" width="0.0796%" height="15" fill="rgb(221,51,43)" fg:x="997" fg:w="1"/><text x="79.5658%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.3158%" y="437" width="0.0796%" height="15" fill="rgb(225,77,42)" fg:x="997" fg:w="1"/><text x="79.5658%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.3158%" y="421" width="0.0796%" height="15" fill="rgb(214,117,53)" fg:x="997" fg:w="1"/><text x="79.5658%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="79.3954%" y="501" width="0.0796%" height="15" fill="rgb(218,227,27)" fg:x="998" fg:w="1"/><text x="79.6454%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.4749%" y="501" width="0.0796%" height="15" fill="rgb(223,214,36)" fg:x="999" fg:w="1"/><text x="79.7249%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.4749%" y="485" width="0.0796%" height="15" fill="rgb(235,21,7)" fg:x="999" fg:w="1"/><text x="79.7249%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.4749%" y="469" width="0.0796%" height="15" fill="rgb(244,216,4)" fg:x="999" fg:w="1"/><text x="79.7249%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.5545%" y="485" width="0.0796%" height="15" fill="rgb(249,197,24)" fg:x="1000" fg:w="1"/><text x="79.8045%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.5545%" y="469" width="0.0796%" height="15" fill="rgb(222,169,49)" fg:x="1000" fg:w="1"/><text x="79.8045%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.5545%" y="453" width="0.0796%" height="15" fill="rgb(207,137,33)" fg:x="1000" fg:w="1"/><text x="79.8045%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.5545%" y="437" width="0.0796%" height="15" fill="rgb(219,180,40)" fg:x="1000" fg:w="1"/><text x="79.8045%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="79.6340%" y="469" width="0.0796%" height="15" fill="rgb(250,163,42)" fg:x="1001" fg:w="1"/><text x="79.8840%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.7136%" y="469" width="0.0796%" height="15" fill="rgb(239,163,0)" fg:x="1002" fg:w="1"/><text x="79.9636%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.03%)</title><rect x="78.9976%" y="533" width="1.0342%" height="15" fill="rgb(252,38,28)" fg:x="993" fg:w="13"/><text x="79.2476%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="79.3954%" y="517" width="0.6364%" height="15" fill="rgb(254,203,26)" fg:x="998" fg:w="8"/><text x="79.6454%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="79.5545%" y="501" width="0.4773%" height="15" fill="rgb(209,129,32)" fg:x="1000" fg:w="6"/><text x="79.8045%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="79.6340%" y="485" width="0.3978%" height="15" fill="rgb(207,177,52)" fg:x="1001" fg:w="5"/><text x="79.8840%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="79.7932%" y="469" width="0.2387%" height="15" fill="rgb(230,209,36)" fg:x="1003" fg:w="3"/><text x="80.0432%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.9523%" y="453" width="0.0796%" height="15" fill="rgb(238,131,0)" fg:x="1005" fg:w="1"/><text x="80.2023%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.9523%" y="437" width="0.0796%" height="15" fill="rgb(218,61,31)" fg:x="1005" fg:w="1"/><text x="80.2023%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.9523%" y="421" width="0.0796%" height="15" fill="rgb(232,6,53)" fg:x="1005" fg:w="1"/><text x="80.2023%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.9523%" y="405" width="0.0796%" height="15" fill="rgb(254,100,32)" fg:x="1005" fg:w="1"/><text x="80.2023%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.9523%" y="389" width="0.0796%" height="15" fill="rgb(229,194,49)" fg:x="1005" fg:w="1"/><text x="80.2023%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.9523%" y="373" width="0.0796%" height="15" fill="rgb(206,208,39)" fg:x="1005" fg:w="1"/><text x="80.2023%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.9523%" y="357" width="0.0796%" height="15" fill="rgb(246,226,14)" fg:x="1005" fg:w="1"/><text x="80.2023%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.51%)</title><rect x="78.8385%" y="565" width="1.5115%" height="15" fill="rgb(226,48,32)" fg:x="991" fg:w="19"/><text x="79.0885%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.51%)</title><rect x="78.8385%" y="549" width="1.5115%" height="15" fill="rgb(252,43,54)" fg:x="991" fg:w="19"/><text x="79.0885%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="80.0318%" y="533" width="0.3182%" height="15" fill="rgb(207,124,0)" fg:x="1006" fg:w="4"/><text x="80.2818%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="80.1114%" y="517" width="0.2387%" height="15" fill="rgb(248,188,30)" fg:x="1007" fg:w="3"/><text x="80.3614%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="80.1114%" y="501" width="0.2387%" height="15" fill="rgb(232,14,43)" fg:x="1007" fg:w="3"/><text x="80.3614%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="80.1909%" y="485" width="0.1591%" height="15" fill="rgb(218,52,29)" fg:x="1008" fg:w="2"/><text x="80.4409%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="80.1909%" y="469" width="0.1591%" height="15" fill="rgb(218,176,50)" fg:x="1008" fg:w="2"/><text x="80.4409%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="80.1909%" y="453" width="0.1591%" height="15" fill="rgb(213,112,0)" fg:x="1008" fg:w="2"/><text x="80.4409%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.3500%" y="565" width="0.1591%" height="15" fill="rgb(244,216,8)" fg:x="1010" fg:w="2"/><text x="80.6000%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="80.3500%" y="549" width="0.1591%" height="15" fill="rgb(224,148,53)" fg:x="1010" fg:w="2"/><text x="80.6000%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.3500%" y="533" width="0.1591%" height="15" fill="rgb(241,133,40)" fg:x="1010" fg:w="2"/><text x="80.6000%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.3500%" y="517" width="0.1591%" height="15" fill="rgb(232,17,44)" fg:x="1010" fg:w="2"/><text x="80.6000%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.4296%" y="501" width="0.0796%" height="15" fill="rgb(213,32,25)" fg:x="1011" fg:w="1"/><text x="80.6796%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.5091%" y="517" width="0.0796%" height="15" fill="rgb(249,115,27)" fg:x="1012" fg:w="1"/><text x="80.7591%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.5091%" y="501" width="0.0796%" height="15" fill="rgb(241,50,1)" fg:x="1012" fg:w="1"/><text x="80.7591%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.5091%" y="485" width="0.0796%" height="15" fill="rgb(244,175,40)" fg:x="1012" fg:w="1"/><text x="80.7591%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.5887%" y="469" width="0.0796%" height="15" fill="rgb(230,94,34)" fg:x="1013" fg:w="1"/><text x="80.8387%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.5887%" y="453" width="0.0796%" height="15" fill="rgb(223,185,29)" fg:x="1013" fg:w="1"/><text x="80.8387%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.5887%" y="437" width="0.0796%" height="15" fill="rgb(225,193,15)" fg:x="1013" fg:w="1"/><text x="80.8387%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.5887%" y="421" width="0.0796%" height="15" fill="rgb(252,121,38)" fg:x="1013" fg:w="1"/><text x="80.8387%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.5887%" y="405" width="0.0796%" height="15" fill="rgb(232,44,12)" fg:x="1013" fg:w="1"/><text x="80.8387%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.7478%" y="453" width="0.0796%" height="15" fill="rgb(226,45,54)" fg:x="1015" fg:w="1"/><text x="80.9978%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7478%" y="437" width="0.0796%" height="15" fill="rgb(209,67,17)" fg:x="1015" fg:w="1"/><text x="80.9978%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.7478%" y="421" width="0.0796%" height="15" fill="rgb(219,108,52)" fg:x="1015" fg:w="1"/><text x="80.9978%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7478%" y="405" width="0.0796%" height="15" fill="rgb(216,118,19)" fg:x="1015" fg:w="1"/><text x="80.9978%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="80.5887%" y="485" width="0.3182%" height="15" fill="rgb(228,120,40)" fg:x="1013" fg:w="4"/><text x="80.8387%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="80.6683%" y="469" width="0.2387%" height="15" fill="rgb(221,218,34)" fg:x="1014" fg:w="3"/><text x="80.9183%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.8274%" y="453" width="0.0796%" height="15" fill="rgb(235,89,14)" fg:x="1016" fg:w="1"/><text x="81.0774%" y="463.50"></text></g><g><title>engine::session::Session::flush (33 samples, 2.63%)</title><rect x="78.3612%" y="645" width="2.6253%" height="15" fill="rgb(248,89,7)" fg:x="985" fg:w="33"/><text x="78.6112%" y="655.50">en..</text></g><g><title>engine::session::state::State::close (30 samples, 2.39%)</title><rect x="78.5998%" y="629" width="2.3866%" height="15" fill="rgb(212,114,34)" fg:x="988" fg:w="30"/><text x="78.8498%" y="639.50">en..</text></g><g><title>engine::session::state::State::flush_entities (30 samples, 2.39%)</title><rect x="78.5998%" y="613" width="2.3866%" height="15" fill="rgb(246,88,32)" fg:x="988" fg:w="30"/><text x="78.8498%" y="623.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (28 samples, 2.23%)</title><rect x="78.7589%" y="597" width="2.2275%" height="15" fill="rgb(237,135,0)" fg:x="990" fg:w="28"/><text x="79.0089%" y="607.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (28 samples, 2.23%)</title><rect x="78.7589%" y="581" width="2.2275%" height="15" fill="rgb(220,201,54)" fg:x="990" fg:w="28"/><text x="79.0089%" y="591.50">e..</text></g><g><title>kernel::model::any_entity_changes (6 samples, 0.48%)</title><rect x="80.5091%" y="565" width="0.4773%" height="15" fill="rgb(210,142,36)" fg:x="1012" fg:w="6"/><text x="80.7591%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="80.5091%" y="549" width="0.4773%" height="15" fill="rgb(247,189,26)" fg:x="1012" fg:w="6"/><text x="80.7591%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="80.5091%" y="533" width="0.4773%" height="15" fill="rgb(223,89,24)" fg:x="1012" fg:w="6"/><text x="80.7591%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="80.5887%" y="517" width="0.3978%" height="15" fill="rgb(205,90,19)" fg:x="1013" fg:w="5"/><text x="80.8387%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="80.5887%" y="501" width="0.3978%" height="15" fill="rgb(234,57,40)" fg:x="1013" fg:w="5"/><text x="80.8387%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.9069%" y="485" width="0.0796%" height="15" fill="rgb(213,109,10)" fg:x="1017" fg:w="1"/><text x="81.1569%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9865%" y="533" width="0.0796%" height="15" fill="rgb(214,189,23)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9865%" y="517" width="0.0796%" height="15" fill="rgb(234,200,10)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9865%" y="501" width="0.0796%" height="15" fill="rgb(221,148,16)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9865%" y="485" width="0.0796%" height="15" fill="rgb(230,115,10)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9865%" y="469" width="0.0796%" height="15" fill="rgb(220,106,42)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9865%" y="453" width="0.0796%" height="15" fill="rgb(225,105,39)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.9865%" y="437" width="0.0796%" height="15" fill="rgb(211,161,38)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.9865%" y="421" width="0.0796%" height="15" fill="rgb(213,23,19)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.9865%" y="405" width="0.0796%" height="15" fill="rgb(240,2,33)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9865%" y="389" width="0.0796%" height="15" fill="rgb(221,29,45)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9865%" y="373" width="0.0796%" height="15" fill="rgb(242,10,19)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.9865%" y="357" width="0.0796%" height="15" fill="rgb(250,84,37)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.9865%" y="341" width="0.0796%" height="15" fill="rgb(214,136,7)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.9865%" y="325" width="0.0796%" height="15" fill="rgb(231,189,12)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.9865%" y="309" width="0.0796%" height="15" fill="rgb(244,40,16)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9865%" y="293" width="0.0796%" height="15" fill="rgb(217,29,15)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="303.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="80.9865%" y="597" width="0.1591%" height="15" fill="rgb(235,172,33)" fg:x="1018" fg:w="2"/><text x="81.2365%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="80.9865%" y="581" width="0.1591%" height="15" fill="rgb(206,148,28)" fg:x="1018" fg:w="2"/><text x="81.2365%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="80.9865%" y="565" width="0.1591%" height="15" fill="rgb(251,167,37)" fg:x="1018" fg:w="2"/><text x="81.2365%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="80.9865%" y="549" width="0.1591%" height="15" fill="rgb(229,94,52)" fg:x="1018" fg:w="2"/><text x="81.2365%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.0660%" y="533" width="0.0796%" height="15" fill="rgb(216,132,9)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.0660%" y="517" width="0.0796%" height="15" fill="rgb(208,110,29)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.0660%" y="501" width="0.0796%" height="15" fill="rgb(241,23,8)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.0660%" y="485" width="0.0796%" height="15" fill="rgb(208,26,35)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.0660%" y="469" width="0.0796%" height="15" fill="rgb(242,165,34)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.0660%" y="453" width="0.0796%" height="15" fill="rgb(222,222,33)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="80.9865%" y="629" width="0.4773%" height="15" fill="rgb(227,16,52)" fg:x="1018" fg:w="6"/><text x="81.2365%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="80.9865%" y="613" width="0.4773%" height="15" fill="rgb(213,93,12)" fg:x="1018" fg:w="6"/><text x="81.2365%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="81.1456%" y="597" width="0.3182%" height="15" fill="rgb(238,41,5)" fg:x="1020" fg:w="4"/><text x="81.3956%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="81.1456%" y="581" width="0.3182%" height="15" fill="rgb(211,60,15)" fg:x="1020" fg:w="4"/><text x="81.3956%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="81.1456%" y="565" width="0.3182%" height="15" fill="rgb(209,11,34)" fg:x="1020" fg:w="4"/><text x="81.3956%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="81.1456%" y="549" width="0.3182%" height="15" fill="rgb(254,155,53)" fg:x="1020" fg:w="4"/><text x="81.3956%" y="559.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="81.1456%" y="533" width="0.3182%" height="15" fill="rgb(236,174,8)" fg:x="1020" fg:w="4"/><text x="81.3956%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="81.4638%" y="613" width="0.0796%" height="15" fill="rgb(229,31,27)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="81.4638%" y="597" width="0.0796%" height="15" fill="rgb(242,226,26)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.4638%" y="581" width="0.0796%" height="15" fill="rgb(234,32,40)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.4638%" y="565" width="0.0796%" height="15" fill="rgb(249,226,47)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.4638%" y="549" width="0.0796%" height="15" fill="rgb(212,6,26)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4638%" y="533" width="0.0796%" height="15" fill="rgb(249,202,29)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4638%" y="517" width="0.0796%" height="15" fill="rgb(226,106,4)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4638%" y="501" width="0.0796%" height="15" fill="rgb(251,2,27)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4638%" y="485" width="0.0796%" height="15" fill="rgb(236,208,0)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4638%" y="469" width="0.0796%" height="15" fill="rgb(211,66,17)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.5434%" y="613" width="0.0796%" height="15" fill="rgb(216,129,9)" fg:x="1025" fg:w="1"/><text x="81.7934%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5434%" y="597" width="0.0796%" height="15" fill="rgb(215,130,23)" fg:x="1025" fg:w="1"/><text x="81.7934%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.5434%" y="581" width="0.0796%" height="15" fill="rgb(253,157,11)" fg:x="1025" fg:w="1"/><text x="81.7934%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5434%" y="565" width="0.0796%" height="15" fill="rgb(224,25,14)" fg:x="1025" fg:w="1"/><text x="81.7934%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6229%" y="597" width="0.0796%" height="15" fill="rgb(238,16,7)" fg:x="1026" fg:w="1"/><text x="81.8729%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="81.7025%" y="597" width="0.0796%" height="15" fill="rgb(228,74,11)" fg:x="1027" fg:w="1"/><text x="81.9525%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.7025%" y="581" width="0.0796%" height="15" fill="rgb(239,221,27)" fg:x="1027" fg:w="1"/><text x="81.9525%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7025%" y="565" width="0.0796%" height="15" fill="rgb(229,166,18)" fg:x="1027" fg:w="1"/><text x="81.9525%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.7820%" y="437" width="0.0796%" height="15" fill="rgb(254,94,46)" fg:x="1028" fg:w="1"/><text x="82.0320%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.7820%" y="517" width="0.1591%" height="15" fill="rgb(241,79,19)" fg:x="1028" fg:w="2"/><text x="82.0320%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.7820%" y="501" width="0.1591%" height="15" fill="rgb(228,99,51)" fg:x="1028" fg:w="2"/><text x="82.0320%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.7820%" y="485" width="0.1591%" height="15" fill="rgb(211,15,6)" fg:x="1028" fg:w="2"/><text x="82.0320%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.7820%" y="469" width="0.1591%" height="15" fill="rgb(245,107,54)" fg:x="1028" fg:w="2"/><text x="82.0320%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.7820%" y="453" width="0.1591%" height="15" fill="rgb(243,3,2)" fg:x="1028" fg:w="2"/><text x="82.0320%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8616%" y="437" width="0.0796%" height="15" fill="rgb(206,122,10)" fg:x="1029" fg:w="1"/><text x="82.1116%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.9411%" y="517" width="0.0796%" height="15" fill="rgb(224,88,4)" fg:x="1030" fg:w="1"/><text x="82.1911%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="81.6229%" y="613" width="0.4773%" height="15" fill="rgb(230,1,41)" fg:x="1026" fg:w="6"/><text x="81.8729%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="81.7820%" y="597" width="0.3182%" height="15" fill="rgb(230,1,31)" fg:x="1028" fg:w="4"/><text x="82.0320%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="81.7820%" y="581" width="0.3182%" height="15" fill="rgb(232,67,19)" fg:x="1028" fg:w="4"/><text x="82.0320%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="81.7820%" y="565" width="0.3182%" height="15" fill="rgb(222,206,20)" fg:x="1028" fg:w="4"/><text x="82.0320%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="81.7820%" y="549" width="0.3182%" height="15" fill="rgb(217,225,19)" fg:x="1028" fg:w="4"/><text x="82.0320%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="81.7820%" y="533" width="0.3182%" height="15" fill="rgb(234,13,33)" fg:x="1028" fg:w="4"/><text x="82.0320%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0207%" y="517" width="0.0796%" height="15" fill="rgb(254,5,1)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0207%" y="501" width="0.0796%" height="15" fill="rgb(211,121,41)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0207%" y="485" width="0.0796%" height="15" fill="rgb(213,199,35)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0207%" y="469" width="0.0796%" height="15" fill="rgb(240,118,22)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.0207%" y="453" width="0.0796%" height="15" fill="rgb(238,184,25)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0207%" y="437" width="0.0796%" height="15" fill="rgb(210,165,6)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0207%" y="421" width="0.0796%" height="15" fill="rgb(235,149,5)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0207%" y="405" width="0.0796%" height="15" fill="rgb(221,63,5)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.0207%" y="389" width="0.0796%" height="15" fill="rgb(250,44,41)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0207%" y="373" width="0.0796%" height="15" fill="rgb(235,112,47)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="82.1002%" y="597" width="0.0796%" height="15" fill="rgb(252,176,34)" fg:x="1032" fg:w="1"/><text x="82.3502%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.1002%" y="581" width="0.0796%" height="15" fill="rgb(234,50,19)" fg:x="1032" fg:w="1"/><text x="82.3502%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (16 samples, 1.27%)</title><rect x="80.9865%" y="645" width="1.2729%" height="15" fill="rgb(241,195,31)" fg:x="1018" fg:w="16"/><text x="81.2365%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (10 samples, 0.80%)</title><rect x="81.4638%" y="629" width="0.7955%" height="15" fill="rgb(212,93,11)" fg:x="1024" fg:w="10"/><text x="81.7138%" y="639.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="82.1002%" y="613" width="0.1591%" height="15" fill="rgb(254,98,51)" fg:x="1032" fg:w="2"/><text x="82.3502%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.1798%" y="597" width="0.0796%" height="15" fill="rgb(246,18,45)" fg:x="1033" fg:w="1"/><text x="82.4298%" y="607.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1798%" y="581" width="0.0796%" height="15" fill="rgb(215,148,23)" fg:x="1033" fg:w="1"/><text x="82.4298%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1798%" y="565" width="0.0796%" height="15" fill="rgb(227,22,7)" fg:x="1033" fg:w="1"/><text x="82.4298%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1798%" y="549" width="0.0796%" height="15" fill="rgb(207,210,37)" fg:x="1033" fg:w="1"/><text x="82.4298%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1798%" y="533" width="0.0796%" height="15" fill="rgb(247,147,42)" fg:x="1033" fg:w="1"/><text x="82.4298%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1798%" y="517" width="0.0796%" height="15" fill="rgb(226,213,14)" fg:x="1033" fg:w="1"/><text x="82.4298%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1798%" y="501" width="0.0796%" height="15" fill="rgb(223,18,10)" fg:x="1033" fg:w="1"/><text x="82.4298%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.1798%" y="485" width="0.0796%" height="15" fill="rgb(253,34,22)" fg:x="1033" fg:w="1"/><text x="82.4298%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.3389%" y="613" width="0.0796%" height="15" fill="rgb(222,90,31)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.3389%" y="597" width="0.0796%" height="15" fill="rgb(220,182,30)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.3389%" y="581" width="0.0796%" height="15" fill="rgb(229,170,12)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3389%" y="565" width="0.0796%" height="15" fill="rgb(210,101,21)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3389%" y="549" width="0.0796%" height="15" fill="rgb(237,177,31)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3389%" y="533" width="0.0796%" height="15" fill="rgb(215,91,34)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3389%" y="517" width="0.0796%" height="15" fill="rgb(229,206,16)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3389%" y="501" width="0.0796%" height="15" fill="rgb(235,207,10)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3389%" y="485" width="0.0796%" height="15" fill="rgb(247,18,10)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3389%" y="469" width="0.0796%" height="15" fill="rgb(232,4,6)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3389%" y="453" width="0.0796%" height="15" fill="rgb(247,93,45)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3389%" y="437" width="0.0796%" height="15" fill="rgb(240,181,18)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3389%" y="421" width="0.0796%" height="15" fill="rgb(208,224,0)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3389%" y="405" width="0.0796%" height="15" fill="rgb(224,207,54)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3389%" y="389" width="0.0796%" height="15" fill="rgb(217,152,29)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3389%" y="373" width="0.0796%" height="15" fill="rgb(243,78,27)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="82.4185%" y="613" width="0.0796%" height="15" fill="rgb(228,111,9)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="82.2593%" y="645" width="0.3182%" height="15" fill="rgb(230,213,21)" fg:x="1034" fg:w="4"/><text x="82.5093%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="82.2593%" y="629" width="0.3182%" height="15" fill="rgb(248,50,36)" fg:x="1034" fg:w="4"/><text x="82.5093%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="82.4980%" y="613" width="0.0796%" height="15" fill="rgb(226,19,31)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.4980%" y="597" width="0.0796%" height="15" fill="rgb(205,132,21)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.4980%" y="581" width="0.0796%" height="15" fill="rgb(207,42,19)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.4980%" y="565" width="0.0796%" height="15" fill="rgb(229,69,35)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.4980%" y="549" width="0.0796%" height="15" fill="rgb(226,96,11)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4980%" y="533" width="0.0796%" height="15" fill="rgb(236,133,54)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4980%" y="517" width="0.0796%" height="15" fill="rgb(247,166,21)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4980%" y="501" width="0.0796%" height="15" fill="rgb(220,132,12)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="511.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="82.5776%" y="613" width="0.0796%" height="15" fill="rgb(233,27,30)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5776%" y="597" width="0.0796%" height="15" fill="rgb(246,161,27)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6571%" y="581" width="0.0796%" height="15" fill="rgb(240,56,3)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6571%" y="565" width="0.0796%" height="15" fill="rgb(242,190,9)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="82.5776%" y="645" width="0.2387%" height="15" fill="rgb(234,3,52)" fg:x="1038" fg:w="3"/><text x="82.8276%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="82.5776%" y="629" width="0.2387%" height="15" fill="rgb(220,221,19)" fg:x="1038" fg:w="3"/><text x="82.8276%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="82.6571%" y="613" width="0.1591%" height="15" fill="rgb(247,178,30)" fg:x="1039" fg:w="2"/><text x="82.9071%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="82.6571%" y="597" width="0.1591%" height="15" fill="rgb(234,212,27)" fg:x="1039" fg:w="2"/><text x="82.9071%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.7367%" y="581" width="0.0796%" height="15" fill="rgb(226,199,38)" fg:x="1040" fg:w="1"/><text x="82.9867%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.7367%" y="565" width="0.0796%" height="15" fill="rgb(248,114,22)" fg:x="1040" fg:w="1"/><text x="82.9867%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="82.7367%" y="549" width="0.0796%" height="15" fill="rgb(221,180,4)" fg:x="1040" fg:w="1"/><text x="82.9867%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.7367%" y="533" width="0.0796%" height="15" fill="rgb(220,229,24)" fg:x="1040" fg:w="1"/><text x="82.9867%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.8162%" y="629" width="0.0796%" height="15" fill="rgb(226,184,27)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="82.8162%" y="613" width="0.0796%" height="15" fill="rgb(232,99,15)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8162%" y="597" width="0.0796%" height="15" fill="rgb(250,167,16)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8162%" y="581" width="0.0796%" height="15" fill="rgb(243,113,6)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8162%" y="565" width="0.0796%" height="15" fill="rgb(244,147,52)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.8162%" y="549" width="0.0796%" height="15" fill="rgb(235,59,50)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.8162%" y="533" width="0.0796%" height="15" fill="rgb(250,188,6)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.8162%" y="517" width="0.0796%" height="15" fill="rgb(236,173,11)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="82.8958%" y="629" width="0.0796%" height="15" fill="rgb(233,64,3)" fg:x="1042" fg:w="1"/><text x="83.1458%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.8958%" y="613" width="0.0796%" height="15" fill="rgb(207,92,7)" fg:x="1042" fg:w="1"/><text x="83.1458%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.8958%" y="597" width="0.0796%" height="15" fill="rgb(221,30,19)" fg:x="1042" fg:w="1"/><text x="83.1458%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.8958%" y="581" width="0.0796%" height="15" fill="rgb(245,22,49)" fg:x="1042" fg:w="1"/><text x="83.1458%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8958%" y="565" width="0.0796%" height="15" fill="rgb(218,39,20)" fg:x="1042" fg:w="1"/><text x="83.1458%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.8958%" y="549" width="0.0796%" height="15" fill="rgb(222,144,21)" fg:x="1042" fg:w="1"/><text x="83.1458%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8958%" y="533" width="0.0796%" height="15" fill="rgb(222,78,51)" fg:x="1042" fg:w="1"/><text x="83.1458%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8958%" y="517" width="0.0796%" height="15" fill="rgb(248,213,53)" fg:x="1042" fg:w="1"/><text x="83.1458%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8958%" y="501" width="0.0796%" height="15" fill="rgb(245,28,34)" fg:x="1042" fg:w="1"/><text x="83.1458%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.8958%" y="485" width="0.0796%" height="15" fill="rgb(229,186,26)" fg:x="1042" fg:w="1"/><text x="83.1458%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="82.9753%" y="597" width="0.0796%" height="15" fill="rgb(224,0,41)" fg:x="1043" fg:w="1"/><text x="83.2253%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (3 samples, 0.24%)</title><rect x="82.9753%" y="629" width="0.2387%" height="15" fill="rgb(223,136,51)" fg:x="1043" fg:w="3"/><text x="83.2253%" y="639.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="82.9753%" y="613" width="0.2387%" height="15" fill="rgb(234,50,9)" fg:x="1043" fg:w="3"/><text x="83.2253%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="83.0549%" y="597" width="0.1591%" height="15" fill="rgb(242,164,20)" fg:x="1044" fg:w="2"/><text x="83.3049%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="83.1344%" y="581" width="0.0796%" height="15" fill="rgb(230,169,22)" fg:x="1045" fg:w="1"/><text x="83.3844%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="83.2140%" y="581" width="0.0796%" height="15" fill="rgb(228,82,26)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.2140%" y="565" width="0.0796%" height="15" fill="rgb(244,220,31)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.2140%" y="549" width="0.0796%" height="15" fill="rgb(214,35,25)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.2140%" y="533" width="0.0796%" height="15" fill="rgb(245,162,54)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.2140%" y="517" width="0.0796%" height="15" fill="rgb(210,43,24)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.2140%" y="501" width="0.0796%" height="15" fill="rgb(226,145,51)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.2140%" y="485" width="0.0796%" height="15" fill="rgb(237,52,53)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="83.2936%" y="533" width="0.0796%" height="15" fill="rgb(216,226,7)" fg:x="1047" fg:w="1"/><text x="83.5436%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="83.2936%" y="517" width="0.0796%" height="15" fill="rgb(206,223,18)" fg:x="1047" fg:w="1"/><text x="83.5436%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="83.2936%" y="549" width="0.1591%" height="15" fill="rgb(221,1,10)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="83.3731%" y="533" width="0.0796%" height="15" fill="rgb(221,151,42)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.3731%" y="517" width="0.0796%" height="15" fill="rgb(205,183,46)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="501" width="0.0796%" height="15" fill="rgb(239,229,1)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.3731%" y="485" width="0.0796%" height="15" fill="rgb(236,192,23)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="469" width="0.0796%" height="15" fill="rgb(215,146,3)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="453" width="0.0796%" height="15" fill="rgb(235,52,27)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="437" width="0.0796%" height="15" fill="rgb(236,45,20)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.3731%" y="421" width="0.0796%" height="15" fill="rgb(235,86,41)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="405" width="0.0796%" height="15" fill="rgb(235,27,27)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="389" width="0.0796%" height="15" fill="rgb(232,4,34)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="373" width="0.0796%" height="15" fill="rgb(215,22,10)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.3731%" y="357" width="0.0796%" height="15" fill="rgb(230,228,27)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="341" width="0.0796%" height="15" fill="rgb(216,26,51)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="325" width="0.0796%" height="15" fill="rgb(225,180,50)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="309" width="0.0796%" height="15" fill="rgb(236,211,2)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.3731%" y="293" width="0.0796%" height="15" fill="rgb(250,51,20)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.3731%" y="277" width="0.0796%" height="15" fill="rgb(232,70,37)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.3731%" y="261" width="0.0796%" height="15" fill="rgb(226,183,39)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.3731%" y="245" width="0.0796%" height="15" fill="rgb(232,228,21)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="83.3731%" y="229" width="0.0796%" height="15" fill="rgb(251,118,32)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="83.3731%" y="213" width="0.0796%" height="15" fill="rgb(235,172,38)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="83.3731%" y="197" width="0.0796%" height="15" fill="rgb(235,63,18)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="83.3731%" y="181" width="0.0796%" height="15" fill="rgb(225,4,7)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="83.3731%" y="165" width="0.0796%" height="15" fill="rgb(231,61,1)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="83.3731%" y="149" width="0.0796%" height="15" fill="rgb(241,155,22)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.3731%" y="133" width="0.0796%" height="15" fill="rgb(209,100,26)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="83.3731%" y="117" width="0.0796%" height="15" fill="rgb(248,181,15)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.3731%" y="101" width="0.0796%" height="15" fill="rgb(214,94,31)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="83.3731%" y="85" width="0.0796%" height="15" fill="rgb(207,16,42)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="83.3731%" y="69" width="0.0796%" height="15" fill="rgb(208,127,13)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="83.3731%" y="53" width="0.0796%" height="15" fill="rgb(220,211,18)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.3731%" y="37" width="0.0796%" height="15" fill="rgb(221,55,38)" fg:x="1048" fg:w="1"/><text x="83.6231%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.4527%" y="549" width="0.0796%" height="15" fill="rgb(252,219,45)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.4527%" y="533" width="0.0796%" height="15" fill="rgb(248,53,35)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.4527%" y="517" width="0.0796%" height="15" fill="rgb(210,87,2)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4527%" y="501" width="0.0796%" height="15" fill="rgb(239,133,9)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4527%" y="485" width="0.0796%" height="15" fill="rgb(214,114,5)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4527%" y="469" width="0.0796%" height="15" fill="rgb(206,124,24)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4527%" y="453" width="0.0796%" height="15" fill="rgb(212,57,33)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.4527%" y="437" width="0.0796%" height="15" fill="rgb(246,21,20)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4527%" y="421" width="0.0796%" height="15" fill="rgb(253,210,39)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.4527%" y="405" width="0.0796%" height="15" fill="rgb(209,187,24)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.4527%" y="389" width="0.0796%" height="15" fill="rgb(246,136,17)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.5322%" y="549" width="0.0796%" height="15" fill="rgb(211,0,30)" fg:x="1050" fg:w="1"/><text x="83.7822%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.5322%" y="533" width="0.0796%" height="15" fill="rgb(216,199,7)" fg:x="1050" fg:w="1"/><text x="83.7822%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.5322%" y="517" width="0.0796%" height="15" fill="rgb(207,210,19)" fg:x="1050" fg:w="1"/><text x="83.7822%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.6118%" y="341" width="0.0796%" height="15" fill="rgb(237,187,39)" fg:x="1051" fg:w="1"/><text x="83.8618%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="83.2936%" y="565" width="0.4773%" height="15" fill="rgb(243,194,42)" fg:x="1047" fg:w="6"/><text x="83.5436%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="83.6118%" y="549" width="0.1591%" height="15" fill="rgb(225,194,19)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="83.6118%" y="533" width="0.1591%" height="15" fill="rgb(224,192,14)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="83.6118%" y="517" width="0.1591%" height="15" fill="rgb(252,21,18)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.6118%" y="501" width="0.1591%" height="15" fill="rgb(229,69,19)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.6118%" y="485" width="0.1591%" height="15" fill="rgb(251,31,53)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.6118%" y="469" width="0.1591%" height="15" fill="rgb(218,39,50)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.6118%" y="453" width="0.1591%" height="15" fill="rgb(231,50,17)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.6118%" y="437" width="0.1591%" height="15" fill="rgb(223,217,31)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.6118%" y="421" width="0.1591%" height="15" fill="rgb(225,91,12)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="83.6118%" y="405" width="0.1591%" height="15" fill="rgb(242,58,43)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.6118%" y="389" width="0.1591%" height="15" fill="rgb(242,32,21)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.6118%" y="373" width="0.1591%" height="15" fill="rgb(211,127,1)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.6118%" y="357" width="0.1591%" height="15" fill="rgb(231,93,13)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.6913%" y="341" width="0.0796%" height="15" fill="rgb(218,83,4)" fg:x="1052" fg:w="1"/><text x="83.9413%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="83.7709%" y="549" width="0.0796%" height="15" fill="rgb(230,218,10)" fg:x="1053" fg:w="1"/><text x="84.0209%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="83.7709%" y="533" width="0.0796%" height="15" fill="rgb(235,127,18)" fg:x="1053" fg:w="1"/><text x="84.0209%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.7709%" y="517" width="0.0796%" height="15" fill="rgb(213,137,46)" fg:x="1053" fg:w="1"/><text x="84.0209%" y="527.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.64%)</title><rect x="83.2936%" y="581" width="0.6364%" height="15" fill="rgb(235,179,24)" fg:x="1047" fg:w="8"/><text x="83.5436%" y="591.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="83.7709%" y="565" width="0.1591%" height="15" fill="rgb(247,58,49)" fg:x="1053" fg:w="2"/><text x="84.0209%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.8504%" y="549" width="0.0796%" height="15" fill="rgb(242,222,5)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.8504%" y="533" width="0.0796%" height="15" fill="rgb(230,16,48)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.8504%" y="517" width="0.0796%" height="15" fill="rgb(241,192,16)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.8504%" y="501" width="0.0796%" height="15" fill="rgb(209,25,37)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.8504%" y="485" width="0.0796%" height="15" fill="rgb(229,215,13)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8504%" y="469" width="0.0796%" height="15" fill="rgb(213,199,8)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8504%" y="453" width="0.0796%" height="15" fill="rgb(226,151,19)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8504%" y="437" width="0.0796%" height="15" fill="rgb(254,183,12)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8504%" y="421" width="0.0796%" height="15" fill="rgb(245,8,3)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.8504%" y="405" width="0.0796%" height="15" fill="rgb(229,159,35)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8504%" y="389" width="0.0796%" height="15" fill="rgb(209,145,1)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8504%" y="373" width="0.0796%" height="15" fill="rgb(228,183,16)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8504%" y="357" width="0.0796%" height="15" fill="rgb(222,68,0)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8504%" y="341" width="0.0796%" height="15" fill="rgb(209,130,50)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8504%" y="325" width="0.0796%" height="15" fill="rgb(228,176,44)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.80%)</title><rect x="83.2140%" y="629" width="0.7955%" height="15" fill="rgb(221,164,2)" fg:x="1046" fg:w="10"/><text x="83.4640%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="83.2140%" y="613" width="0.7955%" height="15" fill="rgb(249,199,49)" fg:x="1046" fg:w="10"/><text x="83.4640%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.80%)</title><rect x="83.2140%" y="597" width="0.7955%" height="15" fill="rgb(228,205,53)" fg:x="1046" fg:w="10"/><text x="83.4640%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="83.9300%" y="581" width="0.0796%" height="15" fill="rgb(235,77,20)" fg:x="1055" fg:w="1"/><text x="84.1800%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="83.9300%" y="565" width="0.0796%" height="15" fill="rgb(227,147,34)" fg:x="1055" fg:w="1"/><text x="84.1800%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.9300%" y="549" width="0.0796%" height="15" fill="rgb(226,203,52)" fg:x="1055" fg:w="1"/><text x="84.1800%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.9300%" y="533" width="0.0796%" height="15" fill="rgb(226,186,23)" fg:x="1055" fg:w="1"/><text x="84.1800%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9300%" y="517" width="0.0796%" height="15" fill="rgb(236,13,30)" fg:x="1055" fg:w="1"/><text x="84.1800%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9300%" y="501" width="0.0796%" height="15" fill="rgb(228,121,22)" fg:x="1055" fg:w="1"/><text x="84.1800%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0095%" y="597" width="0.0796%" height="15" fill="rgb(248,222,26)" fg:x="1056" fg:w="1"/><text x="84.2595%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.0891%" y="597" width="0.0796%" height="15" fill="rgb(251,72,25)" fg:x="1057" fg:w="1"/><text x="84.3391%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (5 samples, 0.40%)</title><rect x="84.0095%" y="613" width="0.3978%" height="15" fill="rgb(223,114,24)" fg:x="1056" fg:w="5"/><text x="84.2595%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="84.1687%" y="597" width="0.2387%" height="15" fill="rgb(232,190,43)" fg:x="1058" fg:w="3"/><text x="84.4187%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.2482%" y="581" width="0.1591%" height="15" fill="rgb(208,90,0)" fg:x="1059" fg:w="2"/><text x="84.4982%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="84.3278%" y="565" width="0.0796%" height="15" fill="rgb(234,149,31)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.3278%" y="549" width="0.0796%" height="15" fill="rgb(235,188,36)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.4073%" y="565" width="0.0796%" height="15" fill="rgb(219,59,51)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.4073%" y="549" width="0.0796%" height="15" fill="rgb(236,101,40)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.4073%" y="533" width="0.0796%" height="15" fill="rgb(235,33,7)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.4073%" y="517" width="0.0796%" height="15" fill="rgb(213,169,26)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="84.5664%" y="501" width="0.3182%" height="15" fill="rgb(218,99,34)" fg:x="1063" fg:w="4"/><text x="84.8164%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="84.6460%" y="485" width="0.2387%" height="15" fill="rgb(210,57,24)" fg:x="1064" fg:w="3"/><text x="84.8960%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="84.7255%" y="469" width="0.1591%" height="15" fill="rgb(231,181,54)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="84.7255%" y="453" width="0.1591%" height="15" fill="rgb(251,188,48)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="84.5664%" y="517" width="0.3978%" height="15" fill="rgb(243,12,45)" fg:x="1063" fg:w="5"/><text x="84.8164%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.8846%" y="501" width="0.0796%" height="15" fill="rgb(250,197,9)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.9642%" y="501" width="0.0796%" height="15" fill="rgb(235,149,35)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.0438%" y="453" width="0.0796%" height="15" fill="rgb(219,27,19)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.0438%" y="437" width="0.0796%" height="15" fill="rgb(244,78,31)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.0438%" y="421" width="0.0796%" height="15" fill="rgb(241,13,4)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.0438%" y="405" width="0.0796%" height="15" fill="rgb(212,194,26)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.0438%" y="389" width="0.0796%" height="15" fill="rgb(236,80,11)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.0438%" y="373" width="0.0796%" height="15" fill="rgb(206,1,24)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.0438%" y="357" width="0.0796%" height="15" fill="rgb(238,215,50)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="85.0438%" y="485" width="0.1591%" height="15" fill="rgb(254,126,32)" fg:x="1069" fg:w="2"/><text x="85.2938%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="85.0438%" y="469" width="0.1591%" height="15" fill="rgb(206,111,53)" fg:x="1069" fg:w="2"/><text x="85.2938%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.1233%" y="453" width="0.0796%" height="15" fill="rgb(218,72,44)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.1233%" y="437" width="0.0796%" height="15" fill="rgb(238,25,3)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.1233%" y="421" width="0.0796%" height="15" fill="rgb(250,191,7)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.2029%" y="469" width="0.0796%" height="15" fill="rgb(238,56,30)" fg:x="1071" fg:w="1"/><text x="85.4529%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.2029%" y="453" width="0.0796%" height="15" fill="rgb(210,27,45)" fg:x="1071" fg:w="1"/><text x="85.4529%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.2029%" y="437" width="0.0796%" height="15" fill="rgb(207,10,50)" fg:x="1071" fg:w="1"/><text x="85.4529%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="85.2824%" y="469" width="0.4773%" height="15" fill="rgb(249,30,23)" fg:x="1072" fg:w="6"/><text x="85.5324%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="85.3620%" y="453" width="0.3978%" height="15" fill="rgb(250,80,12)" fg:x="1073" fg:w="5"/><text x="85.6120%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="85.3620%" y="437" width="0.3978%" height="15" fill="rgb(210,221,37)" fg:x="1073" fg:w="5"/><text x="85.6120%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="85.4415%" y="421" width="0.3182%" height="15" fill="rgb(205,96,24)" fg:x="1074" fg:w="4"/><text x="85.6915%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="85.5211%" y="405" width="0.2387%" height="15" fill="rgb(247,104,22)" fg:x="1075" fg:w="3"/><text x="85.7711%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.6006%" y="389" width="0.1591%" height="15" fill="rgb(222,61,53)" fg:x="1076" fg:w="2"/><text x="85.8506%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="85.2029%" y="485" width="0.6364%" height="15" fill="rgb(241,11,53)" fg:x="1071" fg:w="8"/><text x="85.4529%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.7597%" y="469" width="0.0796%" height="15" fill="rgb(230,111,47)" fg:x="1078" fg:w="1"/><text x="86.0097%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.7597%" y="453" width="0.0796%" height="15" fill="rgb(218,187,29)" fg:x="1078" fg:w="1"/><text x="86.0097%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.7597%" y="437" width="0.0796%" height="15" fill="rgb(210,121,46)" fg:x="1078" fg:w="1"/><text x="86.0097%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="85.0438%" y="501" width="0.8751%" height="15" fill="rgb(250,43,19)" fg:x="1069" fg:w="11"/><text x="85.2938%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.8393%" y="485" width="0.0796%" height="15" fill="rgb(238,61,12)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.8393%" y="469" width="0.0796%" height="15" fill="rgb(251,198,9)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.8393%" y="453" width="0.0796%" height="15" fill="rgb(214,192,38)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.51%)</title><rect x="84.4869%" y="533" width="1.5115%" height="15" fill="rgb(214,73,19)" fg:x="1062" fg:w="19"/><text x="84.7369%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.03%)</title><rect x="84.9642%" y="517" width="1.0342%" height="15" fill="rgb(249,222,49)" fg:x="1068" fg:w="13"/><text x="85.2142%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.9189%" y="501" width="0.0796%" height="15" fill="rgb(231,181,54)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.9189%" y="485" width="0.0796%" height="15" fill="rgb(240,1,13)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9189%" y="469" width="0.0796%" height="15" fill="rgb(225,21,16)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.9189%" y="453" width="0.0796%" height="15" fill="rgb(246,176,50)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.9189%" y="437" width="0.0796%" height="15" fill="rgb(208,96,50)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.9189%" y="421" width="0.0796%" height="15" fill="rgb(240,219,19)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.9984%" y="469" width="0.0796%" height="15" fill="rgb(234,73,5)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9984%" y="453" width="0.0796%" height="15" fill="rgb(225,52,53)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.9984%" y="533" width="0.1591%" height="15" fill="rgb(250,12,14)" fg:x="1081" fg:w="2"/><text x="86.2484%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="85.9984%" y="517" width="0.1591%" height="15" fill="rgb(242,185,54)" fg:x="1081" fg:w="2"/><text x="86.2484%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.9984%" y="501" width="0.1591%" height="15" fill="rgb(211,206,31)" fg:x="1081" fg:w="2"/><text x="86.2484%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.9984%" y="485" width="0.1591%" height="15" fill="rgb(252,10,33)" fg:x="1081" fg:w="2"/><text x="86.2484%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.0780%" y="469" width="0.0796%" height="15" fill="rgb(216,26,7)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.0780%" y="453" width="0.0796%" height="15" fill="rgb(228,112,40)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.0780%" y="437" width="0.0796%" height="15" fill="rgb(212,21,16)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.0780%" y="421" width="0.0796%" height="15" fill="rgb(249,3,29)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.0780%" y="405" width="0.0796%" height="15" fill="rgb(221,42,51)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.0780%" y="389" width="0.0796%" height="15" fill="rgb(225,90,21)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1575%" y="485" width="0.0796%" height="15" fill="rgb(242,131,5)" fg:x="1083" fg:w="1"/><text x="86.4075%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2371%" y="485" width="0.0796%" height="15" fill="rgb(220,187,28)" fg:x="1084" fg:w="1"/><text x="86.4871%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2371%" y="469" width="0.0796%" height="15" fill="rgb(210,75,48)" fg:x="1084" fg:w="1"/><text x="86.4871%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3962%" y="437" width="0.0796%" height="15" fill="rgb(211,91,40)" fg:x="1086" fg:w="1"/><text x="86.6462%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3962%" y="421" width="0.0796%" height="15" fill="rgb(205,43,18)" fg:x="1086" fg:w="1"/><text x="86.6462%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4757%" y="405" width="0.0796%" height="15" fill="rgb(207,123,11)" fg:x="1087" fg:w="1"/><text x="86.7257%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4757%" y="389" width="0.0796%" height="15" fill="rgb(235,89,39)" fg:x="1087" fg:w="1"/><text x="86.7257%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4757%" y="373" width="0.0796%" height="15" fill="rgb(245,217,27)" fg:x="1087" fg:w="1"/><text x="86.7257%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="86.5553%" y="389" width="0.1591%" height="15" fill="rgb(216,55,17)" fg:x="1088" fg:w="2"/><text x="86.8053%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="86.5553%" y="373" width="0.1591%" height="15" fill="rgb(252,116,44)" fg:x="1088" fg:w="2"/><text x="86.8053%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6348%" y="357" width="0.0796%" height="15" fill="rgb(229,153,4)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="367.50"></text></g><g><title>engine::session::Session::flush (35 samples, 2.78%)</title><rect x="84.0095%" y="629" width="2.7844%" height="15" fill="rgb(222,24,35)" fg:x="1056" fg:w="35"/><text x="84.2595%" y="639.50">en..</text></g><g><title>engine::session::Session::save_changes (30 samples, 2.39%)</title><rect x="84.4073%" y="613" width="2.3866%" height="15" fill="rgb(214,26,20)" fg:x="1061" fg:w="30"/><text x="84.6573%" y="623.50">en..</text></g><g><title>engine::session::state::State::close (30 samples, 2.39%)</title><rect x="84.4073%" y="597" width="2.3866%" height="15" fill="rgb(215,14,45)" fg:x="1061" fg:w="30"/><text x="84.6573%" y="607.50">en..</text></g><g><title>engine::session::state::State::flush_entities (30 samples, 2.39%)</title><rect x="84.4073%" y="581" width="2.3866%" height="15" fill="rgb(217,212,50)" fg:x="1061" fg:w="30"/><text x="84.6573%" y="591.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (29 samples, 2.31%)</title><rect x="84.4869%" y="565" width="2.3071%" height="15" fill="rgb(230,172,52)" fg:x="1062" fg:w="29"/><text x="84.7369%" y="575.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (29 samples, 2.31%)</title><rect x="84.4869%" y="549" width="2.3071%" height="15" fill="rgb(210,48,36)" fg:x="1062" fg:w="29"/><text x="84.7369%" y="559.50">e..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="86.1575%" y="533" width="0.6364%" height="15" fill="rgb(216,213,32)" fg:x="1083" fg:w="8"/><text x="86.4075%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="86.1575%" y="517" width="0.6364%" height="15" fill="rgb(237,202,41)" fg:x="1083" fg:w="8"/><text x="86.4075%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="86.1575%" y="501" width="0.6364%" height="15" fill="rgb(209,14,29)" fg:x="1083" fg:w="8"/><text x="86.4075%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="86.3166%" y="485" width="0.4773%" height="15" fill="rgb(219,29,3)" fg:x="1085" fg:w="6"/><text x="86.5666%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="86.3166%" y="469" width="0.4773%" height="15" fill="rgb(229,13,49)" fg:x="1085" fg:w="6"/><text x="86.5666%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="86.3962%" y="453" width="0.3978%" height="15" fill="rgb(210,206,2)" fg:x="1086" fg:w="5"/><text x="86.6462%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="86.4757%" y="437" width="0.3182%" height="15" fill="rgb(216,154,46)" fg:x="1087" fg:w="4"/><text x="86.7257%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="86.4757%" y="421" width="0.3182%" height="15" fill="rgb(211,170,52)" fg:x="1087" fg:w="4"/><text x="86.7257%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="86.5553%" y="405" width="0.2387%" height="15" fill="rgb(233,109,47)" fg:x="1088" fg:w="3"/><text x="86.8053%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7144%" y="389" width="0.0796%" height="15" fill="rgb(208,212,30)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="86.7940%" y="613" width="0.0796%" height="15" fill="rgb(215,190,19)" fg:x="1091" fg:w="1"/><text x="87.0440%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.8735%" y="597" width="0.0796%" height="15" fill="rgb(207,164,53)" fg:x="1092" fg:w="1"/><text x="87.1235%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8735%" y="581" width="0.0796%" height="15" fill="rgb(213,87,49)" fg:x="1092" fg:w="1"/><text x="87.1235%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="86.7940%" y="629" width="0.2387%" height="15" fill="rgb(241,216,24)" fg:x="1091" fg:w="3"/><text x="87.0440%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="86.8735%" y="613" width="0.1591%" height="15" fill="rgb(241,123,45)" fg:x="1092" fg:w="2"/><text x="87.1235%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.9531%" y="597" width="0.0796%" height="15" fill="rgb(220,36,15)" fg:x="1093" fg:w="1"/><text x="87.2031%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.9531%" y="581" width="0.0796%" height="15" fill="rgb(215,202,9)" fg:x="1093" fg:w="1"/><text x="87.2031%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.9531%" y="565" width="0.0796%" height="15" fill="rgb(252,71,26)" fg:x="1093" fg:w="1"/><text x="87.2031%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.9531%" y="549" width="0.0796%" height="15" fill="rgb(243,195,19)" fg:x="1093" fg:w="1"/><text x="87.2031%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9531%" y="533" width="0.0796%" height="15" fill="rgb(207,167,27)" fg:x="1093" fg:w="1"/><text x="87.2031%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.9531%" y="517" width="0.0796%" height="15" fill="rgb(250,146,54)" fg:x="1093" fg:w="1"/><text x="87.2031%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="87.0326%" y="597" width="0.0796%" height="15" fill="rgb(245,79,9)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="87.0326%" y="581" width="0.0796%" height="15" fill="rgb(234,197,22)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="87.0326%" y="565" width="0.0796%" height="15" fill="rgb(221,52,48)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.0326%" y="549" width="0.0796%" height="15" fill="rgb(235,80,0)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.0326%" y="533" width="0.0796%" height="15" fill="rgb(221,117,53)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.1122%" y="597" width="0.0796%" height="15" fill="rgb(239,48,47)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.1122%" y="581" width="0.0796%" height="15" fill="rgb(227,191,52)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.1122%" y="565" width="0.0796%" height="15" fill="rgb(241,118,1)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1122%" y="549" width="0.0796%" height="15" fill="rgb(240,85,3)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1122%" y="533" width="0.0796%" height="15" fill="rgb(237,68,37)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1122%" y="517" width="0.0796%" height="15" fill="rgb(212,9,20)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1122%" y="501" width="0.0796%" height="15" fill="rgb(218,84,17)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.1122%" y="485" width="0.0796%" height="15" fill="rgb(235,147,20)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.1122%" y="469" width="0.0796%" height="15" fill="rgb(208,224,1)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.1122%" y="453" width="0.0796%" height="15" fill="rgb(232,97,50)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.1122%" y="437" width="0.0796%" height="15" fill="rgb(238,15,45)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.1122%" y="421" width="0.0796%" height="15" fill="rgb(231,46,18)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.1122%" y="405" width="0.0796%" height="15" fill="rgb(254,169,10)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.1122%" y="389" width="0.0796%" height="15" fill="rgb(243,169,30)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.1122%" y="373" width="0.0796%" height="15" fill="rgb(236,90,49)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="87.1917%" y="597" width="0.0796%" height="15" fill="rgb(218,80,15)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="87.1917%" y="581" width="0.0796%" height="15" fill="rgb(222,115,37)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2713%" y="549" width="0.0796%" height="15" fill="rgb(227,0,6)" fg:x="1097" fg:w="1"/><text x="87.5213%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.2713%" y="533" width="0.0796%" height="15" fill="rgb(217,189,13)" fg:x="1097" fg:w="1"/><text x="87.5213%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.2713%" y="517" width="0.0796%" height="15" fill="rgb(220,74,19)" fg:x="1097" fg:w="1"/><text x="87.5213%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="87.2713%" y="581" width="0.1591%" height="15" fill="rgb(224,81,18)" fg:x="1097" fg:w="2"/><text x="87.5213%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.2713%" y="565" width="0.1591%" height="15" fill="rgb(245,178,48)" fg:x="1097" fg:w="2"/><text x="87.5213%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3508%" y="549" width="0.0796%" height="15" fill="rgb(207,78,24)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3508%" y="533" width="0.0796%" height="15" fill="rgb(223,222,30)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3508%" y="517" width="0.0796%" height="15" fill="rgb(234,101,12)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3508%" y="501" width="0.0796%" height="15" fill="rgb(209,80,46)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="87.2713%" y="597" width="0.2387%" height="15" fill="rgb(228,79,14)" fg:x="1097" fg:w="3"/><text x="87.5213%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.4304%" y="581" width="0.0796%" height="15" fill="rgb(220,219,34)" fg:x="1099" fg:w="1"/><text x="87.6804%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="87.4304%" y="565" width="0.0796%" height="15" fill="rgb(207,80,21)" fg:x="1099" fg:w="1"/><text x="87.6804%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.4304%" y="549" width="0.0796%" height="15" fill="rgb(210,154,44)" fg:x="1099" fg:w="1"/><text x="87.6804%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.4304%" y="533" width="0.0796%" height="15" fill="rgb(246,44,39)" fg:x="1099" fg:w="1"/><text x="87.6804%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.4304%" y="517" width="0.0796%" height="15" fill="rgb(252,175,13)" fg:x="1099" fg:w="1"/><text x="87.6804%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="87.0326%" y="613" width="0.5569%" height="15" fill="rgb(211,50,39)" fg:x="1094" fg:w="7"/><text x="87.2826%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="87.5099%" y="597" width="0.0796%" height="15" fill="rgb(231,204,27)" fg:x="1100" fg:w="1"/><text x="87.7599%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="87.5099%" y="581" width="0.0796%" height="15" fill="rgb(253,26,34)" fg:x="1100" fg:w="1"/><text x="87.7599%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="87.5099%" y="565" width="0.0796%" height="15" fill="rgb(207,139,38)" fg:x="1100" fg:w="1"/><text x="87.7599%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.5099%" y="549" width="0.0796%" height="15" fill="rgb(248,54,27)" fg:x="1100" fg:w="1"/><text x="87.7599%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.5099%" y="533" width="0.0796%" height="15" fill="rgb(234,25,33)" fg:x="1100" fg:w="1"/><text x="87.7599%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.5099%" y="517" width="0.0796%" height="15" fill="rgb(249,107,47)" fg:x="1100" fg:w="1"/><text x="87.7599%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.5099%" y="501" width="0.0796%" height="15" fill="rgb(230,190,31)" fg:x="1100" fg:w="1"/><text x="87.7599%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="87.5895%" y="549" width="0.0796%" height="15" fill="rgb(238,173,45)" fg:x="1101" fg:w="1"/><text x="87.8395%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6691%" y="517" width="0.0796%" height="15" fill="rgb(222,16,50)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.6691%" y="501" width="0.0796%" height="15" fill="rgb(251,204,47)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6691%" y="485" width="0.0796%" height="15" fill="rgb(225,12,3)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6691%" y="469" width="0.0796%" height="15" fill="rgb(214,208,22)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6691%" y="453" width="0.0796%" height="15" fill="rgb(240,57,32)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.6691%" y="437" width="0.0796%" height="15" fill="rgb(243,113,48)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6691%" y="421" width="0.0796%" height="15" fill="rgb(225,135,30)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="87.5895%" y="565" width="0.2387%" height="15" fill="rgb(222,3,53)" fg:x="1101" fg:w="3"/><text x="87.8395%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.6691%" y="549" width="0.1591%" height="15" fill="rgb(243,142,2)" fg:x="1102" fg:w="2"/><text x="87.9191%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.6691%" y="533" width="0.1591%" height="15" fill="rgb(233,67,14)" fg:x="1102" fg:w="2"/><text x="87.9191%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7486%" y="517" width="0.0796%" height="15" fill="rgb(245,125,36)" fg:x="1103" fg:w="1"/><text x="87.9986%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7486%" y="501" width="0.0796%" height="15" fill="rgb(225,199,6)" fg:x="1103" fg:w="1"/><text x="87.9986%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7486%" y="485" width="0.0796%" height="15" fill="rgb(244,71,6)" fg:x="1103" fg:w="1"/><text x="87.9986%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7486%" y="469" width="0.0796%" height="15" fill="rgb(225,62,9)" fg:x="1103" fg:w="1"/><text x="87.9986%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.7486%" y="453" width="0.0796%" height="15" fill="rgb(246,139,53)" fg:x="1103" fg:w="1"/><text x="87.9986%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7486%" y="437" width="0.0796%" height="15" fill="rgb(243,161,46)" fg:x="1103" fg:w="1"/><text x="87.9986%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.8282%" y="517" width="0.1591%" height="15" fill="rgb(236,153,7)" fg:x="1104" fg:w="2"/><text x="88.0782%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.8282%" y="501" width="0.1591%" height="15" fill="rgb(248,42,35)" fg:x="1104" fg:w="2"/><text x="88.0782%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9077%" y="485" width="0.0796%" height="15" fill="rgb(250,17,31)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9077%" y="469" width="0.0796%" height="15" fill="rgb(248,138,14)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9077%" y="453" width="0.0796%" height="15" fill="rgb(228,161,3)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.9077%" y="437" width="0.0796%" height="15" fill="rgb(248,116,17)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.9077%" y="421" width="0.0796%" height="15" fill="rgb(207,78,24)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.9077%" y="405" width="0.0796%" height="15" fill="rgb(234,99,48)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.9077%" y="389" width="0.0796%" height="15" fill="rgb(242,22,26)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.9077%" y="373" width="0.0796%" height="15" fill="rgb(227,78,32)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.9077%" y="357" width="0.0796%" height="15" fill="rgb(226,189,43)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.9077%" y="341" width="0.0796%" height="15" fill="rgb(227,218,35)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.9077%" y="325" width="0.0796%" height="15" fill="rgb(206,111,40)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.9077%" y="309" width="0.0796%" height="15" fill="rgb(208,217,22)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.9077%" y="293" width="0.0796%" height="15" fill="rgb(248,20,20)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.9873%" y="517" width="0.0796%" height="15" fill="rgb(239,155,16)" fg:x="1106" fg:w="1"/><text x="88.2373%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.9873%" y="501" width="0.0796%" height="15" fill="rgb(238,171,46)" fg:x="1106" fg:w="1"/><text x="88.2373%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.9873%" y="485" width="0.0796%" height="15" fill="rgb(248,11,36)" fg:x="1106" fg:w="1"/><text x="88.2373%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.9873%" y="469" width="0.0796%" height="15" fill="rgb(220,148,37)" fg:x="1106" fg:w="1"/><text x="88.2373%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9873%" y="453" width="0.0796%" height="15" fill="rgb(218,144,42)" fg:x="1106" fg:w="1"/><text x="88.2373%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="87.5895%" y="597" width="0.5569%" height="15" fill="rgb(245,20,20)" fg:x="1101" fg:w="7"/><text x="87.8395%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="87.5895%" y="581" width="0.5569%" height="15" fill="rgb(240,111,48)" fg:x="1101" fg:w="7"/><text x="87.8395%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="87.8282%" y="565" width="0.3182%" height="15" fill="rgb(237,225,32)" fg:x="1104" fg:w="4"/><text x="88.0782%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="87.8282%" y="549" width="0.3182%" height="15" fill="rgb(228,161,46)" fg:x="1104" fg:w="4"/><text x="88.0782%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="87.8282%" y="533" width="0.3182%" height="15" fill="rgb(235,196,21)" fg:x="1104" fg:w="4"/><text x="88.0782%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.0668%" y="517" width="0.0796%" height="15" fill="rgb(250,133,21)" fg:x="1107" fg:w="1"/><text x="88.3168%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0668%" y="501" width="0.0796%" height="15" fill="rgb(236,94,32)" fg:x="1107" fg:w="1"/><text x="88.3168%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.0668%" y="485" width="0.0796%" height="15" fill="rgb(219,176,25)" fg:x="1107" fg:w="1"/><text x="88.3168%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.1464%" y="549" width="0.0796%" height="15" fill="rgb(211,17,43)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.2259%" y="501" width="0.0796%" height="15" fill="rgb(220,75,23)" fg:x="1109" fg:w="1"/><text x="88.4759%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="88.1464%" y="597" width="0.3182%" height="15" fill="rgb(215,122,32)" fg:x="1108" fg:w="4"/><text x="88.3964%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (4 samples, 0.32%)</title><rect x="88.1464%" y="581" width="0.3182%" height="15" fill="rgb(218,57,38)" fg:x="1108" fg:w="4"/><text x="88.3964%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="88.1464%" y="565" width="0.3182%" height="15" fill="rgb(233,208,46)" fg:x="1108" fg:w="4"/><text x="88.3964%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="88.2259%" y="549" width="0.2387%" height="15" fill="rgb(221,35,50)" fg:x="1109" fg:w="3"/><text x="88.4759%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="88.2259%" y="533" width="0.2387%" height="15" fill="rgb(229,213,29)" fg:x="1109" fg:w="3"/><text x="88.4759%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="88.2259%" y="517" width="0.2387%" height="15" fill="rgb(229,110,40)" fg:x="1109" fg:w="3"/><text x="88.4759%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.3055%" y="501" width="0.1591%" height="15" fill="rgb(247,206,19)" fg:x="1110" fg:w="2"/><text x="88.5555%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.3055%" y="485" width="0.1591%" height="15" fill="rgb(216,229,45)" fg:x="1110" fg:w="2"/><text x="88.5555%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.4646%" y="549" width="0.0796%" height="15" fill="rgb(205,184,31)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.4646%" y="533" width="0.0796%" height="15" fill="rgb(213,91,10)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.4646%" y="517" width="0.0796%" height="15" fill="rgb(250,49,8)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.4646%" y="501" width="0.0796%" height="15" fill="rgb(207,26,8)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.4646%" y="485" width="0.0796%" height="15" fill="rgb(224,2,13)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.4646%" y="469" width="0.0796%" height="15" fill="rgb(219,108,27)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.4646%" y="453" width="0.0796%" height="15" fill="rgb(240,89,32)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.4646%" y="437" width="0.0796%" height="15" fill="rgb(248,205,3)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.4646%" y="421" width="0.0796%" height="15" fill="rgb(236,197,47)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.4646%" y="405" width="0.0796%" height="15" fill="rgb(244,185,52)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.4646%" y="389" width="0.0796%" height="15" fill="rgb(210,206,23)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.4646%" y="373" width="0.0796%" height="15" fill="rgb(251,177,30)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.4646%" y="357" width="0.0796%" height="15" fill="rgb(243,27,45)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="88.4646%" y="341" width="0.0796%" height="15" fill="rgb(248,141,51)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="88.4646%" y="325" width="0.0796%" height="15" fill="rgb(235,102,15)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="335.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="88.4646%" y="309" width="0.0796%" height="15" fill="rgb(214,164,53)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5442%" y="453" width="0.0796%" height="15" fill="rgb(228,18,51)" fg:x="1113" fg:w="1"/><text x="88.7942%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.5442%" y="501" width="0.1591%" height="15" fill="rgb(205,211,11)" fg:x="1113" fg:w="2"/><text x="88.7942%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.5442%" y="485" width="0.1591%" height="15" fill="rgb(208,63,6)" fg:x="1113" fg:w="2"/><text x="88.7942%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.5442%" y="469" width="0.1591%" height="15" fill="rgb(245,76,14)" fg:x="1113" fg:w="2"/><text x="88.7942%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6237%" y="453" width="0.0796%" height="15" fill="rgb(234,176,34)" fg:x="1114" fg:w="1"/><text x="88.8737%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.7033%" y="501" width="0.0796%" height="15" fill="rgb(243,156,42)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.7033%" y="485" width="0.0796%" height="15" fill="rgb(237,182,10)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.7828%" y="405" width="0.0796%" height="15" fill="rgb(244,117,0)" fg:x="1116" fg:w="1"/><text x="89.0328%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.7828%" y="389" width="0.0796%" height="15" fill="rgb(239,91,50)" fg:x="1116" fg:w="1"/><text x="89.0328%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="88.7828%" y="373" width="0.0796%" height="15" fill="rgb(206,38,9)" fg:x="1116" fg:w="1"/><text x="89.0328%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (24 samples, 1.91%)</title><rect x="87.0326%" y="629" width="1.9093%" height="15" fill="rgb(205,25,10)" fg:x="1094" fg:w="24"/><text x="87.2826%" y="639.50">p..</text></g><g><title>plugins_core::tools::set_container (17 samples, 1.35%)</title><rect x="87.5895%" y="613" width="1.3524%" height="15" fill="rgb(206,224,7)" fg:x="1101" fg:w="17"/><text x="87.8395%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="88.4646%" y="597" width="0.4773%" height="15" fill="rgb(227,157,10)" fg:x="1112" fg:w="6"/><text x="88.7146%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="88.4646%" y="581" width="0.4773%" height="15" fill="rgb(214,157,37)" fg:x="1112" fg:w="6"/><text x="88.7146%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="88.4646%" y="565" width="0.4773%" height="15" fill="rgb(209,180,35)" fg:x="1112" fg:w="6"/><text x="88.7146%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="88.5442%" y="549" width="0.3978%" height="15" fill="rgb(216,174,49)" fg:x="1113" fg:w="5"/><text x="88.7942%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="88.5442%" y="533" width="0.3978%" height="15" fill="rgb(205,96,20)" fg:x="1113" fg:w="5"/><text x="88.7942%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="88.5442%" y="517" width="0.3978%" height="15" fill="rgb(214,220,39)" fg:x="1113" fg:w="5"/><text x="88.7942%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.7828%" y="501" width="0.1591%" height="15" fill="rgb(245,126,30)" fg:x="1116" fg:w="2"/><text x="89.0328%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.7828%" y="485" width="0.1591%" height="15" fill="rgb(215,88,33)" fg:x="1116" fg:w="2"/><text x="89.0328%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.7828%" y="469" width="0.1591%" height="15" fill="rgb(210,1,49)" fg:x="1116" fg:w="2"/><text x="89.0328%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.7828%" y="453" width="0.1591%" height="15" fill="rgb(207,133,3)" fg:x="1116" fg:w="2"/><text x="89.0328%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="88.7828%" y="437" width="0.1591%" height="15" fill="rgb(231,47,43)" fg:x="1116" fg:w="2"/><text x="89.0328%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.7828%" y="421" width="0.1591%" height="15" fill="rgb(245,64,1)" fg:x="1116" fg:w="2"/><text x="89.0328%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.8624%" y="405" width="0.0796%" height="15" fill="rgb(253,145,20)" fg:x="1117" fg:w="1"/><text x="89.1124%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8624%" y="389" width="0.0796%" height="15" fill="rgb(211,39,18)" fg:x="1117" fg:w="1"/><text x="89.1124%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.8624%" y="373" width="0.0796%" height="15" fill="rgb(223,225,18)" fg:x="1117" fg:w="1"/><text x="89.1124%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8624%" y="357" width="0.0796%" height="15" fill="rgb(210,202,44)" fg:x="1117" fg:w="1"/><text x="89.1124%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.9419%" y="597" width="0.0796%" height="15" fill="rgb(231,138,36)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.9419%" y="581" width="0.0796%" height="15" fill="rgb(237,115,25)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9419%" y="565" width="0.0796%" height="15" fill="rgb(215,53,48)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9419%" y="549" width="0.0796%" height="15" fill="rgb(243,193,24)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9419%" y="533" width="0.0796%" height="15" fill="rgb(210,106,28)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9419%" y="517" width="0.0796%" height="15" fill="rgb(249,192,0)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1010%" y="565" width="0.0796%" height="15" fill="rgb(224,96,21)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1010%" y="549" width="0.0796%" height="15" fill="rgb(243,160,19)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="88.9419%" y="629" width="0.3978%" height="15" fill="rgb(219,205,50)" fg:x="1118" fg:w="5"/><text x="89.1919%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="88.9419%" y="613" width="0.3978%" height="15" fill="rgb(218,175,44)" fg:x="1118" fg:w="5"/><text x="89.1919%" y="623.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="89.0215%" y="597" width="0.3182%" height="15" fill="rgb(251,84,47)" fg:x="1119" fg:w="4"/><text x="89.2715%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="89.0215%" y="581" width="0.3182%" height="15" fill="rgb(241,14,16)" fg:x="1119" fg:w="4"/><text x="89.2715%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="89.1806%" y="565" width="0.1591%" height="15" fill="rgb(207,142,28)" fg:x="1121" fg:w="2"/><text x="89.4306%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.1806%" y="549" width="0.1591%" height="15" fill="rgb(208,116,22)" fg:x="1121" fg:w="2"/><text x="89.4306%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="89.1806%" y="533" width="0.1591%" height="15" fill="rgb(210,0,43)" fg:x="1121" fg:w="2"/><text x="89.4306%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.2601%" y="517" width="0.0796%" height="15" fill="rgb(246,33,21)" fg:x="1122" fg:w="1"/><text x="89.5101%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="89.2601%" y="501" width="0.0796%" height="15" fill="rgb(208,158,54)" fg:x="1122" fg:w="1"/><text x="89.5101%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="89.2601%" y="485" width="0.0796%" height="15" fill="rgb(218,99,29)" fg:x="1122" fg:w="1"/><text x="89.5101%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="89.2601%" y="469" width="0.0796%" height="15" fill="rgb(226,29,7)" fg:x="1122" fg:w="1"/><text x="89.5101%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="89.3397%" y="597" width="0.0796%" height="15" fill="rgb(206,178,46)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.3397%" y="581" width="0.0796%" height="15" fill="rgb(205,169,32)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.3397%" y="565" width="0.0796%" height="15" fill="rgb(217,4,13)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.3397%" y="549" width="0.0796%" height="15" fill="rgb(210,140,37)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.3397%" y="533" width="0.0796%" height="15" fill="rgb(229,80,10)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.3397%" y="517" width="0.0796%" height="15" fill="rgb(212,175,34)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.3397%" y="501" width="0.0796%" height="15" fill="rgb(216,207,24)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.3397%" y="485" width="0.0796%" height="15" fill="rgb(234,163,3)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.3397%" y="469" width="0.0796%" height="15" fill="rgb(248,101,16)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.3397%" y="453" width="0.0796%" height="15" fill="rgb(209,152,54)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.3397%" y="437" width="0.0796%" height="15" fill="rgb(229,124,51)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.3397%" y="421" width="0.0796%" height="15" fill="rgb(219,83,18)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.3397%" y="405" width="0.0796%" height="15" fill="rgb(206,29,38)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.3397%" y="389" width="0.0796%" height="15" fill="rgb(245,123,23)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="89.3397%" y="373" width="0.0796%" height="15" fill="rgb(238,50,33)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.3397%" y="357" width="0.0796%" height="15" fill="rgb(234,165,23)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="367.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="89.4193%" y="597" width="0.0796%" height="15" fill="rgb(211,82,31)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="89.4193%" y="581" width="0.0796%" height="15" fill="rgb(224,166,46)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.4193%" y="565" width="0.0796%" height="15" fill="rgb(211,13,8)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="89.4193%" y="549" width="0.0796%" height="15" fill="rgb(212,7,42)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.4193%" y="533" width="0.0796%" height="15" fill="rgb(249,102,19)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.4193%" y="517" width="0.0796%" height="15" fill="rgb(225,41,13)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4988%" y="517" width="0.0796%" height="15" fill="rgb(220,65,27)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4988%" y="501" width="0.0796%" height="15" fill="rgb(206,4,41)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4988%" y="485" width="0.0796%" height="15" fill="rgb(219,60,39)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4988%" y="469" width="0.0796%" height="15" fill="rgb(226,4,38)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4988%" y="453" width="0.0796%" height="15" fill="rgb(250,52,3)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4988%" y="437" width="0.0796%" height="15" fill="rgb(234,93,0)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4988%" y="421" width="0.0796%" height="15" fill="rgb(251,47,47)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.4988%" y="405" width="0.0796%" height="15" fill="rgb(205,166,47)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.4988%" y="389" width="0.0796%" height="15" fill="rgb(231,148,8)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.4988%" y="373" width="0.0796%" height="15" fill="rgb(244,185,19)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4988%" y="357" width="0.0796%" height="15" fill="rgb(224,201,45)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4988%" y="341" width="0.0796%" height="15" fill="rgb(240,77,39)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.4988%" y="325" width="0.0796%" height="15" fill="rgb(248,211,29)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.4988%" y="309" width="0.0796%" height="15" fill="rgb(232,214,46)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.4988%" y="293" width="0.0796%" height="15" fill="rgb(213,99,54)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.4988%" y="277" width="0.0796%" height="15" fill="rgb(240,19,46)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4988%" y="261" width="0.0796%" height="15" fill="rgb(243,89,10)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="271.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="89.4988%" y="549" width="0.1591%" height="15" fill="rgb(249,28,32)" fg:x="1125" fg:w="2"/><text x="89.7488%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.4988%" y="533" width="0.1591%" height="15" fill="rgb(253,30,9)" fg:x="1125" fg:w="2"/><text x="89.7488%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.5784%" y="517" width="0.0796%" height="15" fill="rgb(217,2,26)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.5784%" y="501" width="0.0796%" height="15" fill="rgb(220,28,10)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.5784%" y="485" width="0.0796%" height="15" fill="rgb(228,167,49)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.5784%" y="469" width="0.0796%" height="15" fill="rgb(238,212,3)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.5784%" y="453" width="0.0796%" height="15" fill="rgb(229,134,44)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.5784%" y="437" width="0.0796%" height="15" fill="rgb(208,71,4)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.5784%" y="421" width="0.0796%" height="15" fill="rgb(221,205,45)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.5784%" y="405" width="0.0796%" height="15" fill="rgb(215,132,38)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="89.3397%" y="613" width="0.3978%" height="15" fill="rgb(227,158,6)" fg:x="1123" fg:w="5"/><text x="89.5897%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="89.4988%" y="597" width="0.2387%" height="15" fill="rgb(250,10,38)" fg:x="1125" fg:w="3"/><text x="89.7488%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="89.4988%" y="581" width="0.2387%" height="15" fill="rgb(225,171,40)" fg:x="1125" fg:w="3"/><text x="89.7488%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="89.4988%" y="565" width="0.2387%" height="15" fill="rgb(238,17,43)" fg:x="1125" fg:w="3"/><text x="89.7488%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="89.6579%" y="549" width="0.0796%" height="15" fill="rgb(208,145,4)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="89.6579%" y="533" width="0.0796%" height="15" fill="rgb(232,82,7)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.6579%" y="517" width="0.0796%" height="15" fill="rgb(205,166,38)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.6579%" y="501" width="0.0796%" height="15" fill="rgb(240,228,4)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.6579%" y="485" width="0.0796%" height="15" fill="rgb(233,121,40)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.6579%" y="469" width="0.0796%" height="15" fill="rgb(243,84,30)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::HasScopes&gt;::scopes_mut (1 samples, 0.08%)</title><rect x="89.7375%" y="597" width="0.0796%" height="15" fill="rgb(235,81,48)" fg:x="1128" fg:w="1"/><text x="89.9875%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.8170%" y="565" width="0.0796%" height="15" fill="rgb(218,137,0)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.8170%" y="549" width="0.0796%" height="15" fill="rgb(223,151,48)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.8170%" y="533" width="0.0796%" height="15" fill="rgb(247,30,19)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8170%" y="517" width="0.0796%" height="15" fill="rgb(205,129,29)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8170%" y="501" width="0.0796%" height="15" fill="rgb(222,29,2)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8170%" y="485" width="0.0796%" height="15" fill="rgb(232,145,33)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8170%" y="469" width="0.0796%" height="15" fill="rgb(217,30,31)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.8170%" y="453" width="0.0796%" height="15" fill="rgb(243,22,52)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8170%" y="437" width="0.0796%" height="15" fill="rgb(254,228,14)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.8170%" y="421" width="0.0796%" height="15" fill="rgb(231,45,50)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="89.8170%" y="597" width="0.1591%" height="15" fill="rgb(248,125,3)" fg:x="1129" fg:w="2"/><text x="90.0670%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="89.8170%" y="581" width="0.1591%" height="15" fill="rgb(213,76,9)" fg:x="1129" fg:w="2"/><text x="90.0670%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.8966%" y="565" width="0.0796%" height="15" fill="rgb(238,108,21)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.8966%" y="549" width="0.0796%" height="15" fill="rgb(229,214,19)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.8966%" y="533" width="0.0796%" height="15" fill="rgb(252,201,5)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.8966%" y="517" width="0.0796%" height="15" fill="rgb(233,165,49)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.8966%" y="501" width="0.0796%" height="15" fill="rgb(208,165,19)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.8966%" y="485" width="0.0796%" height="15" fill="rgb(216,220,31)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.8966%" y="469" width="0.0796%" height="15" fill="rgb(214,8,31)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.8966%" y="453" width="0.0796%" height="15" fill="rgb(220,32,32)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.8966%" y="437" width="0.0796%" height="15" fill="rgb(237,172,34)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8966%" y="421" width="0.0796%" height="15" fill="rgb(240,209,5)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9761%" y="501" width="0.0796%" height="15" fill="rgb(221,219,1)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9761%" y="485" width="0.0796%" height="15" fill="rgb(237,90,36)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9761%" y="469" width="0.0796%" height="15" fill="rgb(245,14,51)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9761%" y="453" width="0.0796%" height="15" fill="rgb(211,71,49)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9761%" y="437" width="0.0796%" height="15" fill="rgb(230,223,9)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9761%" y="421" width="0.0796%" height="15" fill="rgb(212,33,31)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9761%" y="405" width="0.0796%" height="15" fill="rgb(218,141,5)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.9761%" y="389" width="0.0796%" height="15" fill="rgb(239,194,8)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.9761%" y="373" width="0.0796%" height="15" fill="rgb(225,119,29)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.9761%" y="357" width="0.0796%" height="15" fill="rgb(233,32,3)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9761%" y="341" width="0.0796%" height="15" fill="rgb(248,126,40)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9761%" y="325" width="0.0796%" height="15" fill="rgb(213,102,53)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.9761%" y="309" width="0.0796%" height="15" fill="rgb(212,69,15)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.9761%" y="293" width="0.0796%" height="15" fill="rgb(253,39,34)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.9761%" y="277" width="0.0796%" height="15" fill="rgb(205,189,54)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.9761%" y="261" width="0.0796%" height="15" fill="rgb(234,229,45)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9761%" y="245" width="0.0796%" height="15" fill="rgb(243,79,48)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="89.9761%" y="549" width="0.2387%" height="15" fill="rgb(206,71,50)" fg:x="1131" fg:w="3"/><text x="90.2261%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="89.9761%" y="533" width="0.2387%" height="15" fill="rgb(209,32,17)" fg:x="1131" fg:w="3"/><text x="90.2261%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="89.9761%" y="517" width="0.2387%" height="15" fill="rgb(219,229,6)" fg:x="1131" fg:w="3"/><text x="90.2261%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.0557%" y="501" width="0.1591%" height="15" fill="rgb(226,25,27)" fg:x="1132" fg:w="2"/><text x="90.3057%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.0557%" y="485" width="0.1591%" height="15" fill="rgb(218,185,23)" fg:x="1132" fg:w="2"/><text x="90.3057%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1352%" y="469" width="0.0796%" height="15" fill="rgb(242,123,5)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1352%" y="453" width="0.0796%" height="15" fill="rgb(215,53,19)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.1352%" y="437" width="0.0796%" height="15" fill="rgb(233,20,30)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1352%" y="421" width="0.0796%" height="15" fill="rgb(209,67,20)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1352%" y="405" width="0.0796%" height="15" fill="rgb(227,181,50)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1352%" y="389" width="0.0796%" height="15" fill="rgb(252,75,38)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1352%" y="373" width="0.0796%" height="15" fill="rgb(235,9,33)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1352%" y="357" width="0.0796%" height="15" fill="rgb(208,87,30)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.1352%" y="341" width="0.0796%" height="15" fill="rgb(215,199,39)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2148%" y="501" width="0.0796%" height="15" fill="rgb(246,208,12)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2148%" y="485" width="0.0796%" height="15" fill="rgb(206,195,10)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2148%" y="469" width="0.0796%" height="15" fill="rgb(244,1,30)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2148%" y="453" width="0.0796%" height="15" fill="rgb(230,83,5)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2148%" y="437" width="0.0796%" height="15" fill="rgb(239,62,17)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (95 samples, 7.56%)</title><rect x="82.8162%" y="645" width="7.5577%" height="15" fill="rgb(252,193,41)" fg:x="1041" fg:w="95"/><text x="83.0662%" y="655.50">plugins_co..</text></g><g><title>plugins_core::build::Build::occupying (13 samples, 1.03%)</title><rect x="89.3397%" y="629" width="1.0342%" height="15" fill="rgb(216,142,19)" fg:x="1123" fg:w="13"/><text x="89.5897%" y="639.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="89.7375%" y="613" width="0.6364%" height="15" fill="rgb(240,81,38)" fg:x="1128" fg:w="8"/><text x="89.9875%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (5 samples, 0.40%)</title><rect x="89.9761%" y="597" width="0.3978%" height="15" fill="rgb(240,109,40)" fg:x="1131" fg:w="5"/><text x="90.2261%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="89.9761%" y="581" width="0.3978%" height="15" fill="rgb(230,123,10)" fg:x="1131" fg:w="5"/><text x="90.2261%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="89.9761%" y="565" width="0.3978%" height="15" fill="rgb(253,42,32)" fg:x="1131" fg:w="5"/><text x="90.2261%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="90.2148%" y="549" width="0.1591%" height="15" fill="rgb(218,154,8)" fg:x="1134" fg:w="2"/><text x="90.4648%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="90.2148%" y="533" width="0.1591%" height="15" fill="rgb(216,197,10)" fg:x="1134" fg:w="2"/><text x="90.4648%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.2148%" y="517" width="0.1591%" height="15" fill="rgb(223,107,12)" fg:x="1134" fg:w="2"/><text x="90.4648%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.2944%" y="501" width="0.0796%" height="15" fill="rgb(241,174,42)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.2944%" y="485" width="0.0796%" height="15" fill="rgb(231,78,20)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.2944%" y="469" width="0.0796%" height="15" fill="rgb(230,208,49)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.2944%" y="453" width="0.0796%" height="15" fill="rgb(238,11,34)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.2944%" y="437" width="0.0796%" height="15" fill="rgb(210,130,26)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2944%" y="421" width="0.0796%" height="15" fill="rgb(242,131,11)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="90.3739%" y="645" width="0.0796%" height="15" fill="rgb(237,38,28)" fg:x="1136" fg:w="1"/><text x="90.6239%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="90.3739%" y="629" width="0.0796%" height="15" fill="rgb(244,180,43)" fg:x="1136" fg:w="1"/><text x="90.6239%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="90.3739%" y="613" width="0.0796%" height="15" fill="rgb(214,171,19)" fg:x="1136" fg:w="1"/><text x="90.6239%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.4535%" y="597" width="0.0796%" height="15" fill="rgb(252,101,45)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.4535%" y="581" width="0.0796%" height="15" fill="rgb(211,96,33)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.4535%" y="565" width="0.0796%" height="15" fill="rgb(207,80,25)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4535%" y="549" width="0.0796%" height="15" fill="rgb(225,15,35)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4535%" y="533" width="0.0796%" height="15" fill="rgb(214,93,43)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4535%" y="517" width="0.0796%" height="15" fill="rgb(248,42,37)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4535%" y="501" width="0.0796%" height="15" fill="rgb(217,135,32)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.4535%" y="485" width="0.0796%" height="15" fill="rgb(216,74,28)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4535%" y="469" width="0.0796%" height="15" fill="rgb(247,108,16)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4535%" y="453" width="0.0796%" height="15" fill="rgb(205,219,30)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4535%" y="437" width="0.0796%" height="15" fill="rgb(241,122,9)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4535%" y="421" width="0.0796%" height="15" fill="rgb(216,148,50)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4535%" y="405" width="0.0796%" height="15" fill="rgb(226,154,2)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.4535%" y="389" width="0.0796%" height="15" fill="rgb(220,128,1)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.4535%" y="373" width="0.0796%" height="15" fill="rgb(245,185,29)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="90.5330%" y="597" width="0.0796%" height="15" fill="rgb(243,161,2)" fg:x="1138" fg:w="1"/><text x="90.7830%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="90.5330%" y="581" width="0.0796%" height="15" fill="rgb(249,215,17)" fg:x="1138" fg:w="1"/><text x="90.7830%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6126%" y="581" width="0.0796%" height="15" fill="rgb(237,67,11)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6126%" y="565" width="0.0796%" height="15" fill="rgb(239,17,24)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6126%" y="549" width="0.0796%" height="15" fill="rgb(215,97,29)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.6126%" y="533" width="0.0796%" height="15" fill="rgb(253,228,42)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.6126%" y="517" width="0.0796%" height="15" fill="rgb(240,85,2)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.6126%" y="501" width="0.0796%" height="15" fill="rgb(214,155,4)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.6126%" y="485" width="0.0796%" height="15" fill="rgb(247,120,22)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.6126%" y="469" width="0.0796%" height="15" fill="rgb(211,208,6)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.6126%" y="453" width="0.0796%" height="15" fill="rgb(235,99,41)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.6126%" y="437" width="0.0796%" height="15" fill="rgb(223,28,8)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.6126%" y="421" width="0.0796%" height="15" fill="rgb(212,71,20)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.6126%" y="405" width="0.0796%" height="15" fill="rgb(206,85,3)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (4 samples, 0.32%)</title><rect x="90.4535%" y="645" width="0.3182%" height="15" fill="rgb(244,180,11)" fg:x="1137" fg:w="4"/><text x="90.7035%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="90.4535%" y="629" width="0.3182%" height="15" fill="rgb(223,16,21)" fg:x="1137" fg:w="4"/><text x="90.7035%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="90.4535%" y="613" width="0.3182%" height="15" fill="rgb(238,85,42)" fg:x="1137" fg:w="4"/><text x="90.7035%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="90.6126%" y="597" width="0.1591%" height="15" fill="rgb(205,85,8)" fg:x="1139" fg:w="2"/><text x="90.8626%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="90.6921%" y="581" width="0.0796%" height="15" fill="rgb(217,190,15)" fg:x="1140" fg:w="1"/><text x="90.9421%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="90.6921%" y="565" width="0.0796%" height="15" fill="rgb(243,192,23)" fg:x="1140" fg:w="1"/><text x="90.9421%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.6921%" y="549" width="0.0796%" height="15" fill="rgb(223,220,37)" fg:x="1140" fg:w="1"/><text x="90.9421%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.6921%" y="533" width="0.0796%" height="15" fill="rgb(208,41,17)" fg:x="1140" fg:w="1"/><text x="90.9421%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6921%" y="517" width="0.0796%" height="15" fill="rgb(224,188,7)" fg:x="1140" fg:w="1"/><text x="90.9421%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6921%" y="501" width="0.0796%" height="15" fill="rgb(236,16,50)" fg:x="1140" fg:w="1"/><text x="90.9421%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6921%" y="485" width="0.0796%" height="15" fill="rgb(238,6,24)" fg:x="1140" fg:w="1"/><text x="90.9421%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6921%" y="469" width="0.0796%" height="15" fill="rgb(253,67,45)" fg:x="1140" fg:w="1"/><text x="90.9421%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="90.8512%" y="613" width="0.0796%" height="15" fill="rgb(210,89,32)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="90.8512%" y="597" width="0.0796%" height="15" fill="rgb(208,89,9)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="90.8512%" y="581" width="0.0796%" height="15" fill="rgb(222,180,44)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="90.8512%" y="565" width="0.0796%" height="15" fill="rgb(250,181,46)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.8512%" y="549" width="0.0796%" height="15" fill="rgb(210,190,26)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="90.8512%" y="533" width="0.0796%" height="15" fill="rgb(253,49,13)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="90.8512%" y="517" width="0.0796%" height="15" fill="rgb(240,184,42)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="90.8512%" y="501" width="0.0796%" height="15" fill="rgb(246,59,37)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.8512%" y="485" width="0.0796%" height="15" fill="rgb(207,134,54)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="90.8512%" y="469" width="0.0796%" height="15" fill="rgb(250,122,24)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="90.8512%" y="453" width="0.0796%" height="15" fill="rgb(239,206,3)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8512%" y="437" width="0.0796%" height="15" fill="rgb(253,220,32)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.9308%" y="613" width="0.0796%" height="15" fill="rgb(209,217,48)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.9308%" y="597" width="0.0796%" height="15" fill="rgb(242,91,39)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.9308%" y="581" width="0.0796%" height="15" fill="rgb(228,4,13)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9308%" y="565" width="0.0796%" height="15" fill="rgb(223,133,4)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9308%" y="549" width="0.0796%" height="15" fill="rgb(215,105,30)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9308%" y="533" width="0.0796%" height="15" fill="rgb(230,9,4)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.9308%" y="517" width="0.0796%" height="15" fill="rgb(248,15,2)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.9308%" y="501" width="0.0796%" height="15" fill="rgb(208,210,22)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.9308%" y="485" width="0.0796%" height="15" fill="rgb(208,112,41)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.9308%" y="469" width="0.0796%" height="15" fill="rgb(232,83,14)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.9308%" y="453" width="0.0796%" height="15" fill="rgb(229,65,11)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.9308%" y="437" width="0.0796%" height="15" fill="rgb(228,126,24)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.9308%" y="421" width="0.0796%" height="15" fill="rgb(218,66,33)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.9308%" y="405" width="0.0796%" height="15" fill="rgb(251,49,52)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.9308%" y="389" width="0.0796%" height="15" fill="rgb(219,46,37)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9308%" y="373" width="0.0796%" height="15" fill="rgb(213,53,49)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.0103%" y="565" width="0.0796%" height="15" fill="rgb(214,134,1)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.0103%" y="549" width="0.0796%" height="15" fill="rgb(208,139,43)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.0103%" y="533" width="0.0796%" height="15" fill="rgb(231,105,35)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.0103%" y="517" width="0.0796%" height="15" fill="rgb(247,189,9)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0899%" y="469" width="0.0796%" height="15" fill="rgb(252,48,51)" fg:x="1145" fg:w="1"/><text x="91.3399%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0899%" y="453" width="0.0796%" height="15" fill="rgb(209,121,1)" fg:x="1145" fg:w="1"/><text x="91.3399%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0899%" y="437" width="0.0796%" height="15" fill="rgb(231,40,26)" fg:x="1145" fg:w="1"/><text x="91.3399%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="91.0103%" y="597" width="0.2387%" height="15" fill="rgb(251,8,13)" fg:x="1144" fg:w="3"/><text x="91.2603%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="91.0103%" y="581" width="0.2387%" height="15" fill="rgb(231,110,2)" fg:x="1144" fg:w="3"/><text x="91.2603%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="91.0899%" y="565" width="0.1591%" height="15" fill="rgb(216,153,22)" fg:x="1145" fg:w="2"/><text x="91.3399%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="91.0899%" y="549" width="0.1591%" height="15" fill="rgb(249,116,49)" fg:x="1145" fg:w="2"/><text x="91.3399%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="91.0899%" y="533" width="0.1591%" height="15" fill="rgb(230,89,2)" fg:x="1145" fg:w="2"/><text x="91.3399%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.0899%" y="517" width="0.1591%" height="15" fill="rgb(231,125,23)" fg:x="1145" fg:w="2"/><text x="91.3399%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="91.0899%" y="501" width="0.1591%" height="15" fill="rgb(212,217,18)" fg:x="1145" fg:w="2"/><text x="91.3399%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.0899%" y="485" width="0.1591%" height="15" fill="rgb(210,21,33)" fg:x="1145" fg:w="2"/><text x="91.3399%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="91.1695%" y="469" width="0.0796%" height="15" fill="rgb(241,97,9)" fg:x="1146" fg:w="1"/><text x="91.4195%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1695%" y="453" width="0.0796%" height="15" fill="rgb(221,35,31)" fg:x="1146" fg:w="1"/><text x="91.4195%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1695%" y="437" width="0.0796%" height="15" fill="rgb(251,23,23)" fg:x="1146" fg:w="1"/><text x="91.4195%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="91.0103%" y="613" width="0.3978%" height="15" fill="rgb(227,165,2)" fg:x="1144" fg:w="5"/><text x="91.2603%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="91.2490%" y="597" width="0.1591%" height="15" fill="rgb(242,24,2)" fg:x="1147" fg:w="2"/><text x="91.4990%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.2490%" y="581" width="0.1591%" height="15" fill="rgb(242,138,51)" fg:x="1147" fg:w="2"/><text x="91.4990%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.2490%" y="565" width="0.1591%" height="15" fill="rgb(220,219,5)" fg:x="1147" fg:w="2"/><text x="91.4990%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="91.2490%" y="549" width="0.1591%" height="15" fill="rgb(247,53,29)" fg:x="1147" fg:w="2"/><text x="91.4990%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.3286%" y="533" width="0.0796%" height="15" fill="rgb(233,43,39)" fg:x="1148" fg:w="1"/><text x="91.5786%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="90.8512%" y="629" width="0.6364%" height="15" fill="rgb(230,128,54)" fg:x="1142" fg:w="8"/><text x="91.1012%" y="639.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="91.4081%" y="613" width="0.0796%" height="15" fill="rgb(218,20,12)" fg:x="1149" fg:w="1"/><text x="91.6581%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="91.4877%" y="629" width="0.3182%" height="15" fill="rgb(206,51,14)" fg:x="1150" fg:w="4"/><text x="91.7377%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="91.4877%" y="613" width="0.3182%" height="15" fill="rgb(223,16,35)" fg:x="1150" fg:w="4"/><text x="91.7377%" y="623.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="91.4877%" y="597" width="0.3182%" height="15" fill="rgb(226,165,37)" fg:x="1150" fg:w="4"/><text x="91.7377%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="91.4877%" y="581" width="0.3182%" height="15" fill="rgb(240,26,21)" fg:x="1150" fg:w="4"/><text x="91.7377%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="91.5672%" y="565" width="0.2387%" height="15" fill="rgb(240,72,46)" fg:x="1151" fg:w="3"/><text x="91.8172%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="91.5672%" y="549" width="0.2387%" height="15" fill="rgb(211,33,41)" fg:x="1151" fg:w="3"/><text x="91.8172%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="91.5672%" y="533" width="0.2387%" height="15" fill="rgb(224,157,46)" fg:x="1151" fg:w="3"/><text x="91.8172%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="91.5672%" y="517" width="0.2387%" height="15" fill="rgb(223,59,19)" fg:x="1151" fg:w="3"/><text x="91.8172%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="91.6468%" y="501" width="0.1591%" height="15" fill="rgb(239,187,1)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="91.6468%" y="485" width="0.1591%" height="15" fill="rgb(226,95,9)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7263%" y="469" width="0.0796%" height="15" fill="rgb(234,61,54)" fg:x="1153" fg:w="1"/><text x="91.9763%" y="479.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (171 samples, 13.60%)</title><rect x="78.2816%" y="661" width="13.6038%" height="15" fill="rgb(205,209,47)" fg:x="984" fg:w="171"/><text x="78.5316%" y="671.50">&lt;tests::HoldingKeyInV..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (14 samples, 1.11%)</title><rect x="90.7717%" y="645" width="1.1138%" height="15" fill="rgb(228,7,43)" fg:x="1141" fg:w="14"/><text x="91.0217%" y="655.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="91.8059%" y="629" width="0.0796%" height="15" fill="rgb(240,217,52)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="91.8059%" y="613" width="0.0796%" height="15" fill="rgb(211,178,21)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="91.8059%" y="597" width="0.0796%" height="15" fill="rgb(205,25,34)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="91.8059%" y="581" width="0.0796%" height="15" fill="rgb(209,57,11)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.8059%" y="565" width="0.0796%" height="15" fill="rgb(221,99,2)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="91.8059%" y="549" width="0.0796%" height="15" fill="rgb(232,79,22)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.8059%" y="533" width="0.0796%" height="15" fill="rgb(221,145,32)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8059%" y="517" width="0.0796%" height="15" fill="rgb(236,133,36)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="91.8854%" y="613" width="0.1591%" height="15" fill="rgb(208,224,44)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="91.8854%" y="597" width="0.1591%" height="15" fill="rgb(235,143,15)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="91.8854%" y="581" width="0.1591%" height="15" fill="rgb(249,83,27)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9650%" y="565" width="0.0796%" height="15" fill="rgb(238,226,19)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9650%" y="549" width="0.0796%" height="15" fill="rgb(226,206,27)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.9650%" y="533" width="0.0796%" height="15" fill="rgb(251,182,9)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.9650%" y="517" width="0.0796%" height="15" fill="rgb(212,140,41)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.9650%" y="501" width="0.0796%" height="15" fill="rgb(220,106,18)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9650%" y="485" width="0.0796%" height="15" fill="rgb(252,46,41)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9650%" y="469" width="0.0796%" height="15" fill="rgb(209,222,15)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.9650%" y="453" width="0.0796%" height="15" fill="rgb(233,83,50)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.9650%" y="437" width="0.0796%" height="15" fill="rgb(205,212,0)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.9650%" y="421" width="0.0796%" height="15" fill="rgb(235,117,51)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.9650%" y="405" width="0.0796%" height="15" fill="rgb(233,133,48)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9650%" y="389" width="0.0796%" height="15" fill="rgb(219,3,2)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="92.0446%" y="565" width="0.0796%" height="15" fill="rgb(225,80,52)" fg:x="1157" fg:w="1"/><text x="92.2946%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.0446%" y="549" width="0.0796%" height="15" fill="rgb(235,195,42)" fg:x="1157" fg:w="1"/><text x="92.2946%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.0446%" y="533" width="0.0796%" height="15" fill="rgb(240,207,46)" fg:x="1157" fg:w="1"/><text x="92.2946%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="92.1241%" y="549" width="0.3978%" height="15" fill="rgb(236,112,50)" fg:x="1158" fg:w="5"/><text x="92.3741%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="92.2832%" y="533" width="0.2387%" height="15" fill="rgb(249,151,27)" fg:x="1160" fg:w="3"/><text x="92.5332%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="92.2832%" y="517" width="0.2387%" height="15" fill="rgb(253,223,52)" fg:x="1160" fg:w="3"/><text x="92.5332%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="92.2832%" y="501" width="0.2387%" height="15" fill="rgb(215,55,33)" fg:x="1160" fg:w="3"/><text x="92.5332%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.4423%" y="485" width="0.0796%" height="15" fill="rgb(207,24,17)" fg:x="1162" fg:w="1"/><text x="92.6923%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.4423%" y="469" width="0.0796%" height="15" fill="rgb(218,169,32)" fg:x="1162" fg:w="1"/><text x="92.6923%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.4423%" y="453" width="0.0796%" height="15" fill="rgb(209,210,6)" fg:x="1162" fg:w="1"/><text x="92.6923%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="92.6014%" y="533" width="0.1591%" height="15" fill="rgb(225,208,8)" fg:x="1164" fg:w="2"/><text x="92.8514%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="92.6014%" y="517" width="0.1591%" height="15" fill="rgb(238,14,32)" fg:x="1164" fg:w="2"/><text x="92.8514%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.6810%" y="501" width="0.0796%" height="15" fill="rgb(211,137,3)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.7605%" y="533" width="0.1591%" height="15" fill="rgb(207,171,19)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.7605%" y="517" width="0.1591%" height="15" fill="rgb(250,80,8)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.9196%" y="517" width="0.0796%" height="15" fill="rgb(209,103,53)" fg:x="1168" fg:w="1"/><text x="93.1696%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.9196%" y="501" width="0.0796%" height="15" fill="rgb(233,198,10)" fg:x="1168" fg:w="1"/><text x="93.1696%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.9196%" y="485" width="0.0796%" height="15" fill="rgb(236,125,25)" fg:x="1168" fg:w="1"/><text x="93.1696%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.9196%" y="469" width="0.0796%" height="15" fill="rgb(254,182,48)" fg:x="1168" fg:w="1"/><text x="93.1696%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.9992%" y="501" width="0.0796%" height="15" fill="rgb(216,108,44)" fg:x="1169" fg:w="1"/><text x="93.2492%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.9992%" y="485" width="0.0796%" height="15" fill="rgb(222,72,39)" fg:x="1169" fg:w="1"/><text x="93.2492%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.9992%" y="469" width="0.0796%" height="15" fill="rgb(252,70,39)" fg:x="1169" fg:w="1"/><text x="93.2492%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.9992%" y="453" width="0.0796%" height="15" fill="rgb(243,99,34)" fg:x="1169" fg:w="1"/><text x="93.2492%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="92.9992%" y="517" width="0.1591%" height="15" fill="rgb(252,109,12)" fg:x="1169" fg:w="2"/><text x="93.2492%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="93.0788%" y="501" width="0.0796%" height="15" fill="rgb(211,186,10)" fg:x="1170" fg:w="1"/><text x="93.3288%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="93.0788%" y="485" width="0.0796%" height="15" fill="rgb(246,90,8)" fg:x="1170" fg:w="1"/><text x="93.3288%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.19%)</title><rect x="92.0446%" y="581" width="1.1933%" height="15" fill="rgb(226,91,24)" fg:x="1157" fg:w="15"/><text x="92.2946%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.11%)</title><rect x="92.1241%" y="565" width="1.1138%" height="15" fill="rgb(216,28,44)" fg:x="1158" fg:w="14"/><text x="92.3741%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="92.5219%" y="549" width="0.7160%" height="15" fill="rgb(229,36,0)" fg:x="1163" fg:w="9"/><text x="92.7719%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="92.9196%" y="533" width="0.3182%" height="15" fill="rgb(245,97,18)" fg:x="1168" fg:w="4"/><text x="93.1696%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.1583%" y="517" width="0.0796%" height="15" fill="rgb(241,97,54)" fg:x="1171" fg:w="1"/><text x="93.4083%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.1583%" y="501" width="0.0796%" height="15" fill="rgb(234,125,17)" fg:x="1171" fg:w="1"/><text x="93.4083%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1583%" y="485" width="0.0796%" height="15" fill="rgb(228,172,39)" fg:x="1171" fg:w="1"/><text x="93.4083%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2379%" y="581" width="0.0796%" height="15" fill="rgb(227,169,1)" fg:x="1172" fg:w="1"/><text x="93.4879%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.2379%" y="565" width="0.0796%" height="15" fill="rgb(206,13,35)" fg:x="1172" fg:w="1"/><text x="93.4879%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2379%" y="549" width="0.0796%" height="15" fill="rgb(211,117,30)" fg:x="1172" fg:w="1"/><text x="93.4879%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2379%" y="533" width="0.0796%" height="15" fill="rgb(230,198,4)" fg:x="1172" fg:w="1"/><text x="93.4879%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2379%" y="517" width="0.0796%" height="15" fill="rgb(213,87,54)" fg:x="1172" fg:w="1"/><text x="93.4879%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2379%" y="501" width="0.0796%" height="15" fill="rgb(248,43,22)" fg:x="1172" fg:w="1"/><text x="93.4879%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2379%" y="485" width="0.0796%" height="15" fill="rgb(213,175,48)" fg:x="1172" fg:w="1"/><text x="93.4879%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.2379%" y="469" width="0.0796%" height="15" fill="rgb(252,55,9)" fg:x="1172" fg:w="1"/><text x="93.4879%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="93.3174%" y="501" width="0.1591%" height="15" fill="rgb(231,72,33)" fg:x="1173" fg:w="2"/><text x="93.5674%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.4765%" y="485" width="0.0796%" height="15" fill="rgb(213,2,54)" fg:x="1175" fg:w="1"/><text x="93.7265%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.5561%" y="469" width="0.0796%" height="15" fill="rgb(208,88,25)" fg:x="1176" fg:w="1"/><text x="93.8061%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="93.3174%" y="549" width="0.3978%" height="15" fill="rgb(215,117,13)" fg:x="1173" fg:w="5"/><text x="93.5674%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="93.3174%" y="533" width="0.3978%" height="15" fill="rgb(243,147,21)" fg:x="1173" fg:w="5"/><text x="93.5674%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="93.3174%" y="517" width="0.3978%" height="15" fill="rgb(208,215,36)" fg:x="1173" fg:w="5"/><text x="93.5674%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="93.4765%" y="501" width="0.2387%" height="15" fill="rgb(238,187,24)" fg:x="1175" fg:w="3"/><text x="93.7265%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="93.5561%" y="485" width="0.1591%" height="15" fill="rgb(214,173,11)" fg:x="1176" fg:w="2"/><text x="93.8061%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="93.6356%" y="469" width="0.0796%" height="15" fill="rgb(222,71,20)" fg:x="1177" fg:w="1"/><text x="93.8856%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.7152%" y="517" width="0.1591%" height="15" fill="rgb(242,125,4)" fg:x="1178" fg:w="2"/><text x="93.9652%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.7947%" y="501" width="0.0796%" height="15" fill="rgb(217,101,52)" fg:x="1179" fg:w="1"/><text x="94.0447%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="93.7152%" y="533" width="0.2387%" height="15" fill="rgb(223,2,50)" fg:x="1178" fg:w="3"/><text x="93.9652%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.8743%" y="517" width="0.0796%" height="15" fill="rgb(225,197,9)" fg:x="1180" fg:w="1"/><text x="94.1243%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="93.3174%" y="565" width="0.7160%" height="15" fill="rgb(234,76,27)" fg:x="1173" fg:w="9"/><text x="93.5674%" y="575.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="93.7152%" y="549" width="0.3182%" height="15" fill="rgb(213,161,26)" fg:x="1178" fg:w="4"/><text x="93.9652%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="93.9539%" y="533" width="0.0796%" height="15" fill="rgb(210,228,2)" fg:x="1181" fg:w="1"/><text x="94.2039%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.9539%" y="517" width="0.0796%" height="15" fill="rgb(235,4,16)" fg:x="1181" fg:w="1"/><text x="94.2039%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9539%" y="501" width="0.0796%" height="15" fill="rgb(235,83,42)" fg:x="1181" fg:w="1"/><text x="94.2039%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.0334%" y="533" width="0.1591%" height="15" fill="rgb(207,116,39)" fg:x="1182" fg:w="2"/><text x="94.2834%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.0334%" y="517" width="0.1591%" height="15" fill="rgb(253,206,9)" fg:x="1182" fg:w="2"/><text x="94.2834%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="94.1130%" y="501" width="0.0796%" height="15" fill="rgb(234,32,47)" fg:x="1183" fg:w="1"/><text x="94.3630%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="94.1925%" y="533" width="0.0796%" height="15" fill="rgb(247,40,39)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="94.1925%" y="517" width="0.0796%" height="15" fill="rgb(236,199,13)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1925%" y="501" width="0.0796%" height="15" fill="rgb(240,127,44)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1925%" y="485" width="0.0796%" height="15" fill="rgb(248,220,47)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="94.4312%" y="485" width="0.0796%" height="15" fill="rgb(240,78,9)" fg:x="1187" fg:w="1"/><text x="94.6812%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="94.4312%" y="469" width="0.0796%" height="15" fill="rgb(245,119,5)" fg:x="1187" fg:w="1"/><text x="94.6812%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="94.4312%" y="453" width="0.0796%" height="15" fill="rgb(238,175,31)" fg:x="1187" fg:w="1"/><text x="94.6812%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5107%" y="453" width="0.0796%" height="15" fill="rgb(232,140,42)" fg:x="1188" fg:w="1"/><text x="94.7607%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.6698%" y="437" width="0.0796%" height="15" fill="rgb(218,179,7)" fg:x="1190" fg:w="1"/><text x="94.9198%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="94.7494%" y="405" width="0.1591%" height="15" fill="rgb(232,79,27)" fg:x="1191" fg:w="2"/><text x="94.9994%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="94.9085%" y="405" width="0.3182%" height="15" fill="rgb(247,11,19)" fg:x="1193" fg:w="4"/><text x="95.1585%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="94.9881%" y="389" width="0.2387%" height="15" fill="rgb(216,171,54)" fg:x="1194" fg:w="3"/><text x="95.2381%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="95.1472%" y="373" width="0.0796%" height="15" fill="rgb(233,158,36)" fg:x="1196" fg:w="1"/><text x="95.3972%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1472%" y="357" width="0.0796%" height="15" fill="rgb(215,48,47)" fg:x="1196" fg:w="1"/><text x="95.3972%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1472%" y="341" width="0.0796%" height="15" fill="rgb(230,223,15)" fg:x="1196" fg:w="1"/><text x="95.3972%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1472%" y="325" width="0.0796%" height="15" fill="rgb(234,49,19)" fg:x="1196" fg:w="1"/><text x="95.3972%" y="335.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.27%)</title><rect x="94.0334%" y="565" width="1.2729%" height="15" fill="rgb(232,89,25)" fg:x="1182" fg:w="16"/><text x="94.2834%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.27%)</title><rect x="94.0334%" y="549" width="1.2729%" height="15" fill="rgb(237,206,28)" fg:x="1182" fg:w="16"/><text x="94.2834%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.03%)</title><rect x="94.2721%" y="533" width="1.0342%" height="15" fill="rgb(249,68,37)" fg:x="1185" fg:w="13"/><text x="94.5221%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="94.4312%" y="517" width="0.8751%" height="15" fill="rgb(226,99,43)" fg:x="1187" fg:w="11"/><text x="94.6812%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="94.4312%" y="501" width="0.8751%" height="15" fill="rgb(216,46,28)" fg:x="1187" fg:w="11"/><text x="94.6812%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="94.5107%" y="485" width="0.7955%" height="15" fill="rgb(216,33,9)" fg:x="1188" fg:w="10"/><text x="94.7607%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="94.5107%" y="469" width="0.7955%" height="15" fill="rgb(216,129,4)" fg:x="1188" fg:w="10"/><text x="94.7607%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="94.5903%" y="453" width="0.7160%" height="15" fill="rgb(216,106,3)" fg:x="1189" fg:w="9"/><text x="94.8403%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="94.7494%" y="437" width="0.5569%" height="15" fill="rgb(217,79,45)" fg:x="1191" fg:w="7"/><text x="94.9994%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="94.7494%" y="421" width="0.5569%" height="15" fill="rgb(239,98,13)" fg:x="1191" fg:w="7"/><text x="94.9994%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="95.2267%" y="405" width="0.0796%" height="15" fill="rgb(221,115,4)" fg:x="1197" fg:w="1"/><text x="95.4767%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="95.2267%" y="389" width="0.0796%" height="15" fill="rgb(215,85,0)" fg:x="1197" fg:w="1"/><text x="95.4767%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.5449%" y="421" width="0.0796%" height="15" fill="rgb(230,62,15)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.5449%" y="405" width="0.0796%" height="15" fill="rgb(247,162,2)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.5449%" y="389" width="0.0796%" height="15" fill="rgb(212,112,32)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5449%" y="373" width="0.0796%" height="15" fill="rgb(216,137,9)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.6245%" y="405" width="0.0796%" height="15" fill="rgb(250,149,33)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.6245%" y="389" width="0.0796%" height="15" fill="rgb(246,124,31)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.6245%" y="373" width="0.0796%" height="15" fill="rgb(216,210,22)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.6245%" y="357" width="0.0796%" height="15" fill="rgb(228,128,36)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.6245%" y="341" width="0.0796%" height="15" fill="rgb(231,41,0)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6245%" y="325" width="0.0796%" height="15" fill="rgb(232,61,26)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.5449%" y="437" width="0.2387%" height="15" fill="rgb(217,60,9)" fg:x="1201" fg:w="3"/><text x="95.7949%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.6245%" y="421" width="0.1591%" height="15" fill="rgb(233,41,35)" fg:x="1202" fg:w="2"/><text x="95.8745%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.7041%" y="405" width="0.0796%" height="15" fill="rgb(253,139,43)" fg:x="1203" fg:w="1"/><text x="95.9541%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.7041%" y="389" width="0.0796%" height="15" fill="rgb(245,100,51)" fg:x="1203" fg:w="1"/><text x="95.9541%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="95.3858%" y="469" width="0.4773%" height="15" fill="rgb(250,208,18)" fg:x="1199" fg:w="6"/><text x="95.6358%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.4654%" y="453" width="0.3978%" height="15" fill="rgb(245,33,2)" fg:x="1200" fg:w="5"/><text x="95.7154%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7836%" y="437" width="0.0796%" height="15" fill="rgb(244,171,31)" fg:x="1204" fg:w="1"/><text x="96.0336%" y="447.50"></text></g><g><title>engine::session::state::State::close (51 samples, 4.06%)</title><rect x="91.8854%" y="645" width="4.0573%" height="15" fill="rgb(229,1,43)" fg:x="1155" fg:w="51"/><text x="92.1354%" y="655.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (51 samples, 4.06%)</title><rect x="91.8854%" y="629" width="4.0573%" height="15" fill="rgb(223,153,28)" fg:x="1155" fg:w="51"/><text x="92.1354%" y="639.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (49 samples, 3.90%)</title><rect x="92.0446%" y="613" width="3.8982%" height="15" fill="rgb(241,4,46)" fg:x="1157" fg:w="49"/><text x="92.2946%" y="623.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (49 samples, 3.90%)</title><rect x="92.0446%" y="597" width="3.8982%" height="15" fill="rgb(230,81,11)" fg:x="1157" fg:w="49"/><text x="92.2946%" y="607.50">engi..</text></g><g><title>kernel::model::any_entity_changes (33 samples, 2.63%)</title><rect x="93.3174%" y="581" width="2.6253%" height="15" fill="rgb(253,204,39)" fg:x="1173" fg:w="33"/><text x="93.5674%" y="591.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="95.3063%" y="565" width="0.6364%" height="15" fill="rgb(250,96,8)" fg:x="1198" fg:w="8"/><text x="95.5563%" y="575.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="95.3063%" y="549" width="0.6364%" height="15" fill="rgb(219,89,54)" fg:x="1198" fg:w="8"/><text x="95.5563%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="95.3063%" y="533" width="0.6364%" height="15" fill="rgb(235,136,39)" fg:x="1198" fg:w="8"/><text x="95.5563%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="95.3063%" y="517" width="0.6364%" height="15" fill="rgb(230,155,37)" fg:x="1198" fg:w="8"/><text x="95.5563%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="95.3063%" y="501" width="0.6364%" height="15" fill="rgb(235,199,50)" fg:x="1198" fg:w="8"/><text x="95.5563%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="95.3063%" y="485" width="0.6364%" height="15" fill="rgb(227,81,32)" fg:x="1198" fg:w="8"/><text x="95.5563%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8632%" y="469" width="0.0796%" height="15" fill="rgb(225,6,28)" fg:x="1205" fg:w="1"/><text x="96.1132%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8632%" y="453" width="0.0796%" height="15" fill="rgb(207,211,17)" fg:x="1205" fg:w="1"/><text x="96.1132%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8632%" y="437" width="0.0796%" height="15" fill="rgb(228,31,49)" fg:x="1205" fg:w="1"/><text x="96.1132%" y="447.50"></text></g><g><title>engine::session::Session::close (52 samples, 4.14%)</title><rect x="91.8854%" y="661" width="4.1368%" height="15" fill="rgb(230,185,3)" fg:x="1155" fg:w="52"/><text x="92.1354%" y="671.50">engin..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="95.9427%" y="645" width="0.0796%" height="15" fill="rgb(206,167,15)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::deliver (1 samples, 0.08%)</title><rect x="95.9427%" y="629" width="0.0796%" height="15" fill="rgb(234,2,36)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0223%" y="597" width="0.0796%" height="15" fill="rgb(239,160,29)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="96.2609%" y="533" width="0.0796%" height="15" fill="rgb(236,117,2)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="96.3405%" y="453" width="0.0796%" height="15" fill="rgb(215,117,37)" fg:x="1211" fg:w="1"/><text x="96.5905%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="96.3405%" y="437" width="0.0796%" height="15" fill="rgb(244,48,36)" fg:x="1211" fg:w="1"/><text x="96.5905%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.3405%" y="421" width="0.0796%" height="15" fill="rgb(223,101,37)" fg:x="1211" fg:w="1"/><text x="96.5905%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="96.3405%" y="405" width="0.0796%" height="15" fill="rgb(205,200,1)" fg:x="1211" fg:w="1"/><text x="96.5905%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.3405%" y="389" width="0.0796%" height="15" fill="rgb(209,193,20)" fg:x="1211" fg:w="1"/><text x="96.5905%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4200%" y="389" width="0.0796%" height="15" fill="rgb(214,63,13)" fg:x="1212" fg:w="1"/><text x="96.6700%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.4996%" y="357" width="0.0796%" height="15" fill="rgb(253,113,46)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.6587%" y="325" width="0.0796%" height="15" fill="rgb(237,103,34)" fg:x="1215" fg:w="1"/><text x="96.9087%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="96.6587%" y="309" width="0.0796%" height="15" fill="rgb(223,38,25)" fg:x="1215" fg:w="1"/><text x="96.9087%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="96.6587%" y="293" width="0.0796%" height="15" fill="rgb(251,32,32)" fg:x="1215" fg:w="1"/><text x="96.9087%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7383%" y="309" width="0.0796%" height="15" fill="rgb(228,65,22)" fg:x="1216" fg:w="1"/><text x="96.9883%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.7383%" y="293" width="0.0796%" height="15" fill="rgb(205,11,46)" fg:x="1216" fg:w="1"/><text x="96.9883%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7383%" y="277" width="0.0796%" height="15" fill="rgb(220,35,2)" fg:x="1216" fg:w="1"/><text x="96.9883%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.7383%" y="261" width="0.0796%" height="15" fill="rgb(217,151,17)" fg:x="1216" fg:w="1"/><text x="96.9883%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7383%" y="245" width="0.0796%" height="15" fill="rgb(243,227,35)" fg:x="1216" fg:w="1"/><text x="96.9883%" y="255.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="96.4200%" y="437" width="0.4773%" height="15" fill="rgb(214,0,34)" fg:x="1212" fg:w="6"/><text x="96.6700%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="96.4200%" y="421" width="0.4773%" height="15" fill="rgb(209,42,37)" fg:x="1212" fg:w="6"/><text x="96.6700%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="96.4200%" y="405" width="0.4773%" height="15" fill="rgb(251,176,30)" fg:x="1212" fg:w="6"/><text x="96.6700%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="96.4996%" y="389" width="0.3978%" height="15" fill="rgb(223,64,40)" fg:x="1213" fg:w="5"/><text x="96.7496%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="96.4996%" y="373" width="0.3978%" height="15" fill="rgb(227,180,23)" fg:x="1213" fg:w="5"/><text x="96.7496%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="96.5792%" y="357" width="0.3182%" height="15" fill="rgb(220,137,31)" fg:x="1214" fg:w="4"/><text x="96.8292%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.6587%" y="341" width="0.2387%" height="15" fill="rgb(245,124,25)" fg:x="1215" fg:w="3"/><text x="96.9087%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.7383%" y="325" width="0.1591%" height="15" fill="rgb(217,157,5)" fg:x="1216" fg:w="2"/><text x="96.9883%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.8178%" y="309" width="0.0796%" height="15" fill="rgb(225,59,2)" fg:x="1217" fg:w="1"/><text x="97.0678%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8178%" y="293" width="0.0796%" height="15" fill="rgb(220,182,9)" fg:x="1217" fg:w="1"/><text x="97.0678%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.8178%" y="277" width="0.0796%" height="15" fill="rgb(249,54,24)" fg:x="1217" fg:w="1"/><text x="97.0678%" y="287.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="96.8178%" y="261" width="0.0796%" height="15" fill="rgb(216,89,17)" fg:x="1217" fg:w="1"/><text x="97.0678%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="96.4200%" y="453" width="0.5569%" height="15" fill="rgb(245,20,45)" fg:x="1212" fg:w="7"/><text x="96.6700%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8974%" y="437" width="0.0796%" height="15" fill="rgb(230,83,14)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8974%" y="421" width="0.0796%" height="15" fill="rgb(246,109,11)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.8974%" y="405" width="0.0796%" height="15" fill="rgb(235,85,23)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8974%" y="389" width="0.0796%" height="15" fill="rgb(215,101,36)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.8974%" y="373" width="0.0796%" height="15" fill="rgb(228,140,31)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8974%" y="357" width="0.0796%" height="15" fill="rgb(234,162,37)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8974%" y="341" width="0.0796%" height="15" fill="rgb(221,0,24)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.8974%" y="325" width="0.0796%" height="15" fill="rgb(230,161,41)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.8974%" y="309" width="0.0796%" height="15" fill="rgb(224,46,24)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.8974%" y="293" width="0.0796%" height="15" fill="rgb(205,59,32)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8974%" y="277" width="0.0796%" height="15" fill="rgb(239,31,20)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8974%" y="261" width="0.0796%" height="15" fill="rgb(233,149,44)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.8974%" y="245" width="0.0796%" height="15" fill="rgb(243,47,26)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.8974%" y="229" width="0.0796%" height="15" fill="rgb(233,107,5)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (10 samples, 0.80%)</title><rect x="96.3405%" y="501" width="0.7955%" height="15" fill="rgb(248,140,33)" fg:x="1211" fg:w="10"/><text x="96.5905%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.80%)</title><rect x="96.3405%" y="485" width="0.7955%" height="15" fill="rgb(228,178,19)" fg:x="1211" fg:w="10"/><text x="96.5905%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.80%)</title><rect x="96.3405%" y="469" width="0.7955%" height="15" fill="rgb(224,39,49)" fg:x="1211" fg:w="10"/><text x="96.5905%" y="479.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="96.9769%" y="453" width="0.1591%" height="15" fill="rgb(246,56,47)" fg:x="1219" fg:w="2"/><text x="97.2269%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0565%" y="437" width="0.0796%" height="15" fill="rgb(220,73,27)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.0565%" y="421" width="0.0796%" height="15" fill="rgb(239,112,21)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.0565%" y="405" width="0.0796%" height="15" fill="rgb(253,14,51)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="415.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (12 samples, 0.95%)</title><rect x="96.2609%" y="549" width="0.9547%" height="15" fill="rgb(215,58,12)" fg:x="1210" fg:w="12"/><text x="96.5109%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.88%)</title><rect x="96.3405%" y="533" width="0.8751%" height="15" fill="rgb(207,181,19)" fg:x="1211" fg:w="11"/><text x="96.5905%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="96.3405%" y="517" width="0.8751%" height="15" fill="rgb(211,214,34)" fg:x="1211" fg:w="11"/><text x="96.5905%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1360%" y="501" width="0.0796%" height="15" fill="rgb(243,124,39)" fg:x="1221" fg:w="1"/><text x="97.3860%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1360%" y="485" width="0.0796%" height="15" fill="rgb(248,135,21)" fg:x="1221" fg:w="1"/><text x="97.3860%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1360%" y="469" width="0.0796%" height="15" fill="rgb(245,218,3)" fg:x="1221" fg:w="1"/><text x="97.3860%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1360%" y="453" width="0.0796%" height="15" fill="rgb(225,144,22)" fg:x="1221" fg:w="1"/><text x="97.3860%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="97.1360%" y="437" width="0.0796%" height="15" fill="rgb(250,90,15)" fg:x="1221" fg:w="1"/><text x="97.3860%" y="447.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (14 samples, 1.11%)</title><rect x="96.1814%" y="565" width="1.1138%" height="15" fill="rgb(224,64,29)" fg:x="1209" fg:w="14"/><text x="96.4314%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="97.2156%" y="549" width="0.0796%" height="15" fill="rgb(217,50,47)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="97.2156%" y="533" width="0.0796%" height="15" fill="rgb(231,159,47)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="97.2156%" y="517" width="0.0796%" height="15" fill="rgb(213,89,29)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="97.2156%" y="501" width="0.0796%" height="15" fill="rgb(243,90,23)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2156%" y="485" width="0.0796%" height="15" fill="rgb(213,21,6)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2156%" y="469" width="0.0796%" height="15" fill="rgb(237,139,17)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.2156%" y="453" width="0.0796%" height="15" fill="rgb(250,147,17)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.2156%" y="437" width="0.0796%" height="15" fill="rgb(212,208,42)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.2156%" y="421" width="0.0796%" height="15" fill="rgb(215,229,40)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2156%" y="405" width="0.0796%" height="15" fill="rgb(206,204,1)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2156%" y="389" width="0.0796%" height="15" fill="rgb(230,62,32)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.2156%" y="373" width="0.0796%" height="15" fill="rgb(223,22,42)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.2156%" y="357" width="0.0796%" height="15" fill="rgb(244,6,23)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.2156%" y="341" width="0.0796%" height="15" fill="rgb(240,221,42)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.2156%" y="325" width="0.0796%" height="15" fill="rgb(222,74,7)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2156%" y="309" width="0.0796%" height="15" fill="rgb(227,191,38)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (20 samples, 1.59%)</title><rect x="96.0223%" y="629" width="1.5911%" height="15" fill="rgb(227,89,34)" fg:x="1207" fg:w="20"/><text x="96.2723%" y="639.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (20 samples, 1.59%)</title><rect x="96.0223%" y="613" width="1.5911%" height="15" fill="rgb(215,153,25)" fg:x="1207" fg:w="20"/><text x="96.2723%" y="623.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (19 samples, 1.51%)</title><rect x="96.1018%" y="597" width="1.5115%" height="15" fill="rgb(215,153,46)" fg:x="1208" fg:w="19"/><text x="96.3518%" y="607.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (19 samples, 1.51%)</title><rect x="96.1018%" y="581" width="1.5115%" height="15" fill="rgb(242,38,52)" fg:x="1208" fg:w="19"/><text x="96.3518%" y="591.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="97.2951%" y="565" width="0.3182%" height="15" fill="rgb(218,112,4)" fg:x="1223" fg:w="4"/><text x="97.5451%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="97.2951%" y="549" width="0.3182%" height="15" fill="rgb(231,210,31)" fg:x="1223" fg:w="4"/><text x="97.5451%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="97.2951%" y="533" width="0.3182%" height="15" fill="rgb(245,223,36)" fg:x="1223" fg:w="4"/><text x="97.5451%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="97.3747%" y="517" width="0.2387%" height="15" fill="rgb(246,41,2)" fg:x="1224" fg:w="3"/><text x="97.6247%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="97.3747%" y="501" width="0.2387%" height="15" fill="rgb(227,51,31)" fg:x="1224" fg:w="3"/><text x="97.6247%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="97.3747%" y="485" width="0.2387%" height="15" fill="rgb(222,95,26)" fg:x="1224" fg:w="3"/><text x="97.6247%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="97.3747%" y="469" width="0.2387%" height="15" fill="rgb(224,190,1)" fg:x="1224" fg:w="3"/><text x="97.6247%" y="479.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (3 samples, 0.24%)</title><rect x="97.3747%" y="453" width="0.2387%" height="15" fill="rgb(209,90,42)" fg:x="1224" fg:w="3"/><text x="97.6247%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="97.4543%" y="437" width="0.1591%" height="15" fill="rgb(232,225,50)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="447.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="97.4543%" y="421" width="0.1591%" height="15" fill="rgb(239,89,47)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="431.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.4543%" y="405" width="0.1591%" height="15" fill="rgb(230,212,50)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.4543%" y="389" width="0.1591%" height="15" fill="rgb(252,1,27)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.4543%" y="373" width="0.1591%" height="15" fill="rgb(237,179,41)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="97.4543%" y="357" width="0.1591%" height="15" fill="rgb(214,151,37)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="97.4543%" y="341" width="0.1591%" height="15" fill="rgb(211,74,11)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="97.4543%" y="325" width="0.1591%" height="15" fill="rgb(242,21,21)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="97.4543%" y="309" width="0.1591%" height="15" fill="rgb(226,106,43)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="97.4543%" y="293" width="0.1591%" height="15" fill="rgb(229,162,39)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="97.4543%" y="277" width="0.1591%" height="15" fill="rgb(228,159,25)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="97.4543%" y="261" width="0.1591%" height="15" fill="rgb(237,32,23)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="97.4543%" y="245" width="0.1591%" height="15" fill="rgb(212,35,32)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="97.4543%" y="229" width="0.1591%" height="15" fill="rgb(215,199,1)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.4543%" y="213" width="0.1591%" height="15" fill="rgb(215,67,13)" fg:x="1225" fg:w="2"/><text x="97.7043%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6134%" y="581" width="0.0796%" height="15" fill="rgb(216,20,47)" fg:x="1227" fg:w="1"/><text x="97.8634%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.6929%" y="549" width="0.0796%" height="15" fill="rgb(249,183,48)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.6929%" y="533" width="0.0796%" height="15" fill="rgb(208,86,37)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.6929%" y="517" width="0.0796%" height="15" fill="rgb(251,192,7)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6929%" y="501" width="0.0796%" height="15" fill="rgb(234,196,3)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6929%" y="485" width="0.0796%" height="15" fill="rgb(229,150,39)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6929%" y="469" width="0.0796%" height="15" fill="rgb(226,19,29)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6929%" y="453" width="0.0796%" height="15" fill="rgb(226,222,2)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6929%" y="437" width="0.0796%" height="15" fill="rgb(235,85,29)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="97.6929%" y="581" width="0.1591%" height="15" fill="rgb(237,194,43)" fg:x="1228" fg:w="2"/><text x="97.9429%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="97.6929%" y="565" width="0.1591%" height="15" fill="rgb(211,4,42)" fg:x="1228" fg:w="2"/><text x="97.9429%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.7725%" y="549" width="0.0796%" height="15" fill="rgb(221,80,37)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.7725%" y="533" width="0.0796%" height="15" fill="rgb(222,47,31)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.7725%" y="517" width="0.0796%" height="15" fill="rgb(249,82,52)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7725%" y="501" width="0.0796%" height="15" fill="rgb(218,203,2)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7725%" y="485" width="0.0796%" height="15" fill="rgb(210,175,14)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7725%" y="469" width="0.0796%" height="15" fill="rgb(216,210,12)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.7725%" y="453" width="0.0796%" height="15" fill="rgb(229,120,18)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.7725%" y="437" width="0.0796%" height="15" fill="rgb(231,174,12)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.7725%" y="421" width="0.0796%" height="15" fill="rgb(214,101,53)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.7725%" y="405" width="0.0796%" height="15" fill="rgb(246,89,43)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.7725%" y="389" width="0.0796%" height="15" fill="rgb(222,9,51)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.7725%" y="373" width="0.0796%" height="15" fill="rgb(252,221,9)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="97.7725%" y="357" width="0.0796%" height="15" fill="rgb(248,28,15)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="97.7725%" y="341" width="0.0796%" height="15" fill="rgb(213,54,52)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.8520%" y="485" width="0.0796%" height="15" fill="rgb(240,3,45)" fg:x="1230" fg:w="1"/><text x="98.1020%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8520%" y="469" width="0.0796%" height="15" fill="rgb(239,138,24)" fg:x="1230" fg:w="1"/><text x="98.1020%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9316%" y="485" width="0.0796%" height="15" fill="rgb(233,45,54)" fg:x="1231" fg:w="1"/><text x="98.1816%" y="495.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.8520%" y="565" width="0.2387%" height="15" fill="rgb(220,131,2)" fg:x="1230" fg:w="3"/><text x="98.1020%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.8520%" y="549" width="0.2387%" height="15" fill="rgb(240,154,36)" fg:x="1230" fg:w="3"/><text x="98.1020%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.8520%" y="533" width="0.2387%" height="15" fill="rgb(251,221,1)" fg:x="1230" fg:w="3"/><text x="98.1020%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.8520%" y="517" width="0.2387%" height="15" fill="rgb(225,217,1)" fg:x="1230" fg:w="3"/><text x="98.1020%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.8520%" y="501" width="0.2387%" height="15" fill="rgb(241,105,49)" fg:x="1230" fg:w="3"/><text x="98.1020%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.0111%" y="485" width="0.0796%" height="15" fill="rgb(215,44,32)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0111%" y="469" width="0.0796%" height="15" fill="rgb(213,222,14)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.0111%" y="453" width="0.0796%" height="15" fill="rgb(207,99,52)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0111%" y="437" width="0.0796%" height="15" fill="rgb(214,208,52)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.0111%" y="421" width="0.0796%" height="15" fill="rgb(244,169,0)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0111%" y="405" width="0.0796%" height="15" fill="rgb(216,193,37)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.0111%" y="389" width="0.0796%" height="15" fill="rgb(212,158,10)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0111%" y="373" width="0.0796%" height="15" fill="rgb(213,110,20)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.0111%" y="357" width="0.0796%" height="15" fill="rgb(226,5,42)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="98.1702%" y="533" width="0.0796%" height="15" fill="rgb(211,93,8)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.2498%" y="533" width="0.0796%" height="15" fill="rgb(240,208,12)" fg:x="1235" fg:w="1"/><text x="98.4998%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3294%" y="389" width="0.0796%" height="15" fill="rgb(233,127,50)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3294%" y="373" width="0.0796%" height="15" fill="rgb(227,199,53)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.3294%" y="453" width="0.1591%" height="15" fill="rgb(235,199,10)" fg:x="1236" fg:w="2"/><text x="98.5794%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3294%" y="437" width="0.1591%" height="15" fill="rgb(228,148,35)" fg:x="1236" fg:w="2"/><text x="98.5794%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.3294%" y="421" width="0.1591%" height="15" fill="rgb(217,87,19)" fg:x="1236" fg:w="2"/><text x="98.5794%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3294%" y="405" width="0.1591%" height="15" fill="rgb(239,9,32)" fg:x="1236" fg:w="2"/><text x="98.5794%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.4089%" y="389" width="0.0796%" height="15" fill="rgb(229,101,29)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4089%" y="373" width="0.0796%" height="15" fill="rgb(208,143,26)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4089%" y="357" width="0.0796%" height="15" fill="rgb(214,10,2)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.4089%" y="341" width="0.0796%" height="15" fill="rgb(254,203,30)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.3294%" y="485" width="0.2387%" height="15" fill="rgb(242,45,3)" fg:x="1236" fg:w="3"/><text x="98.5794%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.3294%" y="469" width="0.2387%" height="15" fill="rgb(209,146,51)" fg:x="1236" fg:w="3"/><text x="98.5794%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.4885%" y="453" width="0.0796%" height="15" fill="rgb(222,80,5)" fg:x="1238" fg:w="1"/><text x="98.7385%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4885%" y="437" width="0.0796%" height="15" fill="rgb(252,80,35)" fg:x="1238" fg:w="1"/><text x="98.7385%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4885%" y="421" width="0.0796%" height="15" fill="rgb(246,125,28)" fg:x="1238" fg:w="1"/><text x="98.7385%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4885%" y="405" width="0.0796%" height="15" fill="rgb(224,143,51)" fg:x="1238" fg:w="1"/><text x="98.7385%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.4885%" y="389" width="0.0796%" height="15" fill="rgb(205,24,17)" fg:x="1238" fg:w="1"/><text x="98.7385%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="98.4885%" y="373" width="0.0796%" height="15" fill="rgb(253,128,30)" fg:x="1238" fg:w="1"/><text x="98.7385%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.5680%" y="485" width="0.0796%" height="15" fill="rgb(214,153,25)" fg:x="1239" fg:w="1"/><text x="98.8180%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.5680%" y="469" width="0.0796%" height="15" fill="rgb(214,4,28)" fg:x="1239" fg:w="1"/><text x="98.8180%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.5680%" y="453" width="0.0796%" height="15" fill="rgb(235,179,52)" fg:x="1239" fg:w="1"/><text x="98.8180%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.5680%" y="437" width="0.0796%" height="15" fill="rgb(233,27,42)" fg:x="1239" fg:w="1"/><text x="98.8180%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="98.6476%" y="453" width="0.1591%" height="15" fill="rgb(238,35,25)" fg:x="1240" fg:w="2"/><text x="98.8976%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.8067%" y="437" width="0.0796%" height="15" fill="rgb(227,44,31)" fg:x="1242" fg:w="1"/><text x="99.0567%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="98.8067%" y="421" width="0.0796%" height="15" fill="rgb(232,201,13)" fg:x="1242" fg:w="1"/><text x="99.0567%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8067%" y="405" width="0.0796%" height="15" fill="rgb(224,172,52)" fg:x="1242" fg:w="1"/><text x="99.0567%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8067%" y="389" width="0.0796%" height="15" fill="rgb(214,27,26)" fg:x="1242" fg:w="1"/><text x="99.0567%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8067%" y="373" width="0.0796%" height="15" fill="rgb(210,185,52)" fg:x="1242" fg:w="1"/><text x="99.0567%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8862%" y="357" width="0.0796%" height="15" fill="rgb(249,59,32)" fg:x="1243" fg:w="1"/><text x="99.1362%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.8862%" y="341" width="0.0796%" height="15" fill="rgb(242,209,18)" fg:x="1243" fg:w="1"/><text x="99.1362%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="98.3294%" y="533" width="0.7160%" height="15" fill="rgb(229,0,18)" fg:x="1236" fg:w="9"/><text x="98.5794%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="98.3294%" y="517" width="0.7160%" height="15" fill="rgb(217,138,29)" fg:x="1236" fg:w="9"/><text x="98.5794%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="98.3294%" y="501" width="0.7160%" height="15" fill="rgb(215,72,42)" fg:x="1236" fg:w="9"/><text x="98.5794%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.6476%" y="485" width="0.3978%" height="15" fill="rgb(254,115,11)" fg:x="1240" fg:w="5"/><text x="98.8976%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="98.6476%" y="469" width="0.3978%" height="15" fill="rgb(205,133,39)" fg:x="1240" fg:w="5"/><text x="98.8976%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="98.8067%" y="453" width="0.2387%" height="15" fill="rgb(211,36,27)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.8862%" y="437" width="0.1591%" height="15" fill="rgb(221,48,10)" fg:x="1243" fg:w="2"/><text x="99.1362%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8862%" y="421" width="0.1591%" height="15" fill="rgb(230,172,50)" fg:x="1243" fg:w="2"/><text x="99.1362%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.8862%" y="405" width="0.1591%" height="15" fill="rgb(249,72,18)" fg:x="1243" fg:w="2"/><text x="99.1362%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.8862%" y="389" width="0.1591%" height="15" fill="rgb(237,58,48)" fg:x="1243" fg:w="2"/><text x="99.1362%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8862%" y="373" width="0.1591%" height="15" fill="rgb(242,123,3)" fg:x="1243" fg:w="2"/><text x="99.1362%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.9658%" y="357" width="0.0796%" height="15" fill="rgb(232,111,32)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9658%" y="341" width="0.0796%" height="15" fill="rgb(229,108,3)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9658%" y="325" width="0.0796%" height="15" fill="rgb(222,158,10)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.9658%" y="309" width="0.0796%" height="15" fill="rgb(205,34,49)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9658%" y="293" width="0.0796%" height="15" fill="rgb(232,21,14)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9658%" y="277" width="0.0796%" height="15" fill="rgb(229,127,44)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.9658%" y="261" width="0.0796%" height="15" fill="rgb(232,171,4)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="271.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.9658%" y="245" width="0.0796%" height="15" fill="rgb(250,92,16)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (16 samples, 1.27%)</title><rect x="97.8520%" y="581" width="1.2729%" height="15" fill="rgb(230,103,38)" fg:x="1230" fg:w="16"/><text x="98.1020%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.03%)</title><rect x="98.0907%" y="565" width="1.0342%" height="15" fill="rgb(253,167,9)" fg:x="1233" fg:w="13"/><text x="98.3407%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.03%)</title><rect x="98.0907%" y="549" width="1.0342%" height="15" fill="rgb(222,118,11)" fg:x="1233" fg:w="13"/><text x="98.3407%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0453%" y="533" width="0.0796%" height="15" fill="rgb(240,202,0)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0453%" y="517" width="0.0796%" height="15" fill="rgb(236,124,4)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2045%" y="485" width="0.0796%" height="15" fill="rgb(244,128,18)" fg:x="1247" fg:w="1"/><text x="99.4545%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2045%" y="469" width="0.0796%" height="15" fill="rgb(231,206,5)" fg:x="1247" fg:w="1"/><text x="99.4545%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.2045%" y="533" width="0.1591%" height="15" fill="rgb(237,111,8)" fg:x="1247" fg:w="2"/><text x="99.4545%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.2045%" y="517" width="0.1591%" height="15" fill="rgb(225,127,3)" fg:x="1247" fg:w="2"/><text x="99.4545%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.2045%" y="501" width="0.1591%" height="15" fill="rgb(222,85,48)" fg:x="1247" fg:w="2"/><text x="99.4545%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2840%" y="485" width="0.0796%" height="15" fill="rgb(221,108,37)" fg:x="1248" fg:w="1"/><text x="99.5340%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="99.1249%" y="581" width="0.3182%" height="15" fill="rgb(226,169,36)" fg:x="1246" fg:w="4"/><text x="99.3749%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="99.2045%" y="565" width="0.2387%" height="15" fill="rgb(237,76,12)" fg:x="1247" fg:w="3"/><text x="99.4545%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.2045%" y="549" width="0.2387%" height="15" fill="rgb(210,227,32)" fg:x="1247" fg:w="3"/><text x="99.4545%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3636%" y="533" width="0.0796%" height="15" fill="rgb(214,117,20)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3636%" y="517" width="0.0796%" height="15" fill="rgb(234,119,41)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3636%" y="501" width="0.0796%" height="15" fill="rgb(230,130,47)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3636%" y="485" width="0.0796%" height="15" fill="rgb(215,21,41)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.3636%" y="469" width="0.0796%" height="15" fill="rgb(226,26,53)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3636%" y="453" width="0.0796%" height="15" fill="rgb(221,92,23)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3636%" y="437" width="0.0796%" height="15" fill="rgb(213,156,21)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3636%" y="421" width="0.0796%" height="15" fill="rgb(254,166,29)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3636%" y="405" width="0.0796%" height="15" fill="rgb(213,71,1)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3636%" y="389" width="0.0796%" height="15" fill="rgb(245,8,13)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (26 samples, 2.07%)</title><rect x="97.6134%" y="613" width="2.0684%" height="15" fill="rgb(213,32,32)" fg:x="1227" fg:w="26"/><text x="97.8634%" y="623.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.07%)</title><rect x="97.6134%" y="597" width="2.0684%" height="15" fill="rgb(251,86,50)" fg:x="1227" fg:w="26"/><text x="97.8634%" y="607.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="99.4431%" y="581" width="0.2387%" height="15" fill="rgb(252,92,41)" fg:x="1250" fg:w="3"/><text x="99.6931%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="99.4431%" y="565" width="0.2387%" height="15" fill="rgb(234,70,35)" fg:x="1250" fg:w="3"/><text x="99.6931%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.6022%" y="549" width="0.0796%" height="15" fill="rgb(210,157,19)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.6022%" y="533" width="0.0796%" height="15" fill="rgb(206,20,45)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="99.6818%" y="613" width="0.0796%" height="15" fill="rgb(207,34,7)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6818%" y="597" width="0.0796%" height="15" fill="rgb(253,151,14)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6818%" y="581" width="0.0796%" height="15" fill="rgb(252,1,18)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.6818%" y="565" width="0.0796%" height="15" fill="rgb(214,77,52)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.6818%" y="549" width="0.0796%" height="15" fill="rgb(254,106,35)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.6818%" y="533" width="0.0796%" height="15" fill="rgb(212,67,40)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6818%" y="517" width="0.0796%" height="15" fill="rgb(228,76,23)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6818%" y="501" width="0.0796%" height="15" fill="rgb(250,198,5)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.6818%" y="485" width="0.0796%" height="15" fill="rgb(209,20,25)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.6818%" y="469" width="0.0796%" height="15" fill="rgb(236,32,4)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.6818%" y="453" width="0.0796%" height="15" fill="rgb(215,31,6)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.6818%" y="437" width="0.0796%" height="15" fill="rgb(207,186,49)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6818%" y="421" width="0.0796%" height="15" fill="rgb(211,212,49)" fg:x="1253" fg:w="1"/><text x="99.9318%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (28 samples, 2.23%)</title><rect x="97.6134%" y="629" width="2.2275%" height="15" fill="rgb(229,51,41)" fg:x="1227" fg:w="28"/><text x="97.8634%" y="639.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.7613%" y="613" width="0.0796%" height="15" fill="rgb(205,225,36)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.7613%" y="597" width="0.0796%" height="15" fill="rgb(209,213,45)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="581" width="0.0796%" height="15" fill="rgb(219,35,49)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7613%" y="565" width="0.0796%" height="15" fill="rgb(215,205,22)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="549" width="0.0796%" height="15" fill="rgb(248,204,34)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="533" width="0.0796%" height="15" fill="rgb(219,223,31)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="517" width="0.0796%" height="15" fill="rgb(236,14,8)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7613%" y="501" width="0.0796%" height="15" fill="rgb(243,129,23)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="485" width="0.0796%" height="15" fill="rgb(205,204,5)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="469" width="0.0796%" height="15" fill="rgb(244,115,32)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="453" width="0.0796%" height="15" fill="rgb(229,123,14)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7613%" y="437" width="0.0796%" height="15" fill="rgb(250,85,1)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="421" width="0.0796%" height="15" fill="rgb(209,141,54)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="405" width="0.0796%" height="15" fill="rgb(244,107,39)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="389" width="0.0796%" height="15" fill="rgb(230,68,26)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7613%" y="373" width="0.0796%" height="15" fill="rgb(220,178,33)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="357" width="0.0796%" height="15" fill="rgb(220,77,53)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7613%" y="341" width="0.0796%" height="15" fill="rgb(224,108,19)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="351.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="99.7613%" y="325" width="0.0796%" height="15" fill="rgb(223,203,27)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="335.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="99.7613%" y="309" width="0.0796%" height="15" fill="rgb(211,32,46)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="319.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="99.7613%" y="293" width="0.0796%" height="15" fill="rgb(240,101,27)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="303.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="99.8409%" y="629" width="0.0796%" height="15" fill="rgb(217,210,11)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.8409%" y="613" width="0.0796%" height="15" fill="rgb(236,130,21)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.8409%" y="597" width="0.0796%" height="15" fill="rgb(250,136,8)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.8409%" y="581" width="0.0796%" height="15" fill="rgb(243,223,36)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="591.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.8409%" y="565" width="0.0796%" height="15" fill="rgb(246,184,8)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8409%" y="549" width="0.0796%" height="15" fill="rgb(222,158,36)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="559.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.8409%" y="533" width="0.0796%" height="15" fill="rgb(210,220,19)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8409%" y="517" width="0.0796%" height="15" fill="rgb(246,44,38)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.8409%" y="501" width="0.0796%" height="15" fill="rgb(246,186,14)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.8409%" y="485" width="0.0796%" height="15" fill="rgb(233,193,20)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="495.50"></text></g><g><title>all (1,257 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(215,60,5)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1023.50"></text></g><g><title>simple-81fabdd1 (1,257 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(207,128,10)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1007.50">simple-81fabdd1</text></g><g><title>_start (1,257 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(238,84,54)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="991.50">_start</text></g><g><title>__libc_start_main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(213,130,11)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="975.50">__libc_start_main</text></g><g><title>main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(235,62,9)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="959.50">main</text></g><g><title>std::rt::lang_start_internal (1,257 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(222,64,24)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,257 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(238,193,42)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,257 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(243,204,46)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,257 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(243,196,11)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,257 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(232,77,22)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,257 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(215,80,25)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,257 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(210,173,7)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,257 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(207,101,10)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,257 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(246,57,48)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,257 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(236,184,40)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="799.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,257 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(210,205,13)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(231,129,42)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="767.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,257 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(220,229,54)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="751.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,257 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(230,192,26)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="735.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (300 samples, 23.87%)</title><rect x="76.1337%" y="709" width="23.8663%" height="15" fill="rgb(253,18,30)" fg:x="957" fg:w="300"/><text x="76.3837%" y="719.50">&lt;criterion::routine::Function&lt;M,F,T&gt; a..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (300 samples, 23.87%)</title><rect x="76.1337%" y="693" width="23.8663%" height="15" fill="rgb(216,62,53)" fg:x="957" fg:w="300"/><text x="76.3837%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (300 samples, 23.87%)</title><rect x="76.1337%" y="677" width="23.8663%" height="15" fill="rgb(230,79,29)" fg:x="957" fg:w="300"/><text x="76.3837%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (50 samples, 3.98%)</title><rect x="96.0223%" y="661" width="3.9777%" height="15" fill="rgb(242,26,26)" fg:x="1207" fg:w="50"/><text x="96.2723%" y="671.50">engi..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (50 samples, 3.98%)</title><rect x="96.0223%" y="645" width="3.9777%" height="15" fill="rgb(227,125,21)" fg:x="1207" fg:w="50"/><text x="96.2723%" y="655.50">engi..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9204%" y="629" width="0.0796%" height="15" fill="rgb(229,93,26)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.9204%" y="613" width="0.0796%" height="15" fill="rgb(227,228,8)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="623.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9204%" y="597" width="0.0796%" height="15" fill="rgb(233,56,0)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="607.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.9204%" y="581" width="0.0796%" height="15" fill="rgb(225,185,17)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.9204%" y="565" width="0.0796%" height="15" fill="rgb(238,202,30)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.9204%" y="549" width="0.0796%" height="15" fill="rgb(236,60,13)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="559.50"></text></g></svg></svg>