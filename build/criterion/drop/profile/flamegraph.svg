<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1189.00"> </text><svg id="frames" x="10" width="1180" total_samples="1257"><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.0796%" y="693" width="0.1591%" height="15" fill="rgb(247,215,21)" fg:x="1" fg:w="2"/><text x="0.3296%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.2387%" y="693" width="0.0796%" height="15" fill="rgb(253,189,31)" fg:x="3" fg:w="1"/><text x="0.4887%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2387%" y="677" width="0.0796%" height="15" fill="rgb(241,54,22)" fg:x="3" fg:w="1"/><text x="0.4887%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.3978%" y="677" width="0.0796%" height="15" fill="rgb(211,87,4)" fg:x="5" fg:w="1"/><text x="0.6478%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3978%" y="661" width="0.0796%" height="15" fill="rgb(245,112,24)" fg:x="5" fg:w="1"/><text x="0.6478%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5569%" y="645" width="0.0796%" height="15" fill="rgb(235,190,41)" fg:x="7" fg:w="1"/><text x="0.8069%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="0.0000%" y="725" width="0.7160%" height="15" fill="rgb(214,89,8)" fg:x="0" fg:w="9"/><text x="0.2500%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="0.0000%" y="709" width="0.7160%" height="15" fill="rgb(249,155,35)" fg:x="0" fg:w="9"/><text x="0.2500%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="0.3182%" y="693" width="0.3978%" height="15" fill="rgb(249,88,26)" fg:x="4" fg:w="5"/><text x="0.5682%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="0.4773%" y="677" width="0.2387%" height="15" fill="rgb(232,56,8)" fg:x="6" fg:w="3"/><text x="0.7273%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="0.4773%" y="661" width="0.2387%" height="15" fill="rgb(240,95,3)" fg:x="6" fg:w="3"/><text x="0.7273%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.6364%" y="645" width="0.0796%" height="15" fill="rgb(222,44,28)" fg:x="8" fg:w="1"/><text x="0.8864%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6364%" y="629" width="0.0796%" height="15" fill="rgb(234,16,30)" fg:x="8" fg:w="1"/><text x="0.8864%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (12 samples, 0.95%)</title><rect x="0.0000%" y="789" width="0.9547%" height="15" fill="rgb(223,26,17)" fg:x="0" fg:w="12"/><text x="0.2500%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.95%)</title><rect x="0.0000%" y="773" width="0.9547%" height="15" fill="rgb(239,187,47)" fg:x="0" fg:w="12"/><text x="0.2500%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (12 samples, 0.95%)</title><rect x="0.0000%" y="757" width="0.9547%" height="15" fill="rgb(247,102,50)" fg:x="0" fg:w="12"/><text x="0.2500%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.95%)</title><rect x="0.0000%" y="741" width="0.9547%" height="15" fill="rgb(231,216,22)" fg:x="0" fg:w="12"/><text x="0.2500%" y="751.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.7160%" y="725" width="0.2387%" height="15" fill="rgb(216,201,26)" fg:x="9" fg:w="3"/><text x="0.9660%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::perform::StandardPerformer&gt;&gt; (1 samples, 0.08%)</title><rect x="0.9547%" y="789" width="0.0796%" height="15" fill="rgb(214,186,23)" fg:x="12" fg:w="1"/><text x="1.2047%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.11%)</title><rect x="0.0000%" y="805" width="1.1138%" height="15" fill="rgb(235,184,4)" fg:x="0" fg:w="14"/><text x="0.2500%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryEntityStorage&gt; (1 samples, 0.08%)</title><rect x="1.0342%" y="789" width="0.0796%" height="15" fill="rgb(244,46,17)" fg:x="13" fg:w="1"/><text x="1.2842%" y="799.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="1.1933%" y="725" width="0.0796%" height="15" fill="rgb(248,74,46)" fg:x="15" fg:w="1"/><text x="1.4433%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="1.1933%" y="709" width="0.0796%" height="15" fill="rgb(243,79,5)" fg:x="15" fg:w="1"/><text x="1.4433%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="1.1933%" y="693" width="0.0796%" height="15" fill="rgb(213,148,1)" fg:x="15" fg:w="1"/><text x="1.4433%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.1933%" y="677" width="0.0796%" height="15" fill="rgb(221,30,0)" fg:x="15" fg:w="1"/><text x="1.4433%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.1933%" y="661" width="0.0796%" height="15" fill="rgb(207,85,29)" fg:x="15" fg:w="1"/><text x="1.4433%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.1933%" y="645" width="0.0796%" height="15" fill="rgb(239,31,46)" fg:x="15" fg:w="1"/><text x="1.4433%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.1933%" y="629" width="0.0796%" height="15" fill="rgb(219,6,1)" fg:x="15" fg:w="1"/><text x="1.4433%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.1933%" y="613" width="0.0796%" height="15" fill="rgb(229,90,29)" fg:x="15" fg:w="1"/><text x="1.4433%" y="623.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="1.2729%" y="677" width="0.0796%" height="15" fill="rgb(242,201,42)" fg:x="16" fg:w="1"/><text x="1.5229%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.3524%" y="645" width="0.0796%" height="15" fill="rgb(243,80,54)" fg:x="17" fg:w="1"/><text x="1.6024%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.3524%" y="629" width="0.0796%" height="15" fill="rgb(223,166,15)" fg:x="17" fg:w="1"/><text x="1.6024%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.3524%" y="613" width="0.0796%" height="15" fill="rgb(238,78,27)" fg:x="17" fg:w="1"/><text x="1.6024%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.3524%" y="597" width="0.0796%" height="15" fill="rgb(235,28,43)" fg:x="17" fg:w="1"/><text x="1.6024%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.3524%" y="581" width="0.0796%" height="15" fill="rgb(240,210,28)" fg:x="17" fg:w="1"/><text x="1.6024%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.3524%" y="565" width="0.0796%" height="15" fill="rgb(253,6,46)" fg:x="17" fg:w="1"/><text x="1.6024%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="1.3524%" y="549" width="0.0796%" height="15" fill="rgb(250,159,47)" fg:x="17" fg:w="1"/><text x="1.6024%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="1.3524%" y="533" width="0.0796%" height="15" fill="rgb(216,139,2)" fg:x="17" fg:w="1"/><text x="1.6024%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="1.3524%" y="517" width="0.0796%" height="15" fill="rgb(221,124,44)" fg:x="17" fg:w="1"/><text x="1.6024%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.3524%" y="501" width="0.0796%" height="15" fill="rgb(205,37,22)" fg:x="17" fg:w="1"/><text x="1.6024%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.3524%" y="485" width="0.0796%" height="15" fill="rgb(250,55,8)" fg:x="17" fg:w="1"/><text x="1.6024%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="1.3524%" y="469" width="0.0796%" height="15" fill="rgb(215,83,48)" fg:x="17" fg:w="1"/><text x="1.6024%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="1.3524%" y="453" width="0.0796%" height="15" fill="rgb(253,2,32)" fg:x="17" fg:w="1"/><text x="1.6024%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="1.3524%" y="437" width="0.0796%" height="15" fill="rgb(236,67,28)" fg:x="17" fg:w="1"/><text x="1.6024%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="1.3524%" y="421" width="0.0796%" height="15" fill="rgb(252,55,15)" fg:x="17" fg:w="1"/><text x="1.6024%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.3524%" y="405" width="0.0796%" height="15" fill="rgb(243,173,17)" fg:x="17" fg:w="1"/><text x="1.6024%" y="415.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="1.2729%" y="693" width="0.2387%" height="15" fill="rgb(215,212,13)" fg:x="16" fg:w="3"/><text x="1.5229%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="1.3524%" y="677" width="0.1591%" height="15" fill="rgb(253,176,6)" fg:x="17" fg:w="2"/><text x="1.6024%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="1.3524%" y="661" width="0.1591%" height="15" fill="rgb(236,105,26)" fg:x="17" fg:w="2"/><text x="1.6024%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.4320%" y="645" width="0.0796%" height="15" fill="rgb(239,226,32)" fg:x="18" fg:w="1"/><text x="1.6820%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.4320%" y="629" width="0.0796%" height="15" fill="rgb(236,104,51)" fg:x="18" fg:w="1"/><text x="1.6820%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.4320%" y="613" width="0.0796%" height="15" fill="rgb(220,172,33)" fg:x="18" fg:w="1"/><text x="1.6820%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.4320%" y="597" width="0.0796%" height="15" fill="rgb(224,182,25)" fg:x="18" fg:w="1"/><text x="1.6820%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="1.4320%" y="581" width="0.0796%" height="15" fill="rgb(236,184,24)" fg:x="18" fg:w="1"/><text x="1.6820%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.4320%" y="565" width="0.0796%" height="15" fill="rgb(241,221,14)" fg:x="18" fg:w="1"/><text x="1.6820%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.4320%" y="549" width="0.0796%" height="15" fill="rgb(227,146,5)" fg:x="18" fg:w="1"/><text x="1.6820%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.4320%" y="533" width="0.0796%" height="15" fill="rgb(214,15,23)" fg:x="18" fg:w="1"/><text x="1.6820%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.4320%" y="517" width="0.0796%" height="15" fill="rgb(233,157,31)" fg:x="18" fg:w="1"/><text x="1.6820%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="1.2729%" y="725" width="0.3978%" height="15" fill="rgb(211,27,52)" fg:x="16" fg:w="5"/><text x="1.5229%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="1.2729%" y="709" width="0.3978%" height="15" fill="rgb(212,223,15)" fg:x="16" fg:w="5"/><text x="1.5229%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="1.5115%" y="693" width="0.1591%" height="15" fill="rgb(254,211,0)" fg:x="19" fg:w="2"/><text x="1.7615%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="1.5115%" y="677" width="0.1591%" height="15" fill="rgb(205,43,38)" fg:x="19" fg:w="2"/><text x="1.7615%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="1.5115%" y="661" width="0.1591%" height="15" fill="rgb(242,206,46)" fg:x="19" fg:w="2"/><text x="1.7615%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="1.5115%" y="645" width="0.1591%" height="15" fill="rgb(220,221,12)" fg:x="19" fg:w="2"/><text x="1.7615%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="1.5115%" y="629" width="0.1591%" height="15" fill="rgb(217,156,35)" fg:x="19" fg:w="2"/><text x="1.7615%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="1.5115%" y="613" width="0.1591%" height="15" fill="rgb(207,181,49)" fg:x="19" fg:w="2"/><text x="1.7615%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="1.5115%" y="597" width="0.1591%" height="15" fill="rgb(235,103,47)" fg:x="19" fg:w="2"/><text x="1.7615%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="1.5115%" y="581" width="0.1591%" height="15" fill="rgb(222,63,28)" fg:x="19" fg:w="2"/><text x="1.7615%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="1.5115%" y="565" width="0.1591%" height="15" fill="rgb(244,137,21)" fg:x="19" fg:w="2"/><text x="1.7615%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="1.6706%" y="597" width="0.0796%" height="15" fill="rgb(228,35,27)" fg:x="21" fg:w="1"/><text x="1.9206%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.6706%" y="581" width="0.0796%" height="15" fill="rgb(226,191,41)" fg:x="21" fg:w="1"/><text x="1.9206%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="1.6706%" y="565" width="0.0796%" height="15" fill="rgb(210,154,3)" fg:x="21" fg:w="1"/><text x="1.9206%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.6706%" y="549" width="0.0796%" height="15" fill="rgb(216,60,49)" fg:x="21" fg:w="1"/><text x="1.9206%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6706%" y="533" width="0.0796%" height="15" fill="rgb(226,17,20)" fg:x="21" fg:w="1"/><text x="1.9206%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6706%" y="517" width="0.0796%" height="15" fill="rgb(206,115,35)" fg:x="21" fg:w="1"/><text x="1.9206%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="1.7502%" y="597" width="0.0796%" height="15" fill="rgb(227,88,1)" fg:x="22" fg:w="1"/><text x="2.0002%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.7502%" y="581" width="0.0796%" height="15" fill="rgb(230,222,24)" fg:x="22" fg:w="1"/><text x="2.0002%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="1.7502%" y="565" width="0.0796%" height="15" fill="rgb(214,124,32)" fg:x="22" fg:w="1"/><text x="2.0002%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="1.7502%" y="549" width="0.0796%" height="15" fill="rgb(240,41,36)" fg:x="22" fg:w="1"/><text x="2.0002%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="1.7502%" y="533" width="0.0796%" height="15" fill="rgb(221,17,52)" fg:x="22" fg:w="1"/><text x="2.0002%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="1.7502%" y="517" width="0.0796%" height="15" fill="rgb(252,70,16)" fg:x="22" fg:w="1"/><text x="2.0002%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="1.6706%" y="645" width="0.2387%" height="15" fill="rgb(250,177,4)" fg:x="21" fg:w="3"/><text x="1.9206%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="1.6706%" y="629" width="0.2387%" height="15" fill="rgb(240,188,47)" fg:x="21" fg:w="3"/><text x="1.9206%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="1.6706%" y="613" width="0.2387%" height="15" fill="rgb(215,92,12)" fg:x="21" fg:w="3"/><text x="1.9206%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.8298%" y="597" width="0.0796%" height="15" fill="rgb(242,110,29)" fg:x="23" fg:w="1"/><text x="2.0798%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.8298%" y="581" width="0.0796%" height="15" fill="rgb(208,211,26)" fg:x="23" fg:w="1"/><text x="2.0798%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.8298%" y="565" width="0.0796%" height="15" fill="rgb(244,147,6)" fg:x="23" fg:w="1"/><text x="2.0798%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.8298%" y="549" width="0.0796%" height="15" fill="rgb(211,130,42)" fg:x="23" fg:w="1"/><text x="2.0798%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.8298%" y="533" width="0.0796%" height="15" fill="rgb(220,63,1)" fg:x="23" fg:w="1"/><text x="2.0798%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.8298%" y="517" width="0.0796%" height="15" fill="rgb(241,212,30)" fg:x="23" fg:w="1"/><text x="2.0798%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.8298%" y="501" width="0.0796%" height="15" fill="rgb(233,153,17)" fg:x="23" fg:w="1"/><text x="2.0798%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.8298%" y="485" width="0.0796%" height="15" fill="rgb(236,3,10)" fg:x="23" fg:w="1"/><text x="2.0798%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.8298%" y="469" width="0.0796%" height="15" fill="rgb(232,41,21)" fg:x="23" fg:w="1"/><text x="2.0798%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.8298%" y="453" width="0.0796%" height="15" fill="rgb(206,63,51)" fg:x="23" fg:w="1"/><text x="2.0798%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.8298%" y="437" width="0.0796%" height="15" fill="rgb(250,214,3)" fg:x="23" fg:w="1"/><text x="2.0798%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.8298%" y="421" width="0.0796%" height="15" fill="rgb(254,89,27)" fg:x="23" fg:w="1"/><text x="2.0798%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="1.6706%" y="709" width="0.3182%" height="15" fill="rgb(249,41,14)" fg:x="21" fg:w="4"/><text x="1.9206%" y="719.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="1.6706%" y="693" width="0.3182%" height="15" fill="rgb(221,196,51)" fg:x="21" fg:w="4"/><text x="1.9206%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="1.6706%" y="677" width="0.3182%" height="15" fill="rgb(214,116,26)" fg:x="21" fg:w="4"/><text x="1.9206%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="1.6706%" y="661" width="0.3182%" height="15" fill="rgb(236,67,7)" fg:x="21" fg:w="4"/><text x="1.9206%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.9093%" y="645" width="0.0796%" height="15" fill="rgb(253,179,32)" fg:x="24" fg:w="1"/><text x="2.1593%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.9093%" y="629" width="0.0796%" height="15" fill="rgb(218,33,15)" fg:x="24" fg:w="1"/><text x="2.1593%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.9093%" y="613" width="0.0796%" height="15" fill="rgb(217,202,41)" fg:x="24" fg:w="1"/><text x="2.1593%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.0684%" y="661" width="0.0796%" height="15" fill="rgb(234,133,5)" fg:x="26" fg:w="1"/><text x="2.3184%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.0684%" y="645" width="0.0796%" height="15" fill="rgb(240,47,40)" fg:x="26" fg:w="1"/><text x="2.3184%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="2.0684%" y="629" width="0.0796%" height="15" fill="rgb(234,166,26)" fg:x="26" fg:w="1"/><text x="2.3184%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="2.2275%" y="597" width="0.1591%" height="15" fill="rgb(244,125,51)" fg:x="28" fg:w="2"/><text x="2.4775%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="2.2275%" y="581" width="0.1591%" height="15" fill="rgb(229,171,11)" fg:x="28" fg:w="2"/><text x="2.4775%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="2.2275%" y="565" width="0.1591%" height="15" fill="rgb(224,38,45)" fg:x="28" fg:w="2"/><text x="2.4775%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (18 samples, 1.43%)</title><rect x="1.1138%" y="773" width="1.4320%" height="15" fill="rgb(237,27,7)" fg:x="14" fg:w="18"/><text x="1.3638%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.43%)</title><rect x="1.1138%" y="757" width="1.4320%" height="15" fill="rgb(216,52,7)" fg:x="14" fg:w="18"/><text x="1.3638%" y="767.50"></text></g><g><title>engine::internal::Entities::add_persisted (17 samples, 1.35%)</title><rect x="1.1933%" y="741" width="1.3524%" height="15" fill="rgb(243,11,11)" fg:x="15" fg:w="17"/><text x="1.4433%" y="751.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.88%)</title><rect x="1.6706%" y="725" width="0.8751%" height="15" fill="rgb(253,167,20)" fg:x="21" fg:w="11"/><text x="1.9206%" y="735.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="1.9889%" y="709" width="0.5569%" height="15" fill="rgb(215,207,5)" fg:x="25" fg:w="7"/><text x="2.2389%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="1.9889%" y="693" width="0.5569%" height="15" fill="rgb(252,127,31)" fg:x="25" fg:w="7"/><text x="2.2389%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="1.9889%" y="677" width="0.5569%" height="15" fill="rgb(209,106,27)" fg:x="25" fg:w="7"/><text x="2.2389%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="2.1480%" y="661" width="0.3978%" height="15" fill="rgb(214,220,18)" fg:x="27" fg:w="5"/><text x="2.3980%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="2.2275%" y="645" width="0.3182%" height="15" fill="rgb(237,89,12)" fg:x="28" fg:w="4"/><text x="2.4775%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="2.2275%" y="629" width="0.3182%" height="15" fill="rgb(209,167,36)" fg:x="28" fg:w="4"/><text x="2.4775%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="2.2275%" y="613" width="0.3182%" height="15" fill="rgb(243,45,22)" fg:x="28" fg:w="4"/><text x="2.4775%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.3866%" y="597" width="0.1591%" height="15" fill="rgb(239,2,46)" fg:x="30" fg:w="2"/><text x="2.6366%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.3866%" y="581" width="0.1591%" height="15" fill="rgb(241,101,0)" fg:x="30" fg:w="2"/><text x="2.6366%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.4662%" y="565" width="0.0796%" height="15" fill="rgb(244,34,31)" fg:x="31" fg:w="1"/><text x="2.7162%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.4662%" y="549" width="0.0796%" height="15" fill="rgb(248,23,22)" fg:x="31" fg:w="1"/><text x="2.7162%" y="559.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="2.5457%" y="773" width="0.0796%" height="15" fill="rgb(218,27,48)" fg:x="32" fg:w="1"/><text x="2.7957%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="2.5457%" y="757" width="0.0796%" height="15" fill="rgb(232,78,1)" fg:x="32" fg:w="1"/><text x="2.7957%" y="767.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="2.5457%" y="741" width="0.0796%" height="15" fill="rgb(233,169,12)" fg:x="32" fg:w="1"/><text x="2.7957%" y="751.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="2.7049%" y="725" width="0.1591%" height="15" fill="rgb(225,222,54)" fg:x="34" fg:w="2"/><text x="2.9549%" y="735.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="2.7844%" y="709" width="0.0796%" height="15" fill="rgb(245,126,29)" fg:x="35" fg:w="1"/><text x="3.0344%" y="719.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="2.7844%" y="693" width="0.0796%" height="15" fill="rgb(241,63,48)" fg:x="35" fg:w="1"/><text x="3.0344%" y="703.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (33 samples, 2.63%)</title><rect x="1.1138%" y="805" width="2.6253%" height="15" fill="rgb(235,126,38)" fg:x="14" fg:w="33"/><text x="1.3638%" y="815.50">&lt;e..</text></g><g><title>engine::session::Session::new (33 samples, 2.63%)</title><rect x="1.1138%" y="789" width="2.6253%" height="15" fill="rgb(232,96,49)" fg:x="14" fg:w="33"/><text x="1.3638%" y="799.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (14 samples, 1.11%)</title><rect x="2.6253%" y="773" width="1.1138%" height="15" fill="rgb(211,146,40)" fg:x="33" fg:w="14"/><text x="2.8753%" y="783.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (13 samples, 1.03%)</title><rect x="2.7049%" y="757" width="1.0342%" height="15" fill="rgb(247,93,44)" fg:x="34" fg:w="13"/><text x="2.9549%" y="767.50"></text></g><g><title>libloading::os::unix::Library::open (13 samples, 1.03%)</title><rect x="2.7049%" y="741" width="1.0342%" height="15" fill="rgb(251,41,49)" fg:x="34" fg:w="13"/><text x="2.9549%" y="751.50"></text></g><g><title>dlopen (11 samples, 0.88%)</title><rect x="2.8640%" y="725" width="0.8751%" height="15" fill="rgb(218,155,12)" fg:x="36" fg:w="11"/><text x="3.1140%" y="735.50"></text></g><g><title>_dl_catch_error (11 samples, 0.88%)</title><rect x="2.8640%" y="709" width="0.8751%" height="15" fill="rgb(221,161,30)" fg:x="36" fg:w="11"/><text x="3.1140%" y="719.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="2.8640%" y="693" width="0.8751%" height="15" fill="rgb(221,179,11)" fg:x="36" fg:w="11"/><text x="3.1140%" y="703.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="2.8640%" y="677" width="0.8751%" height="15" fill="rgb(224,170,48)" fg:x="36" fg:w="11"/><text x="3.1140%" y="687.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="2.8640%" y="661" width="0.8751%" height="15" fill="rgb(223,117,5)" fg:x="36" fg:w="11"/><text x="3.1140%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="3.7391%" y="789" width="0.0796%" height="15" fill="rgb(209,52,20)" fg:x="47" fg:w="1"/><text x="3.9891%" y="799.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="3.7391%" y="773" width="0.0796%" height="15" fill="rgb(209,19,41)" fg:x="47" fg:w="1"/><text x="3.9891%" y="783.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="3.7391%" y="757" width="0.0796%" height="15" fill="rgb(210,177,12)" fg:x="47" fg:w="1"/><text x="3.9891%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.8186%" y="789" width="0.0796%" height="15" fill="rgb(211,159,37)" fg:x="48" fg:w="1"/><text x="4.0686%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="3.8186%" y="773" width="0.0796%" height="15" fill="rgb(209,20,2)" fg:x="48" fg:w="1"/><text x="4.0686%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8186%" y="757" width="0.0796%" height="15" fill="rgb(244,3,46)" fg:x="48" fg:w="1"/><text x="4.0686%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="3.8982%" y="709" width="0.1591%" height="15" fill="rgb(220,94,38)" fg:x="49" fg:w="2"/><text x="4.1482%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="3.8982%" y="693" width="0.1591%" height="15" fill="rgb(253,14,31)" fg:x="49" fg:w="2"/><text x="4.1482%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.9777%" y="677" width="0.0796%" height="15" fill="rgb(234,176,13)" fg:x="50" fg:w="1"/><text x="4.2277%" y="687.50"></text></g><g><title>engine::identifiers::model::get_gid (4 samples, 0.32%)</title><rect x="3.8982%" y="757" width="0.3182%" height="15" fill="rgb(218,62,25)" fg:x="49" fg:w="4"/><text x="4.1482%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="3.8982%" y="741" width="0.3182%" height="15" fill="rgb(216,124,40)" fg:x="49" fg:w="4"/><text x="4.1482%" y="751.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="3.8982%" y="725" width="0.3182%" height="15" fill="rgb(228,170,12)" fg:x="49" fg:w="4"/><text x="4.1482%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="4.0573%" y="709" width="0.1591%" height="15" fill="rgb(231,226,5)" fg:x="51" fg:w="2"/><text x="4.3073%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="4.0573%" y="693" width="0.1591%" height="15" fill="rgb(237,122,22)" fg:x="51" fg:w="2"/><text x="4.3073%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.1368%" y="677" width="0.0796%" height="15" fill="rgb(209,185,25)" fg:x="52" fg:w="1"/><text x="4.3868%" y="687.50"></text></g><g><title>kernel::model::Props::set_u64_property (1 samples, 0.08%)</title><rect x="4.2959%" y="709" width="0.0796%" height="15" fill="rgb(228,200,32)" fg:x="54" fg:w="1"/><text x="4.5459%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.2959%" y="693" width="0.0796%" height="15" fill="rgb(217,140,10)" fg:x="54" fg:w="1"/><text x="4.5459%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.2959%" y="677" width="0.0796%" height="15" fill="rgb(253,17,24)" fg:x="54" fg:w="1"/><text x="4.5459%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="4.5346%" y="613" width="0.0796%" height="15" fill="rgb(212,61,6)" fg:x="57" fg:w="1"/><text x="4.7846%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.5346%" y="597" width="0.0796%" height="15" fill="rgb(205,14,25)" fg:x="57" fg:w="1"/><text x="4.7846%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.6142%" y="613" width="0.0796%" height="15" fill="rgb(232,69,41)" fg:x="58" fg:w="1"/><text x="4.8642%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="4.4551%" y="645" width="0.3978%" height="15" fill="rgb(241,106,47)" fg:x="56" fg:w="5"/><text x="4.7051%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="4.4551%" y="629" width="0.3978%" height="15" fill="rgb(210,213,53)" fg:x="56" fg:w="5"/><text x="4.7051%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="4.6937%" y="613" width="0.1591%" height="15" fill="rgb(253,175,27)" fg:x="59" fg:w="2"/><text x="4.9437%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="4.4551%" y="677" width="0.4773%" height="15" fill="rgb(211,171,24)" fg:x="56" fg:w="6"/><text x="4.7051%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="4.4551%" y="661" width="0.4773%" height="15" fill="rgb(229,80,7)" fg:x="56" fg:w="6"/><text x="4.7051%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.8528%" y="645" width="0.0796%" height="15" fill="rgb(212,46,39)" fg:x="61" fg:w="1"/><text x="5.1028%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="4.9324%" y="645" width="0.1591%" height="15" fill="rgb(240,80,45)" fg:x="62" fg:w="2"/><text x="5.1824%" y="655.50"></text></g><g><title>kernel::model::scopes::load_props (11 samples, 0.88%)</title><rect x="4.3755%" y="709" width="0.8751%" height="15" fill="rgb(253,177,40)" fg:x="55" fg:w="11"/><text x="4.6255%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (11 samples, 0.88%)</title><rect x="4.3755%" y="693" width="0.8751%" height="15" fill="rgb(249,200,15)" fg:x="55" fg:w="11"/><text x="4.6255%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="4.9324%" y="677" width="0.3182%" height="15" fill="rgb(217,78,26)" fg:x="62" fg:w="4"/><text x="5.1824%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="4.9324%" y="661" width="0.3182%" height="15" fill="rgb(254,151,32)" fg:x="62" fg:w="4"/><text x="5.1824%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="5.0915%" y="645" width="0.1591%" height="15" fill="rgb(226,165,27)" fg:x="64" fg:w="2"/><text x="5.3415%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="5.0915%" y="629" width="0.1591%" height="15" fill="rgb(250,206,4)" fg:x="64" fg:w="2"/><text x="5.3415%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="5.0915%" y="613" width="0.1591%" height="15" fill="rgb(231,229,27)" fg:x="64" fg:w="2"/><text x="5.3415%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="5.0915%" y="597" width="0.1591%" height="15" fill="rgb(239,217,8)" fg:x="64" fg:w="2"/><text x="5.3415%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="5.0915%" y="581" width="0.1591%" height="15" fill="rgb(225,204,27)" fg:x="64" fg:w="2"/><text x="5.3415%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="5.0915%" y="565" width="0.1591%" height="15" fill="rgb(230,56,32)" fg:x="64" fg:w="2"/><text x="5.3415%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="5.1710%" y="549" width="0.0796%" height="15" fill="rgb(222,56,27)" fg:x="65" fg:w="1"/><text x="5.4210%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="5.1710%" y="533" width="0.0796%" height="15" fill="rgb(253,108,27)" fg:x="65" fg:w="1"/><text x="5.4210%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.2506%" y="613" width="0.0796%" height="15" fill="rgb(212,87,36)" fg:x="66" fg:w="1"/><text x="5.5006%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.3302%" y="597" width="0.0796%" height="15" fill="rgb(247,82,36)" fg:x="67" fg:w="1"/><text x="5.5802%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="5.2506%" y="677" width="0.2387%" height="15" fill="rgb(222,143,9)" fg:x="66" fg:w="3"/><text x="5.5006%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="5.2506%" y="661" width="0.2387%" height="15" fill="rgb(238,162,48)" fg:x="66" fg:w="3"/><text x="5.5006%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="5.2506%" y="645" width="0.2387%" height="15" fill="rgb(221,59,43)" fg:x="66" fg:w="3"/><text x="5.5006%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="5.2506%" y="629" width="0.2387%" height="15" fill="rgb(205,166,41)" fg:x="66" fg:w="3"/><text x="5.5006%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="5.3302%" y="613" width="0.1591%" height="15" fill="rgb(241,186,40)" fg:x="67" fg:w="2"/><text x="5.5802%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.4097%" y="597" width="0.0796%" height="15" fill="rgb(216,119,35)" fg:x="68" fg:w="1"/><text x="5.6597%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.4893%" y="677" width="0.0796%" height="15" fill="rgb(208,68,38)" fg:x="69" fg:w="1"/><text x="5.7393%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (17 samples, 1.35%)</title><rect x="4.2959%" y="725" width="1.3524%" height="15" fill="rgb(217,113,1)" fg:x="54" fg:w="17"/><text x="4.5459%" y="735.50"></text></g><g><title>kernel::model::scopes::save_props (5 samples, 0.40%)</title><rect x="5.2506%" y="709" width="0.3978%" height="15" fill="rgb(242,153,3)" fg:x="66" fg:w="5"/><text x="5.5006%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.40%)</title><rect x="5.2506%" y="693" width="0.3978%" height="15" fill="rgb(229,76,35)" fg:x="66" fg:w="5"/><text x="5.5006%" y="703.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="5.5688%" y="677" width="0.0796%" height="15" fill="rgb(229,125,34)" fg:x="70" fg:w="1"/><text x="5.8188%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="5.5688%" y="661" width="0.0796%" height="15" fill="rgb(238,179,36)" fg:x="70" fg:w="1"/><text x="5.8188%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="5.5688%" y="645" width="0.0796%" height="15" fill="rgb(244,183,19)" fg:x="70" fg:w="1"/><text x="5.8188%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="5.5688%" y="629" width="0.0796%" height="15" fill="rgb(216,85,49)" fg:x="70" fg:w="1"/><text x="5.8188%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="5.5688%" y="613" width="0.0796%" height="15" fill="rgb(208,161,47)" fg:x="70" fg:w="1"/><text x="5.8188%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="5.5688%" y="597" width="0.0796%" height="15" fill="rgb(233,210,18)" fg:x="70" fg:w="1"/><text x="5.8188%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.5688%" y="581" width="0.0796%" height="15" fill="rgb(205,104,42)" fg:x="70" fg:w="1"/><text x="5.8188%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="5.6484%" y="725" width="0.0796%" height="15" fill="rgb(248,90,43)" fg:x="71" fg:w="1"/><text x="5.8984%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="5.6484%" y="709" width="0.0796%" height="15" fill="rgb(206,198,11)" fg:x="71" fg:w="1"/><text x="5.8984%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.7279%" y="693" width="0.2387%" height="15" fill="rgb(239,165,27)" fg:x="72" fg:w="3"/><text x="5.9779%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.8075%" y="677" width="0.1591%" height="15" fill="rgb(246,44,32)" fg:x="73" fg:w="2"/><text x="6.0575%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.8075%" y="661" width="0.1591%" height="15" fill="rgb(252,65,42)" fg:x="73" fg:w="2"/><text x="6.0575%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.8075%" y="645" width="0.1591%" height="15" fill="rgb(246,197,18)" fg:x="73" fg:w="2"/><text x="6.0575%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="5.7279%" y="709" width="0.3182%" height="15" fill="rgb(216,192,4)" fg:x="72" fg:w="4"/><text x="5.9779%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.9666%" y="693" width="0.0796%" height="15" fill="rgb(208,117,10)" fg:x="75" fg:w="1"/><text x="6.2166%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.1257%" y="693" width="0.0796%" height="15" fill="rgb(240,61,47)" fg:x="77" fg:w="1"/><text x="6.3757%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.2053%" y="693" width="0.2387%" height="15" fill="rgb(228,178,21)" fg:x="78" fg:w="3"/><text x="6.4553%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.2848%" y="677" width="0.1591%" height="15" fill="rgb(219,96,54)" fg:x="79" fg:w="2"/><text x="6.5348%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.2848%" y="661" width="0.1591%" height="15" fill="rgb(250,177,24)" fg:x="79" fg:w="2"/><text x="6.5348%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.2848%" y="645" width="0.1591%" height="15" fill="rgb(242,154,46)" fg:x="79" fg:w="2"/><text x="6.5348%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.3644%" y="629" width="0.0796%" height="15" fill="rgb(226,176,29)" fg:x="80" fg:w="1"/><text x="6.6144%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.3644%" y="613" width="0.0796%" height="15" fill="rgb(226,29,2)" fg:x="80" fg:w="1"/><text x="6.6144%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.3644%" y="597" width="0.0796%" height="15" fill="rgb(237,104,14)" fg:x="80" fg:w="1"/><text x="6.6144%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.5235%" y="677" width="0.0796%" height="15" fill="rgb(245,207,31)" fg:x="82" fg:w="1"/><text x="6.7735%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.5235%" y="661" width="0.0796%" height="15" fill="rgb(229,211,45)" fg:x="82" fg:w="1"/><text x="6.7735%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.5235%" y="645" width="0.0796%" height="15" fill="rgb(229,113,15)" fg:x="82" fg:w="1"/><text x="6.7735%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.5235%" y="629" width="0.0796%" height="15" fill="rgb(237,147,15)" fg:x="82" fg:w="1"/><text x="6.7735%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.6030%" y="677" width="0.1591%" height="15" fill="rgb(244,120,12)" fg:x="83" fg:w="2"/><text x="6.8530%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.6030%" y="661" width="0.1591%" height="15" fill="rgb(205,120,12)" fg:x="83" fg:w="2"/><text x="6.8530%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.6030%" y="645" width="0.1591%" height="15" fill="rgb(231,26,45)" fg:x="83" fg:w="2"/><text x="6.8530%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.8417%" y="661" width="0.0796%" height="15" fill="rgb(246,98,1)" fg:x="86" fg:w="1"/><text x="7.0917%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.0008%" y="645" width="0.0796%" height="15" fill="rgb(207,68,45)" fg:x="88" fg:w="1"/><text x="7.2508%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.0008%" y="629" width="0.0796%" height="15" fill="rgb(231,27,38)" fg:x="88" fg:w="1"/><text x="7.2508%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.0008%" y="613" width="0.0796%" height="15" fill="rgb(214,223,3)" fg:x="88" fg:w="1"/><text x="7.2508%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.0804%" y="613" width="0.0796%" height="15" fill="rgb(228,195,46)" fg:x="89" fg:w="1"/><text x="7.3304%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="7.1599%" y="613" width="0.1591%" height="15" fill="rgb(231,100,42)" fg:x="90" fg:w="2"/><text x="7.4099%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.1599%" y="597" width="0.1591%" height="15" fill="rgb(236,53,4)" fg:x="90" fg:w="2"/><text x="7.4099%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.2395%" y="581" width="0.0796%" height="15" fill="rgb(230,152,12)" fg:x="91" fg:w="1"/><text x="7.4895%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.2395%" y="565" width="0.0796%" height="15" fill="rgb(226,101,19)" fg:x="91" fg:w="1"/><text x="7.4895%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="7.0804%" y="629" width="0.3182%" height="15" fill="rgb(250,149,32)" fg:x="89" fg:w="4"/><text x="7.3304%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.3190%" y="613" width="0.0796%" height="15" fill="rgb(232,178,12)" fg:x="92" fg:w="1"/><text x="7.5690%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.3190%" y="597" width="0.0796%" height="15" fill="rgb(246,151,17)" fg:x="92" fg:w="1"/><text x="7.5690%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3190%" y="581" width="0.0796%" height="15" fill="rgb(252,17,51)" fg:x="92" fg:w="1"/><text x="7.5690%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.3190%" y="565" width="0.0796%" height="15" fill="rgb(250,207,23)" fg:x="92" fg:w="1"/><text x="7.5690%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.3190%" y="549" width="0.0796%" height="15" fill="rgb(205,27,5)" fg:x="92" fg:w="1"/><text x="7.5690%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.3190%" y="533" width="0.0796%" height="15" fill="rgb(224,32,19)" fg:x="92" fg:w="1"/><text x="7.5690%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="7.0804%" y="645" width="0.4773%" height="15" fill="rgb(247,214,40)" fg:x="89" fg:w="6"/><text x="7.3304%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.3986%" y="629" width="0.1591%" height="15" fill="rgb(239,199,17)" fg:x="93" fg:w="2"/><text x="7.6486%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.4781%" y="613" width="0.0796%" height="15" fill="rgb(251,159,9)" fg:x="94" fg:w="1"/><text x="7.7281%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.4781%" y="597" width="0.0796%" height="15" fill="rgb(225,78,32)" fg:x="94" fg:w="1"/><text x="7.7281%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="6.7621%" y="677" width="0.8751%" height="15" fill="rgb(206,97,47)" fg:x="85" fg:w="11"/><text x="7.0121%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="6.9212%" y="661" width="0.7160%" height="15" fill="rgb(227,107,4)" fg:x="87" fg:w="9"/><text x="7.1712%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.5577%" y="645" width="0.0796%" height="15" fill="rgb(241,146,50)" fg:x="95" fg:w="1"/><text x="7.8077%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.5577%" y="629" width="0.0796%" height="15" fill="rgb(232,92,30)" fg:x="95" fg:w="1"/><text x="7.8077%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.5577%" y="613" width="0.0796%" height="15" fill="rgb(222,0,40)" fg:x="95" fg:w="1"/><text x="7.8077%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.27%)</title><rect x="6.4439%" y="693" width="1.2729%" height="15" fill="rgb(219,54,33)" fg:x="81" fg:w="16"/><text x="6.6939%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.6372%" y="677" width="0.0796%" height="15" fill="rgb(226,209,28)" fg:x="96" fg:w="1"/><text x="7.8872%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.6372%" y="661" width="0.0796%" height="15" fill="rgb(254,205,35)" fg:x="96" fg:w="1"/><text x="7.8872%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.6372%" y="645" width="0.0796%" height="15" fill="rgb(230,159,3)" fg:x="96" fg:w="1"/><text x="7.8872%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.91%)</title><rect x="6.0461%" y="709" width="1.9093%" height="15" fill="rgb(232,190,24)" fg:x="76" fg:w="24"/><text x="6.2961%" y="719.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.7168%" y="693" width="0.2387%" height="15" fill="rgb(217,227,44)" fg:x="97" fg:w="3"/><text x="7.9668%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.7963%" y="677" width="0.1591%" height="15" fill="rgb(236,211,1)" fg:x="98" fg:w="2"/><text x="8.0463%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.8759%" y="661" width="0.0796%" height="15" fill="rgb(250,127,46)" fg:x="99" fg:w="1"/><text x="8.1259%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (30 samples, 2.39%)</title><rect x="5.7279%" y="725" width="2.3866%" height="15" fill="rgb(229,213,6)" fg:x="72" fg:w="30"/><text x="5.9779%" y="735.50">&lt;s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.9554%" y="709" width="0.1591%" height="15" fill="rgb(237,15,36)" fg:x="100" fg:w="2"/><text x="8.2054%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.0350%" y="693" width="0.0796%" height="15" fill="rgb(213,131,41)" fg:x="101" fg:w="1"/><text x="8.2850%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.0350%" y="677" width="0.0796%" height="15" fill="rgb(225,82,44)" fg:x="101" fg:w="1"/><text x="8.2850%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.1146%" y="693" width="0.0796%" height="15" fill="rgb(249,42,11)" fg:x="102" fg:w="1"/><text x="8.3646%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="8.1941%" y="677" width="0.1591%" height="15" fill="rgb(253,11,29)" fg:x="103" fg:w="2"/><text x="8.4441%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.2737%" y="661" width="0.0796%" height="15" fill="rgb(206,8,54)" fg:x="104" fg:w="1"/><text x="8.5237%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.3532%" y="645" width="0.0796%" height="15" fill="rgb(222,186,2)" fg:x="105" fg:w="1"/><text x="8.6032%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.3532%" y="629" width="0.0796%" height="15" fill="rgb(221,206,53)" fg:x="105" fg:w="1"/><text x="8.6032%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="8.4328%" y="645" width="0.0796%" height="15" fill="rgb(230,150,21)" fg:x="106" fg:w="1"/><text x="8.6828%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="8.4328%" y="629" width="0.0796%" height="15" fill="rgb(253,202,10)" fg:x="106" fg:w="1"/><text x="8.6828%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.4328%" y="613" width="0.0796%" height="15" fill="rgb(238,109,40)" fg:x="106" fg:w="1"/><text x="8.6828%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.4328%" y="597" width="0.0796%" height="15" fill="rgb(247,120,22)" fg:x="106" fg:w="1"/><text x="8.6828%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.5123%" y="629" width="0.0796%" height="15" fill="rgb(207,43,30)" fg:x="107" fg:w="1"/><text x="8.7623%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="8.1146%" y="725" width="0.5569%" height="15" fill="rgb(213,211,24)" fg:x="102" fg:w="7"/><text x="8.3646%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="8.1146%" y="709" width="0.5569%" height="15" fill="rgb(239,73,39)" fg:x="102" fg:w="7"/><text x="8.3646%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="8.1941%" y="693" width="0.4773%" height="15" fill="rgb(245,182,19)" fg:x="103" fg:w="6"/><text x="8.4441%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="8.3532%" y="677" width="0.3182%" height="15" fill="rgb(247,143,26)" fg:x="105" fg:w="4"/><text x="8.6032%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="8.3532%" y="661" width="0.3182%" height="15" fill="rgb(228,191,23)" fg:x="105" fg:w="4"/><text x="8.6032%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.5123%" y="645" width="0.1591%" height="15" fill="rgb(253,165,31)" fg:x="107" fg:w="2"/><text x="8.7623%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.5919%" y="629" width="0.0796%" height="15" fill="rgb(234,138,20)" fg:x="108" fg:w="1"/><text x="8.8419%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.5919%" y="613" width="0.0796%" height="15" fill="rgb(218,191,29)" fg:x="108" fg:w="1"/><text x="8.8419%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7510%" y="677" width="0.0796%" height="15" fill="rgb(221,157,19)" fg:x="110" fg:w="1"/><text x="9.0010%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.7510%" y="661" width="0.0796%" height="15" fill="rgb(237,26,42)" fg:x="110" fg:w="1"/><text x="9.0010%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7510%" y="645" width="0.0796%" height="15" fill="rgb(220,163,24)" fg:x="110" fg:w="1"/><text x="9.0010%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7510%" y="629" width="0.0796%" height="15" fill="rgb(242,115,20)" fg:x="110" fg:w="1"/><text x="9.0010%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7510%" y="613" width="0.0796%" height="15" fill="rgb(210,206,9)" fg:x="110" fg:w="1"/><text x="9.0010%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="8.8305%" y="677" width="0.0796%" height="15" fill="rgb(208,71,17)" fg:x="111" fg:w="1"/><text x="9.0805%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.8305%" y="661" width="0.0796%" height="15" fill="rgb(233,7,5)" fg:x="111" fg:w="1"/><text x="9.0805%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8305%" y="645" width="0.0796%" height="15" fill="rgb(207,92,33)" fg:x="111" fg:w="1"/><text x="9.0805%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.9897%" y="629" width="0.0796%" height="15" fill="rgb(218,87,9)" fg:x="113" fg:w="1"/><text x="9.2397%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.9897%" y="613" width="0.0796%" height="15" fill="rgb(219,47,37)" fg:x="113" fg:w="1"/><text x="9.2397%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9897%" y="597" width="0.0796%" height="15" fill="rgb(221,152,34)" fg:x="113" fg:w="1"/><text x="9.2397%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.3874%" y="517" width="0.0796%" height="15" fill="rgb(235,176,21)" fg:x="118" fg:w="1"/><text x="9.6374%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="9.2283%" y="581" width="0.3182%" height="15" fill="rgb(232,212,21)" fg:x="116" fg:w="4"/><text x="9.4783%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="9.2283%" y="565" width="0.3182%" height="15" fill="rgb(245,82,39)" fg:x="116" fg:w="4"/><text x="9.4783%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="9.3079%" y="549" width="0.2387%" height="15" fill="rgb(241,52,51)" fg:x="117" fg:w="3"/><text x="9.5579%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.3079%" y="533" width="0.2387%" height="15" fill="rgb(219,91,24)" fg:x="117" fg:w="3"/><text x="9.5579%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.4670%" y="517" width="0.0796%" height="15" fill="rgb(241,142,12)" fg:x="119" fg:w="1"/><text x="9.7170%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (12 samples, 0.95%)</title><rect x="8.6714%" y="709" width="0.9547%" height="15" fill="rgb(230,27,9)" fg:x="109" fg:w="12"/><text x="8.9214%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.95%)</title><rect x="8.6714%" y="693" width="0.9547%" height="15" fill="rgb(249,181,32)" fg:x="109" fg:w="12"/><text x="8.9214%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="8.9101%" y="677" width="0.7160%" height="15" fill="rgb(230,107,3)" fg:x="112" fg:w="9"/><text x="9.1601%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (9 samples, 0.72%)</title><rect x="8.9101%" y="661" width="0.7160%" height="15" fill="rgb(246,204,14)" fg:x="112" fg:w="9"/><text x="9.1601%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="8.9101%" y="645" width="0.7160%" height="15" fill="rgb(213,192,47)" fg:x="112" fg:w="9"/><text x="9.1601%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="9.0692%" y="629" width="0.5569%" height="15" fill="rgb(240,44,36)" fg:x="114" fg:w="7"/><text x="9.3192%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="9.2283%" y="613" width="0.3978%" height="15" fill="rgb(244,209,38)" fg:x="116" fg:w="5"/><text x="9.4783%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="9.2283%" y="597" width="0.3978%" height="15" fill="rgb(219,34,37)" fg:x="116" fg:w="5"/><text x="9.4783%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5465%" y="581" width="0.0796%" height="15" fill="rgb(210,28,6)" fg:x="120" fg:w="1"/><text x="9.7965%" y="591.50"></text></g><g><title>engine::session::Session::flush (73 samples, 5.81%)</title><rect x="3.8982%" y="789" width="5.8075%" height="15" fill="rgb(244,110,52)" fg:x="49" fg:w="73"/><text x="4.1482%" y="799.50">engine:..</text></g><g><title>engine::session::Session::save_entity_changes (73 samples, 5.81%)</title><rect x="3.8982%" y="773" width="5.8075%" height="15" fill="rgb(254,124,47)" fg:x="49" fg:w="73"/><text x="4.1482%" y="783.50">engine:..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (69 samples, 5.49%)</title><rect x="4.2164%" y="757" width="5.4893%" height="15" fill="rgb(254,110,13)" fg:x="53" fg:w="69"/><text x="4.4664%" y="767.50">engine:..</text></g><g><title>engine::session::SavesEntities::check_for_changes (69 samples, 5.49%)</title><rect x="4.2164%" y="741" width="5.4893%" height="15" fill="rgb(252,57,21)" fg:x="53" fg:w="69"/><text x="4.4664%" y="751.50">engine:..</text></g><g><title>kernel::compare::any_entity_changes (13 samples, 1.03%)</title><rect x="8.6714%" y="725" width="1.0342%" height="15" fill="rgb(242,60,45)" fg:x="109" fg:w="13"/><text x="8.9214%" y="735.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="9.6261%" y="709" width="0.0796%" height="15" fill="rgb(234,49,30)" fg:x="121" fg:w="1"/><text x="9.8761%" y="719.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="9.6261%" y="693" width="0.0796%" height="15" fill="rgb(218,98,6)" fg:x="121" fg:w="1"/><text x="9.8761%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="9.7056%" y="645" width="0.0796%" height="15" fill="rgb(220,174,29)" fg:x="122" fg:w="1"/><text x="9.9556%" y="655.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="9.7056%" y="725" width="0.1591%" height="15" fill="rgb(236,163,23)" fg:x="122" fg:w="2"/><text x="9.9556%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="9.7056%" y="709" width="0.1591%" height="15" fill="rgb(242,114,45)" fg:x="122" fg:w="2"/><text x="9.9556%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="9.7056%" y="693" width="0.1591%" height="15" fill="rgb(232,10,53)" fg:x="122" fg:w="2"/><text x="9.9556%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.7056%" y="677" width="0.1591%" height="15" fill="rgb(245,108,29)" fg:x="122" fg:w="2"/><text x="9.9556%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.7056%" y="661" width="0.1591%" height="15" fill="rgb(240,89,53)" fg:x="122" fg:w="2"/><text x="9.9556%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.7852%" y="645" width="0.0796%" height="15" fill="rgb(226,60,45)" fg:x="123" fg:w="1"/><text x="10.0352%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.7852%" y="629" width="0.0796%" height="15" fill="rgb(230,41,44)" fg:x="123" fg:w="1"/><text x="10.0352%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.7852%" y="613" width="0.0796%" height="15" fill="rgb(230,26,20)" fg:x="123" fg:w="1"/><text x="10.0352%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.7852%" y="597" width="0.0796%" height="15" fill="rgb(237,170,32)" fg:x="123" fg:w="1"/><text x="10.0352%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.7852%" y="581" width="0.0796%" height="15" fill="rgb(212,35,42)" fg:x="123" fg:w="1"/><text x="10.0352%" y="591.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="9.8648%" y="709" width="0.0796%" height="15" fill="rgb(227,31,34)" fg:x="124" fg:w="1"/><text x="10.1148%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="9.8648%" y="693" width="0.0796%" height="15" fill="rgb(216,19,18)" fg:x="124" fg:w="1"/><text x="10.1148%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.8648%" y="677" width="0.0796%" height="15" fill="rgb(211,133,42)" fg:x="124" fg:w="1"/><text x="10.1148%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.8648%" y="661" width="0.0796%" height="15" fill="rgb(244,66,13)" fg:x="124" fg:w="1"/><text x="10.1148%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.8648%" y="645" width="0.0796%" height="15" fill="rgb(218,185,50)" fg:x="124" fg:w="1"/><text x="10.1148%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="9.7056%" y="773" width="0.3182%" height="15" fill="rgb(219,149,13)" fg:x="122" fg:w="4"/><text x="9.9556%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="9.7056%" y="757" width="0.3182%" height="15" fill="rgb(221,125,0)" fg:x="122" fg:w="4"/><text x="9.9556%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="9.7056%" y="741" width="0.3182%" height="15" fill="rgb(247,126,27)" fg:x="122" fg:w="4"/><text x="9.9556%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="9.8648%" y="725" width="0.1591%" height="15" fill="rgb(250,138,30)" fg:x="124" fg:w="2"/><text x="10.1148%" y="735.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="9.9443%" y="709" width="0.0796%" height="15" fill="rgb(230,151,9)" fg:x="125" fg:w="1"/><text x="10.1943%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="9.9443%" y="693" width="0.0796%" height="15" fill="rgb(233,80,38)" fg:x="125" fg:w="1"/><text x="10.1943%" y="703.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="9.9443%" y="677" width="0.0796%" height="15" fill="rgb(232,68,43)" fg:x="125" fg:w="1"/><text x="10.1943%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.9443%" y="661" width="0.0796%" height="15" fill="rgb(254,5,50)" fg:x="125" fg:w="1"/><text x="10.1943%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="9.9443%" y="645" width="0.0796%" height="15" fill="rgb(225,45,5)" fg:x="125" fg:w="1"/><text x="10.1943%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.9443%" y="629" width="0.0796%" height="15" fill="rgb(239,22,3)" fg:x="125" fg:w="1"/><text x="10.1943%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="9.9443%" y="613" width="0.0796%" height="15" fill="rgb(243,129,0)" fg:x="125" fg:w="1"/><text x="10.1943%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="9.9443%" y="597" width="0.0796%" height="15" fill="rgb(223,164,0)" fg:x="125" fg:w="1"/><text x="10.1943%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.9443%" y="581" width="0.0796%" height="15" fill="rgb(221,46,29)" fg:x="125" fg:w="1"/><text x="10.1943%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="9.9443%" y="565" width="0.0796%" height="15" fill="rgb(205,97,47)" fg:x="125" fg:w="1"/><text x="10.1943%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="10.0239%" y="757" width="0.0796%" height="15" fill="rgb(249,14,8)" fg:x="126" fg:w="1"/><text x="10.2739%" y="767.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="10.0239%" y="741" width="0.0796%" height="15" fill="rgb(216,77,3)" fg:x="126" fg:w="1"/><text x="10.2739%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="10.0239%" y="725" width="0.0796%" height="15" fill="rgb(206,168,54)" fg:x="126" fg:w="1"/><text x="10.2739%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="10.0239%" y="709" width="0.0796%" height="15" fill="rgb(236,3,41)" fg:x="126" fg:w="1"/><text x="10.2739%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="10.0239%" y="693" width="0.0796%" height="15" fill="rgb(231,132,24)" fg:x="126" fg:w="1"/><text x="10.2739%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.0239%" y="677" width="0.0796%" height="15" fill="rgb(227,221,40)" fg:x="126" fg:w="1"/><text x="10.2739%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.0239%" y="661" width="0.0796%" height="15" fill="rgb(233,151,11)" fg:x="126" fg:w="1"/><text x="10.2739%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.0239%" y="645" width="0.0796%" height="15" fill="rgb(247,81,35)" fg:x="126" fg:w="1"/><text x="10.2739%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.0239%" y="629" width="0.0796%" height="15" fill="rgb(243,128,48)" fg:x="126" fg:w="1"/><text x="10.2739%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.0239%" y="613" width="0.0796%" height="15" fill="rgb(253,16,10)" fg:x="126" fg:w="1"/><text x="10.2739%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.0239%" y="597" width="0.0796%" height="15" fill="rgb(228,67,27)" fg:x="126" fg:w="1"/><text x="10.2739%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="10.1034%" y="757" width="0.0796%" height="15" fill="rgb(231,105,25)" fg:x="127" fg:w="1"/><text x="10.3534%" y="767.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="10.1034%" y="741" width="0.0796%" height="15" fill="rgb(213,166,47)" fg:x="127" fg:w="1"/><text x="10.3534%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.1034%" y="725" width="0.0796%" height="15" fill="rgb(209,27,10)" fg:x="127" fg:w="1"/><text x="10.3534%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="10.1034%" y="709" width="0.0796%" height="15" fill="rgb(241,44,30)" fg:x="127" fg:w="1"/><text x="10.3534%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="10.1830%" y="725" width="0.0796%" height="15" fill="rgb(223,216,15)" fg:x="128" fg:w="1"/><text x="10.4330%" y="735.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="10.1830%" y="757" width="0.1591%" height="15" fill="rgb(227,14,7)" fg:x="128" fg:w="2"/><text x="10.4330%" y="767.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="10.1830%" y="741" width="0.1591%" height="15" fill="rgb(237,14,5)" fg:x="128" fg:w="2"/><text x="10.4330%" y="751.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2625%" y="725" width="0.0796%" height="15" fill="rgb(232,14,36)" fg:x="129" fg:w="1"/><text x="10.5125%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.2625%" y="709" width="0.0796%" height="15" fill="rgb(234,0,38)" fg:x="129" fg:w="1"/><text x="10.5125%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="10.2625%" y="693" width="0.0796%" height="15" fill="rgb(207,170,14)" fg:x="129" fg:w="1"/><text x="10.5125%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.3421%" y="741" width="0.0796%" height="15" fill="rgb(252,45,13)" fg:x="130" fg:w="1"/><text x="10.5921%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="10.4216%" y="709" width="0.0796%" height="15" fill="rgb(213,142,7)" fg:x="131" fg:w="1"/><text x="10.6716%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="10.4216%" y="693" width="0.0796%" height="15" fill="rgb(216,157,23)" fg:x="131" fg:w="1"/><text x="10.6716%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="10.4216%" y="677" width="0.0796%" height="15" fill="rgb(212,145,33)" fg:x="131" fg:w="1"/><text x="10.6716%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4216%" y="661" width="0.0796%" height="15" fill="rgb(233,26,13)" fg:x="131" fg:w="1"/><text x="10.6716%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4216%" y="645" width="0.0796%" height="15" fill="rgb(219,196,19)" fg:x="131" fg:w="1"/><text x="10.6716%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4216%" y="629" width="0.0796%" height="15" fill="rgb(246,56,21)" fg:x="131" fg:w="1"/><text x="10.6716%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4216%" y="613" width="0.0796%" height="15" fill="rgb(222,28,53)" fg:x="131" fg:w="1"/><text x="10.6716%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.4216%" y="597" width="0.0796%" height="15" fill="rgb(224,5,27)" fg:x="131" fg:w="1"/><text x="10.6716%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4216%" y="581" width="0.0796%" height="15" fill="rgb(220,153,33)" fg:x="131" fg:w="1"/><text x="10.6716%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4216%" y="565" width="0.0796%" height="15" fill="rgb(226,58,19)" fg:x="131" fg:w="1"/><text x="10.6716%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4216%" y="549" width="0.0796%" height="15" fill="rgb(239,112,23)" fg:x="131" fg:w="1"/><text x="10.6716%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.4216%" y="533" width="0.0796%" height="15" fill="rgb(251,213,20)" fg:x="131" fg:w="1"/><text x="10.6716%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5012%" y="693" width="0.0796%" height="15" fill="rgb(215,181,21)" fg:x="132" fg:w="1"/><text x="10.7512%" y="703.50"></text></g><g><title>plugins_core::build::Build::holding (12 samples, 0.95%)</title><rect x="9.7056%" y="789" width="0.9547%" height="15" fill="rgb(240,8,35)" fg:x="122" fg:w="12"/><text x="9.9556%" y="799.50"></text></g><g><title>plugins_core::tools::set_container (8 samples, 0.64%)</title><rect x="10.0239%" y="773" width="0.6364%" height="15" fill="rgb(232,203,3)" fg:x="126" fg:w="8"/><text x="10.2739%" y="783.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="10.3421%" y="757" width="0.3182%" height="15" fill="rgb(214,202,43)" fg:x="130" fg:w="4"/><text x="10.5921%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="10.4216%" y="741" width="0.2387%" height="15" fill="rgb(254,35,11)" fg:x="131" fg:w="3"/><text x="10.6716%" y="751.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="10.4216%" y="725" width="0.2387%" height="15" fill="rgb(239,173,13)" fg:x="131" fg:w="3"/><text x="10.6716%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="10.5012%" y="709" width="0.1591%" height="15" fill="rgb(220,141,0)" fg:x="132" fg:w="2"/><text x="10.7512%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="10.5807%" y="693" width="0.0796%" height="15" fill="rgb(210,98,12)" fg:x="133" fg:w="1"/><text x="10.8307%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="10.5807%" y="677" width="0.0796%" height="15" fill="rgb(254,153,22)" fg:x="133" fg:w="1"/><text x="10.8307%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.5807%" y="661" width="0.0796%" height="15" fill="rgb(247,223,17)" fg:x="133" fg:w="1"/><text x="10.8307%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.5807%" y="645" width="0.0796%" height="15" fill="rgb(246,56,7)" fg:x="133" fg:w="1"/><text x="10.8307%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.5807%" y="629" width="0.0796%" height="15" fill="rgb(240,226,12)" fg:x="133" fg:w="1"/><text x="10.8307%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.5807%" y="613" width="0.0796%" height="15" fill="rgb(205,87,46)" fg:x="133" fg:w="1"/><text x="10.8307%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.5807%" y="597" width="0.0796%" height="15" fill="rgb(245,214,51)" fg:x="133" fg:w="1"/><text x="10.8307%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.5807%" y="581" width="0.0796%" height="15" fill="rgb(223,172,33)" fg:x="133" fg:w="1"/><text x="10.8307%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.5807%" y="565" width="0.0796%" height="15" fill="rgb(227,203,34)" fg:x="133" fg:w="1"/><text x="10.8307%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.5807%" y="549" width="0.0796%" height="15" fill="rgb(248,143,44)" fg:x="133" fg:w="1"/><text x="10.8307%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="10.6603%" y="741" width="0.0796%" height="15" fill="rgb(226,162,5)" fg:x="134" fg:w="1"/><text x="10.9103%" y="751.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="10.6603%" y="725" width="0.0796%" height="15" fill="rgb(211,143,1)" fg:x="134" fg:w="1"/><text x="10.9103%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.6603%" y="709" width="0.0796%" height="15" fill="rgb(224,96,15)" fg:x="134" fg:w="1"/><text x="10.9103%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.6603%" y="693" width="0.0796%" height="15" fill="rgb(222,4,38)" fg:x="134" fg:w="1"/><text x="10.9103%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.6603%" y="677" width="0.0796%" height="15" fill="rgb(253,228,15)" fg:x="134" fg:w="1"/><text x="10.9103%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.6603%" y="661" width="0.0796%" height="15" fill="rgb(242,194,12)" fg:x="134" fg:w="1"/><text x="10.9103%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.6603%" y="645" width="0.0796%" height="15" fill="rgb(214,177,31)" fg:x="134" fg:w="1"/><text x="10.9103%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.6603%" y="629" width="0.0796%" height="15" fill="rgb(226,58,51)" fg:x="134" fg:w="1"/><text x="10.9103%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.6603%" y="613" width="0.0796%" height="15" fill="rgb(250,119,16)" fg:x="134" fg:w="1"/><text x="10.9103%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.6603%" y="597" width="0.0796%" height="15" fill="rgb(223,128,53)" fg:x="134" fg:w="1"/><text x="10.9103%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.6603%" y="581" width="0.0796%" height="15" fill="rgb(251,199,15)" fg:x="134" fg:w="1"/><text x="10.9103%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.6603%" y="565" width="0.0796%" height="15" fill="rgb(235,168,42)" fg:x="134" fg:w="1"/><text x="10.9103%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.6603%" y="549" width="0.0796%" height="15" fill="rgb(250,210,17)" fg:x="134" fg:w="1"/><text x="10.9103%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.6603%" y="533" width="0.0796%" height="15" fill="rgb(226,36,41)" fg:x="134" fg:w="1"/><text x="10.9103%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6603%" y="517" width="0.0796%" height="15" fill="rgb(225,87,10)" fg:x="134" fg:w="1"/><text x="10.9103%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="10.7399%" y="645" width="0.1591%" height="15" fill="rgb(228,83,9)" fg:x="135" fg:w="2"/><text x="10.9899%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="10.7399%" y="629" width="0.1591%" height="15" fill="rgb(225,16,36)" fg:x="135" fg:w="2"/><text x="10.9899%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="10.7399%" y="613" width="0.1591%" height="15" fill="rgb(242,198,13)" fg:x="135" fg:w="2"/><text x="10.9899%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="10.7399%" y="597" width="0.1591%" height="15" fill="rgb(239,25,51)" fg:x="135" fg:w="2"/><text x="10.9899%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="10.7399%" y="581" width="0.1591%" height="15" fill="rgb(239,28,37)" fg:x="135" fg:w="2"/><text x="10.9899%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="10.7399%" y="565" width="0.1591%" height="15" fill="rgb(234,70,17)" fg:x="135" fg:w="2"/><text x="10.9899%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.7399%" y="549" width="0.1591%" height="15" fill="rgb(231,215,53)" fg:x="135" fg:w="2"/><text x="10.9899%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="10.6603%" y="757" width="0.3182%" height="15" fill="rgb(218,140,42)" fg:x="134" fg:w="4"/><text x="10.9103%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="10.7399%" y="741" width="0.2387%" height="15" fill="rgb(233,227,45)" fg:x="135" fg:w="3"/><text x="10.9899%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="10.7399%" y="725" width="0.2387%" height="15" fill="rgb(225,189,21)" fg:x="135" fg:w="3"/><text x="10.9899%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="10.7399%" y="709" width="0.2387%" height="15" fill="rgb(237,176,54)" fg:x="135" fg:w="3"/><text x="10.9899%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="10.7399%" y="693" width="0.2387%" height="15" fill="rgb(215,131,46)" fg:x="135" fg:w="3"/><text x="10.9899%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="10.7399%" y="677" width="0.2387%" height="15" fill="rgb(218,95,20)" fg:x="135" fg:w="3"/><text x="10.9899%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="10.7399%" y="661" width="0.2387%" height="15" fill="rgb(208,198,12)" fg:x="135" fg:w="3"/><text x="10.9899%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="10.8990%" y="645" width="0.0796%" height="15" fill="rgb(239,107,50)" fg:x="137" fg:w="1"/><text x="11.1490%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="10.8990%" y="629" width="0.0796%" height="15" fill="rgb(240,217,37)" fg:x="137" fg:w="1"/><text x="11.1490%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9785%" y="677" width="0.0796%" height="15" fill="rgb(242,197,49)" fg:x="138" fg:w="1"/><text x="11.2285%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9785%" y="661" width="0.0796%" height="15" fill="rgb(219,171,17)" fg:x="138" fg:w="1"/><text x="11.2285%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9785%" y="645" width="0.0796%" height="15" fill="rgb(209,81,40)" fg:x="138" fg:w="1"/><text x="11.2285%" y="655.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="10.9785%" y="725" width="0.1591%" height="15" fill="rgb(237,156,30)" fg:x="138" fg:w="2"/><text x="11.2285%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="10.9785%" y="709" width="0.1591%" height="15" fill="rgb(212,127,16)" fg:x="138" fg:w="2"/><text x="11.2285%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="10.9785%" y="693" width="0.1591%" height="15" fill="rgb(226,66,32)" fg:x="138" fg:w="2"/><text x="11.2285%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.0581%" y="677" width="0.0796%" height="15" fill="rgb(245,22,46)" fg:x="139" fg:w="1"/><text x="11.3081%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.0581%" y="661" width="0.0796%" height="15" fill="rgb(210,112,21)" fg:x="139" fg:w="1"/><text x="11.3081%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.0581%" y="645" width="0.0796%" height="15" fill="rgb(207,118,39)" fg:x="139" fg:w="1"/><text x="11.3081%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.0581%" y="629" width="0.0796%" height="15" fill="rgb(205,206,35)" fg:x="139" fg:w="1"/><text x="11.3081%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0581%" y="613" width="0.0796%" height="15" fill="rgb(222,120,2)" fg:x="139" fg:w="1"/><text x="11.3081%" y="623.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="11.1376%" y="709" width="0.0796%" height="15" fill="rgb(205,38,18)" fg:x="140" fg:w="1"/><text x="11.3876%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="11.1376%" y="693" width="0.0796%" height="15" fill="rgb(226,61,2)" fg:x="140" fg:w="1"/><text x="11.3876%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.1376%" y="677" width="0.0796%" height="15" fill="rgb(242,161,23)" fg:x="140" fg:w="1"/><text x="11.3876%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1376%" y="661" width="0.0796%" height="15" fill="rgb(213,13,52)" fg:x="140" fg:w="1"/><text x="11.3876%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.1376%" y="645" width="0.0796%" height="15" fill="rgb(246,209,47)" fg:x="140" fg:w="1"/><text x="11.3876%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1376%" y="629" width="0.0796%" height="15" fill="rgb(214,41,3)" fg:x="140" fg:w="1"/><text x="11.3876%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.1376%" y="613" width="0.0796%" height="15" fill="rgb(236,119,38)" fg:x="140" fg:w="1"/><text x="11.3876%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1376%" y="597" width="0.0796%" height="15" fill="rgb(218,50,11)" fg:x="140" fg:w="1"/><text x="11.3876%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.1376%" y="581" width="0.0796%" height="15" fill="rgb(228,38,11)" fg:x="140" fg:w="1"/><text x="11.3876%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1376%" y="565" width="0.0796%" height="15" fill="rgb(212,13,9)" fg:x="140" fg:w="1"/><text x="11.3876%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.1376%" y="549" width="0.0796%" height="15" fill="rgb(208,211,9)" fg:x="140" fg:w="1"/><text x="11.3876%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1376%" y="533" width="0.0796%" height="15" fill="rgb(239,39,32)" fg:x="140" fg:w="1"/><text x="11.3876%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2172%" y="693" width="0.0796%" height="15" fill="rgb(254,179,26)" fg:x="141" fg:w="1"/><text x="11.4672%" y="703.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="10.6603%" y="789" width="0.7160%" height="15" fill="rgb(249,165,28)" fg:x="134" fg:w="9"/><text x="10.9103%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="10.6603%" y="773" width="0.7160%" height="15" fill="rgb(225,59,50)" fg:x="134" fg:w="9"/><text x="10.9103%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="10.9785%" y="757" width="0.3978%" height="15" fill="rgb(209,122,5)" fg:x="138" fg:w="5"/><text x="11.2285%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="10.9785%" y="741" width="0.3978%" height="15" fill="rgb(214,65,34)" fg:x="138" fg:w="5"/><text x="11.2285%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="11.1376%" y="725" width="0.2387%" height="15" fill="rgb(249,183,32)" fg:x="140" fg:w="3"/><text x="11.3876%" y="735.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="11.2172%" y="709" width="0.1591%" height="15" fill="rgb(218,122,24)" fg:x="141" fg:w="2"/><text x="11.4672%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="11.2967%" y="693" width="0.0796%" height="15" fill="rgb(224,109,18)" fg:x="142" fg:w="1"/><text x="11.5467%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2967%" y="677" width="0.0796%" height="15" fill="rgb(210,68,50)" fg:x="142" fg:w="1"/><text x="11.5467%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.2967%" y="661" width="0.0796%" height="15" fill="rgb(212,184,34)" fg:x="142" fg:w="1"/><text x="11.5467%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2967%" y="645" width="0.0796%" height="15" fill="rgb(238,105,48)" fg:x="142" fg:w="1"/><text x="11.5467%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2967%" y="629" width="0.0796%" height="15" fill="rgb(222,134,54)" fg:x="142" fg:w="1"/><text x="11.5467%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2967%" y="613" width="0.0796%" height="15" fill="rgb(246,24,43)" fg:x="142" fg:w="1"/><text x="11.5467%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2967%" y="597" width="0.0796%" height="15" fill="rgb(227,169,22)" fg:x="142" fg:w="1"/><text x="11.5467%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.2967%" y="581" width="0.0796%" height="15" fill="rgb(253,152,4)" fg:x="142" fg:w="1"/><text x="11.5467%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2967%" y="565" width="0.0796%" height="15" fill="rgb(219,158,36)" fg:x="142" fg:w="1"/><text x="11.5467%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="11.3763%" y="757" width="0.0796%" height="15" fill="rgb(251,128,40)" fg:x="143" fg:w="1"/><text x="11.6263%" y="767.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="11.3763%" y="741" width="0.0796%" height="15" fill="rgb(254,101,39)" fg:x="143" fg:w="1"/><text x="11.6263%" y="751.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="11.3763%" y="725" width="0.0796%" height="15" fill="rgb(221,168,40)" fg:x="143" fg:w="1"/><text x="11.6263%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.4558%" y="741" width="0.0796%" height="15" fill="rgb(221,14,27)" fg:x="144" fg:w="1"/><text x="11.7058%" y="751.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="11.4558%" y="725" width="0.0796%" height="15" fill="rgb(207,36,43)" fg:x="144" fg:w="1"/><text x="11.7058%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="11.4558%" y="709" width="0.0796%" height="15" fill="rgb(240,172,53)" fg:x="144" fg:w="1"/><text x="11.7058%" y="719.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="11.5354%" y="725" width="0.0796%" height="15" fill="rgb(241,138,43)" fg:x="145" fg:w="1"/><text x="11.7854%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.6150%" y="597" width="0.0796%" height="15" fill="rgb(227,78,19)" fg:x="146" fg:w="1"/><text x="11.8650%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="11.3763%" y="789" width="0.3978%" height="15" fill="rgb(215,127,44)" fg:x="143" fg:w="5"/><text x="11.6263%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::set_name (5 samples, 0.40%)</title><rect x="11.3763%" y="773" width="0.3978%" height="15" fill="rgb(227,13,10)" fg:x="143" fg:w="5"/><text x="11.6263%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::modified (4 samples, 0.32%)</title><rect x="11.4558%" y="757" width="0.3182%" height="15" fill="rgb(249,177,6)" fg:x="144" fg:w="4"/><text x="11.7058%" y="767.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="11.5354%" y="741" width="0.2387%" height="15" fill="rgb(215,154,26)" fg:x="145" fg:w="3"/><text x="11.7854%" y="751.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="11.6150%" y="725" width="0.1591%" height="15" fill="rgb(250,168,20)" fg:x="146" fg:w="2"/><text x="11.8650%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="11.6150%" y="709" width="0.1591%" height="15" fill="rgb(222,53,38)" fg:x="146" fg:w="2"/><text x="11.8650%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="11.6150%" y="693" width="0.1591%" height="15" fill="rgb(245,154,5)" fg:x="146" fg:w="2"/><text x="11.8650%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.6150%" y="677" width="0.1591%" height="15" fill="rgb(214,89,50)" fg:x="146" fg:w="2"/><text x="11.8650%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="11.6150%" y="661" width="0.1591%" height="15" fill="rgb(232,73,14)" fg:x="146" fg:w="2"/><text x="11.8650%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.6150%" y="645" width="0.1591%" height="15" fill="rgb(230,101,20)" fg:x="146" fg:w="2"/><text x="11.8650%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="11.6150%" y="629" width="0.1591%" height="15" fill="rgb(208,56,28)" fg:x="146" fg:w="2"/><text x="11.8650%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.6150%" y="613" width="0.1591%" height="15" fill="rgb(247,205,22)" fg:x="146" fg:w="2"/><text x="11.8650%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6945%" y="597" width="0.0796%" height="15" fill="rgb(252,109,51)" fg:x="147" fg:w="1"/><text x="11.9445%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6945%" y="581" width="0.0796%" height="15" fill="rgb(220,40,24)" fg:x="147" fg:w="1"/><text x="11.9445%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6945%" y="565" width="0.0796%" height="15" fill="rgb(251,108,7)" fg:x="147" fg:w="1"/><text x="11.9445%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6945%" y="549" width="0.0796%" height="15" fill="rgb(238,102,51)" fg:x="147" fg:w="1"/><text x="11.9445%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="11.6945%" y="533" width="0.0796%" height="15" fill="rgb(219,149,34)" fg:x="147" fg:w="1"/><text x="11.9445%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="11.6945%" y="517" width="0.0796%" height="15" fill="rgb(239,70,0)" fg:x="147" fg:w="1"/><text x="11.9445%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="11.7741%" y="757" width="0.0796%" height="15" fill="rgb(246,214,23)" fg:x="148" fg:w="1"/><text x="12.0241%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="11.7741%" y="741" width="0.0796%" height="15" fill="rgb(239,221,51)" fg:x="148" fg:w="1"/><text x="12.0241%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="11.7741%" y="773" width="0.1591%" height="15" fill="rgb(254,62,14)" fg:x="148" fg:w="2"/><text x="12.0241%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="11.8536%" y="757" width="0.0796%" height="15" fill="rgb(253,57,33)" fg:x="149" fg:w="1"/><text x="12.1036%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="11.8536%" y="741" width="0.0796%" height="15" fill="rgb(229,34,6)" fg:x="149" fg:w="1"/><text x="12.1036%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.8536%" y="725" width="0.0796%" height="15" fill="rgb(235,191,23)" fg:x="149" fg:w="1"/><text x="12.1036%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="11.8536%" y="709" width="0.0796%" height="15" fill="rgb(217,207,27)" fg:x="149" fg:w="1"/><text x="12.1036%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="11.8536%" y="693" width="0.0796%" height="15" fill="rgb(232,41,44)" fg:x="149" fg:w="1"/><text x="12.1036%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.8536%" y="677" width="0.0796%" height="15" fill="rgb(221,188,19)" fg:x="149" fg:w="1"/><text x="12.1036%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8536%" y="661" width="0.0796%" height="15" fill="rgb(245,180,45)" fg:x="149" fg:w="1"/><text x="12.1036%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.8536%" y="645" width="0.0796%" height="15" fill="rgb(250,220,42)" fg:x="149" fg:w="1"/><text x="12.1036%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8536%" y="629" width="0.0796%" height="15" fill="rgb(234,16,34)" fg:x="149" fg:w="1"/><text x="12.1036%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.8536%" y="613" width="0.0796%" height="15" fill="rgb(233,217,23)" fg:x="149" fg:w="1"/><text x="12.1036%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8536%" y="597" width="0.0796%" height="15" fill="rgb(209,22,46)" fg:x="149" fg:w="1"/><text x="12.1036%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.8536%" y="581" width="0.0796%" height="15" fill="rgb(213,101,18)" fg:x="149" fg:w="1"/><text x="12.1036%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8536%" y="565" width="0.0796%" height="15" fill="rgb(215,179,52)" fg:x="149" fg:w="1"/><text x="12.1036%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.8536%" y="549" width="0.0796%" height="15" fill="rgb(223,50,25)" fg:x="149" fg:w="1"/><text x="12.1036%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.8536%" y="533" width="0.0796%" height="15" fill="rgb(224,51,44)" fg:x="149" fg:w="1"/><text x="12.1036%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0127%" y="741" width="0.0796%" height="15" fill="rgb(224,13,54)" fg:x="151" fg:w="1"/><text x="12.2627%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="12.0923%" y="709" width="0.1591%" height="15" fill="rgb(219,58,47)" fg:x="152" fg:w="2"/><text x="12.3423%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="12.0923%" y="693" width="0.1591%" height="15" fill="rgb(246,124,34)" fg:x="152" fg:w="2"/><text x="12.3423%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="12.1718%" y="677" width="0.0796%" height="15" fill="rgb(245,109,25)" fg:x="153" fg:w="1"/><text x="12.4218%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.1718%" y="661" width="0.0796%" height="15" fill="rgb(235,48,23)" fg:x="153" fg:w="1"/><text x="12.4218%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.1718%" y="645" width="0.0796%" height="15" fill="rgb(229,203,36)" fg:x="153" fg:w="1"/><text x="12.4218%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="12.1718%" y="629" width="0.0796%" height="15" fill="rgb(234,180,9)" fg:x="153" fg:w="1"/><text x="12.4218%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.1718%" y="613" width="0.0796%" height="15" fill="rgb(228,98,45)" fg:x="153" fg:w="1"/><text x="12.4218%" y="623.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="12.2514%" y="677" width="0.0796%" height="15" fill="rgb(240,24,36)" fg:x="154" fg:w="1"/><text x="12.5014%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.2514%" y="661" width="0.0796%" height="15" fill="rgb(227,154,19)" fg:x="154" fg:w="1"/><text x="12.5014%" y="671.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.2514%" y="693" width="0.1591%" height="15" fill="rgb(231,2,48)" fg:x="154" fg:w="2"/><text x="12.5014%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="12.3309%" y="677" width="0.0796%" height="15" fill="rgb(219,216,0)" fg:x="155" fg:w="1"/><text x="12.5809%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="12.3309%" y="661" width="0.0796%" height="15" fill="rgb(251,88,0)" fg:x="155" fg:w="1"/><text x="12.5809%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.3309%" y="645" width="0.0796%" height="15" fill="rgb(242,45,45)" fg:x="155" fg:w="1"/><text x="12.5809%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.3309%" y="629" width="0.0796%" height="15" fill="rgb(218,149,45)" fg:x="155" fg:w="1"/><text x="12.5809%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.3309%" y="613" width="0.0796%" height="15" fill="rgb(247,194,10)" fg:x="155" fg:w="1"/><text x="12.5809%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.3309%" y="597" width="0.0796%" height="15" fill="rgb(234,33,37)" fg:x="155" fg:w="1"/><text x="12.5809%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.3309%" y="581" width="0.0796%" height="15" fill="rgb(218,61,13)" fg:x="155" fg:w="1"/><text x="12.5809%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.3309%" y="565" width="0.0796%" height="15" fill="rgb(210,80,52)" fg:x="155" fg:w="1"/><text x="12.5809%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::set_name (5 samples, 0.40%)</title><rect x="12.0923%" y="725" width="0.3978%" height="15" fill="rgb(218,203,27)" fg:x="152" fg:w="5"/><text x="12.3423%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::modified (3 samples, 0.24%)</title><rect x="12.2514%" y="709" width="0.2387%" height="15" fill="rgb(209,126,33)" fg:x="154" fg:w="3"/><text x="12.5014%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="12.4105%" y="693" width="0.0796%" height="15" fill="rgb(234,173,41)" fg:x="156" fg:w="1"/><text x="12.6605%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="12.4105%" y="677" width="0.0796%" height="15" fill="rgb(228,166,9)" fg:x="156" fg:w="1"/><text x="12.6605%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="12.4901%" y="725" width="0.0796%" height="15" fill="rgb(208,124,43)" fg:x="157" fg:w="1"/><text x="12.7401%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="12.4901%" y="709" width="0.0796%" height="15" fill="rgb(212,154,38)" fg:x="157" fg:w="1"/><text x="12.7401%" y="719.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="12.4901%" y="693" width="0.0796%" height="15" fill="rgb(246,179,35)" fg:x="157" fg:w="1"/><text x="12.7401%" y="703.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="12.4901%" y="677" width="0.0796%" height="15" fill="rgb(251,3,50)" fg:x="157" fg:w="1"/><text x="12.7401%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.4901%" y="661" width="0.0796%" height="15" fill="rgb(219,96,8)" fg:x="157" fg:w="1"/><text x="12.7401%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="12.4901%" y="645" width="0.0796%" height="15" fill="rgb(251,216,33)" fg:x="157" fg:w="1"/><text x="12.7401%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="12.4901%" y="629" width="0.0796%" height="15" fill="rgb(243,145,29)" fg:x="157" fg:w="1"/><text x="12.7401%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.4901%" y="613" width="0.0796%" height="15" fill="rgb(210,75,20)" fg:x="157" fg:w="1"/><text x="12.7401%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.4901%" y="597" width="0.0796%" height="15" fill="rgb(235,56,8)" fg:x="157" fg:w="1"/><text x="12.7401%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.4901%" y="581" width="0.0796%" height="15" fill="rgb(226,175,49)" fg:x="157" fg:w="1"/><text x="12.7401%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.4901%" y="565" width="0.0796%" height="15" fill="rgb(242,204,23)" fg:x="157" fg:w="1"/><text x="12.7401%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4901%" y="549" width="0.0796%" height="15" fill="rgb(225,104,24)" fg:x="157" fg:w="1"/><text x="12.7401%" y="559.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.5696%" y="661" width="0.1591%" height="15" fill="rgb(253,34,1)" fg:x="158" fg:w="2"/><text x="12.8196%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="12.6492%" y="645" width="0.0796%" height="15" fill="rgb(233,199,23)" fg:x="159" fg:w="1"/><text x="12.8992%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="12.6492%" y="629" width="0.0796%" height="15" fill="rgb(247,7,51)" fg:x="159" fg:w="1"/><text x="12.8992%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.6492%" y="613" width="0.0796%" height="15" fill="rgb(214,146,12)" fg:x="159" fg:w="1"/><text x="12.8992%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.6492%" y="597" width="0.0796%" height="15" fill="rgb(234,181,43)" fg:x="159" fg:w="1"/><text x="12.8992%" y="607.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="12.7287%" y="645" width="0.0796%" height="15" fill="rgb(239,148,6)" fg:x="160" fg:w="1"/><text x="12.9787%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="12.7287%" y="629" width="0.0796%" height="15" fill="rgb(206,151,17)" fg:x="160" fg:w="1"/><text x="12.9787%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.7287%" y="613" width="0.0796%" height="15" fill="rgb(213,215,10)" fg:x="160" fg:w="1"/><text x="12.9787%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.7287%" y="597" width="0.0796%" height="15" fill="rgb(215,220,44)" fg:x="160" fg:w="1"/><text x="12.9787%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.7287%" y="581" width="0.0796%" height="15" fill="rgb(245,205,37)" fg:x="160" fg:w="1"/><text x="12.9787%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.7287%" y="565" width="0.0796%" height="15" fill="rgb(245,130,43)" fg:x="160" fg:w="1"/><text x="12.9787%" y="575.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="12.5696%" y="677" width="0.3182%" height="15" fill="rgb(231,227,38)" fg:x="158" fg:w="4"/><text x="12.8196%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="12.7287%" y="661" width="0.1591%" height="15" fill="rgb(233,185,4)" fg:x="160" fg:w="2"/><text x="12.9787%" y="671.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="12.8083%" y="645" width="0.0796%" height="15" fill="rgb(224,154,43)" fg:x="161" fg:w="1"/><text x="13.0583%" y="655.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="12.8083%" y="629" width="0.0796%" height="15" fill="rgb(235,156,15)" fg:x="161" fg:w="1"/><text x="13.0583%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.8083%" y="613" width="0.0796%" height="15" fill="rgb(211,55,43)" fg:x="161" fg:w="1"/><text x="13.0583%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.8083%" y="597" width="0.0796%" height="15" fill="rgb(247,149,40)" fg:x="161" fg:w="1"/><text x="13.0583%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.8083%" y="581" width="0.0796%" height="15" fill="rgb(232,171,16)" fg:x="161" fg:w="1"/><text x="13.0583%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.8083%" y="565" width="0.0796%" height="15" fill="rgb(215,117,49)" fg:x="161" fg:w="1"/><text x="13.0583%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.8083%" y="549" width="0.0796%" height="15" fill="rgb(246,194,11)" fg:x="161" fg:w="1"/><text x="13.0583%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.8083%" y="533" width="0.0796%" height="15" fill="rgb(242,101,44)" fg:x="161" fg:w="1"/><text x="13.0583%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.8083%" y="517" width="0.0796%" height="15" fill="rgb(226,174,6)" fg:x="161" fg:w="1"/><text x="13.0583%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="12.5696%" y="709" width="0.3978%" height="15" fill="rgb(213,150,20)" fg:x="158" fg:w="5"/><text x="12.8196%" y="719.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="12.5696%" y="693" width="0.3978%" height="15" fill="rgb(222,124,42)" fg:x="158" fg:w="5"/><text x="12.8196%" y="703.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="12.8878%" y="677" width="0.0796%" height="15" fill="rgb(250,19,47)" fg:x="162" fg:w="1"/><text x="13.1378%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.8878%" y="661" width="0.0796%" height="15" fill="rgb(241,217,19)" fg:x="162" fg:w="1"/><text x="13.1378%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="12.9674%" y="709" width="0.0796%" height="15" fill="rgb(207,210,34)" fg:x="163" fg:w="1"/><text x="13.2174%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="12.9674%" y="693" width="0.0796%" height="15" fill="rgb(244,45,4)" fg:x="163" fg:w="1"/><text x="13.2174%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.9674%" y="677" width="0.0796%" height="15" fill="rgb(252,134,50)" fg:x="163" fg:w="1"/><text x="13.2174%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0469%" y="613" width="0.0796%" height="15" fill="rgb(238,74,2)" fg:x="164" fg:w="1"/><text x="13.2969%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0469%" y="597" width="0.0796%" height="15" fill="rgb(226,58,46)" fg:x="164" fg:w="1"/><text x="13.2969%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0469%" y="581" width="0.0796%" height="15" fill="rgb(232,83,35)" fg:x="164" fg:w="1"/><text x="13.2969%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0469%" y="565" width="0.0796%" height="15" fill="rgb(212,148,47)" fg:x="164" fg:w="1"/><text x="13.2969%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.0469%" y="661" width="0.1591%" height="15" fill="rgb(235,29,1)" fg:x="164" fg:w="2"/><text x="13.2969%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="13.0469%" y="645" width="0.1591%" height="15" fill="rgb(247,55,37)" fg:x="164" fg:w="2"/><text x="13.2969%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="13.0469%" y="629" width="0.1591%" height="15" fill="rgb(222,48,3)" fg:x="164" fg:w="2"/><text x="13.2969%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1265%" y="613" width="0.0796%" height="15" fill="rgb(234,21,33)" fg:x="165" fg:w="1"/><text x="13.3765%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1265%" y="597" width="0.0796%" height="15" fill="rgb(247,178,53)" fg:x="165" fg:w="1"/><text x="13.3765%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1265%" y="581" width="0.0796%" height="15" fill="rgb(225,75,7)" fg:x="165" fg:w="1"/><text x="13.3765%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1265%" y="565" width="0.0796%" height="15" fill="rgb(219,199,7)" fg:x="165" fg:w="1"/><text x="13.3765%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="13.0469%" y="693" width="0.2387%" height="15" fill="rgb(209,93,42)" fg:x="164" fg:w="3"/><text x="13.2969%" y="703.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="13.0469%" y="677" width="0.2387%" height="15" fill="rgb(240,175,17)" fg:x="164" fg:w="3"/><text x="13.2969%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="13.2060%" y="661" width="0.0796%" height="15" fill="rgb(232,106,7)" fg:x="166" fg:w="1"/><text x="13.4560%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="13.2060%" y="645" width="0.0796%" height="15" fill="rgb(242,106,43)" fg:x="166" fg:w="1"/><text x="13.4560%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="13.2060%" y="629" width="0.0796%" height="15" fill="rgb(242,61,37)" fg:x="166" fg:w="1"/><text x="13.4560%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2060%" y="613" width="0.0796%" height="15" fill="rgb(205,72,10)" fg:x="166" fg:w="1"/><text x="13.4560%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2060%" y="597" width="0.0796%" height="15" fill="rgb(214,184,36)" fg:x="166" fg:w="1"/><text x="13.4560%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2060%" y="581" width="0.0796%" height="15" fill="rgb(206,107,18)" fg:x="166" fg:w="1"/><text x="13.4560%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2060%" y="565" width="0.0796%" height="15" fill="rgb(210,75,5)" fg:x="166" fg:w="1"/><text x="13.4560%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (18 samples, 1.43%)</title><rect x="11.9332%" y="773" width="1.4320%" height="15" fill="rgb(205,3,19)" fg:x="150" fg:w="18"/><text x="12.1832%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 1.43%)</title><rect x="11.9332%" y="757" width="1.4320%" height="15" fill="rgb(207,181,42)" fg:x="150" fg:w="18"/><text x="12.1832%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (16 samples, 1.27%)</title><rect x="12.0923%" y="741" width="1.2729%" height="15" fill="rgb(229,179,43)" fg:x="152" fg:w="16"/><text x="12.3423%" y="751.50"></text></g><g><title>plugins_core::build::Build::leads_to (10 samples, 0.80%)</title><rect x="12.5696%" y="725" width="0.7955%" height="15" fill="rgb(246,95,30)" fg:x="158" fg:w="10"/><text x="12.8196%" y="735.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="13.0469%" y="709" width="0.3182%" height="15" fill="rgb(234,144,45)" fg:x="164" fg:w="4"/><text x="13.2969%" y="719.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="13.2856%" y="693" width="0.0796%" height="15" fill="rgb(250,54,25)" fg:x="167" fg:w="1"/><text x="13.5356%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="13.2856%" y="677" width="0.0796%" height="15" fill="rgb(215,195,40)" fg:x="167" fg:w="1"/><text x="13.5356%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.2856%" y="661" width="0.0796%" height="15" fill="rgb(233,188,42)" fg:x="167" fg:w="1"/><text x="13.5356%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="13.3652%" y="741" width="0.0796%" height="15" fill="rgb(247,227,35)" fg:x="168" fg:w="1"/><text x="13.6152%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="13.3652%" y="725" width="0.0796%" height="15" fill="rgb(249,124,27)" fg:x="168" fg:w="1"/><text x="13.6152%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.3652%" y="709" width="0.0796%" height="15" fill="rgb(219,207,25)" fg:x="168" fg:w="1"/><text x="13.6152%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="13.4447%" y="709" width="0.0796%" height="15" fill="rgb(241,216,47)" fg:x="169" fg:w="1"/><text x="13.6947%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4447%" y="693" width="0.0796%" height="15" fill="rgb(233,82,50)" fg:x="169" fg:w="1"/><text x="13.6947%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4447%" y="677" width="0.0796%" height="15" fill="rgb(232,63,2)" fg:x="169" fg:w="1"/><text x="13.6947%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.4447%" y="661" width="0.0796%" height="15" fill="rgb(236,184,28)" fg:x="169" fg:w="1"/><text x="13.6947%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.4447%" y="645" width="0.0796%" height="15" fill="rgb(254,63,27)" fg:x="169" fg:w="1"/><text x="13.6947%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.4447%" y="629" width="0.0796%" height="15" fill="rgb(253,106,28)" fg:x="169" fg:w="1"/><text x="13.6947%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.4447%" y="613" width="0.0796%" height="15" fill="rgb(225,141,39)" fg:x="169" fg:w="1"/><text x="13.6947%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.4447%" y="597" width="0.0796%" height="15" fill="rgb(222,157,20)" fg:x="169" fg:w="1"/><text x="13.6947%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="13.4447%" y="741" width="0.1591%" height="15" fill="rgb(210,190,9)" fg:x="169" fg:w="2"/><text x="13.6947%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="13.4447%" y="725" width="0.1591%" height="15" fill="rgb(242,167,7)" fg:x="169" fg:w="2"/><text x="13.6947%" y="735.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="13.5243%" y="709" width="0.0796%" height="15" fill="rgb(227,82,41)" fg:x="170" fg:w="1"/><text x="13.7743%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5243%" y="693" width="0.0796%" height="15" fill="rgb(222,131,13)" fg:x="170" fg:w="1"/><text x="13.7743%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="13.6038%" y="661" width="0.0796%" height="15" fill="rgb(221,98,26)" fg:x="171" fg:w="1"/><text x="13.8538%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="13.6038%" y="645" width="0.0796%" height="15" fill="rgb(251,63,52)" fg:x="171" fg:w="1"/><text x="13.8538%" y="655.50"></text></g><g><title>engine::identifiers::model::set_gid (2 samples, 0.16%)</title><rect x="13.6038%" y="741" width="0.1591%" height="15" fill="rgb(246,25,43)" fg:x="171" fg:w="2"/><text x="13.8538%" y="751.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="13.6038%" y="725" width="0.1591%" height="15" fill="rgb(247,167,15)" fg:x="171" fg:w="2"/><text x="13.8538%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="13.6038%" y="709" width="0.1591%" height="15" fill="rgb(240,104,42)" fg:x="171" fg:w="2"/><text x="13.8538%" y="719.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="13.6038%" y="693" width="0.1591%" height="15" fill="rgb(224,54,6)" fg:x="171" fg:w="2"/><text x="13.8538%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.6038%" y="677" width="0.1591%" height="15" fill="rgb(244,108,35)" fg:x="171" fg:w="2"/><text x="13.8538%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6834%" y="661" width="0.0796%" height="15" fill="rgb(216,154,2)" fg:x="172" fg:w="1"/><text x="13.9334%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6834%" y="645" width="0.0796%" height="15" fill="rgb(222,8,47)" fg:x="172" fg:w="1"/><text x="13.9334%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="13.6834%" y="629" width="0.0796%" height="15" fill="rgb(252,93,1)" fg:x="172" fg:w="1"/><text x="13.9334%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8425%" y="597" width="0.0796%" height="15" fill="rgb(223,226,51)" fg:x="174" fg:w="1"/><text x="14.0925%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.8425%" y="581" width="0.0796%" height="15" fill="rgb(206,147,9)" fg:x="174" fg:w="1"/><text x="14.0925%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.8425%" y="565" width="0.0796%" height="15" fill="rgb(248,180,41)" fg:x="174" fg:w="1"/><text x="14.0925%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.8425%" y="549" width="0.0796%" height="15" fill="rgb(209,47,50)" fg:x="174" fg:w="1"/><text x="14.0925%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.8425%" y="533" width="0.0796%" height="15" fill="rgb(243,65,31)" fg:x="174" fg:w="1"/><text x="14.0925%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.8425%" y="517" width="0.0796%" height="15" fill="rgb(228,128,1)" fg:x="174" fg:w="1"/><text x="14.0925%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.8425%" y="501" width="0.0796%" height="15" fill="rgb(231,192,16)" fg:x="174" fg:w="1"/><text x="14.0925%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.8425%" y="485" width="0.0796%" height="15" fill="rgb(224,26,40)" fg:x="174" fg:w="1"/><text x="14.0925%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.8425%" y="469" width="0.0796%" height="15" fill="rgb(214,192,17)" fg:x="174" fg:w="1"/><text x="14.0925%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.8425%" y="453" width="0.0796%" height="15" fill="rgb(225,147,18)" fg:x="174" fg:w="1"/><text x="14.0925%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.8425%" y="437" width="0.0796%" height="15" fill="rgb(205,35,11)" fg:x="174" fg:w="1"/><text x="14.0925%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.8425%" y="421" width="0.0796%" height="15" fill="rgb(242,40,42)" fg:x="174" fg:w="1"/><text x="14.0925%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8425%" y="405" width="0.0796%" height="15" fill="rgb(250,170,13)" fg:x="174" fg:w="1"/><text x="14.0925%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9220%" y="597" width="0.0796%" height="15" fill="rgb(240,161,28)" fg:x="175" fg:w="1"/><text x="14.1720%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9220%" y="581" width="0.0796%" height="15" fill="rgb(245,179,12)" fg:x="175" fg:w="1"/><text x="14.1720%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9220%" y="565" width="0.0796%" height="15" fill="rgb(250,92,32)" fg:x="175" fg:w="1"/><text x="14.1720%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9220%" y="549" width="0.0796%" height="15" fill="rgb(233,10,40)" fg:x="175" fg:w="1"/><text x="14.1720%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9220%" y="533" width="0.0796%" height="15" fill="rgb(217,98,1)" fg:x="175" fg:w="1"/><text x="14.1720%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9220%" y="517" width="0.0796%" height="15" fill="rgb(238,202,7)" fg:x="175" fg:w="1"/><text x="14.1720%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9220%" y="501" width="0.0796%" height="15" fill="rgb(222,91,3)" fg:x="175" fg:w="1"/><text x="14.1720%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.9220%" y="485" width="0.0796%" height="15" fill="rgb(211,170,49)" fg:x="175" fg:w="1"/><text x="14.1720%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.9220%" y="469" width="0.0796%" height="15" fill="rgb(253,139,18)" fg:x="175" fg:w="1"/><text x="14.1720%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.9220%" y="453" width="0.0796%" height="15" fill="rgb(222,4,43)" fg:x="175" fg:w="1"/><text x="14.1720%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.9220%" y="437" width="0.0796%" height="15" fill="rgb(207,205,12)" fg:x="175" fg:w="1"/><text x="14.1720%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9220%" y="421" width="0.0796%" height="15" fill="rgb(216,159,46)" fg:x="175" fg:w="1"/><text x="14.1720%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="13.7629%" y="645" width="0.3182%" height="15" fill="rgb(236,115,1)" fg:x="173" fg:w="4"/><text x="14.0129%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="13.7629%" y="629" width="0.3182%" height="15" fill="rgb(251,35,33)" fg:x="173" fg:w="4"/><text x="14.0129%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="13.7629%" y="613" width="0.3182%" height="15" fill="rgb(248,62,51)" fg:x="173" fg:w="4"/><text x="14.0129%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0016%" y="597" width="0.0796%" height="15" fill="rgb(254,180,19)" fg:x="176" fg:w="1"/><text x="14.2516%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="13.7629%" y="661" width="0.4773%" height="15" fill="rgb(217,100,32)" fg:x="173" fg:w="6"/><text x="14.0129%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.0811%" y="645" width="0.1591%" height="15" fill="rgb(224,71,22)" fg:x="177" fg:w="2"/><text x="14.3311%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="14.2403%" y="565" width="0.0796%" height="15" fill="rgb(251,185,33)" fg:x="179" fg:w="1"/><text x="14.4903%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.2403%" y="549" width="0.0796%" height="15" fill="rgb(209,75,48)" fg:x="179" fg:w="1"/><text x="14.4903%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3198%" y="565" width="0.0796%" height="15" fill="rgb(253,190,16)" fg:x="180" fg:w="1"/><text x="14.5698%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.3198%" y="549" width="0.0796%" height="15" fill="rgb(226,140,1)" fg:x="180" fg:w="1"/><text x="14.5698%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.3198%" y="533" width="0.0796%" height="15" fill="rgb(206,75,30)" fg:x="180" fg:w="1"/><text x="14.5698%" y="543.50"></text></g><g><title>kernel::model::scopes::load_props (10 samples, 0.80%)</title><rect x="13.7629%" y="693" width="0.7955%" height="15" fill="rgb(231,208,37)" fg:x="173" fg:w="10"/><text x="14.0129%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (10 samples, 0.80%)</title><rect x="13.7629%" y="677" width="0.7955%" height="15" fill="rgb(238,136,40)" fg:x="173" fg:w="10"/><text x="14.0129%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="14.2403%" y="661" width="0.3182%" height="15" fill="rgb(247,137,17)" fg:x="179" fg:w="4"/><text x="14.4903%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="14.2403%" y="645" width="0.3182%" height="15" fill="rgb(240,60,40)" fg:x="179" fg:w="4"/><text x="14.4903%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="14.2403%" y="629" width="0.3182%" height="15" fill="rgb(236,68,50)" fg:x="179" fg:w="4"/><text x="14.4903%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="14.2403%" y="613" width="0.3182%" height="15" fill="rgb(230,42,12)" fg:x="179" fg:w="4"/><text x="14.4903%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="14.2403%" y="597" width="0.3182%" height="15" fill="rgb(219,16,16)" fg:x="179" fg:w="4"/><text x="14.4903%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="14.2403%" y="581" width="0.3182%" height="15" fill="rgb(220,38,35)" fg:x="179" fg:w="4"/><text x="14.4903%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.3994%" y="565" width="0.1591%" height="15" fill="rgb(228,33,1)" fg:x="181" fg:w="2"/><text x="14.6494%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4789%" y="549" width="0.0796%" height="15" fill="rgb(241,46,31)" fg:x="182" fg:w="1"/><text x="14.7289%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4789%" y="533" width="0.0796%" height="15" fill="rgb(232,58,20)" fg:x="182" fg:w="1"/><text x="14.7289%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4789%" y="517" width="0.0796%" height="15" fill="rgb(206,228,53)" fg:x="182" fg:w="1"/><text x="14.7289%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.4789%" y="501" width="0.0796%" height="15" fill="rgb(206,88,33)" fg:x="182" fg:w="1"/><text x="14.7289%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.7176%" y="677" width="0.0796%" height="15" fill="rgb(238,69,7)" fg:x="185" fg:w="1"/><text x="14.9676%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.7971%" y="629" width="0.0796%" height="15" fill="rgb(250,21,46)" fg:x="186" fg:w="1"/><text x="15.0471%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.9562%" y="581" width="0.0796%" height="15" fill="rgb(215,212,21)" fg:x="188" fg:w="1"/><text x="15.2062%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="14.7971%" y="661" width="0.3182%" height="15" fill="rgb(211,35,12)" fg:x="186" fg:w="4"/><text x="15.0471%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="14.7971%" y="645" width="0.3182%" height="15" fill="rgb(231,184,16)" fg:x="186" fg:w="4"/><text x="15.0471%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="14.8767%" y="629" width="0.2387%" height="15" fill="rgb(242,140,15)" fg:x="187" fg:w="3"/><text x="15.1267%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="14.8767%" y="613" width="0.2387%" height="15" fill="rgb(220,37,14)" fg:x="187" fg:w="3"/><text x="15.1267%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="14.8767%" y="597" width="0.2387%" height="15" fill="rgb(223,146,22)" fg:x="187" fg:w="3"/><text x="15.1267%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.0358%" y="581" width="0.0796%" height="15" fill="rgb(216,132,15)" fg:x="189" fg:w="1"/><text x="15.2858%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.0358%" y="565" width="0.0796%" height="15" fill="rgb(248,83,5)" fg:x="189" fg:w="1"/><text x="15.2858%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (18 samples, 1.43%)</title><rect x="13.7629%" y="709" width="1.4320%" height="15" fill="rgb(231,206,48)" fg:x="173" fg:w="18"/><text x="14.0129%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (8 samples, 0.64%)</title><rect x="14.5585%" y="693" width="0.6364%" height="15" fill="rgb(253,185,37)" fg:x="183" fg:w="8"/><text x="14.8085%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.40%)</title><rect x="14.7971%" y="677" width="0.3978%" height="15" fill="rgb(208,21,44)" fg:x="186" fg:w="5"/><text x="15.0471%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.1154%" y="661" width="0.0796%" height="15" fill="rgb(236,125,4)" fg:x="190" fg:w="1"/><text x="15.3654%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.1154%" y="645" width="0.0796%" height="15" fill="rgb(226,134,25)" fg:x="190" fg:w="1"/><text x="15.3654%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.1154%" y="629" width="0.0796%" height="15" fill="rgb(250,201,12)" fg:x="190" fg:w="1"/><text x="15.3654%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.1154%" y="613" width="0.0796%" height="15" fill="rgb(225,92,18)" fg:x="190" fg:w="1"/><text x="15.3654%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.1154%" y="597" width="0.0796%" height="15" fill="rgb(227,35,22)" fg:x="190" fg:w="1"/><text x="15.3654%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.1154%" y="581" width="0.0796%" height="15" fill="rgb(214,180,52)" fg:x="190" fg:w="1"/><text x="15.3654%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1154%" y="565" width="0.0796%" height="15" fill="rgb(233,55,38)" fg:x="190" fg:w="1"/><text x="15.3654%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.3540%" y="677" width="0.0796%" height="15" fill="rgb(249,171,43)" fg:x="193" fg:w="1"/><text x="15.6040%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.3540%" y="661" width="0.0796%" height="15" fill="rgb(239,87,2)" fg:x="193" fg:w="1"/><text x="15.6040%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="15.2745%" y="693" width="0.2387%" height="15" fill="rgb(248,141,5)" fg:x="192" fg:w="3"/><text x="15.5245%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.4336%" y="677" width="0.0796%" height="15" fill="rgb(238,33,42)" fg:x="194" fg:w="1"/><text x="15.6836%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.4336%" y="661" width="0.0796%" height="15" fill="rgb(231,57,19)" fg:x="194" fg:w="1"/><text x="15.6836%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.4336%" y="645" width="0.0796%" height="15" fill="rgb(214,78,53)" fg:x="194" fg:w="1"/><text x="15.6836%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.7518%" y="629" width="0.1591%" height="15" fill="rgb(206,132,29)" fg:x="198" fg:w="2"/><text x="16.0018%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.8313%" y="613" width="0.0796%" height="15" fill="rgb(248,174,31)" fg:x="199" fg:w="1"/><text x="16.0813%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.8313%" y="597" width="0.0796%" height="15" fill="rgb(221,87,13)" fg:x="199" fg:w="1"/><text x="16.0813%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.8313%" y="581" width="0.0796%" height="15" fill="rgb(223,197,17)" fg:x="199" fg:w="1"/><text x="16.0813%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="15.6722%" y="677" width="0.3182%" height="15" fill="rgb(220,144,50)" fg:x="197" fg:w="4"/><text x="15.9222%" y="687.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="15.6722%" y="661" width="0.3182%" height="15" fill="rgb(244,201,11)" fg:x="197" fg:w="4"/><text x="15.9222%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="15.7518%" y="645" width="0.2387%" height="15" fill="rgb(249,81,34)" fg:x="198" fg:w="3"/><text x="16.0018%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.9109%" y="629" width="0.0796%" height="15" fill="rgb(205,161,12)" fg:x="200" fg:w="1"/><text x="16.1609%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="16.0700%" y="661" width="0.1591%" height="15" fill="rgb(252,139,50)" fg:x="202" fg:w="2"/><text x="16.3200%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="16.0700%" y="645" width="0.1591%" height="15" fill="rgb(205,169,14)" fg:x="202" fg:w="2"/><text x="16.3200%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.0700%" y="629" width="0.1591%" height="15" fill="rgb(248,198,33)" fg:x="202" fg:w="2"/><text x="16.3200%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.0700%" y="613" width="0.1591%" height="15" fill="rgb(236,23,21)" fg:x="202" fg:w="2"/><text x="16.3200%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.0700%" y="597" width="0.1591%" height="15" fill="rgb(231,13,38)" fg:x="202" fg:w="2"/><text x="16.3200%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.0700%" y="581" width="0.1591%" height="15" fill="rgb(239,139,21)" fg:x="202" fg:w="2"/><text x="16.3200%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.2291%" y="661" width="0.1591%" height="15" fill="rgb(222,164,45)" fg:x="204" fg:w="2"/><text x="16.4791%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.3087%" y="645" width="0.0796%" height="15" fill="rgb(230,52,27)" fg:x="205" fg:w="1"/><text x="16.5587%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.3087%" y="629" width="0.0796%" height="15" fill="rgb(227,143,42)" fg:x="205" fg:w="1"/><text x="16.5587%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="16.3087%" y="613" width="0.0796%" height="15" fill="rgb(249,127,1)" fg:x="205" fg:w="1"/><text x="16.5587%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="16.3882%" y="645" width="0.2387%" height="15" fill="rgb(243,107,26)" fg:x="206" fg:w="3"/><text x="16.6382%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.4678%" y="629" width="0.1591%" height="15" fill="rgb(225,7,45)" fg:x="207" fg:w="2"/><text x="16.7178%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.5473%" y="613" width="0.0796%" height="15" fill="rgb(241,88,38)" fg:x="208" fg:w="1"/><text x="16.7973%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5473%" y="597" width="0.0796%" height="15" fill="rgb(226,121,9)" fg:x="208" fg:w="1"/><text x="16.7973%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.6269%" y="613" width="0.0796%" height="15" fill="rgb(253,60,29)" fg:x="209" fg:w="1"/><text x="16.8769%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.6269%" y="597" width="0.0796%" height="15" fill="rgb(244,181,39)" fg:x="209" fg:w="1"/><text x="16.8769%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.6269%" y="581" width="0.0796%" height="15" fill="rgb(252,203,31)" fg:x="209" fg:w="1"/><text x="16.8769%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.7064%" y="597" width="0.0796%" height="15" fill="rgb(224,120,8)" fg:x="210" fg:w="1"/><text x="16.9564%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.7064%" y="581" width="0.0796%" height="15" fill="rgb(205,171,54)" fg:x="210" fg:w="1"/><text x="16.9564%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="16.6269%" y="645" width="0.2387%" height="15" fill="rgb(235,89,11)" fg:x="209" fg:w="3"/><text x="16.8769%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="16.6269%" y="629" width="0.2387%" height="15" fill="rgb(212,180,28)" fg:x="209" fg:w="3"/><text x="16.8769%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="16.7064%" y="613" width="0.1591%" height="15" fill="rgb(247,84,49)" fg:x="210" fg:w="2"/><text x="16.9564%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.7860%" y="597" width="0.0796%" height="15" fill="rgb(236,187,52)" fg:x="211" fg:w="1"/><text x="17.0360%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.7860%" y="581" width="0.0796%" height="15" fill="rgb(227,24,15)" fg:x="211" fg:w="1"/><text x="17.0360%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.95%)</title><rect x="15.9905%" y="677" width="0.9547%" height="15" fill="rgb(227,211,13)" fg:x="201" fg:w="12"/><text x="16.2405%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="16.3882%" y="661" width="0.5569%" height="15" fill="rgb(245,52,14)" fg:x="206" fg:w="7"/><text x="16.6382%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.8656%" y="645" width="0.0796%" height="15" fill="rgb(225,185,13)" fg:x="212" fg:w="1"/><text x="17.1156%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.8656%" y="629" width="0.0796%" height="15" fill="rgb(217,160,29)" fg:x="212" fg:w="1"/><text x="17.1156%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.91%)</title><rect x="15.1949%" y="709" width="1.9093%" height="15" fill="rgb(216,115,53)" fg:x="191" fg:w="24"/><text x="15.4449%" y="719.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.59%)</title><rect x="15.5131%" y="693" width="1.5911%" height="15" fill="rgb(236,99,5)" fg:x="195" fg:w="20"/><text x="15.7631%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.9451%" y="677" width="0.1591%" height="15" fill="rgb(222,60,38)" fg:x="213" fg:w="2"/><text x="17.1951%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.9451%" y="661" width="0.1591%" height="15" fill="rgb(212,82,22)" fg:x="213" fg:w="2"/><text x="17.1951%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.9451%" y="645" width="0.1591%" height="15" fill="rgb(214,48,28)" fg:x="213" fg:w="2"/><text x="17.1951%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.0247%" y="629" width="0.0796%" height="15" fill="rgb(245,196,50)" fg:x="214" fg:w="1"/><text x="17.2747%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.0247%" y="613" width="0.0796%" height="15" fill="rgb(225,159,46)" fg:x="214" fg:w="1"/><text x="17.2747%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.0247%" y="597" width="0.0796%" height="15" fill="rgb(207,195,48)" fg:x="214" fg:w="1"/><text x="17.2747%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.1042%" y="677" width="0.1591%" height="15" fill="rgb(240,73,3)" fg:x="215" fg:w="2"/><text x="17.3542%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2633%" y="661" width="0.0796%" height="15" fill="rgb(245,57,23)" fg:x="217" fg:w="1"/><text x="17.5133%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="17.3429%" y="661" width="0.2387%" height="15" fill="rgb(240,75,18)" fg:x="218" fg:w="3"/><text x="17.5929%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.4224%" y="645" width="0.1591%" height="15" fill="rgb(238,168,12)" fg:x="219" fg:w="2"/><text x="17.6724%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.5815%" y="645" width="0.0796%" height="15" fill="rgb(226,20,40)" fg:x="221" fg:w="1"/><text x="17.8315%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5815%" y="629" width="0.0796%" height="15" fill="rgb(224,130,35)" fg:x="221" fg:w="1"/><text x="17.8315%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="17.1042%" y="709" width="0.7160%" height="15" fill="rgb(225,63,41)" fg:x="215" fg:w="9"/><text x="17.3542%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="17.1042%" y="693" width="0.7160%" height="15" fill="rgb(219,3,3)" fg:x="215" fg:w="9"/><text x="17.3542%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="17.2633%" y="677" width="0.5569%" height="15" fill="rgb(218,157,4)" fg:x="217" fg:w="7"/><text x="17.5133%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="17.5815%" y="661" width="0.2387%" height="15" fill="rgb(232,76,36)" fg:x="221" fg:w="3"/><text x="17.8315%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="17.6611%" y="645" width="0.1591%" height="15" fill="rgb(247,36,0)" fg:x="222" fg:w="2"/><text x="17.9111%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="17.7407%" y="629" width="0.0796%" height="15" fill="rgb(205,2,34)" fg:x="223" fg:w="1"/><text x="17.9907%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.7407%" y="613" width="0.0796%" height="15" fill="rgb(239,136,13)" fg:x="223" fg:w="1"/><text x="17.9907%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7407%" y="597" width="0.0796%" height="15" fill="rgb(253,122,12)" fg:x="223" fg:w="1"/><text x="17.9907%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="17.9793%" y="661" width="0.0796%" height="15" fill="rgb(222,174,7)" fg:x="226" fg:w="1"/><text x="18.2293%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="18.0589%" y="661" width="0.2387%" height="15" fill="rgb(208,191,42)" fg:x="227" fg:w="3"/><text x="18.3089%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.1384%" y="645" width="0.1591%" height="15" fill="rgb(237,212,15)" fg:x="228" fg:w="2"/><text x="18.3884%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.1384%" y="629" width="0.1591%" height="15" fill="rgb(215,65,20)" fg:x="228" fg:w="2"/><text x="18.3884%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.2180%" y="613" width="0.0796%" height="15" fill="rgb(232,103,11)" fg:x="229" fg:w="1"/><text x="18.4680%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="18.2180%" y="597" width="0.0796%" height="15" fill="rgb(235,148,18)" fg:x="229" fg:w="1"/><text x="18.4680%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.2975%" y="645" width="0.0796%" height="15" fill="rgb(240,173,7)" fg:x="230" fg:w="1"/><text x="18.5475%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="18.3771%" y="645" width="0.2387%" height="15" fill="rgb(228,182,25)" fg:x="231" fg:w="3"/><text x="18.6271%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="18.3771%" y="629" width="0.2387%" height="15" fill="rgb(247,3,52)" fg:x="231" fg:w="3"/><text x="18.6271%" y="639.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="18.3771%" y="613" width="0.2387%" height="15" fill="rgb(226,155,8)" fg:x="231" fg:w="3"/><text x="18.6271%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.6158%" y="613" width="0.0796%" height="15" fill="rgb(243,195,38)" fg:x="234" fg:w="1"/><text x="18.8658%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.6158%" y="597" width="0.0796%" height="15" fill="rgb(254,181,33)" fg:x="234" fg:w="1"/><text x="18.8658%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.6158%" y="581" width="0.0796%" height="15" fill="rgb(232,98,23)" fg:x="234" fg:w="1"/><text x="18.8658%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.9340%" y="581" width="0.1591%" height="15" fill="rgb(205,23,10)" fg:x="238" fg:w="2"/><text x="19.1840%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="18.6158%" y="629" width="0.5569%" height="15" fill="rgb(212,124,38)" fg:x="234" fg:w="7"/><text x="18.8658%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="18.6953%" y="613" width="0.4773%" height="15" fill="rgb(228,207,2)" fg:x="235" fg:w="6"/><text x="18.9453%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="18.8544%" y="597" width="0.3182%" height="15" fill="rgb(215,120,22)" fg:x="237" fg:w="4"/><text x="19.1044%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.0931%" y="581" width="0.0796%" height="15" fill="rgb(251,172,33)" fg:x="240" fg:w="1"/><text x="19.3431%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.0931%" y="565" width="0.0796%" height="15" fill="rgb(250,83,2)" fg:x="240" fg:w="1"/><text x="19.3431%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.0931%" y="549" width="0.0796%" height="15" fill="rgb(210,132,53)" fg:x="240" fg:w="1"/><text x="19.3431%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.0931%" y="533" width="0.0796%" height="15" fill="rgb(221,208,36)" fg:x="240" fg:w="1"/><text x="19.3431%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0931%" y="517" width="0.0796%" height="15" fill="rgb(205,192,46)" fg:x="240" fg:w="1"/><text x="19.3431%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (18 samples, 1.43%)</title><rect x="17.8202%" y="693" width="1.4320%" height="15" fill="rgb(223,163,14)" fg:x="224" fg:w="18"/><text x="18.0702%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.35%)</title><rect x="17.8998%" y="677" width="1.3524%" height="15" fill="rgb(218,41,28)" fg:x="225" fg:w="17"/><text x="18.1498%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.95%)</title><rect x="18.2975%" y="661" width="0.9547%" height="15" fill="rgb(235,104,10)" fg:x="230" fg:w="12"/><text x="18.5475%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (8 samples, 0.64%)</title><rect x="18.6158%" y="645" width="0.6364%" height="15" fill="rgb(246,17,4)" fg:x="234" fg:w="8"/><text x="18.8658%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="19.1726%" y="629" width="0.0796%" height="15" fill="rgb(240,7,16)" fg:x="241" fg:w="1"/><text x="19.4226%" y="639.50"></text></g><g><title>engine::session::Session::flush (75 samples, 5.97%)</title><rect x="13.3652%" y="773" width="5.9666%" height="15" fill="rgb(213,160,23)" fg:x="168" fg:w="75"/><text x="13.6152%" y="783.50">engine::..</text></g><g><title>engine::session::Session::save_entity_changes (75 samples, 5.97%)</title><rect x="13.3652%" y="757" width="5.9666%" height="15" fill="rgb(251,179,49)" fg:x="168" fg:w="75"/><text x="13.6152%" y="767.50">engine::..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (70 samples, 5.57%)</title><rect x="13.7629%" y="741" width="5.5688%" height="15" fill="rgb(247,198,10)" fg:x="173" fg:w="70"/><text x="14.0129%" y="751.50">engine:..</text></g><g><title>engine::session::SavesEntities::check_for_changes (70 samples, 5.57%)</title><rect x="13.7629%" y="725" width="5.5688%" height="15" fill="rgb(220,65,29)" fg:x="173" fg:w="70"/><text x="14.0129%" y="735.50">engine:..</text></g><g><title>kernel::compare::any_entity_changes (19 samples, 1.51%)</title><rect x="17.8202%" y="709" width="1.5115%" height="15" fill="rgb(237,171,28)" fg:x="224" fg:w="19"/><text x="18.0702%" y="719.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="19.2522%" y="693" width="0.0796%" height="15" fill="rgb(228,44,26)" fg:x="242" fg:w="1"/><text x="19.5022%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::set_key (1 samples, 0.08%)</title><rect x="19.3317%" y="773" width="0.0796%" height="15" fill="rgb(216,210,27)" fg:x="243" fg:w="1"/><text x="19.5817%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="19.3317%" y="757" width="0.0796%" height="15" fill="rgb(252,10,17)" fg:x="243" fg:w="1"/><text x="19.5817%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3317%" y="741" width="0.0796%" height="15" fill="rgb(214,172,30)" fg:x="243" fg:w="1"/><text x="19.5817%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3317%" y="725" width="0.0796%" height="15" fill="rgb(253,130,48)" fg:x="243" fg:w="1"/><text x="19.5817%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.3317%" y="709" width="0.0796%" height="15" fill="rgb(226,99,43)" fg:x="243" fg:w="1"/><text x="19.5817%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.3317%" y="693" width="0.0796%" height="15" fill="rgb(239,111,26)" fg:x="243" fg:w="1"/><text x="19.5817%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.3317%" y="677" width="0.0796%" height="15" fill="rgb(240,27,53)" fg:x="243" fg:w="1"/><text x="19.5817%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::set_name (4 samples, 0.32%)</title><rect x="19.4113%" y="773" width="0.3182%" height="15" fill="rgb(254,163,12)" fg:x="244" fg:w="4"/><text x="19.6613%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::modified (4 samples, 0.32%)</title><rect x="19.4113%" y="757" width="0.3182%" height="15" fill="rgb(225,51,48)" fg:x="244" fg:w="4"/><text x="19.6613%" y="767.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="19.4113%" y="741" width="0.3182%" height="15" fill="rgb(205,19,32)" fg:x="244" fg:w="4"/><text x="19.6613%" y="751.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.32%)</title><rect x="19.4113%" y="725" width="0.3182%" height="15" fill="rgb(218,119,26)" fg:x="244" fg:w="4"/><text x="19.6613%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="19.4113%" y="709" width="0.3182%" height="15" fill="rgb(231,173,33)" fg:x="244" fg:w="4"/><text x="19.6613%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="19.4909%" y="693" width="0.2387%" height="15" fill="rgb(241,100,29)" fg:x="245" fg:w="3"/><text x="19.7409%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.4909%" y="677" width="0.2387%" height="15" fill="rgb(250,194,34)" fg:x="245" fg:w="3"/><text x="19.7409%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="19.4909%" y="661" width="0.2387%" height="15" fill="rgb(215,23,50)" fg:x="245" fg:w="3"/><text x="19.7409%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.4909%" y="645" width="0.2387%" height="15" fill="rgb(206,49,37)" fg:x="245" fg:w="3"/><text x="19.7409%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.5704%" y="629" width="0.1591%" height="15" fill="rgb(247,39,21)" fg:x="246" fg:w="2"/><text x="19.8204%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.5704%" y="613" width="0.1591%" height="15" fill="rgb(209,220,15)" fg:x="246" fg:w="2"/><text x="19.8204%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.5704%" y="597" width="0.1591%" height="15" fill="rgb(206,41,33)" fg:x="246" fg:w="2"/><text x="19.8204%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6500%" y="581" width="0.0796%" height="15" fill="rgb(221,225,45)" fg:x="247" fg:w="1"/><text x="19.9000%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.6500%" y="565" width="0.0796%" height="15" fill="rgb(216,27,18)" fg:x="247" fg:w="1"/><text x="19.9000%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7295%" y="661" width="0.0796%" height="15" fill="rgb(250,193,34)" fg:x="248" fg:w="1"/><text x="19.9795%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7295%" y="645" width="0.0796%" height="15" fill="rgb(227,215,20)" fg:x="248" fg:w="1"/><text x="19.9795%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7295%" y="629" width="0.0796%" height="15" fill="rgb(242,211,27)" fg:x="248" fg:w="1"/><text x="19.9795%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7295%" y="613" width="0.0796%" height="15" fill="rgb(229,190,30)" fg:x="248" fg:w="1"/><text x="19.9795%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.8091%" y="533" width="0.0796%" height="15" fill="rgb(253,31,29)" fg:x="249" fg:w="1"/><text x="20.0591%" y="543.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="19.7295%" y="709" width="0.2387%" height="15" fill="rgb(229,177,52)" fg:x="248" fg:w="3"/><text x="19.9795%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="19.7295%" y="693" width="0.2387%" height="15" fill="rgb(226,88,8)" fg:x="248" fg:w="3"/><text x="19.9795%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="19.7295%" y="677" width="0.2387%" height="15" fill="rgb(214,55,27)" fg:x="248" fg:w="3"/><text x="19.9795%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.8091%" y="661" width="0.1591%" height="15" fill="rgb(233,202,5)" fg:x="249" fg:w="2"/><text x="20.0591%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.8091%" y="645" width="0.1591%" height="15" fill="rgb(251,49,30)" fg:x="249" fg:w="2"/><text x="20.0591%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.8091%" y="629" width="0.1591%" height="15" fill="rgb(235,18,52)" fg:x="249" fg:w="2"/><text x="20.0591%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.8091%" y="613" width="0.1591%" height="15" fill="rgb(250,111,51)" fg:x="249" fg:w="2"/><text x="20.0591%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.8091%" y="597" width="0.1591%" height="15" fill="rgb(218,13,25)" fg:x="249" fg:w="2"/><text x="20.0591%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.8091%" y="581" width="0.1591%" height="15" fill="rgb(248,96,7)" fg:x="249" fg:w="2"/><text x="20.0591%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.8091%" y="565" width="0.1591%" height="15" fill="rgb(217,31,15)" fg:x="249" fg:w="2"/><text x="20.0591%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.8091%" y="549" width="0.1591%" height="15" fill="rgb(228,59,49)" fg:x="249" fg:w="2"/><text x="20.0591%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.8886%" y="533" width="0.0796%" height="15" fill="rgb(210,152,38)" fg:x="250" fg:w="1"/><text x="20.1386%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.8886%" y="517" width="0.0796%" height="15" fill="rgb(206,71,11)" fg:x="250" fg:w="1"/><text x="20.1386%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="19.8886%" y="501" width="0.0796%" height="15" fill="rgb(244,199,5)" fg:x="250" fg:w="1"/><text x="20.1386%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="19.8886%" y="485" width="0.0796%" height="15" fill="rgb(253,49,1)" fg:x="250" fg:w="1"/><text x="20.1386%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="19.9682%" y="693" width="0.0796%" height="15" fill="rgb(225,206,40)" fg:x="251" fg:w="1"/><text x="20.2182%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="19.9682%" y="677" width="0.0796%" height="15" fill="rgb(243,116,47)" fg:x="251" fg:w="1"/><text x="20.2182%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.9682%" y="661" width="0.0796%" height="15" fill="rgb(219,225,16)" fg:x="251" fg:w="1"/><text x="20.2182%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9682%" y="645" width="0.0796%" height="15" fill="rgb(233,29,47)" fg:x="251" fg:w="1"/><text x="20.2182%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.9682%" y="629" width="0.0796%" height="15" fill="rgb(250,179,18)" fg:x="251" fg:w="1"/><text x="20.2182%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9682%" y="613" width="0.0796%" height="15" fill="rgb(215,176,6)" fg:x="251" fg:w="1"/><text x="20.2182%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.9682%" y="597" width="0.0796%" height="15" fill="rgb(214,117,39)" fg:x="251" fg:w="1"/><text x="20.2182%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9682%" y="581" width="0.0796%" height="15" fill="rgb(247,183,36)" fg:x="251" fg:w="1"/><text x="20.2182%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9682%" y="565" width="0.0796%" height="15" fill="rgb(237,200,3)" fg:x="251" fg:w="1"/><text x="20.2182%" y="575.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="19.7295%" y="725" width="0.3978%" height="15" fill="rgb(212,220,24)" fg:x="248" fg:w="5"/><text x="19.9795%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="19.9682%" y="709" width="0.1591%" height="15" fill="rgb(245,216,20)" fg:x="251" fg:w="2"/><text x="20.2182%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="20.0477%" y="693" width="0.0796%" height="15" fill="rgb(219,124,7)" fg:x="252" fg:w="1"/><text x="20.2977%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="20.0477%" y="677" width="0.0796%" height="15" fill="rgb(227,167,8)" fg:x="252" fg:w="1"/><text x="20.2977%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="20.0477%" y="661" width="0.0796%" height="15" fill="rgb(241,37,2)" fg:x="252" fg:w="1"/><text x="20.2977%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.0477%" y="645" width="0.0796%" height="15" fill="rgb(238,134,33)" fg:x="252" fg:w="1"/><text x="20.2977%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="20.0477%" y="629" width="0.0796%" height="15" fill="rgb(248,48,27)" fg:x="252" fg:w="1"/><text x="20.2977%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.0477%" y="613" width="0.0796%" height="15" fill="rgb(212,14,16)" fg:x="252" fg:w="1"/><text x="20.2977%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.0477%" y="597" width="0.0796%" height="15" fill="rgb(217,205,37)" fg:x="252" fg:w="1"/><text x="20.2977%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="20.0477%" y="581" width="0.0796%" height="15" fill="rgb(233,185,47)" fg:x="252" fg:w="1"/><text x="20.2977%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.0477%" y="565" width="0.0796%" height="15" fill="rgb(244,88,8)" fg:x="252" fg:w="1"/><text x="20.2977%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="20.0477%" y="549" width="0.0796%" height="15" fill="rgb(213,0,20)" fg:x="252" fg:w="1"/><text x="20.2977%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.0477%" y="533" width="0.0796%" height="15" fill="rgb(238,159,36)" fg:x="252" fg:w="1"/><text x="20.2977%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="19.7295%" y="757" width="0.7160%" height="15" fill="rgb(253,173,17)" fg:x="248" fg:w="9"/><text x="19.9795%" y="767.50"></text></g><g><title>engine::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="19.7295%" y="741" width="0.7160%" height="15" fill="rgb(221,23,28)" fg:x="248" fg:w="9"/><text x="19.9795%" y="751.50"></text></g><g><title>engine::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="20.1273%" y="725" width="0.3182%" height="15" fill="rgb(218,113,15)" fg:x="253" fg:w="4"/><text x="20.3773%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="20.1273%" y="709" width="0.3182%" height="15" fill="rgb(233,58,3)" fg:x="253" fg:w="4"/><text x="20.3773%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="20.1273%" y="693" width="0.3182%" height="15" fill="rgb(250,46,35)" fg:x="253" fg:w="4"/><text x="20.3773%" y="703.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="20.1273%" y="677" width="0.3182%" height="15" fill="rgb(210,169,11)" fg:x="253" fg:w="4"/><text x="20.3773%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.4455%" y="693" width="0.0796%" height="15" fill="rgb(246,88,19)" fg:x="257" fg:w="1"/><text x="20.6955%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="20.4455%" y="709" width="0.2387%" height="15" fill="rgb(206,81,49)" fg:x="257" fg:w="3"/><text x="20.6955%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="20.5251%" y="693" width="0.1591%" height="15" fill="rgb(232,144,18)" fg:x="258" fg:w="2"/><text x="20.7751%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="20.5251%" y="677" width="0.1591%" height="15" fill="rgb(235,2,27)" fg:x="258" fg:w="2"/><text x="20.7751%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.5251%" y="661" width="0.1591%" height="15" fill="rgb(239,157,39)" fg:x="258" fg:w="2"/><text x="20.7751%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.6046%" y="645" width="0.0796%" height="15" fill="rgb(220,11,17)" fg:x="259" fg:w="1"/><text x="20.8546%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.7637%" y="533" width="0.0796%" height="15" fill="rgb(243,94,50)" fg:x="261" fg:w="1"/><text x="21.0137%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="20.4455%" y="741" width="0.5569%" height="15" fill="rgb(218,22,0)" fg:x="257" fg:w="7"/><text x="20.6955%" y="751.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="20.4455%" y="725" width="0.5569%" height="15" fill="rgb(249,70,21)" fg:x="257" fg:w="7"/><text x="20.6955%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="20.6842%" y="709" width="0.3182%" height="15" fill="rgb(245,111,46)" fg:x="260" fg:w="4"/><text x="20.9342%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="20.7637%" y="693" width="0.2387%" height="15" fill="rgb(244,183,12)" fg:x="261" fg:w="3"/><text x="21.0137%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="20.7637%" y="677" width="0.2387%" height="15" fill="rgb(207,117,0)" fg:x="261" fg:w="3"/><text x="21.0137%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.7637%" y="661" width="0.2387%" height="15" fill="rgb(206,20,43)" fg:x="261" fg:w="3"/><text x="21.0137%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.7637%" y="645" width="0.2387%" height="15" fill="rgb(221,104,11)" fg:x="261" fg:w="3"/><text x="21.0137%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.7637%" y="629" width="0.2387%" height="15" fill="rgb(254,36,50)" fg:x="261" fg:w="3"/><text x="21.0137%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.7637%" y="613" width="0.2387%" height="15" fill="rgb(252,17,15)" fg:x="261" fg:w="3"/><text x="21.0137%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="20.7637%" y="597" width="0.2387%" height="15" fill="rgb(219,129,43)" fg:x="261" fg:w="3"/><text x="21.0137%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.7637%" y="581" width="0.2387%" height="15" fill="rgb(205,34,45)" fg:x="261" fg:w="3"/><text x="21.0137%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.7637%" y="565" width="0.2387%" height="15" fill="rgb(251,201,32)" fg:x="261" fg:w="3"/><text x="21.0137%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.7637%" y="549" width="0.2387%" height="15" fill="rgb(205,56,0)" fg:x="261" fg:w="3"/><text x="21.0137%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.8433%" y="533" width="0.1591%" height="15" fill="rgb(211,193,27)" fg:x="262" fg:w="2"/><text x="21.0933%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8433%" y="517" width="0.1591%" height="15" fill="rgb(231,100,42)" fg:x="262" fg:w="2"/><text x="21.0933%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="20.9228%" y="501" width="0.0796%" height="15" fill="rgb(245,85,27)" fg:x="263" fg:w="1"/><text x="21.1728%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="20.9228%" y="485" width="0.0796%" height="15" fill="rgb(241,76,24)" fg:x="263" fg:w="1"/><text x="21.1728%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="20.9228%" y="469" width="0.0796%" height="15" fill="rgb(249,157,15)" fg:x="263" fg:w="1"/><text x="21.1728%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="21.0024%" y="741" width="0.0796%" height="15" fill="rgb(222,218,25)" fg:x="264" fg:w="1"/><text x="21.2524%" y="751.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="21.0024%" y="725" width="0.0796%" height="15" fill="rgb(252,156,52)" fg:x="264" fg:w="1"/><text x="21.2524%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0819%" y="645" width="0.0796%" height="15" fill="rgb(211,185,7)" fg:x="265" fg:w="1"/><text x="21.3319%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0819%" y="629" width="0.0796%" height="15" fill="rgb(234,108,24)" fg:x="265" fg:w="1"/><text x="21.3319%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0819%" y="613" width="0.0796%" height="15" fill="rgb(227,218,2)" fg:x="265" fg:w="1"/><text x="21.3319%" y="623.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="21.0819%" y="693" width="0.1591%" height="15" fill="rgb(224,0,36)" fg:x="265" fg:w="2"/><text x="21.3319%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="21.0819%" y="677" width="0.1591%" height="15" fill="rgb(233,201,10)" fg:x="265" fg:w="2"/><text x="21.3319%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="21.0819%" y="661" width="0.1591%" height="15" fill="rgb(252,209,14)" fg:x="265" fg:w="2"/><text x="21.3319%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.1615%" y="645" width="0.0796%" height="15" fill="rgb(205,93,49)" fg:x="266" fg:w="1"/><text x="21.4115%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1615%" y="629" width="0.0796%" height="15" fill="rgb(234,116,45)" fg:x="266" fg:w="1"/><text x="21.4115%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.1615%" y="613" width="0.0796%" height="15" fill="rgb(248,89,35)" fg:x="266" fg:w="1"/><text x="21.4115%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1615%" y="597" width="0.0796%" height="15" fill="rgb(233,167,45)" fg:x="266" fg:w="1"/><text x="21.4115%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.1615%" y="581" width="0.0796%" height="15" fill="rgb(248,228,14)" fg:x="266" fg:w="1"/><text x="21.4115%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (20 samples, 1.59%)</title><rect x="19.7295%" y="773" width="1.5911%" height="15" fill="rgb(246,91,14)" fg:x="248" fg:w="20"/><text x="19.9795%" y="783.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.88%)</title><rect x="20.4455%" y="757" width="0.8751%" height="15" fill="rgb(227,142,5)" fg:x="257" fg:w="11"/><text x="20.6955%" y="767.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="21.0819%" y="741" width="0.2387%" height="15" fill="rgb(221,63,33)" fg:x="265" fg:w="3"/><text x="21.3319%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="21.0819%" y="725" width="0.2387%" height="15" fill="rgb(233,49,0)" fg:x="265" fg:w="3"/><text x="21.3319%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="21.0819%" y="709" width="0.2387%" height="15" fill="rgb(251,115,38)" fg:x="265" fg:w="3"/><text x="21.3319%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="21.2411%" y="693" width="0.0796%" height="15" fill="rgb(231,214,32)" fg:x="267" fg:w="1"/><text x="21.4911%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="21.2411%" y="677" width="0.0796%" height="15" fill="rgb(248,73,46)" fg:x="267" fg:w="1"/><text x="21.4911%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="21.2411%" y="661" width="0.0796%" height="15" fill="rgb(237,156,4)" fg:x="267" fg:w="1"/><text x="21.4911%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.2411%" y="645" width="0.0796%" height="15" fill="rgb(227,132,2)" fg:x="267" fg:w="1"/><text x="21.4911%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.2411%" y="629" width="0.0796%" height="15" fill="rgb(248,161,9)" fg:x="267" fg:w="1"/><text x="21.4911%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.2411%" y="613" width="0.0796%" height="15" fill="rgb(238,77,38)" fg:x="267" fg:w="1"/><text x="21.4911%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="21.3206%" y="741" width="0.0796%" height="15" fill="rgb(222,166,40)" fg:x="268" fg:w="1"/><text x="21.5706%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="21.3206%" y="725" width="0.0796%" height="15" fill="rgb(214,168,45)" fg:x="268" fg:w="1"/><text x="21.5706%" y="735.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="21.3206%" y="709" width="0.0796%" height="15" fill="rgb(226,64,37)" fg:x="268" fg:w="1"/><text x="21.5706%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.3206%" y="693" width="0.0796%" height="15" fill="rgb(232,210,43)" fg:x="268" fg:w="1"/><text x="21.5706%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.3206%" y="677" width="0.0796%" height="15" fill="rgb(214,76,33)" fg:x="268" fg:w="1"/><text x="21.5706%" y="687.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="21.4002%" y="725" width="0.0796%" height="15" fill="rgb(210,78,5)" fg:x="269" fg:w="1"/><text x="21.6502%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="21.4002%" y="709" width="0.0796%" height="15" fill="rgb(211,107,37)" fg:x="269" fg:w="1"/><text x="21.6502%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="21.4002%" y="693" width="0.0796%" height="15" fill="rgb(249,67,16)" fg:x="269" fg:w="1"/><text x="21.6502%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="21.4002%" y="677" width="0.0796%" height="15" fill="rgb(222,114,31)" fg:x="269" fg:w="1"/><text x="21.6502%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4002%" y="661" width="0.0796%" height="15" fill="rgb(242,118,19)" fg:x="269" fg:w="1"/><text x="21.6502%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4002%" y="645" width="0.0796%" height="15" fill="rgb(223,115,1)" fg:x="269" fg:w="1"/><text x="21.6502%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4002%" y="629" width="0.0796%" height="15" fill="rgb(241,182,54)" fg:x="269" fg:w="1"/><text x="21.6502%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4002%" y="613" width="0.0796%" height="15" fill="rgb(244,166,36)" fg:x="269" fg:w="1"/><text x="21.6502%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4002%" y="597" width="0.0796%" height="15" fill="rgb(241,52,43)" fg:x="269" fg:w="1"/><text x="21.6502%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4002%" y="581" width="0.0796%" height="15" fill="rgb(236,82,9)" fg:x="269" fg:w="1"/><text x="21.6502%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.4002%" y="565" width="0.0796%" height="15" fill="rgb(241,119,0)" fg:x="269" fg:w="1"/><text x="21.6502%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.4002%" y="549" width="0.0796%" height="15" fill="rgb(221,19,22)" fg:x="269" fg:w="1"/><text x="21.6502%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.4002%" y="533" width="0.0796%" height="15" fill="rgb(254,144,35)" fg:x="269" fg:w="1"/><text x="21.6502%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4002%" y="517" width="0.0796%" height="15" fill="rgb(246,132,30)" fg:x="269" fg:w="1"/><text x="21.6502%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4002%" y="501" width="0.0796%" height="15" fill="rgb(234,69,28)" fg:x="269" fg:w="1"/><text x="21.6502%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.4002%" y="485" width="0.0796%" height="15" fill="rgb(219,106,47)" fg:x="269" fg:w="1"/><text x="21.6502%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.4002%" y="469" width="0.0796%" height="15" fill="rgb(218,79,24)" fg:x="269" fg:w="1"/><text x="21.6502%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.4002%" y="453" width="0.0796%" height="15" fill="rgb(225,26,21)" fg:x="269" fg:w="1"/><text x="21.6502%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.4002%" y="437" width="0.0796%" height="15" fill="rgb(217,68,49)" fg:x="269" fg:w="1"/><text x="21.6502%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4002%" y="421" width="0.0796%" height="15" fill="rgb(220,204,28)" fg:x="269" fg:w="1"/><text x="21.6502%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="21.3206%" y="773" width="0.2387%" height="15" fill="rgb(237,208,43)" fg:x="268" fg:w="3"/><text x="21.5706%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="21.3206%" y="757" width="0.2387%" height="15" fill="rgb(213,97,42)" fg:x="268" fg:w="3"/><text x="21.5706%" y="767.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="21.4002%" y="741" width="0.1591%" height="15" fill="rgb(238,96,52)" fg:x="269" fg:w="2"/><text x="21.6502%" y="751.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="21.4797%" y="725" width="0.0796%" height="15" fill="rgb(228,14,13)" fg:x="270" fg:w="1"/><text x="21.7297%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="21.5593%" y="741" width="0.0796%" height="15" fill="rgb(219,123,13)" fg:x="271" fg:w="1"/><text x="21.8093%" y="751.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="21.5593%" y="725" width="0.0796%" height="15" fill="rgb(216,144,17)" fg:x="271" fg:w="1"/><text x="21.8093%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="21.5593%" y="709" width="0.0796%" height="15" fill="rgb(230,228,29)" fg:x="271" fg:w="1"/><text x="21.8093%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.5593%" y="693" width="0.0796%" height="15" fill="rgb(233,18,5)" fg:x="271" fg:w="1"/><text x="21.8093%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="21.6388%" y="613" width="0.0796%" height="15" fill="rgb(233,197,12)" fg:x="272" fg:w="1"/><text x="21.8888%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.6388%" y="597" width="0.0796%" height="15" fill="rgb(234,140,29)" fg:x="272" fg:w="1"/><text x="21.8888%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="21.5593%" y="773" width="0.2387%" height="15" fill="rgb(233,113,19)" fg:x="271" fg:w="3"/><text x="21.8093%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::set_name (3 samples, 0.24%)</title><rect x="21.5593%" y="757" width="0.2387%" height="15" fill="rgb(246,209,13)" fg:x="271" fg:w="3"/><text x="21.8093%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::modified (2 samples, 0.16%)</title><rect x="21.6388%" y="741" width="0.1591%" height="15" fill="rgb(242,79,54)" fg:x="272" fg:w="2"/><text x="21.8888%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="21.6388%" y="725" width="0.1591%" height="15" fill="rgb(219,73,16)" fg:x="272" fg:w="2"/><text x="21.8888%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="21.6388%" y="709" width="0.1591%" height="15" fill="rgb(224,52,10)" fg:x="272" fg:w="2"/><text x="21.8888%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="21.6388%" y="693" width="0.1591%" height="15" fill="rgb(237,179,5)" fg:x="272" fg:w="2"/><text x="21.8888%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.6388%" y="677" width="0.1591%" height="15" fill="rgb(231,20,6)" fg:x="272" fg:w="2"/><text x="21.8888%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.6388%" y="661" width="0.1591%" height="15" fill="rgb(253,171,45)" fg:x="272" fg:w="2"/><text x="21.8888%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.6388%" y="645" width="0.1591%" height="15" fill="rgb(230,75,49)" fg:x="272" fg:w="2"/><text x="21.8888%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.6388%" y="629" width="0.1591%" height="15" fill="rgb(216,83,46)" fg:x="272" fg:w="2"/><text x="21.8888%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.7184%" y="613" width="0.0796%" height="15" fill="rgb(236,56,9)" fg:x="273" fg:w="1"/><text x="21.9684%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.7184%" y="597" width="0.0796%" height="15" fill="rgb(215,28,34)" fg:x="273" fg:w="1"/><text x="21.9684%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.7184%" y="581" width="0.0796%" height="15" fill="rgb(230,222,20)" fg:x="273" fg:w="1"/><text x="21.9684%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.7184%" y="565" width="0.0796%" height="15" fill="rgb(235,209,51)" fg:x="273" fg:w="1"/><text x="21.9684%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.7184%" y="549" width="0.0796%" height="15" fill="rgb(235,167,1)" fg:x="273" fg:w="1"/><text x="21.9684%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.7184%" y="533" width="0.0796%" height="15" fill="rgb(248,220,0)" fg:x="273" fg:w="1"/><text x="21.9684%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.7184%" y="517" width="0.0796%" height="15" fill="rgb(239,0,18)" fg:x="273" fg:w="1"/><text x="21.9684%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7184%" y="501" width="0.0796%" height="15" fill="rgb(229,179,11)" fg:x="273" fg:w="1"/><text x="21.9684%" y="511.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="21.7979%" y="773" width="0.0796%" height="15" fill="rgb(226,116,53)" fg:x="274" fg:w="1"/><text x="22.0479%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="21.7979%" y="757" width="0.0796%" height="15" fill="rgb(218,1,49)" fg:x="274" fg:w="1"/><text x="22.0479%" y="767.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="21.7979%" y="741" width="0.0796%" height="15" fill="rgb(208,184,47)" fg:x="274" fg:w="1"/><text x="22.0479%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="21.7979%" y="725" width="0.0796%" height="15" fill="rgb(238,174,3)" fg:x="274" fg:w="1"/><text x="22.0479%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7979%" y="709" width="0.0796%" height="15" fill="rgb(247,188,6)" fg:x="274" fg:w="1"/><text x="22.0479%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="21.8775%" y="757" width="0.0796%" height="15" fill="rgb(211,165,46)" fg:x="275" fg:w="1"/><text x="22.1275%" y="767.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="21.8775%" y="741" width="0.0796%" height="15" fill="rgb(222,190,10)" fg:x="275" fg:w="1"/><text x="22.1275%" y="751.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="21.8775%" y="725" width="0.0796%" height="15" fill="rgb(206,185,3)" fg:x="275" fg:w="1"/><text x="22.1275%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="21.8775%" y="709" width="0.0796%" height="15" fill="rgb(244,125,37)" fg:x="275" fg:w="1"/><text x="22.1275%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="21.8775%" y="693" width="0.0796%" height="15" fill="rgb(211,43,7)" fg:x="275" fg:w="1"/><text x="22.1275%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="21.8775%" y="677" width="0.0796%" height="15" fill="rgb(250,41,42)" fg:x="275" fg:w="1"/><text x="22.1275%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="21.8775%" y="661" width="0.0796%" height="15" fill="rgb(254,54,42)" fg:x="275" fg:w="1"/><text x="22.1275%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.8775%" y="645" width="0.0796%" height="15" fill="rgb(213,71,43)" fg:x="275" fg:w="1"/><text x="22.1275%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="21.8775%" y="629" width="0.0796%" height="15" fill="rgb(249,3,44)" fg:x="275" fg:w="1"/><text x="22.1275%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.8775%" y="613" width="0.0796%" height="15" fill="rgb(229,80,41)" fg:x="275" fg:w="1"/><text x="22.1275%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.8775%" y="597" width="0.0796%" height="15" fill="rgb(231,25,28)" fg:x="275" fg:w="1"/><text x="22.1275%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="21.8775%" y="581" width="0.0796%" height="15" fill="rgb(208,79,48)" fg:x="275" fg:w="1"/><text x="22.1275%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.8775%" y="565" width="0.0796%" height="15" fill="rgb(207,196,38)" fg:x="275" fg:w="1"/><text x="22.1275%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="21.8775%" y="549" width="0.0796%" height="15" fill="rgb(228,105,49)" fg:x="275" fg:w="1"/><text x="22.1275%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="21.8775%" y="533" width="0.0796%" height="15" fill="rgb(237,99,15)" fg:x="275" fg:w="1"/><text x="22.1275%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="21.9570%" y="757" width="0.0796%" height="15" fill="rgb(224,207,46)" fg:x="276" fg:w="1"/><text x="22.2070%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="21.9570%" y="741" width="0.0796%" height="15" fill="rgb(249,117,50)" fg:x="276" fg:w="1"/><text x="22.2070%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="22.0366%" y="741" width="0.0796%" height="15" fill="rgb(248,17,13)" fg:x="277" fg:w="1"/><text x="22.2866%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1957%" y="661" width="0.0796%" height="15" fill="rgb(228,187,36)" fg:x="279" fg:w="1"/><text x="22.4457%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1957%" y="645" width="0.0796%" height="15" fill="rgb(234,132,20)" fg:x="279" fg:w="1"/><text x="22.4457%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1957%" y="629" width="0.0796%" height="15" fill="rgb(209,170,46)" fg:x="279" fg:w="1"/><text x="22.4457%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1957%" y="613" width="0.0796%" height="15" fill="rgb(237,23,19)" fg:x="279" fg:w="1"/><text x="22.4457%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1957%" y="597" width="0.0796%" height="15" fill="rgb(227,21,26)" fg:x="279" fg:w="1"/><text x="22.4457%" y="607.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="22.1957%" y="709" width="0.1591%" height="15" fill="rgb(222,220,48)" fg:x="279" fg:w="2"/><text x="22.4457%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="22.1957%" y="693" width="0.1591%" height="15" fill="rgb(214,9,16)" fg:x="279" fg:w="2"/><text x="22.4457%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="22.1957%" y="677" width="0.1591%" height="15" fill="rgb(209,73,30)" fg:x="279" fg:w="2"/><text x="22.4457%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.2753%" y="661" width="0.0796%" height="15" fill="rgb(207,20,33)" fg:x="280" fg:w="1"/><text x="22.5253%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2753%" y="645" width="0.0796%" height="15" fill="rgb(219,153,12)" fg:x="280" fg:w="1"/><text x="22.5253%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.2753%" y="629" width="0.0796%" height="15" fill="rgb(235,97,25)" fg:x="280" fg:w="1"/><text x="22.5253%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2753%" y="613" width="0.0796%" height="15" fill="rgb(244,30,34)" fg:x="280" fg:w="1"/><text x="22.5253%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.2753%" y="597" width="0.0796%" height="15" fill="rgb(214,106,45)" fg:x="280" fg:w="1"/><text x="22.5253%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2753%" y="581" width="0.0796%" height="15" fill="rgb(226,41,9)" fg:x="280" fg:w="1"/><text x="22.5253%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.2753%" y="565" width="0.0796%" height="15" fill="rgb(253,139,29)" fg:x="280" fg:w="1"/><text x="22.5253%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2753%" y="549" width="0.0796%" height="15" fill="rgb(213,205,39)" fg:x="280" fg:w="1"/><text x="22.5253%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="22.1161%" y="741" width="0.3182%" height="15" fill="rgb(209,27,10)" fg:x="278" fg:w="4"/><text x="22.3661%" y="751.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="22.1161%" y="725" width="0.3182%" height="15" fill="rgb(249,142,16)" fg:x="278" fg:w="4"/><text x="22.3661%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="22.3548%" y="709" width="0.0796%" height="15" fill="rgb(242,65,12)" fg:x="281" fg:w="1"/><text x="22.6048%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="22.3548%" y="693" width="0.0796%" height="15" fill="rgb(232,48,10)" fg:x="281" fg:w="1"/><text x="22.6048%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="22.3548%" y="677" width="0.0796%" height="15" fill="rgb(253,67,19)" fg:x="281" fg:w="1"/><text x="22.6048%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.3548%" y="661" width="0.0796%" height="15" fill="rgb(227,93,29)" fg:x="281" fg:w="1"/><text x="22.6048%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3548%" y="645" width="0.0796%" height="15" fill="rgb(226,189,53)" fg:x="281" fg:w="1"/><text x="22.6048%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.3548%" y="629" width="0.0796%" height="15" fill="rgb(223,224,1)" fg:x="281" fg:w="1"/><text x="22.6048%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3548%" y="613" width="0.0796%" height="15" fill="rgb(221,84,32)" fg:x="281" fg:w="1"/><text x="22.6048%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.3548%" y="597" width="0.0796%" height="15" fill="rgb(214,189,28)" fg:x="281" fg:w="1"/><text x="22.6048%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3548%" y="581" width="0.0796%" height="15" fill="rgb(234,7,52)" fg:x="281" fg:w="1"/><text x="22.6048%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.3548%" y="565" width="0.0796%" height="15" fill="rgb(249,73,31)" fg:x="281" fg:w="1"/><text x="22.6048%" y="575.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="22.4344%" y="741" width="0.0796%" height="15" fill="rgb(253,153,41)" fg:x="282" fg:w="1"/><text x="22.6844%" y="751.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="22.4344%" y="725" width="0.0796%" height="15" fill="rgb(249,52,34)" fg:x="282" fg:w="1"/><text x="22.6844%" y="735.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="22.4344%" y="709" width="0.0796%" height="15" fill="rgb(236,177,47)" fg:x="282" fg:w="1"/><text x="22.6844%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.4344%" y="693" width="0.0796%" height="15" fill="rgb(252,185,45)" fg:x="282" fg:w="1"/><text x="22.6844%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.4344%" y="677" width="0.0796%" height="15" fill="rgb(251,15,30)" fg:x="282" fg:w="1"/><text x="22.6844%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="22.4344%" y="661" width="0.0796%" height="15" fill="rgb(233,31,4)" fg:x="282" fg:w="1"/><text x="22.6844%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.4344%" y="645" width="0.0796%" height="15" fill="rgb(254,44,24)" fg:x="282" fg:w="1"/><text x="22.6844%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5139%" y="645" width="0.0796%" height="15" fill="rgb(218,54,1)" fg:x="283" fg:w="1"/><text x="22.7639%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5139%" y="629" width="0.0796%" height="15" fill="rgb(243,209,39)" fg:x="283" fg:w="1"/><text x="22.7639%" y="639.50"></text></g><g><title>plugins_core::build::Build::occupying (10 samples, 0.80%)</title><rect x="21.8775%" y="773" width="0.7955%" height="15" fill="rgb(206,75,33)" fg:x="275" fg:w="10"/><text x="22.1275%" y="783.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="22.0366%" y="757" width="0.6364%" height="15" fill="rgb(223,108,18)" fg:x="277" fg:w="8"/><text x="22.2866%" y="767.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="22.5139%" y="741" width="0.1591%" height="15" fill="rgb(244,89,31)" fg:x="283" fg:w="2"/><text x="22.7639%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="22.5139%" y="725" width="0.1591%" height="15" fill="rgb(222,167,27)" fg:x="283" fg:w="2"/><text x="22.7639%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="22.5139%" y="709" width="0.1591%" height="15" fill="rgb(247,41,16)" fg:x="283" fg:w="2"/><text x="22.7639%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="22.5139%" y="693" width="0.1591%" height="15" fill="rgb(233,168,40)" fg:x="283" fg:w="2"/><text x="22.7639%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="22.5139%" y="677" width="0.1591%" height="15" fill="rgb(205,211,8)" fg:x="283" fg:w="2"/><text x="22.7639%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="22.5139%" y="661" width="0.1591%" height="15" fill="rgb(238,105,11)" fg:x="283" fg:w="2"/><text x="22.7639%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5935%" y="645" width="0.0796%" height="15" fill="rgb(223,142,52)" fg:x="284" fg:w="1"/><text x="22.8435%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5935%" y="629" width="0.0796%" height="15" fill="rgb(238,51,33)" fg:x="284" fg:w="1"/><text x="22.8435%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5935%" y="613" width="0.0796%" height="15" fill="rgb(231,188,43)" fg:x="284" fg:w="1"/><text x="22.8435%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5935%" y="597" width="0.0796%" height="15" fill="rgb(216,92,17)" fg:x="284" fg:w="1"/><text x="22.8435%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.5935%" y="581" width="0.0796%" height="15" fill="rgb(228,2,40)" fg:x="284" fg:w="1"/><text x="22.8435%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5935%" y="565" width="0.0796%" height="15" fill="rgb(226,73,15)" fg:x="284" fg:w="1"/><text x="22.8435%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5935%" y="549" width="0.0796%" height="15" fill="rgb(227,66,46)" fg:x="284" fg:w="1"/><text x="22.8435%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5935%" y="533" width="0.0796%" height="15" fill="rgb(209,71,6)" fg:x="284" fg:w="1"/><text x="22.8435%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.5935%" y="517" width="0.0796%" height="15" fill="rgb(246,100,25)" fg:x="284" fg:w="1"/><text x="22.8435%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.7526%" y="661" width="0.0796%" height="15" fill="rgb(248,185,27)" fg:x="286" fg:w="1"/><text x="23.0026%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.7526%" y="645" width="0.0796%" height="15" fill="rgb(225,118,47)" fg:x="286" fg:w="1"/><text x="23.0026%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.7526%" y="629" width="0.0796%" height="15" fill="rgb(220,185,44)" fg:x="286" fg:w="1"/><text x="23.0026%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7526%" y="613" width="0.0796%" height="15" fill="rgb(227,95,24)" fg:x="286" fg:w="1"/><text x="23.0026%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7526%" y="597" width="0.0796%" height="15" fill="rgb(252,84,24)" fg:x="286" fg:w="1"/><text x="23.0026%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.7526%" y="581" width="0.0796%" height="15" fill="rgb(240,34,44)" fg:x="286" fg:w="1"/><text x="23.0026%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.7526%" y="565" width="0.0796%" height="15" fill="rgb(209,72,54)" fg:x="286" fg:w="1"/><text x="23.0026%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.7526%" y="549" width="0.0796%" height="15" fill="rgb(226,19,45)" fg:x="286" fg:w="1"/><text x="23.0026%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.7526%" y="533" width="0.0796%" height="15" fill="rgb(246,7,45)" fg:x="286" fg:w="1"/><text x="23.0026%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.7526%" y="517" width="0.0796%" height="15" fill="rgb(225,45,2)" fg:x="286" fg:w="1"/><text x="23.0026%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.7526%" y="501" width="0.0796%" height="15" fill="rgb(221,80,29)" fg:x="286" fg:w="1"/><text x="23.0026%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="22.7526%" y="485" width="0.0796%" height="15" fill="rgb(228,11,19)" fg:x="286" fg:w="1"/><text x="23.0026%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="22.7526%" y="469" width="0.0796%" height="15" fill="rgb(243,17,21)" fg:x="286" fg:w="1"/><text x="23.0026%" y="479.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="22.7526%" y="693" width="0.1591%" height="15" fill="rgb(243,88,8)" fg:x="286" fg:w="2"/><text x="23.0026%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="22.7526%" y="677" width="0.1591%" height="15" fill="rgb(214,17,9)" fg:x="286" fg:w="2"/><text x="23.0026%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.8321%" y="661" width="0.0796%" height="15" fill="rgb(232,169,15)" fg:x="287" fg:w="1"/><text x="23.0821%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.8321%" y="645" width="0.0796%" height="15" fill="rgb(232,86,53)" fg:x="287" fg:w="1"/><text x="23.0821%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.8321%" y="629" width="0.0796%" height="15" fill="rgb(222,100,4)" fg:x="287" fg:w="1"/><text x="23.0821%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.8321%" y="613" width="0.0796%" height="15" fill="rgb(253,151,38)" fg:x="287" fg:w="1"/><text x="23.0821%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.8321%" y="597" width="0.0796%" height="15" fill="rgb(238,215,29)" fg:x="287" fg:w="1"/><text x="23.0821%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.8321%" y="581" width="0.0796%" height="15" fill="rgb(205,128,53)" fg:x="287" fg:w="1"/><text x="23.0821%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.8321%" y="565" width="0.0796%" height="15" fill="rgb(248,183,14)" fg:x="287" fg:w="1"/><text x="23.0821%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.8321%" y="549" width="0.0796%" height="15" fill="rgb(244,172,35)" fg:x="287" fg:w="1"/><text x="23.0821%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="22.7526%" y="725" width="0.2387%" height="15" fill="rgb(234,93,19)" fg:x="286" fg:w="3"/><text x="23.0026%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="22.7526%" y="709" width="0.2387%" height="15" fill="rgb(227,109,7)" fg:x="286" fg:w="3"/><text x="23.0026%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="22.9117%" y="693" width="0.0796%" height="15" fill="rgb(233,136,54)" fg:x="288" fg:w="1"/><text x="23.1617%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="22.9117%" y="677" width="0.0796%" height="15" fill="rgb(233,19,40)" fg:x="288" fg:w="1"/><text x="23.1617%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.9117%" y="661" width="0.0796%" height="15" fill="rgb(247,41,18)" fg:x="288" fg:w="1"/><text x="23.1617%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.9117%" y="645" width="0.0796%" height="15" fill="rgb(220,34,34)" fg:x="288" fg:w="1"/><text x="23.1617%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="22.9117%" y="629" width="0.0796%" height="15" fill="rgb(222,135,32)" fg:x="288" fg:w="1"/><text x="23.1617%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.9117%" y="613" width="0.0796%" height="15" fill="rgb(214,80,19)" fg:x="288" fg:w="1"/><text x="23.1617%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9117%" y="597" width="0.0796%" height="15" fill="rgb(234,54,46)" fg:x="288" fg:w="1"/><text x="23.1617%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9117%" y="581" width="0.0796%" height="15" fill="rgb(251,48,23)" fg:x="288" fg:w="1"/><text x="23.1617%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9117%" y="565" width="0.0796%" height="15" fill="rgb(254,109,52)" fg:x="288" fg:w="1"/><text x="23.1617%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="22.6730%" y="757" width="0.3978%" height="15" fill="rgb(240,186,19)" fg:x="285" fg:w="5"/><text x="22.9230%" y="767.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="22.7526%" y="741" width="0.3182%" height="15" fill="rgb(246,187,17)" fg:x="286" fg:w="4"/><text x="23.0026%" y="751.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="22.9912%" y="725" width="0.0796%" height="15" fill="rgb(212,21,5)" fg:x="289" fg:w="1"/><text x="23.2412%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.9912%" y="709" width="0.0796%" height="15" fill="rgb(225,185,18)" fg:x="289" fg:w="1"/><text x="23.2412%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.9912%" y="693" width="0.0796%" height="15" fill="rgb(245,114,17)" fg:x="289" fg:w="1"/><text x="23.2412%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.9912%" y="677" width="0.0796%" height="15" fill="rgb(223,164,24)" fg:x="289" fg:w="1"/><text x="23.2412%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.9912%" y="661" width="0.0796%" height="15" fill="rgb(211,228,3)" fg:x="289" fg:w="1"/><text x="23.2412%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.9912%" y="645" width="0.0796%" height="15" fill="rgb(223,16,38)" fg:x="289" fg:w="1"/><text x="23.2412%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.9912%" y="629" width="0.0796%" height="15" fill="rgb(207,31,54)" fg:x="289" fg:w="1"/><text x="23.2412%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.9912%" y="613" width="0.0796%" height="15" fill="rgb(220,39,11)" fg:x="289" fg:w="1"/><text x="23.2412%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.9912%" y="597" width="0.0796%" height="15" fill="rgb(235,185,0)" fg:x="289" fg:w="1"/><text x="23.2412%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.9912%" y="581" width="0.0796%" height="15" fill="rgb(249,39,18)" fg:x="289" fg:w="1"/><text x="23.2412%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.9912%" y="565" width="0.0796%" height="15" fill="rgb(240,110,33)" fg:x="289" fg:w="1"/><text x="23.2412%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.9912%" y="549" width="0.0796%" height="15" fill="rgb(210,92,42)" fg:x="289" fg:w="1"/><text x="23.2412%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9912%" y="533" width="0.0796%" height="15" fill="rgb(218,215,28)" fg:x="289" fg:w="1"/><text x="23.2412%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (143 samples, 11.38%)</title><rect x="11.7741%" y="789" width="11.3763%" height="15" fill="rgb(238,215,36)" fg:x="148" fg:w="143"/><text x="12.0241%" y="799.50">plugins_core::bui..</text></g><g><title>plugins_core::build::Build::with_username (6 samples, 0.48%)</title><rect x="22.6730%" y="773" width="0.4773%" height="15" fill="rgb(220,31,10)" fg:x="285" fg:w="6"/><text x="22.9230%" y="783.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="23.0708%" y="757" width="0.0796%" height="15" fill="rgb(212,93,14)" fg:x="290" fg:w="1"/><text x="23.3208%" y="767.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="23.0708%" y="741" width="0.0796%" height="15" fill="rgb(254,207,2)" fg:x="290" fg:w="1"/><text x="23.3208%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="23.0708%" y="725" width="0.0796%" height="15" fill="rgb(205,57,44)" fg:x="290" fg:w="1"/><text x="23.3208%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="23.0708%" y="709" width="0.0796%" height="15" fill="rgb(226,151,19)" fg:x="290" fg:w="1"/><text x="23.3208%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="23.0708%" y="693" width="0.0796%" height="15" fill="rgb(230,72,30)" fg:x="290" fg:w="1"/><text x="23.3208%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="23.1504%" y="789" width="0.0796%" height="15" fill="rgb(244,0,8)" fg:x="291" fg:w="1"/><text x="23.4004%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="23.1504%" y="773" width="0.0796%" height="15" fill="rgb(230,192,6)" fg:x="291" fg:w="1"/><text x="23.4004%" y="783.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="23.1504%" y="757" width="0.0796%" height="15" fill="rgb(233,207,13)" fg:x="291" fg:w="1"/><text x="23.4004%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="23.1504%" y="741" width="0.0796%" height="15" fill="rgb(206,227,7)" fg:x="291" fg:w="1"/><text x="23.4004%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="23.2299%" y="757" width="0.0796%" height="15" fill="rgb(213,217,25)" fg:x="292" fg:w="1"/><text x="23.4799%" y="767.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="23.2299%" y="741" width="0.0796%" height="15" fill="rgb(249,75,4)" fg:x="292" fg:w="1"/><text x="23.4799%" y="751.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="23.2299%" y="725" width="0.0796%" height="15" fill="rgb(225,114,18)" fg:x="292" fg:w="1"/><text x="23.4799%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="23.2299%" y="709" width="0.0796%" height="15" fill="rgb(211,162,40)" fg:x="292" fg:w="1"/><text x="23.4799%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="23.2299%" y="693" width="0.0796%" height="15" fill="rgb(206,49,29)" fg:x="292" fg:w="1"/><text x="23.4799%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="23.2299%" y="677" width="0.0796%" height="15" fill="rgb(244,8,6)" fg:x="292" fg:w="1"/><text x="23.4799%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.2299%" y="661" width="0.0796%" height="15" fill="rgb(231,194,28)" fg:x="292" fg:w="1"/><text x="23.4799%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.2299%" y="645" width="0.0796%" height="15" fill="rgb(210,69,5)" fg:x="292" fg:w="1"/><text x="23.4799%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.2299%" y="629" width="0.0796%" height="15" fill="rgb(216,186,12)" fg:x="292" fg:w="1"/><text x="23.4799%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.2299%" y="613" width="0.0796%" height="15" fill="rgb(238,61,15)" fg:x="292" fg:w="1"/><text x="23.4799%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.2299%" y="597" width="0.0796%" height="15" fill="rgb(226,104,1)" fg:x="292" fg:w="1"/><text x="23.4799%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.2299%" y="581" width="0.0796%" height="15" fill="rgb(229,128,15)" fg:x="292" fg:w="1"/><text x="23.4799%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="23.2299%" y="565" width="0.0796%" height="15" fill="rgb(247,110,15)" fg:x="292" fg:w="1"/><text x="23.4799%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.3095%" y="581" width="0.0796%" height="15" fill="rgb(210,74,48)" fg:x="293" fg:w="1"/><text x="23.5595%" y="591.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="23.3095%" y="725" width="0.1591%" height="15" fill="rgb(246,121,10)" fg:x="293" fg:w="2"/><text x="23.5595%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="23.3095%" y="709" width="0.1591%" height="15" fill="rgb(214,156,37)" fg:x="293" fg:w="2"/><text x="23.5595%" y="719.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="23.3095%" y="693" width="0.1591%" height="15" fill="rgb(214,210,34)" fg:x="293" fg:w="2"/><text x="23.5595%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.3095%" y="677" width="0.1591%" height="15" fill="rgb(237,93,35)" fg:x="293" fg:w="2"/><text x="23.5595%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="23.3095%" y="661" width="0.1591%" height="15" fill="rgb(206,36,8)" fg:x="293" fg:w="2"/><text x="23.5595%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.3095%" y="645" width="0.1591%" height="15" fill="rgb(208,151,12)" fg:x="293" fg:w="2"/><text x="23.5595%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="23.3095%" y="629" width="0.1591%" height="15" fill="rgb(225,133,52)" fg:x="293" fg:w="2"/><text x="23.5595%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="23.3095%" y="613" width="0.1591%" height="15" fill="rgb(231,71,53)" fg:x="293" fg:w="2"/><text x="23.5595%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="23.3095%" y="597" width="0.1591%" height="15" fill="rgb(243,76,21)" fg:x="293" fg:w="2"/><text x="23.5595%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="23.3890%" y="581" width="0.0796%" height="15" fill="rgb(252,144,3)" fg:x="294" fg:w="1"/><text x="23.6390%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3890%" y="565" width="0.0796%" height="15" fill="rgb(231,199,10)" fg:x="294" fg:w="1"/><text x="23.6390%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="23.3095%" y="741" width="0.2387%" height="15" fill="rgb(215,18,11)" fg:x="293" fg:w="3"/><text x="23.5595%" y="751.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="23.4686%" y="725" width="0.0796%" height="15" fill="rgb(241,65,24)" fg:x="295" fg:w="1"/><text x="23.7186%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5481%" y="677" width="0.0796%" height="15" fill="rgb(251,192,38)" fg:x="296" fg:w="1"/><text x="23.7981%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5481%" y="661" width="0.0796%" height="15" fill="rgb(205,9,35)" fg:x="296" fg:w="1"/><text x="23.7981%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5481%" y="645" width="0.0796%" height="15" fill="rgb(229,225,49)" fg:x="296" fg:w="1"/><text x="23.7981%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5481%" y="629" width="0.0796%" height="15" fill="rgb(207,125,39)" fg:x="296" fg:w="1"/><text x="23.7981%" y="639.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.48%)</title><rect x="23.2299%" y="789" width="0.4773%" height="15" fill="rgb(222,78,19)" fg:x="292" fg:w="6"/><text x="23.4799%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="23.2299%" y="773" width="0.4773%" height="15" fill="rgb(248,207,20)" fg:x="292" fg:w="6"/><text x="23.4799%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::set_name (5 samples, 0.40%)</title><rect x="23.3095%" y="757" width="0.3978%" height="15" fill="rgb(205,103,49)" fg:x="293" fg:w="5"/><text x="23.5595%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::modified (2 samples, 0.16%)</title><rect x="23.5481%" y="741" width="0.1591%" height="15" fill="rgb(216,42,28)" fg:x="296" fg:w="2"/><text x="23.7981%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.5481%" y="725" width="0.1591%" height="15" fill="rgb(213,205,53)" fg:x="296" fg:w="2"/><text x="23.7981%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="23.5481%" y="709" width="0.1591%" height="15" fill="rgb(239,140,53)" fg:x="296" fg:w="2"/><text x="23.7981%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="23.5481%" y="693" width="0.1591%" height="15" fill="rgb(248,95,9)" fg:x="296" fg:w="2"/><text x="23.7981%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.6277%" y="677" width="0.0796%" height="15" fill="rgb(254,58,47)" fg:x="297" fg:w="1"/><text x="23.8777%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6277%" y="661" width="0.0796%" height="15" fill="rgb(234,227,14)" fg:x="297" fg:w="1"/><text x="23.8777%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.6277%" y="645" width="0.0796%" height="15" fill="rgb(205,192,45)" fg:x="297" fg:w="1"/><text x="23.8777%" y="655.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (252 samples, 20.05%)</title><rect x="3.7391%" y="805" width="20.0477%" height="15" fill="rgb(253,187,31)" fg:x="47" fg:w="252"/><text x="3.9891%" y="815.50">&lt;tests::HoldingKeyInVessel as t..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="23.7072%" y="789" width="0.0796%" height="15" fill="rgb(222,6,32)" fg:x="298" fg:w="1"/><text x="23.9572%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="23.7072%" y="773" width="0.0796%" height="15" fill="rgb(249,190,19)" fg:x="298" fg:w="1"/><text x="23.9572%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="23.7868%" y="805" width="0.0796%" height="15" fill="rgb(251,28,20)" fg:x="299" fg:w="1"/><text x="24.0368%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="23.7868%" y="789" width="0.0796%" height="15" fill="rgb(210,223,40)" fg:x="299" fg:w="1"/><text x="24.0368%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.8663%" y="789" width="0.0796%" height="15" fill="rgb(216,137,22)" fg:x="300" fg:w="1"/><text x="24.1163%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.8663%" y="773" width="0.0796%" height="15" fill="rgb(247,39,34)" fg:x="300" fg:w="1"/><text x="24.1163%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.8663%" y="757" width="0.0796%" height="15" fill="rgb(239,43,50)" fg:x="300" fg:w="1"/><text x="24.1163%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.8663%" y="741" width="0.0796%" height="15" fill="rgb(241,212,9)" fg:x="300" fg:w="1"/><text x="24.1163%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.8663%" y="725" width="0.0796%" height="15" fill="rgb(205,8,2)" fg:x="300" fg:w="1"/><text x="24.1163%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="23.8663%" y="709" width="0.0796%" height="15" fill="rgb(217,173,54)" fg:x="300" fg:w="1"/><text x="24.1163%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="23.8663%" y="693" width="0.0796%" height="15" fill="rgb(208,149,52)" fg:x="300" fg:w="1"/><text x="24.1163%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.8663%" y="677" width="0.0796%" height="15" fill="rgb(239,99,40)" fg:x="300" fg:w="1"/><text x="24.1163%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.8663%" y="661" width="0.0796%" height="15" fill="rgb(233,214,26)" fg:x="300" fg:w="1"/><text x="24.1163%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.8663%" y="645" width="0.0796%" height="15" fill="rgb(231,225,37)" fg:x="300" fg:w="1"/><text x="24.1163%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.8663%" y="629" width="0.0796%" height="15" fill="rgb(252,55,35)" fg:x="300" fg:w="1"/><text x="24.1163%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.8663%" y="613" width="0.0796%" height="15" fill="rgb(239,43,18)" fg:x="300" fg:w="1"/><text x="24.1163%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="23.8663%" y="597" width="0.0796%" height="15" fill="rgb(251,125,49)" fg:x="300" fg:w="1"/><text x="24.1163%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="23.8663%" y="581" width="0.0796%" height="15" fill="rgb(212,83,54)" fg:x="300" fg:w="1"/><text x="24.1163%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="23.8663%" y="565" width="0.0796%" height="15" fill="rgb(250,75,6)" fg:x="300" fg:w="1"/><text x="24.1163%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="23.8663%" y="549" width="0.0796%" height="15" fill="rgb(252,36,40)" fg:x="300" fg:w="1"/><text x="24.1163%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.8663%" y="533" width="0.0796%" height="15" fill="rgb(230,91,51)" fg:x="300" fg:w="1"/><text x="24.1163%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.8663%" y="517" width="0.0796%" height="15" fill="rgb(212,92,28)" fg:x="300" fg:w="1"/><text x="24.1163%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.8663%" y="501" width="0.0796%" height="15" fill="rgb(227,13,22)" fg:x="300" fg:w="1"/><text x="24.1163%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="23.8663%" y="485" width="0.0796%" height="15" fill="rgb(239,204,32)" fg:x="300" fg:w="1"/><text x="24.1163%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.8663%" y="469" width="0.0796%" height="15" fill="rgb(228,49,41)" fg:x="300" fg:w="1"/><text x="24.1163%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="23.8663%" y="453" width="0.0796%" height="15" fill="rgb(206,95,6)" fg:x="300" fg:w="1"/><text x="24.1163%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="23.8663%" y="437" width="0.0796%" height="15" fill="rgb(251,20,14)" fg:x="300" fg:w="1"/><text x="24.1163%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="23.8663%" y="421" width="0.0796%" height="15" fill="rgb(214,99,28)" fg:x="300" fg:w="1"/><text x="24.1163%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.8663%" y="405" width="0.0796%" height="15" fill="rgb(239,122,54)" fg:x="300" fg:w="1"/><text x="24.1163%" y="415.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="23.9459%" y="773" width="0.1591%" height="15" fill="rgb(218,217,46)" fg:x="301" fg:w="2"/><text x="24.1959%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="23.9459%" y="757" width="0.1591%" height="15" fill="rgb(249,106,28)" fg:x="301" fg:w="2"/><text x="24.1959%" y="767.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="24.0255%" y="741" width="0.0796%" height="15" fill="rgb(250,158,18)" fg:x="302" fg:w="1"/><text x="24.2755%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.0255%" y="725" width="0.0796%" height="15" fill="rgb(226,137,29)" fg:x="302" fg:w="1"/><text x="24.2755%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0255%" y="709" width="0.0796%" height="15" fill="rgb(210,188,1)" fg:x="302" fg:w="1"/><text x="24.2755%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.0255%" y="693" width="0.0796%" height="15" fill="rgb(227,84,42)" fg:x="302" fg:w="1"/><text x="24.2755%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="24.1050%" y="757" width="0.0796%" height="15" fill="rgb(222,147,48)" fg:x="303" fg:w="1"/><text x="24.3550%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.1050%" y="741" width="0.0796%" height="15" fill="rgb(241,150,43)" fg:x="303" fg:w="1"/><text x="24.3550%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.8210%" y="629" width="0.0796%" height="15" fill="rgb(206,139,52)" fg:x="312" fg:w="1"/><text x="25.0710%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.8210%" y="613" width="0.0796%" height="15" fill="rgb(230,63,14)" fg:x="312" fg:w="1"/><text x="25.0710%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.8210%" y="597" width="0.0796%" height="15" fill="rgb(247,8,20)" fg:x="312" fg:w="1"/><text x="25.0710%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.8210%" y="581" width="0.0796%" height="15" fill="rgb(213,115,4)" fg:x="312" fg:w="1"/><text x="25.0710%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.8210%" y="565" width="0.0796%" height="15" fill="rgb(241,79,49)" fg:x="312" fg:w="1"/><text x="25.0710%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.8210%" y="549" width="0.0796%" height="15" fill="rgb(222,42,35)" fg:x="312" fg:w="1"/><text x="25.0710%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.8210%" y="533" width="0.0796%" height="15" fill="rgb(247,59,23)" fg:x="312" fg:w="1"/><text x="25.0710%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.8210%" y="517" width="0.0796%" height="15" fill="rgb(247,93,18)" fg:x="312" fg:w="1"/><text x="25.0710%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.8210%" y="501" width="0.0796%" height="15" fill="rgb(249,107,47)" fg:x="312" fg:w="1"/><text x="25.0710%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.8210%" y="485" width="0.0796%" height="15" fill="rgb(219,27,1)" fg:x="312" fg:w="1"/><text x="25.0710%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.8210%" y="469" width="0.0796%" height="15" fill="rgb(217,82,32)" fg:x="312" fg:w="1"/><text x="25.0710%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.8210%" y="453" width="0.0796%" height="15" fill="rgb(250,129,47)" fg:x="312" fg:w="1"/><text x="25.0710%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8210%" y="437" width="0.0796%" height="15" fill="rgb(253,88,35)" fg:x="312" fg:w="1"/><text x="25.0710%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="24.6619%" y="693" width="0.3182%" height="15" fill="rgb(245,221,14)" fg:x="310" fg:w="4"/><text x="24.9119%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="24.6619%" y="677" width="0.3182%" height="15" fill="rgb(217,119,54)" fg:x="310" fg:w="4"/><text x="24.9119%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.7414%" y="661" width="0.2387%" height="15" fill="rgb(247,128,31)" fg:x="311" fg:w="3"/><text x="24.9914%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.7414%" y="645" width="0.2387%" height="15" fill="rgb(211,99,22)" fg:x="311" fg:w="3"/><text x="24.9914%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.9006%" y="629" width="0.0796%" height="15" fill="rgb(212,20,17)" fg:x="313" fg:w="1"/><text x="25.1506%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.9006%" y="613" width="0.0796%" height="15" fill="rgb(209,159,29)" fg:x="313" fg:w="1"/><text x="25.1506%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.9006%" y="597" width="0.0796%" height="15" fill="rgb(222,177,53)" fg:x="313" fg:w="1"/><text x="25.1506%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.9006%" y="581" width="0.0796%" height="15" fill="rgb(234,46,43)" fg:x="313" fg:w="1"/><text x="25.1506%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.9006%" y="565" width="0.0796%" height="15" fill="rgb(208,108,14)" fg:x="313" fg:w="1"/><text x="25.1506%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.9006%" y="549" width="0.0796%" height="15" fill="rgb(226,78,53)" fg:x="313" fg:w="1"/><text x="25.1506%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.9006%" y="533" width="0.0796%" height="15" fill="rgb(230,20,41)" fg:x="313" fg:w="1"/><text x="25.1506%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.9006%" y="517" width="0.0796%" height="15" fill="rgb(213,195,35)" fg:x="313" fg:w="1"/><text x="25.1506%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.9006%" y="501" width="0.0796%" height="15" fill="rgb(242,62,36)" fg:x="313" fg:w="1"/><text x="25.1506%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.9006%" y="485" width="0.0796%" height="15" fill="rgb(222,210,37)" fg:x="313" fg:w="1"/><text x="25.1506%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.9006%" y="469" width="0.0796%" height="15" fill="rgb(232,107,19)" fg:x="313" fg:w="1"/><text x="25.1506%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="24.9006%" y="453" width="0.0796%" height="15" fill="rgb(235,85,17)" fg:x="313" fg:w="1"/><text x="25.1506%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.9006%" y="437" width="0.0796%" height="15" fill="rgb(219,195,31)" fg:x="313" fg:w="1"/><text x="25.1506%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.9801%" y="565" width="0.0796%" height="15" fill="rgb(231,183,30)" fg:x="314" fg:w="1"/><text x="25.2301%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.9801%" y="549" width="0.0796%" height="15" fill="rgb(212,0,11)" fg:x="314" fg:w="1"/><text x="25.2301%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (8 samples, 0.64%)</title><rect x="24.5028%" y="725" width="0.6364%" height="15" fill="rgb(249,53,54)" fg:x="308" fg:w="8"/><text x="24.7528%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.64%)</title><rect x="24.5028%" y="709" width="0.6364%" height="15" fill="rgb(211,118,13)" fg:x="308" fg:w="8"/><text x="24.7528%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.9801%" y="693" width="0.1591%" height="15" fill="rgb(237,42,9)" fg:x="314" fg:w="2"/><text x="25.2301%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.9801%" y="677" width="0.1591%" height="15" fill="rgb(227,68,32)" fg:x="314" fg:w="2"/><text x="25.2301%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.9801%" y="661" width="0.1591%" height="15" fill="rgb(238,10,7)" fg:x="314" fg:w="2"/><text x="25.2301%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.9801%" y="645" width="0.1591%" height="15" fill="rgb(224,42,12)" fg:x="314" fg:w="2"/><text x="25.2301%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="24.9801%" y="629" width="0.1591%" height="15" fill="rgb(252,190,5)" fg:x="314" fg:w="2"/><text x="25.2301%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.9801%" y="613" width="0.1591%" height="15" fill="rgb(220,214,39)" fg:x="314" fg:w="2"/><text x="25.2301%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.9801%" y="597" width="0.1591%" height="15" fill="rgb(247,98,4)" fg:x="314" fg:w="2"/><text x="25.2301%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.9801%" y="581" width="0.1591%" height="15" fill="rgb(211,60,12)" fg:x="314" fg:w="2"/><text x="25.2301%" y="591.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="25.0597%" y="565" width="0.0796%" height="15" fill="rgb(224,42,10)" fg:x="315" fg:w="1"/><text x="25.3097%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.2188%" y="645" width="0.0796%" height="15" fill="rgb(217,167,4)" fg:x="317" fg:w="1"/><text x="25.4688%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="25.2188%" y="693" width="0.2387%" height="15" fill="rgb(253,18,17)" fg:x="317" fg:w="3"/><text x="25.4688%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="25.2188%" y="677" width="0.2387%" height="15" fill="rgb(249,186,44)" fg:x="317" fg:w="3"/><text x="25.4688%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="25.2188%" y="661" width="0.2387%" height="15" fill="rgb(254,124,54)" fg:x="317" fg:w="3"/><text x="25.4688%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="25.2983%" y="645" width="0.1591%" height="15" fill="rgb(220,124,39)" fg:x="318" fg:w="2"/><text x="25.5483%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="25.2983%" y="629" width="0.1591%" height="15" fill="rgb(225,96,46)" fg:x="318" fg:w="2"/><text x="25.5483%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.3779%" y="613" width="0.0796%" height="15" fill="rgb(221,106,12)" fg:x="319" fg:w="1"/><text x="25.6279%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3779%" y="597" width="0.0796%" height="15" fill="rgb(227,133,23)" fg:x="319" fg:w="1"/><text x="25.6279%" y="607.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (13 samples, 1.03%)</title><rect x="24.5028%" y="741" width="1.0342%" height="15" fill="rgb(216,44,52)" fg:x="308" fg:w="13"/><text x="24.7528%" y="751.50"></text></g><g><title>kernel::model::scopes::save_props (5 samples, 0.40%)</title><rect x="25.1392%" y="725" width="0.3978%" height="15" fill="rgb(239,149,7)" fg:x="316" fg:w="5"/><text x="25.3892%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (4 samples, 0.32%)</title><rect x="25.2188%" y="709" width="0.3182%" height="15" fill="rgb(211,157,31)" fg:x="317" fg:w="4"/><text x="25.4688%" y="719.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.4574%" y="693" width="0.0796%" height="15" fill="rgb(206,215,22)" fg:x="320" fg:w="1"/><text x="25.7074%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.4574%" y="677" width="0.0796%" height="15" fill="rgb(208,113,15)" fg:x="320" fg:w="1"/><text x="25.7074%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="25.4574%" y="661" width="0.0796%" height="15" fill="rgb(207,189,15)" fg:x="320" fg:w="1"/><text x="25.7074%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.4574%" y="645" width="0.0796%" height="15" fill="rgb(231,115,4)" fg:x="320" fg:w="1"/><text x="25.7074%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="25.4574%" y="629" width="0.0796%" height="15" fill="rgb(253,117,2)" fg:x="320" fg:w="1"/><text x="25.7074%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="25.4574%" y="613" width="0.0796%" height="15" fill="rgb(248,48,24)" fg:x="320" fg:w="1"/><text x="25.7074%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="25.4574%" y="597" width="0.0796%" height="15" fill="rgb(241,28,46)" fg:x="320" fg:w="1"/><text x="25.7074%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4574%" y="581" width="0.0796%" height="15" fill="rgb(216,165,52)" fg:x="320" fg:w="1"/><text x="25.7074%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4574%" y="565" width="0.0796%" height="15" fill="rgb(220,222,34)" fg:x="320" fg:w="1"/><text x="25.7074%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.4574%" y="549" width="0.0796%" height="15" fill="rgb(247,222,49)" fg:x="320" fg:w="1"/><text x="25.7074%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.5370%" y="709" width="0.0796%" height="15" fill="rgb(240,10,31)" fg:x="321" fg:w="1"/><text x="25.7870%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.5370%" y="693" width="0.0796%" height="15" fill="rgb(221,199,35)" fg:x="321" fg:w="1"/><text x="25.7870%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="25.5370%" y="725" width="0.1591%" height="15" fill="rgb(230,223,11)" fg:x="321" fg:w="2"/><text x="25.7870%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.6165%" y="709" width="0.0796%" height="15" fill="rgb(218,82,45)" fg:x="322" fg:w="1"/><text x="25.8665%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.6165%" y="693" width="0.0796%" height="15" fill="rgb(233,213,33)" fg:x="322" fg:w="1"/><text x="25.8665%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.6165%" y="677" width="0.0796%" height="15" fill="rgb(210,143,52)" fg:x="322" fg:w="1"/><text x="25.8665%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="25.6961%" y="661" width="0.3978%" height="15" fill="rgb(206,95,4)" fg:x="323" fg:w="5"/><text x="25.9461%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.0143%" y="645" width="0.0796%" height="15" fill="rgb(246,164,46)" fg:x="327" fg:w="1"/><text x="26.2643%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.0143%" y="629" width="0.0796%" height="15" fill="rgb(213,210,47)" fg:x="327" fg:w="1"/><text x="26.2643%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.0143%" y="613" width="0.0796%" height="15" fill="rgb(210,12,38)" fg:x="327" fg:w="1"/><text x="26.2643%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="25.6961%" y="709" width="0.4773%" height="15" fill="rgb(252,192,54)" fg:x="323" fg:w="6"/><text x="25.9461%" y="719.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="25.6961%" y="693" width="0.4773%" height="15" fill="rgb(242,92,6)" fg:x="323" fg:w="6"/><text x="25.9461%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="25.6961%" y="677" width="0.4773%" height="15" fill="rgb(253,154,15)" fg:x="323" fg:w="6"/><text x="25.9461%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="26.0939%" y="661" width="0.0796%" height="15" fill="rgb(209,20,43)" fg:x="328" fg:w="1"/><text x="26.3439%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.2530%" y="693" width="0.0796%" height="15" fill="rgb(232,28,49)" fg:x="330" fg:w="1"/><text x="26.5030%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="26.2530%" y="677" width="0.0796%" height="15" fill="rgb(248,131,53)" fg:x="330" fg:w="1"/><text x="26.5030%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.2530%" y="661" width="0.0796%" height="15" fill="rgb(214,16,30)" fg:x="330" fg:w="1"/><text x="26.5030%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="26.3325%" y="693" width="0.3182%" height="15" fill="rgb(245,16,0)" fg:x="331" fg:w="4"/><text x="26.5825%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.4916%" y="677" width="0.1591%" height="15" fill="rgb(245,17,35)" fg:x="333" fg:w="2"/><text x="26.7416%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.4916%" y="661" width="0.1591%" height="15" fill="rgb(249,27,53)" fg:x="333" fg:w="2"/><text x="26.7416%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="26.6508%" y="661" width="0.1591%" height="15" fill="rgb(214,73,24)" fg:x="335" fg:w="2"/><text x="26.9008%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.7303%" y="645" width="0.0796%" height="15" fill="rgb(223,84,37)" fg:x="336" fg:w="1"/><text x="26.9803%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="26.8099%" y="629" width="0.0796%" height="15" fill="rgb(210,109,28)" fg:x="337" fg:w="1"/><text x="27.0599%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="26.6508%" y="677" width="0.3182%" height="15" fill="rgb(208,186,6)" fg:x="335" fg:w="4"/><text x="26.9008%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="26.8099%" y="661" width="0.1591%" height="15" fill="rgb(235,201,30)" fg:x="337" fg:w="2"/><text x="27.0599%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="26.8099%" y="645" width="0.1591%" height="15" fill="rgb(216,198,48)" fg:x="337" fg:w="2"/><text x="27.0599%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.8894%" y="629" width="0.0796%" height="15" fill="rgb(254,186,25)" fg:x="338" fg:w="1"/><text x="27.1394%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.8894%" y="613" width="0.0796%" height="15" fill="rgb(227,87,5)" fg:x="338" fg:w="1"/><text x="27.1394%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="26.6508%" y="693" width="0.6364%" height="15" fill="rgb(236,205,25)" fg:x="335" fg:w="8"/><text x="26.9008%" y="703.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="26.9690%" y="677" width="0.3182%" height="15" fill="rgb(229,99,32)" fg:x="339" fg:w="4"/><text x="27.2190%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.0485%" y="661" width="0.2387%" height="15" fill="rgb(231,177,31)" fg:x="340" fg:w="3"/><text x="27.2985%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="27.0485%" y="645" width="0.2387%" height="15" fill="rgb(246,15,2)" fg:x="340" fg:w="3"/><text x="27.2985%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.27%)</title><rect x="26.1734%" y="709" width="1.2729%" height="15" fill="rgb(207,39,15)" fg:x="329" fg:w="16"/><text x="26.4234%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.2872%" y="693" width="0.1591%" height="15" fill="rgb(207,44,9)" fg:x="343" fg:w="2"/><text x="27.5372%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.2872%" y="677" width="0.1591%" height="15" fill="rgb(225,224,33)" fg:x="343" fg:w="2"/><text x="27.5372%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.3667%" y="661" width="0.0796%" height="15" fill="rgb(252,151,3)" fg:x="344" fg:w="1"/><text x="27.6167%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.91%)</title><rect x="25.6961%" y="725" width="1.9093%" height="15" fill="rgb(211,140,13)" fg:x="323" fg:w="24"/><text x="25.9461%" y="735.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.4463%" y="709" width="0.1591%" height="15" fill="rgb(239,225,17)" fg:x="345" fg:w="2"/><text x="27.6963%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.4463%" y="693" width="0.1591%" height="15" fill="rgb(223,170,52)" fg:x="345" fg:w="2"/><text x="27.6963%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.4463%" y="677" width="0.1591%" height="15" fill="rgb(212,64,21)" fg:x="345" fg:w="2"/><text x="27.6963%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="27.4463%" y="661" width="0.1591%" height="15" fill="rgb(236,126,48)" fg:x="345" fg:w="2"/><text x="27.6963%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.5259%" y="645" width="0.0796%" height="15" fill="rgb(209,135,11)" fg:x="346" fg:w="1"/><text x="27.7759%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.5259%" y="629" width="0.0796%" height="15" fill="rgb(228,126,40)" fg:x="346" fg:w="1"/><text x="27.7759%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.6054%" y="693" width="0.0796%" height="15" fill="rgb(205,196,36)" fg:x="347" fg:w="1"/><text x="27.8554%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.6054%" y="677" width="0.0796%" height="15" fill="rgb(243,160,33)" fg:x="347" fg:w="1"/><text x="27.8554%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.6054%" y="661" width="0.0796%" height="15" fill="rgb(210,84,20)" fg:x="347" fg:w="1"/><text x="27.8554%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6054%" y="645" width="0.0796%" height="15" fill="rgb(228,213,30)" fg:x="347" fg:w="1"/><text x="27.8554%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (28 samples, 2.23%)</title><rect x="25.5370%" y="741" width="2.2275%" height="15" fill="rgb(252,33,45)" fg:x="321" fg:w="28"/><text x="25.7870%" y="751.50">&lt;..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.6054%" y="725" width="0.1591%" height="15" fill="rgb(254,227,20)" fg:x="347" fg:w="2"/><text x="27.8554%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.6054%" y="709" width="0.1591%" height="15" fill="rgb(228,192,2)" fg:x="347" fg:w="2"/><text x="27.8554%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="27.6850%" y="693" width="0.0796%" height="15" fill="rgb(233,32,8)" fg:x="348" fg:w="1"/><text x="27.9350%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.7645%" y="709" width="0.1591%" height="15" fill="rgb(220,146,47)" fg:x="349" fg:w="2"/><text x="28.0145%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="27.7645%" y="741" width="0.3978%" height="15" fill="rgb(246,194,1)" fg:x="349" fg:w="5"/><text x="28.0145%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="27.7645%" y="725" width="0.3978%" height="15" fill="rgb(218,203,9)" fg:x="349" fg:w="5"/><text x="28.0145%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="27.9236%" y="709" width="0.2387%" height="15" fill="rgb(237,97,14)" fg:x="351" fg:w="3"/><text x="28.1736%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="28.0032%" y="693" width="0.1591%" height="15" fill="rgb(239,76,15)" fg:x="352" fg:w="2"/><text x="28.2532%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.0827%" y="677" width="0.0796%" height="15" fill="rgb(222,53,45)" fg:x="353" fg:w="1"/><text x="28.3327%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.0827%" y="661" width="0.0796%" height="15" fill="rgb(237,88,5)" fg:x="353" fg:w="1"/><text x="28.3327%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.0827%" y="645" width="0.0796%" height="15" fill="rgb(218,223,35)" fg:x="353" fg:w="1"/><text x="28.3327%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.0827%" y="629" width="0.0796%" height="15" fill="rgb(243,229,38)" fg:x="353" fg:w="1"/><text x="28.3327%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1623%" y="725" width="0.0796%" height="15" fill="rgb(240,75,41)" fg:x="354" fg:w="1"/><text x="28.4123%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.3214%" y="693" width="0.1591%" height="15" fill="rgb(209,110,37)" fg:x="356" fg:w="2"/><text x="28.5714%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="28.4805%" y="693" width="0.2387%" height="15" fill="rgb(221,130,46)" fg:x="358" fg:w="3"/><text x="28.7305%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.6396%" y="677" width="0.0796%" height="15" fill="rgb(237,160,20)" fg:x="360" fg:w="1"/><text x="28.8896%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.7192%" y="677" width="0.0796%" height="15" fill="rgb(234,126,24)" fg:x="361" fg:w="1"/><text x="28.9692%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.7987%" y="645" width="0.0796%" height="15" fill="rgb(207,177,9)" fg:x="362" fg:w="1"/><text x="29.0487%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.0374%" y="613" width="0.0796%" height="15" fill="rgb(231,191,33)" fg:x="365" fg:w="1"/><text x="29.2874%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="28.2418%" y="725" width="1.0342%" height="15" fill="rgb(207,42,1)" fg:x="355" fg:w="13"/><text x="28.4918%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.03%)</title><rect x="28.2418%" y="709" width="1.0342%" height="15" fill="rgb(218,34,50)" fg:x="355" fg:w="13"/><text x="28.4918%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="28.7192%" y="693" width="0.5569%" height="15" fill="rgb(254,126,39)" fg:x="361" fg:w="7"/><text x="28.9692%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="28.7987%" y="677" width="0.4773%" height="15" fill="rgb(251,17,26)" fg:x="362" fg:w="6"/><text x="29.0487%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="28.7987%" y="661" width="0.4773%" height="15" fill="rgb(252,215,34)" fg:x="362" fg:w="6"/><text x="29.0487%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="28.8783%" y="645" width="0.3978%" height="15" fill="rgb(217,120,44)" fg:x="363" fg:w="5"/><text x="29.1283%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="29.0374%" y="629" width="0.2387%" height="15" fill="rgb(211,31,11)" fg:x="365" fg:w="3"/><text x="29.2874%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="29.1169%" y="613" width="0.1591%" height="15" fill="rgb(222,69,51)" fg:x="366" fg:w="2"/><text x="29.3669%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.1169%" y="597" width="0.1591%" height="15" fill="rgb(215,229,42)" fg:x="366" fg:w="2"/><text x="29.3669%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.64%)</title><rect x="29.4352%" y="693" width="0.6364%" height="15" fill="rgb(212,102,15)" fg:x="370" fg:w="8"/><text x="29.6852%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.9125%" y="677" width="0.1591%" height="15" fill="rgb(205,179,41)" fg:x="376" fg:w="2"/><text x="30.1625%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="30.0716%" y="677" width="0.0796%" height="15" fill="rgb(219,148,46)" fg:x="378" fg:w="1"/><text x="30.3216%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="30.0716%" y="693" width="0.1591%" height="15" fill="rgb(243,40,19)" fg:x="378" fg:w="2"/><text x="30.3216%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.1512%" y="677" width="0.0796%" height="15" fill="rgb(208,206,34)" fg:x="379" fg:w="1"/><text x="30.4012%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="30.2307%" y="677" width="0.0796%" height="15" fill="rgb(244,184,38)" fg:x="380" fg:w="1"/><text x="30.4807%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="30.2307%" y="693" width="0.2387%" height="15" fill="rgb(244,151,47)" fg:x="380" fg:w="3"/><text x="30.4807%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.3103%" y="677" width="0.1591%" height="15" fill="rgb(236,134,42)" fg:x="381" fg:w="2"/><text x="30.5603%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="30.3103%" y="661" width="0.1591%" height="15" fill="rgb(233,93,22)" fg:x="381" fg:w="2"/><text x="30.5603%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="30.4694%" y="693" width="0.0796%" height="15" fill="rgb(211,202,10)" fg:x="383" fg:w="1"/><text x="30.7194%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="30.6285%" y="677" width="0.3978%" height="15" fill="rgb(240,63,8)" fg:x="385" fg:w="5"/><text x="30.8785%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="30.7876%" y="661" width="0.2387%" height="15" fill="rgb(214,9,4)" fg:x="387" fg:w="3"/><text x="31.0376%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="30.8671%" y="645" width="0.1591%" height="15" fill="rgb(243,66,45)" fg:x="388" fg:w="2"/><text x="31.1171%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="31.1854%" y="661" width="0.0796%" height="15" fill="rgb(220,50,42)" fg:x="392" fg:w="1"/><text x="31.4354%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4240%" y="613" width="0.0796%" height="15" fill="rgb(220,134,27)" fg:x="395" fg:w="1"/><text x="31.6740%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="31.3445%" y="645" width="0.2387%" height="15" fill="rgb(246,151,50)" fg:x="394" fg:w="3"/><text x="31.5945%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.4240%" y="629" width="0.1591%" height="15" fill="rgb(238,216,27)" fg:x="395" fg:w="2"/><text x="31.6740%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.5036%" y="613" width="0.0796%" height="15" fill="rgb(250,92,11)" fg:x="396" fg:w="1"/><text x="31.7536%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="31.5831%" y="645" width="0.1591%" height="15" fill="rgb(248,183,6)" fg:x="397" fg:w="2"/><text x="31.8331%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="31.5831%" y="629" width="0.1591%" height="15" fill="rgb(211,204,50)" fg:x="397" fg:w="2"/><text x="31.8331%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="31.5831%" y="613" width="0.1591%" height="15" fill="rgb(252,55,47)" fg:x="397" fg:w="2"/><text x="31.8331%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6627%" y="597" width="0.0796%" height="15" fill="rgb(240,198,32)" fg:x="398" fg:w="1"/><text x="31.9127%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.6627%" y="581" width="0.0796%" height="15" fill="rgb(224,203,19)" fg:x="398" fg:w="1"/><text x="31.9127%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.1400%" y="581" width="0.1591%" height="15" fill="rgb(205,27,16)" fg:x="404" fg:w="2"/><text x="32.3900%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="32.0605%" y="613" width="0.3182%" height="15" fill="rgb(224,226,17)" fg:x="403" fg:w="4"/><text x="32.3105%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.1400%" y="597" width="0.2387%" height="15" fill="rgb(205,216,54)" fg:x="404" fg:w="3"/><text x="32.3900%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="32.2991%" y="581" width="0.0796%" height="15" fill="rgb(248,168,46)" fg:x="406" fg:w="1"/><text x="32.5491%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.3787%" y="581" width="0.2387%" height="15" fill="rgb(226,111,45)" fg:x="407" fg:w="3"/><text x="32.6287%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.3787%" y="565" width="0.2387%" height="15" fill="rgb(231,15,9)" fg:x="407" fg:w="3"/><text x="32.6287%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.4582%" y="549" width="0.1591%" height="15" fill="rgb(243,168,3)" fg:x="408" fg:w="2"/><text x="32.7082%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.6173%" y="565" width="0.0796%" height="15" fill="rgb(221,220,54)" fg:x="410" fg:w="1"/><text x="32.8673%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="32.6969%" y="565" width="0.0796%" height="15" fill="rgb(232,174,38)" fg:x="411" fg:w="1"/><text x="32.9469%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="32.7765%" y="549" width="0.3182%" height="15" fill="rgb(205,14,38)" fg:x="412" fg:w="4"/><text x="33.0265%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.0151%" y="533" width="0.0796%" height="15" fill="rgb(234,89,19)" fg:x="415" fg:w="1"/><text x="33.2651%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0151%" y="517" width="0.0796%" height="15" fill="rgb(216,68,51)" fg:x="415" fg:w="1"/><text x="33.2651%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="33.0947%" y="533" width="0.0796%" height="15" fill="rgb(213,49,2)" fg:x="416" fg:w="1"/><text x="33.3447%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 1.99%)</title><rect x="31.2649%" y="661" width="1.9889%" height="15" fill="rgb(242,146,30)" fg:x="393" fg:w="25"/><text x="31.5149%" y="671.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.51%)</title><rect x="31.7422%" y="645" width="1.5115%" height="15" fill="rgb(224,188,11)" fg:x="399" fg:w="19"/><text x="31.9922%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.19%)</title><rect x="32.0605%" y="629" width="1.1933%" height="15" fill="rgb(213,159,11)" fg:x="403" fg:w="15"/><text x="32.3105%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="32.3787%" y="613" width="0.8751%" height="15" fill="rgb(229,13,31)" fg:x="407" fg:w="11"/><text x="32.6287%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="32.3787%" y="597" width="0.8751%" height="15" fill="rgb(209,103,11)" fg:x="407" fg:w="11"/><text x="32.6287%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="32.6173%" y="581" width="0.6364%" height="15" fill="rgb(206,3,4)" fg:x="410" fg:w="8"/><text x="32.8673%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="32.7765%" y="565" width="0.4773%" height="15" fill="rgb(252,10,49)" fg:x="412" fg:w="6"/><text x="33.0265%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="33.0947%" y="549" width="0.1591%" height="15" fill="rgb(217,160,32)" fg:x="416" fg:w="2"/><text x="33.3447%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="33.1742%" y="533" width="0.0796%" height="15" fill="rgb(249,196,0)" fg:x="417" fg:w="1"/><text x="33.4242%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="33.1742%" y="517" width="0.0796%" height="15" fill="rgb(213,17,48)" fg:x="417" fg:w="1"/><text x="33.4242%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (51 samples, 4.06%)</title><rect x="29.2761%" y="725" width="4.0573%" height="15" fill="rgb(206,42,46)" fg:x="368" fg:w="51"/><text x="29.5261%" y="735.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (51 samples, 4.06%)</title><rect x="29.2761%" y="709" width="4.0573%" height="15" fill="rgb(212,105,24)" fg:x="368" fg:w="51"/><text x="29.5261%" y="719.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (35 samples, 2.78%)</title><rect x="30.5489%" y="693" width="2.7844%" height="15" fill="rgb(243,216,30)" fg:x="384" fg:w="35"/><text x="30.7989%" y="703.50">se..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (29 samples, 2.31%)</title><rect x="31.0263%" y="677" width="2.3071%" height="15" fill="rgb(207,121,3)" fg:x="390" fg:w="29"/><text x="31.2763%" y="687.50">k..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="33.2538%" y="661" width="0.0796%" height="15" fill="rgb(249,78,0)" fg:x="418" fg:w="1"/><text x="33.5038%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.2538%" y="645" width="0.0796%" height="15" fill="rgb(244,151,32)" fg:x="418" fg:w="1"/><text x="33.5038%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="33.7311%" y="581" width="0.0796%" height="15" fill="rgb(228,63,25)" fg:x="424" fg:w="1"/><text x="33.9811%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="33.8902%" y="501" width="0.0796%" height="15" fill="rgb(231,158,23)" fg:x="426" fg:w="1"/><text x="34.1402%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="33.9698%" y="501" width="0.1591%" height="15" fill="rgb(248,107,23)" fg:x="427" fg:w="2"/><text x="34.2198%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="33.8107%" y="549" width="0.3978%" height="15" fill="rgb(215,168,21)" fg:x="425" fg:w="5"/><text x="34.0607%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="33.8107%" y="533" width="0.3978%" height="15" fill="rgb(227,83,22)" fg:x="425" fg:w="5"/><text x="34.0607%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="33.8107%" y="517" width="0.3978%" height="15" fill="rgb(217,118,43)" fg:x="425" fg:w="5"/><text x="34.0607%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1289%" y="501" width="0.0796%" height="15" fill="rgb(229,220,41)" fg:x="429" fg:w="1"/><text x="34.3789%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="33.8107%" y="565" width="0.4773%" height="15" fill="rgb(254,146,46)" fg:x="425" fg:w="6"/><text x="34.0607%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2084%" y="549" width="0.0796%" height="15" fill="rgb(233,208,31)" fg:x="430" fg:w="1"/><text x="34.4584%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="33.8107%" y="581" width="0.5569%" height="15" fill="rgb(222,162,7)" fg:x="425" fg:w="7"/><text x="34.0607%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="34.2880%" y="565" width="0.0796%" height="15" fill="rgb(230,117,45)" fg:x="431" fg:w="1"/><text x="34.5380%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="34.2880%" y="549" width="0.0796%" height="15" fill="rgb(239,163,6)" fg:x="431" fg:w="1"/><text x="34.5380%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="33.7311%" y="597" width="0.7160%" height="15" fill="rgb(246,130,17)" fg:x="424" fg:w="9"/><text x="33.9811%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="34.3675%" y="581" width="0.0796%" height="15" fill="rgb(216,84,5)" fg:x="432" fg:w="1"/><text x="34.6175%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="34.4471%" y="597" width="0.0796%" height="15" fill="rgb(230,200,21)" fg:x="433" fg:w="1"/><text x="34.6971%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="34.4471%" y="581" width="0.0796%" height="15" fill="rgb(224,2,8)" fg:x="433" fg:w="1"/><text x="34.6971%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="33.7311%" y="629" width="0.8751%" height="15" fill="rgb(238,178,10)" fg:x="424" fg:w="11"/><text x="33.9811%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="33.7311%" y="613" width="0.8751%" height="15" fill="rgb(242,153,24)" fg:x="424" fg:w="11"/><text x="33.9811%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5267%" y="597" width="0.0796%" height="15" fill="rgb(242,32,48)" fg:x="434" fg:w="1"/><text x="34.7767%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5267%" y="581" width="0.0796%" height="15" fill="rgb(227,36,0)" fg:x="434" fg:w="1"/><text x="34.7767%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5267%" y="565" width="0.0796%" height="15" fill="rgb(251,33,35)" fg:x="434" fg:w="1"/><text x="34.7767%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6062%" y="613" width="0.0796%" height="15" fill="rgb(232,168,51)" fg:x="435" fg:w="1"/><text x="34.8562%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.35%)</title><rect x="33.4129%" y="661" width="1.3524%" height="15" fill="rgb(228,56,10)" fg:x="420" fg:w="17"/><text x="33.6629%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.19%)</title><rect x="33.5720%" y="645" width="1.1933%" height="15" fill="rgb(231,10,26)" fg:x="422" fg:w="15"/><text x="33.8220%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="34.6062%" y="629" width="0.1591%" height="15" fill="rgb(226,202,12)" fg:x="435" fg:w="2"/><text x="34.8562%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="34.6858%" y="613" width="0.0796%" height="15" fill="rgb(251,49,21)" fg:x="436" fg:w="1"/><text x="34.9358%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="34.6858%" y="597" width="0.0796%" height="15" fill="rgb(206,228,28)" fg:x="436" fg:w="1"/><text x="34.9358%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (19 samples, 1.51%)</title><rect x="33.3333%" y="725" width="1.5115%" height="15" fill="rgb(205,198,31)" fg:x="419" fg:w="19"/><text x="33.5833%" y="735.50"></text></g><g><title>serde_json::de::from_trait (19 samples, 1.51%)</title><rect x="33.3333%" y="709" width="1.5115%" height="15" fill="rgb(213,69,1)" fg:x="419" fg:w="19"/><text x="33.5833%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.51%)</title><rect x="33.3333%" y="693" width="1.5115%" height="15" fill="rgb(209,177,9)" fg:x="419" fg:w="19"/><text x="33.5833%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.51%)</title><rect x="33.3333%" y="677" width="1.5115%" height="15" fill="rgb(227,119,30)" fg:x="419" fg:w="19"/><text x="33.5833%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.7653%" y="661" width="0.0796%" height="15" fill="rgb(234,106,41)" fg:x="437" fg:w="1"/><text x="35.0153%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="35.4018%" y="645" width="0.0796%" height="15" fill="rgb(244,103,47)" fg:x="445" fg:w="1"/><text x="35.6518%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="35.4018%" y="629" width="0.0796%" height="15" fill="rgb(212,211,25)" fg:x="445" fg:w="1"/><text x="35.6518%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.4018%" y="613" width="0.0796%" height="15" fill="rgb(208,63,53)" fg:x="445" fg:w="1"/><text x="35.6518%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="35.2426%" y="677" width="0.3182%" height="15" fill="rgb(213,176,21)" fg:x="443" fg:w="4"/><text x="35.4926%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="35.3222%" y="661" width="0.2387%" height="15" fill="rgb(243,124,12)" fg:x="444" fg:w="3"/><text x="35.5722%" y="671.50"></text></g><g><title>&lt;serde_json::number::N as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="35.4813%" y="645" width="0.0796%" height="15" fill="rgb(239,2,35)" fg:x="446" fg:w="1"/><text x="35.7313%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.80%)</title><rect x="34.8449%" y="709" width="0.7955%" height="15" fill="rgb(253,169,22)" fg:x="438" fg:w="10"/><text x="35.0949%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="35.0040%" y="693" width="0.6364%" height="15" fill="rgb(254,51,12)" fg:x="440" fg:w="8"/><text x="35.2540%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.5609%" y="677" width="0.0796%" height="15" fill="rgb(244,17,47)" fg:x="447" fg:w="1"/><text x="35.8109%" y="687.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (146 samples, 11.61%)</title><rect x="24.1050%" y="773" width="11.6150%" height="15" fill="rgb(251,45,46)" fg:x="303" fg:w="146"/><text x="24.3550%" y="783.50">engine::internal:..</text></g><g><title>engine::session::SavesEntities::check_for_changes (145 samples, 11.54%)</title><rect x="24.1846%" y="757" width="11.5354%" height="15" fill="rgb(223,87,43)" fg:x="304" fg:w="145"/><text x="24.4346%" y="767.50">engine::session::..</text></g><g><title>kernel::compare::any_entity_changes (95 samples, 7.56%)</title><rect x="28.1623%" y="741" width="7.5577%" height="15" fill="rgb(230,132,31)" fg:x="354" fg:w="95"/><text x="28.4123%" y="751.50">kernel::co..</text></g><g><title>treediff::diff::diff (11 samples, 0.88%)</title><rect x="34.8449%" y="725" width="0.8751%" height="15" fill="rgb(206,99,1)" fg:x="438" fg:w="11"/><text x="35.0949%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="35.6404%" y="709" width="0.0796%" height="15" fill="rgb(227,110,25)" fg:x="448" fg:w="1"/><text x="35.8904%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.6404%" y="693" width="0.0796%" height="15" fill="rgb(217,182,7)" fg:x="448" fg:w="1"/><text x="35.8904%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6404%" y="677" width="0.0796%" height="15" fill="rgb(250,176,4)" fg:x="448" fg:w="1"/><text x="35.8904%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="35.7200%" y="757" width="0.0796%" height="15" fill="rgb(244,98,30)" fg:x="449" fg:w="1"/><text x="35.9700%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="35.7200%" y="741" width="0.0796%" height="15" fill="rgb(228,150,42)" fg:x="449" fg:w="1"/><text x="35.9700%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="35.7200%" y="725" width="0.0796%" height="15" fill="rgb(231,91,46)" fg:x="449" fg:w="1"/><text x="35.9700%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="35.7200%" y="709" width="0.0796%" height="15" fill="rgb(252,161,32)" fg:x="449" fg:w="1"/><text x="35.9700%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.7200%" y="693" width="0.0796%" height="15" fill="rgb(236,69,41)" fg:x="449" fg:w="1"/><text x="35.9700%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.7200%" y="677" width="0.0796%" height="15" fill="rgb(212,160,3)" fg:x="449" fg:w="1"/><text x="35.9700%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="35.7200%" y="661" width="0.0796%" height="15" fill="rgb(216,5,50)" fg:x="449" fg:w="1"/><text x="35.9700%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.7200%" y="645" width="0.0796%" height="15" fill="rgb(241,138,25)" fg:x="449" fg:w="1"/><text x="35.9700%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.7200%" y="629" width="0.0796%" height="15" fill="rgb(239,42,18)" fg:x="449" fg:w="1"/><text x="35.9700%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7200%" y="613" width="0.0796%" height="15" fill="rgb(239,40,7)" fg:x="449" fg:w="1"/><text x="35.9700%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7200%" y="597" width="0.0796%" height="15" fill="rgb(239,11,31)" fg:x="449" fg:w="1"/><text x="35.9700%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.7200%" y="581" width="0.0796%" height="15" fill="rgb(224,77,40)" fg:x="449" fg:w="1"/><text x="35.9700%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.7200%" y="565" width="0.0796%" height="15" fill="rgb(226,15,5)" fg:x="449" fg:w="1"/><text x="35.9700%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.7200%" y="549" width="0.0796%" height="15" fill="rgb(254,188,5)" fg:x="449" fg:w="1"/><text x="35.9700%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.7200%" y="533" width="0.0796%" height="15" fill="rgb(241,148,52)" fg:x="449" fg:w="1"/><text x="35.9700%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="35.7200%" y="517" width="0.0796%" height="15" fill="rgb(251,48,36)" fg:x="449" fg:w="1"/><text x="35.9700%" y="527.50"></text></g><g><title>engine::session::Session::close (151 samples, 12.01%)</title><rect x="23.8663%" y="805" width="12.0127%" height="15" fill="rgb(243,83,13)" fg:x="300" fg:w="151"/><text x="24.1163%" y="815.50">engine::session::S..</text></g><g><title>engine::session::Session::save_entity_changes (150 samples, 11.93%)</title><rect x="23.9459%" y="789" width="11.9332%" height="15" fill="rgb(210,105,0)" fg:x="301" fg:w="150"/><text x="24.1959%" y="799.50">engine::session::S..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="35.7200%" y="773" width="0.1591%" height="15" fill="rgb(239,60,36)" fg:x="449" fg:w="2"/><text x="35.9700%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.7995%" y="757" width="0.0796%" height="15" fill="rgb(210,20,0)" fg:x="450" fg:w="1"/><text x="36.0495%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="35.8791%" y="757" width="0.1591%" height="15" fill="rgb(244,26,53)" fg:x="451" fg:w="2"/><text x="36.1291%" y="767.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (2 samples, 0.16%)</title><rect x="36.0382%" y="709" width="0.1591%" height="15" fill="rgb(240,100,49)" fg:x="453" fg:w="2"/><text x="36.2882%" y="719.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="36.0382%" y="693" width="0.1591%" height="15" fill="rgb(250,46,45)" fg:x="453" fg:w="2"/><text x="36.2882%" y="703.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="36.1177%" y="677" width="0.0796%" height="15" fill="rgb(220,181,29)" fg:x="454" fg:w="1"/><text x="36.3677%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="36.2768%" y="645" width="0.1591%" height="15" fill="rgb(213,137,33)" fg:x="456" fg:w="2"/><text x="36.5268%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="36.2768%" y="629" width="0.1591%" height="15" fill="rgb(213,27,48)" fg:x="456" fg:w="2"/><text x="36.5268%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (3 samples, 0.24%)</title><rect x="36.2768%" y="661" width="0.2387%" height="15" fill="rgb(245,180,39)" fg:x="456" fg:w="3"/><text x="36.5268%" y="671.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="36.4360%" y="645" width="0.0796%" height="15" fill="rgb(212,158,42)" fg:x="458" fg:w="1"/><text x="36.6860%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4360%" y="629" width="0.0796%" height="15" fill="rgb(228,193,18)" fg:x="458" fg:w="1"/><text x="36.6860%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4360%" y="613" width="0.0796%" height="15" fill="rgb(245,172,29)" fg:x="458" fg:w="1"/><text x="36.6860%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4360%" y="597" width="0.0796%" height="15" fill="rgb(207,98,24)" fg:x="458" fg:w="1"/><text x="36.6860%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.4360%" y="581" width="0.0796%" height="15" fill="rgb(249,92,26)" fg:x="458" fg:w="1"/><text x="36.6860%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.4360%" y="565" width="0.0796%" height="15" fill="rgb(217,176,26)" fg:x="458" fg:w="1"/><text x="36.6860%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.4360%" y="549" width="0.0796%" height="15" fill="rgb(221,8,39)" fg:x="458" fg:w="1"/><text x="36.6860%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.4360%" y="533" width="0.0796%" height="15" fill="rgb(208,90,18)" fg:x="458" fg:w="1"/><text x="36.6860%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.4360%" y="517" width="0.0796%" height="15" fill="rgb(207,202,30)" fg:x="458" fg:w="1"/><text x="36.6860%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.4360%" y="501" width="0.0796%" height="15" fill="rgb(231,124,22)" fg:x="458" fg:w="1"/><text x="36.6860%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.4360%" y="485" width="0.0796%" height="15" fill="rgb(206,15,5)" fg:x="458" fg:w="1"/><text x="36.6860%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.4360%" y="469" width="0.0796%" height="15" fill="rgb(239,16,52)" fg:x="458" fg:w="1"/><text x="36.6860%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.4360%" y="453" width="0.0796%" height="15" fill="rgb(245,213,29)" fg:x="458" fg:w="1"/><text x="36.6860%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4360%" y="437" width="0.0796%" height="15" fill="rgb(213,203,36)" fg:x="458" fg:w="1"/><text x="36.6860%" y="447.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="36.5951%" y="549" width="0.1591%" height="15" fill="rgb(209,55,18)" fg:x="460" fg:w="2"/><text x="36.8451%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="36.5951%" y="533" width="0.1591%" height="15" fill="rgb(207,133,49)" fg:x="460" fg:w="2"/><text x="36.8451%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="36.5951%" y="517" width="0.1591%" height="15" fill="rgb(240,33,46)" fg:x="460" fg:w="2"/><text x="36.8451%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.5951%" y="501" width="0.1591%" height="15" fill="rgb(212,35,2)" fg:x="460" fg:w="2"/><text x="36.8451%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.5951%" y="485" width="0.1591%" height="15" fill="rgb(231,119,28)" fg:x="460" fg:w="2"/><text x="36.8451%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.5951%" y="469" width="0.1591%" height="15" fill="rgb(252,178,7)" fg:x="460" fg:w="2"/><text x="36.8451%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.5951%" y="453" width="0.1591%" height="15" fill="rgb(251,91,4)" fg:x="460" fg:w="2"/><text x="36.8451%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6746%" y="437" width="0.0796%" height="15" fill="rgb(233,122,19)" fg:x="461" fg:w="1"/><text x="36.9246%" y="447.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="36.7542%" y="517" width="0.1591%" height="15" fill="rgb(231,208,46)" fg:x="462" fg:w="2"/><text x="37.0042%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="36.7542%" y="501" width="0.1591%" height="15" fill="rgb(243,15,41)" fg:x="462" fg:w="2"/><text x="37.0042%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="36.7542%" y="485" width="0.1591%" height="15" fill="rgb(210,32,43)" fg:x="462" fg:w="2"/><text x="37.0042%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.7542%" y="469" width="0.1591%" height="15" fill="rgb(222,177,15)" fg:x="462" fg:w="2"/><text x="37.0042%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7542%" y="453" width="0.1591%" height="15" fill="rgb(244,121,34)" fg:x="462" fg:w="2"/><text x="37.0042%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.7542%" y="437" width="0.1591%" height="15" fill="rgb(234,138,4)" fg:x="462" fg:w="2"/><text x="37.0042%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7542%" y="421" width="0.1591%" height="15" fill="rgb(240,97,48)" fg:x="462" fg:w="2"/><text x="37.0042%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.7542%" y="405" width="0.1591%" height="15" fill="rgb(237,65,54)" fg:x="462" fg:w="2"/><text x="37.0042%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7542%" y="389" width="0.1591%" height="15" fill="rgb(214,25,24)" fg:x="462" fg:w="2"/><text x="37.0042%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.7542%" y="373" width="0.1591%" height="15" fill="rgb(213,5,3)" fg:x="462" fg:w="2"/><text x="37.0042%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7542%" y="357" width="0.1591%" height="15" fill="rgb(219,81,29)" fg:x="462" fg:w="2"/><text x="37.0042%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8337%" y="341" width="0.0796%" height="15" fill="rgb(220,43,48)" fg:x="463" fg:w="1"/><text x="37.0837%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8337%" y="325" width="0.0796%" height="15" fill="rgb(239,157,2)" fg:x="463" fg:w="1"/><text x="37.0837%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.8337%" y="309" width="0.0796%" height="15" fill="rgb(213,104,43)" fg:x="463" fg:w="1"/><text x="37.0837%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.8337%" y="293" width="0.0796%" height="15" fill="rgb(237,84,9)" fg:x="463" fg:w="1"/><text x="37.0837%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9133%" y="469" width="0.0796%" height="15" fill="rgb(252,6,33)" fg:x="464" fg:w="1"/><text x="37.1633%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9133%" y="453" width="0.0796%" height="15" fill="rgb(251,172,22)" fg:x="464" fg:w="1"/><text x="37.1633%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9133%" y="437" width="0.0796%" height="15" fill="rgb(244,91,53)" fg:x="464" fg:w="1"/><text x="37.1633%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="36.7542%" y="549" width="0.3182%" height="15" fill="rgb(219,29,30)" fg:x="462" fg:w="4"/><text x="37.0042%" y="559.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="36.7542%" y="533" width="0.3182%" height="15" fill="rgb(213,3,15)" fg:x="462" fg:w="4"/><text x="37.0042%" y="543.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="36.9133%" y="517" width="0.1591%" height="15" fill="rgb(208,25,28)" fg:x="464" fg:w="2"/><text x="37.1633%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="36.9133%" y="501" width="0.1591%" height="15" fill="rgb(252,144,25)" fg:x="464" fg:w="2"/><text x="37.1633%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="36.9133%" y="485" width="0.1591%" height="15" fill="rgb(226,220,25)" fg:x="464" fg:w="2"/><text x="37.1633%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9928%" y="469" width="0.0796%" height="15" fill="rgb(212,131,28)" fg:x="465" fg:w="1"/><text x="37.2428%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9928%" y="453" width="0.0796%" height="15" fill="rgb(219,143,52)" fg:x="465" fg:w="1"/><text x="37.2428%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9928%" y="437" width="0.0796%" height="15" fill="rgb(215,56,7)" fg:x="465" fg:w="1"/><text x="37.2428%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9928%" y="421" width="0.0796%" height="15" fill="rgb(239,59,51)" fg:x="465" fg:w="1"/><text x="37.2428%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.9928%" y="405" width="0.0796%" height="15" fill="rgb(209,215,4)" fg:x="465" fg:w="1"/><text x="37.2428%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9928%" y="389" width="0.0796%" height="15" fill="rgb(221,118,39)" fg:x="465" fg:w="1"/><text x="37.2428%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9928%" y="373" width="0.0796%" height="15" fill="rgb(236,6,44)" fg:x="465" fg:w="1"/><text x="37.2428%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9928%" y="357" width="0.0796%" height="15" fill="rgb(216,122,9)" fg:x="465" fg:w="1"/><text x="37.2428%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9928%" y="341" width="0.0796%" height="15" fill="rgb(244,134,42)" fg:x="465" fg:w="1"/><text x="37.2428%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9928%" y="325" width="0.0796%" height="15" fill="rgb(209,189,35)" fg:x="465" fg:w="1"/><text x="37.2428%" y="335.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="37.0724%" y="469" width="0.0796%" height="15" fill="rgb(250,47,36)" fg:x="466" fg:w="1"/><text x="37.3224%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="37.1519%" y="421" width="0.0796%" height="15" fill="rgb(252,112,4)" fg:x="467" fg:w="1"/><text x="37.4019%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="37.1519%" y="405" width="0.0796%" height="15" fill="rgb(221,79,51)" fg:x="467" fg:w="1"/><text x="37.4019%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="37.1519%" y="389" width="0.0796%" height="15" fill="rgb(232,65,53)" fg:x="467" fg:w="1"/><text x="37.4019%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="37.1519%" y="373" width="0.0796%" height="15" fill="rgb(211,37,7)" fg:x="467" fg:w="1"/><text x="37.4019%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="37.1519%" y="357" width="0.0796%" height="15" fill="rgb(234,221,18)" fg:x="467" fg:w="1"/><text x="37.4019%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="37.1519%" y="341" width="0.0796%" height="15" fill="rgb(220,158,26)" fg:x="467" fg:w="1"/><text x="37.4019%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="37.2315%" y="421" width="0.0796%" height="15" fill="rgb(220,70,6)" fg:x="468" fg:w="1"/><text x="37.4815%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.2315%" y="405" width="0.0796%" height="15" fill="rgb(250,39,48)" fg:x="468" fg:w="1"/><text x="37.4815%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="37.2315%" y="389" width="0.0796%" height="15" fill="rgb(206,40,27)" fg:x="468" fg:w="1"/><text x="37.4815%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="37.2315%" y="373" width="0.0796%" height="15" fill="rgb(247,80,36)" fg:x="468" fg:w="1"/><text x="37.4815%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.2315%" y="357" width="0.0796%" height="15" fill="rgb(222,9,20)" fg:x="468" fg:w="1"/><text x="37.4815%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="37.0724%" y="533" width="0.3978%" height="15" fill="rgb(217,26,45)" fg:x="466" fg:w="5"/><text x="37.3224%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="37.0724%" y="517" width="0.3978%" height="15" fill="rgb(221,67,14)" fg:x="466" fg:w="5"/><text x="37.3224%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="37.0724%" y="501" width="0.3978%" height="15" fill="rgb(248,100,24)" fg:x="466" fg:w="5"/><text x="37.3224%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="37.0724%" y="485" width="0.3978%" height="15" fill="rgb(230,187,16)" fg:x="466" fg:w="5"/><text x="37.3224%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="37.1519%" y="469" width="0.3182%" height="15" fill="rgb(205,108,13)" fg:x="467" fg:w="4"/><text x="37.4019%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="37.1519%" y="453" width="0.3182%" height="15" fill="rgb(235,71,51)" fg:x="467" fg:w="4"/><text x="37.4019%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="37.1519%" y="437" width="0.3182%" height="15" fill="rgb(251,172,48)" fg:x="467" fg:w="4"/><text x="37.4019%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.3111%" y="421" width="0.1591%" height="15" fill="rgb(240,96,49)" fg:x="469" fg:w="2"/><text x="37.5611%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="37.3111%" y="405" width="0.1591%" height="15" fill="rgb(235,46,36)" fg:x="469" fg:w="2"/><text x="37.5611%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="37.3111%" y="389" width="0.1591%" height="15" fill="rgb(244,3,49)" fg:x="469" fg:w="2"/><text x="37.5611%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.3111%" y="373" width="0.1591%" height="15" fill="rgb(206,78,54)" fg:x="469" fg:w="2"/><text x="37.5611%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="37.3111%" y="357" width="0.1591%" height="15" fill="rgb(208,85,42)" fg:x="469" fg:w="2"/><text x="37.5611%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="37.3111%" y="341" width="0.1591%" height="15" fill="rgb(219,196,21)" fg:x="469" fg:w="2"/><text x="37.5611%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.3111%" y="325" width="0.1591%" height="15" fill="rgb(238,19,9)" fg:x="469" fg:w="2"/><text x="37.5611%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="37.3111%" y="309" width="0.1591%" height="15" fill="rgb(206,86,13)" fg:x="469" fg:w="2"/><text x="37.5611%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="37.3111%" y="293" width="0.1591%" height="15" fill="rgb(214,123,40)" fg:x="469" fg:w="2"/><text x="37.5611%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.3906%" y="277" width="0.0796%" height="15" fill="rgb(243,53,5)" fg:x="470" fg:w="1"/><text x="37.6406%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="37.3906%" y="261" width="0.0796%" height="15" fill="rgb(254,186,31)" fg:x="470" fg:w="1"/><text x="37.6406%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="37.3906%" y="245" width="0.0796%" height="15" fill="rgb(221,216,25)" fg:x="470" fg:w="1"/><text x="37.6406%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.3906%" y="229" width="0.0796%" height="15" fill="rgb(248,107,42)" fg:x="470" fg:w="1"/><text x="37.6406%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="37.3906%" y="213" width="0.0796%" height="15" fill="rgb(221,85,43)" fg:x="470" fg:w="1"/><text x="37.6406%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="37.3906%" y="197" width="0.0796%" height="15" fill="rgb(225,34,24)" fg:x="470" fg:w="1"/><text x="37.6406%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="37.4702%" y="421" width="0.0796%" height="15" fill="rgb(211,119,1)" fg:x="471" fg:w="1"/><text x="37.7202%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4702%" y="405" width="0.0796%" height="15" fill="rgb(254,216,46)" fg:x="471" fg:w="1"/><text x="37.7202%" y="415.50"></text></g><g><title>engine::internal::Entities::add_persisted (13 samples, 1.03%)</title><rect x="36.5951%" y="565" width="1.0342%" height="15" fill="rgb(238,11,38)" fg:x="460" fg:w="13"/><text x="36.8451%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.56%)</title><rect x="37.0724%" y="549" width="0.5569%" height="15" fill="rgb(233,50,15)" fg:x="466" fg:w="7"/><text x="37.3224%" y="559.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="37.4702%" y="533" width="0.1591%" height="15" fill="rgb(217,181,29)" fg:x="471" fg:w="2"/><text x="37.7202%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="37.4702%" y="517" width="0.1591%" height="15" fill="rgb(214,56,3)" fg:x="471" fg:w="2"/><text x="37.7202%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="37.4702%" y="501" width="0.1591%" height="15" fill="rgb(230,69,45)" fg:x="471" fg:w="2"/><text x="37.7202%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="37.4702%" y="485" width="0.1591%" height="15" fill="rgb(224,201,50)" fg:x="471" fg:w="2"/><text x="37.7202%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="37.4702%" y="469" width="0.1591%" height="15" fill="rgb(217,228,18)" fg:x="471" fg:w="2"/><text x="37.7202%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="37.4702%" y="453" width="0.1591%" height="15" fill="rgb(239,33,44)" fg:x="471" fg:w="2"/><text x="37.7202%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="37.4702%" y="437" width="0.1591%" height="15" fill="rgb(248,210,23)" fg:x="471" fg:w="2"/><text x="37.7202%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="37.5497%" y="421" width="0.0796%" height="15" fill="rgb(253,135,8)" fg:x="472" fg:w="1"/><text x="37.7997%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="37.5497%" y="405" width="0.0796%" height="15" fill="rgb(217,98,21)" fg:x="472" fg:w="1"/><text x="37.7997%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="37.5497%" y="389" width="0.0796%" height="15" fill="rgb(253,130,21)" fg:x="472" fg:w="1"/><text x="37.7997%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="37.5497%" y="373" width="0.0796%" height="15" fill="rgb(207,81,54)" fg:x="472" fg:w="1"/><text x="37.7997%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5497%" y="357" width="0.0796%" height="15" fill="rgb(232,48,33)" fg:x="472" fg:w="1"/><text x="37.7997%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (15 samples, 1.19%)</title><rect x="36.5155%" y="597" width="1.1933%" height="15" fill="rgb(211,9,35)" fg:x="459" fg:w="15"/><text x="36.7655%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (15 samples, 1.19%)</title><rect x="36.5155%" y="581" width="1.1933%" height="15" fill="rgb(205,152,21)" fg:x="459" fg:w="15"/><text x="36.7655%" y="591.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.6293%" y="565" width="0.0796%" height="15" fill="rgb(249,21,27)" fg:x="473" fg:w="1"/><text x="37.8793%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.6293%" y="549" width="0.0796%" height="15" fill="rgb(252,29,24)" fg:x="473" fg:w="1"/><text x="37.8793%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.6293%" y="533" width="0.0796%" height="15" fill="rgb(230,130,50)" fg:x="473" fg:w="1"/><text x="37.8793%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.7088%" y="597" width="0.0796%" height="15" fill="rgb(239,144,14)" fg:x="474" fg:w="1"/><text x="37.9588%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (17 samples, 1.35%)</title><rect x="36.5155%" y="645" width="1.3524%" height="15" fill="rgb(227,111,50)" fg:x="459" fg:w="17"/><text x="36.7655%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.35%)</title><rect x="36.5155%" y="629" width="1.3524%" height="15" fill="rgb(254,84,20)" fg:x="459" fg:w="17"/><text x="36.7655%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (17 samples, 1.35%)</title><rect x="36.5155%" y="613" width="1.3524%" height="15" fill="rgb(232,90,48)" fg:x="459" fg:w="17"/><text x="36.7655%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7884%" y="597" width="0.0796%" height="15" fill="rgb(253,63,47)" fg:x="475" fg:w="1"/><text x="38.0384%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7884%" y="581" width="0.0796%" height="15" fill="rgb(251,146,35)" fg:x="475" fg:w="1"/><text x="38.0384%" y="591.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (18 samples, 1.43%)</title><rect x="36.5155%" y="661" width="1.4320%" height="15" fill="rgb(229,192,35)" fg:x="459" fg:w="18"/><text x="36.7655%" y="671.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="37.8679%" y="645" width="0.0796%" height="15" fill="rgb(225,68,9)" fg:x="476" fg:w="1"/><text x="38.1179%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="37.8679%" y="629" width="0.0796%" height="15" fill="rgb(214,97,34)" fg:x="476" fg:w="1"/><text x="38.1179%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="37.8679%" y="613" width="0.0796%" height="15" fill="rgb(253,31,26)" fg:x="476" fg:w="1"/><text x="38.1179%" y="623.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.8679%" y="597" width="0.0796%" height="15" fill="rgb(225,151,47)" fg:x="476" fg:w="1"/><text x="38.1179%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="37.9475%" y="629" width="0.2387%" height="15" fill="rgb(206,185,9)" fg:x="477" fg:w="3"/><text x="38.1975%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="38.9817%" y="533" width="0.2387%" height="15" fill="rgb(249,65,17)" fg:x="490" fg:w="3"/><text x="39.2317%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.0613%" y="517" width="0.1591%" height="15" fill="rgb(220,110,10)" fg:x="491" fg:w="2"/><text x="39.3113%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="38.9817%" y="549" width="0.3182%" height="15" fill="rgb(222,198,49)" fg:x="490" fg:w="4"/><text x="39.2317%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.2204%" y="533" width="0.0796%" height="15" fill="rgb(239,81,13)" fg:x="493" fg:w="1"/><text x="39.4704%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="38.9817%" y="565" width="0.4773%" height="15" fill="rgb(216,128,11)" fg:x="490" fg:w="6"/><text x="39.2317%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.2999%" y="549" width="0.1591%" height="15" fill="rgb(247,156,8)" fg:x="494" fg:w="2"/><text x="39.5499%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4590%" y="565" width="0.0796%" height="15" fill="rgb(219,173,1)" fg:x="496" fg:w="1"/><text x="39.7090%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="38.8226%" y="581" width="0.8751%" height="15" fill="rgb(227,42,24)" fg:x="488" fg:w="11"/><text x="39.0726%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="39.5386%" y="565" width="0.1591%" height="15" fill="rgb(253,219,50)" fg:x="497" fg:w="2"/><text x="39.7886%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="39.5386%" y="549" width="0.1591%" height="15" fill="rgb(215,191,54)" fg:x="497" fg:w="2"/><text x="39.7886%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.11%)</title><rect x="38.6635%" y="597" width="1.1138%" height="15" fill="rgb(238,83,12)" fg:x="486" fg:w="14"/><text x="38.9135%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="39.6977%" y="581" width="0.0796%" height="15" fill="rgb(205,124,9)" fg:x="499" fg:w="1"/><text x="39.9477%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.51%)</title><rect x="38.3453%" y="613" width="1.5115%" height="15" fill="rgb(253,174,7)" fg:x="482" fg:w="19"/><text x="38.5953%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.7772%" y="597" width="0.0796%" height="15" fill="rgb(206,134,49)" fg:x="500" fg:w="1"/><text x="40.0272%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (23 samples, 1.83%)</title><rect x="38.1862%" y="629" width="1.8298%" height="15" fill="rgb(221,89,20)" fg:x="480" fg:w="23"/><text x="38.4362%" y="639.50">c..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.8568%" y="613" width="0.1591%" height="15" fill="rgb(240,205,13)" fg:x="501" fg:w="2"/><text x="40.1068%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="40.0955%" y="581" width="0.0796%" height="15" fill="rgb(237,174,32)" fg:x="504" fg:w="1"/><text x="40.3455%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.1750%" y="581" width="0.1591%" height="15" fill="rgb(226,12,15)" fg:x="505" fg:w="2"/><text x="40.4250%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="40.3341%" y="581" width="0.0796%" height="15" fill="rgb(245,160,52)" fg:x="507" fg:w="1"/><text x="40.5841%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="40.0955%" y="597" width="0.3978%" height="15" fill="rgb(253,80,21)" fg:x="504" fg:w="5"/><text x="40.3455%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="40.4137%" y="581" width="0.0796%" height="15" fill="rgb(231,225,22)" fg:x="508" fg:w="1"/><text x="40.6637%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.4137%" y="565" width="0.0796%" height="15" fill="rgb(253,185,12)" fg:x="508" fg:w="1"/><text x="40.6637%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.4932%" y="565" width="0.0796%" height="15" fill="rgb(234,197,21)" fg:x="509" fg:w="1"/><text x="40.7432%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="40.4932%" y="597" width="0.1591%" height="15" fill="rgb(210,47,30)" fg:x="509" fg:w="2"/><text x="40.7432%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="40.4932%" y="581" width="0.1591%" height="15" fill="rgb(246,139,27)" fg:x="509" fg:w="2"/><text x="40.7432%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="40.5728%" y="565" width="0.0796%" height="15" fill="rgb(226,130,16)" fg:x="510" fg:w="1"/><text x="40.8228%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.5728%" y="549" width="0.0796%" height="15" fill="rgb(237,208,20)" fg:x="510" fg:w="1"/><text x="40.8228%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.8910%" y="549" width="0.1591%" height="15" fill="rgb(245,186,28)" fg:x="514" fg:w="2"/><text x="41.1410%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="41.2092%" y="533" width="0.1591%" height="15" fill="rgb(238,105,39)" fg:x="518" fg:w="2"/><text x="41.4592%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.2888%" y="517" width="0.0796%" height="15" fill="rgb(253,228,11)" fg:x="519" fg:w="1"/><text x="41.5388%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="41.5274%" y="453" width="0.0796%" height="15" fill="rgb(224,136,38)" fg:x="522" fg:w="1"/><text x="41.7774%" y="463.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="41.5274%" y="437" width="0.0796%" height="15" fill="rgb(211,3,25)" fg:x="522" fg:w="1"/><text x="41.7774%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.5274%" y="421" width="0.0796%" height="15" fill="rgb(238,66,34)" fg:x="522" fg:w="1"/><text x="41.7774%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="41.5274%" y="405" width="0.0796%" height="15" fill="rgb(223,188,11)" fg:x="522" fg:w="1"/><text x="41.7774%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="41.3683%" y="517" width="0.3182%" height="15" fill="rgb(221,10,35)" fg:x="520" fg:w="4"/><text x="41.6183%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="41.3683%" y="501" width="0.3182%" height="15" fill="rgb(223,18,44)" fg:x="520" fg:w="4"/><text x="41.6183%" y="511.50"></text></g><g><title>kernel::model::EntityRef::into_entry (4 samples, 0.32%)</title><rect x="41.3683%" y="485" width="0.3182%" height="15" fill="rgb(220,97,41)" fg:x="520" fg:w="4"/><text x="41.6183%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="41.4479%" y="469" width="0.2387%" height="15" fill="rgb(206,95,45)" fg:x="521" fg:w="3"/><text x="41.6979%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="41.6070%" y="453" width="0.0796%" height="15" fill="rgb(209,96,13)" fg:x="523" fg:w="1"/><text x="41.8570%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.6070%" y="437" width="0.0796%" height="15" fill="rgb(237,39,34)" fg:x="523" fg:w="1"/><text x="41.8570%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.6070%" y="421" width="0.0796%" height="15" fill="rgb(213,49,47)" fg:x="523" fg:w="1"/><text x="41.8570%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.6070%" y="405" width="0.0796%" height="15" fill="rgb(205,107,27)" fg:x="523" fg:w="1"/><text x="41.8570%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.6070%" y="389" width="0.0796%" height="15" fill="rgb(212,142,9)" fg:x="523" fg:w="1"/><text x="41.8570%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.6070%" y="373" width="0.0796%" height="15" fill="rgb(226,182,0)" fg:x="523" fg:w="1"/><text x="41.8570%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.6070%" y="357" width="0.0796%" height="15" fill="rgb(231,3,53)" fg:x="523" fg:w="1"/><text x="41.8570%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.6070%" y="341" width="0.0796%" height="15" fill="rgb(246,111,28)" fg:x="523" fg:w="1"/><text x="41.8570%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.6070%" y="325" width="0.0796%" height="15" fill="rgb(254,183,7)" fg:x="523" fg:w="1"/><text x="41.8570%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.6070%" y="309" width="0.0796%" height="15" fill="rgb(247,177,28)" fg:x="523" fg:w="1"/><text x="41.8570%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.6070%" y="293" width="0.0796%" height="15" fill="rgb(244,43,1)" fg:x="523" fg:w="1"/><text x="41.8570%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.6070%" y="277" width="0.0796%" height="15" fill="rgb(207,2,35)" fg:x="523" fg:w="1"/><text x="41.8570%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.6070%" y="261" width="0.0796%" height="15" fill="rgb(213,83,22)" fg:x="523" fg:w="1"/><text x="41.8570%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.6070%" y="245" width="0.0796%" height="15" fill="rgb(246,212,13)" fg:x="523" fg:w="1"/><text x="41.8570%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.6070%" y="229" width="0.0796%" height="15" fill="rgb(213,127,46)" fg:x="523" fg:w="1"/><text x="41.8570%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.6070%" y="213" width="0.0796%" height="15" fill="rgb(219,215,39)" fg:x="523" fg:w="1"/><text x="41.8570%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.6070%" y="197" width="0.0796%" height="15" fill="rgb(227,99,17)" fg:x="523" fg:w="1"/><text x="41.8570%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.6070%" y="181" width="0.0796%" height="15" fill="rgb(208,155,18)" fg:x="523" fg:w="1"/><text x="41.8570%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="41.6070%" y="165" width="0.0796%" height="15" fill="rgb(223,204,38)" fg:x="523" fg:w="1"/><text x="41.8570%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.6070%" y="149" width="0.0796%" height="15" fill="rgb(212,114,21)" fg:x="523" fg:w="1"/><text x="41.8570%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="41.7661%" y="389" width="0.0796%" height="15" fill="rgb(250,74,13)" fg:x="525" fg:w="1"/><text x="42.0161%" y="399.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.7661%" y="405" width="0.1591%" height="15" fill="rgb(234,7,1)" fg:x="525" fg:w="2"/><text x="42.0161%" y="415.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="41.8457%" y="389" width="0.0796%" height="15" fill="rgb(207,138,31)" fg:x="526" fg:w="1"/><text x="42.0957%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="41.9252%" y="405" width="0.1591%" height="15" fill="rgb(215,186,42)" fg:x="527" fg:w="2"/><text x="42.1752%" y="415.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="41.9252%" y="389" width="0.1591%" height="15" fill="rgb(229,205,49)" fg:x="527" fg:w="2"/><text x="42.1752%" y="399.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.9252%" y="373" width="0.1591%" height="15" fill="rgb(216,156,32)" fg:x="527" fg:w="2"/><text x="42.1752%" y="383.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="41.9252%" y="357" width="0.1591%" height="15" fill="rgb(238,7,21)" fg:x="527" fg:w="2"/><text x="42.1752%" y="367.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="41.9252%" y="341" width="0.1591%" height="15" fill="rgb(249,190,22)" fg:x="527" fg:w="2"/><text x="42.1752%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.9252%" y="325" width="0.1591%" height="15" fill="rgb(253,51,31)" fg:x="527" fg:w="2"/><text x="42.1752%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.9252%" y="309" width="0.1591%" height="15" fill="rgb(237,90,54)" fg:x="527" fg:w="2"/><text x="42.1752%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.0048%" y="293" width="0.0796%" height="15" fill="rgb(250,214,33)" fg:x="528" fg:w="1"/><text x="42.2548%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0048%" y="277" width="0.0796%" height="15" fill="rgb(237,10,49)" fg:x="528" fg:w="1"/><text x="42.2548%" y="287.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.0048%" y="261" width="0.0796%" height="15" fill="rgb(241,56,36)" fg:x="528" fg:w="1"/><text x="42.2548%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0048%" y="245" width="0.0796%" height="15" fill="rgb(227,164,12)" fg:x="528" fg:w="1"/><text x="42.2548%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.0048%" y="229" width="0.0796%" height="15" fill="rgb(249,149,35)" fg:x="528" fg:w="1"/><text x="42.2548%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.0048%" y="213" width="0.0796%" height="15" fill="rgb(238,227,50)" fg:x="528" fg:w="1"/><text x="42.2548%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="42.0843%" y="213" width="0.0796%" height="15" fill="rgb(235,102,45)" fg:x="529" fg:w="1"/><text x="42.3343%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.0843%" y="197" width="0.0796%" height="15" fill="rgb(211,10,38)" fg:x="529" fg:w="1"/><text x="42.3343%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="42.0843%" y="181" width="0.0796%" height="15" fill="rgb(219,77,48)" fg:x="529" fg:w="1"/><text x="42.3343%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.0843%" y="165" width="0.0796%" height="15" fill="rgb(246,6,15)" fg:x="529" fg:w="1"/><text x="42.3343%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="42.0843%" y="149" width="0.0796%" height="15" fill="rgb(207,220,2)" fg:x="529" fg:w="1"/><text x="42.3343%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="42.0843%" y="277" width="0.1591%" height="15" fill="rgb(242,48,14)" fg:x="529" fg:w="2"/><text x="42.3343%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.0843%" y="261" width="0.1591%" height="15" fill="rgb(218,19,27)" fg:x="529" fg:w="2"/><text x="42.3343%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="42.0843%" y="245" width="0.1591%" height="15" fill="rgb(228,0,35)" fg:x="529" fg:w="2"/><text x="42.3343%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.0843%" y="229" width="0.1591%" height="15" fill="rgb(244,142,54)" fg:x="529" fg:w="2"/><text x="42.3343%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="42.1639%" y="213" width="0.0796%" height="15" fill="rgb(243,217,40)" fg:x="530" fg:w="1"/><text x="42.4139%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.1639%" y="197" width="0.0796%" height="15" fill="rgb(207,114,16)" fg:x="530" fg:w="1"/><text x="42.4139%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="42.0843%" y="325" width="0.2387%" height="15" fill="rgb(224,33,25)" fg:x="529" fg:w="3"/><text x="42.3343%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="42.0843%" y="309" width="0.2387%" height="15" fill="rgb(230,93,54)" fg:x="529" fg:w="3"/><text x="42.3343%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="42.0843%" y="293" width="0.2387%" height="15" fill="rgb(224,56,24)" fg:x="529" fg:w="3"/><text x="42.3343%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="42.2434%" y="277" width="0.0796%" height="15" fill="rgb(235,189,50)" fg:x="531" fg:w="1"/><text x="42.4934%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.2434%" y="261" width="0.0796%" height="15" fill="rgb(242,173,8)" fg:x="531" fg:w="1"/><text x="42.4934%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="42.2434%" y="245" width="0.0796%" height="15" fill="rgb(209,206,10)" fg:x="531" fg:w="1"/><text x="42.4934%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="42.2434%" y="229" width="0.0796%" height="15" fill="rgb(213,182,44)" fg:x="531" fg:w="1"/><text x="42.4934%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.2434%" y="213" width="0.0796%" height="15" fill="rgb(243,51,15)" fg:x="531" fg:w="1"/><text x="42.4934%" y="223.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="42.0843%" y="373" width="0.3182%" height="15" fill="rgb(241,13,14)" fg:x="529" fg:w="4"/><text x="42.3343%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="42.0843%" y="357" width="0.3182%" height="15" fill="rgb(239,147,24)" fg:x="529" fg:w="4"/><text x="42.3343%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="42.0843%" y="341" width="0.3182%" height="15" fill="rgb(223,129,16)" fg:x="529" fg:w="4"/><text x="42.3343%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.3230%" y="325" width="0.0796%" height="15" fill="rgb(209,169,13)" fg:x="532" fg:w="1"/><text x="42.5730%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.3230%" y="309" width="0.0796%" height="15" fill="rgb(235,159,41)" fg:x="532" fg:w="1"/><text x="42.5730%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="42.0843%" y="389" width="0.3978%" height="15" fill="rgb(223,219,48)" fg:x="529" fg:w="5"/><text x="42.3343%" y="399.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="42.4025%" y="373" width="0.0796%" height="15" fill="rgb(236,80,13)" fg:x="533" fg:w="1"/><text x="42.6525%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4821%" y="277" width="0.0796%" height="15" fill="rgb(213,5,6)" fg:x="534" fg:w="1"/><text x="42.7321%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.4821%" y="309" width="0.1591%" height="15" fill="rgb(205,59,21)" fg:x="534" fg:w="2"/><text x="42.7321%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.4821%" y="293" width="0.1591%" height="15" fill="rgb(247,137,35)" fg:x="534" fg:w="2"/><text x="42.7321%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.5617%" y="277" width="0.0796%" height="15" fill="rgb(242,208,28)" fg:x="535" fg:w="1"/><text x="42.8117%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.6412%" y="181" width="0.0796%" height="15" fill="rgb(245,62,25)" fg:x="536" fg:w="1"/><text x="42.8912%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="42.4821%" y="325" width="0.3182%" height="15" fill="rgb(233,99,54)" fg:x="534" fg:w="4"/><text x="42.7321%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.6412%" y="309" width="0.1591%" height="15" fill="rgb(213,10,37)" fg:x="536" fg:w="2"/><text x="42.8912%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.6412%" y="293" width="0.1591%" height="15" fill="rgb(235,143,30)" fg:x="536" fg:w="2"/><text x="42.8912%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.6412%" y="277" width="0.1591%" height="15" fill="rgb(250,146,33)" fg:x="536" fg:w="2"/><text x="42.8912%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.6412%" y="261" width="0.1591%" height="15" fill="rgb(226,198,42)" fg:x="536" fg:w="2"/><text x="42.8912%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.6412%" y="245" width="0.1591%" height="15" fill="rgb(222,55,6)" fg:x="536" fg:w="2"/><text x="42.8912%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.6412%" y="229" width="0.1591%" height="15" fill="rgb(213,224,31)" fg:x="536" fg:w="2"/><text x="42.8912%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.6412%" y="213" width="0.1591%" height="15" fill="rgb(226,103,35)" fg:x="536" fg:w="2"/><text x="42.8912%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.6412%" y="197" width="0.1591%" height="15" fill="rgb(205,66,45)" fg:x="536" fg:w="2"/><text x="42.8912%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.7208%" y="181" width="0.0796%" height="15" fill="rgb(226,51,42)" fg:x="537" fg:w="1"/><text x="42.9708%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.7208%" y="165" width="0.0796%" height="15" fill="rgb(206,69,1)" fg:x="537" fg:w="1"/><text x="42.9708%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.7208%" y="149" width="0.0796%" height="15" fill="rgb(213,228,47)" fg:x="537" fg:w="1"/><text x="42.9708%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.7208%" y="133" width="0.0796%" height="15" fill="rgb(224,204,18)" fg:x="537" fg:w="1"/><text x="42.9708%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7208%" y="117" width="0.0796%" height="15" fill="rgb(253,187,47)" fg:x="537" fg:w="1"/><text x="42.9708%" y="127.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (14 samples, 1.11%)</title><rect x="41.7661%" y="453" width="1.1138%" height="15" fill="rgb(232,61,2)" fg:x="525" fg:w="14"/><text x="42.0161%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.11%)</title><rect x="41.7661%" y="437" width="1.1138%" height="15" fill="rgb(213,132,35)" fg:x="525" fg:w="14"/><text x="42.0161%" y="447.50"></text></g><g><title>engine::internal::Entities::add_persisted (14 samples, 1.11%)</title><rect x="41.7661%" y="421" width="1.1138%" height="15" fill="rgb(247,33,21)" fg:x="525" fg:w="14"/><text x="42.0161%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.80%)</title><rect x="42.0843%" y="405" width="0.7955%" height="15" fill="rgb(233,71,46)" fg:x="529" fg:w="10"/><text x="42.3343%" y="415.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="42.4821%" y="389" width="0.3978%" height="15" fill="rgb(222,173,43)" fg:x="534" fg:w="5"/><text x="42.7321%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="42.4821%" y="373" width="0.3978%" height="15" fill="rgb(249,218,47)" fg:x="534" fg:w="5"/><text x="42.7321%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="42.4821%" y="357" width="0.3978%" height="15" fill="rgb(254,185,48)" fg:x="534" fg:w="5"/><text x="42.7321%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="42.4821%" y="341" width="0.3978%" height="15" fill="rgb(252,165,50)" fg:x="534" fg:w="5"/><text x="42.7321%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8003%" y="325" width="0.0796%" height="15" fill="rgb(206,219,6)" fg:x="538" fg:w="1"/><text x="43.0503%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 1.59%)</title><rect x="41.3683%" y="533" width="1.5911%" height="15" fill="rgb(212,212,45)" fg:x="520" fg:w="20"/><text x="41.6183%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 1.27%)</title><rect x="41.6866%" y="517" width="1.2729%" height="15" fill="rgb(221,31,9)" fg:x="524" fg:w="16"/><text x="41.9366%" y="527.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (16 samples, 1.27%)</title><rect x="41.6866%" y="501" width="1.2729%" height="15" fill="rgb(234,198,39)" fg:x="524" fg:w="16"/><text x="41.9366%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (16 samples, 1.27%)</title><rect x="41.6866%" y="485" width="1.2729%" height="15" fill="rgb(252,145,46)" fg:x="524" fg:w="16"/><text x="41.9366%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (16 samples, 1.27%)</title><rect x="41.6866%" y="469" width="1.2729%" height="15" fill="rgb(237,149,0)" fg:x="524" fg:w="16"/><text x="41.9366%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8799%" y="453" width="0.0796%" height="15" fill="rgb(229,65,5)" fg:x="539" fg:w="1"/><text x="43.1299%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8799%" y="437" width="0.0796%" height="15" fill="rgb(235,60,36)" fg:x="539" fg:w="1"/><text x="43.1299%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.8799%" y="421" width="0.0796%" height="15" fill="rgb(222,47,18)" fg:x="539" fg:w="1"/><text x="43.1299%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="42.9594%" y="533" width="0.0796%" height="15" fill="rgb(235,114,22)" fg:x="540" fg:w="1"/><text x="43.2094%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="42.9594%" y="517" width="0.0796%" height="15" fill="rgb(209,167,11)" fg:x="540" fg:w="1"/><text x="43.2094%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.9594%" y="501" width="0.0796%" height="15" fill="rgb(251,73,18)" fg:x="540" fg:w="1"/><text x="43.2094%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1185%" y="485" width="0.0796%" height="15" fill="rgb(217,60,17)" fg:x="542" fg:w="1"/><text x="43.3685%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1185%" y="469" width="0.0796%" height="15" fill="rgb(224,36,37)" fg:x="542" fg:w="1"/><text x="43.3685%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.1185%" y="453" width="0.0796%" height="15" fill="rgb(211,21,32)" fg:x="542" fg:w="1"/><text x="43.3685%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.1185%" y="437" width="0.0796%" height="15" fill="rgb(231,55,48)" fg:x="542" fg:w="1"/><text x="43.3685%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.1185%" y="421" width="0.0796%" height="15" fill="rgb(227,42,18)" fg:x="542" fg:w="1"/><text x="43.3685%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1185%" y="405" width="0.0796%" height="15" fill="rgb(217,2,27)" fg:x="542" fg:w="1"/><text x="43.3685%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1185%" y="389" width="0.0796%" height="15" fill="rgb(251,138,23)" fg:x="542" fg:w="1"/><text x="43.3685%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.1185%" y="373" width="0.0796%" height="15" fill="rgb(226,184,11)" fg:x="542" fg:w="1"/><text x="43.3685%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.1185%" y="357" width="0.0796%" height="15" fill="rgb(242,142,12)" fg:x="542" fg:w="1"/><text x="43.3685%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.1185%" y="341" width="0.0796%" height="15" fill="rgb(234,187,18)" fg:x="542" fg:w="1"/><text x="43.3685%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.1185%" y="325" width="0.0796%" height="15" fill="rgb(237,44,42)" fg:x="542" fg:w="1"/><text x="43.3685%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.3572%" y="373" width="0.0796%" height="15" fill="rgb(211,90,23)" fg:x="545" fg:w="1"/><text x="43.6072%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.3572%" y="357" width="0.0796%" height="15" fill="rgb(207,81,18)" fg:x="545" fg:w="1"/><text x="43.6072%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.3572%" y="341" width="0.0796%" height="15" fill="rgb(222,107,28)" fg:x="545" fg:w="1"/><text x="43.6072%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.3572%" y="325" width="0.0796%" height="15" fill="rgb(237,83,52)" fg:x="545" fg:w="1"/><text x="43.6072%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.3572%" y="309" width="0.0796%" height="15" fill="rgb(208,67,11)" fg:x="545" fg:w="1"/><text x="43.6072%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.3572%" y="293" width="0.0796%" height="15" fill="rgb(249,157,49)" fg:x="545" fg:w="1"/><text x="43.6072%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.3572%" y="277" width="0.0796%" height="15" fill="rgb(243,200,1)" fg:x="545" fg:w="1"/><text x="43.6072%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="43.0390%" y="501" width="0.4773%" height="15" fill="rgb(225,162,37)" fg:x="541" fg:w="6"/><text x="43.2890%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="43.1981%" y="485" width="0.3182%" height="15" fill="rgb(242,92,13)" fg:x="543" fg:w="4"/><text x="43.4481%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.2776%" y="469" width="0.2387%" height="15" fill="rgb(220,43,36)" fg:x="544" fg:w="3"/><text x="43.5276%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.3572%" y="453" width="0.1591%" height="15" fill="rgb(213,165,48)" fg:x="545" fg:w="2"/><text x="43.6072%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.3572%" y="437" width="0.1591%" height="15" fill="rgb(227,200,9)" fg:x="545" fg:w="2"/><text x="43.6072%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="43.3572%" y="421" width="0.1591%" height="15" fill="rgb(221,222,28)" fg:x="545" fg:w="2"/><text x="43.6072%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="43.3572%" y="405" width="0.1591%" height="15" fill="rgb(223,142,26)" fg:x="545" fg:w="2"/><text x="43.6072%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="43.3572%" y="389" width="0.1591%" height="15" fill="rgb(243,46,9)" fg:x="545" fg:w="2"/><text x="43.6072%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.4368%" y="373" width="0.0796%" height="15" fill="rgb(250,56,11)" fg:x="546" fg:w="1"/><text x="43.6868%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.4368%" y="357" width="0.0796%" height="15" fill="rgb(229,113,5)" fg:x="546" fg:w="1"/><text x="43.6868%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="43.5163%" y="485" width="0.1591%" height="15" fill="rgb(244,108,28)" fg:x="547" fg:w="2"/><text x="43.7663%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="43.5163%" y="469" width="0.1591%" height="15" fill="rgb(242,119,50)" fg:x="547" fg:w="2"/><text x="43.7663%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="43.5163%" y="453" width="0.1591%" height="15" fill="rgb(224,164,23)" fg:x="547" fg:w="2"/><text x="43.7663%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="43.5163%" y="437" width="0.1591%" height="15" fill="rgb(214,227,44)" fg:x="547" fg:w="2"/><text x="43.7663%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.5163%" y="421" width="0.1591%" height="15" fill="rgb(238,202,4)" fg:x="547" fg:w="2"/><text x="43.7663%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="43.5163%" y="501" width="0.2387%" height="15" fill="rgb(213,190,30)" fg:x="547" fg:w="3"/><text x="43.7663%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="43.6754%" y="485" width="0.0796%" height="15" fill="rgb(239,15,2)" fg:x="549" fg:w="1"/><text x="43.9254%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.6754%" y="469" width="0.0796%" height="15" fill="rgb(249,229,4)" fg:x="549" fg:w="1"/><text x="43.9254%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.8345%" y="469" width="0.0796%" height="15" fill="rgb(239,75,44)" fg:x="551" fg:w="1"/><text x="44.0845%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.9141%" y="469" width="0.0796%" height="15" fill="rgb(251,206,23)" fg:x="552" fg:w="1"/><text x="44.1641%" y="479.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (39 samples, 3.10%)</title><rect x="41.0501%" y="549" width="3.1026%" height="15" fill="rgb(215,208,0)" fg:x="516" fg:w="39"/><text x="41.3001%" y="559.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.11%)</title><rect x="43.0390%" y="533" width="1.1138%" height="15" fill="rgb(230,75,50)" fg:x="541" fg:w="14"/><text x="43.2890%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (14 samples, 1.11%)</title><rect x="43.0390%" y="517" width="1.1138%" height="15" fill="rgb(246,180,39)" fg:x="541" fg:w="14"/><text x="43.2890%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="43.7550%" y="501" width="0.3978%" height="15" fill="rgb(249,175,24)" fg:x="550" fg:w="5"/><text x="44.0050%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="43.7550%" y="485" width="0.3978%" height="15" fill="rgb(247,176,22)" fg:x="550" fg:w="5"/><text x="44.0050%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="43.9936%" y="469" width="0.1591%" height="15" fill="rgb(241,100,24)" fg:x="553" fg:w="2"/><text x="44.2436%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="44.0732%" y="453" width="0.0796%" height="15" fill="rgb(233,4,35)" fg:x="554" fg:w="1"/><text x="44.3232%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="44.0732%" y="437" width="0.0796%" height="15" fill="rgb(211,164,46)" fg:x="554" fg:w="1"/><text x="44.3232%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.0732%" y="421" width="0.0796%" height="15" fill="rgb(242,99,53)" fg:x="554" fg:w="1"/><text x="44.3232%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.0732%" y="405" width="0.0796%" height="15" fill="rgb(243,45,33)" fg:x="554" fg:w="1"/><text x="44.3232%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0732%" y="389" width="0.0796%" height="15" fill="rgb(217,55,21)" fg:x="554" fg:w="1"/><text x="44.3232%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.2323%" y="501" width="0.1591%" height="15" fill="rgb(245,145,46)" fg:x="556" fg:w="2"/><text x="44.4823%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3119%" y="485" width="0.0796%" height="15" fill="rgb(215,112,45)" fg:x="557" fg:w="1"/><text x="44.5619%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.3119%" y="469" width="0.0796%" height="15" fill="rgb(228,104,16)" fg:x="557" fg:w="1"/><text x="44.5619%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.3914%" y="485" width="0.0796%" height="15" fill="rgb(239,186,38)" fg:x="558" fg:w="1"/><text x="44.6414%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.5505%" y="277" width="0.0796%" height="15" fill="rgb(228,38,35)" fg:x="560" fg:w="1"/><text x="44.8005%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5505%" y="261" width="0.0796%" height="15" fill="rgb(251,42,40)" fg:x="560" fg:w="1"/><text x="44.8005%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5505%" y="245" width="0.0796%" height="15" fill="rgb(210,51,19)" fg:x="560" fg:w="1"/><text x="44.8005%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.5505%" y="229" width="0.0796%" height="15" fill="rgb(236,94,42)" fg:x="560" fg:w="1"/><text x="44.8005%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.5505%" y="213" width="0.0796%" height="15" fill="rgb(239,167,16)" fg:x="560" fg:w="1"/><text x="44.8005%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.5505%" y="197" width="0.0796%" height="15" fill="rgb(252,175,31)" fg:x="560" fg:w="1"/><text x="44.8005%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5505%" y="181" width="0.0796%" height="15" fill="rgb(206,166,30)" fg:x="560" fg:w="1"/><text x="44.8005%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5505%" y="165" width="0.0796%" height="15" fill="rgb(206,209,37)" fg:x="560" fg:w="1"/><text x="44.8005%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.5505%" y="149" width="0.0796%" height="15" fill="rgb(226,91,4)" fg:x="560" fg:w="1"/><text x="44.8005%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.5505%" y="133" width="0.0796%" height="15" fill="rgb(222,167,0)" fg:x="560" fg:w="1"/><text x="44.8005%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.5505%" y="117" width="0.0796%" height="15" fill="rgb(211,70,14)" fg:x="560" fg:w="1"/><text x="44.8005%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.5505%" y="101" width="0.0796%" height="15" fill="rgb(214,84,42)" fg:x="560" fg:w="1"/><text x="44.8005%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.5505%" y="85" width="0.0796%" height="15" fill="rgb(235,157,37)" fg:x="560" fg:w="1"/><text x="44.8005%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="44.4710%" y="341" width="0.3182%" height="15" fill="rgb(225,13,6)" fg:x="559" fg:w="4"/><text x="44.7210%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="44.4710%" y="325" width="0.3182%" height="15" fill="rgb(205,202,1)" fg:x="559" fg:w="4"/><text x="44.7210%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="44.4710%" y="309" width="0.3182%" height="15" fill="rgb(232,195,26)" fg:x="559" fg:w="4"/><text x="44.7210%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.5505%" y="293" width="0.2387%" height="15" fill="rgb(208,102,26)" fg:x="560" fg:w="3"/><text x="44.8005%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.6301%" y="277" width="0.1591%" height="15" fill="rgb(215,41,39)" fg:x="561" fg:w="2"/><text x="44.8801%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.6301%" y="261" width="0.1591%" height="15" fill="rgb(247,139,11)" fg:x="561" fg:w="2"/><text x="44.8801%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="44.6301%" y="245" width="0.1591%" height="15" fill="rgb(243,99,6)" fg:x="561" fg:w="2"/><text x="44.8801%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="44.6301%" y="229" width="0.1591%" height="15" fill="rgb(230,168,48)" fg:x="561" fg:w="2"/><text x="44.8801%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="44.6301%" y="213" width="0.1591%" height="15" fill="rgb(238,227,13)" fg:x="561" fg:w="2"/><text x="44.8801%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.6301%" y="197" width="0.1591%" height="15" fill="rgb(209,109,13)" fg:x="561" fg:w="2"/><text x="44.8801%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.6301%" y="181" width="0.1591%" height="15" fill="rgb(228,195,1)" fg:x="561" fg:w="2"/><text x="44.8801%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="44.6301%" y="165" width="0.1591%" height="15" fill="rgb(230,218,0)" fg:x="561" fg:w="2"/><text x="44.8801%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="44.6301%" y="149" width="0.1591%" height="15" fill="rgb(206,1,45)" fg:x="561" fg:w="2"/><text x="44.8801%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="44.6301%" y="133" width="0.1591%" height="15" fill="rgb(209,124,26)" fg:x="561" fg:w="2"/><text x="44.8801%" y="143.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="44.6301%" y="117" width="0.1591%" height="15" fill="rgb(220,59,8)" fg:x="561" fg:w="2"/><text x="44.8801%" y="127.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.6301%" y="101" width="0.1591%" height="15" fill="rgb(251,41,37)" fg:x="561" fg:w="2"/><text x="44.8801%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.7892%" y="245" width="0.0796%" height="15" fill="rgb(239,152,21)" fg:x="563" fg:w="1"/><text x="45.0392%" y="255.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="44.4710%" y="389" width="0.4773%" height="15" fill="rgb(226,32,1)" fg:x="559" fg:w="6"/><text x="44.7210%" y="399.50"></text></g><g><title>kernel::model::scopes::load_props (6 samples, 0.48%)</title><rect x="44.4710%" y="373" width="0.4773%" height="15" fill="rgb(230,154,36)" fg:x="559" fg:w="6"/><text x="44.7210%" y="383.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="44.4710%" y="357" width="0.4773%" height="15" fill="rgb(208,228,43)" fg:x="559" fg:w="6"/><text x="44.7210%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.7892%" y="341" width="0.1591%" height="15" fill="rgb(214,203,3)" fg:x="563" fg:w="2"/><text x="45.0392%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.7892%" y="325" width="0.1591%" height="15" fill="rgb(207,149,29)" fg:x="563" fg:w="2"/><text x="45.0392%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.7892%" y="309" width="0.1591%" height="15" fill="rgb(250,105,7)" fg:x="563" fg:w="2"/><text x="45.0392%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.7892%" y="293" width="0.1591%" height="15" fill="rgb(232,222,16)" fg:x="563" fg:w="2"/><text x="45.0392%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.7892%" y="277" width="0.1591%" height="15" fill="rgb(209,32,24)" fg:x="563" fg:w="2"/><text x="45.0392%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.7892%" y="261" width="0.1591%" height="15" fill="rgb(225,13,6)" fg:x="563" fg:w="2"/><text x="45.0392%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.8687%" y="245" width="0.0796%" height="15" fill="rgb(245,226,26)" fg:x="564" fg:w="1"/><text x="45.1187%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8687%" y="229" width="0.0796%" height="15" fill="rgb(229,178,27)" fg:x="564" fg:w="1"/><text x="45.1187%" y="239.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="44.9483%" y="357" width="0.0796%" height="15" fill="rgb(205,227,28)" fg:x="565" fg:w="1"/><text x="45.1983%" y="367.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="44.9483%" y="341" width="0.0796%" height="15" fill="rgb(210,191,45)" fg:x="565" fg:w="1"/><text x="45.1983%" y="351.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="44.9483%" y="325" width="0.0796%" height="15" fill="rgb(206,124,16)" fg:x="565" fg:w="1"/><text x="45.1983%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.9483%" y="309" width="0.0796%" height="15" fill="rgb(210,162,0)" fg:x="565" fg:w="1"/><text x="45.1983%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.9483%" y="293" width="0.0796%" height="15" fill="rgb(211,54,38)" fg:x="565" fg:w="1"/><text x="45.1983%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.9483%" y="277" width="0.0796%" height="15" fill="rgb(248,192,3)" fg:x="565" fg:w="1"/><text x="45.1983%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.9483%" y="261" width="0.0796%" height="15" fill="rgb(233,187,18)" fg:x="565" fg:w="1"/><text x="45.1983%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="45.0278%" y="341" width="0.0796%" height="15" fill="rgb(237,208,14)" fg:x="566" fg:w="1"/><text x="45.2778%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0278%" y="325" width="0.0796%" height="15" fill="rgb(212,77,1)" fg:x="566" fg:w="1"/><text x="45.2778%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.1074%" y="309" width="0.0796%" height="15" fill="rgb(210,163,22)" fg:x="567" fg:w="1"/><text x="45.3574%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.1074%" y="293" width="0.0796%" height="15" fill="rgb(250,58,28)" fg:x="567" fg:w="1"/><text x="45.3574%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.1074%" y="277" width="0.0796%" height="15" fill="rgb(254,28,41)" fg:x="567" fg:w="1"/><text x="45.3574%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.1074%" y="261" width="0.0796%" height="15" fill="rgb(237,162,36)" fg:x="567" fg:w="1"/><text x="45.3574%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.1074%" y="245" width="0.0796%" height="15" fill="rgb(232,56,6)" fg:x="567" fg:w="1"/><text x="45.3574%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.1074%" y="229" width="0.0796%" height="15" fill="rgb(216,127,42)" fg:x="567" fg:w="1"/><text x="45.3574%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.1074%" y="213" width="0.0796%" height="15" fill="rgb(241,69,15)" fg:x="567" fg:w="1"/><text x="45.3574%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.1074%" y="197" width="0.0796%" height="15" fill="rgb(227,180,19)" fg:x="567" fg:w="1"/><text x="45.3574%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.1074%" y="181" width="0.0796%" height="15" fill="rgb(231,188,29)" fg:x="567" fg:w="1"/><text x="45.3574%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.1074%" y="165" width="0.0796%" height="15" fill="rgb(224,176,27)" fg:x="567" fg:w="1"/><text x="45.3574%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.1074%" y="149" width="0.0796%" height="15" fill="rgb(249,214,19)" fg:x="567" fg:w="1"/><text x="45.3574%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.1074%" y="133" width="0.0796%" height="15" fill="rgb(240,0,4)" fg:x="567" fg:w="1"/><text x="45.3574%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.1074%" y="117" width="0.0796%" height="15" fill="rgb(233,28,41)" fg:x="567" fg:w="1"/><text x="45.3574%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.1074%" y="101" width="0.0796%" height="15" fill="rgb(220,90,51)" fg:x="567" fg:w="1"/><text x="45.3574%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.1074%" y="85" width="0.0796%" height="15" fill="rgb(250,52,22)" fg:x="567" fg:w="1"/><text x="45.3574%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.1074%" y="69" width="0.0796%" height="15" fill="rgb(231,152,36)" fg:x="567" fg:w="1"/><text x="45.3574%" y="79.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="44.9483%" y="389" width="0.3182%" height="15" fill="rgb(250,218,4)" fg:x="565" fg:w="4"/><text x="45.1983%" y="399.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="44.9483%" y="373" width="0.3182%" height="15" fill="rgb(210,38,21)" fg:x="565" fg:w="4"/><text x="45.1983%" y="383.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="45.0278%" y="357" width="0.2387%" height="15" fill="rgb(230,75,13)" fg:x="566" fg:w="3"/><text x="45.2778%" y="367.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="45.1074%" y="341" width="0.1591%" height="15" fill="rgb(250,68,53)" fg:x="567" fg:w="2"/><text x="45.3574%" y="351.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="45.1074%" y="325" width="0.1591%" height="15" fill="rgb(250,210,16)" fg:x="567" fg:w="2"/><text x="45.3574%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.1870%" y="309" width="0.0796%" height="15" fill="rgb(240,132,5)" fg:x="568" fg:w="1"/><text x="45.4370%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1870%" y="293" width="0.0796%" height="15" fill="rgb(222,148,48)" fg:x="568" fg:w="1"/><text x="45.4370%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.1870%" y="277" width="0.0796%" height="15" fill="rgb(247,181,24)" fg:x="568" fg:w="1"/><text x="45.4370%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1870%" y="261" width="0.0796%" height="15" fill="rgb(239,5,31)" fg:x="568" fg:w="1"/><text x="45.4370%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.1870%" y="245" width="0.0796%" height="15" fill="rgb(241,152,38)" fg:x="568" fg:w="1"/><text x="45.4370%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1870%" y="229" width="0.0796%" height="15" fill="rgb(246,200,37)" fg:x="568" fg:w="1"/><text x="45.4370%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.1870%" y="213" width="0.0796%" height="15" fill="rgb(243,210,26)" fg:x="568" fg:w="1"/><text x="45.4370%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.1870%" y="197" width="0.0796%" height="15" fill="rgb(222,22,22)" fg:x="568" fg:w="1"/><text x="45.4370%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.1870%" y="181" width="0.0796%" height="15" fill="rgb(208,129,28)" fg:x="568" fg:w="1"/><text x="45.4370%" y="191.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="45.2665%" y="309" width="0.0796%" height="15" fill="rgb(254,169,28)" fg:x="569" fg:w="1"/><text x="45.5165%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.3461%" y="309" width="0.0796%" height="15" fill="rgb(225,45,17)" fg:x="570" fg:w="1"/><text x="45.5961%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="45.4256%" y="165" width="0.1591%" height="15" fill="rgb(232,199,2)" fg:x="571" fg:w="2"/><text x="45.6756%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.4256%" y="149" width="0.1591%" height="15" fill="rgb(235,33,40)" fg:x="571" fg:w="2"/><text x="45.6756%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.5052%" y="133" width="0.0796%" height="15" fill="rgb(237,89,50)" fg:x="572" fg:w="1"/><text x="45.7552%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.5052%" y="117" width="0.0796%" height="15" fill="rgb(238,126,5)" fg:x="572" fg:w="1"/><text x="45.7552%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.5052%" y="101" width="0.0796%" height="15" fill="rgb(247,214,42)" fg:x="572" fg:w="1"/><text x="45.7552%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.5052%" y="85" width="0.0796%" height="15" fill="rgb(238,60,45)" fg:x="572" fg:w="1"/><text x="45.7552%" y="95.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="45.5052%" y="69" width="0.0796%" height="15" fill="rgb(225,69,44)" fg:x="572" fg:w="1"/><text x="45.7552%" y="79.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="45.5052%" y="53" width="0.0796%" height="15" fill="rgb(241,13,44)" fg:x="572" fg:w="1"/><text x="45.7552%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="45.4256%" y="197" width="0.2387%" height="15" fill="rgb(227,121,22)" fg:x="571" fg:w="3"/><text x="45.6756%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="45.4256%" y="181" width="0.2387%" height="15" fill="rgb(231,160,23)" fg:x="571" fg:w="3"/><text x="45.6756%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.5847%" y="165" width="0.0796%" height="15" fill="rgb(250,179,43)" fg:x="573" fg:w="1"/><text x="45.8347%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="45.4256%" y="229" width="0.3182%" height="15" fill="rgb(233,54,46)" fg:x="571" fg:w="4"/><text x="45.6756%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="45.4256%" y="213" width="0.3182%" height="15" fill="rgb(247,120,42)" fg:x="571" fg:w="4"/><text x="45.6756%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="45.6643%" y="197" width="0.0796%" height="15" fill="rgb(221,219,12)" fg:x="574" fg:w="1"/><text x="45.9143%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="45.6643%" y="181" width="0.0796%" height="15" fill="rgb(211,126,8)" fg:x="574" fg:w="1"/><text x="45.9143%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="45.7438%" y="165" width="0.0796%" height="15" fill="rgb(218,154,33)" fg:x="575" fg:w="1"/><text x="45.9938%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.7438%" y="149" width="0.0796%" height="15" fill="rgb(212,199,16)" fg:x="575" fg:w="1"/><text x="45.9938%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="45.4256%" y="261" width="0.4773%" height="15" fill="rgb(236,215,46)" fg:x="571" fg:w="6"/><text x="45.6756%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="45.4256%" y="245" width="0.4773%" height="15" fill="rgb(232,32,22)" fg:x="571" fg:w="6"/><text x="45.6756%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="45.7438%" y="229" width="0.1591%" height="15" fill="rgb(234,79,15)" fg:x="575" fg:w="2"/><text x="45.9938%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="45.7438%" y="213" width="0.1591%" height="15" fill="rgb(235,187,47)" fg:x="575" fg:w="2"/><text x="45.9938%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="45.7438%" y="197" width="0.1591%" height="15" fill="rgb(244,69,37)" fg:x="575" fg:w="2"/><text x="45.9938%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.7438%" y="181" width="0.1591%" height="15" fill="rgb(249,140,25)" fg:x="575" fg:w="2"/><text x="45.9938%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.8234%" y="165" width="0.0796%" height="15" fill="rgb(213,69,8)" fg:x="576" fg:w="1"/><text x="46.0734%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="45.9029%" y="261" width="0.1591%" height="15" fill="rgb(220,136,2)" fg:x="577" fg:w="2"/><text x="46.1529%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="45.9029%" y="245" width="0.1591%" height="15" fill="rgb(237,50,36)" fg:x="577" fg:w="2"/><text x="46.1529%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="45.9029%" y="229" width="0.1591%" height="15" fill="rgb(226,18,11)" fg:x="577" fg:w="2"/><text x="46.1529%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="45.9029%" y="213" width="0.1591%" height="15" fill="rgb(243,156,2)" fg:x="577" fg:w="2"/><text x="46.1529%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="45.9029%" y="197" width="0.1591%" height="15" fill="rgb(218,8,34)" fg:x="577" fg:w="2"/><text x="46.1529%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.9825%" y="181" width="0.0796%" height="15" fill="rgb(250,94,35)" fg:x="578" fg:w="1"/><text x="46.2325%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="46.2212%" y="101" width="0.1591%" height="15" fill="rgb(229,127,21)" fg:x="581" fg:w="2"/><text x="46.4712%" y="111.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.3007%" y="85" width="0.0796%" height="15" fill="rgb(234,49,5)" fg:x="582" fg:w="1"/><text x="46.5507%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.3803%" y="85" width="0.0796%" height="15" fill="rgb(248,12,16)" fg:x="583" fg:w="1"/><text x="46.6303%" y="95.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.3803%" y="69" width="0.0796%" height="15" fill="rgb(208,220,31)" fg:x="583" fg:w="1"/><text x="46.6303%" y="79.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (14 samples, 1.11%)</title><rect x="45.4256%" y="309" width="1.1138%" height="15" fill="rgb(243,184,0)" fg:x="571" fg:w="14"/><text x="45.6756%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.11%)</title><rect x="45.4256%" y="293" width="1.1138%" height="15" fill="rgb(217,38,21)" fg:x="571" fg:w="14"/><text x="45.6756%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (14 samples, 1.11%)</title><rect x="45.4256%" y="277" width="1.1138%" height="15" fill="rgb(239,120,45)" fg:x="571" fg:w="14"/><text x="45.6756%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="46.0621%" y="261" width="0.4773%" height="15" fill="rgb(235,33,2)" fg:x="579" fg:w="6"/><text x="46.3121%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="46.0621%" y="245" width="0.4773%" height="15" fill="rgb(249,161,5)" fg:x="579" fg:w="6"/><text x="46.3121%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="46.1416%" y="229" width="0.3978%" height="15" fill="rgb(250,165,48)" fg:x="580" fg:w="5"/><text x="46.3916%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="46.1416%" y="213" width="0.3978%" height="15" fill="rgb(221,23,45)" fg:x="580" fg:w="5"/><text x="46.3916%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="46.2212%" y="197" width="0.3182%" height="15" fill="rgb(217,108,46)" fg:x="581" fg:w="4"/><text x="46.4712%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="46.2212%" y="181" width="0.3182%" height="15" fill="rgb(254,26,35)" fg:x="581" fg:w="4"/><text x="46.4712%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="46.2212%" y="165" width="0.3182%" height="15" fill="rgb(218,223,28)" fg:x="581" fg:w="4"/><text x="46.4712%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="46.2212%" y="149" width="0.3182%" height="15" fill="rgb(242,27,47)" fg:x="581" fg:w="4"/><text x="46.4712%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="46.2212%" y="133" width="0.3182%" height="15" fill="rgb(218,39,35)" fg:x="581" fg:w="4"/><text x="46.4712%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="46.2212%" y="117" width="0.3182%" height="15" fill="rgb(232,127,16)" fg:x="581" fg:w="4"/><text x="46.4712%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.3803%" y="101" width="0.1591%" height="15" fill="rgb(231,219,51)" fg:x="583" fg:w="2"/><text x="46.6303%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="46.4598%" y="85" width="0.0796%" height="15" fill="rgb(217,220,46)" fg:x="584" fg:w="1"/><text x="46.7098%" y="95.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.4598%" y="69" width="0.0796%" height="15" fill="rgb(230,75,1)" fg:x="584" fg:w="1"/><text x="46.7098%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.4598%" y="53" width="0.0796%" height="15" fill="rgb(218,2,8)" fg:x="584" fg:w="1"/><text x="46.7098%" y="63.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.4598%" y="37" width="0.0796%" height="15" fill="rgb(206,111,30)" fg:x="584" fg:w="1"/><text x="46.7098%" y="47.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (17 samples, 1.35%)</title><rect x="45.2665%" y="373" width="1.3524%" height="15" fill="rgb(209,135,6)" fg:x="569" fg:w="17"/><text x="45.5165%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (17 samples, 1.35%)</title><rect x="45.2665%" y="357" width="1.3524%" height="15" fill="rgb(205,169,10)" fg:x="569" fg:w="17"/><text x="45.5165%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 1.35%)</title><rect x="45.2665%" y="341" width="1.3524%" height="15" fill="rgb(212,204,38)" fg:x="569" fg:w="17"/><text x="45.5165%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.35%)</title><rect x="45.2665%" y="325" width="1.3524%" height="15" fill="rgb(205,199,14)" fg:x="569" fg:w="17"/><text x="45.5165%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.5394%" y="309" width="0.0796%" height="15" fill="rgb(212,4,6)" fg:x="585" fg:w="1"/><text x="46.7894%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.5394%" y="293" width="0.0796%" height="15" fill="rgb(250,15,10)" fg:x="585" fg:w="1"/><text x="46.7894%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.6985%" y="325" width="0.0796%" height="15" fill="rgb(212,49,51)" fg:x="587" fg:w="1"/><text x="46.9485%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.8576%" y="293" width="0.0796%" height="15" fill="rgb(235,21,9)" fg:x="589" fg:w="1"/><text x="47.1076%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8576%" y="277" width="0.0796%" height="15" fill="rgb(251,31,32)" fg:x="589" fg:w="1"/><text x="47.1076%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9372%" y="293" width="0.0796%" height="15" fill="rgb(246,23,9)" fg:x="590" fg:w="1"/><text x="47.1872%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9372%" y="277" width="0.0796%" height="15" fill="rgb(225,216,14)" fg:x="590" fg:w="1"/><text x="47.1872%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9372%" y="261" width="0.0796%" height="15" fill="rgb(215,200,26)" fg:x="590" fg:w="1"/><text x="47.1872%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.0963%" y="229" width="0.0796%" height="15" fill="rgb(237,130,47)" fg:x="592" fg:w="1"/><text x="47.3463%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.0963%" y="213" width="0.0796%" height="15" fill="rgb(247,74,14)" fg:x="592" fg:w="1"/><text x="47.3463%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.2554%" y="197" width="0.0796%" height="15" fill="rgb(254,97,46)" fg:x="594" fg:w="1"/><text x="47.5054%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.2554%" y="181" width="0.0796%" height="15" fill="rgb(234,191,1)" fg:x="594" fg:w="1"/><text x="47.5054%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2554%" y="165" width="0.0796%" height="15" fill="rgb(215,165,14)" fg:x="594" fg:w="1"/><text x="47.5054%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="47.0963%" y="245" width="0.3978%" height="15" fill="rgb(230,182,6)" fg:x="592" fg:w="5"/><text x="47.3463%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="47.1758%" y="229" width="0.3182%" height="15" fill="rgb(210,127,39)" fg:x="593" fg:w="4"/><text x="47.4258%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="47.1758%" y="213" width="0.3182%" height="15" fill="rgb(223,212,51)" fg:x="593" fg:w="4"/><text x="47.4258%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="47.3349%" y="197" width="0.1591%" height="15" fill="rgb(226,176,43)" fg:x="595" fg:w="2"/><text x="47.5849%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="47.3349%" y="181" width="0.1591%" height="15" fill="rgb(222,155,4)" fg:x="595" fg:w="2"/><text x="47.5849%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="47.3349%" y="165" width="0.1591%" height="15" fill="rgb(215,149,7)" fg:x="595" fg:w="2"/><text x="47.5849%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="47.3349%" y="149" width="0.1591%" height="15" fill="rgb(252,199,23)" fg:x="595" fg:w="2"/><text x="47.5849%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.3349%" y="133" width="0.1591%" height="15" fill="rgb(245,52,29)" fg:x="595" fg:w="2"/><text x="47.5849%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.3349%" y="117" width="0.1591%" height="15" fill="rgb(221,228,19)" fg:x="595" fg:w="2"/><text x="47.5849%" y="127.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.3349%" y="101" width="0.1591%" height="15" fill="rgb(253,101,6)" fg:x="595" fg:w="2"/><text x="47.5849%" y="111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.4940%" y="213" width="0.0796%" height="15" fill="rgb(211,130,8)" fg:x="597" fg:w="1"/><text x="47.7440%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (40 samples, 3.18%)</title><rect x="44.4710%" y="421" width="3.1822%" height="15" fill="rgb(238,37,53)" fg:x="559" fg:w="40"/><text x="44.7210%" y="431.50">&lt;en..</text></g><g><title>engine::internal::Entities::add_persisted (40 samples, 3.18%)</title><rect x="44.4710%" y="405" width="3.1822%" height="15" fill="rgb(235,145,5)" fg:x="559" fg:w="40"/><text x="44.7210%" y="415.50">eng..</text></g><g><title>kernel::model::deserialize_entity (30 samples, 2.39%)</title><rect x="45.2665%" y="389" width="2.3866%" height="15" fill="rgb(244,12,43)" fg:x="569" fg:w="30"/><text x="45.5165%" y="399.50">ke..</text></g><g><title>serde_json::de::from_trait (13 samples, 1.03%)</title><rect x="46.6189%" y="373" width="1.0342%" height="15" fill="rgb(246,195,24)" fg:x="586" fg:w="13"/><text x="46.8689%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.03%)</title><rect x="46.6189%" y="357" width="1.0342%" height="15" fill="rgb(235,163,6)" fg:x="586" fg:w="13"/><text x="46.8689%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.03%)</title><rect x="46.6189%" y="341" width="1.0342%" height="15" fill="rgb(236,218,17)" fg:x="586" fg:w="13"/><text x="46.8689%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="46.7780%" y="325" width="0.8751%" height="15" fill="rgb(235,12,38)" fg:x="588" fg:w="11"/><text x="47.0280%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="46.7780%" y="309" width="0.8751%" height="15" fill="rgb(225,195,33)" fg:x="588" fg:w="11"/><text x="47.0280%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="47.0167%" y="293" width="0.6364%" height="15" fill="rgb(238,54,35)" fg:x="591" fg:w="8"/><text x="47.2667%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="47.0167%" y="277" width="0.6364%" height="15" fill="rgb(238,33,7)" fg:x="591" fg:w="8"/><text x="47.2667%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="47.0963%" y="261" width="0.5569%" height="15" fill="rgb(245,5,14)" fg:x="592" fg:w="7"/><text x="47.3463%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="47.4940%" y="245" width="0.1591%" height="15" fill="rgb(251,95,31)" fg:x="597" fg:w="2"/><text x="47.7440%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="47.4940%" y="229" width="0.1591%" height="15" fill="rgb(222,15,46)" fg:x="597" fg:w="2"/><text x="47.7440%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="47.5736%" y="213" width="0.0796%" height="15" fill="rgb(226,182,24)" fg:x="598" fg:w="1"/><text x="47.8236%" y="223.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="47.5736%" y="197" width="0.0796%" height="15" fill="rgb(229,105,41)" fg:x="598" fg:w="1"/><text x="47.8236%" y="207.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (43 samples, 3.42%)</title><rect x="44.3914%" y="501" width="3.4208%" height="15" fill="rgb(216,99,53)" fg:x="558" fg:w="43"/><text x="44.6414%" y="511.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (42 samples, 3.34%)</title><rect x="44.4710%" y="485" width="3.3413%" height="15" fill="rgb(253,26,20)" fg:x="559" fg:w="42"/><text x="44.7210%" y="495.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 3.34%)</title><rect x="44.4710%" y="469" width="3.3413%" height="15" fill="rgb(249,155,28)" fg:x="559" fg:w="42"/><text x="44.7210%" y="479.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (42 samples, 3.34%)</title><rect x="44.4710%" y="453" width="3.3413%" height="15" fill="rgb(241,221,2)" fg:x="559" fg:w="42"/><text x="44.7210%" y="463.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (42 samples, 3.34%)</title><rect x="44.4710%" y="437" width="3.3413%" height="15" fill="rgb(219,124,6)" fg:x="559" fg:w="42"/><text x="44.7210%" y="447.50">&lt;en..</text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (2 samples, 0.16%)</title><rect x="47.6531%" y="421" width="0.1591%" height="15" fill="rgb(233,37,6)" fg:x="599" fg:w="2"/><text x="47.9031%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7327%" y="405" width="0.0796%" height="15" fill="rgb(238,20,14)" fg:x="600" fg:w="1"/><text x="47.9827%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7327%" y="389" width="0.0796%" height="15" fill="rgb(232,106,27)" fg:x="600" fg:w="1"/><text x="47.9827%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.7327%" y="373" width="0.0796%" height="15" fill="rgb(246,157,24)" fg:x="600" fg:w="1"/><text x="47.9827%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.7327%" y="357" width="0.0796%" height="15" fill="rgb(214,153,10)" fg:x="600" fg:w="1"/><text x="47.9827%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.7327%" y="341" width="0.0796%" height="15" fill="rgb(212,94,6)" fg:x="600" fg:w="1"/><text x="47.9827%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.7327%" y="325" width="0.0796%" height="15" fill="rgb(254,25,27)" fg:x="600" fg:w="1"/><text x="47.9827%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.7327%" y="309" width="0.0796%" height="15" fill="rgb(250,43,52)" fg:x="600" fg:w="1"/><text x="47.9827%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.7327%" y="293" width="0.0796%" height="15" fill="rgb(221,226,40)" fg:x="600" fg:w="1"/><text x="47.9827%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.7327%" y="277" width="0.0796%" height="15" fill="rgb(235,162,34)" fg:x="600" fg:w="1"/><text x="47.9827%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.7327%" y="261" width="0.0796%" height="15" fill="rgb(239,24,26)" fg:x="600" fg:w="1"/><text x="47.9827%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.7327%" y="245" width="0.0796%" height="15" fill="rgb(244,226,11)" fg:x="600" fg:w="1"/><text x="47.9827%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.7327%" y="229" width="0.0796%" height="15" fill="rgb(225,23,10)" fg:x="600" fg:w="1"/><text x="47.9827%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.8123%" y="469" width="0.0796%" height="15" fill="rgb(249,125,6)" fg:x="601" fg:w="1"/><text x="48.0623%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.8918%" y="421" width="0.1591%" height="15" fill="rgb(246,212,12)" fg:x="602" fg:w="2"/><text x="48.1418%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.8918%" y="405" width="0.1591%" height="15" fill="rgb(230,43,32)" fg:x="602" fg:w="2"/><text x="48.1418%" y="415.50"></text></g><g><title>plugins_core::tools::get_contained_keys (50 samples, 3.98%)</title><rect x="44.1527%" y="549" width="3.9777%" height="15" fill="rgb(210,95,23)" fg:x="555" fg:w="50"/><text x="44.4027%" y="559.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (49 samples, 3.90%)</title><rect x="44.2323%" y="533" width="3.8982%" height="15" fill="rgb(229,103,33)" fg:x="556" fg:w="49"/><text x="44.4823%" y="543.50">kern..</text></g><g><title>kernel::model::Entity::load_scope (49 samples, 3.90%)</title><rect x="44.2323%" y="517" width="3.8982%" height="15" fill="rgb(222,104,27)" fg:x="556" fg:w="49"/><text x="44.4823%" y="527.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="47.8123%" y="501" width="0.3182%" height="15" fill="rgb(239,221,23)" fg:x="601" fg:w="4"/><text x="48.0623%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="47.8123%" y="485" width="0.3182%" height="15" fill="rgb(222,98,21)" fg:x="601" fg:w="4"/><text x="48.0623%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="47.8918%" y="469" width="0.2387%" height="15" fill="rgb(231,101,20)" fg:x="602" fg:w="3"/><text x="48.1418%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="47.8918%" y="453" width="0.2387%" height="15" fill="rgb(215,150,22)" fg:x="602" fg:w="3"/><text x="48.1418%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="47.8918%" y="437" width="0.2387%" height="15" fill="rgb(248,3,34)" fg:x="602" fg:w="3"/><text x="48.1418%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="48.0509%" y="421" width="0.0796%" height="15" fill="rgb(220,141,21)" fg:x="604" fg:w="1"/><text x="48.3009%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="48.0509%" y="405" width="0.0796%" height="15" fill="rgb(223,41,48)" fg:x="604" fg:w="1"/><text x="48.3009%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.2896%" y="485" width="0.0796%" height="15" fill="rgb(247,12,5)" fg:x="607" fg:w="1"/><text x="48.5396%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.2896%" y="469" width="0.0796%" height="15" fill="rgb(206,173,10)" fg:x="607" fg:w="1"/><text x="48.5396%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="48.2100%" y="501" width="0.2387%" height="15" fill="rgb(233,214,37)" fg:x="606" fg:w="3"/><text x="48.4600%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.3691%" y="485" width="0.0796%" height="15" fill="rgb(238,86,43)" fg:x="608" fg:w="1"/><text x="48.6191%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="48.4487%" y="501" width="0.0796%" height="15" fill="rgb(212,182,8)" fg:x="609" fg:w="1"/><text x="48.6987%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.4487%" y="485" width="0.0796%" height="15" fill="rgb(240,91,47)" fg:x="609" fg:w="1"/><text x="48.6987%" y="495.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.48%)</title><rect x="48.1305%" y="549" width="0.4773%" height="15" fill="rgb(209,138,26)" fg:x="605" fg:w="6"/><text x="48.3805%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="48.2100%" y="533" width="0.3978%" height="15" fill="rgb(231,163,20)" fg:x="606" fg:w="5"/><text x="48.4600%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="48.2100%" y="517" width="0.3978%" height="15" fill="rgb(214,91,54)" fg:x="606" fg:w="5"/><text x="48.4600%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5282%" y="501" width="0.0796%" height="15" fill="rgb(230,32,17)" fg:x="610" fg:w="1"/><text x="48.7782%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (100 samples, 7.96%)</title><rect x="40.7319%" y="581" width="7.9554%" height="15" fill="rgb(231,34,34)" fg:x="512" fg:w="100"/><text x="40.9819%" y="591.50">&lt;alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (99 samples, 7.88%)</title><rect x="40.8115%" y="565" width="7.8759%" height="15" fill="rgb(224,228,27)" fg:x="513" fg:w="99"/><text x="41.0615%" y="575.50">&lt;core::iter..</text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="48.6078%" y="549" width="0.0796%" height="15" fill="rgb(219,35,40)" fg:x="611" fg:w="1"/><text x="48.8578%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.7669%" y="549" width="0.0796%" height="15" fill="rgb(234,42,8)" fg:x="613" fg:w="1"/><text x="49.0169%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.0056%" y="453" width="0.0796%" height="15" fill="rgb(226,75,22)" fg:x="616" fg:w="1"/><text x="49.2556%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.0056%" y="437" width="0.0796%" height="15" fill="rgb(242,203,28)" fg:x="616" fg:w="1"/><text x="49.2556%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.0056%" y="421" width="0.0796%" height="15" fill="rgb(221,3,9)" fg:x="616" fg:w="1"/><text x="49.2556%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.0056%" y="405" width="0.0796%" height="15" fill="rgb(214,34,31)" fg:x="616" fg:w="1"/><text x="49.2556%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.0056%" y="389" width="0.0796%" height="15" fill="rgb(252,119,15)" fg:x="616" fg:w="1"/><text x="49.2556%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.0056%" y="373" width="0.0796%" height="15" fill="rgb(244,224,31)" fg:x="616" fg:w="1"/><text x="49.2556%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.0056%" y="357" width="0.0796%" height="15" fill="rgb(215,8,51)" fg:x="616" fg:w="1"/><text x="49.2556%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="49.0056%" y="533" width="0.2387%" height="15" fill="rgb(207,24,1)" fg:x="616" fg:w="3"/><text x="49.2556%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="49.0056%" y="517" width="0.2387%" height="15" fill="rgb(245,90,0)" fg:x="616" fg:w="3"/><text x="49.2556%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="49.0056%" y="501" width="0.2387%" height="15" fill="rgb(246,43,48)" fg:x="616" fg:w="3"/><text x="49.2556%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="49.0056%" y="485" width="0.2387%" height="15" fill="rgb(252,218,10)" fg:x="616" fg:w="3"/><text x="49.2556%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="49.0056%" y="469" width="0.2387%" height="15" fill="rgb(231,24,35)" fg:x="616" fg:w="3"/><text x="49.2556%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="49.0851%" y="453" width="0.1591%" height="15" fill="rgb(225,66,19)" fg:x="617" fg:w="2"/><text x="49.3351%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="49.0851%" y="437" width="0.1591%" height="15" fill="rgb(214,96,51)" fg:x="617" fg:w="2"/><text x="49.3351%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="49.3238%" y="517" width="0.1591%" height="15" fill="rgb(251,151,47)" fg:x="620" fg:w="2"/><text x="49.5738%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="49.3238%" y="501" width="0.1591%" height="15" fill="rgb(236,79,14)" fg:x="620" fg:w="2"/><text x="49.5738%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.4033%" y="485" width="0.0796%" height="15" fill="rgb(210,205,11)" fg:x="621" fg:w="1"/><text x="49.6533%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.4033%" y="469" width="0.0796%" height="15" fill="rgb(233,142,53)" fg:x="621" fg:w="1"/><text x="49.6533%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.4033%" y="453" width="0.0796%" height="15" fill="rgb(212,116,48)" fg:x="621" fg:w="1"/><text x="49.6533%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.4033%" y="437" width="0.0796%" height="15" fill="rgb(234,55,33)" fg:x="621" fg:w="1"/><text x="49.6533%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.4033%" y="421" width="0.0796%" height="15" fill="rgb(253,92,27)" fg:x="621" fg:w="1"/><text x="49.6533%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.4033%" y="405" width="0.0796%" height="15" fill="rgb(220,7,35)" fg:x="621" fg:w="1"/><text x="49.6533%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.4033%" y="389" width="0.0796%" height="15" fill="rgb(246,124,6)" fg:x="621" fg:w="1"/><text x="49.6533%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.4033%" y="373" width="0.0796%" height="15" fill="rgb(212,111,51)" fg:x="621" fg:w="1"/><text x="49.6533%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.7216%" y="293" width="0.0796%" height="15" fill="rgb(253,116,7)" fg:x="625" fg:w="1"/><text x="49.9716%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.7216%" y="277" width="0.0796%" height="15" fill="rgb(213,145,18)" fg:x="625" fg:w="1"/><text x="49.9716%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.7216%" y="261" width="0.0796%" height="15" fill="rgb(219,149,7)" fg:x="625" fg:w="1"/><text x="49.9716%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.7216%" y="245" width="0.0796%" height="15" fill="rgb(225,156,20)" fg:x="625" fg:w="1"/><text x="49.9716%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.7216%" y="229" width="0.0796%" height="15" fill="rgb(211,98,19)" fg:x="625" fg:w="1"/><text x="49.9716%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.7216%" y="213" width="0.0796%" height="15" fill="rgb(231,192,31)" fg:x="625" fg:w="1"/><text x="49.9716%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="49.5625%" y="389" width="0.3182%" height="15" fill="rgb(249,95,19)" fg:x="623" fg:w="4"/><text x="49.8125%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="49.7216%" y="373" width="0.1591%" height="15" fill="rgb(247,101,36)" fg:x="625" fg:w="2"/><text x="49.9716%" y="383.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="49.7216%" y="357" width="0.1591%" height="15" fill="rgb(221,45,43)" fg:x="625" fg:w="2"/><text x="49.9716%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="49.7216%" y="341" width="0.1591%" height="15" fill="rgb(220,42,1)" fg:x="625" fg:w="2"/><text x="49.9716%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="49.7216%" y="325" width="0.1591%" height="15" fill="rgb(236,19,24)" fg:x="625" fg:w="2"/><text x="49.9716%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="49.7216%" y="309" width="0.1591%" height="15" fill="rgb(225,192,6)" fg:x="625" fg:w="2"/><text x="49.9716%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.8011%" y="293" width="0.0796%" height="15" fill="rgb(242,30,19)" fg:x="626" fg:w="1"/><text x="50.0511%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="49.8807%" y="373" width="0.0796%" height="15" fill="rgb(240,36,6)" fg:x="627" fg:w="1"/><text x="50.1307%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.8807%" y="357" width="0.0796%" height="15" fill="rgb(246,40,28)" fg:x="627" fg:w="1"/><text x="50.1307%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.8807%" y="341" width="0.0796%" height="15" fill="rgb(225,155,33)" fg:x="627" fg:w="1"/><text x="50.1307%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.8807%" y="325" width="0.0796%" height="15" fill="rgb(240,65,18)" fg:x="627" fg:w="1"/><text x="50.1307%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8807%" y="309" width="0.0796%" height="15" fill="rgb(217,0,48)" fg:x="627" fg:w="1"/><text x="50.1307%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8807%" y="293" width="0.0796%" height="15" fill="rgb(217,80,15)" fg:x="627" fg:w="1"/><text x="50.1307%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.8807%" y="277" width="0.0796%" height="15" fill="rgb(253,43,51)" fg:x="627" fg:w="1"/><text x="50.1307%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.8807%" y="261" width="0.0796%" height="15" fill="rgb(246,60,4)" fg:x="627" fg:w="1"/><text x="50.1307%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.8807%" y="245" width="0.0796%" height="15" fill="rgb(230,40,54)" fg:x="627" fg:w="1"/><text x="50.1307%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.8807%" y="229" width="0.0796%" height="15" fill="rgb(208,20,44)" fg:x="627" fg:w="1"/><text x="50.1307%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.8807%" y="213" width="0.0796%" height="15" fill="rgb(230,22,22)" fg:x="627" fg:w="1"/><text x="50.1307%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.8807%" y="197" width="0.0796%" height="15" fill="rgb(207,57,4)" fg:x="627" fg:w="1"/><text x="50.1307%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.8807%" y="181" width="0.0796%" height="15" fill="rgb(242,130,33)" fg:x="627" fg:w="1"/><text x="50.1307%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.8807%" y="165" width="0.0796%" height="15" fill="rgb(218,66,43)" fg:x="627" fg:w="1"/><text x="50.1307%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.8807%" y="149" width="0.0796%" height="15" fill="rgb(236,105,16)" fg:x="627" fg:w="1"/><text x="50.1307%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="49.8807%" y="133" width="0.0796%" height="15" fill="rgb(230,46,15)" fg:x="627" fg:w="1"/><text x="50.1307%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="49.8807%" y="117" width="0.0796%" height="15" fill="rgb(251,172,40)" fg:x="627" fg:w="1"/><text x="50.1307%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="49.8807%" y="101" width="0.0796%" height="15" fill="rgb(225,217,32)" fg:x="627" fg:w="1"/><text x="50.1307%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.8807%" y="85" width="0.0796%" height="15" fill="rgb(243,10,29)" fg:x="627" fg:w="1"/><text x="50.1307%" y="95.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (10 samples, 0.80%)</title><rect x="49.2442%" y="533" width="0.7955%" height="15" fill="rgb(207,102,10)" fg:x="619" fg:w="10"/><text x="49.4942%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="49.4829%" y="517" width="0.5569%" height="15" fill="rgb(241,125,5)" fg:x="622" fg:w="7"/><text x="49.7329%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.48%)</title><rect x="49.5625%" y="501" width="0.4773%" height="15" fill="rgb(230,125,29)" fg:x="623" fg:w="6"/><text x="49.8125%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.48%)</title><rect x="49.5625%" y="485" width="0.4773%" height="15" fill="rgb(223,65,44)" fg:x="623" fg:w="6"/><text x="49.8125%" y="495.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="49.5625%" y="469" width="0.4773%" height="15" fill="rgb(224,188,28)" fg:x="623" fg:w="6"/><text x="49.8125%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.48%)</title><rect x="49.5625%" y="453" width="0.4773%" height="15" fill="rgb(254,197,27)" fg:x="623" fg:w="6"/><text x="49.8125%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (6 samples, 0.48%)</title><rect x="49.5625%" y="437" width="0.4773%" height="15" fill="rgb(220,200,25)" fg:x="623" fg:w="6"/><text x="49.8125%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.48%)</title><rect x="49.5625%" y="421" width="0.4773%" height="15" fill="rgb(239,225,54)" fg:x="623" fg:w="6"/><text x="49.8125%" y="431.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="49.5625%" y="405" width="0.4773%" height="15" fill="rgb(211,59,40)" fg:x="623" fg:w="6"/><text x="49.8125%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="49.8807%" y="389" width="0.1591%" height="15" fill="rgb(213,176,46)" fg:x="627" fg:w="2"/><text x="50.1307%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9602%" y="373" width="0.0796%" height="15" fill="rgb(226,99,4)" fg:x="628" fg:w="1"/><text x="50.2102%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9602%" y="357" width="0.0796%" height="15" fill="rgb(239,203,43)" fg:x="628" fg:w="1"/><text x="50.2102%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.9602%" y="341" width="0.0796%" height="15" fill="rgb(246,1,45)" fg:x="628" fg:w="1"/><text x="50.2102%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.9602%" y="325" width="0.0796%" height="15" fill="rgb(231,42,52)" fg:x="628" fg:w="1"/><text x="50.2102%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.9602%" y="309" width="0.0796%" height="15" fill="rgb(240,13,50)" fg:x="628" fg:w="1"/><text x="50.2102%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.9602%" y="293" width="0.0796%" height="15" fill="rgb(225,81,14)" fg:x="628" fg:w="1"/><text x="50.2102%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.9602%" y="277" width="0.0796%" height="15" fill="rgb(216,182,23)" fg:x="628" fg:w="1"/><text x="50.2102%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.9602%" y="261" width="0.0796%" height="15" fill="rgb(233,137,19)" fg:x="628" fg:w="1"/><text x="50.2102%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.9602%" y="245" width="0.0796%" height="15" fill="rgb(242,61,46)" fg:x="628" fg:w="1"/><text x="50.2102%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.9602%" y="229" width="0.0796%" height="15" fill="rgb(221,168,51)" fg:x="628" fg:w="1"/><text x="50.2102%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.9602%" y="213" width="0.0796%" height="15" fill="rgb(238,48,15)" fg:x="628" fg:w="1"/><text x="50.2102%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="49.9602%" y="197" width="0.0796%" height="15" fill="rgb(216,13,16)" fg:x="628" fg:w="1"/><text x="50.2102%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="49.9602%" y="181" width="0.0796%" height="15" fill="rgb(223,185,34)" fg:x="628" fg:w="1"/><text x="50.2102%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="49.9602%" y="165" width="0.0796%" height="15" fill="rgb(228,94,42)" fg:x="628" fg:w="1"/><text x="50.2102%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.9602%" y="149" width="0.0796%" height="15" fill="rgb(218,166,43)" fg:x="628" fg:w="1"/><text x="50.2102%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="51.0740%" y="181" width="0.0796%" height="15" fill="rgb(232,30,50)" fg:x="642" fg:w="1"/><text x="51.3240%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="51.0740%" y="197" width="0.1591%" height="15" fill="rgb(245,206,45)" fg:x="642" fg:w="2"/><text x="51.3240%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.1535%" y="181" width="0.0796%" height="15" fill="rgb(220,56,22)" fg:x="643" fg:w="1"/><text x="51.4035%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.1535%" y="165" width="0.0796%" height="15" fill="rgb(239,129,38)" fg:x="643" fg:w="1"/><text x="51.4035%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="50.9944%" y="229" width="0.3182%" height="15" fill="rgb(207,68,41)" fg:x="641" fg:w="4"/><text x="51.2444%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="50.9944%" y="213" width="0.3182%" height="15" fill="rgb(221,21,7)" fg:x="641" fg:w="4"/><text x="51.2444%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="51.2331%" y="197" width="0.0796%" height="15" fill="rgb(240,33,25)" fg:x="644" fg:w="1"/><text x="51.4831%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2331%" y="181" width="0.0796%" height="15" fill="rgb(242,119,10)" fg:x="644" fg:w="1"/><text x="51.4831%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="51.3126%" y="229" width="0.3978%" height="15" fill="rgb(214,149,40)" fg:x="645" fg:w="5"/><text x="51.5626%" y="239.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="51.3922%" y="213" width="0.3182%" height="15" fill="rgb(228,25,36)" fg:x="646" fg:w="4"/><text x="51.6422%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.88%)</title><rect x="50.9149%" y="245" width="0.8751%" height="15" fill="rgb(222,59,15)" fg:x="640" fg:w="11"/><text x="51.1649%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.7104%" y="229" width="0.0796%" height="15" fill="rgb(218,170,0)" fg:x="650" fg:w="1"/><text x="51.9604%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (14 samples, 1.11%)</title><rect x="50.9149%" y="277" width="1.1138%" height="15" fill="rgb(232,173,23)" fg:x="640" fg:w="14"/><text x="51.1649%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 1.11%)</title><rect x="50.9149%" y="261" width="1.1138%" height="15" fill="rgb(218,116,1)" fg:x="640" fg:w="14"/><text x="51.1649%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="51.7900%" y="245" width="0.2387%" height="15" fill="rgb(207,34,4)" fg:x="651" fg:w="3"/><text x="52.0400%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.8695%" y="229" width="0.1591%" height="15" fill="rgb(229,54,52)" fg:x="652" fg:w="2"/><text x="52.1195%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.0286%" y="277" width="0.0796%" height="15" fill="rgb(211,86,23)" fg:x="654" fg:w="1"/><text x="52.2786%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0286%" y="261" width="0.0796%" height="15" fill="rgb(254,153,34)" fg:x="654" fg:w="1"/><text x="52.2786%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 1.27%)</title><rect x="50.9149%" y="293" width="1.2729%" height="15" fill="rgb(219,220,14)" fg:x="640" fg:w="16"/><text x="51.1649%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.1082%" y="277" width="0.0796%" height="15" fill="rgb(247,8,26)" fg:x="655" fg:w="1"/><text x="52.3582%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.1082%" y="261" width="0.0796%" height="15" fill="rgb(213,129,42)" fg:x="655" fg:w="1"/><text x="52.3582%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (17 samples, 1.35%)</title><rect x="50.9149%" y="325" width="1.3524%" height="15" fill="rgb(225,95,41)" fg:x="640" fg:w="17"/><text x="51.1649%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.35%)</title><rect x="50.9149%" y="309" width="1.3524%" height="15" fill="rgb(215,134,24)" fg:x="640" fg:w="17"/><text x="51.1649%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="52.1877%" y="293" width="0.0796%" height="15" fill="rgb(235,23,54)" fg:x="656" fg:w="1"/><text x="52.4377%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.1877%" y="277" width="0.0796%" height="15" fill="rgb(229,96,31)" fg:x="656" fg:w="1"/><text x="52.4377%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 1.67%)</title><rect x="50.8353%" y="341" width="1.6706%" height="15" fill="rgb(206,111,12)" fg:x="639" fg:w="21"/><text x="51.0853%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.2673%" y="325" width="0.2387%" height="15" fill="rgb(222,177,8)" fg:x="657" fg:w="3"/><text x="52.5173%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="52.3469%" y="309" width="0.1591%" height="15" fill="rgb(251,36,52)" fg:x="658" fg:w="2"/><text x="52.5969%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (22 samples, 1.75%)</title><rect x="50.8353%" y="357" width="1.7502%" height="15" fill="rgb(216,182,29)" fg:x="639" fg:w="22"/><text x="51.0853%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="52.5060%" y="341" width="0.0796%" height="15" fill="rgb(241,145,50)" fg:x="660" fg:w="1"/><text x="52.7560%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5060%" y="325" width="0.0796%" height="15" fill="rgb(231,71,35)" fg:x="660" fg:w="1"/><text x="52.7560%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="52.5855%" y="341" width="0.0796%" height="15" fill="rgb(218,22,17)" fg:x="661" fg:w="1"/><text x="52.8355%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="52.5855%" y="325" width="0.0796%" height="15" fill="rgb(225,227,6)" fg:x="661" fg:w="1"/><text x="52.8355%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="52.5855%" y="309" width="0.0796%" height="15" fill="rgb(224,204,17)" fg:x="661" fg:w="1"/><text x="52.8355%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="52.5855%" y="293" width="0.0796%" height="15" fill="rgb(227,61,28)" fg:x="661" fg:w="1"/><text x="52.8355%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5855%" y="277" width="0.0796%" height="15" fill="rgb(242,148,23)" fg:x="661" fg:w="1"/><text x="52.8355%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (24 samples, 1.91%)</title><rect x="50.8353%" y="373" width="1.9093%" height="15" fill="rgb(237,105,33)" fg:x="639" fg:w="24"/><text x="51.0853%" y="383.50">&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="52.5855%" y="357" width="0.1591%" height="15" fill="rgb(238,218,40)" fg:x="661" fg:w="2"/><text x="52.8355%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6651%" y="341" width="0.0796%" height="15" fill="rgb(209,126,11)" fg:x="662" fg:w="1"/><text x="52.9151%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="52.7446%" y="373" width="0.1591%" height="15" fill="rgb(245,90,11)" fg:x="663" fg:w="2"/><text x="52.9946%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.8242%" y="357" width="0.0796%" height="15" fill="rgb(211,195,10)" fg:x="664" fg:w="1"/><text x="53.0742%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 2.31%)</title><rect x="50.7558%" y="389" width="2.3071%" height="15" fill="rgb(231,45,45)" fg:x="638" fg:w="29"/><text x="51.0058%" y="399.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.9037%" y="373" width="0.1591%" height="15" fill="rgb(246,100,43)" fg:x="665" fg:w="2"/><text x="53.1537%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="52.9037%" y="357" width="0.1591%" height="15" fill="rgb(241,193,8)" fg:x="665" fg:w="2"/><text x="53.1537%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="52.9037%" y="341" width="0.1591%" height="15" fill="rgb(208,76,19)" fg:x="665" fg:w="2"/><text x="53.1537%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (32 samples, 2.55%)</title><rect x="50.5967%" y="421" width="2.5457%" height="15" fill="rgb(223,69,40)" fg:x="636" fg:w="32"/><text x="50.8467%" y="431.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (30 samples, 2.39%)</title><rect x="50.7558%" y="405" width="2.3866%" height="15" fill="rgb(207,120,39)" fg:x="638" fg:w="30"/><text x="51.0058%" y="415.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="53.0628%" y="389" width="0.0796%" height="15" fill="rgb(212,209,28)" fg:x="667" fg:w="1"/><text x="53.3128%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 3.10%)</title><rect x="50.3580%" y="437" width="3.1026%" height="15" fill="rgb(246,82,29)" fg:x="633" fg:w="39"/><text x="50.6080%" y="447.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="53.1424%" y="421" width="0.3182%" height="15" fill="rgb(239,6,40)" fg:x="668" fg:w="4"/><text x="53.3924%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="53.1424%" y="405" width="0.3182%" height="15" fill="rgb(228,181,35)" fg:x="668" fg:w="4"/><text x="53.3924%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.24%)</title><rect x="53.2220%" y="389" width="0.2387%" height="15" fill="rgb(238,151,2)" fg:x="669" fg:w="3"/><text x="53.4720%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (48 samples, 3.82%)</title><rect x="50.2784%" y="469" width="3.8186%" height="15" fill="rgb(236,94,18)" fg:x="632" fg:w="48"/><text x="50.5284%" y="479.50">&lt;rpc..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (48 samples, 3.82%)</title><rect x="50.2784%" y="453" width="3.8186%" height="15" fill="rgb(208,38,14)" fg:x="632" fg:w="48"/><text x="50.5284%" y="463.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.64%)</title><rect x="53.4606%" y="437" width="0.6364%" height="15" fill="rgb(234,215,27)" fg:x="672" fg:w="8"/><text x="53.7106%" y="447.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="53.5402%" y="421" width="0.5569%" height="15" fill="rgb(254,211,53)" fg:x="673" fg:w="7"/><text x="53.7902%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.0971%" y="469" width="0.0796%" height="15" fill="rgb(216,175,11)" fg:x="680" fg:w="1"/><text x="54.3471%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (54 samples, 4.30%)</title><rect x="50.1193%" y="485" width="4.2959%" height="15" fill="rgb(246,179,26)" fg:x="630" fg:w="54"/><text x="50.3693%" y="495.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="54.1766%" y="469" width="0.2387%" height="15" fill="rgb(249,19,52)" fg:x="681" fg:w="3"/><text x="54.4266%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="54.2562%" y="453" width="0.1591%" height="15" fill="rgb(230,42,52)" fg:x="682" fg:w="2"/><text x="54.5062%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.3357%" y="437" width="0.0796%" height="15" fill="rgb(221,171,0)" fg:x="683" fg:w="1"/><text x="54.5857%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (59 samples, 4.69%)</title><rect x="50.1193%" y="517" width="4.6937%" height="15" fill="rgb(222,177,40)" fg:x="630" fg:w="59"/><text x="50.3693%" y="527.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (59 samples, 4.69%)</title><rect x="50.1193%" y="501" width="4.6937%" height="15" fill="rgb(247,34,16)" fg:x="630" fg:w="59"/><text x="50.3693%" y="511.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="54.4153%" y="485" width="0.3978%" height="15" fill="rgb(213,217,37)" fg:x="684" fg:w="5"/><text x="54.6653%" y="495.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="54.4153%" y="469" width="0.3978%" height="15" fill="rgb(231,189,24)" fg:x="684" fg:w="5"/><text x="54.6653%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2108%" y="469" width="0.0796%" height="15" fill="rgb(214,22,9)" fg:x="694" fg:w="1"/><text x="55.4608%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.2904%" y="469" width="0.2387%" height="15" fill="rgb(212,70,22)" fg:x="695" fg:w="3"/><text x="55.5404%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.4495%" y="453" width="0.0796%" height="15" fill="rgb(249,64,51)" fg:x="697" fg:w="1"/><text x="55.6995%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="55.5290%" y="469" width="0.0796%" height="15" fill="rgb(249,148,20)" fg:x="698" fg:w="1"/><text x="55.7790%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="55.6086%" y="469" width="0.0796%" height="15" fill="rgb(246,46,48)" fg:x="699" fg:w="1"/><text x="55.8586%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="55.6086%" y="453" width="0.0796%" height="15" fill="rgb(217,34,48)" fg:x="699" fg:w="1"/><text x="55.8586%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.6086%" y="437" width="0.0796%" height="15" fill="rgb(222,45,26)" fg:x="699" fg:w="1"/><text x="55.8586%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (3 samples, 0.24%)</title><rect x="55.6881%" y="469" width="0.2387%" height="15" fill="rgb(230,201,36)" fg:x="700" fg:w="3"/><text x="55.9381%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="55.7677%" y="453" width="0.1591%" height="15" fill="rgb(217,30,43)" fg:x="701" fg:w="2"/><text x="56.0177%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (2 samples, 0.16%)</title><rect x="55.7677%" y="437" width="0.1591%" height="15" fill="rgb(230,197,40)" fg:x="701" fg:w="2"/><text x="56.0177%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.16%)</title><rect x="55.7677%" y="421" width="0.1591%" height="15" fill="rgb(239,181,18)" fg:x="701" fg:w="2"/><text x="56.0177%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.9268%" y="453" width="0.0796%" height="15" fill="rgb(222,60,39)" fg:x="703" fg:w="1"/><text x="56.1768%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="56.0064%" y="437" width="0.1591%" height="15" fill="rgb(210,60,22)" fg:x="704" fg:w="2"/><text x="56.2564%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="56.1655%" y="437" width="0.0796%" height="15" fill="rgb(239,213,48)" fg:x="706" fg:w="1"/><text x="56.4155%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.2450%" y="421" width="0.1591%" height="15" fill="rgb(253,214,23)" fg:x="707" fg:w="2"/><text x="56.4950%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.3246%" y="405" width="0.0796%" height="15" fill="rgb(211,98,45)" fg:x="708" fg:w="1"/><text x="56.5746%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.3246%" y="389" width="0.0796%" height="15" fill="rgb(239,130,44)" fg:x="708" fg:w="1"/><text x="56.5746%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="56.4837%" y="389" width="0.0796%" height="15" fill="rgb(222,181,35)" fg:x="710" fg:w="1"/><text x="56.7337%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="56.4041%" y="421" width="0.2387%" height="15" fill="rgb(219,219,49)" fg:x="709" fg:w="3"/><text x="56.6541%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="56.4041%" y="405" width="0.2387%" height="15" fill="rgb(227,161,51)" fg:x="709" fg:w="3"/><text x="56.6541%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5632%" y="389" width="0.0796%" height="15" fill="rgb(239,112,27)" fg:x="711" fg:w="1"/><text x="56.8132%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.8815%" y="389" width="0.2387%" height="15" fill="rgb(248,122,18)" fg:x="715" fg:w="3"/><text x="57.1315%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.0406%" y="373" width="0.0796%" height="15" fill="rgb(245,130,23)" fg:x="717" fg:w="1"/><text x="57.2906%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="57.0406%" y="357" width="0.0796%" height="15" fill="rgb(211,225,28)" fg:x="717" fg:w="1"/><text x="57.2906%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="57.2792%" y="341" width="0.0796%" height="15" fill="rgb(242,105,44)" fg:x="720" fg:w="1"/><text x="57.5292%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5975%" y="293" width="0.0796%" height="15" fill="rgb(216,183,46)" fg:x="724" fg:w="1"/><text x="57.8475%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="57.4383%" y="325" width="0.3182%" height="15" fill="rgb(227,112,9)" fg:x="722" fg:w="4"/><text x="57.6883%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.5975%" y="309" width="0.1591%" height="15" fill="rgb(244,21,0)" fg:x="724" fg:w="2"/><text x="57.8475%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="57.6770%" y="293" width="0.0796%" height="15" fill="rgb(236,185,14)" fg:x="725" fg:w="1"/><text x="57.9270%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="57.9157%" y="309" width="0.1591%" height="15" fill="rgb(236,170,30)" fg:x="728" fg:w="2"/><text x="58.1657%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.9952%" y="293" width="0.0796%" height="15" fill="rgb(209,198,51)" fg:x="729" fg:w="1"/><text x="58.2452%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.9952%" y="277" width="0.0796%" height="15" fill="rgb(205,171,26)" fg:x="729" fg:w="1"/><text x="58.2452%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9952%" y="261" width="0.0796%" height="15" fill="rgb(246,41,49)" fg:x="729" fg:w="1"/><text x="58.2452%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.03%)</title><rect x="57.1997%" y="373" width="1.0342%" height="15" fill="rgb(240,229,12)" fg:x="719" fg:w="13"/><text x="57.4497%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.03%)</title><rect x="57.1997%" y="357" width="1.0342%" height="15" fill="rgb(212,8,54)" fg:x="719" fg:w="13"/><text x="57.4497%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="57.3588%" y="341" width="0.8751%" height="15" fill="rgb(230,114,13)" fg:x="721" fg:w="11"/><text x="57.6088%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="57.7566%" y="325" width="0.4773%" height="15" fill="rgb(229,130,28)" fg:x="726" fg:w="6"/><text x="58.0066%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.0748%" y="309" width="0.1591%" height="15" fill="rgb(206,139,15)" fg:x="730" fg:w="2"/><text x="58.3248%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.43%)</title><rect x="56.8815%" y="405" width="1.4320%" height="15" fill="rgb(241,188,35)" fg:x="715" fg:w="18"/><text x="57.1315%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.19%)</title><rect x="57.1201%" y="389" width="1.1933%" height="15" fill="rgb(208,224,26)" fg:x="718" fg:w="15"/><text x="57.3701%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2339%" y="373" width="0.0796%" height="15" fill="rgb(251,131,28)" fg:x="732" fg:w="1"/><text x="58.4839%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.15%)</title><rect x="56.2450%" y="437" width="2.1480%" height="15" fill="rgb(208,153,1)" fg:x="707" fg:w="27"/><text x="56.4950%" y="447.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 1.75%)</title><rect x="56.6428%" y="421" width="1.7502%" height="15" fill="rgb(234,33,36)" fg:x="712" fg:w="22"/><text x="56.8928%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.3134%" y="405" width="0.0796%" height="15" fill="rgb(246,42,29)" fg:x="733" fg:w="1"/><text x="58.5634%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (123 samples, 9.79%)</title><rect x="48.6874%" y="565" width="9.7852%" height="15" fill="rgb(251,114,16)" fg:x="612" fg:w="123"/><text x="48.9374%" y="575.50">&lt;core::iter::a..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (121 samples, 9.63%)</title><rect x="48.8465%" y="549" width="9.6261%" height="15" fill="rgb(233,13,38)" fg:x="614" fg:w="121"/><text x="49.0965%" y="559.50">plugins_rpc::s..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (106 samples, 8.43%)</title><rect x="50.0398%" y="533" width="8.4328%" height="15" fill="rgb(247,120,19)" fg:x="629" fg:w="106"/><text x="50.2898%" y="543.50">&lt;rpc_proto::..</text></g><g><title>kernel::model::EntityPtr::to_json_value (46 samples, 3.66%)</title><rect x="54.8130%" y="517" width="3.6595%" height="15" fill="rgb(205,11,16)" fg:x="689" fg:w="46"/><text x="55.0630%" y="527.50">kern..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (46 samples, 3.66%)</title><rect x="54.8130%" y="501" width="3.6595%" height="15" fill="rgb(228,185,19)" fg:x="689" fg:w="46"/><text x="55.0630%" y="511.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (46 samples, 3.66%)</title><rect x="54.8130%" y="485" width="3.6595%" height="15" fill="rgb(239,88,52)" fg:x="689" fg:w="46"/><text x="55.0630%" y="495.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (32 samples, 2.55%)</title><rect x="55.9268%" y="469" width="2.5457%" height="15" fill="rgb(219,23,1)" fg:x="703" fg:w="32"/><text x="56.1768%" y="479.50">se..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (31 samples, 2.47%)</title><rect x="56.0064%" y="453" width="2.4662%" height="15" fill="rgb(253,177,16)" fg:x="704" fg:w="31"/><text x="56.2564%" y="463.50">ke..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="58.3930%" y="437" width="0.0796%" height="15" fill="rgb(225,150,40)" fg:x="734" fg:w="1"/><text x="58.6430%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.3930%" y="421" width="0.0796%" height="15" fill="rgb(208,108,30)" fg:x="734" fg:w="1"/><text x="58.6430%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (225 samples, 17.90%)</title><rect x="40.6523%" y="597" width="17.8998%" height="15" fill="rgb(214,122,4)" fg:x="511" fg:w="225"/><text x="40.9023%" y="607.50">core::iter::adapters::try_pr..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (124 samples, 9.86%)</title><rect x="48.6874%" y="581" width="9.8648%" height="15" fill="rgb(229,74,37)" fg:x="612" fg:w="124"/><text x="48.9374%" y="591.50">alloc::vec::in..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.4726%" y="565" width="0.0796%" height="15" fill="rgb(233,61,41)" fg:x="735" fg:w="1"/><text x="58.7226%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.5521%" y="581" width="0.0796%" height="15" fill="rgb(238,191,5)" fg:x="736" fg:w="1"/><text x="58.8021%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.5521%" y="565" width="0.0796%" height="15" fill="rgb(233,78,24)" fg:x="736" fg:w="1"/><text x="58.8021%" y="575.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (235 samples, 18.70%)</title><rect x="40.0159%" y="613" width="18.6953%" height="15" fill="rgb(211,142,8)" fg:x="503" fg:w="235"/><text x="40.2659%" y="623.50">&lt;plugins_rpc::sessions::Sessi..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.5521%" y="597" width="0.1591%" height="15" fill="rgb(253,38,53)" fg:x="736" fg:w="2"/><text x="58.8021%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.6317%" y="581" width="0.0796%" height="15" fill="rgb(234,63,51)" fg:x="737" fg:w="1"/><text x="58.8817%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7112%" y="613" width="0.0796%" height="15" fill="rgb(205,23,31)" fg:x="738" fg:w="1"/><text x="58.9612%" y="623.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (285 samples, 22.67%)</title><rect x="36.2768%" y="677" width="22.6730%" height="15" fill="rgb(210,184,50)" fg:x="456" fg:w="285"/><text x="36.5268%" y="687.50">&lt;engine::perform::StandardPerformer ..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (264 samples, 21.00%)</title><rect x="37.9475%" y="661" width="21.0024%" height="15" fill="rgb(222,112,26)" fg:x="477" fg:w="264"/><text x="38.1975%" y="671.50">kernel::plugins::SessionPlugins::..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (264 samples, 21.00%)</title><rect x="37.9475%" y="645" width="21.0024%" height="15" fill="rgb(250,98,18)" fg:x="477" fg:w="264"/><text x="38.1975%" y="655.50">&lt;plugins_dynlib::DynamicPlugin as..</text></g><g><title>plugins_rpc::querying::have_surroundings (238 samples, 18.93%)</title><rect x="40.0159%" y="629" width="18.9340%" height="15" fill="rgb(250,34,12)" fg:x="503" fg:w="238"/><text x="40.2659%" y="639.50">plugins_rpc::querying::have_su..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="58.7908%" y="613" width="0.1591%" height="15" fill="rgb(236,141,30)" fg:x="739" fg:w="2"/><text x="59.0408%" y="623.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="58.9499%" y="613" width="0.0796%" height="15" fill="rgb(246,134,38)" fg:x="741" fg:w="1"/><text x="59.1999%" y="623.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="58.9499%" y="597" width="0.0796%" height="15" fill="rgb(240,114,4)" fg:x="741" fg:w="1"/><text x="59.1999%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="58.9499%" y="581" width="0.0796%" height="15" fill="rgb(243,113,39)" fg:x="741" fg:w="1"/><text x="59.1999%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.9499%" y="565" width="0.0796%" height="15" fill="rgb(239,215,4)" fg:x="741" fg:w="1"/><text x="59.1999%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.9499%" y="549" width="0.0796%" height="15" fill="rgb(236,229,45)" fg:x="741" fg:w="1"/><text x="59.1999%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.9499%" y="533" width="0.0796%" height="15" fill="rgb(242,2,6)" fg:x="741" fg:w="1"/><text x="59.1999%" y="543.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="59.0294%" y="581" width="0.1591%" height="15" fill="rgb(239,108,21)" fg:x="742" fg:w="2"/><text x="59.2794%" y="591.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="59.1090%" y="565" width="0.0796%" height="15" fill="rgb(215,168,34)" fg:x="743" fg:w="1"/><text x="59.3590%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="59.1090%" y="549" width="0.0796%" height="15" fill="rgb(238,31,17)" fg:x="743" fg:w="1"/><text x="59.3590%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.1090%" y="533" width="0.0796%" height="15" fill="rgb(220,133,11)" fg:x="743" fg:w="1"/><text x="59.3590%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="59.0294%" y="613" width="0.3182%" height="15" fill="rgb(212,158,23)" fg:x="742" fg:w="4"/><text x="59.2794%" y="623.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="59.0294%" y="597" width="0.3182%" height="15" fill="rgb(223,172,7)" fg:x="742" fg:w="4"/><text x="59.2794%" y="607.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="59.1885%" y="581" width="0.1591%" height="15" fill="rgb(244,3,52)" fg:x="744" fg:w="2"/><text x="59.4385%" y="591.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="59.1885%" y="565" width="0.1591%" height="15" fill="rgb(207,69,27)" fg:x="744" fg:w="2"/><text x="59.4385%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="59.1885%" y="549" width="0.1591%" height="15" fill="rgb(213,136,45)" fg:x="744" fg:w="2"/><text x="59.4385%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.1885%" y="533" width="0.1591%" height="15" fill="rgb(218,79,17)" fg:x="744" fg:w="2"/><text x="59.4385%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.1885%" y="517" width="0.1591%" height="15" fill="rgb(216,106,36)" fg:x="744" fg:w="2"/><text x="59.4385%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.1885%" y="501" width="0.1591%" height="15" fill="rgb(251,27,45)" fg:x="744" fg:w="2"/><text x="59.4385%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.1885%" y="485" width="0.1591%" height="15" fill="rgb(232,21,34)" fg:x="744" fg:w="2"/><text x="59.4385%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.1885%" y="469" width="0.1591%" height="15" fill="rgb(249,191,16)" fg:x="744" fg:w="2"/><text x="59.4385%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.1885%" y="453" width="0.1591%" height="15" fill="rgb(224,88,20)" fg:x="744" fg:w="2"/><text x="59.4385%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.1885%" y="437" width="0.1591%" height="15" fill="rgb(237,93,27)" fg:x="744" fg:w="2"/><text x="59.4385%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.1885%" y="421" width="0.1591%" height="15" fill="rgb(226,198,48)" fg:x="744" fg:w="2"/><text x="59.4385%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.2681%" y="405" width="0.0796%" height="15" fill="rgb(207,162,53)" fg:x="745" fg:w="1"/><text x="59.5181%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.3477%" y="485" width="0.0796%" height="15" fill="rgb(207,169,9)" fg:x="746" fg:w="1"/><text x="59.5977%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.3477%" y="469" width="0.0796%" height="15" fill="rgb(224,166,46)" fg:x="746" fg:w="1"/><text x="59.5977%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.3477%" y="453" width="0.0796%" height="15" fill="rgb(233,26,6)" fg:x="746" fg:w="1"/><text x="59.5977%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.3477%" y="437" width="0.0796%" height="15" fill="rgb(218,106,45)" fg:x="746" fg:w="1"/><text x="59.5977%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="59.4272%" y="485" width="0.0796%" height="15" fill="rgb(240,217,4)" fg:x="747" fg:w="1"/><text x="59.6772%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.4272%" y="469" width="0.0796%" height="15" fill="rgb(246,171,10)" fg:x="747" fg:w="1"/><text x="59.6772%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="59.4272%" y="453" width="0.0796%" height="15" fill="rgb(223,197,30)" fg:x="747" fg:w="1"/><text x="59.6772%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.4272%" y="437" width="0.0796%" height="15" fill="rgb(207,92,16)" fg:x="747" fg:w="1"/><text x="59.6772%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="59.3477%" y="597" width="0.2387%" height="15" fill="rgb(211,6,44)" fg:x="746" fg:w="3"/><text x="59.5977%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="59.3477%" y="581" width="0.2387%" height="15" fill="rgb(219,139,2)" fg:x="746" fg:w="3"/><text x="59.5977%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.3477%" y="565" width="0.2387%" height="15" fill="rgb(224,103,21)" fg:x="746" fg:w="3"/><text x="59.5977%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.3477%" y="549" width="0.2387%" height="15" fill="rgb(254,110,48)" fg:x="746" fg:w="3"/><text x="59.5977%" y="559.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="59.3477%" y="533" width="0.2387%" height="15" fill="rgb(212,88,19)" fg:x="746" fg:w="3"/><text x="59.5977%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.3477%" y="517" width="0.2387%" height="15" fill="rgb(248,103,6)" fg:x="746" fg:w="3"/><text x="59.5977%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="59.3477%" y="501" width="0.2387%" height="15" fill="rgb(214,53,46)" fg:x="746" fg:w="3"/><text x="59.5977%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.5068%" y="485" width="0.0796%" height="15" fill="rgb(236,190,24)" fg:x="748" fg:w="1"/><text x="59.7568%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.5068%" y="469" width="0.0796%" height="15" fill="rgb(254,58,28)" fg:x="748" fg:w="1"/><text x="59.7568%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="59.5068%" y="453" width="0.0796%" height="15" fill="rgb(243,63,27)" fg:x="748" fg:w="1"/><text x="59.7568%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.5068%" y="437" width="0.0796%" height="15" fill="rgb(206,81,20)" fg:x="748" fg:w="1"/><text x="59.7568%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.5068%" y="421" width="0.0796%" height="15" fill="rgb(252,69,51)" fg:x="748" fg:w="1"/><text x="59.7568%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.5863%" y="549" width="0.0796%" height="15" fill="rgb(222,213,4)" fg:x="749" fg:w="1"/><text x="59.8363%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.5863%" y="533" width="0.0796%" height="15" fill="rgb(226,198,12)" fg:x="749" fg:w="1"/><text x="59.8363%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.5863%" y="517" width="0.0796%" height="15" fill="rgb(248,115,11)" fg:x="749" fg:w="1"/><text x="59.8363%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.6659%" y="469" width="0.1591%" height="15" fill="rgb(221,148,54)" fg:x="750" fg:w="2"/><text x="59.9159%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="59.7454%" y="453" width="0.0796%" height="15" fill="rgb(214,209,51)" fg:x="751" fg:w="1"/><text x="59.9954%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.7454%" y="437" width="0.0796%" height="15" fill="rgb(249,116,53)" fg:x="751" fg:w="1"/><text x="59.9954%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="59.7454%" y="421" width="0.0796%" height="15" fill="rgb(248,170,1)" fg:x="751" fg:w="1"/><text x="59.9954%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.7454%" y="405" width="0.0796%" height="15" fill="rgb(244,105,10)" fg:x="751" fg:w="1"/><text x="59.9954%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="59.7454%" y="389" width="0.0796%" height="15" fill="rgb(229,100,5)" fg:x="751" fg:w="1"/><text x="59.9954%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.7454%" y="373" width="0.0796%" height="15" fill="rgb(233,221,39)" fg:x="751" fg:w="1"/><text x="59.9954%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="59.7454%" y="357" width="0.0796%" height="15" fill="rgb(233,88,21)" fg:x="751" fg:w="1"/><text x="59.9954%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.03%)</title><rect x="58.9499%" y="645" width="1.0342%" height="15" fill="rgb(206,13,0)" fg:x="741" fg:w="13"/><text x="59.1999%" y="655.50"></text></g><g><title>engine::internal::Entities::add_persisted (13 samples, 1.03%)</title><rect x="58.9499%" y="629" width="1.0342%" height="15" fill="rgb(242,15,35)" fg:x="741" fg:w="13"/><text x="59.1999%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.64%)</title><rect x="59.3477%" y="613" width="0.6364%" height="15" fill="rgb(247,142,41)" fg:x="746" fg:w="8"/><text x="59.5977%" y="623.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="59.5863%" y="597" width="0.3978%" height="15" fill="rgb(245,51,29)" fg:x="749" fg:w="5"/><text x="59.8363%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="59.5863%" y="581" width="0.3978%" height="15" fill="rgb(228,209,43)" fg:x="749" fg:w="5"/><text x="59.8363%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="59.5863%" y="565" width="0.3978%" height="15" fill="rgb(233,185,9)" fg:x="749" fg:w="5"/><text x="59.8363%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="59.6659%" y="549" width="0.3182%" height="15" fill="rgb(226,93,0)" fg:x="750" fg:w="4"/><text x="59.9159%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="59.6659%" y="533" width="0.3182%" height="15" fill="rgb(245,194,43)" fg:x="750" fg:w="4"/><text x="59.9159%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="59.6659%" y="517" width="0.3182%" height="15" fill="rgb(211,145,34)" fg:x="750" fg:w="4"/><text x="59.9159%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="59.6659%" y="501" width="0.3182%" height="15" fill="rgb(231,228,28)" fg:x="750" fg:w="4"/><text x="59.9159%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="59.6659%" y="485" width="0.3182%" height="15" fill="rgb(236,149,4)" fg:x="750" fg:w="4"/><text x="59.9159%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.8250%" y="469" width="0.1591%" height="15" fill="rgb(234,114,38)" fg:x="752" fg:w="2"/><text x="60.0750%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.8250%" y="453" width="0.1591%" height="15" fill="rgb(246,132,51)" fg:x="752" fg:w="2"/><text x="60.0750%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.8250%" y="437" width="0.1591%" height="15" fill="rgb(251,137,22)" fg:x="752" fg:w="2"/><text x="60.0750%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.8250%" y="421" width="0.1591%" height="15" fill="rgb(243,59,52)" fg:x="752" fg:w="2"/><text x="60.0750%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.9045%" y="405" width="0.0796%" height="15" fill="rgb(239,56,28)" fg:x="753" fg:w="1"/><text x="60.1545%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (14 samples, 1.11%)</title><rect x="58.9499%" y="661" width="1.1138%" height="15" fill="rgb(218,168,27)" fg:x="741" fg:w="14"/><text x="59.1999%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="59.9841%" y="645" width="0.0796%" height="15" fill="rgb(232,165,11)" fg:x="754" fg:w="1"/><text x="60.2341%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0636%" y="629" width="0.0796%" height="15" fill="rgb(253,55,41)" fg:x="755" fg:w="1"/><text x="60.3136%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0636%" y="613" width="0.0796%" height="15" fill="rgb(233,206,24)" fg:x="755" fg:w="1"/><text x="60.3136%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.0636%" y="597" width="0.0796%" height="15" fill="rgb(220,199,8)" fg:x="755" fg:w="1"/><text x="60.3136%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.0636%" y="581" width="0.0796%" height="15" fill="rgb(254,65,26)" fg:x="755" fg:w="1"/><text x="60.3136%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.0636%" y="565" width="0.0796%" height="15" fill="rgb(253,102,23)" fg:x="755" fg:w="1"/><text x="60.3136%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0636%" y="549" width="0.0796%" height="15" fill="rgb(231,103,35)" fg:x="755" fg:w="1"/><text x="60.3136%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0636%" y="533" width="0.0796%" height="15" fill="rgb(238,26,10)" fg:x="755" fg:w="1"/><text x="60.3136%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.0636%" y="517" width="0.0796%" height="15" fill="rgb(234,191,34)" fg:x="755" fg:w="1"/><text x="60.3136%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.0636%" y="501" width="0.0796%" height="15" fill="rgb(206,210,9)" fg:x="755" fg:w="1"/><text x="60.3136%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.0636%" y="485" width="0.0796%" height="15" fill="rgb(219,155,3)" fg:x="755" fg:w="1"/><text x="60.3136%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.0636%" y="469" width="0.0796%" height="15" fill="rgb(221,62,52)" fg:x="755" fg:w="1"/><text x="60.3136%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0636%" y="453" width="0.0796%" height="15" fill="rgb(215,197,36)" fg:x="755" fg:w="1"/><text x="60.3136%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (303 samples, 24.11%)</title><rect x="36.1973%" y="709" width="24.1050%" height="15" fill="rgb(226,222,6)" fg:x="455" fg:w="303"/><text x="36.4473%" y="719.50">&lt;plugins_core::carrying::CarryingPlugi..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (302 samples, 24.03%)</title><rect x="36.2768%" y="693" width="24.0255%" height="15" fill="rgb(215,58,28)" fg:x="456" fg:w="302"/><text x="36.5268%" y="703.50">&lt;engine::perform::StandardPerformer as..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (17 samples, 1.35%)</title><rect x="58.9499%" y="677" width="1.3524%" height="15" fill="rgb(212,148,2)" fg:x="741" fg:w="17"/><text x="59.1999%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (3 samples, 0.24%)</title><rect x="60.0636%" y="661" width="0.2387%" height="15" fill="rgb(208,21,42)" fg:x="755" fg:w="3"/><text x="60.3136%" y="671.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="60.0636%" y="645" width="0.2387%" height="15" fill="rgb(209,107,26)" fg:x="755" fg:w="3"/><text x="60.3136%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="60.1432%" y="629" width="0.1591%" height="15" fill="rgb(254,60,47)" fg:x="756" fg:w="2"/><text x="60.3932%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="60.1432%" y="613" width="0.1591%" height="15" fill="rgb(207,226,45)" fg:x="756" fg:w="2"/><text x="60.3932%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.2228%" y="597" width="0.0796%" height="15" fill="rgb(223,124,22)" fg:x="757" fg:w="1"/><text x="60.4728%" y="607.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (309 samples, 24.58%)</title><rect x="35.8791%" y="773" width="24.5823%" height="15" fill="rgb(240,162,13)" fg:x="451" fg:w="309"/><text x="36.1291%" y="783.50">&lt;kernel::plugins::SessionPlugins as ker..</text></g><g><title>core::iter::adapters::try_process (307 samples, 24.42%)</title><rect x="36.0382%" y="757" width="24.4232%" height="15" fill="rgb(244,199,31)" fg:x="453" fg:w="307"/><text x="36.2882%" y="767.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (307 samples, 24.42%)</title><rect x="36.0382%" y="741" width="24.4232%" height="15" fill="rgb(207,92,16)" fg:x="453" fg:w="307"/><text x="36.2882%" y="751.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (307 samples, 24.42%)</title><rect x="36.0382%" y="725" width="24.4232%" height="15" fill="rgb(215,31,19)" fg:x="453" fg:w="307"/><text x="36.2882%" y="735.50">&lt;core::iter::adapters::GenericShunt&lt;I,R..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (2 samples, 0.16%)</title><rect x="60.3023%" y="709" width="0.1591%" height="15" fill="rgb(245,118,14)" fg:x="758" fg:w="2"/><text x="60.5523%" y="719.50"></text></g><g><title>plugins_rpc::sessions::SessionServices::new_for_my_session (1 samples, 0.08%)</title><rect x="60.3819%" y="693" width="0.0796%" height="15" fill="rgb(248,12,46)" fg:x="759" fg:w="1"/><text x="60.6319%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (761 samples, 60.54%)</title><rect x="0.0000%" y="853" width="60.5410%" height="15" fill="rgb(209,119,0)" fg:x="0" fg:w="761"/><text x="0.2500%" y="863.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (761 samples, 60.54%)</title><rect x="0.0000%" y="837" width="60.5410%" height="15" fill="rgb(254,51,44)" fg:x="0" fg:w="761"/><text x="0.2500%" y="847.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (761 samples, 60.54%)</title><rect x="0.0000%" y="821" width="60.5410%" height="15" fill="rgb(253,182,35)" fg:x="0" fg:w="761"/><text x="0.2500%" y="831.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (310 samples, 24.66%)</title><rect x="35.8791%" y="805" width="24.6619%" height="15" fill="rgb(205,198,39)" fg:x="451" fg:w="310"/><text x="36.1291%" y="815.50">engine::session::Session::evaluate_and_..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (310 samples, 24.66%)</title><rect x="35.8791%" y="789" width="24.6619%" height="15" fill="rgb(251,175,48)" fg:x="451" fg:w="310"/><text x="36.1291%" y="799.50">engine::perform::StandardPerformer::eva..</text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="60.4614%" y="773" width="0.0796%" height="15" fill="rgb(239,38,17)" fg:x="760" fg:w="1"/><text x="60.7114%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="60.4614%" y="757" width="0.0796%" height="15" fill="rgb(212,101,8)" fg:x="760" fg:w="1"/><text x="60.7114%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="60.4614%" y="741" width="0.0796%" height="15" fill="rgb(228,35,17)" fg:x="760" fg:w="1"/><text x="60.7114%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="60.4614%" y="725" width="0.0796%" height="15" fill="rgb(214,95,8)" fg:x="760" fg:w="1"/><text x="60.7114%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="60.4614%" y="709" width="0.0796%" height="15" fill="rgb(210,176,35)" fg:x="760" fg:w="1"/><text x="60.7114%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="60.4614%" y="693" width="0.0796%" height="15" fill="rgb(226,4,3)" fg:x="760" fg:w="1"/><text x="60.7114%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="60.4614%" y="677" width="0.0796%" height="15" fill="rgb(232,133,14)" fg:x="760" fg:w="1"/><text x="60.7114%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="60.4614%" y="661" width="0.0796%" height="15" fill="rgb(250,191,8)" fg:x="760" fg:w="1"/><text x="60.7114%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="60.4614%" y="645" width="0.0796%" height="15" fill="rgb(213,12,45)" fg:x="760" fg:w="1"/><text x="60.7114%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="60.4614%" y="629" width="0.0796%" height="15" fill="rgb(233,78,26)" fg:x="760" fg:w="1"/><text x="60.7114%" y="639.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="60.4614%" y="613" width="0.0796%" height="15" fill="rgb(245,222,11)" fg:x="760" fg:w="1"/><text x="60.7114%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.4614%" y="597" width="0.0796%" height="15" fill="rgb(216,174,12)" fg:x="760" fg:w="1"/><text x="60.7114%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.4614%" y="581" width="0.0796%" height="15" fill="rgb(213,15,9)" fg:x="760" fg:w="1"/><text x="60.7114%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="60.4614%" y="565" width="0.0796%" height="15" fill="rgb(238,103,32)" fg:x="760" fg:w="1"/><text x="60.7114%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="60.4614%" y="549" width="0.0796%" height="15" fill="rgb(245,85,15)" fg:x="760" fg:w="1"/><text x="60.7114%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="60.4614%" y="533" width="0.0796%" height="15" fill="rgb(254,204,5)" fg:x="760" fg:w="1"/><text x="60.7114%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="60.4614%" y="517" width="0.0796%" height="15" fill="rgb(231,178,15)" fg:x="760" fg:w="1"/><text x="60.7114%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.4614%" y="501" width="0.0796%" height="15" fill="rgb(248,151,3)" fg:x="760" fg:w="1"/><text x="60.7114%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.5410%" y="789" width="0.0796%" height="15" fill="rgb(250,139,13)" fg:x="761" fg:w="1"/><text x="60.7910%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.7001%" y="709" width="0.0796%" height="15" fill="rgb(243,107,53)" fg:x="763" fg:w="1"/><text x="60.9501%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.7796%" y="677" width="0.0796%" height="15" fill="rgb(232,81,15)" fg:x="764" fg:w="1"/><text x="61.0296%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="60.7796%" y="661" width="0.0796%" height="15" fill="rgb(225,187,48)" fg:x="764" fg:w="1"/><text x="61.0296%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="60.8592%" y="677" width="0.1591%" height="15" fill="rgb(205,116,12)" fg:x="765" fg:w="2"/><text x="61.1092%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="61.0183%" y="677" width="0.1591%" height="15" fill="rgb(220,222,31)" fg:x="767" fg:w="2"/><text x="61.2683%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.1774%" y="661" width="0.0796%" height="15" fill="rgb(233,187,49)" fg:x="769" fg:w="1"/><text x="61.4274%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.1774%" y="645" width="0.0796%" height="15" fill="rgb(211,168,53)" fg:x="769" fg:w="1"/><text x="61.4274%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.3365%" y="645" width="0.0796%" height="15" fill="rgb(206,160,16)" fg:x="771" fg:w="1"/><text x="61.5865%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.3365%" y="629" width="0.0796%" height="15" fill="rgb(254,164,13)" fg:x="771" fg:w="1"/><text x="61.5865%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="60.7001%" y="773" width="0.7955%" height="15" fill="rgb(229,45,30)" fg:x="763" fg:w="10"/><text x="60.9501%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (10 samples, 0.80%)</title><rect x="60.7001%" y="757" width="0.7955%" height="15" fill="rgb(237,32,10)" fg:x="763" fg:w="10"/><text x="60.9501%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="60.7001%" y="741" width="0.7955%" height="15" fill="rgb(251,20,47)" fg:x="763" fg:w="10"/><text x="60.9501%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="60.7001%" y="725" width="0.7955%" height="15" fill="rgb(251,116,12)" fg:x="763" fg:w="10"/><text x="60.9501%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="60.7796%" y="709" width="0.7160%" height="15" fill="rgb(214,227,27)" fg:x="764" fg:w="9"/><text x="61.0296%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="60.7796%" y="693" width="0.7160%" height="15" fill="rgb(248,10,53)" fg:x="764" fg:w="9"/><text x="61.0296%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="61.1774%" y="677" width="0.3182%" height="15" fill="rgb(221,176,25)" fg:x="769" fg:w="4"/><text x="61.4274%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.2570%" y="661" width="0.2387%" height="15" fill="rgb(205,70,46)" fg:x="770" fg:w="3"/><text x="61.5070%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.4161%" y="645" width="0.0796%" height="15" fill="rgb(217,45,38)" fg:x="772" fg:w="1"/><text x="61.6661%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.4161%" y="629" width="0.0796%" height="15" fill="rgb(243,6,54)" fg:x="772" fg:w="1"/><text x="61.6661%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.4161%" y="613" width="0.0796%" height="15" fill="rgb(242,76,23)" fg:x="772" fg:w="1"/><text x="61.6661%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.03%)</title><rect x="60.5410%" y="805" width="1.0342%" height="15" fill="rgb(239,166,0)" fg:x="761" fg:w="13"/><text x="60.7910%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (12 samples, 0.95%)</title><rect x="60.6205%" y="789" width="0.9547%" height="15" fill="rgb(238,174,32)" fg:x="762" fg:w="12"/><text x="60.8705%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.4956%" y="773" width="0.0796%" height="15" fill="rgb(238,124,44)" fg:x="773" fg:w="1"/><text x="61.7456%" y="783.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="61.6547%" y="677" width="0.0796%" height="15" fill="rgb(206,185,9)" fg:x="775" fg:w="1"/><text x="61.9047%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.6547%" y="661" width="0.0796%" height="15" fill="rgb(215,157,17)" fg:x="775" fg:w="1"/><text x="61.9047%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="61.6547%" y="645" width="0.0796%" height="15" fill="rgb(251,17,29)" fg:x="775" fg:w="1"/><text x="61.9047%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="61.6547%" y="725" width="0.1591%" height="15" fill="rgb(227,113,27)" fg:x="775" fg:w="2"/><text x="61.9047%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="61.6547%" y="709" width="0.1591%" height="15" fill="rgb(217,226,24)" fg:x="775" fg:w="2"/><text x="61.9047%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="61.6547%" y="693" width="0.1591%" height="15" fill="rgb(251,99,38)" fg:x="775" fg:w="2"/><text x="61.9047%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="61.7343%" y="677" width="0.0796%" height="15" fill="rgb(231,147,19)" fg:x="776" fg:w="1"/><text x="61.9843%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="61.7343%" y="661" width="0.0796%" height="15" fill="rgb(230,86,8)" fg:x="776" fg:w="1"/><text x="61.9843%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7343%" y="645" width="0.0796%" height="15" fill="rgb(237,159,39)" fg:x="776" fg:w="1"/><text x="61.9843%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7343%" y="629" width="0.0796%" height="15" fill="rgb(247,179,47)" fg:x="776" fg:w="1"/><text x="61.9843%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="61.8138%" y="709" width="0.0796%" height="15" fill="rgb(253,152,26)" fg:x="777" fg:w="1"/><text x="62.0638%" y="719.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="61.8138%" y="693" width="0.0796%" height="15" fill="rgb(222,211,15)" fg:x="777" fg:w="1"/><text x="62.0638%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.8138%" y="677" width="0.0796%" height="15" fill="rgb(236,193,6)" fg:x="777" fg:w="1"/><text x="62.0638%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.8138%" y="661" width="0.0796%" height="15" fill="rgb(226,206,10)" fg:x="777" fg:w="1"/><text x="62.0638%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.8138%" y="645" width="0.0796%" height="15" fill="rgb(213,125,22)" fg:x="777" fg:w="1"/><text x="62.0638%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.8138%" y="629" width="0.0796%" height="15" fill="rgb(221,66,28)" fg:x="777" fg:w="1"/><text x="62.0638%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.8138%" y="613" width="0.0796%" height="15" fill="rgb(222,84,53)" fg:x="777" fg:w="1"/><text x="62.0638%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.8138%" y="597" width="0.0796%" height="15" fill="rgb(243,50,15)" fg:x="777" fg:w="1"/><text x="62.0638%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.8138%" y="581" width="0.0796%" height="15" fill="rgb(208,184,23)" fg:x="777" fg:w="1"/><text x="62.0638%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.8138%" y="565" width="0.0796%" height="15" fill="rgb(221,83,2)" fg:x="777" fg:w="1"/><text x="62.0638%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.8138%" y="549" width="0.0796%" height="15" fill="rgb(236,53,24)" fg:x="777" fg:w="1"/><text x="62.0638%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.8138%" y="533" width="0.0796%" height="15" fill="rgb(244,171,29)" fg:x="777" fg:w="1"/><text x="62.0638%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.8138%" y="517" width="0.0796%" height="15" fill="rgb(205,19,11)" fg:x="777" fg:w="1"/><text x="62.0638%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.8138%" y="501" width="0.0796%" height="15" fill="rgb(207,108,29)" fg:x="777" fg:w="1"/><text x="62.0638%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.8138%" y="485" width="0.0796%" height="15" fill="rgb(236,215,43)" fg:x="777" fg:w="1"/><text x="62.0638%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.8138%" y="469" width="0.0796%" height="15" fill="rgb(213,58,35)" fg:x="777" fg:w="1"/><text x="62.0638%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.8138%" y="453" width="0.0796%" height="15" fill="rgb(220,211,46)" fg:x="777" fg:w="1"/><text x="62.0638%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.8138%" y="437" width="0.0796%" height="15" fill="rgb(212,134,16)" fg:x="777" fg:w="1"/><text x="62.0638%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8138%" y="421" width="0.0796%" height="15" fill="rgb(232,90,44)" fg:x="777" fg:w="1"/><text x="62.0638%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="61.5752%" y="757" width="0.4773%" height="15" fill="rgb(212,18,36)" fg:x="774" fg:w="6"/><text x="61.8252%" y="767.50"></text></g><g><title>engine::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="61.5752%" y="741" width="0.4773%" height="15" fill="rgb(206,112,24)" fg:x="774" fg:w="6"/><text x="61.8252%" y="751.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.24%)</title><rect x="61.8138%" y="725" width="0.2387%" height="15" fill="rgb(238,223,40)" fg:x="777" fg:w="3"/><text x="62.0638%" y="735.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="61.8934%" y="709" width="0.1591%" height="15" fill="rgb(226,169,20)" fg:x="778" fg:w="2"/><text x="62.1434%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.8934%" y="693" width="0.1591%" height="15" fill="rgb(241,64,52)" fg:x="778" fg:w="2"/><text x="62.1434%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.8934%" y="677" width="0.1591%" height="15" fill="rgb(228,120,25)" fg:x="778" fg:w="2"/><text x="62.1434%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.9730%" y="661" width="0.0796%" height="15" fill="rgb(234,108,19)" fg:x="779" fg:w="1"/><text x="62.2230%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9730%" y="645" width="0.0796%" height="15" fill="rgb(236,133,29)" fg:x="779" fg:w="1"/><text x="62.2230%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.9730%" y="629" width="0.0796%" height="15" fill="rgb(246,174,53)" fg:x="779" fg:w="1"/><text x="62.2230%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9730%" y="613" width="0.0796%" height="15" fill="rgb(210,105,35)" fg:x="779" fg:w="1"/><text x="62.2230%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.9730%" y="597" width="0.0796%" height="15" fill="rgb(225,27,26)" fg:x="779" fg:w="1"/><text x="62.2230%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9730%" y="581" width="0.0796%" height="15" fill="rgb(233,2,39)" fg:x="779" fg:w="1"/><text x="62.2230%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.9730%" y="565" width="0.0796%" height="15" fill="rgb(219,164,26)" fg:x="779" fg:w="1"/><text x="62.2230%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9730%" y="549" width="0.0796%" height="15" fill="rgb(236,211,5)" fg:x="779" fg:w="1"/><text x="62.2230%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.9730%" y="533" width="0.0796%" height="15" fill="rgb(244,227,23)" fg:x="779" fg:w="1"/><text x="62.2230%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9730%" y="517" width="0.0796%" height="15" fill="rgb(230,184,8)" fg:x="779" fg:w="1"/><text x="62.2230%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.9730%" y="501" width="0.0796%" height="15" fill="rgb(217,125,48)" fg:x="779" fg:w="1"/><text x="62.2230%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9730%" y="485" width="0.0796%" height="15" fill="rgb(223,192,47)" fg:x="779" fg:w="1"/><text x="62.2230%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.9730%" y="469" width="0.0796%" height="15" fill="rgb(226,119,10)" fg:x="779" fg:w="1"/><text x="62.2230%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.56%)</title><rect x="61.5752%" y="773" width="0.5569%" height="15" fill="rgb(221,49,29)" fg:x="774" fg:w="7"/><text x="61.8252%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="62.0525%" y="757" width="0.0796%" height="15" fill="rgb(217,205,19)" fg:x="780" fg:w="1"/><text x="62.3025%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="62.0525%" y="741" width="0.0796%" height="15" fill="rgb(242,104,7)" fg:x="780" fg:w="1"/><text x="62.3025%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.0525%" y="725" width="0.0796%" height="15" fill="rgb(209,154,48)" fg:x="780" fg:w="1"/><text x="62.3025%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.0525%" y="709" width="0.0796%" height="15" fill="rgb(219,213,46)" fg:x="780" fg:w="1"/><text x="62.3025%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.0525%" y="693" width="0.0796%" height="15" fill="rgb(229,105,38)" fg:x="780" fg:w="1"/><text x="62.3025%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="62.0525%" y="677" width="0.0796%" height="15" fill="rgb(205,151,5)" fg:x="780" fg:w="1"/><text x="62.3025%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="62.0525%" y="661" width="0.0796%" height="15" fill="rgb(248,115,40)" fg:x="780" fg:w="1"/><text x="62.3025%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.0525%" y="645" width="0.0796%" height="15" fill="rgb(206,179,2)" fg:x="780" fg:w="1"/><text x="62.3025%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.0525%" y="629" width="0.0796%" height="15" fill="rgb(230,103,24)" fg:x="780" fg:w="1"/><text x="62.3025%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.0525%" y="613" width="0.0796%" height="15" fill="rgb(218,152,4)" fg:x="780" fg:w="1"/><text x="62.3025%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.0525%" y="597" width="0.0796%" height="15" fill="rgb(236,161,54)" fg:x="780" fg:w="1"/><text x="62.3025%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.0525%" y="581" width="0.0796%" height="15" fill="rgb(226,65,17)" fg:x="780" fg:w="1"/><text x="62.3025%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.0525%" y="565" width="0.0796%" height="15" fill="rgb(221,134,44)" fg:x="780" fg:w="1"/><text x="62.3025%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.0525%" y="549" width="0.0796%" height="15" fill="rgb(251,129,4)" fg:x="780" fg:w="1"/><text x="62.3025%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.0525%" y="533" width="0.0796%" height="15" fill="rgb(244,32,34)" fg:x="780" fg:w="1"/><text x="62.3025%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="62.1321%" y="741" width="0.0796%" height="15" fill="rgb(251,224,37)" fg:x="781" fg:w="1"/><text x="62.3821%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.1321%" y="725" width="0.0796%" height="15" fill="rgb(248,117,31)" fg:x="781" fg:w="1"/><text x="62.3821%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.1321%" y="709" width="0.0796%" height="15" fill="rgb(222,208,37)" fg:x="781" fg:w="1"/><text x="62.3821%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.1321%" y="693" width="0.0796%" height="15" fill="rgb(234,211,25)" fg:x="781" fg:w="1"/><text x="62.3821%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.1321%" y="677" width="0.0796%" height="15" fill="rgb(211,72,6)" fg:x="781" fg:w="1"/><text x="62.3821%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.1321%" y="661" width="0.0796%" height="15" fill="rgb(249,198,38)" fg:x="781" fg:w="1"/><text x="62.3821%" y="671.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.1321%" y="645" width="0.0796%" height="15" fill="rgb(221,86,51)" fg:x="781" fg:w="1"/><text x="62.3821%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.1321%" y="629" width="0.0796%" height="15" fill="rgb(226,178,43)" fg:x="781" fg:w="1"/><text x="62.3821%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.1321%" y="613" width="0.0796%" height="15" fill="rgb(215,145,7)" fg:x="781" fg:w="1"/><text x="62.3821%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.1321%" y="597" width="0.0796%" height="15" fill="rgb(250,202,36)" fg:x="781" fg:w="1"/><text x="62.3821%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.1321%" y="581" width="0.0796%" height="15" fill="rgb(215,86,13)" fg:x="781" fg:w="1"/><text x="62.3821%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.1321%" y="565" width="0.0796%" height="15" fill="rgb(221,134,12)" fg:x="781" fg:w="1"/><text x="62.3821%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.1321%" y="549" width="0.0796%" height="15" fill="rgb(213,82,10)" fg:x="781" fg:w="1"/><text x="62.3821%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.1321%" y="533" width="0.0796%" height="15" fill="rgb(214,142,0)" fg:x="781" fg:w="1"/><text x="62.3821%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.1321%" y="517" width="0.0796%" height="15" fill="rgb(205,145,9)" fg:x="781" fg:w="1"/><text x="62.3821%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="62.1321%" y="501" width="0.0796%" height="15" fill="rgb(244,214,8)" fg:x="781" fg:w="1"/><text x="62.3821%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="62.1321%" y="485" width="0.0796%" height="15" fill="rgb(224,72,51)" fg:x="781" fg:w="1"/><text x="62.3821%" y="495.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="62.1321%" y="469" width="0.0796%" height="15" fill="rgb(233,137,37)" fg:x="781" fg:w="1"/><text x="62.3821%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (10 samples, 0.80%)</title><rect x="61.5752%" y="805" width="0.7955%" height="15" fill="rgb(208,71,28)" fg:x="774" fg:w="10"/><text x="61.8252%" y="815.50"></text></g><g><title>engine::session::Session::new (10 samples, 0.80%)</title><rect x="61.5752%" y="789" width="0.7955%" height="15" fill="rgb(226,31,7)" fg:x="774" fg:w="10"/><text x="61.8252%" y="799.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (3 samples, 0.24%)</title><rect x="62.1321%" y="773" width="0.2387%" height="15" fill="rgb(229,62,18)" fg:x="781" fg:w="3"/><text x="62.3821%" y="783.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.24%)</title><rect x="62.1321%" y="757" width="0.2387%" height="15" fill="rgb(226,74,28)" fg:x="781" fg:w="3"/><text x="62.3821%" y="767.50"></text></g><g><title>libloading::os::unix::Library::open (2 samples, 0.16%)</title><rect x="62.2116%" y="741" width="0.1591%" height="15" fill="rgb(214,170,18)" fg:x="782" fg:w="2"/><text x="62.4616%" y="751.50"></text></g><g><title>dlopen (2 samples, 0.16%)</title><rect x="62.2116%" y="725" width="0.1591%" height="15" fill="rgb(227,229,35)" fg:x="782" fg:w="2"/><text x="62.4616%" y="735.50"></text></g><g><title>_dl_catch_error (2 samples, 0.16%)</title><rect x="62.2116%" y="709" width="0.1591%" height="15" fill="rgb(225,181,39)" fg:x="782" fg:w="2"/><text x="62.4616%" y="719.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="62.2116%" y="693" width="0.1591%" height="15" fill="rgb(253,124,44)" fg:x="782" fg:w="2"/><text x="62.4616%" y="703.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="62.2116%" y="677" width="0.1591%" height="15" fill="rgb(220,75,18)" fg:x="782" fg:w="2"/><text x="62.4616%" y="687.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="62.2116%" y="661" width="0.1591%" height="15" fill="rgb(239,175,43)" fg:x="782" fg:w="2"/><text x="62.4616%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="62.3707%" y="757" width="0.0796%" height="15" fill="rgb(228,112,50)" fg:x="784" fg:w="1"/><text x="62.6207%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="62.3707%" y="741" width="0.0796%" height="15" fill="rgb(232,105,36)" fg:x="784" fg:w="1"/><text x="62.6207%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="62.3707%" y="725" width="0.0796%" height="15" fill="rgb(227,137,47)" fg:x="784" fg:w="1"/><text x="62.6207%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="62.4503%" y="741" width="0.0796%" height="15" fill="rgb(217,51,9)" fg:x="785" fg:w="1"/><text x="62.7003%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.4503%" y="725" width="0.0796%" height="15" fill="rgb(245,117,0)" fg:x="785" fg:w="1"/><text x="62.7003%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="62.4503%" y="709" width="0.0796%" height="15" fill="rgb(252,52,30)" fg:x="785" fg:w="1"/><text x="62.7003%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.5298%" y="613" width="0.0796%" height="15" fill="rgb(227,85,33)" fg:x="786" fg:w="1"/><text x="62.7798%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5298%" y="597" width="0.0796%" height="15" fill="rgb(220,157,20)" fg:x="786" fg:w="1"/><text x="62.7798%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5298%" y="581" width="0.0796%" height="15" fill="rgb(254,14,34)" fg:x="786" fg:w="1"/><text x="62.7798%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.5298%" y="565" width="0.0796%" height="15" fill="rgb(216,103,41)" fg:x="786" fg:w="1"/><text x="62.7798%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.5298%" y="549" width="0.0796%" height="15" fill="rgb(245,221,9)" fg:x="786" fg:w="1"/><text x="62.7798%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.5298%" y="533" width="0.0796%" height="15" fill="rgb(254,136,47)" fg:x="786" fg:w="1"/><text x="62.7798%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.5298%" y="517" width="0.0796%" height="15" fill="rgb(235,71,46)" fg:x="786" fg:w="1"/><text x="62.7798%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.5298%" y="501" width="0.0796%" height="15" fill="rgb(242,154,29)" fg:x="786" fg:w="1"/><text x="62.7798%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.5298%" y="485" width="0.0796%" height="15" fill="rgb(210,65,31)" fg:x="786" fg:w="1"/><text x="62.7798%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.5298%" y="469" width="0.0796%" height="15" fill="rgb(244,9,50)" fg:x="786" fg:w="1"/><text x="62.7798%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.5298%" y="453" width="0.0796%" height="15" fill="rgb(215,141,38)" fg:x="786" fg:w="1"/><text x="62.7798%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.5298%" y="437" width="0.0796%" height="15" fill="rgb(241,129,6)" fg:x="786" fg:w="1"/><text x="62.7798%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.5298%" y="421" width="0.0796%" height="15" fill="rgb(253,169,4)" fg:x="786" fg:w="1"/><text x="62.7798%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6094%" y="613" width="0.0796%" height="15" fill="rgb(237,82,36)" fg:x="787" fg:w="1"/><text x="62.8594%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6094%" y="597" width="0.0796%" height="15" fill="rgb(209,171,11)" fg:x="787" fg:w="1"/><text x="62.8594%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.6094%" y="581" width="0.0796%" height="15" fill="rgb(242,19,22)" fg:x="787" fg:w="1"/><text x="62.8594%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.6094%" y="565" width="0.0796%" height="15" fill="rgb(251,122,24)" fg:x="787" fg:w="1"/><text x="62.8594%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.6094%" y="549" width="0.0796%" height="15" fill="rgb(226,166,42)" fg:x="787" fg:w="1"/><text x="62.8594%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.6094%" y="533" width="0.0796%" height="15" fill="rgb(244,101,48)" fg:x="787" fg:w="1"/><text x="62.8594%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.6094%" y="517" width="0.0796%" height="15" fill="rgb(227,125,1)" fg:x="787" fg:w="1"/><text x="62.8594%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.6094%" y="501" width="0.0796%" height="15" fill="rgb(206,79,43)" fg:x="787" fg:w="1"/><text x="62.8594%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.6094%" y="485" width="0.0796%" height="15" fill="rgb(241,109,41)" fg:x="787" fg:w="1"/><text x="62.8594%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.6094%" y="469" width="0.0796%" height="15" fill="rgb(219,73,4)" fg:x="787" fg:w="1"/><text x="62.8594%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.6094%" y="453" width="0.0796%" height="15" fill="rgb(239,25,41)" fg:x="787" fg:w="1"/><text x="62.8594%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.6094%" y="437" width="0.0796%" height="15" fill="rgb(208,88,46)" fg:x="787" fg:w="1"/><text x="62.8594%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.5298%" y="629" width="0.2387%" height="15" fill="rgb(239,184,9)" fg:x="786" fg:w="3"/><text x="62.7798%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.6889%" y="613" width="0.0796%" height="15" fill="rgb(223,114,13)" fg:x="788" fg:w="1"/><text x="62.9389%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="62.5298%" y="677" width="0.3978%" height="15" fill="rgb(214,28,42)" fg:x="786" fg:w="5"/><text x="62.7798%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="62.5298%" y="661" width="0.3978%" height="15" fill="rgb(252,32,44)" fg:x="786" fg:w="5"/><text x="62.7798%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="62.5298%" y="645" width="0.3978%" height="15" fill="rgb(231,159,4)" fg:x="786" fg:w="5"/><text x="62.7798%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.7685%" y="629" width="0.1591%" height="15" fill="rgb(210,35,26)" fg:x="789" fg:w="2"/><text x="63.0185%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.7685%" y="613" width="0.1591%" height="15" fill="rgb(208,190,37)" fg:x="789" fg:w="2"/><text x="63.0185%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="62.7685%" y="597" width="0.1591%" height="15" fill="rgb(226,148,22)" fg:x="789" fg:w="2"/><text x="63.0185%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="62.7685%" y="581" width="0.1591%" height="15" fill="rgb(242,153,24)" fg:x="789" fg:w="2"/><text x="63.0185%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="62.7685%" y="565" width="0.1591%" height="15" fill="rgb(213,133,7)" fg:x="789" fg:w="2"/><text x="63.0185%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.7685%" y="549" width="0.1591%" height="15" fill="rgb(248,206,18)" fg:x="789" fg:w="2"/><text x="63.0185%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.7685%" y="533" width="0.1591%" height="15" fill="rgb(233,157,4)" fg:x="789" fg:w="2"/><text x="63.0185%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="62.7685%" y="517" width="0.1591%" height="15" fill="rgb(249,179,32)" fg:x="789" fg:w="2"/><text x="63.0185%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="62.7685%" y="501" width="0.1591%" height="15" fill="rgb(248,69,35)" fg:x="789" fg:w="2"/><text x="63.0185%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="62.7685%" y="485" width="0.1591%" height="15" fill="rgb(249,158,38)" fg:x="789" fg:w="2"/><text x="63.0185%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="62.7685%" y="469" width="0.1591%" height="15" fill="rgb(223,18,43)" fg:x="789" fg:w="2"/><text x="63.0185%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8481%" y="453" width="0.0796%" height="15" fill="rgb(238,42,45)" fg:x="790" fg:w="1"/><text x="63.0981%" y="463.50"></text></g><g><title>kernel::model::scopes::load_props (8 samples, 0.64%)</title><rect x="62.5298%" y="709" width="0.6364%" height="15" fill="rgb(219,65,47)" fg:x="786" fg:w="8"/><text x="62.7798%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.64%)</title><rect x="62.5298%" y="693" width="0.6364%" height="15" fill="rgb(248,153,12)" fg:x="786" fg:w="8"/><text x="62.7798%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.9276%" y="677" width="0.2387%" height="15" fill="rgb(240,118,4)" fg:x="791" fg:w="3"/><text x="63.1776%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.9276%" y="661" width="0.2387%" height="15" fill="rgb(250,96,34)" fg:x="791" fg:w="3"/><text x="63.1776%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.0072%" y="645" width="0.1591%" height="15" fill="rgb(221,15,4)" fg:x="792" fg:w="2"/><text x="63.2572%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.0072%" y="629" width="0.1591%" height="15" fill="rgb(217,149,33)" fg:x="792" fg:w="2"/><text x="63.2572%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.0072%" y="613" width="0.1591%" height="15" fill="rgb(213,58,29)" fg:x="792" fg:w="2"/><text x="63.2572%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.0072%" y="597" width="0.1591%" height="15" fill="rgb(236,218,9)" fg:x="792" fg:w="2"/><text x="63.2572%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.0072%" y="581" width="0.1591%" height="15" fill="rgb(248,40,19)" fg:x="792" fg:w="2"/><text x="63.2572%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.0072%" y="565" width="0.1591%" height="15" fill="rgb(212,17,6)" fg:x="792" fg:w="2"/><text x="63.2572%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.0867%" y="549" width="0.0796%" height="15" fill="rgb(206,212,20)" fg:x="793" fg:w="1"/><text x="63.3367%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0867%" y="533" width="0.0796%" height="15" fill="rgb(229,80,37)" fg:x="793" fg:w="1"/><text x="63.3367%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="63.0867%" y="517" width="0.0796%" height="15" fill="rgb(253,8,37)" fg:x="793" fg:w="1"/><text x="63.3367%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="63.0867%" y="501" width="0.0796%" height="15" fill="rgb(215,16,43)" fg:x="793" fg:w="1"/><text x="63.3367%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.1663%" y="677" width="0.0796%" height="15" fill="rgb(236,219,16)" fg:x="794" fg:w="1"/><text x="63.4163%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="63.1663%" y="661" width="0.0796%" height="15" fill="rgb(251,0,3)" fg:x="794" fg:w="1"/><text x="63.4163%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.1663%" y="645" width="0.0796%" height="15" fill="rgb(207,133,37)" fg:x="794" fg:w="1"/><text x="63.4163%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.1663%" y="629" width="0.0796%" height="15" fill="rgb(250,143,20)" fg:x="794" fg:w="1"/><text x="63.4163%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.1663%" y="613" width="0.0796%" height="15" fill="rgb(242,19,50)" fg:x="794" fg:w="1"/><text x="63.4163%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.2458%" y="597" width="0.0796%" height="15" fill="rgb(206,124,43)" fg:x="795" fg:w="1"/><text x="63.4958%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.2458%" y="581" width="0.0796%" height="15" fill="rgb(229,4,38)" fg:x="795" fg:w="1"/><text x="63.4958%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.2458%" y="565" width="0.0796%" height="15" fill="rgb(247,220,45)" fg:x="795" fg:w="1"/><text x="63.4958%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (12 samples, 0.95%)</title><rect x="62.5298%" y="725" width="0.9547%" height="15" fill="rgb(247,195,0)" fg:x="786" fg:w="12"/><text x="62.7798%" y="735.50"></text></g><g><title>kernel::model::scopes::save_props (4 samples, 0.32%)</title><rect x="63.1663%" y="709" width="0.3182%" height="15" fill="rgb(252,12,19)" fg:x="794" fg:w="4"/><text x="63.4163%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (4 samples, 0.32%)</title><rect x="63.1663%" y="693" width="0.3182%" height="15" fill="rgb(222,49,50)" fg:x="794" fg:w="4"/><text x="63.4163%" y="703.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="63.2458%" y="677" width="0.2387%" height="15" fill="rgb(209,157,28)" fg:x="795" fg:w="3"/><text x="63.4958%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="63.2458%" y="661" width="0.2387%" height="15" fill="rgb(238,174,24)" fg:x="795" fg:w="3"/><text x="63.4958%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="63.2458%" y="645" width="0.2387%" height="15" fill="rgb(224,17,28)" fg:x="795" fg:w="3"/><text x="63.4958%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="63.2458%" y="629" width="0.2387%" height="15" fill="rgb(249,7,29)" fg:x="795" fg:w="3"/><text x="63.4958%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="63.2458%" y="613" width="0.2387%" height="15" fill="rgb(243,178,4)" fg:x="795" fg:w="3"/><text x="63.4958%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="63.3254%" y="597" width="0.1591%" height="15" fill="rgb(246,138,35)" fg:x="796" fg:w="2"/><text x="63.5754%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="63.3254%" y="581" width="0.1591%" height="15" fill="rgb(251,85,18)" fg:x="796" fg:w="2"/><text x="63.5754%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4049%" y="565" width="0.0796%" height="15" fill="rgb(254,55,9)" fg:x="797" fg:w="1"/><text x="63.6549%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4049%" y="549" width="0.0796%" height="15" fill="rgb(248,4,50)" fg:x="797" fg:w="1"/><text x="63.6549%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="63.4845%" y="709" width="0.1591%" height="15" fill="rgb(215,208,14)" fg:x="798" fg:w="2"/><text x="63.7345%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="63.4845%" y="693" width="0.1591%" height="15" fill="rgb(218,37,18)" fg:x="798" fg:w="2"/><text x="63.7345%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="63.5640%" y="677" width="0.0796%" height="15" fill="rgb(206,104,13)" fg:x="799" fg:w="1"/><text x="63.8140%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="63.5640%" y="661" width="0.0796%" height="15" fill="rgb(248,94,22)" fg:x="799" fg:w="1"/><text x="63.8140%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.5640%" y="645" width="0.0796%" height="15" fill="rgb(235,42,46)" fg:x="799" fg:w="1"/><text x="63.8140%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="63.5640%" y="629" width="0.0796%" height="15" fill="rgb(220,228,48)" fg:x="799" fg:w="1"/><text x="63.8140%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.5640%" y="613" width="0.0796%" height="15" fill="rgb(216,58,12)" fg:x="799" fg:w="1"/><text x="63.8140%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="63.5640%" y="597" width="0.0796%" height="15" fill="rgb(223,97,52)" fg:x="799" fg:w="1"/><text x="63.8140%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="63.6436%" y="645" width="0.2387%" height="15" fill="rgb(208,159,17)" fg:x="800" fg:w="3"/><text x="63.8936%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="63.8027%" y="629" width="0.0796%" height="15" fill="rgb(215,172,9)" fg:x="802" fg:w="1"/><text x="64.0527%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="63.6436%" y="693" width="0.3182%" height="15" fill="rgb(252,175,30)" fg:x="800" fg:w="4"/><text x="63.8936%" y="703.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="63.6436%" y="677" width="0.3182%" height="15" fill="rgb(209,159,10)" fg:x="800" fg:w="4"/><text x="63.8936%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="63.6436%" y="661" width="0.3182%" height="15" fill="rgb(229,73,51)" fg:x="800" fg:w="4"/><text x="63.8936%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="63.8823%" y="645" width="0.0796%" height="15" fill="rgb(208,212,43)" fg:x="803" fg:w="1"/><text x="64.1323%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="64.1209%" y="677" width="0.0796%" height="15" fill="rgb(254,123,53)" fg:x="806" fg:w="1"/><text x="64.3709%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="64.1209%" y="661" width="0.0796%" height="15" fill="rgb(254,128,49)" fg:x="806" fg:w="1"/><text x="64.3709%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="64.1209%" y="645" width="0.0796%" height="15" fill="rgb(246,16,16)" fg:x="806" fg:w="1"/><text x="64.3709%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="64.2005%" y="677" width="0.0796%" height="15" fill="rgb(209,200,1)" fg:x="807" fg:w="1"/><text x="64.4505%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="64.2005%" y="661" width="0.0796%" height="15" fill="rgb(235,9,3)" fg:x="807" fg:w="1"/><text x="64.4505%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="64.2800%" y="645" width="0.0796%" height="15" fill="rgb(233,121,54)" fg:x="808" fg:w="1"/><text x="64.5300%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="64.2800%" y="629" width="0.0796%" height="15" fill="rgb(236,80,25)" fg:x="808" fg:w="1"/><text x="64.5300%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="64.2800%" y="613" width="0.0796%" height="15" fill="rgb(220,44,24)" fg:x="808" fg:w="1"/><text x="64.5300%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="64.3596%" y="629" width="0.1591%" height="15" fill="rgb(236,225,16)" fg:x="809" fg:w="2"/><text x="64.6096%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="64.3596%" y="613" width="0.1591%" height="15" fill="rgb(237,140,0)" fg:x="809" fg:w="2"/><text x="64.6096%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="64.3596%" y="597" width="0.1591%" height="15" fill="rgb(243,225,53)" fg:x="809" fg:w="2"/><text x="64.6096%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="64.3596%" y="581" width="0.1591%" height="15" fill="rgb(240,140,30)" fg:x="809" fg:w="2"/><text x="64.6096%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="64.4391%" y="565" width="0.0796%" height="15" fill="rgb(217,51,16)" fg:x="810" fg:w="1"/><text x="64.6891%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="64.4391%" y="549" width="0.0796%" height="15" fill="rgb(245,75,50)" fg:x="810" fg:w="1"/><text x="64.6891%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="64.4391%" y="533" width="0.0796%" height="15" fill="rgb(208,174,22)" fg:x="810" fg:w="1"/><text x="64.6891%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="64.2800%" y="677" width="0.3182%" height="15" fill="rgb(219,98,50)" fg:x="808" fg:w="4"/><text x="64.5300%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="64.2800%" y="661" width="0.3182%" height="15" fill="rgb(243,138,3)" fg:x="808" fg:w="4"/><text x="64.5300%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="64.3596%" y="645" width="0.2387%" height="15" fill="rgb(243,132,26)" fg:x="809" fg:w="3"/><text x="64.6096%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="64.5187%" y="629" width="0.0796%" height="15" fill="rgb(250,201,8)" fg:x="811" fg:w="1"/><text x="64.7687%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="64.5187%" y="613" width="0.0796%" height="15" fill="rgb(213,91,26)" fg:x="811" fg:w="1"/><text x="64.7687%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.5187%" y="597" width="0.0796%" height="15" fill="rgb(229,117,1)" fg:x="811" fg:w="1"/><text x="64.7687%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="64.5187%" y="581" width="0.0796%" height="15" fill="rgb(229,24,6)" fg:x="811" fg:w="1"/><text x="64.7687%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="64.5187%" y="565" width="0.0796%" height="15" fill="rgb(206,69,11)" fg:x="811" fg:w="1"/><text x="64.7687%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="64.5187%" y="549" width="0.0796%" height="15" fill="rgb(234,111,34)" fg:x="811" fg:w="1"/><text x="64.7687%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="63.9618%" y="693" width="0.7160%" height="15" fill="rgb(213,187,51)" fg:x="804" fg:w="9"/><text x="64.2118%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="64.5982%" y="677" width="0.0796%" height="15" fill="rgb(207,45,11)" fg:x="812" fg:w="1"/><text x="64.8482%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="64.5982%" y="661" width="0.0796%" height="15" fill="rgb(225,151,47)" fg:x="812" fg:w="1"/><text x="64.8482%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.27%)</title><rect x="63.4845%" y="725" width="1.2729%" height="15" fill="rgb(211,226,5)" fg:x="798" fg:w="16"/><text x="63.7345%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.11%)</title><rect x="63.6436%" y="709" width="1.1138%" height="15" fill="rgb(214,83,52)" fg:x="800" fg:w="14"/><text x="63.8936%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="64.6778%" y="693" width="0.0796%" height="15" fill="rgb(229,49,53)" fg:x="813" fg:w="1"/><text x="64.9278%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="64.6778%" y="677" width="0.0796%" height="15" fill="rgb(246,8,28)" fg:x="813" fg:w="1"/><text x="64.9278%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7574%" y="693" width="0.0796%" height="15" fill="rgb(207,28,41)" fg:x="814" fg:w="1"/><text x="65.0074%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.8369%" y="693" width="0.0796%" height="15" fill="rgb(254,22,25)" fg:x="815" fg:w="1"/><text x="65.0869%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.9165%" y="661" width="0.0796%" height="15" fill="rgb(209,120,42)" fg:x="816" fg:w="1"/><text x="65.1665%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="64.7574%" y="725" width="0.3978%" height="15" fill="rgb(216,194,18)" fg:x="814" fg:w="5"/><text x="65.0074%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="64.7574%" y="709" width="0.3978%" height="15" fill="rgb(213,70,17)" fg:x="814" fg:w="5"/><text x="65.0074%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="64.9165%" y="693" width="0.2387%" height="15" fill="rgb(228,66,19)" fg:x="816" fg:w="3"/><text x="65.1665%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="64.9165%" y="677" width="0.2387%" height="15" fill="rgb(236,221,54)" fg:x="816" fg:w="3"/><text x="65.1665%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.9960%" y="661" width="0.1591%" height="15" fill="rgb(207,175,15)" fg:x="817" fg:w="2"/><text x="65.2460%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.0756%" y="645" width="0.0796%" height="15" fill="rgb(234,76,8)" fg:x="818" fg:w="1"/><text x="65.3256%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.1551%" y="677" width="0.0796%" height="15" fill="rgb(243,106,0)" fg:x="819" fg:w="1"/><text x="65.4051%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.1551%" y="661" width="0.0796%" height="15" fill="rgb(208,48,19)" fg:x="819" fg:w="1"/><text x="65.4051%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="65.2347%" y="645" width="0.0796%" height="15" fill="rgb(251,50,29)" fg:x="820" fg:w="1"/><text x="65.4847%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="65.3142%" y="629" width="0.0796%" height="15" fill="rgb(222,31,49)" fg:x="821" fg:w="1"/><text x="65.5642%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="65.3142%" y="613" width="0.0796%" height="15" fill="rgb(232,33,18)" fg:x="821" fg:w="1"/><text x="65.5642%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.3142%" y="597" width="0.0796%" height="15" fill="rgb(209,1,44)" fg:x="821" fg:w="1"/><text x="65.5642%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="65.5529%" y="613" width="0.0796%" height="15" fill="rgb(211,7,1)" fg:x="824" fg:w="1"/><text x="65.8029%" y="623.50"></text></g><g><title>engine::session::Session::flush (42 samples, 3.34%)</title><rect x="62.3707%" y="789" width="3.3413%" height="15" fill="rgb(224,111,27)" fg:x="784" fg:w="42"/><text x="62.6207%" y="799.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (42 samples, 3.34%)</title><rect x="62.3707%" y="773" width="3.3413%" height="15" fill="rgb(252,195,39)" fg:x="784" fg:w="42"/><text x="62.6207%" y="783.50">eng..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (41 samples, 3.26%)</title><rect x="62.4503%" y="757" width="3.2617%" height="15" fill="rgb(237,198,5)" fg:x="785" fg:w="41"/><text x="62.7003%" y="767.50">eng..</text></g><g><title>engine::session::SavesEntities::check_for_changes (40 samples, 3.18%)</title><rect x="62.5298%" y="741" width="3.1822%" height="15" fill="rgb(232,148,1)" fg:x="786" fg:w="40"/><text x="62.7798%" y="751.50">eng..</text></g><g><title>kernel::compare::any_entity_changes (7 samples, 0.56%)</title><rect x="65.1551%" y="725" width="0.5569%" height="15" fill="rgb(249,41,3)" fg:x="819" fg:w="7"/><text x="65.4051%" y="735.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="65.1551%" y="709" width="0.5569%" height="15" fill="rgb(215,14,33)" fg:x="819" fg:w="7"/><text x="65.4051%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="65.1551%" y="693" width="0.5569%" height="15" fill="rgb(209,146,24)" fg:x="819" fg:w="7"/><text x="65.4051%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="65.2347%" y="677" width="0.4773%" height="15" fill="rgb(219,51,47)" fg:x="820" fg:w="6"/><text x="65.4847%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.48%)</title><rect x="65.2347%" y="661" width="0.4773%" height="15" fill="rgb(234,217,40)" fg:x="820" fg:w="6"/><text x="65.4847%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="65.3142%" y="645" width="0.3978%" height="15" fill="rgb(228,34,26)" fg:x="821" fg:w="5"/><text x="65.5642%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="65.3938%" y="629" width="0.3182%" height="15" fill="rgb(224,50,29)" fg:x="822" fg:w="4"/><text x="65.6438%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="65.6325%" y="613" width="0.0796%" height="15" fill="rgb(205,79,51)" fg:x="825" fg:w="1"/><text x="65.8825%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="65.6325%" y="597" width="0.0796%" height="15" fill="rgb(218,136,28)" fg:x="825" fg:w="1"/><text x="65.8825%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="65.6325%" y="581" width="0.0796%" height="15" fill="rgb(220,150,10)" fg:x="825" fg:w="1"/><text x="65.8825%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="65.7120%" y="773" width="0.0796%" height="15" fill="rgb(242,158,47)" fg:x="826" fg:w="1"/><text x="65.9620%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="65.7120%" y="757" width="0.0796%" height="15" fill="rgb(209,68,0)" fg:x="826" fg:w="1"/><text x="65.9620%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="65.7120%" y="741" width="0.0796%" height="15" fill="rgb(208,13,41)" fg:x="826" fg:w="1"/><text x="65.9620%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="65.7120%" y="725" width="0.0796%" height="15" fill="rgb(226,201,7)" fg:x="826" fg:w="1"/><text x="65.9620%" y="735.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="65.7120%" y="709" width="0.0796%" height="15" fill="rgb(236,103,26)" fg:x="826" fg:w="1"/><text x="65.9620%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="65.7120%" y="693" width="0.0796%" height="15" fill="rgb(243,162,8)" fg:x="826" fg:w="1"/><text x="65.9620%" y="703.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="65.7120%" y="677" width="0.0796%" height="15" fill="rgb(237,225,11)" fg:x="826" fg:w="1"/><text x="65.9620%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="65.7120%" y="661" width="0.0796%" height="15" fill="rgb(247,186,32)" fg:x="826" fg:w="1"/><text x="65.9620%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="65.7120%" y="645" width="0.0796%" height="15" fill="rgb(215,26,28)" fg:x="826" fg:w="1"/><text x="65.9620%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="65.7120%" y="629" width="0.0796%" height="15" fill="rgb(208,121,6)" fg:x="826" fg:w="1"/><text x="65.9620%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="65.7120%" y="613" width="0.0796%" height="15" fill="rgb(225,91,3)" fg:x="826" fg:w="1"/><text x="65.9620%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="65.7120%" y="597" width="0.0796%" height="15" fill="rgb(246,119,36)" fg:x="826" fg:w="1"/><text x="65.9620%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="65.7120%" y="581" width="0.0796%" height="15" fill="rgb(254,173,2)" fg:x="826" fg:w="1"/><text x="65.9620%" y="591.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="65.7916%" y="725" width="0.0796%" height="15" fill="rgb(209,87,54)" fg:x="827" fg:w="1"/><text x="66.0416%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="65.7916%" y="709" width="0.0796%" height="15" fill="rgb(223,216,20)" fg:x="827" fg:w="1"/><text x="66.0416%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="65.7916%" y="693" width="0.0796%" height="15" fill="rgb(220,31,8)" fg:x="827" fg:w="1"/><text x="66.0416%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.7916%" y="677" width="0.0796%" height="15" fill="rgb(220,185,15)" fg:x="827" fg:w="1"/><text x="66.0416%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.7916%" y="661" width="0.0796%" height="15" fill="rgb(247,190,50)" fg:x="827" fg:w="1"/><text x="66.0416%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="65.7916%" y="757" width="0.1591%" height="15" fill="rgb(239,173,47)" fg:x="827" fg:w="2"/><text x="66.0416%" y="767.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="65.7916%" y="741" width="0.1591%" height="15" fill="rgb(218,190,42)" fg:x="827" fg:w="2"/><text x="66.0416%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="65.8711%" y="725" width="0.0796%" height="15" fill="rgb(251,207,16)" fg:x="828" fg:w="1"/><text x="66.1211%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="65.8711%" y="709" width="0.0796%" height="15" fill="rgb(222,199,47)" fg:x="828" fg:w="1"/><text x="66.1211%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="65.8711%" y="693" width="0.0796%" height="15" fill="rgb(245,190,7)" fg:x="828" fg:w="1"/><text x="66.1211%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8711%" y="677" width="0.0796%" height="15" fill="rgb(239,85,38)" fg:x="828" fg:w="1"/><text x="66.1211%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8711%" y="661" width="0.0796%" height="15" fill="rgb(229,69,51)" fg:x="828" fg:w="1"/><text x="66.1211%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8711%" y="645" width="0.0796%" height="15" fill="rgb(231,104,51)" fg:x="828" fg:w="1"/><text x="66.1211%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8711%" y="629" width="0.0796%" height="15" fill="rgb(235,49,4)" fg:x="828" fg:w="1"/><text x="66.1211%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.8711%" y="613" width="0.0796%" height="15" fill="rgb(246,166,20)" fg:x="828" fg:w="1"/><text x="66.1211%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8711%" y="597" width="0.0796%" height="15" fill="rgb(230,119,37)" fg:x="828" fg:w="1"/><text x="66.1211%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8711%" y="581" width="0.0796%" height="15" fill="rgb(234,77,34)" fg:x="828" fg:w="1"/><text x="66.1211%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8711%" y="565" width="0.0796%" height="15" fill="rgb(211,222,33)" fg:x="828" fg:w="1"/><text x="66.1211%" y="575.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="65.9507%" y="757" width="0.0796%" height="15" fill="rgb(226,45,42)" fg:x="829" fg:w="1"/><text x="66.2007%" y="767.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="65.9507%" y="741" width="0.0796%" height="15" fill="rgb(215,174,28)" fg:x="829" fg:w="1"/><text x="66.2007%" y="751.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="65.9507%" y="725" width="0.0796%" height="15" fill="rgb(254,173,49)" fg:x="829" fg:w="1"/><text x="66.2007%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="65.9507%" y="709" width="0.0796%" height="15" fill="rgb(229,191,6)" fg:x="829" fg:w="1"/><text x="66.2007%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.0302%" y="661" width="0.0796%" height="15" fill="rgb(212,145,22)" fg:x="830" fg:w="1"/><text x="66.2802%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.0302%" y="645" width="0.0796%" height="15" fill="rgb(226,6,51)" fg:x="830" fg:w="1"/><text x="66.2802%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="66.0302%" y="741" width="0.1591%" height="15" fill="rgb(227,128,8)" fg:x="830" fg:w="2"/><text x="66.2802%" y="751.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="66.0302%" y="725" width="0.1591%" height="15" fill="rgb(205,24,10)" fg:x="830" fg:w="2"/><text x="66.2802%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="66.0302%" y="709" width="0.1591%" height="15" fill="rgb(217,147,27)" fg:x="830" fg:w="2"/><text x="66.2802%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="66.0302%" y="693" width="0.1591%" height="15" fill="rgb(250,82,42)" fg:x="830" fg:w="2"/><text x="66.2802%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="66.0302%" y="677" width="0.1591%" height="15" fill="rgb(248,93,17)" fg:x="830" fg:w="2"/><text x="66.2802%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.1098%" y="661" width="0.0796%" height="15" fill="rgb(254,212,40)" fg:x="831" fg:w="1"/><text x="66.3598%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.1098%" y="645" width="0.0796%" height="15" fill="rgb(229,209,2)" fg:x="831" fg:w="1"/><text x="66.3598%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.1098%" y="629" width="0.0796%" height="15" fill="rgb(211,50,43)" fg:x="831" fg:w="1"/><text x="66.3598%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="65.7120%" y="789" width="0.5569%" height="15" fill="rgb(245,196,29)" fg:x="826" fg:w="7"/><text x="65.9620%" y="799.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="65.7916%" y="773" width="0.4773%" height="15" fill="rgb(216,132,13)" fg:x="827" fg:w="6"/><text x="66.0416%" y="783.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="66.0302%" y="757" width="0.2387%" height="15" fill="rgb(251,108,21)" fg:x="830" fg:w="3"/><text x="66.2802%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="66.1893%" y="741" width="0.0796%" height="15" fill="rgb(229,174,54)" fg:x="832" fg:w="1"/><text x="66.4393%" y="751.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="66.1893%" y="725" width="0.0796%" height="15" fill="rgb(211,175,47)" fg:x="832" fg:w="1"/><text x="66.4393%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="66.2689%" y="741" width="0.1591%" height="15" fill="rgb(234,5,37)" fg:x="833" fg:w="2"/><text x="66.5189%" y="751.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="66.2689%" y="725" width="0.1591%" height="15" fill="rgb(244,150,43)" fg:x="833" fg:w="2"/><text x="66.5189%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="66.2689%" y="709" width="0.1591%" height="15" fill="rgb(242,172,38)" fg:x="833" fg:w="2"/><text x="66.5189%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.2689%" y="693" width="0.1591%" height="15" fill="rgb(205,27,8)" fg:x="833" fg:w="2"/><text x="66.5189%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.2689%" y="677" width="0.1591%" height="15" fill="rgb(217,57,3)" fg:x="833" fg:w="2"/><text x="66.5189%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.3484%" y="661" width="0.0796%" height="15" fill="rgb(242,21,38)" fg:x="834" fg:w="1"/><text x="66.5984%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.3484%" y="645" width="0.0796%" height="15" fill="rgb(209,64,43)" fg:x="834" fg:w="1"/><text x="66.5984%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.3484%" y="629" width="0.0796%" height="15" fill="rgb(222,2,46)" fg:x="834" fg:w="1"/><text x="66.5984%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.3484%" y="613" width="0.0796%" height="15" fill="rgb(218,19,44)" fg:x="834" fg:w="1"/><text x="66.5984%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.3484%" y="597" width="0.0796%" height="15" fill="rgb(240,203,42)" fg:x="834" fg:w="1"/><text x="66.5984%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.3484%" y="581" width="0.0796%" height="15" fill="rgb(229,23,45)" fg:x="834" fg:w="1"/><text x="66.5984%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.3484%" y="565" width="0.0796%" height="15" fill="rgb(205,228,51)" fg:x="834" fg:w="1"/><text x="66.5984%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.4280%" y="693" width="0.0796%" height="15" fill="rgb(239,36,20)" fg:x="835" fg:w="1"/><text x="66.6780%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.4280%" y="677" width="0.0796%" height="15" fill="rgb(248,172,27)" fg:x="835" fg:w="1"/><text x="66.6780%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="66.2689%" y="789" width="0.3182%" height="15" fill="rgb(244,55,32)" fg:x="833" fg:w="4"/><text x="66.5189%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::set_name (4 samples, 0.32%)</title><rect x="66.2689%" y="773" width="0.3182%" height="15" fill="rgb(215,97,16)" fg:x="833" fg:w="4"/><text x="66.5189%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::modified (4 samples, 0.32%)</title><rect x="66.2689%" y="757" width="0.3182%" height="15" fill="rgb(224,80,29)" fg:x="833" fg:w="4"/><text x="66.5189%" y="767.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="66.4280%" y="741" width="0.1591%" height="15" fill="rgb(216,93,47)" fg:x="835" fg:w="2"/><text x="66.6780%" y="751.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="66.4280%" y="725" width="0.1591%" height="15" fill="rgb(238,159,10)" fg:x="835" fg:w="2"/><text x="66.6780%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="66.4280%" y="709" width="0.1591%" height="15" fill="rgb(223,98,29)" fg:x="835" fg:w="2"/><text x="66.6780%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.5076%" y="693" width="0.0796%" height="15" fill="rgb(210,176,23)" fg:x="836" fg:w="1"/><text x="66.7576%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.5076%" y="677" width="0.0796%" height="15" fill="rgb(242,162,27)" fg:x="836" fg:w="1"/><text x="66.7576%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.5076%" y="661" width="0.0796%" height="15" fill="rgb(245,109,32)" fg:x="836" fg:w="1"/><text x="66.7576%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.5871%" y="709" width="0.0796%" height="15" fill="rgb(248,87,8)" fg:x="837" fg:w="1"/><text x="66.8371%" y="719.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="66.6667%" y="709" width="0.0796%" height="15" fill="rgb(250,160,50)" fg:x="838" fg:w="1"/><text x="66.9167%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.6667%" y="693" width="0.0796%" height="15" fill="rgb(246,165,25)" fg:x="838" fg:w="1"/><text x="66.9167%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.7462%" y="677" width="0.0796%" height="15" fill="rgb(249,219,3)" fg:x="839" fg:w="1"/><text x="66.9962%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.7462%" y="661" width="0.0796%" height="15" fill="rgb(226,66,5)" fg:x="839" fg:w="1"/><text x="66.9962%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.7462%" y="645" width="0.0796%" height="15" fill="rgb(250,220,43)" fg:x="839" fg:w="1"/><text x="66.9962%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.7462%" y="629" width="0.0796%" height="15" fill="rgb(225,111,31)" fg:x="839" fg:w="1"/><text x="66.9962%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.7462%" y="613" width="0.0796%" height="15" fill="rgb(248,106,18)" fg:x="839" fg:w="1"/><text x="66.9962%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="66.5871%" y="773" width="0.3182%" height="15" fill="rgb(220,226,45)" fg:x="837" fg:w="4"/><text x="66.8371%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="66.5871%" y="757" width="0.3182%" height="15" fill="rgb(208,58,53)" fg:x="837" fg:w="4"/><text x="66.8371%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="66.5871%" y="741" width="0.3182%" height="15" fill="rgb(209,133,1)" fg:x="837" fg:w="4"/><text x="66.8371%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="66.5871%" y="725" width="0.3182%" height="15" fill="rgb(228,216,27)" fg:x="837" fg:w="4"/><text x="66.8371%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="66.7462%" y="709" width="0.1591%" height="15" fill="rgb(238,155,2)" fg:x="839" fg:w="2"/><text x="66.9962%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="66.7462%" y="693" width="0.1591%" height="15" fill="rgb(244,99,37)" fg:x="839" fg:w="2"/><text x="66.9962%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.8258%" y="677" width="0.0796%" height="15" fill="rgb(254,32,3)" fg:x="840" fg:w="1"/><text x="67.0758%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.8258%" y="661" width="0.0796%" height="15" fill="rgb(234,46,50)" fg:x="840" fg:w="1"/><text x="67.0758%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.8258%" y="645" width="0.0796%" height="15" fill="rgb(232,118,51)" fg:x="840" fg:w="1"/><text x="67.0758%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.8258%" y="629" width="0.0796%" height="15" fill="rgb(207,24,32)" fg:x="840" fg:w="1"/><text x="67.0758%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.8258%" y="613" width="0.0796%" height="15" fill="rgb(208,107,43)" fg:x="840" fg:w="1"/><text x="67.0758%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.8258%" y="597" width="0.0796%" height="15" fill="rgb(231,28,9)" fg:x="840" fg:w="1"/><text x="67.0758%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.8258%" y="581" width="0.0796%" height="15" fill="rgb(241,204,15)" fg:x="840" fg:w="1"/><text x="67.0758%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.8258%" y="565" width="0.0796%" height="15" fill="rgb(214,54,15)" fg:x="840" fg:w="1"/><text x="67.0758%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="66.9849%" y="709" width="0.0796%" height="15" fill="rgb(230,12,28)" fg:x="842" fg:w="1"/><text x="67.2349%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="66.9849%" y="693" width="0.0796%" height="15" fill="rgb(221,171,5)" fg:x="842" fg:w="1"/><text x="67.2349%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="66.9849%" y="677" width="0.0796%" height="15" fill="rgb(207,72,25)" fg:x="842" fg:w="1"/><text x="67.2349%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.9849%" y="661" width="0.0796%" height="15" fill="rgb(249,79,37)" fg:x="842" fg:w="1"/><text x="67.2349%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.9849%" y="645" width="0.0796%" height="15" fill="rgb(209,98,49)" fg:x="842" fg:w="1"/><text x="67.2349%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="66.9849%" y="629" width="0.0796%" height="15" fill="rgb(221,62,13)" fg:x="842" fg:w="1"/><text x="67.2349%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.9849%" y="613" width="0.0796%" height="15" fill="rgb(223,39,6)" fg:x="842" fg:w="1"/><text x="67.2349%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.0644%" y="645" width="0.0796%" height="15" fill="rgb(246,163,20)" fg:x="843" fg:w="1"/><text x="67.3144%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="67.0644%" y="629" width="0.0796%" height="15" fill="rgb(211,111,29)" fg:x="843" fg:w="1"/><text x="67.3144%" y="639.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="67.0644%" y="693" width="0.1591%" height="15" fill="rgb(243,118,5)" fg:x="843" fg:w="2"/><text x="67.3144%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="67.0644%" y="677" width="0.1591%" height="15" fill="rgb(240,144,52)" fg:x="843" fg:w="2"/><text x="67.3144%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="67.0644%" y="661" width="0.1591%" height="15" fill="rgb(244,158,36)" fg:x="843" fg:w="2"/><text x="67.3144%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.1440%" y="645" width="0.0796%" height="15" fill="rgb(241,109,37)" fg:x="844" fg:w="1"/><text x="67.3940%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.1440%" y="629" width="0.0796%" height="15" fill="rgb(213,95,32)" fg:x="844" fg:w="1"/><text x="67.3940%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.1440%" y="613" width="0.0796%" height="15" fill="rgb(252,193,9)" fg:x="844" fg:w="1"/><text x="67.3940%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.1440%" y="597" width="0.0796%" height="15" fill="rgb(225,213,21)" fg:x="844" fg:w="1"/><text x="67.3940%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.1440%" y="581" width="0.0796%" height="15" fill="rgb(220,172,46)" fg:x="844" fg:w="1"/><text x="67.3940%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.1440%" y="565" width="0.0796%" height="15" fill="rgb(235,75,41)" fg:x="844" fg:w="1"/><text x="67.3940%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.1440%" y="549" width="0.0796%" height="15" fill="rgb(213,86,9)" fg:x="844" fg:w="1"/><text x="67.3940%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.2235%" y="645" width="0.0796%" height="15" fill="rgb(238,127,51)" fg:x="845" fg:w="1"/><text x="67.4735%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.2235%" y="629" width="0.0796%" height="15" fill="rgb(215,2,54)" fg:x="845" fg:w="1"/><text x="67.4735%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.2235%" y="613" width="0.0796%" height="15" fill="rgb(245,80,6)" fg:x="845" fg:w="1"/><text x="67.4735%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.2235%" y="597" width="0.0796%" height="15" fill="rgb(233,106,42)" fg:x="845" fg:w="1"/><text x="67.4735%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.2235%" y="581" width="0.0796%" height="15" fill="rgb(244,86,38)" fg:x="845" fg:w="1"/><text x="67.4735%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.2235%" y="565" width="0.0796%" height="15" fill="rgb(242,167,7)" fg:x="845" fg:w="1"/><text x="67.4735%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.2235%" y="549" width="0.0796%" height="15" fill="rgb(218,216,3)" fg:x="845" fg:w="1"/><text x="67.4735%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.2235%" y="533" width="0.0796%" height="15" fill="rgb(206,136,36)" fg:x="845" fg:w="1"/><text x="67.4735%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.2235%" y="517" width="0.0796%" height="15" fill="rgb(206,206,15)" fg:x="845" fg:w="1"/><text x="67.4735%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.2235%" y="501" width="0.0796%" height="15" fill="rgb(207,163,34)" fg:x="845" fg:w="1"/><text x="67.4735%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.2235%" y="485" width="0.0796%" height="15" fill="rgb(240,127,22)" fg:x="845" fg:w="1"/><text x="67.4735%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.2235%" y="469" width="0.0796%" height="15" fill="rgb(227,49,5)" fg:x="845" fg:w="1"/><text x="67.4735%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.2235%" y="453" width="0.0796%" height="15" fill="rgb(231,8,6)" fg:x="845" fg:w="1"/><text x="67.4735%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.2235%" y="437" width="0.0796%" height="15" fill="rgb(223,21,24)" fg:x="845" fg:w="1"/><text x="67.4735%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.2235%" y="421" width="0.0796%" height="15" fill="rgb(244,44,52)" fg:x="845" fg:w="1"/><text x="67.4735%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.2235%" y="405" width="0.0796%" height="15" fill="rgb(207,73,28)" fg:x="845" fg:w="1"/><text x="67.4735%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::set_name (5 samples, 0.40%)</title><rect x="66.9849%" y="725" width="0.3978%" height="15" fill="rgb(234,215,10)" fg:x="842" fg:w="5"/><text x="67.2349%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::modified (4 samples, 0.32%)</title><rect x="67.0644%" y="709" width="0.3182%" height="15" fill="rgb(236,85,3)" fg:x="843" fg:w="4"/><text x="67.3144%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="67.2235%" y="693" width="0.1591%" height="15" fill="rgb(236,102,39)" fg:x="845" fg:w="2"/><text x="67.4735%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="67.2235%" y="677" width="0.1591%" height="15" fill="rgb(243,50,8)" fg:x="845" fg:w="2"/><text x="67.4735%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="67.2235%" y="661" width="0.1591%" height="15" fill="rgb(207,111,4)" fg:x="845" fg:w="2"/><text x="67.4735%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.3031%" y="645" width="0.0796%" height="15" fill="rgb(230,52,42)" fg:x="846" fg:w="1"/><text x="67.5531%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.3031%" y="629" width="0.0796%" height="15" fill="rgb(252,178,50)" fg:x="846" fg:w="1"/><text x="67.5531%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.3031%" y="613" width="0.0796%" height="15" fill="rgb(234,46,35)" fg:x="846" fg:w="1"/><text x="67.5531%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.3031%" y="597" width="0.0796%" height="15" fill="rgb(228,69,37)" fg:x="846" fg:w="1"/><text x="67.5531%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.3031%" y="581" width="0.0796%" height="15" fill="rgb(221,21,11)" fg:x="846" fg:w="1"/><text x="67.5531%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.3031%" y="565" width="0.0796%" height="15" fill="rgb(223,56,9)" fg:x="846" fg:w="1"/><text x="67.5531%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.3031%" y="549" width="0.0796%" height="15" fill="rgb(234,30,19)" fg:x="846" fg:w="1"/><text x="67.5531%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="67.3827%" y="725" width="0.0796%" height="15" fill="rgb(211,64,54)" fg:x="847" fg:w="1"/><text x="67.6327%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="67.3827%" y="709" width="0.0796%" height="15" fill="rgb(250,189,5)" fg:x="847" fg:w="1"/><text x="67.6327%" y="719.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="67.3827%" y="693" width="0.0796%" height="15" fill="rgb(214,180,13)" fg:x="847" fg:w="1"/><text x="67.6327%" y="703.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="67.3827%" y="677" width="0.0796%" height="15" fill="rgb(238,40,40)" fg:x="847" fg:w="1"/><text x="67.6327%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="67.3827%" y="661" width="0.0796%" height="15" fill="rgb(214,101,38)" fg:x="847" fg:w="1"/><text x="67.6327%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="67.3827%" y="645" width="0.0796%" height="15" fill="rgb(242,65,53)" fg:x="847" fg:w="1"/><text x="67.6327%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.3827%" y="629" width="0.0796%" height="15" fill="rgb(230,22,45)" fg:x="847" fg:w="1"/><text x="67.6327%" y="639.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="67.4622%" y="661" width="0.0796%" height="15" fill="rgb(223,77,1)" fg:x="848" fg:w="1"/><text x="67.7122%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="67.4622%" y="645" width="0.0796%" height="15" fill="rgb(227,33,37)" fg:x="848" fg:w="1"/><text x="67.7122%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="67.4622%" y="629" width="0.0796%" height="15" fill="rgb(224,148,39)" fg:x="848" fg:w="1"/><text x="67.7122%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="67.4622%" y="709" width="0.1591%" height="15" fill="rgb(232,212,39)" fg:x="848" fg:w="2"/><text x="67.7122%" y="719.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="67.4622%" y="693" width="0.1591%" height="15" fill="rgb(251,172,7)" fg:x="848" fg:w="2"/><text x="67.7122%" y="703.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="67.4622%" y="677" width="0.1591%" height="15" fill="rgb(219,39,9)" fg:x="848" fg:w="2"/><text x="67.7122%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="67.5418%" y="661" width="0.0796%" height="15" fill="rgb(228,118,14)" fg:x="849" fg:w="1"/><text x="67.7918%" y="671.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="67.5418%" y="645" width="0.0796%" height="15" fill="rgb(207,140,10)" fg:x="849" fg:w="1"/><text x="67.7918%" y="655.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="67.5418%" y="629" width="0.0796%" height="15" fill="rgb(227,111,53)" fg:x="849" fg:w="1"/><text x="67.7918%" y="639.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="67.5418%" y="613" width="0.0796%" height="15" fill="rgb(216,165,16)" fg:x="849" fg:w="1"/><text x="67.7918%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.5418%" y="597" width="0.0796%" height="15" fill="rgb(226,111,18)" fg:x="849" fg:w="1"/><text x="67.7918%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="67.5418%" y="581" width="0.0796%" height="15" fill="rgb(251,27,17)" fg:x="849" fg:w="1"/><text x="67.7918%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.5418%" y="565" width="0.0796%" height="15" fill="rgb(254,69,9)" fg:x="849" fg:w="1"/><text x="67.7918%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="67.5418%" y="549" width="0.0796%" height="15" fill="rgb(234,140,37)" fg:x="849" fg:w="1"/><text x="67.7918%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="67.5418%" y="533" width="0.0796%" height="15" fill="rgb(220,93,8)" fg:x="849" fg:w="1"/><text x="67.7918%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.5418%" y="517" width="0.0796%" height="15" fill="rgb(236,113,3)" fg:x="849" fg:w="1"/><text x="67.7918%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="67.5418%" y="501" width="0.0796%" height="15" fill="rgb(234,108,23)" fg:x="849" fg:w="1"/><text x="67.7918%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.5418%" y="485" width="0.0796%" height="15" fill="rgb(205,114,34)" fg:x="849" fg:w="1"/><text x="67.7918%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5418%" y="469" width="0.0796%" height="15" fill="rgb(236,200,45)" fg:x="849" fg:w="1"/><text x="67.7918%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5418%" y="453" width="0.0796%" height="15" fill="rgb(227,194,29)" fg:x="849" fg:w="1"/><text x="67.7918%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5418%" y="437" width="0.0796%" height="15" fill="rgb(250,76,42)" fg:x="849" fg:w="1"/><text x="67.7918%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.6213%" y="613" width="0.0796%" height="15" fill="rgb(208,128,8)" fg:x="850" fg:w="1"/><text x="67.8713%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.6213%" y="597" width="0.0796%" height="15" fill="rgb(229,209,35)" fg:x="850" fg:w="1"/><text x="67.8713%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6213%" y="581" width="0.0796%" height="15" fill="rgb(215,39,53)" fg:x="850" fg:w="1"/><text x="67.8713%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6213%" y="565" width="0.0796%" height="15" fill="rgb(219,123,41)" fg:x="850" fg:w="1"/><text x="67.8713%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.6213%" y="549" width="0.0796%" height="15" fill="rgb(212,158,18)" fg:x="850" fg:w="1"/><text x="67.8713%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.6213%" y="533" width="0.0796%" height="15" fill="rgb(234,196,53)" fg:x="850" fg:w="1"/><text x="67.8713%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.6213%" y="517" width="0.0796%" height="15" fill="rgb(210,139,12)" fg:x="850" fg:w="1"/><text x="67.8713%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.6213%" y="501" width="0.0796%" height="15" fill="rgb(220,116,54)" fg:x="850" fg:w="1"/><text x="67.8713%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.6213%" y="485" width="0.0796%" height="15" fill="rgb(247,103,28)" fg:x="850" fg:w="1"/><text x="67.8713%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.6213%" y="469" width="0.0796%" height="15" fill="rgb(253,156,45)" fg:x="850" fg:w="1"/><text x="67.8713%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.6213%" y="453" width="0.0796%" height="15" fill="rgb(237,157,52)" fg:x="850" fg:w="1"/><text x="67.8713%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.6213%" y="437" width="0.0796%" height="15" fill="rgb(253,112,16)" fg:x="850" fg:w="1"/><text x="67.8713%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.6213%" y="421" width="0.0796%" height="15" fill="rgb(234,70,18)" fg:x="850" fg:w="1"/><text x="67.8713%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.6213%" y="405" width="0.0796%" height="15" fill="rgb(247,138,19)" fg:x="850" fg:w="1"/><text x="67.8713%" y="415.50"></text></g><g><title>plugins_core::build::Build::leads_to (4 samples, 0.32%)</title><rect x="67.4622%" y="725" width="0.3182%" height="15" fill="rgb(207,171,1)" fg:x="848" fg:w="4"/><text x="67.7122%" y="735.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="67.6213%" y="709" width="0.1591%" height="15" fill="rgb(239,213,3)" fg:x="850" fg:w="2"/><text x="67.8713%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="67.6213%" y="693" width="0.1591%" height="15" fill="rgb(226,112,4)" fg:x="850" fg:w="2"/><text x="67.8713%" y="703.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="67.6213%" y="677" width="0.1591%" height="15" fill="rgb(252,170,12)" fg:x="850" fg:w="2"/><text x="67.8713%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="67.6213%" y="661" width="0.1591%" height="15" fill="rgb(241,106,13)" fg:x="850" fg:w="2"/><text x="67.8713%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="67.6213%" y="645" width="0.1591%" height="15" fill="rgb(225,73,23)" fg:x="850" fg:w="2"/><text x="67.8713%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="67.6213%" y="629" width="0.1591%" height="15" fill="rgb(251,227,29)" fg:x="850" fg:w="2"/><text x="67.8713%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.7009%" y="613" width="0.0796%" height="15" fill="rgb(237,144,13)" fg:x="851" fg:w="1"/><text x="67.9509%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7009%" y="597" width="0.0796%" height="15" fill="rgb(232,106,46)" fg:x="851" fg:w="1"/><text x="67.9509%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.7009%" y="581" width="0.0796%" height="15" fill="rgb(245,154,53)" fg:x="851" fg:w="1"/><text x="67.9509%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7009%" y="565" width="0.0796%" height="15" fill="rgb(212,119,47)" fg:x="851" fg:w="1"/><text x="67.9509%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.7009%" y="549" width="0.0796%" height="15" fill="rgb(253,135,25)" fg:x="851" fg:w="1"/><text x="67.9509%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7009%" y="533" width="0.0796%" height="15" fill="rgb(253,208,39)" fg:x="851" fg:w="1"/><text x="67.9509%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.7009%" y="517" width="0.0796%" height="15" fill="rgb(226,64,12)" fg:x="851" fg:w="1"/><text x="67.9509%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.95%)</title><rect x="66.9053%" y="773" width="0.9547%" height="15" fill="rgb(214,162,37)" fg:x="841" fg:w="12"/><text x="67.1553%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.95%)</title><rect x="66.9053%" y="757" width="0.9547%" height="15" fill="rgb(250,104,5)" fg:x="841" fg:w="12"/><text x="67.1553%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.88%)</title><rect x="66.9849%" y="741" width="0.8751%" height="15" fill="rgb(220,202,50)" fg:x="842" fg:w="11"/><text x="67.2349%" y="751.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="67.7804%" y="725" width="0.0796%" height="15" fill="rgb(248,67,38)" fg:x="852" fg:w="1"/><text x="68.0304%" y="735.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7804%" y="709" width="0.0796%" height="15" fill="rgb(242,94,35)" fg:x="852" fg:w="1"/><text x="68.0304%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7804%" y="693" width="0.0796%" height="15" fill="rgb(209,78,37)" fg:x="852" fg:w="1"/><text x="68.0304%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7804%" y="677" width="0.0796%" height="15" fill="rgb(230,126,47)" fg:x="852" fg:w="1"/><text x="68.0304%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.7804%" y="661" width="0.0796%" height="15" fill="rgb(222,110,35)" fg:x="852" fg:w="1"/><text x="68.0304%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.7804%" y="645" width="0.0796%" height="15" fill="rgb(233,154,20)" fg:x="852" fg:w="1"/><text x="68.0304%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.7804%" y="629" width="0.0796%" height="15" fill="rgb(223,53,50)" fg:x="852" fg:w="1"/><text x="68.0304%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.7804%" y="613" width="0.0796%" height="15" fill="rgb(251,27,26)" fg:x="852" fg:w="1"/><text x="68.0304%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.7804%" y="597" width="0.0796%" height="15" fill="rgb(223,189,16)" fg:x="852" fg:w="1"/><text x="68.0304%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.8600%" y="741" width="0.0796%" height="15" fill="rgb(207,5,54)" fg:x="853" fg:w="1"/><text x="68.1100%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="67.8600%" y="725" width="0.0796%" height="15" fill="rgb(254,124,50)" fg:x="853" fg:w="1"/><text x="68.1100%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="67.8600%" y="709" width="0.0796%" height="15" fill="rgb(253,193,24)" fg:x="853" fg:w="1"/><text x="68.1100%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8600%" y="693" width="0.0796%" height="15" fill="rgb(235,170,24)" fg:x="853" fg:w="1"/><text x="68.1100%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8600%" y="677" width="0.0796%" height="15" fill="rgb(222,212,52)" fg:x="853" fg:w="1"/><text x="68.1100%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.8600%" y="661" width="0.0796%" height="15" fill="rgb(223,17,45)" fg:x="853" fg:w="1"/><text x="68.1100%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.8600%" y="645" width="0.0796%" height="15" fill="rgb(227,103,26)" fg:x="853" fg:w="1"/><text x="68.1100%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.8600%" y="629" width="0.0796%" height="15" fill="rgb(251,151,25)" fg:x="853" fg:w="1"/><text x="68.1100%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8600%" y="613" width="0.0796%" height="15" fill="rgb(248,144,29)" fg:x="853" fg:w="1"/><text x="68.1100%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8600%" y="597" width="0.0796%" height="15" fill="rgb(245,97,16)" fg:x="853" fg:w="1"/><text x="68.1100%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.8600%" y="581" width="0.0796%" height="15" fill="rgb(220,200,29)" fg:x="853" fg:w="1"/><text x="68.1100%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.8600%" y="565" width="0.0796%" height="15" fill="rgb(206,38,29)" fg:x="853" fg:w="1"/><text x="68.1100%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.8600%" y="549" width="0.0796%" height="15" fill="rgb(245,19,52)" fg:x="853" fg:w="1"/><text x="68.1100%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.8600%" y="533" width="0.0796%" height="15" fill="rgb(205,67,43)" fg:x="853" fg:w="1"/><text x="68.1100%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8600%" y="517" width="0.0796%" height="15" fill="rgb(217,128,23)" fg:x="853" fg:w="1"/><text x="68.1100%" y="527.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="67.9395%" y="741" width="0.0796%" height="15" fill="rgb(210,109,28)" fg:x="854" fg:w="1"/><text x="68.1895%" y="751.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="67.9395%" y="725" width="0.0796%" height="15" fill="rgb(233,181,7)" fg:x="854" fg:w="1"/><text x="68.1895%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="67.9395%" y="709" width="0.0796%" height="15" fill="rgb(244,11,22)" fg:x="854" fg:w="1"/><text x="68.1895%" y="719.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="67.9395%" y="693" width="0.0796%" height="15" fill="rgb(205,124,54)" fg:x="854" fg:w="1"/><text x="68.1895%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.9395%" y="677" width="0.0796%" height="15" fill="rgb(218,21,27)" fg:x="854" fg:w="1"/><text x="68.1895%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="67.9395%" y="661" width="0.0796%" height="15" fill="rgb(224,153,33)" fg:x="854" fg:w="1"/><text x="68.1895%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.9395%" y="645" width="0.0796%" height="15" fill="rgb(240,219,28)" fg:x="854" fg:w="1"/><text x="68.1895%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.9395%" y="629" width="0.0796%" height="15" fill="rgb(214,80,29)" fg:x="854" fg:w="1"/><text x="68.1895%" y="639.50"></text></g><g><title>kernel::model::Props::set_u64_property (1 samples, 0.08%)</title><rect x="68.0191%" y="693" width="0.0796%" height="15" fill="rgb(247,148,44)" fg:x="855" fg:w="1"/><text x="68.2691%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.0191%" y="677" width="0.0796%" height="15" fill="rgb(243,110,30)" fg:x="855" fg:w="1"/><text x="68.2691%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1782%" y="597" width="0.0796%" height="15" fill="rgb(243,173,41)" fg:x="857" fg:w="1"/><text x="68.4282%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1782%" y="581" width="0.0796%" height="15" fill="rgb(225,160,47)" fg:x="857" fg:w="1"/><text x="68.4282%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.2578%" y="597" width="0.0796%" height="15" fill="rgb(215,44,21)" fg:x="858" fg:w="1"/><text x="68.5078%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.2578%" y="581" width="0.0796%" height="15" fill="rgb(248,90,3)" fg:x="858" fg:w="1"/><text x="68.5078%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.2578%" y="565" width="0.0796%" height="15" fill="rgb(220,196,49)" fg:x="858" fg:w="1"/><text x="68.5078%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.2578%" y="549" width="0.0796%" height="15" fill="rgb(217,138,14)" fg:x="858" fg:w="1"/><text x="68.5078%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.2578%" y="533" width="0.0796%" height="15" fill="rgb(219,111,20)" fg:x="858" fg:w="1"/><text x="68.5078%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.2578%" y="517" width="0.0796%" height="15" fill="rgb(218,114,4)" fg:x="858" fg:w="1"/><text x="68.5078%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.2578%" y="501" width="0.0796%" height="15" fill="rgb(238,133,3)" fg:x="858" fg:w="1"/><text x="68.5078%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.2578%" y="485" width="0.0796%" height="15" fill="rgb(224,95,0)" fg:x="858" fg:w="1"/><text x="68.5078%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.2578%" y="469" width="0.0796%" height="15" fill="rgb(220,169,35)" fg:x="858" fg:w="1"/><text x="68.5078%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.2578%" y="453" width="0.0796%" height="15" fill="rgb(242,116,47)" fg:x="858" fg:w="1"/><text x="68.5078%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.2578%" y="437" width="0.0796%" height="15" fill="rgb(251,42,20)" fg:x="858" fg:w="1"/><text x="68.5078%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.2578%" y="421" width="0.0796%" height="15" fill="rgb(234,7,34)" fg:x="858" fg:w="1"/><text x="68.5078%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="68.1782%" y="661" width="0.2387%" height="15" fill="rgb(243,208,13)" fg:x="857" fg:w="3"/><text x="68.4282%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="68.1782%" y="645" width="0.2387%" height="15" fill="rgb(227,33,28)" fg:x="857" fg:w="3"/><text x="68.4282%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="68.1782%" y="629" width="0.2387%" height="15" fill="rgb(250,47,37)" fg:x="857" fg:w="3"/><text x="68.4282%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="68.1782%" y="613" width="0.2387%" height="15" fill="rgb(235,111,52)" fg:x="857" fg:w="3"/><text x="68.4282%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3373%" y="597" width="0.0796%" height="15" fill="rgb(223,64,28)" fg:x="859" fg:w="1"/><text x="68.5873%" y="607.50"></text></g><g><title>kernel::model::scopes::load_props (6 samples, 0.48%)</title><rect x="68.0986%" y="693" width="0.4773%" height="15" fill="rgb(236,67,22)" fg:x="856" fg:w="6"/><text x="68.3486%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="68.0986%" y="677" width="0.4773%" height="15" fill="rgb(243,79,24)" fg:x="856" fg:w="6"/><text x="68.3486%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.4169%" y="661" width="0.1591%" height="15" fill="rgb(241,225,22)" fg:x="860" fg:w="2"/><text x="68.6669%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.4169%" y="645" width="0.1591%" height="15" fill="rgb(228,214,26)" fg:x="860" fg:w="2"/><text x="68.6669%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.4964%" y="629" width="0.0796%" height="15" fill="rgb(219,84,52)" fg:x="861" fg:w="1"/><text x="68.7464%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4964%" y="613" width="0.0796%" height="15" fill="rgb(220,12,22)" fg:x="861" fg:w="1"/><text x="68.7464%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.4964%" y="597" width="0.0796%" height="15" fill="rgb(219,9,49)" fg:x="861" fg:w="1"/><text x="68.7464%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4964%" y="581" width="0.0796%" height="15" fill="rgb(237,40,43)" fg:x="861" fg:w="1"/><text x="68.7464%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.4964%" y="565" width="0.0796%" height="15" fill="rgb(212,189,32)" fg:x="861" fg:w="1"/><text x="68.7464%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4964%" y="549" width="0.0796%" height="15" fill="rgb(247,48,9)" fg:x="861" fg:w="1"/><text x="68.7464%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="68.4964%" y="533" width="0.0796%" height="15" fill="rgb(247,112,3)" fg:x="861" fg:w="1"/><text x="68.7464%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="68.6555%" y="629" width="0.1591%" height="15" fill="rgb(243,110,18)" fg:x="863" fg:w="2"/><text x="68.9055%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="68.6555%" y="661" width="0.3182%" height="15" fill="rgb(233,223,44)" fg:x="863" fg:w="4"/><text x="68.9055%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="68.6555%" y="645" width="0.3182%" height="15" fill="rgb(245,160,20)" fg:x="863" fg:w="4"/><text x="68.9055%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.8146%" y="629" width="0.1591%" height="15" fill="rgb(225,37,1)" fg:x="865" fg:w="2"/><text x="69.0646%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.8146%" y="613" width="0.1591%" height="15" fill="rgb(253,227,39)" fg:x="865" fg:w="2"/><text x="69.0646%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.8942%" y="597" width="0.0796%" height="15" fill="rgb(240,179,26)" fg:x="866" fg:w="1"/><text x="69.1442%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.8942%" y="581" width="0.0796%" height="15" fill="rgb(237,212,23)" fg:x="866" fg:w="1"/><text x="69.1442%" y="591.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (13 samples, 1.03%)</title><rect x="68.0191%" y="709" width="1.0342%" height="15" fill="rgb(221,38,11)" fg:x="855" fg:w="13"/><text x="68.2691%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (6 samples, 0.48%)</title><rect x="68.5760%" y="693" width="0.4773%" height="15" fill="rgb(215,85,6)" fg:x="862" fg:w="6"/><text x="68.8260%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (6 samples, 0.48%)</title><rect x="68.5760%" y="677" width="0.4773%" height="15" fill="rgb(239,64,14)" fg:x="862" fg:w="6"/><text x="68.8260%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="68.9737%" y="661" width="0.0796%" height="15" fill="rgb(215,150,32)" fg:x="867" fg:w="1"/><text x="69.2237%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.9737%" y="645" width="0.0796%" height="15" fill="rgb(238,15,13)" fg:x="867" fg:w="1"/><text x="69.2237%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="68.9737%" y="629" width="0.0796%" height="15" fill="rgb(251,87,8)" fg:x="867" fg:w="1"/><text x="69.2237%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.9737%" y="613" width="0.0796%" height="15" fill="rgb(206,86,1)" fg:x="867" fg:w="1"/><text x="69.2237%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="68.9737%" y="597" width="0.0796%" height="15" fill="rgb(208,151,45)" fg:x="867" fg:w="1"/><text x="69.2237%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.0533%" y="677" width="0.0796%" height="15" fill="rgb(231,181,24)" fg:x="868" fg:w="1"/><text x="69.3033%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.0533%" y="661" width="0.0796%" height="15" fill="rgb(240,106,29)" fg:x="868" fg:w="1"/><text x="69.3033%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="69.0533%" y="693" width="0.1591%" height="15" fill="rgb(227,166,11)" fg:x="868" fg:w="2"/><text x="69.3033%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.1329%" y="677" width="0.0796%" height="15" fill="rgb(254,14,34)" fg:x="869" fg:w="1"/><text x="69.3829%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.1329%" y="661" width="0.0796%" height="15" fill="rgb(223,222,6)" fg:x="869" fg:w="1"/><text x="69.3829%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="69.2124%" y="677" width="0.0796%" height="15" fill="rgb(245,69,24)" fg:x="870" fg:w="1"/><text x="69.4624%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.2920%" y="677" width="0.0796%" height="15" fill="rgb(213,193,7)" fg:x="871" fg:w="1"/><text x="69.5420%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.3715%" y="629" width="0.0796%" height="15" fill="rgb(237,92,51)" fg:x="872" fg:w="1"/><text x="69.6215%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="69.3715%" y="661" width="0.2387%" height="15" fill="rgb(225,194,6)" fg:x="872" fg:w="3"/><text x="69.6215%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="69.3715%" y="645" width="0.2387%" height="15" fill="rgb(205,159,49)" fg:x="872" fg:w="3"/><text x="69.6215%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="69.4511%" y="629" width="0.1591%" height="15" fill="rgb(219,69,2)" fg:x="873" fg:w="2"/><text x="69.7011%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.5306%" y="613" width="0.0796%" height="15" fill="rgb(215,107,24)" fg:x="874" fg:w="1"/><text x="69.7806%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.6102%" y="645" width="0.0796%" height="15" fill="rgb(249,208,29)" fg:x="875" fg:w="1"/><text x="69.8602%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.6102%" y="629" width="0.0796%" height="15" fill="rgb(213,147,10)" fg:x="875" fg:w="1"/><text x="69.8602%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.6102%" y="613" width="0.0796%" height="15" fill="rgb(254,140,42)" fg:x="875" fg:w="1"/><text x="69.8602%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.6102%" y="597" width="0.0796%" height="15" fill="rgb(249,9,15)" fg:x="875" fg:w="1"/><text x="69.8602%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="69.6897%" y="613" width="0.1591%" height="15" fill="rgb(210,19,33)" fg:x="876" fg:w="2"/><text x="69.9397%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.7693%" y="597" width="0.0796%" height="15" fill="rgb(241,121,22)" fg:x="877" fg:w="1"/><text x="70.0193%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.7693%" y="581" width="0.0796%" height="15" fill="rgb(244,69,52)" fg:x="877" fg:w="1"/><text x="70.0193%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.7693%" y="565" width="0.0796%" height="15" fill="rgb(244,191,54)" fg:x="877" fg:w="1"/><text x="70.0193%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="69.6897%" y="629" width="0.2387%" height="15" fill="rgb(250,3,53)" fg:x="876" fg:w="3"/><text x="69.9397%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="69.8488%" y="613" width="0.0796%" height="15" fill="rgb(205,77,3)" fg:x="878" fg:w="1"/><text x="70.0988%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="69.8488%" y="597" width="0.0796%" height="15" fill="rgb(207,155,3)" fg:x="878" fg:w="1"/><text x="70.0988%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="69.6897%" y="645" width="0.3182%" height="15" fill="rgb(224,79,2)" fg:x="876" fg:w="4"/><text x="69.9397%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.9284%" y="629" width="0.0796%" height="15" fill="rgb(243,172,5)" fg:x="879" fg:w="1"/><text x="70.1784%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.9284%" y="613" width="0.0796%" height="15" fill="rgb(217,23,43)" fg:x="879" fg:w="1"/><text x="70.1784%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="69.3715%" y="677" width="0.7160%" height="15" fill="rgb(223,109,20)" fg:x="872" fg:w="9"/><text x="69.6215%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="69.6102%" y="661" width="0.4773%" height="15" fill="rgb(232,159,21)" fg:x="875" fg:w="6"/><text x="69.8602%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.0080%" y="645" width="0.0796%" height="15" fill="rgb(219,58,2)" fg:x="880" fg:w="1"/><text x="70.2580%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.0080%" y="629" width="0.0796%" height="15" fill="rgb(241,56,8)" fg:x="880" fg:w="1"/><text x="70.2580%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.0080%" y="613" width="0.0796%" height="15" fill="rgb(249,10,27)" fg:x="880" fg:w="1"/><text x="70.2580%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.27%)</title><rect x="69.0533%" y="709" width="1.2729%" height="15" fill="rgb(248,177,5)" fg:x="868" fg:w="16"/><text x="69.3033%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.11%)</title><rect x="69.2124%" y="693" width="1.1138%" height="15" fill="rgb(239,12,30)" fg:x="870" fg:w="14"/><text x="69.4624%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="70.0875%" y="677" width="0.2387%" height="15" fill="rgb(229,164,25)" fg:x="881" fg:w="3"/><text x="70.3375%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="70.1671%" y="661" width="0.1591%" height="15" fill="rgb(231,217,50)" fg:x="882" fg:w="2"/><text x="70.4171%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="70.1671%" y="645" width="0.1591%" height="15" fill="rgb(247,99,32)" fg:x="882" fg:w="2"/><text x="70.4171%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.2466%" y="629" width="0.0796%" height="15" fill="rgb(240,74,50)" fg:x="883" fg:w="1"/><text x="70.4966%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.2466%" y="613" width="0.0796%" height="15" fill="rgb(218,54,8)" fg:x="883" fg:w="1"/><text x="70.4966%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.2466%" y="597" width="0.0796%" height="15" fill="rgb(227,132,20)" fg:x="883" fg:w="1"/><text x="70.4966%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.6444%" y="613" width="0.0796%" height="15" fill="rgb(232,134,12)" fg:x="888" fg:w="1"/><text x="70.8944%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="70.3262%" y="709" width="0.4773%" height="15" fill="rgb(250,129,18)" fg:x="884" fg:w="6"/><text x="70.5762%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="70.3262%" y="693" width="0.4773%" height="15" fill="rgb(232,129,47)" fg:x="884" fg:w="6"/><text x="70.5762%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="70.4057%" y="677" width="0.3978%" height="15" fill="rgb(230,31,40)" fg:x="885" fg:w="5"/><text x="70.6557%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="70.5648%" y="661" width="0.2387%" height="15" fill="rgb(232,126,10)" fg:x="887" fg:w="3"/><text x="70.8148%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="70.5648%" y="645" width="0.2387%" height="15" fill="rgb(205,46,31)" fg:x="887" fg:w="3"/><text x="70.8148%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.6444%" y="629" width="0.1591%" height="15" fill="rgb(232,37,37)" fg:x="888" fg:w="2"/><text x="70.8944%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.7239%" y="613" width="0.0796%" height="15" fill="rgb(240,91,16)" fg:x="889" fg:w="1"/><text x="70.9739%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.7239%" y="597" width="0.0796%" height="15" fill="rgb(224,160,9)" fg:x="889" fg:w="1"/><text x="70.9739%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.7239%" y="581" width="0.0796%" height="15" fill="rgb(215,116,14)" fg:x="889" fg:w="1"/><text x="70.9739%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8035%" y="645" width="0.0796%" height="15" fill="rgb(235,46,36)" fg:x="890" fg:w="1"/><text x="71.0535%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8831%" y="645" width="0.0796%" height="15" fill="rgb(238,39,28)" fg:x="891" fg:w="1"/><text x="71.1331%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8831%" y="629" width="0.0796%" height="15" fill="rgb(242,125,29)" fg:x="891" fg:w="1"/><text x="71.1331%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8831%" y="613" width="0.0796%" height="15" fill="rgb(238,211,30)" fg:x="891" fg:w="1"/><text x="71.1331%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.0422%" y="613" width="0.0796%" height="15" fill="rgb(227,201,28)" fg:x="893" fg:w="1"/><text x="71.2922%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.0422%" y="597" width="0.0796%" height="15" fill="rgb(238,77,29)" fg:x="893" fg:w="1"/><text x="71.2922%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="71.0422%" y="581" width="0.0796%" height="15" fill="rgb(213,221,40)" fg:x="893" fg:w="1"/><text x="71.2922%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="71.1217%" y="613" width="0.0796%" height="15" fill="rgb(226,220,44)" fg:x="894" fg:w="1"/><text x="71.3717%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="71.1217%" y="597" width="0.0796%" height="15" fill="rgb(228,90,23)" fg:x="894" fg:w="1"/><text x="71.3717%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="71.1217%" y="581" width="0.0796%" height="15" fill="rgb(235,72,29)" fg:x="894" fg:w="1"/><text x="71.3717%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.2808%" y="581" width="0.0796%" height="15" fill="rgb(248,117,39)" fg:x="896" fg:w="1"/><text x="71.5308%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.2808%" y="565" width="0.0796%" height="15" fill="rgb(225,43,28)" fg:x="896" fg:w="1"/><text x="71.5308%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.2808%" y="549" width="0.0796%" height="15" fill="rgb(240,93,4)" fg:x="896" fg:w="1"/><text x="71.5308%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4399%" y="517" width="0.0796%" height="15" fill="rgb(234,178,27)" fg:x="898" fg:w="1"/><text x="71.6899%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="71.4399%" y="533" width="0.1591%" height="15" fill="rgb(254,88,22)" fg:x="898" fg:w="2"/><text x="71.6899%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="71.5195%" y="517" width="0.0796%" height="15" fill="rgb(240,206,50)" fg:x="899" fg:w="1"/><text x="71.7695%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="71.5195%" y="501" width="0.0796%" height="15" fill="rgb(249,103,8)" fg:x="899" fg:w="1"/><text x="71.7695%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.5195%" y="485" width="0.0796%" height="15" fill="rgb(241,178,36)" fg:x="899" fg:w="1"/><text x="71.7695%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.5195%" y="469" width="0.0796%" height="15" fill="rgb(246,110,15)" fg:x="899" fg:w="1"/><text x="71.7695%" y="479.50"></text></g><g><title>engine::session::Session::flush (48 samples, 3.82%)</title><rect x="67.8600%" y="773" width="3.8186%" height="15" fill="rgb(207,14,43)" fg:x="853" fg:w="48"/><text x="68.1100%" y="783.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (48 samples, 3.82%)</title><rect x="67.8600%" y="757" width="3.8186%" height="15" fill="rgb(253,219,19)" fg:x="853" fg:w="48"/><text x="68.1100%" y="767.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (46 samples, 3.66%)</title><rect x="68.0191%" y="741" width="3.6595%" height="15" fill="rgb(216,126,5)" fg:x="855" fg:w="46"/><text x="68.2691%" y="751.50">engi..</text></g><g><title>engine::session::SavesEntities::check_for_changes (46 samples, 3.66%)</title><rect x="68.0191%" y="725" width="3.6595%" height="15" fill="rgb(218,78,42)" fg:x="855" fg:w="46"/><text x="68.2691%" y="735.50">engi..</text></g><g><title>kernel::compare::any_entity_changes (11 samples, 0.88%)</title><rect x="70.8035%" y="709" width="0.8751%" height="15" fill="rgb(215,154,40)" fg:x="890" fg:w="11"/><text x="71.0535%" y="719.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="70.8035%" y="693" width="0.8751%" height="15" fill="rgb(235,129,32)" fg:x="890" fg:w="11"/><text x="71.0535%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="70.8035%" y="677" width="0.8751%" height="15" fill="rgb(218,51,8)" fg:x="890" fg:w="11"/><text x="71.0535%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="70.8035%" y="661" width="0.8751%" height="15" fill="rgb(245,48,4)" fg:x="890" fg:w="11"/><text x="71.0535%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (9 samples, 0.72%)</title><rect x="70.9626%" y="645" width="0.7160%" height="15" fill="rgb(250,175,12)" fg:x="892" fg:w="9"/><text x="71.2126%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="70.9626%" y="629" width="0.7160%" height="15" fill="rgb(237,95,40)" fg:x="892" fg:w="9"/><text x="71.2126%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="71.2013%" y="613" width="0.4773%" height="15" fill="rgb(244,120,0)" fg:x="895" fg:w="6"/><text x="71.4513%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="71.2013%" y="597" width="0.4773%" height="15" fill="rgb(241,19,42)" fg:x="895" fg:w="6"/><text x="71.4513%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="71.3604%" y="581" width="0.3182%" height="15" fill="rgb(217,174,48)" fg:x="897" fg:w="4"/><text x="71.6104%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="71.3604%" y="565" width="0.3182%" height="15" fill="rgb(239,36,38)" fg:x="897" fg:w="4"/><text x="71.6104%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="71.3604%" y="549" width="0.3182%" height="15" fill="rgb(220,63,49)" fg:x="897" fg:w="4"/><text x="71.6104%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5990%" y="533" width="0.0796%" height="15" fill="rgb(240,101,13)" fg:x="900" fg:w="1"/><text x="71.8490%" y="543.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="71.6786%" y="757" width="0.0796%" height="15" fill="rgb(209,184,51)" fg:x="901" fg:w="1"/><text x="71.9286%" y="767.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="71.6786%" y="741" width="0.0796%" height="15" fill="rgb(206,136,39)" fg:x="901" fg:w="1"/><text x="71.9286%" y="751.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="71.6786%" y="725" width="0.0796%" height="15" fill="rgb(254,47,45)" fg:x="901" fg:w="1"/><text x="71.9286%" y="735.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="71.6786%" y="709" width="0.0796%" height="15" fill="rgb(252,103,20)" fg:x="901" fg:w="1"/><text x="71.9286%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.6786%" y="693" width="0.0796%" height="15" fill="rgb(230,69,12)" fg:x="901" fg:w="1"/><text x="71.9286%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="71.6786%" y="677" width="0.0796%" height="15" fill="rgb(219,2,28)" fg:x="901" fg:w="1"/><text x="71.9286%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.6786%" y="661" width="0.0796%" height="15" fill="rgb(210,9,12)" fg:x="901" fg:w="1"/><text x="71.9286%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="71.6786%" y="645" width="0.0796%" height="15" fill="rgb(235,99,33)" fg:x="901" fg:w="1"/><text x="71.9286%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="71.6786%" y="629" width="0.0796%" height="15" fill="rgb(230,11,38)" fg:x="901" fg:w="1"/><text x="71.9286%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.6786%" y="613" width="0.0796%" height="15" fill="rgb(217,129,0)" fg:x="901" fg:w="1"/><text x="71.9286%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="71.6786%" y="597" width="0.0796%" height="15" fill="rgb(222,198,4)" fg:x="901" fg:w="1"/><text x="71.9286%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.6786%" y="581" width="0.0796%" height="15" fill="rgb(246,170,27)" fg:x="901" fg:w="1"/><text x="71.9286%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.6786%" y="565" width="0.0796%" height="15" fill="rgb(229,17,28)" fg:x="901" fg:w="1"/><text x="71.9286%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="71.6786%" y="773" width="0.1591%" height="15" fill="rgb(233,198,48)" fg:x="901" fg:w="2"/><text x="71.9286%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="71.7582%" y="757" width="0.0796%" height="15" fill="rgb(238,103,23)" fg:x="902" fg:w="1"/><text x="72.0082%" y="767.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.7582%" y="741" width="0.0796%" height="15" fill="rgb(206,91,41)" fg:x="902" fg:w="1"/><text x="72.0082%" y="751.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="71.7582%" y="725" width="0.0796%" height="15" fill="rgb(227,34,25)" fg:x="902" fg:w="1"/><text x="72.0082%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="71.7582%" y="709" width="0.0796%" height="15" fill="rgb(210,110,44)" fg:x="902" fg:w="1"/><text x="72.0082%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7582%" y="693" width="0.0796%" height="15" fill="rgb(216,189,8)" fg:x="902" fg:w="1"/><text x="72.0082%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7582%" y="677" width="0.0796%" height="15" fill="rgb(234,9,46)" fg:x="902" fg:w="1"/><text x="72.0082%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7582%" y="661" width="0.0796%" height="15" fill="rgb(251,200,5)" fg:x="902" fg:w="1"/><text x="72.0082%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7582%" y="645" width="0.0796%" height="15" fill="rgb(238,165,37)" fg:x="902" fg:w="1"/><text x="72.0082%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.7582%" y="629" width="0.0796%" height="15" fill="rgb(232,77,38)" fg:x="902" fg:w="1"/><text x="72.0082%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7582%" y="613" width="0.0796%" height="15" fill="rgb(253,179,33)" fg:x="902" fg:w="1"/><text x="72.0082%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7582%" y="597" width="0.0796%" height="15" fill="rgb(240,13,35)" fg:x="902" fg:w="1"/><text x="72.0082%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7582%" y="581" width="0.0796%" height="15" fill="rgb(242,150,49)" fg:x="902" fg:w="1"/><text x="72.0082%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7582%" y="565" width="0.0796%" height="15" fill="rgb(237,176,28)" fg:x="902" fg:w="1"/><text x="72.0082%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7582%" y="549" width="0.0796%" height="15" fill="rgb(214,176,33)" fg:x="902" fg:w="1"/><text x="72.0082%" y="559.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.8377%" y="709" width="0.0796%" height="15" fill="rgb(214,25,12)" fg:x="903" fg:w="1"/><text x="72.0877%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="71.8377%" y="693" width="0.0796%" height="15" fill="rgb(238,190,20)" fg:x="903" fg:w="1"/><text x="72.0877%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="71.8377%" y="677" width="0.0796%" height="15" fill="rgb(208,11,19)" fg:x="903" fg:w="1"/><text x="72.0877%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.8377%" y="661" width="0.0796%" height="15" fill="rgb(239,90,4)" fg:x="903" fg:w="1"/><text x="72.0877%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.8377%" y="645" width="0.0796%" height="15" fill="rgb(248,110,3)" fg:x="903" fg:w="1"/><text x="72.0877%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.8377%" y="629" width="0.0796%" height="15" fill="rgb(210,41,30)" fg:x="903" fg:w="1"/><text x="72.0877%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.8377%" y="613" width="0.0796%" height="15" fill="rgb(239,36,8)" fg:x="903" fg:w="1"/><text x="72.0877%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9968%" y="661" width="0.0796%" height="15" fill="rgb(237,201,47)" fg:x="905" fg:w="1"/><text x="72.2468%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.9968%" y="645" width="0.0796%" height="15" fill="rgb(224,140,29)" fg:x="905" fg:w="1"/><text x="72.2468%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9968%" y="629" width="0.0796%" height="15" fill="rgb(231,209,17)" fg:x="905" fg:w="1"/><text x="72.2468%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.9968%" y="613" width="0.0796%" height="15" fill="rgb(249,196,1)" fg:x="905" fg:w="1"/><text x="72.2468%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9968%" y="597" width="0.0796%" height="15" fill="rgb(223,207,51)" fg:x="905" fg:w="1"/><text x="72.2468%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.0764%" y="597" width="0.0796%" height="15" fill="rgb(210,14,40)" fg:x="906" fg:w="1"/><text x="72.3264%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="71.8377%" y="725" width="0.3978%" height="15" fill="rgb(250,20,52)" fg:x="903" fg:w="5"/><text x="72.0877%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="71.9173%" y="709" width="0.3182%" height="15" fill="rgb(241,46,11)" fg:x="904" fg:w="4"/><text x="72.1673%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (4 samples, 0.32%)</title><rect x="71.9173%" y="693" width="0.3182%" height="15" fill="rgb(219,105,5)" fg:x="904" fg:w="4"/><text x="72.1673%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (4 samples, 0.32%)</title><rect x="71.9173%" y="677" width="0.3182%" height="15" fill="rgb(252,77,35)" fg:x="904" fg:w="4"/><text x="72.1673%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="72.0764%" y="661" width="0.1591%" height="15" fill="rgb(243,119,2)" fg:x="906" fg:w="2"/><text x="72.3264%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.0764%" y="645" width="0.1591%" height="15" fill="rgb(206,82,28)" fg:x="906" fg:w="2"/><text x="72.3264%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="72.0764%" y="629" width="0.1591%" height="15" fill="rgb(227,120,12)" fg:x="906" fg:w="2"/><text x="72.3264%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.0764%" y="613" width="0.1591%" height="15" fill="rgb(229,134,41)" fg:x="906" fg:w="2"/><text x="72.3264%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="72.1559%" y="597" width="0.0796%" height="15" fill="rgb(239,96,32)" fg:x="907" fg:w="1"/><text x="72.4059%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="72.1559%" y="581" width="0.0796%" height="15" fill="rgb(225,46,27)" fg:x="907" fg:w="1"/><text x="72.4059%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.1559%" y="565" width="0.0796%" height="15" fill="rgb(215,168,2)" fg:x="907" fg:w="1"/><text x="72.4059%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="72.1559%" y="549" width="0.0796%" height="15" fill="rgb(207,170,52)" fg:x="907" fg:w="1"/><text x="72.4059%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.1559%" y="533" width="0.0796%" height="15" fill="rgb(237,198,36)" fg:x="907" fg:w="1"/><text x="72.4059%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="72.1559%" y="517" width="0.0796%" height="15" fill="rgb(213,27,14)" fg:x="907" fg:w="1"/><text x="72.4059%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.03%)</title><rect x="71.8377%" y="757" width="1.0342%" height="15" fill="rgb(218,77,5)" fg:x="903" fg:w="13"/><text x="72.0877%" y="767.50"></text></g><g><title>engine::internal::Entities::add_entity (13 samples, 1.03%)</title><rect x="71.8377%" y="741" width="1.0342%" height="15" fill="rgb(230,219,39)" fg:x="903" fg:w="13"/><text x="72.0877%" y="751.50"></text></g><g><title>engine::internal::EntityMap::add_entity (8 samples, 0.64%)</title><rect x="72.2355%" y="725" width="0.6364%" height="15" fill="rgb(245,177,7)" fg:x="908" fg:w="8"/><text x="72.4855%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.64%)</title><rect x="72.2355%" y="709" width="0.6364%" height="15" fill="rgb(246,44,46)" fg:x="908" fg:w="8"/><text x="72.4855%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.64%)</title><rect x="72.2355%" y="693" width="0.6364%" height="15" fill="rgb(207,173,15)" fg:x="908" fg:w="8"/><text x="72.4855%" y="703.50"></text></g><g><title>__libc_malloc (8 samples, 0.64%)</title><rect x="72.2355%" y="677" width="0.6364%" height="15" fill="rgb(245,170,50)" fg:x="908" fg:w="8"/><text x="72.4855%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="72.8719%" y="741" width="0.0796%" height="15" fill="rgb(233,156,21)" fg:x="916" fg:w="1"/><text x="73.1219%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="72.8719%" y="725" width="0.0796%" height="15" fill="rgb(253,146,27)" fg:x="916" fg:w="1"/><text x="73.1219%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.8719%" y="709" width="0.0796%" height="15" fill="rgb(247,66,29)" fg:x="916" fg:w="1"/><text x="73.1219%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.9515%" y="709" width="0.0796%" height="15" fill="rgb(218,207,26)" fg:x="917" fg:w="1"/><text x="73.2015%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="72.9515%" y="693" width="0.0796%" height="15" fill="rgb(234,93,26)" fg:x="917" fg:w="1"/><text x="73.2015%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="72.9515%" y="677" width="0.0796%" height="15" fill="rgb(214,75,48)" fg:x="917" fg:w="1"/><text x="73.2015%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.9515%" y="661" width="0.0796%" height="15" fill="rgb(229,119,22)" fg:x="917" fg:w="1"/><text x="73.2015%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9515%" y="645" width="0.0796%" height="15" fill="rgb(226,153,19)" fg:x="917" fg:w="1"/><text x="73.2015%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.9515%" y="629" width="0.0796%" height="15" fill="rgb(220,204,36)" fg:x="917" fg:w="1"/><text x="73.2015%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9515%" y="613" width="0.0796%" height="15" fill="rgb(253,181,43)" fg:x="917" fg:w="1"/><text x="73.2015%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.9515%" y="597" width="0.0796%" height="15" fill="rgb(211,41,51)" fg:x="917" fg:w="1"/><text x="73.2015%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9515%" y="581" width="0.0796%" height="15" fill="rgb(207,215,0)" fg:x="917" fg:w="1"/><text x="73.2015%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.9515%" y="565" width="0.0796%" height="15" fill="rgb(212,153,10)" fg:x="917" fg:w="1"/><text x="73.2015%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.9515%" y="549" width="0.0796%" height="15" fill="rgb(251,171,36)" fg:x="917" fg:w="1"/><text x="73.2015%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.9515%" y="533" width="0.0796%" height="15" fill="rgb(225,219,41)" fg:x="917" fg:w="1"/><text x="73.2015%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.0310%" y="661" width="0.0796%" height="15" fill="rgb(208,200,1)" fg:x="918" fg:w="1"/><text x="73.2810%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.0310%" y="645" width="0.0796%" height="15" fill="rgb(206,75,47)" fg:x="918" fg:w="1"/><text x="73.2810%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.0310%" y="629" width="0.0796%" height="15" fill="rgb(248,3,16)" fg:x="918" fg:w="1"/><text x="73.2810%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.0310%" y="613" width="0.0796%" height="15" fill="rgb(242,157,36)" fg:x="918" fg:w="1"/><text x="73.2810%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.0310%" y="597" width="0.0796%" height="15" fill="rgb(215,175,11)" fg:x="918" fg:w="1"/><text x="73.2810%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="72.9515%" y="741" width="0.2387%" height="15" fill="rgb(252,222,22)" fg:x="917" fg:w="3"/><text x="73.2015%" y="751.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="72.9515%" y="725" width="0.2387%" height="15" fill="rgb(250,121,35)" fg:x="917" fg:w="3"/><text x="73.2015%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="73.0310%" y="709" width="0.1591%" height="15" fill="rgb(233,120,49)" fg:x="918" fg:w="2"/><text x="73.2810%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="73.0310%" y="693" width="0.1591%" height="15" fill="rgb(205,201,14)" fg:x="918" fg:w="2"/><text x="73.2810%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="73.0310%" y="677" width="0.1591%" height="15" fill="rgb(219,58,45)" fg:x="918" fg:w="2"/><text x="73.2810%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.1106%" y="661" width="0.0796%" height="15" fill="rgb(251,65,12)" fg:x="919" fg:w="1"/><text x="73.3606%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.1106%" y="645" width="0.0796%" height="15" fill="rgb(224,47,31)" fg:x="919" fg:w="1"/><text x="73.3606%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.1106%" y="629" width="0.0796%" height="15" fill="rgb(233,74,26)" fg:x="919" fg:w="1"/><text x="73.3606%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.1106%" y="613" width="0.0796%" height="15" fill="rgb(231,211,31)" fg:x="919" fg:w="1"/><text x="73.3606%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.1106%" y="597" width="0.0796%" height="15" fill="rgb(239,167,5)" fg:x="919" fg:w="1"/><text x="73.3606%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.1106%" y="581" width="0.0796%" height="15" fill="rgb(241,85,0)" fg:x="919" fg:w="1"/><text x="73.3606%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.1106%" y="565" width="0.0796%" height="15" fill="rgb(229,130,21)" fg:x="919" fg:w="1"/><text x="73.3606%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="73.1901%" y="741" width="0.0796%" height="15" fill="rgb(254,84,49)" fg:x="920" fg:w="1"/><text x="73.4401%" y="751.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="73.1901%" y="725" width="0.0796%" height="15" fill="rgb(235,85,21)" fg:x="920" fg:w="1"/><text x="73.4401%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1901%" y="709" width="0.0796%" height="15" fill="rgb(246,128,52)" fg:x="920" fg:w="1"/><text x="73.4401%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="73.2697%" y="693" width="0.0796%" height="15" fill="rgb(243,114,49)" fg:x="921" fg:w="1"/><text x="73.5197%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="73.2697%" y="677" width="0.0796%" height="15" fill="rgb(240,224,22)" fg:x="921" fg:w="1"/><text x="73.5197%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="73.2697%" y="661" width="0.0796%" height="15" fill="rgb(247,201,52)" fg:x="921" fg:w="1"/><text x="73.5197%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2697%" y="645" width="0.0796%" height="15" fill="rgb(231,70,45)" fg:x="921" fg:w="1"/><text x="73.5197%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2697%" y="629" width="0.0796%" height="15" fill="rgb(217,215,20)" fg:x="921" fg:w="1"/><text x="73.5197%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2697%" y="613" width="0.0796%" height="15" fill="rgb(226,170,30)" fg:x="921" fg:w="1"/><text x="73.5197%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2697%" y="597" width="0.0796%" height="15" fill="rgb(220,190,43)" fg:x="921" fg:w="1"/><text x="73.5197%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2697%" y="581" width="0.0796%" height="15" fill="rgb(218,20,18)" fg:x="921" fg:w="1"/><text x="73.5197%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="73.3492%" y="677" width="0.0796%" height="15" fill="rgb(245,37,26)" fg:x="922" fg:w="1"/><text x="73.5992%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3492%" y="661" width="0.0796%" height="15" fill="rgb(241,127,29)" fg:x="922" fg:w="1"/><text x="73.5992%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.4288%" y="645" width="0.0796%" height="15" fill="rgb(241,33,26)" fg:x="923" fg:w="1"/><text x="73.6788%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.4288%" y="629" width="0.0796%" height="15" fill="rgb(220,106,21)" fg:x="923" fg:w="1"/><text x="73.6788%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.4288%" y="613" width="0.0796%" height="15" fill="rgb(225,125,35)" fg:x="923" fg:w="1"/><text x="73.6788%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.4288%" y="597" width="0.0796%" height="15" fill="rgb(248,80,22)" fg:x="923" fg:w="1"/><text x="73.6788%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.4288%" y="581" width="0.0796%" height="15" fill="rgb(231,117,39)" fg:x="923" fg:w="1"/><text x="73.6788%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.4288%" y="565" width="0.0796%" height="15" fill="rgb(239,183,16)" fg:x="923" fg:w="1"/><text x="73.6788%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.4288%" y="549" width="0.0796%" height="15" fill="rgb(221,61,19)" fg:x="923" fg:w="1"/><text x="73.6788%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.4288%" y="533" width="0.0796%" height="15" fill="rgb(239,196,44)" fg:x="923" fg:w="1"/><text x="73.6788%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.4288%" y="517" width="0.0796%" height="15" fill="rgb(206,113,19)" fg:x="923" fg:w="1"/><text x="73.6788%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.4288%" y="501" width="0.0796%" height="15" fill="rgb(245,114,12)" fg:x="923" fg:w="1"/><text x="73.6788%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.4288%" y="485" width="0.0796%" height="15" fill="rgb(247,89,39)" fg:x="923" fg:w="1"/><text x="73.6788%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.4288%" y="469" width="0.0796%" height="15" fill="rgb(213,85,14)" fg:x="923" fg:w="1"/><text x="73.6788%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.4288%" y="453" width="0.0796%" height="15" fill="rgb(249,206,33)" fg:x="923" fg:w="1"/><text x="73.6788%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.4288%" y="437" width="0.0796%" height="15" fill="rgb(235,167,47)" fg:x="923" fg:w="1"/><text x="73.6788%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4288%" y="421" width="0.0796%" height="15" fill="rgb(217,177,16)" fg:x="923" fg:w="1"/><text x="73.6788%" y="431.50"></text></g><g><title>plugins_core::build::Build::holding (22 samples, 1.75%)</title><rect x="71.8377%" y="773" width="1.7502%" height="15" fill="rgb(250,228,29)" fg:x="903" fg:w="22"/><text x="72.0877%" y="783.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="72.8719%" y="757" width="0.7160%" height="15" fill="rgb(216,195,42)" fg:x="916" fg:w="9"/><text x="73.1219%" y="767.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="73.2697%" y="741" width="0.3182%" height="15" fill="rgb(232,192,32)" fg:x="921" fg:w="4"/><text x="73.5197%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="73.2697%" y="725" width="0.3182%" height="15" fill="rgb(211,8,47)" fg:x="921" fg:w="4"/><text x="73.5197%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="73.2697%" y="709" width="0.3182%" height="15" fill="rgb(251,201,9)" fg:x="921" fg:w="4"/><text x="73.5197%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="73.3492%" y="693" width="0.2387%" height="15" fill="rgb(206,185,47)" fg:x="922" fg:w="3"/><text x="73.5992%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="73.4288%" y="677" width="0.1591%" height="15" fill="rgb(245,54,32)" fg:x="923" fg:w="2"/><text x="73.6788%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="73.4288%" y="661" width="0.1591%" height="15" fill="rgb(208,1,8)" fg:x="923" fg:w="2"/><text x="73.6788%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.5084%" y="645" width="0.0796%" height="15" fill="rgb(228,57,24)" fg:x="924" fg:w="1"/><text x="73.7584%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.5084%" y="629" width="0.0796%" height="15" fill="rgb(251,24,8)" fg:x="924" fg:w="1"/><text x="73.7584%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.5084%" y="613" width="0.0796%" height="15" fill="rgb(236,196,50)" fg:x="924" fg:w="1"/><text x="73.7584%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.5084%" y="597" width="0.0796%" height="15" fill="rgb(246,222,29)" fg:x="924" fg:w="1"/><text x="73.7584%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.5084%" y="581" width="0.0796%" height="15" fill="rgb(211,34,40)" fg:x="924" fg:w="1"/><text x="73.7584%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="73.5879%" y="741" width="0.0796%" height="15" fill="rgb(210,66,51)" fg:x="925" fg:w="1"/><text x="73.8379%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="73.5879%" y="725" width="0.0796%" height="15" fill="rgb(250,56,43)" fg:x="925" fg:w="1"/><text x="73.8379%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="73.5879%" y="709" width="0.0796%" height="15" fill="rgb(240,111,50)" fg:x="925" fg:w="1"/><text x="73.8379%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="73.5879%" y="693" width="0.0796%" height="15" fill="rgb(209,117,13)" fg:x="925" fg:w="1"/><text x="73.8379%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.5879%" y="677" width="0.0796%" height="15" fill="rgb(232,164,45)" fg:x="925" fg:w="1"/><text x="73.8379%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.5879%" y="661" width="0.0796%" height="15" fill="rgb(205,69,32)" fg:x="925" fg:w="1"/><text x="73.8379%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="73.5879%" y="645" width="0.0796%" height="15" fill="rgb(240,147,45)" fg:x="925" fg:w="1"/><text x="73.8379%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="73.5879%" y="629" width="0.0796%" height="15" fill="rgb(221,94,48)" fg:x="925" fg:w="1"/><text x="73.8379%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.5879%" y="613" width="0.0796%" height="15" fill="rgb(249,209,17)" fg:x="925" fg:w="1"/><text x="73.8379%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.5879%" y="597" width="0.0796%" height="15" fill="rgb(228,57,28)" fg:x="925" fg:w="1"/><text x="73.8379%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="73.5879%" y="581" width="0.0796%" height="15" fill="rgb(250,133,26)" fg:x="925" fg:w="1"/><text x="73.8379%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="73.5879%" y="565" width="0.0796%" height="15" fill="rgb(254,15,16)" fg:x="925" fg:w="1"/><text x="73.8379%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.5879%" y="549" width="0.0796%" height="15" fill="rgb(209,147,42)" fg:x="925" fg:w="1"/><text x="73.8379%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.5879%" y="533" width="0.0796%" height="15" fill="rgb(208,5,29)" fg:x="925" fg:w="1"/><text x="73.8379%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5879%" y="517" width="0.0796%" height="15" fill="rgb(250,73,31)" fg:x="925" fg:w="1"/><text x="73.8379%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5879%" y="501" width="0.0796%" height="15" fill="rgb(238,45,10)" fg:x="925" fg:w="1"/><text x="73.8379%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="73.5879%" y="485" width="0.0796%" height="15" fill="rgb(214,104,5)" fg:x="925" fg:w="1"/><text x="73.8379%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="73.5879%" y="469" width="0.0796%" height="15" fill="rgb(242,217,19)" fg:x="925" fg:w="1"/><text x="73.8379%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="73.5879%" y="453" width="0.0796%" height="15" fill="rgb(246,113,27)" fg:x="925" fg:w="1"/><text x="73.8379%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="73.5879%" y="437" width="0.0796%" height="15" fill="rgb(221,34,27)" fg:x="925" fg:w="1"/><text x="73.8379%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="73.5879%" y="421" width="0.0796%" height="15" fill="rgb(246,109,6)" fg:x="925" fg:w="1"/><text x="73.8379%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="73.5879%" y="405" width="0.0796%" height="15" fill="rgb(217,12,25)" fg:x="925" fg:w="1"/><text x="73.8379%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.5879%" y="389" width="0.0796%" height="15" fill="rgb(250,195,5)" fg:x="925" fg:w="1"/><text x="73.8379%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="73.5879%" y="373" width="0.0796%" height="15" fill="rgb(244,140,45)" fg:x="925" fg:w="1"/><text x="73.8379%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.5879%" y="357" width="0.0796%" height="15" fill="rgb(230,64,14)" fg:x="925" fg:w="1"/><text x="73.8379%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="73.5879%" y="341" width="0.0796%" height="15" fill="rgb(206,27,27)" fg:x="925" fg:w="1"/><text x="73.8379%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="73.5879%" y="325" width="0.0796%" height="15" fill="rgb(230,14,50)" fg:x="925" fg:w="1"/><text x="73.8379%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="73.5879%" y="309" width="0.0796%" height="15" fill="rgb(237,172,14)" fg:x="925" fg:w="1"/><text x="73.8379%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.5879%" y="293" width="0.0796%" height="15" fill="rgb(209,25,21)" fg:x="925" fg:w="1"/><text x="73.8379%" y="303.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="73.5879%" y="773" width="0.1591%" height="15" fill="rgb(248,148,22)" fg:x="925" fg:w="2"/><text x="73.8379%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="73.5879%" y="757" width="0.1591%" height="15" fill="rgb(234,100,22)" fg:x="925" fg:w="2"/><text x="73.8379%" y="767.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="73.6675%" y="741" width="0.0796%" height="15" fill="rgb(210,20,30)" fg:x="926" fg:w="1"/><text x="73.9175%" y="751.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="73.6675%" y="725" width="0.0796%" height="15" fill="rgb(232,58,0)" fg:x="926" fg:w="1"/><text x="73.9175%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="73.6675%" y="709" width="0.0796%" height="15" fill="rgb(221,68,13)" fg:x="926" fg:w="1"/><text x="73.9175%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6675%" y="693" width="0.0796%" height="15" fill="rgb(231,194,11)" fg:x="926" fg:w="1"/><text x="73.9175%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="73.7470%" y="741" width="0.0796%" height="15" fill="rgb(235,51,41)" fg:x="927" fg:w="1"/><text x="73.9970%" y="751.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="73.7470%" y="725" width="0.0796%" height="15" fill="rgb(240,50,32)" fg:x="927" fg:w="1"/><text x="73.9970%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.7470%" y="709" width="0.0796%" height="15" fill="rgb(240,185,36)" fg:x="927" fg:w="1"/><text x="73.9970%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="73.8266%" y="725" width="0.1591%" height="15" fill="rgb(211,168,15)" fg:x="928" fg:w="2"/><text x="74.0766%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="73.8266%" y="709" width="0.1591%" height="15" fill="rgb(221,70,0)" fg:x="928" fg:w="2"/><text x="74.0766%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="73.8266%" y="693" width="0.1591%" height="15" fill="rgb(205,21,33)" fg:x="928" fg:w="2"/><text x="74.0766%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9061%" y="677" width="0.0796%" height="15" fill="rgb(225,106,10)" fg:x="929" fg:w="1"/><text x="74.1561%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9061%" y="661" width="0.0796%" height="15" fill="rgb(236,200,50)" fg:x="929" fg:w="1"/><text x="74.1561%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9061%" y="645" width="0.0796%" height="15" fill="rgb(249,93,23)" fg:x="929" fg:w="1"/><text x="74.1561%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.9061%" y="629" width="0.0796%" height="15" fill="rgb(244,115,35)" fg:x="929" fg:w="1"/><text x="74.1561%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.9061%" y="613" width="0.0796%" height="15" fill="rgb(231,129,47)" fg:x="929" fg:w="1"/><text x="74.1561%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.9061%" y="597" width="0.0796%" height="15" fill="rgb(225,160,50)" fg:x="929" fg:w="1"/><text x="74.1561%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.9061%" y="581" width="0.0796%" height="15" fill="rgb(218,135,23)" fg:x="929" fg:w="1"/><text x="74.1561%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.9061%" y="565" width="0.0796%" height="15" fill="rgb(227,119,14)" fg:x="929" fg:w="1"/><text x="74.1561%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="73.9061%" y="549" width="0.0796%" height="15" fill="rgb(242,138,13)" fg:x="929" fg:w="1"/><text x="74.1561%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="73.9061%" y="533" width="0.0796%" height="15" fill="rgb(215,11,16)" fg:x="929" fg:w="1"/><text x="74.1561%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="73.7470%" y="773" width="0.3182%" height="15" fill="rgb(234,170,50)" fg:x="927" fg:w="4"/><text x="73.9970%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::set_name (4 samples, 0.32%)</title><rect x="73.7470%" y="757" width="0.3182%" height="15" fill="rgb(233,34,20)" fg:x="927" fg:w="4"/><text x="73.9970%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::modified (3 samples, 0.24%)</title><rect x="73.8266%" y="741" width="0.2387%" height="15" fill="rgb(237,100,45)" fg:x="928" fg:w="3"/><text x="74.0766%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="73.9857%" y="725" width="0.0796%" height="15" fill="rgb(231,184,36)" fg:x="930" fg:w="1"/><text x="74.2357%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9857%" y="709" width="0.0796%" height="15" fill="rgb(252,93,2)" fg:x="930" fg:w="1"/><text x="74.2357%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="74.0652%" y="741" width="0.0796%" height="15" fill="rgb(248,176,47)" fg:x="931" fg:w="1"/><text x="74.3152%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="74.0652%" y="725" width="0.0796%" height="15" fill="rgb(249,125,23)" fg:x="931" fg:w="1"/><text x="74.3152%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.0652%" y="709" width="0.0796%" height="15" fill="rgb(239,67,42)" fg:x="931" fg:w="1"/><text x="74.3152%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.0652%" y="693" width="0.0796%" height="15" fill="rgb(244,162,4)" fg:x="931" fg:w="1"/><text x="74.3152%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.0652%" y="677" width="0.0796%" height="15" fill="rgb(214,150,38)" fg:x="931" fg:w="1"/><text x="74.3152%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.0652%" y="661" width="0.0796%" height="15" fill="rgb(228,211,28)" fg:x="931" fg:w="1"/><text x="74.3152%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="74.0652%" y="645" width="0.0796%" height="15" fill="rgb(212,98,48)" fg:x="931" fg:w="1"/><text x="74.3152%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.0652%" y="629" width="0.0796%" height="15" fill="rgb(213,45,13)" fg:x="931" fg:w="1"/><text x="74.3152%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.0652%" y="613" width="0.0796%" height="15" fill="rgb(218,35,29)" fg:x="931" fg:w="1"/><text x="74.3152%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.0652%" y="597" width="0.0796%" height="15" fill="rgb(244,13,3)" fg:x="931" fg:w="1"/><text x="74.3152%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="74.0652%" y="581" width="0.0796%" height="15" fill="rgb(235,170,19)" fg:x="931" fg:w="1"/><text x="74.3152%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.0652%" y="565" width="0.0796%" height="15" fill="rgb(233,193,43)" fg:x="931" fg:w="1"/><text x="74.3152%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.0652%" y="549" width="0.0796%" height="15" fill="rgb(228,223,20)" fg:x="931" fg:w="1"/><text x="74.3152%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.0652%" y="533" width="0.0796%" height="15" fill="rgb(208,85,54)" fg:x="931" fg:w="1"/><text x="74.3152%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.0652%" y="517" width="0.0796%" height="15" fill="rgb(254,14,45)" fg:x="931" fg:w="1"/><text x="74.3152%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="74.0652%" y="757" width="0.1591%" height="15" fill="rgb(247,99,29)" fg:x="931" fg:w="2"/><text x="74.3152%" y="767.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="74.1448%" y="741" width="0.0796%" height="15" fill="rgb(225,180,54)" fg:x="932" fg:w="1"/><text x="74.3948%" y="751.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="74.1448%" y="725" width="0.0796%" height="15" fill="rgb(239,88,43)" fg:x="932" fg:w="1"/><text x="74.3948%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="74.1448%" y="709" width="0.0796%" height="15" fill="rgb(209,47,11)" fg:x="932" fg:w="1"/><text x="74.3948%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="74.1448%" y="693" width="0.0796%" height="15" fill="rgb(219,179,23)" fg:x="932" fg:w="1"/><text x="74.3948%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="74.1448%" y="677" width="0.0796%" height="15" fill="rgb(213,183,19)" fg:x="932" fg:w="1"/><text x="74.3948%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.1448%" y="661" width="0.0796%" height="15" fill="rgb(210,11,9)" fg:x="932" fg:w="1"/><text x="74.3948%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.1448%" y="645" width="0.0796%" height="15" fill="rgb(239,194,16)" fg:x="932" fg:w="1"/><text x="74.3948%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.1448%" y="629" width="0.0796%" height="15" fill="rgb(246,23,50)" fg:x="932" fg:w="1"/><text x="74.3948%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.1448%" y="613" width="0.0796%" height="15" fill="rgb(245,10,41)" fg:x="932" fg:w="1"/><text x="74.3948%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.1448%" y="597" width="0.0796%" height="15" fill="rgb(228,43,24)" fg:x="932" fg:w="1"/><text x="74.3948%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1448%" y="581" width="0.0796%" height="15" fill="rgb(220,151,0)" fg:x="932" fg:w="1"/><text x="74.3948%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="74.3039%" y="741" width="0.0796%" height="15" fill="rgb(232,219,10)" fg:x="934" fg:w="1"/><text x="74.5539%" y="751.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="74.3039%" y="725" width="0.0796%" height="15" fill="rgb(227,217,48)" fg:x="934" fg:w="1"/><text x="74.5539%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.3039%" y="709" width="0.0796%" height="15" fill="rgb(210,66,35)" fg:x="934" fg:w="1"/><text x="74.5539%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="74.3039%" y="693" width="0.0796%" height="15" fill="rgb(254,6,7)" fg:x="934" fg:w="1"/><text x="74.5539%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.3039%" y="677" width="0.0796%" height="15" fill="rgb(235,222,42)" fg:x="934" fg:w="1"/><text x="74.5539%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.3039%" y="661" width="0.0796%" height="15" fill="rgb(245,126,5)" fg:x="934" fg:w="1"/><text x="74.5539%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3039%" y="645" width="0.0796%" height="15" fill="rgb(215,73,17)" fg:x="934" fg:w="1"/><text x="74.5539%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.3039%" y="629" width="0.0796%" height="15" fill="rgb(219,198,52)" fg:x="934" fg:w="1"/><text x="74.5539%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3039%" y="613" width="0.0796%" height="15" fill="rgb(217,159,18)" fg:x="934" fg:w="1"/><text x="74.5539%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.3039%" y="597" width="0.0796%" height="15" fill="rgb(212,177,18)" fg:x="934" fg:w="1"/><text x="74.5539%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3039%" y="581" width="0.0796%" height="15" fill="rgb(241,10,11)" fg:x="934" fg:w="1"/><text x="74.5539%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.3039%" y="565" width="0.0796%" height="15" fill="rgb(232,114,35)" fg:x="934" fg:w="1"/><text x="74.5539%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3039%" y="549" width="0.0796%" height="15" fill="rgb(238,222,8)" fg:x="934" fg:w="1"/><text x="74.5539%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.3039%" y="533" width="0.0796%" height="15" fill="rgb(251,153,44)" fg:x="934" fg:w="1"/><text x="74.5539%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3039%" y="517" width="0.0796%" height="15" fill="rgb(210,140,51)" fg:x="934" fg:w="1"/><text x="74.5539%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.3039%" y="501" width="0.0796%" height="15" fill="rgb(222,63,0)" fg:x="934" fg:w="1"/><text x="74.5539%" y="511.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.3835%" y="693" width="0.0796%" height="15" fill="rgb(240,18,40)" fg:x="935" fg:w="1"/><text x="74.6335%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="74.3835%" y="677" width="0.0796%" height="15" fill="rgb(237,88,16)" fg:x="935" fg:w="1"/><text x="74.6335%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.3835%" y="661" width="0.0796%" height="15" fill="rgb(251,117,13)" fg:x="935" fg:w="1"/><text x="74.6335%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3835%" y="645" width="0.0796%" height="15" fill="rgb(251,228,8)" fg:x="935" fg:w="1"/><text x="74.6335%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3835%" y="629" width="0.0796%" height="15" fill="rgb(205,107,49)" fg:x="935" fg:w="1"/><text x="74.6335%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3835%" y="613" width="0.0796%" height="15" fill="rgb(238,72,41)" fg:x="935" fg:w="1"/><text x="74.6335%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3835%" y="597" width="0.0796%" height="15" fill="rgb(248,183,52)" fg:x="935" fg:w="1"/><text x="74.6335%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3835%" y="581" width="0.0796%" height="15" fill="rgb(215,58,20)" fg:x="935" fg:w="1"/><text x="74.6335%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3835%" y="565" width="0.0796%" height="15" fill="rgb(209,49,13)" fg:x="935" fg:w="1"/><text x="74.6335%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.3835%" y="549" width="0.0796%" height="15" fill="rgb(208,113,17)" fg:x="935" fg:w="1"/><text x="74.6335%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.3835%" y="533" width="0.0796%" height="15" fill="rgb(208,14,22)" fg:x="935" fg:w="1"/><text x="74.6335%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.3835%" y="517" width="0.0796%" height="15" fill="rgb(222,95,2)" fg:x="935" fg:w="1"/><text x="74.6335%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.3835%" y="501" width="0.0796%" height="15" fill="rgb(253,180,37)" fg:x="935" fg:w="1"/><text x="74.6335%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.3835%" y="485" width="0.0796%" height="15" fill="rgb(250,81,33)" fg:x="935" fg:w="1"/><text x="74.6335%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.3835%" y="469" width="0.0796%" height="15" fill="rgb(251,151,41)" fg:x="935" fg:w="1"/><text x="74.6335%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.3835%" y="453" width="0.0796%" height="15" fill="rgb(210,135,17)" fg:x="935" fg:w="1"/><text x="74.6335%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.3835%" y="437" width="0.0796%" height="15" fill="rgb(239,21,29)" fg:x="935" fg:w="1"/><text x="74.6335%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.3835%" y="421" width="0.0796%" height="15" fill="rgb(231,215,16)" fg:x="935" fg:w="1"/><text x="74.6335%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3835%" y="405" width="0.0796%" height="15" fill="rgb(239,151,54)" fg:x="935" fg:w="1"/><text x="74.6335%" y="415.50"></text></g><g><title>plugins_core::build::Build::occupying (7 samples, 0.56%)</title><rect x="74.0652%" y="773" width="0.5569%" height="15" fill="rgb(222,122,38)" fg:x="931" fg:w="7"/><text x="74.3152%" y="783.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="74.2243%" y="757" width="0.3978%" height="15" fill="rgb(243,128,1)" fg:x="933" fg:w="5"/><text x="74.4743%" y="767.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="74.3835%" y="741" width="0.2387%" height="15" fill="rgb(225,74,21)" fg:x="935" fg:w="3"/><text x="74.6335%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="74.3835%" y="725" width="0.2387%" height="15" fill="rgb(216,210,10)" fg:x="935" fg:w="3"/><text x="74.6335%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="74.3835%" y="709" width="0.2387%" height="15" fill="rgb(228,76,19)" fg:x="935" fg:w="3"/><text x="74.6335%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="74.4630%" y="693" width="0.1591%" height="15" fill="rgb(236,80,34)" fg:x="936" fg:w="2"/><text x="74.7130%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="74.5426%" y="677" width="0.0796%" height="15" fill="rgb(225,173,23)" fg:x="937" fg:w="1"/><text x="74.7926%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.5426%" y="661" width="0.0796%" height="15" fill="rgb(253,38,1)" fg:x="937" fg:w="1"/><text x="74.7926%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5426%" y="645" width="0.0796%" height="15" fill="rgb(206,155,35)" fg:x="937" fg:w="1"/><text x="74.7926%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5426%" y="629" width="0.0796%" height="15" fill="rgb(254,27,53)" fg:x="937" fg:w="1"/><text x="74.7926%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5426%" y="613" width="0.0796%" height="15" fill="rgb(225,52,41)" fg:x="937" fg:w="1"/><text x="74.7926%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5426%" y="597" width="0.0796%" height="15" fill="rgb(244,53,18)" fg:x="937" fg:w="1"/><text x="74.7926%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.5426%" y="581" width="0.0796%" height="15" fill="rgb(254,206,48)" fg:x="937" fg:w="1"/><text x="74.7926%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5426%" y="565" width="0.0796%" height="15" fill="rgb(236,182,23)" fg:x="937" fg:w="1"/><text x="74.7926%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5426%" y="549" width="0.0796%" height="15" fill="rgb(236,191,37)" fg:x="937" fg:w="1"/><text x="74.7926%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5426%" y="533" width="0.0796%" height="15" fill="rgb(245,53,8)" fg:x="937" fg:w="1"/><text x="74.7926%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5426%" y="517" width="0.0796%" height="15" fill="rgb(245,147,9)" fg:x="937" fg:w="1"/><text x="74.7926%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5426%" y="501" width="0.0796%" height="15" fill="rgb(218,24,48)" fg:x="937" fg:w="1"/><text x="74.7926%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="74.6221%" y="757" width="0.0796%" height="15" fill="rgb(254,23,9)" fg:x="938" fg:w="1"/><text x="74.8721%" y="767.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="74.6221%" y="741" width="0.0796%" height="15" fill="rgb(244,105,9)" fg:x="938" fg:w="1"/><text x="74.8721%" y="751.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="74.6221%" y="725" width="0.0796%" height="15" fill="rgb(212,142,22)" fg:x="938" fg:w="1"/><text x="74.8721%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="74.6221%" y="709" width="0.0796%" height="15" fill="rgb(221,114,49)" fg:x="938" fg:w="1"/><text x="74.8721%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="74.6221%" y="693" width="0.0796%" height="15" fill="rgb(223,210,25)" fg:x="938" fg:w="1"/><text x="74.8721%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="74.6221%" y="677" width="0.0796%" height="15" fill="rgb(235,162,44)" fg:x="938" fg:w="1"/><text x="74.8721%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="74.6221%" y="661" width="0.0796%" height="15" fill="rgb(237,65,45)" fg:x="938" fg:w="1"/><text x="74.8721%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.6221%" y="645" width="0.0796%" height="15" fill="rgb(208,79,9)" fg:x="938" fg:w="1"/><text x="74.8721%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="74.6221%" y="629" width="0.0796%" height="15" fill="rgb(215,228,8)" fg:x="938" fg:w="1"/><text x="74.8721%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.6221%" y="613" width="0.0796%" height="15" fill="rgb(205,185,17)" fg:x="938" fg:w="1"/><text x="74.8721%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="74.6221%" y="597" width="0.0796%" height="15" fill="rgb(213,62,36)" fg:x="938" fg:w="1"/><text x="74.8721%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="74.6221%" y="581" width="0.0796%" height="15" fill="rgb(209,34,9)" fg:x="938" fg:w="1"/><text x="74.8721%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.6221%" y="565" width="0.0796%" height="15" fill="rgb(246,151,27)" fg:x="938" fg:w="1"/><text x="74.8721%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.6221%" y="549" width="0.0796%" height="15" fill="rgb(218,206,3)" fg:x="938" fg:w="1"/><text x="74.8721%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (103 samples, 8.19%)</title><rect x="66.5871%" y="789" width="8.1941%" height="15" fill="rgb(242,202,1)" fg:x="837" fg:w="103"/><text x="66.8371%" y="799.50">plugins_cor..</text></g><g><title>plugins_core::build::Build::with_username (2 samples, 0.16%)</title><rect x="74.6221%" y="773" width="0.1591%" height="15" fill="rgb(227,185,16)" fg:x="938" fg:w="2"/><text x="74.8721%" y="783.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="74.7017%" y="757" width="0.0796%" height="15" fill="rgb(241,1,14)" fg:x="939" fg:w="1"/><text x="74.9517%" y="767.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="74.7017%" y="741" width="0.0796%" height="15" fill="rgb(212,113,25)" fg:x="939" fg:w="1"/><text x="74.9517%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7017%" y="725" width="0.0796%" height="15" fill="rgb(247,37,43)" fg:x="939" fg:w="1"/><text x="74.9517%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7017%" y="709" width="0.0796%" height="15" fill="rgb(226,54,8)" fg:x="939" fg:w="1"/><text x="74.9517%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="74.7017%" y="693" width="0.0796%" height="15" fill="rgb(251,205,25)" fg:x="939" fg:w="1"/><text x="74.9517%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="74.7812%" y="757" width="0.0796%" height="15" fill="rgb(246,87,35)" fg:x="940" fg:w="1"/><text x="75.0312%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="74.7812%" y="741" width="0.0796%" height="15" fill="rgb(251,145,46)" fg:x="940" fg:w="1"/><text x="75.0312%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="74.7812%" y="725" width="0.0796%" height="15" fill="rgb(210,210,33)" fg:x="940" fg:w="1"/><text x="75.0312%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.7812%" y="709" width="0.0796%" height="15" fill="rgb(221,151,11)" fg:x="940" fg:w="1"/><text x="75.0312%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.7812%" y="693" width="0.0796%" height="15" fill="rgb(208,160,28)" fg:x="940" fg:w="1"/><text x="75.0312%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.7812%" y="677" width="0.0796%" height="15" fill="rgb(243,69,29)" fg:x="940" fg:w="1"/><text x="75.0312%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.7812%" y="661" width="0.0796%" height="15" fill="rgb(224,144,4)" fg:x="940" fg:w="1"/><text x="75.0312%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="74.7812%" y="645" width="0.0796%" height="15" fill="rgb(211,140,38)" fg:x="940" fg:w="1"/><text x="75.0312%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.7812%" y="629" width="0.0796%" height="15" fill="rgb(252,189,15)" fg:x="940" fg:w="1"/><text x="75.0312%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.7812%" y="613" width="0.0796%" height="15" fill="rgb(251,175,23)" fg:x="940" fg:w="1"/><text x="75.0312%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.7812%" y="597" width="0.0796%" height="15" fill="rgb(212,184,11)" fg:x="940" fg:w="1"/><text x="75.0312%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.7812%" y="581" width="0.0796%" height="15" fill="rgb(217,205,6)" fg:x="940" fg:w="1"/><text x="75.0312%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="74.7812%" y="565" width="0.0796%" height="15" fill="rgb(235,45,45)" fg:x="940" fg:w="1"/><text x="75.0312%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="74.7812%" y="549" width="0.0796%" height="15" fill="rgb(211,157,53)" fg:x="940" fg:w="1"/><text x="75.0312%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="74.7812%" y="533" width="0.0796%" height="15" fill="rgb(212,13,8)" fg:x="940" fg:w="1"/><text x="75.0312%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="74.7812%" y="517" width="0.0796%" height="15" fill="rgb(218,80,36)" fg:x="940" fg:w="1"/><text x="75.0312%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="74.7812%" y="501" width="0.0796%" height="15" fill="rgb(211,123,43)" fg:x="940" fg:w="1"/><text x="75.0312%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="74.7812%" y="485" width="0.0796%" height="15" fill="rgb(206,165,2)" fg:x="940" fg:w="1"/><text x="75.0312%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.7812%" y="469" width="0.0796%" height="15" fill="rgb(248,63,35)" fg:x="940" fg:w="1"/><text x="75.0312%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="74.7812%" y="453" width="0.0796%" height="15" fill="rgb(219,133,41)" fg:x="940" fg:w="1"/><text x="75.0312%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.7812%" y="437" width="0.0796%" height="15" fill="rgb(206,175,46)" fg:x="940" fg:w="1"/><text x="75.0312%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="74.7812%" y="421" width="0.0796%" height="15" fill="rgb(224,41,35)" fg:x="940" fg:w="1"/><text x="75.0312%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="74.7812%" y="405" width="0.0796%" height="15" fill="rgb(226,113,24)" fg:x="940" fg:w="1"/><text x="75.0312%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="74.7812%" y="389" width="0.0796%" height="15" fill="rgb(219,51,41)" fg:x="940" fg:w="1"/><text x="75.0312%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.7812%" y="373" width="0.0796%" height="15" fill="rgb(220,145,47)" fg:x="940" fg:w="1"/><text x="75.0312%" y="383.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="74.8608%" y="741" width="0.0796%" height="15" fill="rgb(239,121,47)" fg:x="941" fg:w="1"/><text x="75.1108%" y="751.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="74.8608%" y="725" width="0.0796%" height="15" fill="rgb(207,60,40)" fg:x="941" fg:w="1"/><text x="75.1108%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="74.8608%" y="709" width="0.0796%" height="15" fill="rgb(224,229,11)" fg:x="941" fg:w="1"/><text x="75.1108%" y="719.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="74.8608%" y="693" width="0.0796%" height="15" fill="rgb(252,28,32)" fg:x="941" fg:w="1"/><text x="75.1108%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.8608%" y="677" width="0.0796%" height="15" fill="rgb(207,52,49)" fg:x="941" fg:w="1"/><text x="75.1108%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="74.8608%" y="661" width="0.0796%" height="15" fill="rgb(243,51,50)" fg:x="941" fg:w="1"/><text x="75.1108%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="74.8608%" y="645" width="0.0796%" height="15" fill="rgb(212,92,21)" fg:x="941" fg:w="1"/><text x="75.1108%" y="655.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.9403%" y="725" width="0.0796%" height="15" fill="rgb(230,183,50)" fg:x="942" fg:w="1"/><text x="75.1903%" y="735.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="74.9403%" y="709" width="0.0796%" height="15" fill="rgb(225,48,9)" fg:x="942" fg:w="1"/><text x="75.1903%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.9403%" y="693" width="0.0796%" height="15" fill="rgb(254,44,4)" fg:x="942" fg:w="1"/><text x="75.1903%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="74.9403%" y="677" width="0.0796%" height="15" fill="rgb(252,128,37)" fg:x="942" fg:w="1"/><text x="75.1903%" y="687.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (160 samples, 12.73%)</title><rect x="62.3707%" y="805" width="12.7287%" height="15" fill="rgb(227,178,8)" fg:x="784" fg:w="160"/><text x="62.6207%" y="815.50">&lt;tests::HoldingKeyI..</text></g><g><title>plugins_core::build::BuildSurroundings::make (4 samples, 0.32%)</title><rect x="74.7812%" y="789" width="0.3182%" height="15" fill="rgb(205,206,32)" fg:x="940" fg:w="4"/><text x="75.0312%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="74.7812%" y="773" width="0.3182%" height="15" fill="rgb(220,218,22)" fg:x="940" fg:w="4"/><text x="75.0312%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::set_name (3 samples, 0.24%)</title><rect x="74.8608%" y="757" width="0.2387%" height="15" fill="rgb(236,41,28)" fg:x="941" fg:w="3"/><text x="75.1108%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::modified (2 samples, 0.16%)</title><rect x="74.9403%" y="741" width="0.1591%" height="15" fill="rgb(219,37,7)" fg:x="942" fg:w="2"/><text x="75.1903%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="75.0199%" y="725" width="0.0796%" height="15" fill="rgb(206,160,15)" fg:x="943" fg:w="1"/><text x="75.2699%" y="735.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="75.0199%" y="709" width="0.0796%" height="15" fill="rgb(208,82,21)" fg:x="943" fg:w="1"/><text x="75.2699%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="75.0199%" y="693" width="0.0796%" height="15" fill="rgb(226,130,25)" fg:x="943" fg:w="1"/><text x="75.2699%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.0199%" y="677" width="0.0796%" height="15" fill="rgb(212,72,24)" fg:x="943" fg:w="1"/><text x="75.2699%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0199%" y="661" width="0.0796%" height="15" fill="rgb(206,28,16)" fg:x="943" fg:w="1"/><text x="75.2699%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.0199%" y="645" width="0.0796%" height="15" fill="rgb(249,41,5)" fg:x="943" fg:w="1"/><text x="75.2699%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0199%" y="629" width="0.0796%" height="15" fill="rgb(233,96,48)" fg:x="943" fg:w="1"/><text x="75.2699%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.0199%" y="613" width="0.0796%" height="15" fill="rgb(240,198,11)" fg:x="943" fg:w="1"/><text x="75.2699%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0199%" y="597" width="0.0796%" height="15" fill="rgb(209,175,35)" fg:x="943" fg:w="1"/><text x="75.2699%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.0199%" y="581" width="0.0796%" height="15" fill="rgb(214,40,51)" fg:x="943" fg:w="1"/><text x="75.2699%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0199%" y="565" width="0.0796%" height="15" fill="rgb(252,56,4)" fg:x="943" fg:w="1"/><text x="75.2699%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="75.0994%" y="789" width="0.0796%" height="15" fill="rgb(219,131,5)" fg:x="944" fg:w="1"/><text x="75.3494%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="75.0994%" y="773" width="0.0796%" height="15" fill="rgb(223,67,53)" fg:x="944" fg:w="1"/><text x="75.3494%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.0994%" y="757" width="0.0796%" height="15" fill="rgb(227,154,8)" fg:x="944" fg:w="1"/><text x="75.3494%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.0994%" y="741" width="0.0796%" height="15" fill="rgb(216,174,51)" fg:x="944" fg:w="1"/><text x="75.3494%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="75.0994%" y="725" width="0.0796%" height="15" fill="rgb(239,60,34)" fg:x="944" fg:w="1"/><text x="75.3494%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="75.0994%" y="709" width="0.0796%" height="15" fill="rgb(236,165,48)" fg:x="944" fg:w="1"/><text x="75.3494%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="75.0994%" y="693" width="0.0796%" height="15" fill="rgb(210,37,26)" fg:x="944" fg:w="1"/><text x="75.3494%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.0994%" y="677" width="0.0796%" height="15" fill="rgb(211,3,17)" fg:x="944" fg:w="1"/><text x="75.3494%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.0994%" y="661" width="0.0796%" height="15" fill="rgb(234,88,49)" fg:x="944" fg:w="1"/><text x="75.3494%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="75.0994%" y="645" width="0.0796%" height="15" fill="rgb(233,40,17)" fg:x="944" fg:w="1"/><text x="75.3494%" y="655.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="75.1790%" y="773" width="0.1591%" height="15" fill="rgb(235,127,31)" fg:x="945" fg:w="2"/><text x="75.4290%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="75.1790%" y="757" width="0.1591%" height="15" fill="rgb(248,167,17)" fg:x="945" fg:w="2"/><text x="75.4290%" y="767.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="75.1790%" y="741" width="0.1591%" height="15" fill="rgb(218,179,8)" fg:x="945" fg:w="2"/><text x="75.4290%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.2586%" y="725" width="0.0796%" height="15" fill="rgb(216,92,14)" fg:x="946" fg:w="1"/><text x="75.5086%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.2586%" y="709" width="0.0796%" height="15" fill="rgb(221,198,46)" fg:x="946" fg:w="1"/><text x="75.5086%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.2586%" y="693" width="0.0796%" height="15" fill="rgb(244,7,25)" fg:x="946" fg:w="1"/><text x="75.5086%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.5768%" y="613" width="0.0796%" height="15" fill="rgb(233,75,6)" fg:x="950" fg:w="1"/><text x="75.8268%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.5768%" y="597" width="0.0796%" height="15" fill="rgb(240,189,41)" fg:x="950" fg:w="1"/><text x="75.8268%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.5768%" y="581" width="0.0796%" height="15" fill="rgb(237,157,21)" fg:x="950" fg:w="1"/><text x="75.8268%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.5768%" y="565" width="0.0796%" height="15" fill="rgb(210,136,49)" fg:x="950" fg:w="1"/><text x="75.8268%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.5768%" y="549" width="0.0796%" height="15" fill="rgb(210,68,29)" fg:x="950" fg:w="1"/><text x="75.8268%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="75.5768%" y="533" width="0.0796%" height="15" fill="rgb(247,207,20)" fg:x="950" fg:w="1"/><text x="75.8268%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="75.5768%" y="517" width="0.0796%" height="15" fill="rgb(224,73,48)" fg:x="950" fg:w="1"/><text x="75.8268%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.4972%" y="693" width="0.2387%" height="15" fill="rgb(215,136,47)" fg:x="949" fg:w="3"/><text x="75.7472%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.4972%" y="677" width="0.2387%" height="15" fill="rgb(232,222,16)" fg:x="949" fg:w="3"/><text x="75.7472%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.4972%" y="661" width="0.2387%" height="15" fill="rgb(249,202,47)" fg:x="949" fg:w="3"/><text x="75.7472%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.4972%" y="645" width="0.2387%" height="15" fill="rgb(236,56,8)" fg:x="949" fg:w="3"/><text x="75.7472%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.5768%" y="629" width="0.1591%" height="15" fill="rgb(222,6,3)" fg:x="950" fg:w="2"/><text x="75.8268%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6563%" y="613" width="0.0796%" height="15" fill="rgb(254,222,28)" fg:x="951" fg:w="1"/><text x="75.9063%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.9745%" y="565" width="0.0796%" height="15" fill="rgb(219,57,23)" fg:x="955" fg:w="1"/><text x="76.2245%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (8 samples, 0.64%)</title><rect x="75.4972%" y="725" width="0.6364%" height="15" fill="rgb(251,106,48)" fg:x="949" fg:w="8"/><text x="75.7472%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.64%)</title><rect x="75.4972%" y="709" width="0.6364%" height="15" fill="rgb(242,2,23)" fg:x="949" fg:w="8"/><text x="75.7472%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="75.7359%" y="693" width="0.3978%" height="15" fill="rgb(212,109,31)" fg:x="952" fg:w="5"/><text x="75.9859%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="75.7359%" y="677" width="0.3978%" height="15" fill="rgb(241,9,22)" fg:x="952" fg:w="5"/><text x="75.9859%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="75.7359%" y="661" width="0.3978%" height="15" fill="rgb(209,64,27)" fg:x="952" fg:w="5"/><text x="75.9859%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="75.7359%" y="645" width="0.3978%" height="15" fill="rgb(248,13,44)" fg:x="952" fg:w="5"/><text x="75.9859%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (5 samples, 0.40%)</title><rect x="75.7359%" y="629" width="0.3978%" height="15" fill="rgb(213,86,6)" fg:x="952" fg:w="5"/><text x="75.9859%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="75.7359%" y="613" width="0.3978%" height="15" fill="rgb(247,11,18)" fg:x="952" fg:w="5"/><text x="75.9859%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="75.7359%" y="597" width="0.3978%" height="15" fill="rgb(252,31,11)" fg:x="952" fg:w="5"/><text x="75.9859%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="75.7359%" y="581" width="0.3978%" height="15" fill="rgb(215,63,51)" fg:x="952" fg:w="5"/><text x="75.9859%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.0541%" y="565" width="0.0796%" height="15" fill="rgb(222,180,4)" fg:x="956" fg:w="1"/><text x="76.3041%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0541%" y="549" width="0.0796%" height="15" fill="rgb(233,4,23)" fg:x="956" fg:w="1"/><text x="76.3041%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.1337%" y="693" width="0.0796%" height="15" fill="rgb(230,116,22)" fg:x="957" fg:w="1"/><text x="76.3837%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.1337%" y="677" width="0.0796%" height="15" fill="rgb(222,20,14)" fg:x="957" fg:w="1"/><text x="76.3837%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.1337%" y="661" width="0.0796%" height="15" fill="rgb(210,176,43)" fg:x="957" fg:w="1"/><text x="76.3837%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.1337%" y="645" width="0.0796%" height="15" fill="rgb(219,67,32)" fg:x="957" fg:w="1"/><text x="76.3837%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.1337%" y="629" width="0.0796%" height="15" fill="rgb(228,91,39)" fg:x="957" fg:w="1"/><text x="76.3837%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.1337%" y="613" width="0.0796%" height="15" fill="rgb(254,63,14)" fg:x="957" fg:w="1"/><text x="76.3837%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.1337%" y="597" width="0.0796%" height="15" fill="rgb(216,171,39)" fg:x="957" fg:w="1"/><text x="76.3837%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1337%" y="581" width="0.0796%" height="15" fill="rgb(248,68,25)" fg:x="957" fg:w="1"/><text x="76.3837%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.2928%" y="613" width="0.1591%" height="15" fill="rgb(239,63,16)" fg:x="959" fg:w="2"/><text x="76.5428%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.2928%" y="597" width="0.1591%" height="15" fill="rgb(225,111,43)" fg:x="959" fg:w="2"/><text x="76.5428%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="76.2928%" y="581" width="0.1591%" height="15" fill="rgb(246,165,17)" fg:x="959" fg:w="2"/><text x="76.5428%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4519%" y="581" width="0.0796%" height="15" fill="rgb(208,124,1)" fg:x="961" fg:w="1"/><text x="76.7019%" y="591.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (14 samples, 1.11%)</title><rect x="75.4972%" y="741" width="1.1138%" height="15" fill="rgb(234,147,33)" fg:x="949" fg:w="14"/><text x="75.7472%" y="751.50"></text></g><g><title>kernel::model::scopes::save_props (6 samples, 0.48%)</title><rect x="76.1337%" y="725" width="0.4773%" height="15" fill="rgb(240,86,30)" fg:x="957" fg:w="6"/><text x="76.3837%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (6 samples, 0.48%)</title><rect x="76.1337%" y="709" width="0.4773%" height="15" fill="rgb(237,34,51)" fg:x="957" fg:w="6"/><text x="76.3837%" y="719.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (5 samples, 0.40%)</title><rect x="76.2132%" y="693" width="0.3978%" height="15" fill="rgb(232,131,41)" fg:x="958" fg:w="5"/><text x="76.4632%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="76.2132%" y="677" width="0.3978%" height="15" fill="rgb(227,129,53)" fg:x="958" fg:w="5"/><text x="76.4632%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (5 samples, 0.40%)</title><rect x="76.2132%" y="661" width="0.3978%" height="15" fill="rgb(230,90,35)" fg:x="958" fg:w="5"/><text x="76.4632%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="76.2928%" y="645" width="0.3182%" height="15" fill="rgb(248,88,27)" fg:x="959" fg:w="4"/><text x="76.5428%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="76.2928%" y="629" width="0.3182%" height="15" fill="rgb(223,18,17)" fg:x="959" fg:w="4"/><text x="76.5428%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="76.4519%" y="613" width="0.1591%" height="15" fill="rgb(241,11,10)" fg:x="961" fg:w="2"/><text x="76.7019%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="76.4519%" y="597" width="0.1591%" height="15" fill="rgb(232,111,52)" fg:x="961" fg:w="2"/><text x="76.7019%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5314%" y="581" width="0.0796%" height="15" fill="rgb(228,67,8)" fg:x="962" fg:w="1"/><text x="76.7814%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.6110%" y="725" width="0.0796%" height="15" fill="rgb(251,168,31)" fg:x="963" fg:w="1"/><text x="76.8610%" y="735.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.6905%" y="725" width="0.0796%" height="15" fill="rgb(249,164,11)" fg:x="964" fg:w="1"/><text x="76.9405%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.6905%" y="709" width="0.0796%" height="15" fill="rgb(239,81,9)" fg:x="964" fg:w="1"/><text x="76.9405%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.6905%" y="693" width="0.0796%" height="15" fill="rgb(222,145,38)" fg:x="964" fg:w="1"/><text x="76.9405%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.0088%" y="661" width="0.1591%" height="15" fill="rgb(238,80,54)" fg:x="968" fg:w="2"/><text x="77.2588%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.0883%" y="645" width="0.0796%" height="15" fill="rgb(237,116,16)" fg:x="969" fg:w="1"/><text x="77.3383%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.0883%" y="629" width="0.0796%" height="15" fill="rgb(218,135,19)" fg:x="969" fg:w="1"/><text x="77.3383%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.0883%" y="613" width="0.0796%" height="15" fill="rgb(216,207,44)" fg:x="969" fg:w="1"/><text x="77.3383%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="76.9292%" y="709" width="0.3182%" height="15" fill="rgb(226,152,40)" fg:x="967" fg:w="4"/><text x="77.1792%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="77.0088%" y="693" width="0.2387%" height="15" fill="rgb(219,98,35)" fg:x="968" fg:w="3"/><text x="77.2588%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="77.0088%" y="677" width="0.2387%" height="15" fill="rgb(222,136,46)" fg:x="968" fg:w="3"/><text x="77.2588%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="77.1679%" y="661" width="0.0796%" height="15" fill="rgb(222,71,8)" fg:x="970" fg:w="1"/><text x="77.4179%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.3270%" y="693" width="0.0796%" height="15" fill="rgb(209,89,53)" fg:x="972" fg:w="1"/><text x="77.5770%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.4065%" y="677" width="0.0796%" height="15" fill="rgb(210,97,51)" fg:x="973" fg:w="1"/><text x="77.6565%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.4065%" y="661" width="0.0796%" height="15" fill="rgb(248,65,21)" fg:x="973" fg:w="1"/><text x="77.6565%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.4861%" y="661" width="0.0796%" height="15" fill="rgb(222,5,31)" fg:x="974" fg:w="1"/><text x="77.7361%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.4861%" y="645" width="0.0796%" height="15" fill="rgb(241,16,30)" fg:x="974" fg:w="1"/><text x="77.7361%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.4861%" y="629" width="0.0796%" height="15" fill="rgb(215,86,30)" fg:x="974" fg:w="1"/><text x="77.7361%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.4861%" y="613" width="0.0796%" height="15" fill="rgb(235,26,44)" fg:x="974" fg:w="1"/><text x="77.7361%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.4861%" y="597" width="0.0796%" height="15" fill="rgb(228,147,14)" fg:x="974" fg:w="1"/><text x="77.7361%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.4861%" y="581" width="0.0796%" height="15" fill="rgb(253,38,50)" fg:x="974" fg:w="1"/><text x="77.7361%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.4861%" y="565" width="0.0796%" height="15" fill="rgb(251,151,16)" fg:x="974" fg:w="1"/><text x="77.7361%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.5656%" y="645" width="0.0796%" height="15" fill="rgb(224,64,19)" fg:x="975" fg:w="1"/><text x="77.8156%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.5656%" y="629" width="0.0796%" height="15" fill="rgb(235,214,47)" fg:x="975" fg:w="1"/><text x="77.8156%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.5656%" y="613" width="0.0796%" height="15" fill="rgb(218,15,19)" fg:x="975" fg:w="1"/><text x="77.8156%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5656%" y="597" width="0.0796%" height="15" fill="rgb(247,209,3)" fg:x="975" fg:w="1"/><text x="77.8156%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.6452%" y="629" width="0.0796%" height="15" fill="rgb(217,29,2)" fg:x="976" fg:w="1"/><text x="77.8952%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.6452%" y="613" width="0.0796%" height="15" fill="rgb(234,9,9)" fg:x="976" fg:w="1"/><text x="77.8952%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="77.2474%" y="709" width="0.5569%" height="15" fill="rgb(207,43,14)" fg:x="971" fg:w="7"/><text x="77.4974%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="77.4065%" y="693" width="0.3978%" height="15" fill="rgb(216,219,36)" fg:x="973" fg:w="5"/><text x="77.6565%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="77.4861%" y="677" width="0.3182%" height="15" fill="rgb(238,12,26)" fg:x="974" fg:w="4"/><text x="77.7361%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="77.5656%" y="661" width="0.2387%" height="15" fill="rgb(226,67,30)" fg:x="975" fg:w="3"/><text x="77.8156%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="77.6452%" y="645" width="0.1591%" height="15" fill="rgb(229,154,7)" fg:x="976" fg:w="2"/><text x="77.8952%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.7247%" y="629" width="0.0796%" height="15" fill="rgb(249,90,18)" fg:x="977" fg:w="1"/><text x="77.9747%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.7247%" y="613" width="0.0796%" height="15" fill="rgb(223,53,15)" fg:x="977" fg:w="1"/><text x="77.9747%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="76.7701%" y="725" width="1.1933%" height="15" fill="rgb(253,86,38)" fg:x="965" fg:w="15"/><text x="77.0201%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.8043%" y="709" width="0.1591%" height="15" fill="rgb(222,198,9)" fg:x="978" fg:w="2"/><text x="78.0543%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.8839%" y="693" width="0.0796%" height="15" fill="rgb(240,146,25)" fg:x="979" fg:w="1"/><text x="78.1339%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.8839%" y="677" width="0.0796%" height="15" fill="rgb(225,38,10)" fg:x="979" fg:w="1"/><text x="78.1339%" y="687.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.43%)</title><rect x="76.6110%" y="741" width="1.4320%" height="15" fill="rgb(246,93,4)" fg:x="963" fg:w="18"/><text x="76.8610%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.9634%" y="725" width="0.0796%" height="15" fill="rgb(222,55,18)" fg:x="980" fg:w="1"/><text x="78.2134%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.9634%" y="709" width="0.0796%" height="15" fill="rgb(233,137,48)" fg:x="980" fg:w="1"/><text x="78.2134%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.9634%" y="693" width="0.0796%" height="15" fill="rgb(214,8,54)" fg:x="980" fg:w="1"/><text x="78.2134%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.9634%" y="677" width="0.0796%" height="15" fill="rgb(206,75,4)" fg:x="980" fg:w="1"/><text x="78.2134%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.9634%" y="661" width="0.0796%" height="15" fill="rgb(238,171,14)" fg:x="980" fg:w="1"/><text x="78.2134%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.9634%" y="645" width="0.0796%" height="15" fill="rgb(233,70,41)" fg:x="980" fg:w="1"/><text x="78.2134%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.0430%" y="709" width="0.0796%" height="15" fill="rgb(214,68,36)" fg:x="981" fg:w="1"/><text x="78.2930%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1225%" y="693" width="0.0796%" height="15" fill="rgb(223,29,5)" fg:x="982" fg:w="1"/><text x="78.3725%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1225%" y="677" width="0.0796%" height="15" fill="rgb(251,22,40)" fg:x="982" fg:w="1"/><text x="78.3725%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.2021%" y="677" width="0.0796%" height="15" fill="rgb(210,67,41)" fg:x="983" fg:w="1"/><text x="78.4521%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2021%" y="661" width="0.0796%" height="15" fill="rgb(225,177,31)" fg:x="983" fg:w="1"/><text x="78.4521%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="78.2816%" y="661" width="0.0796%" height="15" fill="rgb(221,229,11)" fg:x="984" fg:w="1"/><text x="78.5316%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.2816%" y="645" width="0.0796%" height="15" fill="rgb(247,172,52)" fg:x="984" fg:w="1"/><text x="78.5316%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.2816%" y="629" width="0.0796%" height="15" fill="rgb(212,73,19)" fg:x="984" fg:w="1"/><text x="78.5316%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2816%" y="613" width="0.0796%" height="15" fill="rgb(244,7,46)" fg:x="984" fg:w="1"/><text x="78.5316%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.0430%" y="741" width="0.3978%" height="15" fill="rgb(230,113,20)" fg:x="981" fg:w="5"/><text x="78.2930%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="78.0430%" y="725" width="0.3978%" height="15" fill="rgb(209,97,30)" fg:x="981" fg:w="5"/><text x="78.2930%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="78.1225%" y="709" width="0.3182%" height="15" fill="rgb(243,89,12)" fg:x="982" fg:w="4"/><text x="78.3725%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="78.2021%" y="693" width="0.2387%" height="15" fill="rgb(228,32,19)" fg:x="983" fg:w="3"/><text x="78.4521%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.2816%" y="677" width="0.1591%" height="15" fill="rgb(248,25,17)" fg:x="984" fg:w="2"/><text x="78.5316%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.3612%" y="661" width="0.0796%" height="15" fill="rgb(232,161,29)" fg:x="985" fg:w="1"/><text x="78.6112%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3612%" y="645" width="0.0796%" height="15" fill="rgb(251,192,11)" fg:x="985" fg:w="1"/><text x="78.6112%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.4407%" y="693" width="0.0796%" height="15" fill="rgb(240,47,32)" fg:x="986" fg:w="1"/><text x="78.6907%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="78.5203%" y="677" width="0.1591%" height="15" fill="rgb(250,16,45)" fg:x="987" fg:w="2"/><text x="78.7703%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="78.5203%" y="661" width="0.1591%" height="15" fill="rgb(227,217,42)" fg:x="987" fg:w="2"/><text x="78.7703%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="78.9181%" y="645" width="0.1591%" height="15" fill="rgb(206,82,54)" fg:x="992" fg:w="2"/><text x="79.1681%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="79.0772%" y="645" width="0.0796%" height="15" fill="rgb(243,145,25)" fg:x="994" fg:w="1"/><text x="79.3272%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.0772%" y="629" width="0.0796%" height="15" fill="rgb(207,166,24)" fg:x="994" fg:w="1"/><text x="79.3272%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.0772%" y="613" width="0.0796%" height="15" fill="rgb(215,191,44)" fg:x="994" fg:w="1"/><text x="79.3272%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0772%" y="597" width="0.0796%" height="15" fill="rgb(234,218,51)" fg:x="994" fg:w="1"/><text x="79.3272%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.2363%" y="629" width="0.0796%" height="15" fill="rgb(245,133,21)" fg:x="996" fg:w="1"/><text x="79.4863%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2363%" y="613" width="0.0796%" height="15" fill="rgb(230,136,45)" fg:x="996" fg:w="1"/><text x="79.4863%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="78.4407%" y="725" width="1.0342%" height="15" fill="rgb(247,63,43)" fg:x="986" fg:w="13"/><text x="78.6907%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.03%)</title><rect x="78.4407%" y="709" width="1.0342%" height="15" fill="rgb(254,223,31)" fg:x="986" fg:w="13"/><text x="78.6907%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="78.5203%" y="693" width="0.9547%" height="15" fill="rgb(236,185,0)" fg:x="987" fg:w="12"/><text x="78.7703%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="78.6794%" y="677" width="0.7955%" height="15" fill="rgb(231,139,46)" fg:x="989" fg:w="10"/><text x="78.9294%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="78.9181%" y="661" width="0.5569%" height="15" fill="rgb(236,147,31)" fg:x="992" fg:w="7"/><text x="79.1681%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.1567%" y="645" width="0.3182%" height="15" fill="rgb(225,222,22)" fg:x="995" fg:w="4"/><text x="79.4067%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.3158%" y="629" width="0.1591%" height="15" fill="rgb(225,193,14)" fg:x="997" fg:w="2"/><text x="79.5658%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3954%" y="613" width="0.0796%" height="15" fill="rgb(253,193,46)" fg:x="998" fg:w="1"/><text x="79.6454%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.5545%" y="693" width="0.0796%" height="15" fill="rgb(218,187,39)" fg:x="1000" fg:w="1"/><text x="79.8045%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.6340%" y="693" width="0.1591%" height="15" fill="rgb(227,162,48)" fg:x="1001" fg:w="2"/><text x="79.8840%" y="703.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="79.7932%" y="693" width="0.0796%" height="15" fill="rgb(222,25,5)" fg:x="1003" fg:w="1"/><text x="80.0432%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="79.8727%" y="693" width="0.2387%" height="15" fill="rgb(211,205,16)" fg:x="1004" fg:w="3"/><text x="80.1227%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="79.9523%" y="677" width="0.1591%" height="15" fill="rgb(244,191,2)" fg:x="1005" fg:w="2"/><text x="80.2023%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.0318%" y="661" width="0.0796%" height="15" fill="rgb(248,159,12)" fg:x="1006" fg:w="1"/><text x="80.2818%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="80.1909%" y="677" width="0.2387%" height="15" fill="rgb(235,204,17)" fg:x="1008" fg:w="3"/><text x="80.4409%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="80.1909%" y="661" width="0.2387%" height="15" fill="rgb(240,21,27)" fg:x="1008" fg:w="3"/><text x="80.4409%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.2705%" y="645" width="0.1591%" height="15" fill="rgb(224,170,31)" fg:x="1009" fg:w="2"/><text x="80.5205%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="80.4296%" y="613" width="0.0796%" height="15" fill="rgb(223,145,32)" fg:x="1011" fg:w="1"/><text x="80.6796%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="80.4296%" y="645" width="0.2387%" height="15" fill="rgb(243,100,5)" fg:x="1011" fg:w="3"/><text x="80.6796%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="80.4296%" y="629" width="0.2387%" height="15" fill="rgb(242,131,51)" fg:x="1011" fg:w="3"/><text x="80.6796%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.5091%" y="613" width="0.1591%" height="15" fill="rgb(223,156,46)" fg:x="1012" fg:w="2"/><text x="80.7591%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.5887%" y="597" width="0.0796%" height="15" fill="rgb(215,10,40)" fg:x="1013" fg:w="1"/><text x="80.8387%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="80.9865%" y="613" width="0.3978%" height="15" fill="rgb(233,155,0)" fg:x="1018" fg:w="5"/><text x="81.2365%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="80.9865%" y="597" width="0.3978%" height="15" fill="rgb(247,78,6)" fg:x="1018" fg:w="5"/><text x="81.2365%" y="607.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="81.0660%" y="581" width="0.3182%" height="15" fill="rgb(237,217,21)" fg:x="1019" fg:w="4"/><text x="81.3160%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.3842%" y="597" width="0.0796%" height="15" fill="rgb(212,1,21)" fg:x="1023" fg:w="1"/><text x="81.6342%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (32 samples, 2.55%)</title><rect x="79.4749%" y="725" width="2.5457%" height="15" fill="rgb(213,7,14)" fg:x="999" fg:w="32"/><text x="79.7249%" y="735.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 2.55%)</title><rect x="79.4749%" y="709" width="2.5457%" height="15" fill="rgb(225,84,14)" fg:x="999" fg:w="32"/><text x="79.7249%" y="719.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.91%)</title><rect x="80.1114%" y="693" width="1.9093%" height="15" fill="rgb(239,216,39)" fg:x="1007" fg:w="24"/><text x="80.3614%" y="703.50">s..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (20 samples, 1.59%)</title><rect x="80.4296%" y="677" width="1.5911%" height="15" fill="rgb(253,29,23)" fg:x="1011" fg:w="20"/><text x="80.6796%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.59%)</title><rect x="80.4296%" y="661" width="1.5911%" height="15" fill="rgb(220,167,50)" fg:x="1011" fg:w="20"/><text x="80.6796%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.35%)</title><rect x="80.6683%" y="645" width="1.3524%" height="15" fill="rgb(232,141,1)" fg:x="1014" fg:w="17"/><text x="80.9183%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.11%)</title><rect x="80.9069%" y="629" width="1.1138%" height="15" fill="rgb(222,210,1)" fg:x="1017" fg:w="14"/><text x="81.1569%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="81.3842%" y="613" width="0.6364%" height="15" fill="rgb(219,84,10)" fg:x="1023" fg:w="8"/><text x="81.6342%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="81.4638%" y="597" width="0.5569%" height="15" fill="rgb(245,188,6)" fg:x="1024" fg:w="7"/><text x="81.7138%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="81.6229%" y="581" width="0.3978%" height="15" fill="rgb(252,139,39)" fg:x="1026" fg:w="5"/><text x="81.8729%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="81.7820%" y="565" width="0.2387%" height="15" fill="rgb(218,42,26)" fg:x="1028" fg:w="3"/><text x="82.0320%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.9411%" y="549" width="0.0796%" height="15" fill="rgb(237,226,51)" fg:x="1030" fg:w="1"/><text x="82.1911%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="82.2593%" y="581" width="0.0796%" height="15" fill="rgb(246,15,17)" fg:x="1034" fg:w="1"/><text x="82.5093%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="82.2593%" y="565" width="0.0796%" height="15" fill="rgb(228,170,42)" fg:x="1034" fg:w="1"/><text x="82.5093%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.4980%" y="469" width="0.0796%" height="15" fill="rgb(248,118,53)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="82.4980%" y="453" width="0.0796%" height="15" fill="rgb(207,30,10)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="82.4980%" y="501" width="0.1591%" height="15" fill="rgb(217,104,38)" fg:x="1037" fg:w="2"/><text x="82.7480%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="82.4980%" y="485" width="0.1591%" height="15" fill="rgb(211,165,26)" fg:x="1037" fg:w="2"/><text x="82.7480%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5776%" y="469" width="0.0796%" height="15" fill="rgb(247,38,9)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5776%" y="453" width="0.0796%" height="15" fill="rgb(218,187,8)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5776%" y="437" width="0.0796%" height="15" fill="rgb(247,94,28)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="82.3389%" y="565" width="0.3978%" height="15" fill="rgb(218,173,30)" fg:x="1035" fg:w="5"/><text x="82.5889%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="82.4185%" y="549" width="0.3182%" height="15" fill="rgb(245,45,36)" fg:x="1036" fg:w="4"/><text x="82.6685%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="82.4185%" y="533" width="0.3182%" height="15" fill="rgb(221,172,44)" fg:x="1036" fg:w="4"/><text x="82.6685%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="82.4185%" y="517" width="0.3182%" height="15" fill="rgb(222,45,12)" fg:x="1036" fg:w="4"/><text x="82.6685%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6571%" y="501" width="0.0796%" height="15" fill="rgb(250,10,22)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.7367%" y="565" width="0.0796%" height="15" fill="rgb(239,27,0)" fg:x="1040" fg:w="1"/><text x="82.9867%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="82.2593%" y="629" width="0.6364%" height="15" fill="rgb(223,118,22)" fg:x="1034" fg:w="8"/><text x="82.5093%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="82.2593%" y="613" width="0.6364%" height="15" fill="rgb(251,81,25)" fg:x="1034" fg:w="8"/><text x="82.5093%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="82.2593%" y="597" width="0.6364%" height="15" fill="rgb(237,225,53)" fg:x="1034" fg:w="8"/><text x="82.5093%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="82.3389%" y="581" width="0.5569%" height="15" fill="rgb(237,186,51)" fg:x="1035" fg:w="7"/><text x="82.5889%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8162%" y="565" width="0.0796%" height="15" fill="rgb(247,209,11)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8162%" y="549" width="0.0796%" height="15" fill="rgb(223,109,27)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8162%" y="533" width="0.0796%" height="15" fill="rgb(246,181,13)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="82.9753%" y="613" width="0.0796%" height="15" fill="rgb(234,57,44)" fg:x="1043" fg:w="1"/><text x="83.2253%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="82.8958%" y="629" width="0.2387%" height="15" fill="rgb(211,227,50)" fg:x="1042" fg:w="3"/><text x="83.1458%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0549%" y="613" width="0.0796%" height="15" fill="rgb(254,57,34)" fg:x="1044" fg:w="1"/><text x="83.3049%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.03%)</title><rect x="82.1798%" y="661" width="1.0342%" height="15" fill="rgb(227,212,26)" fg:x="1033" fg:w="13"/><text x="82.4298%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.03%)</title><rect x="82.1798%" y="645" width="1.0342%" height="15" fill="rgb(244,169,44)" fg:x="1033" fg:w="13"/><text x="82.4298%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1344%" y="629" width="0.0796%" height="15" fill="rgb(236,135,50)" fg:x="1045" fg:w="1"/><text x="83.3844%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1344%" y="613" width="0.0796%" height="15" fill="rgb(241,89,30)" fg:x="1045" fg:w="1"/><text x="83.3844%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1344%" y="597" width="0.0796%" height="15" fill="rgb(206,113,34)" fg:x="1045" fg:w="1"/><text x="83.3844%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (17 samples, 1.35%)</title><rect x="82.0207%" y="725" width="1.3524%" height="15" fill="rgb(218,104,52)" fg:x="1031" fg:w="17"/><text x="82.2707%" y="735.50"></text></g><g><title>serde_json::de::from_trait (17 samples, 1.35%)</title><rect x="82.0207%" y="709" width="1.3524%" height="15" fill="rgb(223,82,32)" fg:x="1031" fg:w="17"/><text x="82.2707%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.27%)</title><rect x="82.1002%" y="693" width="1.2729%" height="15" fill="rgb(249,219,30)" fg:x="1032" fg:w="16"/><text x="82.3502%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.27%)</title><rect x="82.1002%" y="677" width="1.2729%" height="15" fill="rgb(233,141,21)" fg:x="1032" fg:w="16"/><text x="82.3502%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.2140%" y="661" width="0.1591%" height="15" fill="rgb(252,87,44)" fg:x="1046" fg:w="2"/><text x="83.4640%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2936%" y="645" width="0.0796%" height="15" fill="rgb(229,48,33)" fg:x="1047" fg:w="1"/><text x="83.5436%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.2936%" y="629" width="0.0796%" height="15" fill="rgb(229,23,22)" fg:x="1047" fg:w="1"/><text x="83.5436%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="83.4527%" y="693" width="0.3182%" height="15" fill="rgb(244,116,16)" fg:x="1049" fg:w="4"/><text x="83.7027%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="83.6913%" y="677" width="0.0796%" height="15" fill="rgb(247,45,10)" fg:x="1052" fg:w="1"/><text x="83.9413%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="83.6913%" y="661" width="0.0796%" height="15" fill="rgb(228,60,29)" fg:x="1052" fg:w="1"/><text x="83.9413%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="83.6913%" y="645" width="0.0796%" height="15" fill="rgb(205,129,15)" fg:x="1052" fg:w="1"/><text x="83.9413%" y="655.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (107 samples, 8.51%)</title><rect x="75.3381%" y="773" width="8.5123%" height="15" fill="rgb(206,229,4)" fg:x="947" fg:w="107"/><text x="75.5881%" y="783.50">engine::inte..</text></g><g><title>engine::session::SavesEntities::check_for_changes (107 samples, 8.51%)</title><rect x="75.3381%" y="757" width="8.5123%" height="15" fill="rgb(249,191,30)" fg:x="947" fg:w="107"/><text x="75.5881%" y="767.50">engine::sess..</text></g><g><title>kernel::compare::any_entity_changes (68 samples, 5.41%)</title><rect x="78.4407%" y="741" width="5.4097%" height="15" fill="rgb(250,84,54)" fg:x="986" fg:w="68"/><text x="78.6907%" y="751.50">kernel:..</text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="83.3731%" y="725" width="0.4773%" height="15" fill="rgb(207,25,53)" fg:x="1048" fg:w="6"/><text x="83.6231%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="83.3731%" y="709" width="0.4773%" height="15" fill="rgb(235,40,8)" fg:x="1048" fg:w="6"/><text x="83.6231%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.7709%" y="693" width="0.0796%" height="15" fill="rgb(226,169,33)" fg:x="1053" fg:w="1"/><text x="84.0209%" y="703.50"></text></g><g><title>engine::session::Session::close (111 samples, 8.83%)</title><rect x="75.0994%" y="805" width="8.8305%" height="15" fill="rgb(238,110,8)" fg:x="944" fg:w="111"/><text x="75.3494%" y="815.50">engine::sess..</text></g><g><title>engine::session::Session::save_entity_changes (110 samples, 8.75%)</title><rect x="75.1790%" y="789" width="8.7510%" height="15" fill="rgb(251,206,12)" fg:x="945" fg:w="110"/><text x="75.4290%" y="799.50">engine::sess..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="83.8504%" y="773" width="0.0796%" height="15" fill="rgb(248,171,18)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="783.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="83.8504%" y="757" width="0.0796%" height="15" fill="rgb(213,65,46)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="767.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="83.8504%" y="741" width="0.0796%" height="15" fill="rgb(211,154,15)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="751.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="83.8504%" y="725" width="0.0796%" height="15" fill="rgb(217,75,43)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="735.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="83.8504%" y="709" width="0.0796%" height="15" fill="rgb(230,32,33)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="83.8504%" y="693" width="0.0796%" height="15" fill="rgb(221,100,16)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.9300%" y="757" width="0.0796%" height="15" fill="rgb(212,129,47)" fg:x="1055" fg:w="1"/><text x="84.1800%" y="767.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="84.0095%" y="709" width="0.0796%" height="15" fill="rgb(239,217,47)" fg:x="1056" fg:w="1"/><text x="84.2595%" y="719.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="84.0095%" y="693" width="0.0796%" height="15" fill="rgb(230,84,24)" fg:x="1056" fg:w="1"/><text x="84.2595%" y="703.50"></text></g><g><title>&lt;plugins_core::building::parser::ObliterateActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="84.0095%" y="677" width="0.0796%" height="15" fill="rgb(214,153,51)" fg:x="1056" fg:w="1"/><text x="84.2595%" y="687.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (1 samples, 0.08%)</title><rect x="84.0891%" y="661" width="0.0796%" height="15" fill="rgb(231,6,35)" fg:x="1057" fg:w="1"/><text x="84.3391%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="84.0891%" y="645" width="0.0796%" height="15" fill="rgb(229,122,30)" fg:x="1057" fg:w="1"/><text x="84.3391%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="84.0891%" y="629" width="0.0796%" height="15" fill="rgb(234,71,10)" fg:x="1057" fg:w="1"/><text x="84.3391%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1687%" y="501" width="0.0796%" height="15" fill="rgb(215,173,26)" fg:x="1058" fg:w="1"/><text x="84.4187%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1687%" y="485" width="0.0796%" height="15" fill="rgb(248,118,52)" fg:x="1058" fg:w="1"/><text x="84.4187%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1687%" y="469" width="0.0796%" height="15" fill="rgb(237,55,46)" fg:x="1058" fg:w="1"/><text x="84.4187%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1687%" y="453" width="0.0796%" height="15" fill="rgb(243,214,43)" fg:x="1058" fg:w="1"/><text x="84.4187%" y="463.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.1687%" y="549" width="0.1591%" height="15" fill="rgb(252,123,30)" fg:x="1058" fg:w="2"/><text x="84.4187%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="84.1687%" y="533" width="0.1591%" height="15" fill="rgb(215,73,39)" fg:x="1058" fg:w="2"/><text x="84.4187%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="84.1687%" y="517" width="0.1591%" height="15" fill="rgb(251,194,29)" fg:x="1058" fg:w="2"/><text x="84.4187%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2482%" y="501" width="0.0796%" height="15" fill="rgb(224,58,52)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2482%" y="485" width="0.0796%" height="15" fill="rgb(248,106,46)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2482%" y="469" width="0.0796%" height="15" fill="rgb(223,80,29)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2482%" y="453" width="0.0796%" height="15" fill="rgb(243,137,9)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.2482%" y="437" width="0.0796%" height="15" fill="rgb(235,121,28)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2482%" y="421" width="0.0796%" height="15" fill="rgb(219,121,41)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2482%" y="405" width="0.0796%" height="15" fill="rgb(251,60,6)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2482%" y="389" width="0.0796%" height="15" fill="rgb(208,12,30)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3278%" y="469" width="0.0796%" height="15" fill="rgb(207,176,36)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3278%" y="453" width="0.0796%" height="15" fill="rgb(211,188,29)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3278%" y="437" width="0.0796%" height="15" fill="rgb(220,184,37)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3278%" y="421" width="0.0796%" height="15" fill="rgb(239,87,37)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3278%" y="405" width="0.0796%" height="15" fill="rgb(232,113,44)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="415.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.3278%" y="517" width="0.1591%" height="15" fill="rgb(246,25,39)" fg:x="1060" fg:w="2"/><text x="84.5778%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="84.3278%" y="501" width="0.1591%" height="15" fill="rgb(247,30,13)" fg:x="1060" fg:w="2"/><text x="84.5778%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="84.3278%" y="485" width="0.1591%" height="15" fill="rgb(230,176,35)" fg:x="1060" fg:w="2"/><text x="84.5778%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4073%" y="469" width="0.0796%" height="15" fill="rgb(222,23,18)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4073%" y="453" width="0.0796%" height="15" fill="rgb(234,86,8)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4073%" y="437" width="0.0796%" height="15" fill="rgb(206,218,47)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4073%" y="421" width="0.0796%" height="15" fill="rgb(229,35,31)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.4073%" y="405" width="0.0796%" height="15" fill="rgb(242,81,7)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4073%" y="389" width="0.0796%" height="15" fill="rgb(231,11,35)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4073%" y="373" width="0.0796%" height="15" fill="rgb(219,218,17)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4073%" y="357" width="0.0796%" height="15" fill="rgb(221,83,32)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4073%" y="341" width="0.0796%" height="15" fill="rgb(233,49,54)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4073%" y="325" width="0.0796%" height="15" fill="rgb(206,18,51)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.4073%" y="309" width="0.0796%" height="15" fill="rgb(249,193,15)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4869%" y="469" width="0.0796%" height="15" fill="rgb(245,186,19)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4869%" y="453" width="0.0796%" height="15" fill="rgb(230,4,24)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4869%" y="437" width="0.0796%" height="15" fill="rgb(234,75,27)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4869%" y="421" width="0.0796%" height="15" fill="rgb(244,187,35)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4869%" y="405" width="0.0796%" height="15" fill="rgb(241,97,43)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4869%" y="389" width="0.0796%" height="15" fill="rgb(236,94,2)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="84.3278%" y="549" width="0.3182%" height="15" fill="rgb(231,175,7)" fg:x="1060" fg:w="4"/><text x="84.5778%" y="559.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="84.3278%" y="533" width="0.3182%" height="15" fill="rgb(236,89,47)" fg:x="1060" fg:w="4"/><text x="84.5778%" y="543.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.4869%" y="517" width="0.1591%" height="15" fill="rgb(213,191,37)" fg:x="1062" fg:w="2"/><text x="84.7369%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="84.4869%" y="501" width="0.1591%" height="15" fill="rgb(252,0,34)" fg:x="1062" fg:w="2"/><text x="84.7369%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="84.4869%" y="485" width="0.1591%" height="15" fill="rgb(208,145,44)" fg:x="1062" fg:w="2"/><text x="84.7369%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.5664%" y="469" width="0.0796%" height="15" fill="rgb(227,95,50)" fg:x="1063" fg:w="1"/><text x="84.8164%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="84.5664%" y="453" width="0.0796%" height="15" fill="rgb(222,136,24)" fg:x="1063" fg:w="1"/><text x="84.8164%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="84.6460%" y="421" width="0.0796%" height="15" fill="rgb(218,105,10)" fg:x="1064" fg:w="1"/><text x="84.8960%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="84.6460%" y="405" width="0.0796%" height="15" fill="rgb(216,65,28)" fg:x="1064" fg:w="1"/><text x="84.8960%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="84.6460%" y="389" width="0.0796%" height="15" fill="rgb(229,6,28)" fg:x="1064" fg:w="1"/><text x="84.8960%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="84.6460%" y="373" width="0.0796%" height="15" fill="rgb(222,160,42)" fg:x="1064" fg:w="1"/><text x="84.8960%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="84.6460%" y="533" width="0.2387%" height="15" fill="rgb(235,83,49)" fg:x="1064" fg:w="3"/><text x="84.8960%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="84.6460%" y="517" width="0.2387%" height="15" fill="rgb(236,86,36)" fg:x="1064" fg:w="3"/><text x="84.8960%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="84.6460%" y="501" width="0.2387%" height="15" fill="rgb(236,19,41)" fg:x="1064" fg:w="3"/><text x="84.8960%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="84.6460%" y="485" width="0.2387%" height="15" fill="rgb(217,71,31)" fg:x="1064" fg:w="3"/><text x="84.8960%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="84.6460%" y="469" width="0.2387%" height="15" fill="rgb(236,209,25)" fg:x="1064" fg:w="3"/><text x="84.8960%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="84.6460%" y="453" width="0.2387%" height="15" fill="rgb(247,104,21)" fg:x="1064" fg:w="3"/><text x="84.8960%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="84.6460%" y="437" width="0.2387%" height="15" fill="rgb(243,80,38)" fg:x="1064" fg:w="3"/><text x="84.8960%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.7255%" y="421" width="0.1591%" height="15" fill="rgb(232,109,38)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="84.7255%" y="405" width="0.1591%" height="15" fill="rgb(212,177,53)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="84.7255%" y="389" width="0.1591%" height="15" fill="rgb(227,30,34)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.7255%" y="373" width="0.1591%" height="15" fill="rgb(205,175,25)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="84.7255%" y="357" width="0.1591%" height="15" fill="rgb(249,39,54)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="84.8051%" y="341" width="0.0796%" height="15" fill="rgb(215,54,37)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8051%" y="325" width="0.0796%" height="15" fill="rgb(205,60,46)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="84.8051%" y="309" width="0.0796%" height="15" fill="rgb(238,89,29)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="84.8051%" y="293" width="0.0796%" height="15" fill="rgb(212,48,10)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8051%" y="277" width="0.0796%" height="15" fill="rgb(237,186,28)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="84.8051%" y="261" width="0.0796%" height="15" fill="rgb(237,204,4)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.8051%" y="245" width="0.0796%" height="15" fill="rgb(237,15,47)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.8051%" y="229" width="0.0796%" height="15" fill="rgb(244,110,25)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8051%" y="213" width="0.0796%" height="15" fill="rgb(241,12,16)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.8846%" y="485" width="0.0796%" height="15" fill="rgb(235,25,9)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8846%" y="469" width="0.0796%" height="15" fill="rgb(245,159,19)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9642%" y="485" width="0.0796%" height="15" fill="rgb(236,63,32)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.0438%" y="325" width="0.0796%" height="15" fill="rgb(235,32,52)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0438%" y="309" width="0.0796%" height="15" fill="rgb(209,176,21)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.0438%" y="405" width="0.1591%" height="15" fill="rgb(205,90,42)" fg:x="1069" fg:w="2"/><text x="85.2938%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.0438%" y="389" width="0.1591%" height="15" fill="rgb(213,132,16)" fg:x="1069" fg:w="2"/><text x="85.2938%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.0438%" y="373" width="0.1591%" height="15" fill="rgb(232,11,22)" fg:x="1069" fg:w="2"/><text x="85.2938%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.0438%" y="357" width="0.1591%" height="15" fill="rgb(248,167,41)" fg:x="1069" fg:w="2"/><text x="85.2938%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.0438%" y="341" width="0.1591%" height="15" fill="rgb(209,127,6)" fg:x="1069" fg:w="2"/><text x="85.2938%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.1233%" y="325" width="0.0796%" height="15" fill="rgb(246,210,34)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (14 samples, 1.11%)</title><rect x="84.1687%" y="597" width="1.1138%" height="15" fill="rgb(238,165,13)" fg:x="1058" fg:w="14"/><text x="84.4187%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.11%)</title><rect x="84.1687%" y="581" width="1.1138%" height="15" fill="rgb(233,98,15)" fg:x="1058" fg:w="14"/><text x="84.4187%" y="591.50"></text></g><g><title>engine::internal::Entities::add_persisted (14 samples, 1.11%)</title><rect x="84.1687%" y="565" width="1.1138%" height="15" fill="rgb(215,215,51)" fg:x="1058" fg:w="14"/><text x="84.4187%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.64%)</title><rect x="84.6460%" y="549" width="0.6364%" height="15" fill="rgb(217,161,25)" fg:x="1064" fg:w="8"/><text x="84.8960%" y="559.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="84.8846%" y="533" width="0.3978%" height="15" fill="rgb(217,167,48)" fg:x="1067" fg:w="5"/><text x="85.1346%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="84.8846%" y="517" width="0.3978%" height="15" fill="rgb(205,163,34)" fg:x="1067" fg:w="5"/><text x="85.1346%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="84.8846%" y="501" width="0.3978%" height="15" fill="rgb(241,197,31)" fg:x="1067" fg:w="5"/><text x="85.1346%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="85.0438%" y="485" width="0.2387%" height="15" fill="rgb(225,123,11)" fg:x="1069" fg:w="3"/><text x="85.2938%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="85.0438%" y="469" width="0.2387%" height="15" fill="rgb(217,4,20)" fg:x="1069" fg:w="3"/><text x="85.2938%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="85.0438%" y="453" width="0.2387%" height="15" fill="rgb(215,55,9)" fg:x="1069" fg:w="3"/><text x="85.2938%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="85.0438%" y="437" width="0.2387%" height="15" fill="rgb(218,165,5)" fg:x="1069" fg:w="3"/><text x="85.2938%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="85.0438%" y="421" width="0.2387%" height="15" fill="rgb(222,175,15)" fg:x="1069" fg:w="3"/><text x="85.2938%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.2029%" y="405" width="0.0796%" height="15" fill="rgb(223,85,34)" fg:x="1071" fg:w="1"/><text x="85.4529%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.2029%" y="389" width="0.0796%" height="15" fill="rgb(234,228,29)" fg:x="1071" fg:w="1"/><text x="85.4529%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.2029%" y="373" width="0.0796%" height="15" fill="rgb(239,7,28)" fg:x="1071" fg:w="1"/><text x="85.4529%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2029%" y="357" width="0.0796%" height="15" fill="rgb(252,222,53)" fg:x="1071" fg:w="1"/><text x="85.4529%" y="367.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (15 samples, 1.19%)</title><rect x="84.1687%" y="661" width="1.1933%" height="15" fill="rgb(232,146,44)" fg:x="1058" fg:w="15"/><text x="84.4187%" y="671.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (15 samples, 1.19%)</title><rect x="84.1687%" y="645" width="1.1933%" height="15" fill="rgb(243,223,53)" fg:x="1058" fg:w="15"/><text x="84.4187%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.19%)</title><rect x="84.1687%" y="629" width="1.1933%" height="15" fill="rgb(219,128,25)" fg:x="1058" fg:w="15"/><text x="84.4187%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (15 samples, 1.19%)</title><rect x="84.1687%" y="613" width="1.1933%" height="15" fill="rgb(223,56,32)" fg:x="1058" fg:w="15"/><text x="84.4187%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.2824%" y="597" width="0.0796%" height="15" fill="rgb(237,41,3)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.2824%" y="581" width="0.0796%" height="15" fill="rgb(235,138,9)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.3620%" y="629" width="0.0796%" height="15" fill="rgb(214,131,10)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.5211%" y="549" width="0.0796%" height="15" fill="rgb(229,89,7)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="85.5211%" y="533" width="0.0796%" height="15" fill="rgb(240,24,42)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.6006%" y="549" width="0.0796%" height="15" fill="rgb(243,188,54)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="85.5211%" y="565" width="0.2387%" height="15" fill="rgb(246,92,22)" fg:x="1075" fg:w="3"/><text x="85.7711%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="85.6802%" y="549" width="0.0796%" height="15" fill="rgb(211,176,51)" fg:x="1077" fg:w="1"/><text x="85.9302%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7597%" y="565" width="0.0796%" height="15" fill="rgb(246,207,34)" fg:x="1078" fg:w="1"/><text x="86.0097%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="85.4415%" y="597" width="0.5569%" height="15" fill="rgb(239,95,2)" fg:x="1074" fg:w="7"/><text x="85.6915%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="85.5211%" y="581" width="0.4773%" height="15" fill="rgb(211,124,25)" fg:x="1075" fg:w="6"/><text x="85.7711%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="85.8393%" y="565" width="0.1591%" height="15" fill="rgb(231,221,19)" fg:x="1079" fg:w="2"/><text x="86.0893%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.9189%" y="549" width="0.0796%" height="15" fill="rgb(239,183,19)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (9 samples, 0.72%)</title><rect x="85.4415%" y="629" width="0.7160%" height="15" fill="rgb(221,130,29)" fg:x="1074" fg:w="9"/><text x="85.6915%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="85.4415%" y="613" width="0.7160%" height="15" fill="rgb(206,130,36)" fg:x="1074" fg:w="9"/><text x="85.6915%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="85.9984%" y="597" width="0.1591%" height="15" fill="rgb(215,70,19)" fg:x="1081" fg:w="2"/><text x="86.2484%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.1575%" y="597" width="0.0796%" height="15" fill="rgb(244,16,43)" fg:x="1083" fg:w="1"/><text x="86.4075%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1575%" y="581" width="0.0796%" height="15" fill="rgb(222,115,32)" fg:x="1083" fg:w="1"/><text x="86.4075%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.2371%" y="565" width="0.0796%" height="15" fill="rgb(247,48,25)" fg:x="1084" fg:w="1"/><text x="86.4871%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.3166%" y="565" width="0.0796%" height="15" fill="rgb(226,180,51)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="86.3166%" y="549" width="0.0796%" height="15" fill="rgb(217,142,42)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.24%)</title><rect x="86.2371%" y="597" width="0.2387%" height="15" fill="rgb(220,178,3)" fg:x="1084" fg:w="3"/><text x="86.4871%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="86.2371%" y="581" width="0.2387%" height="15" fill="rgb(217,221,4)" fg:x="1084" fg:w="3"/><text x="86.4871%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3962%" y="565" width="0.0796%" height="15" fill="rgb(237,63,43)" fg:x="1086" fg:w="1"/><text x="86.6462%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="86.3962%" y="549" width="0.0796%" height="15" fill="rgb(220,57,8)" fg:x="1086" fg:w="1"/><text x="86.6462%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3962%" y="533" width="0.0796%" height="15" fill="rgb(254,186,27)" fg:x="1086" fg:w="1"/><text x="86.6462%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="86.6348%" y="453" width="0.0796%" height="15" fill="rgb(251,57,28)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="463.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="86.6348%" y="437" width="0.0796%" height="15" fill="rgb(215,228,0)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6348%" y="421" width="0.0796%" height="15" fill="rgb(237,218,39)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6348%" y="405" width="0.0796%" height="15" fill="rgb(207,2,54)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6348%" y="389" width="0.0796%" height="15" fill="rgb(232,76,50)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.6348%" y="373" width="0.0796%" height="15" fill="rgb(211,85,31)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.6348%" y="357" width="0.0796%" height="15" fill="rgb(223,210,27)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.6348%" y="341" width="0.0796%" height="15" fill="rgb(254,36,8)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6348%" y="325" width="0.0796%" height="15" fill="rgb(213,4,25)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6348%" y="309" width="0.0796%" height="15" fill="rgb(224,2,39)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.6348%" y="293" width="0.0796%" height="15" fill="rgb(208,8,39)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.6348%" y="277" width="0.0796%" height="15" fill="rgb(216,226,3)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.6348%" y="261" width="0.0796%" height="15" fill="rgb(249,139,31)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.6348%" y="245" width="0.0796%" height="15" fill="rgb(242,170,35)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6348%" y="229" width="0.0796%" height="15" fill="rgb(238,14,9)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="86.6348%" y="517" width="0.1591%" height="15" fill="rgb(251,81,46)" fg:x="1089" fg:w="2"/><text x="86.8848%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="86.6348%" y="501" width="0.1591%" height="15" fill="rgb(230,23,4)" fg:x="1089" fg:w="2"/><text x="86.8848%" y="511.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="86.6348%" y="485" width="0.1591%" height="15" fill="rgb(211,85,25)" fg:x="1089" fg:w="2"/><text x="86.8848%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="86.6348%" y="469" width="0.1591%" height="15" fill="rgb(252,23,31)" fg:x="1089" fg:w="2"/><text x="86.8848%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.7144%" y="453" width="0.0796%" height="15" fill="rgb(234,163,38)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.7144%" y="437" width="0.0796%" height="15" fill="rgb(210,190,50)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.7144%" y="421" width="0.0796%" height="15" fill="rgb(228,158,3)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.7144%" y="405" width="0.0796%" height="15" fill="rgb(216,130,0)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.7144%" y="389" width="0.0796%" height="15" fill="rgb(224,184,10)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.7144%" y="373" width="0.0796%" height="15" fill="rgb(214,202,18)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.7144%" y="357" width="0.0796%" height="15" fill="rgb(213,229,54)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.7144%" y="341" width="0.0796%" height="15" fill="rgb(246,120,0)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.7144%" y="325" width="0.0796%" height="15" fill="rgb(237,6,15)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.7144%" y="309" width="0.0796%" height="15" fill="rgb(252,156,15)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="86.7144%" y="293" width="0.0796%" height="15" fill="rgb(249,78,18)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="86.7144%" y="277" width="0.0796%" height="15" fill="rgb(230,223,44)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="86.7144%" y="261" width="0.0796%" height="15" fill="rgb(230,222,32)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="86.7144%" y="245" width="0.0796%" height="15" fill="rgb(247,54,6)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="86.7144%" y="229" width="0.0796%" height="15" fill="rgb(247,115,45)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="86.7144%" y="213" width="0.0796%" height="15" fill="rgb(213,203,37)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.7144%" y="197" width="0.0796%" height="15" fill="rgb(248,188,18)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="86.7144%" y="181" width="0.0796%" height="15" fill="rgb(206,80,8)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.7144%" y="165" width="0.0796%" height="15" fill="rgb(245,217,31)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="86.7144%" y="149" width="0.0796%" height="15" fill="rgb(220,193,15)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="86.7144%" y="133" width="0.0796%" height="15" fill="rgb(226,7,19)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7940%" y="501" width="0.0796%" height="15" fill="rgb(222,145,31)" fg:x="1091" fg:w="1"/><text x="87.0440%" y="511.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.0326%" y="405" width="0.0796%" height="15" fill="rgb(241,193,36)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="415.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="87.0326%" y="389" width="0.0796%" height="15" fill="rgb(225,123,33)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="399.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.0326%" y="373" width="0.0796%" height="15" fill="rgb(246,136,38)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.0326%" y="357" width="0.0796%" height="15" fill="rgb(243,56,24)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0326%" y="341" width="0.0796%" height="15" fill="rgb(215,147,2)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="351.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.1122%" y="373" width="0.0796%" height="15" fill="rgb(209,155,27)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="383.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="87.1122%" y="357" width="0.0796%" height="15" fill="rgb(222,177,11)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="367.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.1122%" y="341" width="0.0796%" height="15" fill="rgb(212,227,15)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1122%" y="325" width="0.0796%" height="15" fill="rgb(214,138,20)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1122%" y="309" width="0.0796%" height="15" fill="rgb(221,170,31)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1122%" y="293" width="0.0796%" height="15" fill="rgb(253,207,5)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1122%" y="277" width="0.0796%" height="15" fill="rgb(212,64,37)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="287.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.1122%" y="261" width="0.0796%" height="15" fill="rgb(208,113,51)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1122%" y="245" width="0.0796%" height="15" fill="rgb(237,15,5)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1122%" y="229" width="0.0796%" height="15" fill="rgb(238,33,18)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1122%" y="213" width="0.0796%" height="15" fill="rgb(253,206,50)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="87.1122%" y="405" width="0.1591%" height="15" fill="rgb(242,158,43)" fg:x="1095" fg:w="2"/><text x="87.3622%" y="415.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="87.1122%" y="389" width="0.1591%" height="15" fill="rgb(213,125,27)" fg:x="1095" fg:w="2"/><text x="87.3622%" y="399.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.1917%" y="373" width="0.0796%" height="15" fill="rgb(233,161,31)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1917%" y="357" width="0.0796%" height="15" fill="rgb(218,135,6)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="367.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="87.2713%" y="405" width="0.0796%" height="15" fill="rgb(222,73,53)" fg:x="1097" fg:w="1"/><text x="87.5213%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.2713%" y="389" width="0.0796%" height="15" fill="rgb(229,66,53)" fg:x="1097" fg:w="1"/><text x="87.5213%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="87.3508%" y="389" width="0.0796%" height="15" fill="rgb(208,128,19)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="87.3508%" y="373" width="0.0796%" height="15" fill="rgb(235,70,27)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3508%" y="357" width="0.0796%" height="15" fill="rgb(241,130,30)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3508%" y="341" width="0.0796%" height="15" fill="rgb(222,57,48)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.3508%" y="325" width="0.0796%" height="15" fill="rgb(225,204,29)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3508%" y="309" width="0.0796%" height="15" fill="rgb(240,196,35)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.3508%" y="293" width="0.0796%" height="15" fill="rgb(215,150,16)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3508%" y="277" width="0.0796%" height="15" fill="rgb(209,170,13)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.3508%" y="261" width="0.0796%" height="15" fill="rgb(235,75,31)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="87.3508%" y="245" width="0.0796%" height="15" fill="rgb(252,1,47)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3508%" y="229" width="0.0796%" height="15" fill="rgb(241,2,36)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.3508%" y="213" width="0.0796%" height="15" fill="rgb(236,191,4)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="87.3508%" y="197" width="0.0796%" height="15" fill="rgb(212,65,35)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3508%" y="181" width="0.0796%" height="15" fill="rgb(209,49,33)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.3508%" y="165" width="0.0796%" height="15" fill="rgb(208,36,46)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="87.3508%" y="149" width="0.0796%" height="15" fill="rgb(210,125,2)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3508%" y="133" width="0.0796%" height="15" fill="rgb(225,62,6)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.4304%" y="341" width="0.0796%" height="15" fill="rgb(210,54,27)" fg:x="1099" fg:w="1"/><text x="87.6804%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="87.4304%" y="325" width="0.0796%" height="15" fill="rgb(249,189,52)" fg:x="1099" fg:w="1"/><text x="87.6804%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.5099%" y="309" width="0.1591%" height="15" fill="rgb(225,134,40)" fg:x="1100" fg:w="2"/><text x="87.7599%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.5099%" y="293" width="0.1591%" height="15" fill="rgb(206,13,37)" fg:x="1100" fg:w="2"/><text x="87.7599%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="87.5099%" y="277" width="0.1591%" height="15" fill="rgb(232,114,28)" fg:x="1100" fg:w="2"/><text x="87.7599%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6691%" y="245" width="0.0796%" height="15" fill="rgb(253,215,8)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6691%" y="229" width="0.0796%" height="15" fill="rgb(254,64,19)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6691%" y="213" width="0.0796%" height="15" fill="rgb(242,18,46)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (10 samples, 0.80%)</title><rect x="87.0326%" y="453" width="0.7955%" height="15" fill="rgb(239,192,30)" fg:x="1094" fg:w="10"/><text x="87.2826%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.80%)</title><rect x="87.0326%" y="437" width="0.7955%" height="15" fill="rgb(232,73,14)" fg:x="1094" fg:w="10"/><text x="87.2826%" y="447.50"></text></g><g><title>engine::internal::Entities::add_persisted (10 samples, 0.80%)</title><rect x="87.0326%" y="421" width="0.7955%" height="15" fill="rgb(225,51,9)" fg:x="1094" fg:w="10"/><text x="87.2826%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="87.3508%" y="405" width="0.4773%" height="15" fill="rgb(242,217,54)" fg:x="1098" fg:w="6"/><text x="87.6008%" y="415.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="87.4304%" y="389" width="0.3978%" height="15" fill="rgb(216,93,3)" fg:x="1099" fg:w="5"/><text x="87.6804%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="87.4304%" y="373" width="0.3978%" height="15" fill="rgb(230,119,33)" fg:x="1099" fg:w="5"/><text x="87.6804%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="87.4304%" y="357" width="0.3978%" height="15" fill="rgb(238,170,27)" fg:x="1099" fg:w="5"/><text x="87.6804%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="87.5099%" y="341" width="0.3182%" height="15" fill="rgb(229,8,2)" fg:x="1100" fg:w="4"/><text x="87.7599%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="87.5099%" y="325" width="0.3182%" height="15" fill="rgb(205,214,42)" fg:x="1100" fg:w="4"/><text x="87.7599%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="87.6691%" y="309" width="0.1591%" height="15" fill="rgb(245,113,1)" fg:x="1102" fg:w="2"/><text x="87.9191%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="87.6691%" y="293" width="0.1591%" height="15" fill="rgb(252,50,2)" fg:x="1102" fg:w="2"/><text x="87.9191%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="87.6691%" y="277" width="0.1591%" height="15" fill="rgb(225,122,24)" fg:x="1102" fg:w="2"/><text x="87.9191%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="87.6691%" y="261" width="0.1591%" height="15" fill="rgb(234,129,31)" fg:x="1102" fg:w="2"/><text x="87.9191%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.7486%" y="245" width="0.0796%" height="15" fill="rgb(219,177,4)" fg:x="1103" fg:w="1"/><text x="87.9986%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.7486%" y="229" width="0.0796%" height="15" fill="rgb(225,142,27)" fg:x="1103" fg:w="1"/><text x="87.9986%" y="239.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 1.35%)</title><rect x="86.5553%" y="533" width="1.3524%" height="15" fill="rgb(205,107,51)" fg:x="1088" fg:w="17"/><text x="86.8053%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 1.11%)</title><rect x="86.7940%" y="517" width="1.1138%" height="15" fill="rgb(236,223,15)" fg:x="1091" fg:w="14"/><text x="87.0440%" y="527.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (13 samples, 1.03%)</title><rect x="86.8735%" y="501" width="1.0342%" height="15" fill="rgb(235,133,11)" fg:x="1092" fg:w="13"/><text x="87.1235%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (13 samples, 1.03%)</title><rect x="86.8735%" y="485" width="1.0342%" height="15" fill="rgb(247,172,13)" fg:x="1092" fg:w="13"/><text x="87.1235%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (13 samples, 1.03%)</title><rect x="86.8735%" y="469" width="1.0342%" height="15" fill="rgb(233,191,41)" fg:x="1092" fg:w="13"/><text x="87.1235%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.8282%" y="453" width="0.0796%" height="15" fill="rgb(250,65,16)" fg:x="1104" fg:w="1"/><text x="88.0782%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.8282%" y="437" width="0.0796%" height="15" fill="rgb(206,10,27)" fg:x="1104" fg:w="1"/><text x="88.0782%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.8282%" y="421" width="0.0796%" height="15" fill="rgb(212,96,22)" fg:x="1104" fg:w="1"/><text x="88.0782%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="87.9873%" y="501" width="0.2387%" height="15" fill="rgb(206,50,0)" fg:x="1106" fg:w="3"/><text x="88.2373%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="88.0668%" y="485" width="0.1591%" height="15" fill="rgb(249,105,52)" fg:x="1107" fg:w="2"/><text x="88.3168%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="88.0668%" y="469" width="0.1591%" height="15" fill="rgb(216,93,51)" fg:x="1107" fg:w="2"/><text x="88.3168%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="88.1464%" y="453" width="0.0796%" height="15" fill="rgb(217,172,13)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="88.1464%" y="437" width="0.0796%" height="15" fill="rgb(235,199,38)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="88.1464%" y="421" width="0.0796%" height="15" fill="rgb(221,97,33)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1464%" y="405" width="0.0796%" height="15" fill="rgb(205,156,50)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1464%" y="389" width="0.0796%" height="15" fill="rgb(215,142,19)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.1464%" y="373" width="0.0796%" height="15" fill="rgb(232,170,7)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.1464%" y="357" width="0.0796%" height="15" fill="rgb(223,50,17)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.1464%" y="341" width="0.0796%" height="15" fill="rgb(230,103,46)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1464%" y="325" width="0.0796%" height="15" fill="rgb(254,30,34)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1464%" y="309" width="0.0796%" height="15" fill="rgb(235,198,1)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.1464%" y="293" width="0.0796%" height="15" fill="rgb(217,105,47)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.1464%" y="277" width="0.0796%" height="15" fill="rgb(231,18,12)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.1464%" y="261" width="0.0796%" height="15" fill="rgb(218,196,1)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.1464%" y="245" width="0.0796%" height="15" fill="rgb(210,32,3)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1464%" y="229" width="0.0796%" height="15" fill="rgb(227,178,30)" fg:x="1108" fg:w="1"/><text x="88.3964%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.3055%" y="469" width="0.0796%" height="15" fill="rgb(231,140,27)" fg:x="1110" fg:w="1"/><text x="88.5555%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.3850%" y="469" width="0.0796%" height="15" fill="rgb(206,66,35)" fg:x="1111" fg:w="1"/><text x="88.6350%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3850%" y="453" width="0.0796%" height="15" fill="rgb(212,34,2)" fg:x="1111" fg:w="1"/><text x="88.6350%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="88.3850%" y="437" width="0.0796%" height="15" fill="rgb(207,201,33)" fg:x="1111" fg:w="1"/><text x="88.6350%" y="447.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (25 samples, 1.99%)</title><rect x="86.5553%" y="549" width="1.9889%" height="15" fill="rgb(221,135,32)" fg:x="1088" fg:w="25"/><text x="86.8053%" y="559.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="87.9077%" y="533" width="0.6364%" height="15" fill="rgb(206,77,31)" fg:x="1105" fg:w="8"/><text x="88.1577%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.56%)</title><rect x="87.9873%" y="517" width="0.5569%" height="15" fill="rgb(252,198,50)" fg:x="1106" fg:w="7"/><text x="88.2373%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="88.2259%" y="501" width="0.3182%" height="15" fill="rgb(206,79,27)" fg:x="1109" fg:w="4"/><text x="88.4759%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="88.2259%" y="485" width="0.3182%" height="15" fill="rgb(228,108,9)" fg:x="1109" fg:w="4"/><text x="88.4759%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="88.4646%" y="469" width="0.0796%" height="15" fill="rgb(213,9,39)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="88.4646%" y="453" width="0.0796%" height="15" fill="rgb(252,51,13)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="88.4646%" y="437" width="0.0796%" height="15" fill="rgb(218,202,39)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.4646%" y="421" width="0.0796%" height="15" fill="rgb(214,122,21)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.4646%" y="405" width="0.0796%" height="15" fill="rgb(217,205,48)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4646%" y="389" width="0.0796%" height="15" fill="rgb(230,216,13)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.6237%" y="533" width="0.0796%" height="15" fill="rgb(249,118,4)" fg:x="1114" fg:w="1"/><text x="88.8737%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6237%" y="517" width="0.0796%" height="15" fill="rgb(212,207,40)" fg:x="1114" fg:w="1"/><text x="88.8737%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="88.7033%" y="533" width="0.0796%" height="15" fill="rgb(217,156,26)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="88.7033%" y="517" width="0.0796%" height="15" fill="rgb(226,86,34)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7033%" y="501" width="0.0796%" height="15" fill="rgb(217,111,30)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.7828%" y="501" width="0.0796%" height="15" fill="rgb(228,64,18)" fg:x="1116" fg:w="1"/><text x="89.0328%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7828%" y="485" width="0.0796%" height="15" fill="rgb(254,217,48)" fg:x="1116" fg:w="1"/><text x="89.0328%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0215%" y="341" width="0.0796%" height="15" fill="rgb(226,156,48)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0215%" y="325" width="0.0796%" height="15" fill="rgb(236,168,20)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0215%" y="309" width="0.0796%" height="15" fill="rgb(239,210,33)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0215%" y="293" width="0.0796%" height="15" fill="rgb(242,85,17)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.0215%" y="277" width="0.0796%" height="15" fill="rgb(221,196,15)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.0215%" y="261" width="0.0796%" height="15" fill="rgb(249,76,21)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.0215%" y="245" width="0.0796%" height="15" fill="rgb(243,67,29)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.0215%" y="229" width="0.0796%" height="15" fill="rgb(240,159,2)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.0215%" y="213" width="0.0796%" height="15" fill="rgb(244,64,3)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.0215%" y="197" width="0.0796%" height="15" fill="rgb(220,86,40)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.0215%" y="181" width="0.0796%" height="15" fill="rgb(222,194,51)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.0215%" y="165" width="0.0796%" height="15" fill="rgb(207,154,19)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.0215%" y="149" width="0.0796%" height="15" fill="rgb(206,178,36)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.0215%" y="133" width="0.0796%" height="15" fill="rgb(218,8,24)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.0215%" y="117" width="0.0796%" height="15" fill="rgb(226,83,41)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="127.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="89.0215%" y="389" width="0.1591%" height="15" fill="rgb(224,23,22)" fg:x="1119" fg:w="2"/><text x="89.2715%" y="399.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="89.0215%" y="373" width="0.1591%" height="15" fill="rgb(218,198,45)" fg:x="1119" fg:w="2"/><text x="89.2715%" y="383.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="89.0215%" y="357" width="0.1591%" height="15" fill="rgb(249,147,41)" fg:x="1119" fg:w="2"/><text x="89.2715%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.1010%" y="341" width="0.0796%" height="15" fill="rgb(244,224,13)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1010%" y="325" width="0.0796%" height="15" fill="rgb(225,97,27)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.1010%" y="309" width="0.0796%" height="15" fill="rgb(254,64,0)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1010%" y="293" width="0.0796%" height="15" fill="rgb(208,130,43)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1010%" y="277" width="0.0796%" height="15" fill="rgb(247,91,25)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1010%" y="261" width="0.0796%" height="15" fill="rgb(215,218,42)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.1010%" y="245" width="0.0796%" height="15" fill="rgb(233,9,24)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1010%" y="229" width="0.0796%" height="15" fill="rgb(252,105,38)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.1010%" y="213" width="0.0796%" height="15" fill="rgb(225,40,49)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1010%" y="197" width="0.0796%" height="15" fill="rgb(232,196,19)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="89.3397%" y="341" width="0.0796%" height="15" fill="rgb(207,35,15)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.4193%" y="309" width="0.1591%" height="15" fill="rgb(238,68,36)" fg:x="1124" fg:w="2"/><text x="89.6693%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.4193%" y="293" width="0.1591%" height="15" fill="rgb(205,158,20)" fg:x="1124" fg:w="2"/><text x="89.6693%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4988%" y="277" width="0.0796%" height="15" fill="rgb(232,32,22)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4988%" y="261" width="0.0796%" height="15" fill="rgb(210,169,6)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4988%" y="245" width="0.0796%" height="15" fill="rgb(229,28,12)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="255.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="89.2601%" y="357" width="0.3978%" height="15" fill="rgb(229,78,10)" fg:x="1122" fg:w="5"/><text x="89.5101%" y="367.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="89.4193%" y="341" width="0.2387%" height="15" fill="rgb(223,139,54)" fg:x="1124" fg:w="3"/><text x="89.6693%" y="351.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="89.4193%" y="325" width="0.2387%" height="15" fill="rgb(207,110,4)" fg:x="1124" fg:w="3"/><text x="89.6693%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.5784%" y="309" width="0.0796%" height="15" fill="rgb(248,30,41)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.5784%" y="293" width="0.0796%" height="15" fill="rgb(235,54,25)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.5784%" y="277" width="0.0796%" height="15" fill="rgb(213,107,41)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="89.6579%" y="341" width="0.0796%" height="15" fill="rgb(237,102,9)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.6579%" y="325" width="0.0796%" height="15" fill="rgb(252,137,49)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.7375%" y="213" width="0.0796%" height="15" fill="rgb(233,202,33)" fg:x="1128" fg:w="1"/><text x="89.9875%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (10 samples, 0.80%)</title><rect x="89.1806%" y="389" width="0.7955%" height="15" fill="rgb(223,14,51)" fg:x="1121" fg:w="10"/><text x="89.4306%" y="399.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (10 samples, 0.80%)</title><rect x="89.1806%" y="373" width="0.7955%" height="15" fill="rgb(248,70,23)" fg:x="1121" fg:w="10"/><text x="89.4306%" y="383.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="89.6579%" y="357" width="0.3182%" height="15" fill="rgb(209,207,47)" fg:x="1127" fg:w="4"/><text x="89.9079%" y="367.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="89.7375%" y="341" width="0.2387%" height="15" fill="rgb(245,124,2)" fg:x="1128" fg:w="3"/><text x="89.9875%" y="351.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="89.7375%" y="325" width="0.2387%" height="15" fill="rgb(249,208,11)" fg:x="1128" fg:w="3"/><text x="89.9875%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="89.7375%" y="309" width="0.2387%" height="15" fill="rgb(247,112,7)" fg:x="1128" fg:w="3"/><text x="89.9875%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="89.7375%" y="293" width="0.2387%" height="15" fill="rgb(209,192,31)" fg:x="1128" fg:w="3"/><text x="89.9875%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="89.7375%" y="277" width="0.2387%" height="15" fill="rgb(236,55,19)" fg:x="1128" fg:w="3"/><text x="89.9875%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="89.7375%" y="261" width="0.2387%" height="15" fill="rgb(252,89,41)" fg:x="1128" fg:w="3"/><text x="89.9875%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="89.7375%" y="245" width="0.2387%" height="15" fill="rgb(220,172,14)" fg:x="1128" fg:w="3"/><text x="89.9875%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="89.7375%" y="229" width="0.2387%" height="15" fill="rgb(252,65,2)" fg:x="1128" fg:w="3"/><text x="89.9875%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.8170%" y="213" width="0.1591%" height="15" fill="rgb(250,20,8)" fg:x="1129" fg:w="2"/><text x="90.0670%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.8170%" y="197" width="0.1591%" height="15" fill="rgb(234,149,13)" fg:x="1129" fg:w="2"/><text x="90.0670%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8966%" y="181" width="0.0796%" height="15" fill="rgb(223,219,12)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.1352%" y="229" width="0.0796%" height="15" fill="rgb(234,13,49)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.1352%" y="213" width="0.0796%" height="15" fill="rgb(214,41,25)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="90.1352%" y="197" width="0.0796%" height="15" fill="rgb(232,198,52)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="90.1352%" y="181" width="0.0796%" height="15" fill="rgb(236,111,46)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1352%" y="165" width="0.0796%" height="15" fill="rgb(253,30,20)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="90.2148%" y="229" width="0.0796%" height="15" fill="rgb(247,141,17)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2148%" y="213" width="0.0796%" height="15" fill="rgb(214,195,21)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="90.1352%" y="261" width="0.2387%" height="15" fill="rgb(214,98,12)" fg:x="1133" fg:w="3"/><text x="90.3852%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.1352%" y="245" width="0.2387%" height="15" fill="rgb(239,4,26)" fg:x="1133" fg:w="3"/><text x="90.3852%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2944%" y="229" width="0.0796%" height="15" fill="rgb(234,210,35)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2944%" y="213" width="0.0796%" height="15" fill="rgb(252,178,27)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2944%" y="197" width="0.0796%" height="15" fill="rgb(217,50,1)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.3739%" y="261" width="0.0796%" height="15" fill="rgb(233,137,5)" fg:x="1136" fg:w="1"/><text x="90.6239%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.3739%" y="245" width="0.0796%" height="15" fill="rgb(217,227,25)" fg:x="1136" fg:w="1"/><text x="90.6239%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.3739%" y="229" width="0.0796%" height="15" fill="rgb(242,89,38)" fg:x="1136" fg:w="1"/><text x="90.6239%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.3739%" y="213" width="0.0796%" height="15" fill="rgb(212,190,30)" fg:x="1136" fg:w="1"/><text x="90.6239%" y="223.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (8 samples, 0.64%)</title><rect x="89.9761%" y="373" width="0.6364%" height="15" fill="rgb(222,120,8)" fg:x="1131" fg:w="8"/><text x="90.2261%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (8 samples, 0.64%)</title><rect x="89.9761%" y="357" width="0.6364%" height="15" fill="rgb(227,181,9)" fg:x="1131" fg:w="8"/><text x="90.2261%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="90.0557%" y="341" width="0.5569%" height="15" fill="rgb(222,125,29)" fg:x="1132" fg:w="7"/><text x="90.3057%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="90.1352%" y="325" width="0.4773%" height="15" fill="rgb(215,153,31)" fg:x="1133" fg:w="6"/><text x="90.3852%" y="335.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (6 samples, 0.48%)</title><rect x="90.1352%" y="309" width="0.4773%" height="15" fill="rgb(228,77,30)" fg:x="1133" fg:w="6"/><text x="90.3852%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="90.1352%" y="293" width="0.4773%" height="15" fill="rgb(226,110,9)" fg:x="1133" fg:w="6"/><text x="90.3852%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="90.1352%" y="277" width="0.4773%" height="15" fill="rgb(219,111,7)" fg:x="1133" fg:w="6"/><text x="90.3852%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.4535%" y="261" width="0.1591%" height="15" fill="rgb(229,167,25)" fg:x="1137" fg:w="2"/><text x="90.7035%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.5330%" y="245" width="0.0796%" height="15" fill="rgb(209,77,43)" fg:x="1138" fg:w="1"/><text x="90.7830%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="90.5330%" y="229" width="0.0796%" height="15" fill="rgb(233,70,39)" fg:x="1138" fg:w="1"/><text x="90.7830%" y="239.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="90.5330%" y="213" width="0.0796%" height="15" fill="rgb(207,171,44)" fg:x="1138" fg:w="1"/><text x="90.7830%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="90.5330%" y="197" width="0.0796%" height="15" fill="rgb(244,91,6)" fg:x="1138" fg:w="1"/><text x="90.7830%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.5330%" y="181" width="0.0796%" height="15" fill="rgb(234,136,12)" fg:x="1138" fg:w="1"/><text x="90.7830%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.5330%" y="165" width="0.0796%" height="15" fill="rgb(216,210,38)" fg:x="1138" fg:w="1"/><text x="90.7830%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.6921%" y="261" width="0.0796%" height="15" fill="rgb(241,227,7)" fg:x="1140" fg:w="1"/><text x="90.9421%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7717%" y="229" width="0.0796%" height="15" fill="rgb(241,222,11)" fg:x="1141" fg:w="1"/><text x="91.0217%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (25 samples, 1.99%)</title><rect x="88.9419%" y="421" width="1.9889%" height="15" fill="rgb(246,86,18)" fg:x="1118" fg:w="25"/><text x="89.1919%" y="431.50">&lt;..</text></g><g><title>engine::internal::Entities::add_persisted (24 samples, 1.91%)</title><rect x="89.0215%" y="405" width="1.9093%" height="15" fill="rgb(224,151,49)" fg:x="1119" fg:w="24"/><text x="89.2715%" y="415.50">e..</text></g><g><title>kernel::model::deserialize_entity (12 samples, 0.95%)</title><rect x="89.9761%" y="389" width="0.9547%" height="15" fill="rgb(235,4,41)" fg:x="1131" fg:w="12"/><text x="90.2261%" y="399.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="90.6126%" y="373" width="0.3182%" height="15" fill="rgb(218,30,52)" fg:x="1139" fg:w="4"/><text x="90.8626%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="90.6126%" y="357" width="0.3182%" height="15" fill="rgb(205,124,51)" fg:x="1139" fg:w="4"/><text x="90.8626%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="90.6126%" y="341" width="0.3182%" height="15" fill="rgb(237,126,51)" fg:x="1139" fg:w="4"/><text x="90.8626%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="90.6126%" y="325" width="0.3182%" height="15" fill="rgb(225,32,46)" fg:x="1139" fg:w="4"/><text x="90.8626%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="90.6126%" y="309" width="0.3182%" height="15" fill="rgb(251,60,49)" fg:x="1139" fg:w="4"/><text x="90.8626%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.6921%" y="293" width="0.2387%" height="15" fill="rgb(234,18,23)" fg:x="1140" fg:w="3"/><text x="90.9421%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.6921%" y="277" width="0.2387%" height="15" fill="rgb(234,25,23)" fg:x="1140" fg:w="3"/><text x="90.9421%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.7717%" y="261" width="0.1591%" height="15" fill="rgb(210,43,52)" fg:x="1141" fg:w="2"/><text x="91.0217%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.7717%" y="245" width="0.1591%" height="15" fill="rgb(237,198,21)" fg:x="1141" fg:w="2"/><text x="91.0217%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.8512%" y="229" width="0.0796%" height="15" fill="rgb(211,20,34)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8512%" y="213" width="0.0796%" height="15" fill="rgb(221,155,50)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (27 samples, 2.15%)</title><rect x="88.8624%" y="501" width="2.1480%" height="15" fill="rgb(213,214,53)" fg:x="1117" fg:w="27"/><text x="89.1124%" y="511.50">&lt;..</text></g><g><title>core::iter::adapters::try_process (26 samples, 2.07%)</title><rect x="88.9419%" y="485" width="2.0684%" height="15" fill="rgb(215,229,48)" fg:x="1118" fg:w="26"/><text x="89.1919%" y="495.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 2.07%)</title><rect x="88.9419%" y="469" width="2.0684%" height="15" fill="rgb(243,88,5)" fg:x="1118" fg:w="26"/><text x="89.1919%" y="479.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 2.07%)</title><rect x="88.9419%" y="453" width="2.0684%" height="15" fill="rgb(216,199,8)" fg:x="1118" fg:w="26"/><text x="89.1919%" y="463.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (26 samples, 2.07%)</title><rect x="88.9419%" y="437" width="2.0684%" height="15" fill="rgb(241,22,4)" fg:x="1118" fg:w="26"/><text x="89.1919%" y="447.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9308%" y="421" width="0.0796%" height="15" fill="rgb(209,190,22)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="431.50"></text></g><g><title>plugins_core::tools::get_contained_keys (32 samples, 2.55%)</title><rect x="88.5442%" y="549" width="2.5457%" height="15" fill="rgb(251,138,45)" fg:x="1113" fg:w="32"/><text x="88.7942%" y="559.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (29 samples, 2.31%)</title><rect x="88.7828%" y="533" width="2.3071%" height="15" fill="rgb(219,111,22)" fg:x="1116" fg:w="29"/><text x="89.0328%" y="543.50">k..</text></g><g><title>kernel::model::Entity::load_scope (29 samples, 2.31%)</title><rect x="88.7828%" y="517" width="2.3071%" height="15" fill="rgb(253,29,49)" fg:x="1116" fg:w="29"/><text x="89.0328%" y="527.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0103%" y="501" width="0.0796%" height="15" fill="rgb(238,129,49)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0103%" y="485" width="0.0796%" height="15" fill="rgb(240,26,41)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="91.0103%" y="469" width="0.0796%" height="15" fill="rgb(221,47,33)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.0103%" y="453" width="0.0796%" height="15" fill="rgb(216,200,17)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="91.0103%" y="437" width="0.0796%" height="15" fill="rgb(230,151,26)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0103%" y="421" width="0.0796%" height="15" fill="rgb(242,182,16)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0103%" y="405" width="0.0796%" height="15" fill="rgb(236,35,53)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.0103%" y="389" width="0.0796%" height="15" fill="rgb(214,180,28)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1695%" y="501" width="0.0796%" height="15" fill="rgb(208,173,36)" fg:x="1146" fg:w="1"/><text x="91.4195%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1695%" y="485" width="0.0796%" height="15" fill="rgb(218,39,15)" fg:x="1146" fg:w="1"/><text x="91.4195%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1695%" y="469" width="0.0796%" height="15" fill="rgb(213,145,15)" fg:x="1146" fg:w="1"/><text x="91.4195%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (62 samples, 4.93%)</title><rect x="86.4757%" y="581" width="4.9324%" height="15" fill="rgb(242,110,37)" fg:x="1087" fg:w="62"/><text x="86.7257%" y="591.50">&lt;alloc..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (61 samples, 4.85%)</title><rect x="86.5553%" y="565" width="4.8528%" height="15" fill="rgb(247,146,22)" fg:x="1088" fg:w="61"/><text x="86.8053%" y="575.50">&lt;core:..</text></g><g><title>plugins_core::tools::get_occupant_keys (4 samples, 0.32%)</title><rect x="91.0899%" y="549" width="0.3182%" height="15" fill="rgb(215,191,7)" fg:x="1145" fg:w="4"/><text x="91.3399%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="91.0899%" y="533" width="0.3182%" height="15" fill="rgb(240,158,1)" fg:x="1145" fg:w="4"/><text x="91.3399%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="91.0899%" y="517" width="0.3182%" height="15" fill="rgb(241,78,32)" fg:x="1145" fg:w="4"/><text x="91.3399%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.2490%" y="501" width="0.1591%" height="15" fill="rgb(248,83,10)" fg:x="1147" fg:w="2"/><text x="91.4990%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.2490%" y="485" width="0.1591%" height="15" fill="rgb(241,52,0)" fg:x="1147" fg:w="2"/><text x="91.4990%" y="495.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="91.3286%" y="469" width="0.0796%" height="15" fill="rgb(238,37,13)" fg:x="1148" fg:w="1"/><text x="91.5786%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5672%" y="533" width="0.0796%" height="15" fill="rgb(242,194,17)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.5672%" y="517" width="0.0796%" height="15" fill="rgb(236,96,3)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.5672%" y="501" width="0.0796%" height="15" fill="rgb(235,148,34)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.5672%" y="485" width="0.0796%" height="15" fill="rgb(254,12,11)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.5672%" y="469" width="0.0796%" height="15" fill="rgb(207,31,54)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.5672%" y="453" width="0.0796%" height="15" fill="rgb(252,14,28)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.5672%" y="437" width="0.0796%" height="15" fill="rgb(252,108,36)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.5672%" y="421" width="0.0796%" height="15" fill="rgb(214,149,7)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.5672%" y="405" width="0.0796%" height="15" fill="rgb(243,94,12)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.5672%" y="389" width="0.0796%" height="15" fill="rgb(208,36,10)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.5672%" y="373" width="0.0796%" height="15" fill="rgb(233,185,52)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5672%" y="357" width="0.0796%" height="15" fill="rgb(234,50,45)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="367.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="91.6468%" y="517" width="0.1591%" height="15" fill="rgb(228,92,54)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.6468%" y="501" width="0.1591%" height="15" fill="rgb(224,85,25)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.6468%" y="485" width="0.1591%" height="15" fill="rgb(246,1,45)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="91.6468%" y="469" width="0.1591%" height="15" fill="rgb(240,66,23)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="91.6468%" y="453" width="0.1591%" height="15" fill="rgb(222,96,27)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="91.6468%" y="437" width="0.1591%" height="15" fill="rgb(212,136,10)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="91.6468%" y="421" width="0.1591%" height="15" fill="rgb(226,192,50)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="91.6468%" y="405" width="0.1591%" height="15" fill="rgb(241,182,31)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="91.6468%" y="389" width="0.1591%" height="15" fill="rgb(219,205,47)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="91.6468%" y="373" width="0.1591%" height="15" fill="rgb(207,96,14)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="91.6468%" y="357" width="0.1591%" height="15" fill="rgb(216,119,9)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="91.6468%" y="341" width="0.1591%" height="15" fill="rgb(235,62,36)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.6468%" y="325" width="0.1591%" height="15" fill="rgb(214,41,27)" fg:x="1152" fg:w="2"/><text x="91.8968%" y="335.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="91.8059%" y="485" width="0.0796%" height="15" fill="rgb(214,174,37)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="91.8059%" y="469" width="0.0796%" height="15" fill="rgb(212,11,25)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="91.8059%" y="453" width="0.0796%" height="15" fill="rgb(217,71,35)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="91.8059%" y="437" width="0.0796%" height="15" fill="rgb(234,152,9)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="91.8059%" y="421" width="0.0796%" height="15" fill="rgb(228,32,51)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="91.8059%" y="405" width="0.0796%" height="15" fill="rgb(209,14,47)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="91.8059%" y="389" width="0.0796%" height="15" fill="rgb(218,201,17)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.40%)</title><rect x="91.6468%" y="533" width="0.3978%" height="15" fill="rgb(218,98,15)" fg:x="1152" fg:w="5"/><text x="91.8968%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="91.8059%" y="517" width="0.2387%" height="15" fill="rgb(233,202,29)" fg:x="1154" fg:w="3"/><text x="92.0559%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="91.8059%" y="501" width="0.2387%" height="15" fill="rgb(207,196,44)" fg:x="1154" fg:w="3"/><text x="92.0559%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="91.8854%" y="485" width="0.1591%" height="15" fill="rgb(218,63,34)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="91.8854%" y="469" width="0.1591%" height="15" fill="rgb(209,10,5)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="91.8854%" y="453" width="0.1591%" height="15" fill="rgb(224,36,28)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="91.8854%" y="437" width="0.1591%" height="15" fill="rgb(249,178,7)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="91.8854%" y="421" width="0.1591%" height="15" fill="rgb(253,163,10)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="91.8854%" y="405" width="0.1591%" height="15" fill="rgb(245,67,46)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="91.8854%" y="389" width="0.1591%" height="15" fill="rgb(225,14,18)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.9650%" y="373" width="0.0796%" height="15" fill="rgb(217,41,54)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.9650%" y="357" width="0.0796%" height="15" fill="rgb(222,111,11)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="91.9650%" y="341" width="0.0796%" height="15" fill="rgb(211,85,31)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="91.9650%" y="325" width="0.0796%" height="15" fill="rgb(223,29,26)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="91.9650%" y="309" width="0.0796%" height="15" fill="rgb(236,124,50)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="91.9650%" y="293" width="0.0796%" height="15" fill="rgb(219,148,15)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="91.9650%" y="277" width="0.0796%" height="15" fill="rgb(248,159,33)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="91.9650%" y="261" width="0.0796%" height="15" fill="rgb(252,65,8)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="91.9650%" y="245" width="0.0796%" height="15" fill="rgb(236,45,7)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="91.9650%" y="229" width="0.0796%" height="15" fill="rgb(244,3,48)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.9650%" y="213" width="0.0796%" height="15" fill="rgb(224,123,53)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="91.9650%" y="197" width="0.0796%" height="15" fill="rgb(223,173,15)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="91.9650%" y="181" width="0.0796%" height="15" fill="rgb(254,181,5)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="91.9650%" y="165" width="0.0796%" height="15" fill="rgb(243,124,33)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="91.9650%" y="149" width="0.0796%" height="15" fill="rgb(253,220,11)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="93.7947%" y="181" width="0.0796%" height="15" fill="rgb(217,14,4)" fg:x="1179" fg:w="1"/><text x="94.0447%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="93.6356%" y="197" width="0.3182%" height="15" fill="rgb(209,196,12)" fg:x="1177" fg:w="4"/><text x="93.8856%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.8743%" y="181" width="0.0796%" height="15" fill="rgb(237,108,29)" fg:x="1180" fg:w="1"/><text x="94.1243%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.8743%" y="165" width="0.0796%" height="15" fill="rgb(216,173,20)" fg:x="1180" fg:w="1"/><text x="94.1243%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (8 samples, 0.64%)</title><rect x="93.6356%" y="229" width="0.6364%" height="15" fill="rgb(245,27,6)" fg:x="1177" fg:w="8"/><text x="93.8856%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="93.6356%" y="213" width="0.6364%" height="15" fill="rgb(210,181,20)" fg:x="1177" fg:w="8"/><text x="93.8856%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="93.9539%" y="197" width="0.3182%" height="15" fill="rgb(235,213,1)" fg:x="1181" fg:w="4"/><text x="94.2039%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.1130%" y="181" width="0.1591%" height="15" fill="rgb(239,68,43)" fg:x="1183" fg:w="2"/><text x="94.3630%" y="191.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.95%)</title><rect x="93.4765%" y="277" width="0.9547%" height="15" fill="rgb(254,137,43)" fg:x="1175" fg:w="12"/><text x="93.7265%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="93.5561%" y="261" width="0.8751%" height="15" fill="rgb(252,170,38)" fg:x="1176" fg:w="11"/><text x="93.8061%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.88%)</title><rect x="93.5561%" y="245" width="0.8751%" height="15" fill="rgb(234,21,42)" fg:x="1176" fg:w="11"/><text x="93.8061%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="94.2721%" y="229" width="0.1591%" height="15" fill="rgb(216,145,40)" fg:x="1185" fg:w="2"/><text x="94.5221%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3516%" y="213" width="0.0796%" height="15" fill="rgb(251,73,9)" fg:x="1186" fg:w="1"/><text x="94.6016%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.4312%" y="277" width="0.0796%" height="15" fill="rgb(242,54,6)" fg:x="1187" fg:w="1"/><text x="94.6812%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (14 samples, 1.11%)</title><rect x="93.4765%" y="325" width="1.1138%" height="15" fill="rgb(239,70,7)" fg:x="1175" fg:w="14"/><text x="93.7265%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 1.11%)</title><rect x="93.4765%" y="309" width="1.1138%" height="15" fill="rgb(216,159,35)" fg:x="1175" fg:w="14"/><text x="93.7265%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.11%)</title><rect x="93.4765%" y="293" width="1.1138%" height="15" fill="rgb(224,50,39)" fg:x="1175" fg:w="14"/><text x="93.7265%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5107%" y="277" width="0.0796%" height="15" fill="rgb(235,9,35)" fg:x="1188" fg:w="1"/><text x="94.7607%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5107%" y="261" width="0.0796%" height="15" fill="rgb(239,34,21)" fg:x="1188" fg:w="1"/><text x="94.7607%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 1.27%)</title><rect x="93.3970%" y="341" width="1.2729%" height="15" fill="rgb(218,162,43)" fg:x="1174" fg:w="16"/><text x="93.6470%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.5903%" y="325" width="0.0796%" height="15" fill="rgb(219,89,33)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.35%)</title><rect x="93.3970%" y="357" width="1.3524%" height="15" fill="rgb(226,125,37)" fg:x="1174" fg:w="17"/><text x="93.6470%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="94.6698%" y="341" width="0.0796%" height="15" fill="rgb(233,149,30)" fg:x="1190" fg:w="1"/><text x="94.9198%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6698%" y="325" width="0.0796%" height="15" fill="rgb(236,8,18)" fg:x="1190" fg:w="1"/><text x="94.9198%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 1.83%)</title><rect x="93.0788%" y="389" width="1.8298%" height="15" fill="rgb(205,176,9)" fg:x="1170" fg:w="23"/><text x="93.3288%" y="399.50">&lt;..</text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (21 samples, 1.67%)</title><rect x="93.2379%" y="373" width="1.6706%" height="15" fill="rgb(252,103,44)" fg:x="1172" fg:w="21"/><text x="93.4879%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="94.7494%" y="357" width="0.1591%" height="15" fill="rgb(207,68,53)" fg:x="1191" fg:w="2"/><text x="94.9994%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="94.7494%" y="341" width="0.1591%" height="15" fill="rgb(218,193,48)" fg:x="1191" fg:w="2"/><text x="94.9994%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="94.7494%" y="325" width="0.1591%" height="15" fill="rgb(234,121,52)" fg:x="1191" fg:w="2"/><text x="94.9994%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="94.7494%" y="309" width="0.1591%" height="15" fill="rgb(227,218,49)" fg:x="1191" fg:w="2"/><text x="94.9994%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="94.7494%" y="293" width="0.1591%" height="15" fill="rgb(221,8,7)" fg:x="1191" fg:w="2"/><text x="94.9994%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="94.8290%" y="277" width="0.0796%" height="15" fill="rgb(217,151,36)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.23%)</title><rect x="92.8401%" y="421" width="2.2275%" height="15" fill="rgb(213,71,5)" fg:x="1167" fg:w="28"/><text x="93.0901%" y="431.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 2.07%)</title><rect x="92.9992%" y="405" width="2.0684%" height="15" fill="rgb(225,145,43)" fg:x="1169" fg:w="26"/><text x="93.2492%" y="415.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="94.9085%" y="389" width="0.1591%" height="15" fill="rgb(235,118,19)" fg:x="1193" fg:w="2"/><text x="95.1585%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.9085%" y="373" width="0.1591%" height="15" fill="rgb(214,102,36)" fg:x="1193" fg:w="2"/><text x="95.1585%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="95.0676%" y="421" width="0.1591%" height="15" fill="rgb(220,56,43)" fg:x="1195" fg:w="2"/><text x="95.3176%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="95.2267%" y="405" width="0.1591%" height="15" fill="rgb(246,136,46)" fg:x="1197" fg:w="2"/><text x="95.4767%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 3.02%)</title><rect x="92.4423%" y="437" width="3.0231%" height="15" fill="rgb(249,99,12)" fg:x="1162" fg:w="38"/><text x="92.6923%" y="447.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="95.2267%" y="421" width="0.2387%" height="15" fill="rgb(224,31,42)" fg:x="1197" fg:w="3"/><text x="95.4767%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3858%" y="405" width="0.0796%" height="15" fill="rgb(208,96,21)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (42 samples, 3.34%)</title><rect x="92.3628%" y="469" width="3.3413%" height="15" fill="rgb(237,229,7)" fg:x="1161" fg:w="42"/><text x="92.6128%" y="479.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (41 samples, 3.26%)</title><rect x="92.4423%" y="453" width="3.2617%" height="15" fill="rgb(210,12,6)" fg:x="1162" fg:w="41"/><text x="92.6923%" y="463.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="95.4654%" y="437" width="0.2387%" height="15" fill="rgb(240,9,34)" fg:x="1200" fg:w="3"/><text x="95.7154%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="95.4654%" y="421" width="0.2387%" height="15" fill="rgb(211,68,37)" fg:x="1200" fg:w="3"/><text x="95.7154%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48 samples, 3.82%)</title><rect x="92.0446%" y="485" width="3.8186%" height="15" fill="rgb(249,138,50)" fg:x="1157" fg:w="48"/><text x="92.2946%" y="495.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.7041%" y="469" width="0.1591%" height="15" fill="rgb(243,185,40)" fg:x="1203" fg:w="2"/><text x="95.9541%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="95.7041%" y="453" width="0.1591%" height="15" fill="rgb(242,92,35)" fg:x="1203" fg:w="2"/><text x="95.9541%" y="463.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (58 samples, 4.61%)</title><rect x="92.0446%" y="517" width="4.6142%" height="15" fill="rgb(244,98,5)" fg:x="1157" fg:w="58"/><text x="92.2946%" y="527.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (58 samples, 4.61%)</title><rect x="92.0446%" y="501" width="4.6142%" height="15" fill="rgb(228,186,29)" fg:x="1157" fg:w="58"/><text x="92.2946%" y="511.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.80%)</title><rect x="95.8632%" y="485" width="0.7955%" height="15" fill="rgb(253,7,44)" fg:x="1205" fg:w="10"/><text x="96.1132%" y="495.50"></text></g><g><title>__libc_malloc (9 samples, 0.72%)</title><rect x="95.9427%" y="469" width="0.7160%" height="15" fill="rgb(216,11,45)" fg:x="1206" fg:w="9"/><text x="96.1927%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.6587%" y="469" width="0.1591%" height="15" fill="rgb(205,67,3)" fg:x="1215" fg:w="2"/><text x="96.9087%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8178%" y="469" width="0.0796%" height="15" fill="rgb(250,18,3)" fg:x="1217" fg:w="1"/><text x="97.0678%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8178%" y="453" width="0.0796%" height="15" fill="rgb(241,222,43)" fg:x="1217" fg:w="1"/><text x="97.0678%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="96.8178%" y="437" width="0.0796%" height="15" fill="rgb(233,115,3)" fg:x="1217" fg:w="1"/><text x="97.0678%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="96.8974%" y="469" width="0.0796%" height="15" fill="rgb(215,165,25)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.8974%" y="453" width="0.0796%" height="15" fill="rgb(234,179,6)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8974%" y="437" width="0.0796%" height="15" fill="rgb(215,82,23)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="96.9769%" y="469" width="0.0796%" height="15" fill="rgb(211,47,18)" fg:x="1219" fg:w="1"/><text x="97.2269%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.9769%" y="453" width="0.0796%" height="15" fill="rgb(248,17,9)" fg:x="1219" fg:w="1"/><text x="97.2269%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9769%" y="437" width="0.0796%" height="15" fill="rgb(210,212,12)" fg:x="1219" fg:w="1"/><text x="97.2269%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="97.0565%" y="469" width="0.0796%" height="15" fill="rgb(230,135,45)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.0565%" y="453" width="0.0796%" height="15" fill="rgb(214,121,41)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.0565%" y="437" width="0.0796%" height="15" fill="rgb(239,165,45)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2951%" y="389" width="0.0796%" height="15" fill="rgb(214,85,51)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.2951%" y="421" width="0.1591%" height="15" fill="rgb(223,90,27)" fg:x="1223" fg:w="2"/><text x="97.5451%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.2951%" y="405" width="0.1591%" height="15" fill="rgb(244,84,11)" fg:x="1223" fg:w="2"/><text x="97.5451%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.3747%" y="389" width="0.0796%" height="15" fill="rgb(253,41,47)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="97.5338%" y="389" width="0.2387%" height="15" fill="rgb(232,39,5)" fg:x="1226" fg:w="3"/><text x="97.7838%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="97.6134%" y="373" width="0.1591%" height="15" fill="rgb(211,93,4)" fg:x="1227" fg:w="2"/><text x="97.8634%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6929%" y="357" width="0.0796%" height="15" fill="rgb(219,50,49)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="97.4543%" y="421" width="0.3978%" height="15" fill="rgb(232,80,19)" fg:x="1225" fg:w="5"/><text x="97.7043%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="97.4543%" y="405" width="0.3978%" height="15" fill="rgb(215,227,39)" fg:x="1225" fg:w="5"/><text x="97.7043%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7725%" y="389" width="0.0796%" height="15" fill="rgb(211,99,12)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.8520%" y="389" width="0.2387%" height="15" fill="rgb(214,158,5)" fg:x="1230" fg:w="3"/><text x="98.1020%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.9316%" y="373" width="0.1591%" height="15" fill="rgb(242,19,53)" fg:x="1231" fg:w="2"/><text x="98.1816%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0111%" y="357" width="0.0796%" height="15" fill="rgb(208,18,20)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2498%" y="357" width="0.0796%" height="15" fill="rgb(250,44,11)" fg:x="1235" fg:w="1"/><text x="98.4998%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2498%" y="341" width="0.0796%" height="15" fill="rgb(238,159,13)" fg:x="1235" fg:w="1"/><text x="98.4998%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3294%" y="325" width="0.0796%" height="15" fill="rgb(231,74,18)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3294%" y="309" width="0.0796%" height="15" fill="rgb(229,219,45)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3294%" y="293" width="0.0796%" height="15" fill="rgb(210,221,1)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.4089%" y="309" width="0.0796%" height="15" fill="rgb(209,60,51)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5680%" y="293" width="0.0796%" height="15" fill="rgb(252,97,34)" fg:x="1239" fg:w="1"/><text x="98.8180%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5680%" y="277" width="0.0796%" height="15" fill="rgb(243,211,37)" fg:x="1239" fg:w="1"/><text x="98.8180%" y="287.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (84 samples, 6.68%)</title><rect x="92.0446%" y="533" width="6.6826%" height="15" fill="rgb(210,229,37)" fg:x="1157" fg:w="84"/><text x="92.2946%" y="543.50">&lt;rpc_prot..</text></g><g><title>kernel::model::EntityPtr::to_json_value (26 samples, 2.07%)</title><rect x="96.6587%" y="517" width="2.0684%" height="15" fill="rgb(220,208,43)" fg:x="1215" fg:w="26"/><text x="96.9087%" y="527.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (26 samples, 2.07%)</title><rect x="96.6587%" y="501" width="2.0684%" height="15" fill="rgb(218,118,50)" fg:x="1215" fg:w="26"/><text x="96.9087%" y="511.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (26 samples, 2.07%)</title><rect x="96.6587%" y="485" width="2.0684%" height="15" fill="rgb(254,169,52)" fg:x="1215" fg:w="26"/><text x="96.9087%" y="495.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.59%)</title><rect x="97.1360%" y="469" width="1.5911%" height="15" fill="rgb(221,214,37)" fg:x="1221" fg:w="20"/><text x="97.3860%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (19 samples, 1.51%)</title><rect x="97.2156%" y="453" width="1.5115%" height="15" fill="rgb(254,186,32)" fg:x="1222" fg:w="19"/><text x="97.4656%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.43%)</title><rect x="97.2951%" y="437" width="1.4320%" height="15" fill="rgb(215,144,43)" fg:x="1223" fg:w="18"/><text x="97.5451%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="97.8520%" y="421" width="0.8751%" height="15" fill="rgb(252,21,46)" fg:x="1230" fg:w="11"/><text x="98.1020%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="97.8520%" y="405" width="0.8751%" height="15" fill="rgb(207,166,46)" fg:x="1230" fg:w="11"/><text x="98.1020%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="98.0907%" y="389" width="0.6364%" height="15" fill="rgb(253,37,49)" fg:x="1233" fg:w="8"/><text x="98.3407%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="98.2498%" y="373" width="0.4773%" height="15" fill="rgb(222,97,20)" fg:x="1235" fg:w="6"/><text x="98.4998%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="98.3294%" y="357" width="0.3978%" height="15" fill="rgb(244,181,26)" fg:x="1236" fg:w="5"/><text x="98.5794%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="98.3294%" y="341" width="0.3978%" height="15" fill="rgb(241,22,29)" fg:x="1236" fg:w="5"/><text x="98.5794%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="98.4089%" y="325" width="0.3182%" height="15" fill="rgb(206,200,43)" fg:x="1237" fg:w="4"/><text x="98.6589%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="98.4885%" y="309" width="0.2387%" height="15" fill="rgb(226,224,43)" fg:x="1238" fg:w="3"/><text x="98.7385%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="98.6476%" y="293" width="0.0796%" height="15" fill="rgb(253,129,28)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="98.6476%" y="277" width="0.0796%" height="15" fill="rgb(252,99,33)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7271%" y="533" width="0.0796%" height="15" fill="rgb(208,123,45)" fg:x="1241" fg:w="1"/><text x="98.9771%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (94 samples, 7.48%)</title><rect x="91.4081%" y="565" width="7.4781%" height="15" fill="rgb(251,106,12)" fg:x="1149" fg:w="94"/><text x="91.6581%" y="575.50">&lt;core::ite..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (94 samples, 7.48%)</title><rect x="91.4081%" y="549" width="7.4781%" height="15" fill="rgb(240,209,35)" fg:x="1149" fg:w="94"/><text x="91.6581%" y="559.50">plugins_rp..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.8067%" y="533" width="0.0796%" height="15" fill="rgb(214,52,50)" fg:x="1242" fg:w="1"/><text x="99.0567%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.8067%" y="517" width="0.0796%" height="15" fill="rgb(234,119,4)" fg:x="1242" fg:w="1"/><text x="99.0567%" y="527.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (161 samples, 12.81%)</title><rect x="86.1575%" y="613" width="12.8083%" height="15" fill="rgb(228,181,36)" fg:x="1083" fg:w="161"/><text x="86.4075%" y="623.50">&lt;plugins_rpc::sessi..</text></g><g><title>core::iter::adapters::try_process (157 samples, 12.49%)</title><rect x="86.4757%" y="597" width="12.4901%" height="15" fill="rgb(213,171,42)" fg:x="1087" fg:w="157"/><text x="86.7257%" y="607.50">core::iter::adapter..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (95 samples, 7.56%)</title><rect x="91.4081%" y="581" width="7.5577%" height="15" fill="rgb(239,14,41)" fg:x="1149" fg:w="95"/><text x="91.6581%" y="591.50">alloc::vec..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8862%" y="565" width="0.0796%" height="15" fill="rgb(239,111,46)" fg:x="1243" fg:w="1"/><text x="99.1362%" y="575.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (188 samples, 14.96%)</title><rect x="84.0891%" y="677" width="14.9562%" height="15" fill="rgb(214,72,7)" fg:x="1057" fg:w="188"/><text x="84.3391%" y="687.50">&lt;engine::perform::Stand..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (172 samples, 13.68%)</title><rect x="85.3620%" y="661" width="13.6834%" height="15" fill="rgb(221,114,1)" fg:x="1073" fg:w="172"/><text x="85.6120%" y="671.50">kernel::plugins::Sess..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (172 samples, 13.68%)</title><rect x="85.3620%" y="645" width="13.6834%" height="15" fill="rgb(213,143,14)" fg:x="1073" fg:w="172"/><text x="85.6120%" y="655.50">&lt;plugins_dynlib::Dyna..</text></g><g><title>plugins_rpc::querying::have_surroundings (162 samples, 12.89%)</title><rect x="86.1575%" y="629" width="12.8878%" height="15" fill="rgb(220,221,53)" fg:x="1083" fg:w="162"/><text x="86.4075%" y="639.50">plugins_rpc::queryi..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="98.9658%" y="613" width="0.0796%" height="15" fill="rgb(236,189,27)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="98.9658%" y="597" width="0.0796%" height="15" fill="rgb(252,139,49)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="98.9658%" y="581" width="0.0796%" height="15" fill="rgb(231,158,33)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.0453%" y="613" width="0.0796%" height="15" fill="rgb(207,201,15)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.0453%" y="597" width="0.0796%" height="15" fill="rgb(218,43,48)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.0453%" y="581" width="0.0796%" height="15" fill="rgb(244,63,52)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.0453%" y="565" width="0.0796%" height="15" fill="rgb(236,60,17)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.0453%" y="549" width="0.0796%" height="15" fill="rgb(205,206,29)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.0453%" y="533" width="0.0796%" height="15" fill="rgb(205,209,35)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.0453%" y="517" width="0.0796%" height="15" fill="rgb(227,112,14)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.0453%" y="501" width="0.0796%" height="15" fill="rgb(248,151,9)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.0453%" y="485" width="0.0796%" height="15" fill="rgb(247,45,40)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.0453%" y="469" width="0.0796%" height="15" fill="rgb(232,185,16)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.0453%" y="453" width="0.0796%" height="15" fill="rgb(215,45,44)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.0453%" y="437" width="0.0796%" height="15" fill="rgb(206,69,32)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0453%" y="421" width="0.0796%" height="15" fill="rgb(233,98,50)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.1249%" y="437" width="0.0796%" height="15" fill="rgb(232,217,52)" fg:x="1246" fg:w="1"/><text x="99.3749%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="99.1249%" y="613" width="0.1591%" height="15" fill="rgb(250,42,51)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="623.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="99.1249%" y="597" width="0.1591%" height="15" fill="rgb(241,200,26)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="607.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="99.1249%" y="581" width="0.1591%" height="15" fill="rgb(207,10,32)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="591.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="99.1249%" y="565" width="0.1591%" height="15" fill="rgb(214,63,15)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="99.1249%" y="549" width="0.1591%" height="15" fill="rgb(234,176,14)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1249%" y="533" width="0.1591%" height="15" fill="rgb(226,104,52)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1249%" y="517" width="0.1591%" height="15" fill="rgb(211,222,1)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1249%" y="501" width="0.1591%" height="15" fill="rgb(237,7,3)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1249%" y="485" width="0.1591%" height="15" fill="rgb(218,143,7)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1249%" y="469" width="0.1591%" height="15" fill="rgb(208,25,22)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1249%" y="453" width="0.1591%" height="15" fill="rgb(228,127,16)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2045%" y="437" width="0.0796%" height="15" fill="rgb(237,86,27)" fg:x="1247" fg:w="1"/><text x="99.4545%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2045%" y="421" width="0.0796%" height="15" fill="rgb(207,125,19)" fg:x="1247" fg:w="1"/><text x="99.4545%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2045%" y="405" width="0.0796%" height="15" fill="rgb(243,195,0)" fg:x="1247" fg:w="1"/><text x="99.4545%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3636%" y="485" width="0.0796%" height="15" fill="rgb(230,95,18)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3636%" y="469" width="0.0796%" height="15" fill="rgb(232,157,21)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3636%" y="453" width="0.0796%" height="15" fill="rgb(212,120,50)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3636%" y="437" width="0.0796%" height="15" fill="rgb(222,204,44)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3636%" y="421" width="0.0796%" height="15" fill="rgb(236,6,33)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3636%" y="405" width="0.0796%" height="15" fill="rgb(247,11,38)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3636%" y="389" width="0.0796%" height="15" fill="rgb(215,111,0)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3636%" y="373" width="0.0796%" height="15" fill="rgb(211,65,46)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3636%" y="357" width="0.0796%" height="15" fill="rgb(216,5,12)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3636%" y="341" width="0.0796%" height="15" fill="rgb(226,7,2)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3636%" y="325" width="0.0796%" height="15" fill="rgb(242,116,12)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3636%" y="309" width="0.0796%" height="15" fill="rgb(249,209,7)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.3636%" y="293" width="0.0796%" height="15" fill="rgb(232,73,17)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.2840%" y="533" width="0.2387%" height="15" fill="rgb(214,13,32)" fg:x="1248" fg:w="3"/><text x="99.5340%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.2840%" y="517" width="0.2387%" height="15" fill="rgb(221,125,10)" fg:x="1248" fg:w="3"/><text x="99.5340%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.2840%" y="501" width="0.2387%" height="15" fill="rgb(246,7,44)" fg:x="1248" fg:w="3"/><text x="99.5340%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4431%" y="485" width="0.0796%" height="15" fill="rgb(239,18,35)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4431%" y="469" width="0.0796%" height="15" fill="rgb(250,222,16)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4431%" y="453" width="0.0796%" height="15" fill="rgb(219,100,8)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.4431%" y="437" width="0.0796%" height="15" fill="rgb(240,62,13)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="99.4431%" y="421" width="0.0796%" height="15" fill="rgb(253,194,2)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4431%" y="405" width="0.0796%" height="15" fill="rgb(235,58,31)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4431%" y="389" width="0.0796%" height="15" fill="rgb(231,37,11)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4431%" y="373" width="0.0796%" height="15" fill="rgb(235,133,0)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="99.2840%" y="597" width="0.3182%" height="15" fill="rgb(212,185,40)" fg:x="1248" fg:w="4"/><text x="99.5340%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="99.2840%" y="581" width="0.3182%" height="15" fill="rgb(216,68,42)" fg:x="1248" fg:w="4"/><text x="99.5340%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="99.2840%" y="565" width="0.3182%" height="15" fill="rgb(239,81,4)" fg:x="1248" fg:w="4"/><text x="99.5340%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.2840%" y="549" width="0.3182%" height="15" fill="rgb(206,86,6)" fg:x="1248" fg:w="4"/><text x="99.5340%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5227%" y="533" width="0.0796%" height="15" fill="rgb(249,95,27)" fg:x="1251" fg:w="1"/><text x="99.7727%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5227%" y="517" width="0.0796%" height="15" fill="rgb(205,155,45)" fg:x="1251" fg:w="1"/><text x="99.7727%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.5227%" y="501" width="0.0796%" height="15" fill="rgb(213,55,42)" fg:x="1251" fg:w="1"/><text x="99.7727%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (9 samples, 0.72%)</title><rect x="99.0453%" y="661" width="0.7160%" height="15" fill="rgb(249,197,4)" fg:x="1245" fg:w="9"/><text x="99.2953%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="99.0453%" y="645" width="0.7160%" height="15" fill="rgb(212,128,32)" fg:x="1245" fg:w="9"/><text x="99.2953%" y="655.50"></text></g><g><title>engine::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="99.0453%" y="629" width="0.7160%" height="15" fill="rgb(252,47,30)" fg:x="1245" fg:w="9"/><text x="99.2953%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="99.2840%" y="613" width="0.4773%" height="15" fill="rgb(209,79,18)" fg:x="1248" fg:w="6"/><text x="99.5340%" y="623.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.6022%" y="597" width="0.1591%" height="15" fill="rgb(225,81,38)" fg:x="1252" fg:w="2"/><text x="99.8522%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.6022%" y="581" width="0.1591%" height="15" fill="rgb(205,95,16)" fg:x="1252" fg:w="2"/><text x="99.8522%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.6022%" y="565" width="0.1591%" height="15" fill="rgb(214,30,4)" fg:x="1252" fg:w="2"/><text x="99.8522%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.6022%" y="549" width="0.1591%" height="15" fill="rgb(232,137,22)" fg:x="1252" fg:w="2"/><text x="99.8522%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.6022%" y="533" width="0.1591%" height="15" fill="rgb(232,156,19)" fg:x="1252" fg:w="2"/><text x="99.8522%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.6022%" y="517" width="0.1591%" height="15" fill="rgb(248,157,26)" fg:x="1252" fg:w="2"/><text x="99.8522%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.6022%" y="501" width="0.1591%" height="15" fill="rgb(242,24,3)" fg:x="1252" fg:w="2"/><text x="99.8522%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.6022%" y="485" width="0.1591%" height="15" fill="rgb(218,195,48)" fg:x="1252" fg:w="2"/><text x="99.8522%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.6022%" y="469" width="0.1591%" height="15" fill="rgb(214,193,36)" fg:x="1252" fg:w="2"/><text x="99.8522%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="99.6022%" y="453" width="0.1591%" height="15" fill="rgb(242,110,40)" fg:x="1252" fg:w="2"/><text x="99.8522%" y="463.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (200 samples, 15.91%)</title><rect x="83.9300%" y="773" width="15.9109%" height="15" fill="rgb(233,150,26)" fg:x="1055" fg:w="200"/><text x="84.1800%" y="783.50">&lt;kernel::plugins::Sessio..</text></g><g><title>core::iter::adapters::try_process (199 samples, 15.83%)</title><rect x="84.0095%" y="757" width="15.8313%" height="15" fill="rgb(239,200,30)" fg:x="1056" fg:w="199"/><text x="84.2595%" y="767.50">core::iter::adapters::tr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (199 samples, 15.83%)</title><rect x="84.0095%" y="741" width="15.8313%" height="15" fill="rgb(226,28,11)" fg:x="1056" fg:w="199"/><text x="84.2595%" y="751.50">&lt;alloc::vec::Vec&lt;T&gt; as a..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (199 samples, 15.83%)</title><rect x="84.0095%" y="725" width="15.8313%" height="15" fill="rgb(220,26,48)" fg:x="1056" fg:w="199"/><text x="84.2595%" y="735.50">&lt;core::iter::adapters::G..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (198 samples, 15.75%)</title><rect x="84.0891%" y="709" width="15.7518%" height="15" fill="rgb(232,10,11)" fg:x="1057" fg:w="198"/><text x="84.3391%" y="719.50">&lt;plugins_core::carrying:..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (198 samples, 15.75%)</title><rect x="84.0891%" y="693" width="15.7518%" height="15" fill="rgb(252,143,50)" fg:x="1057" fg:w="198"/><text x="84.3391%" y="703.50">&lt;engine::perform::Standa..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (10 samples, 0.80%)</title><rect x="99.0453%" y="677" width="0.7955%" height="15" fill="rgb(206,58,22)" fg:x="1245" fg:w="10"/><text x="99.2953%" y="687.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="99.7613%" y="661" width="0.0796%" height="15" fill="rgb(250,9,45)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="99.7613%" y="645" width="0.0796%" height="15" fill="rgb(225,148,14)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="99.8409%" y="773" width="0.0796%" height="15" fill="rgb(205,178,40)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="783.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="99.8409%" y="757" width="0.0796%" height="15" fill="rgb(215,201,4)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="767.50"></text></g><g><title>all (1,257 samples, 100%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(219,223,24)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1167.50"></text></g><g><title>simple-bd24e590 (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(217,19,31)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1151.50">simple-bd24e590</text></g><g><title>_start (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(235,33,3)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1135.50">_start</text></g><g><title>__libc_start_main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(221,39,18)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1119.50">__libc_start_main</text></g><g><title>main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(242,162,33)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1103.50">main</text></g><g><title>std::rt::lang_start_internal (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(233,215,28)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1087.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(212,117,9)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(237,70,47)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(206,177,13)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1039.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(209,174,33)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,257 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(226,6,11)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,257 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(240,214,6)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,257 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(254,214,40)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,257 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(230,187,15)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="959.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,257 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(250,11,27)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="943.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,257 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(243,107,19)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="927.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(253,66,26)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="911.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,257 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(228,43,8)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="895.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,257 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(232,197,36)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="879.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (496 samples, 39.46%)</title><rect x="60.5410%" y="853" width="39.4590%" height="15" fill="rgb(221,182,31)" fg:x="761" fg:w="496"/><text x="60.7910%" y="863.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Rout..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (496 samples, 39.46%)</title><rect x="60.5410%" y="837" width="39.4590%" height="15" fill="rgb(244,25,36)" fg:x="761" fg:w="496"/><text x="60.7910%" y="847.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (496 samples, 39.46%)</title><rect x="60.5410%" y="821" width="39.4590%" height="15" fill="rgb(247,101,19)" fg:x="761" fg:w="496"/><text x="60.7910%" y="831.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (202 samples, 16.07%)</title><rect x="83.9300%" y="805" width="16.0700%" height="15" fill="rgb(223,117,19)" fg:x="1055" fg:w="202"/><text x="84.1800%" y="815.50">engine::session::Session:..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (202 samples, 16.07%)</title><rect x="83.9300%" y="789" width="16.0700%" height="15" fill="rgb(249,63,38)" fg:x="1055" fg:w="202"/><text x="84.1800%" y="799.50">engine::perform::Standard..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="99.9204%" y="773" width="0.0796%" height="15" fill="rgb(220,143,23)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="783.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="99.9204%" y="757" width="0.0796%" height="15" fill="rgb(252,183,22)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="99.9204%" y="741" width="0.0796%" height="15" fill="rgb(243,176,15)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="99.9204%" y="725" width="0.0796%" height="15" fill="rgb(244,204,46)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="735.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="99.9204%" y="709" width="0.0796%" height="15" fill="rgb(227,28,54)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="719.50"></text></g></svg></svg>