<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1094" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1077.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1077.00"> </text><svg id="frames" x="10" width="1180" total_samples="1241"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0806%" y="677" width="0.0806%" height="15" fill="rgb(211,27,16)" fg:x="1" fg:w="1"/><text x="0.3306%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.1612%" y="677" width="0.0806%" height="15" fill="rgb(219,216,14)" fg:x="2" fg:w="1"/><text x="0.4112%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1612%" y="661" width="0.0806%" height="15" fill="rgb(219,71,8)" fg:x="2" fg:w="1"/><text x="0.4112%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::perform::StandardPerformer&gt;&gt; (3 samples, 0.24%)</title><rect x="0.2417%" y="677" width="0.2417%" height="15" fill="rgb(223,170,53)" fg:x="3" fg:w="3"/><text x="0.4917%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.4029%" y="661" width="0.0806%" height="15" fill="rgb(246,21,26)" fg:x="5" fg:w="1"/><text x="0.6529%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4029%" y="645" width="0.0806%" height="15" fill="rgb(248,20,46)" fg:x="5" fg:w="1"/><text x="0.6529%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.7252%" y="565" width="0.2417%" height="15" fill="rgb(252,94,11)" fg:x="9" fg:w="3"/><text x="0.9752%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.9670%" y="565" width="0.2417%" height="15" fill="rgb(236,163,8)" fg:x="12" fg:w="3"/><text x="1.2170%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1281%" y="549" width="0.0806%" height="15" fill="rgb(217,221,45)" fg:x="14" fg:w="1"/><text x="1.3781%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="1.2087%" y="549" width="0.1612%" height="15" fill="rgb(238,38,17)" fg:x="15" fg:w="2"/><text x="1.4587%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="1.2087%" y="533" width="0.1612%" height="15" fill="rgb(242,210,23)" fg:x="15" fg:w="2"/><text x="1.4587%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.2087%" y="517" width="0.1612%" height="15" fill="rgb(250,86,53)" fg:x="15" fg:w="2"/><text x="1.4587%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3699%" y="549" width="0.0806%" height="15" fill="rgb(223,168,25)" fg:x="17" fg:w="1"/><text x="1.6199%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="1.4504%" y="549" width="0.4029%" height="15" fill="rgb(251,189,4)" fg:x="18" fg:w="5"/><text x="1.7004%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.6116%" y="533" width="0.2417%" height="15" fill="rgb(245,19,28)" fg:x="20" fg:w="3"/><text x="1.8616%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.8533%" y="533" width="0.1612%" height="15" fill="rgb(207,10,34)" fg:x="23" fg:w="2"/><text x="2.1033%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.0951%" y="517" width="0.2417%" height="15" fill="rgb(235,153,31)" fg:x="26" fg:w="3"/><text x="2.3451%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.3368%" y="517" width="0.1612%" height="15" fill="rgb(228,72,37)" fg:x="29" fg:w="2"/><text x="2.5868%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.10%)</title><rect x="0.5641%" y="613" width="2.0951%" height="15" fill="rgb(215,15,16)" fg:x="7" fg:w="26"/><text x="0.8141%" y="623.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (24 samples, 1.93%)</title><rect x="0.7252%" y="597" width="1.9339%" height="15" fill="rgb(250,119,29)" fg:x="9" fg:w="24"/><text x="0.9752%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (24 samples, 1.93%)</title><rect x="0.7252%" y="581" width="1.9339%" height="15" fill="rgb(214,59,1)" fg:x="9" fg:w="24"/><text x="0.9752%" y="591.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.45%)</title><rect x="1.2087%" y="565" width="1.4504%" height="15" fill="rgb(223,109,25)" fg:x="15" fg:w="18"/><text x="1.4587%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="1.8533%" y="549" width="0.8058%" height="15" fill="rgb(230,198,22)" fg:x="23" fg:w="10"/><text x="2.1033%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="2.0145%" y="533" width="0.6446%" height="15" fill="rgb(245,184,46)" fg:x="25" fg:w="8"/><text x="2.2645%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="2.4980%" y="517" width="0.1612%" height="15" fill="rgb(253,73,16)" fg:x="31" fg:w="2"/><text x="2.7480%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.4980%" y="501" width="0.1612%" height="15" fill="rgb(206,94,45)" fg:x="31" fg:w="2"/><text x="2.7480%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.4980%" y="485" width="0.1612%" height="15" fill="rgb(236,83,27)" fg:x="31" fg:w="2"/><text x="2.7480%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 2.26%)</title><rect x="0.4835%" y="629" width="2.2562%" height="15" fill="rgb(220,196,8)" fg:x="6" fg:w="28"/><text x="0.7335%" y="639.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6591%" y="613" width="0.0806%" height="15" fill="rgb(254,185,14)" fg:x="33" fg:w="1"/><text x="2.9091%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 3.06%)</title><rect x="0.0000%" y="693" width="3.0620%" height="15" fill="rgb(226,50,22)" fg:x="0" fg:w="38"/><text x="0.2500%" y="703.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (32 samples, 2.58%)</title><rect x="0.4835%" y="677" width="2.5786%" height="15" fill="rgb(253,147,0)" fg:x="6" fg:w="32"/><text x="0.7335%" y="687.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 2.58%)</title><rect x="0.4835%" y="661" width="2.5786%" height="15" fill="rgb(252,46,33)" fg:x="6" fg:w="32"/><text x="0.7335%" y="671.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (32 samples, 2.58%)</title><rect x="0.4835%" y="645" width="2.5786%" height="15" fill="rgb(242,22,54)" fg:x="6" fg:w="32"/><text x="0.7335%" y="655.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (4 samples, 0.32%)</title><rect x="2.7397%" y="629" width="0.3223%" height="15" fill="rgb(223,178,32)" fg:x="34" fg:w="4"/><text x="2.9897%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.8203%" y="613" width="0.2417%" height="15" fill="rgb(214,106,53)" fg:x="35" fg:w="3"/><text x="3.0703%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="3.1426%" y="613" width="0.1612%" height="15" fill="rgb(232,65,50)" fg:x="39" fg:w="2"/><text x="3.3926%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="3.2232%" y="597" width="0.0806%" height="15" fill="rgb(231,110,28)" fg:x="40" fg:w="1"/><text x="3.4732%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="3.2232%" y="581" width="0.0806%" height="15" fill="rgb(216,71,40)" fg:x="40" fg:w="1"/><text x="3.4732%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="3.2232%" y="565" width="0.0806%" height="15" fill="rgb(229,89,53)" fg:x="40" fg:w="1"/><text x="3.4732%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="3.2232%" y="549" width="0.0806%" height="15" fill="rgb(210,124,14)" fg:x="40" fg:w="1"/><text x="3.4732%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.2232%" y="533" width="0.0806%" height="15" fill="rgb(236,213,6)" fg:x="40" fg:w="1"/><text x="3.4732%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.2232%" y="517" width="0.0806%" height="15" fill="rgb(228,41,5)" fg:x="40" fg:w="1"/><text x="3.4732%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.2232%" y="501" width="0.0806%" height="15" fill="rgb(221,167,25)" fg:x="40" fg:w="1"/><text x="3.4732%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.2232%" y="485" width="0.0806%" height="15" fill="rgb(228,144,37)" fg:x="40" fg:w="1"/><text x="3.4732%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="3.2232%" y="469" width="0.0806%" height="15" fill="rgb(227,189,38)" fg:x="40" fg:w="1"/><text x="3.4732%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.2232%" y="453" width="0.0806%" height="15" fill="rgb(218,8,2)" fg:x="40" fg:w="1"/><text x="3.4732%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.2232%" y="437" width="0.0806%" height="15" fill="rgb(209,61,28)" fg:x="40" fg:w="1"/><text x="3.4732%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.2232%" y="421" width="0.0806%" height="15" fill="rgb(233,140,39)" fg:x="40" fg:w="1"/><text x="3.4732%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="3.2232%" y="405" width="0.0806%" height="15" fill="rgb(251,66,48)" fg:x="40" fg:w="1"/><text x="3.4732%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.2232%" y="389" width="0.0806%" height="15" fill="rgb(210,44,45)" fg:x="40" fg:w="1"/><text x="3.4732%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="3.2232%" y="373" width="0.0806%" height="15" fill="rgb(214,136,46)" fg:x="40" fg:w="1"/><text x="3.4732%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="3.2232%" y="357" width="0.0806%" height="15" fill="rgb(207,130,50)" fg:x="40" fg:w="1"/><text x="3.4732%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.2232%" y="341" width="0.0806%" height="15" fill="rgb(228,102,49)" fg:x="40" fg:w="1"/><text x="3.4732%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="3.3038%" y="613" width="0.1612%" height="15" fill="rgb(253,55,1)" fg:x="41" fg:w="2"/><text x="3.5538%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="3.3844%" y="597" width="0.0806%" height="15" fill="rgb(238,222,9)" fg:x="42" fg:w="1"/><text x="3.6344%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="3.3844%" y="581" width="0.0806%" height="15" fill="rgb(246,99,6)" fg:x="42" fg:w="1"/><text x="3.6344%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.3844%" y="565" width="0.0806%" height="15" fill="rgb(219,110,26)" fg:x="42" fg:w="1"/><text x="3.6344%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.3844%" y="549" width="0.0806%" height="15" fill="rgb(239,160,33)" fg:x="42" fg:w="1"/><text x="3.6344%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="3.4649%" y="613" width="0.0806%" height="15" fill="rgb(220,202,23)" fg:x="43" fg:w="1"/><text x="3.7149%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.4649%" y="597" width="0.0806%" height="15" fill="rgb(208,80,26)" fg:x="43" fg:w="1"/><text x="3.7149%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="3.6261%" y="501" width="0.0806%" height="15" fill="rgb(243,85,7)" fg:x="45" fg:w="1"/><text x="3.8761%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="3.7873%" y="485" width="0.2417%" height="15" fill="rgb(228,77,47)" fg:x="47" fg:w="3"/><text x="4.0373%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="3.7873%" y="469" width="0.2417%" height="15" fill="rgb(212,226,8)" fg:x="47" fg:w="3"/><text x="4.0373%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="3.9484%" y="453" width="0.0806%" height="15" fill="rgb(241,120,54)" fg:x="49" fg:w="1"/><text x="4.1984%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.9484%" y="437" width="0.0806%" height="15" fill="rgb(226,80,16)" fg:x="49" fg:w="1"/><text x="4.1984%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0290%" y="485" width="0.0806%" height="15" fill="rgb(240,76,13)" fg:x="50" fg:w="1"/><text x="4.2790%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.1096%" y="421" width="0.0806%" height="15" fill="rgb(252,74,8)" fg:x="51" fg:w="1"/><text x="4.3596%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="4.1096%" y="485" width="0.1612%" height="15" fill="rgb(244,155,2)" fg:x="51" fg:w="2"/><text x="4.3596%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="4.1096%" y="469" width="0.1612%" height="15" fill="rgb(215,81,35)" fg:x="51" fg:w="2"/><text x="4.3596%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="4.1096%" y="453" width="0.1612%" height="15" fill="rgb(206,55,2)" fg:x="51" fg:w="2"/><text x="4.3596%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="4.1096%" y="437" width="0.1612%" height="15" fill="rgb(231,2,34)" fg:x="51" fg:w="2"/><text x="4.3596%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="4.1902%" y="421" width="0.0806%" height="15" fill="rgb(242,176,48)" fg:x="52" fg:w="1"/><text x="4.4402%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.1902%" y="405" width="0.0806%" height="15" fill="rgb(249,31,36)" fg:x="52" fg:w="1"/><text x="4.4402%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (11 samples, 0.89%)</title><rect x="3.5455%" y="597" width="0.8864%" height="15" fill="rgb(205,18,17)" fg:x="44" fg:w="11"/><text x="3.7955%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (11 samples, 0.89%)</title><rect x="3.5455%" y="581" width="0.8864%" height="15" fill="rgb(254,130,5)" fg:x="44" fg:w="11"/><text x="3.7955%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.89%)</title><rect x="3.5455%" y="565" width="0.8864%" height="15" fill="rgb(229,42,45)" fg:x="44" fg:w="11"/><text x="3.7955%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.89%)</title><rect x="3.5455%" y="549" width="0.8864%" height="15" fill="rgb(245,95,25)" fg:x="44" fg:w="11"/><text x="3.7955%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.81%)</title><rect x="3.6261%" y="533" width="0.8058%" height="15" fill="rgb(249,193,38)" fg:x="45" fg:w="10"/><text x="3.8761%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="3.6261%" y="517" width="0.8058%" height="15" fill="rgb(241,140,43)" fg:x="45" fg:w="10"/><text x="3.8761%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.73%)</title><rect x="3.7067%" y="501" width="0.7252%" height="15" fill="rgb(245,78,48)" fg:x="46" fg:w="9"/><text x="3.9567%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="4.2707%" y="485" width="0.1612%" height="15" fill="rgb(214,92,39)" fg:x="53" fg:w="2"/><text x="4.5207%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.2707%" y="469" width="0.1612%" height="15" fill="rgb(211,189,14)" fg:x="53" fg:w="2"/><text x="4.5207%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="4.2707%" y="453" width="0.1612%" height="15" fill="rgb(218,7,24)" fg:x="53" fg:w="2"/><text x="4.5207%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="4.2707%" y="437" width="0.1612%" height="15" fill="rgb(224,200,49)" fg:x="53" fg:w="2"/><text x="4.5207%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.2707%" y="421" width="0.1612%" height="15" fill="rgb(218,210,14)" fg:x="53" fg:w="2"/><text x="4.5207%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="4.3513%" y="405" width="0.0806%" height="15" fill="rgb(234,142,31)" fg:x="54" fg:w="1"/><text x="4.6013%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.3513%" y="389" width="0.0806%" height="15" fill="rgb(227,165,2)" fg:x="54" fg:w="1"/><text x="4.6013%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.3513%" y="373" width="0.0806%" height="15" fill="rgb(232,44,46)" fg:x="54" fg:w="1"/><text x="4.6013%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.5125%" y="533" width="0.0806%" height="15" fill="rgb(236,149,47)" fg:x="56" fg:w="1"/><text x="4.7625%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="4.4319%" y="549" width="0.2417%" height="15" fill="rgb(227,45,31)" fg:x="55" fg:w="3"/><text x="4.6819%" y="559.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="4.5931%" y="533" width="0.0806%" height="15" fill="rgb(240,176,51)" fg:x="57" fg:w="1"/><text x="4.8431%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="4.5931%" y="517" width="0.0806%" height="15" fill="rgb(249,146,41)" fg:x="57" fg:w="1"/><text x="4.8431%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.6737%" y="549" width="0.0806%" height="15" fill="rgb(213,208,4)" fg:x="58" fg:w="1"/><text x="4.9237%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="4.7542%" y="517" width="0.0806%" height="15" fill="rgb(245,84,36)" fg:x="59" fg:w="1"/><text x="5.0042%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.7542%" y="501" width="0.0806%" height="15" fill="rgb(254,84,18)" fg:x="59" fg:w="1"/><text x="5.0042%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="4.8348%" y="517" width="0.3223%" height="15" fill="rgb(225,38,54)" fg:x="60" fg:w="4"/><text x="5.0848%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.0766%" y="501" width="0.0806%" height="15" fill="rgb(246,50,30)" fg:x="63" fg:w="1"/><text x="5.3266%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="5.0766%" y="485" width="0.0806%" height="15" fill="rgb(246,148,9)" fg:x="63" fg:w="1"/><text x="5.3266%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="5.1571%" y="437" width="0.0806%" height="15" fill="rgb(223,75,4)" fg:x="64" fg:w="1"/><text x="5.4071%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="5.2377%" y="421" width="0.0806%" height="15" fill="rgb(239,148,41)" fg:x="65" fg:w="1"/><text x="5.4877%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (30 samples, 2.42%)</title><rect x="3.0620%" y="645" width="2.4174%" height="15" fill="rgb(205,195,3)" fg:x="38" fg:w="30"/><text x="3.3120%" y="655.50">&lt;e..</text></g><g><title>engine::internal::Entities::add_persisted (30 samples, 2.42%)</title><rect x="3.0620%" y="629" width="2.4174%" height="15" fill="rgb(254,161,1)" fg:x="38" fg:w="30"/><text x="3.3120%" y="639.50">en..</text></g><g><title>kernel::model::deserialize_entity (24 samples, 1.93%)</title><rect x="3.5455%" y="613" width="1.9339%" height="15" fill="rgb(211,229,8)" fg:x="44" fg:w="24"/><text x="3.7955%" y="623.50">k..</text></g><g><title>serde_json::de::from_trait (13 samples, 1.05%)</title><rect x="4.4319%" y="597" width="1.0475%" height="15" fill="rgb(220,97,9)" fg:x="55" fg:w="13"/><text x="4.6819%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.05%)</title><rect x="4.4319%" y="581" width="1.0475%" height="15" fill="rgb(240,218,8)" fg:x="55" fg:w="13"/><text x="4.6819%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="4.4319%" y="565" width="1.0475%" height="15" fill="rgb(250,44,0)" fg:x="55" fg:w="13"/><text x="4.6819%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.73%)</title><rect x="4.7542%" y="549" width="0.7252%" height="15" fill="rgb(236,41,53)" fg:x="59" fg:w="9"/><text x="5.0042%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="4.7542%" y="533" width="0.7252%" height="15" fill="rgb(218,227,13)" fg:x="59" fg:w="9"/><text x="5.0042%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="5.1571%" y="517" width="0.3223%" height="15" fill="rgb(217,94,32)" fg:x="64" fg:w="4"/><text x="5.4071%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="5.1571%" y="501" width="0.3223%" height="15" fill="rgb(213,217,12)" fg:x="64" fg:w="4"/><text x="5.4071%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="5.1571%" y="485" width="0.3223%" height="15" fill="rgb(229,13,46)" fg:x="64" fg:w="4"/><text x="5.4071%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="5.1571%" y="469" width="0.3223%" height="15" fill="rgb(243,139,5)" fg:x="64" fg:w="4"/><text x="5.4071%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="5.1571%" y="453" width="0.3223%" height="15" fill="rgb(249,38,45)" fg:x="64" fg:w="4"/><text x="5.4071%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="5.2377%" y="437" width="0.2417%" height="15" fill="rgb(216,70,11)" fg:x="65" fg:w="3"/><text x="5.4877%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="5.3183%" y="421" width="0.1612%" height="15" fill="rgb(253,101,25)" fg:x="66" fg:w="2"/><text x="5.5683%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="5.3183%" y="405" width="0.1612%" height="15" fill="rgb(207,197,30)" fg:x="66" fg:w="2"/><text x="5.5683%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.3989%" y="389" width="0.0806%" height="15" fill="rgb(238,87,13)" fg:x="67" fg:w="1"/><text x="5.6489%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.3989%" y="373" width="0.0806%" height="15" fill="rgb(215,155,8)" fg:x="67" fg:w="1"/><text x="5.6489%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="5.3989%" y="357" width="0.0806%" height="15" fill="rgb(239,166,38)" fg:x="67" fg:w="1"/><text x="5.6489%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (31 samples, 2.50%)</title><rect x="3.0620%" y="661" width="2.4980%" height="15" fill="rgb(240,194,35)" fg:x="38" fg:w="31"/><text x="3.3120%" y="671.50">&lt;e..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="5.4795%" y="645" width="0.0806%" height="15" fill="rgb(219,10,44)" fg:x="68" fg:w="1"/><text x="5.7295%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="5.4795%" y="629" width="0.0806%" height="15" fill="rgb(251,220,35)" fg:x="68" fg:w="1"/><text x="5.7295%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="5.4795%" y="613" width="0.0806%" height="15" fill="rgb(218,117,13)" fg:x="68" fg:w="1"/><text x="5.7295%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.4795%" y="597" width="0.0806%" height="15" fill="rgb(221,213,40)" fg:x="68" fg:w="1"/><text x="5.7295%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.4795%" y="581" width="0.0806%" height="15" fill="rgb(251,224,35)" fg:x="68" fg:w="1"/><text x="5.7295%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="5.4795%" y="565" width="0.0806%" height="15" fill="rgb(241,33,39)" fg:x="68" fg:w="1"/><text x="5.7295%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="5.4795%" y="549" width="0.0806%" height="15" fill="rgb(222,74,17)" fg:x="68" fg:w="1"/><text x="5.7295%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.4795%" y="533" width="0.0806%" height="15" fill="rgb(225,103,0)" fg:x="68" fg:w="1"/><text x="5.7295%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.4795%" y="517" width="0.0806%" height="15" fill="rgb(240,0,12)" fg:x="68" fg:w="1"/><text x="5.7295%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="5.5600%" y="661" width="0.0806%" height="15" fill="rgb(233,213,37)" fg:x="69" fg:w="1"/><text x="5.8100%" y="671.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="5.6406%" y="661" width="0.0806%" height="15" fill="rgb(225,84,52)" fg:x="70" fg:w="1"/><text x="5.8906%" y="671.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="5.7212%" y="661" width="0.1612%" height="15" fill="rgb(247,160,51)" fg:x="71" fg:w="2"/><text x="5.9712%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="5.7212%" y="645" width="0.1612%" height="15" fill="rgb(244,60,51)" fg:x="71" fg:w="2"/><text x="5.9712%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="5.8018%" y="629" width="0.0806%" height="15" fill="rgb(233,114,7)" fg:x="72" fg:w="1"/><text x="6.0518%" y="639.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.8018%" y="613" width="0.0806%" height="15" fill="rgb(246,136,16)" fg:x="72" fg:w="1"/><text x="6.0518%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="5.8018%" y="597" width="0.0806%" height="15" fill="rgb(243,114,45)" fg:x="72" fg:w="1"/><text x="6.0518%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="5.8018%" y="581" width="0.0806%" height="15" fill="rgb(247,183,43)" fg:x="72" fg:w="1"/><text x="6.0518%" y="591.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="5.8824%" y="661" width="0.0806%" height="15" fill="rgb(251,210,42)" fg:x="73" fg:w="1"/><text x="6.1324%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="5.8824%" y="645" width="0.0806%" height="15" fill="rgb(221,88,35)" fg:x="73" fg:w="1"/><text x="6.1324%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.8824%" y="629" width="0.0806%" height="15" fill="rgb(242,21,20)" fg:x="73" fg:w="1"/><text x="6.1324%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="5.8824%" y="613" width="0.0806%" height="15" fill="rgb(233,226,36)" fg:x="73" fg:w="1"/><text x="6.1324%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.8824%" y="597" width="0.0806%" height="15" fill="rgb(243,189,34)" fg:x="73" fg:w="1"/><text x="6.1324%" y="607.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="5.9629%" y="613" width="0.1612%" height="15" fill="rgb(207,145,50)" fg:x="74" fg:w="2"/><text x="6.2129%" y="623.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="5.9629%" y="597" width="0.1612%" height="15" fill="rgb(242,1,50)" fg:x="74" fg:w="2"/><text x="6.2129%" y="607.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="6.0435%" y="581" width="0.0806%" height="15" fill="rgb(231,65,32)" fg:x="75" fg:w="1"/><text x="6.2935%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.1241%" y="597" width="0.0806%" height="15" fill="rgb(208,68,49)" fg:x="76" fg:w="1"/><text x="6.3741%" y="607.50"></text></g><g><title>libloading::os::unix::Library::open (17 samples, 1.37%)</title><rect x="5.9629%" y="629" width="1.3699%" height="15" fill="rgb(253,54,49)" fg:x="74" fg:w="17"/><text x="6.2129%" y="639.50"></text></g><g><title>dlopen (15 samples, 1.21%)</title><rect x="6.1241%" y="613" width="1.2087%" height="15" fill="rgb(245,186,24)" fg:x="76" fg:w="15"/><text x="6.3741%" y="623.50"></text></g><g><title>_dl_catch_error (14 samples, 1.13%)</title><rect x="6.2047%" y="597" width="1.1281%" height="15" fill="rgb(209,2,41)" fg:x="77" fg:w="14"/><text x="6.4547%" y="607.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.13%)</title><rect x="6.2047%" y="581" width="1.1281%" height="15" fill="rgb(242,208,54)" fg:x="77" fg:w="14"/><text x="6.4547%" y="591.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.13%)</title><rect x="6.2047%" y="565" width="1.1281%" height="15" fill="rgb(225,9,51)" fg:x="77" fg:w="14"/><text x="6.4547%" y="575.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.05%)</title><rect x="6.2853%" y="549" width="1.0475%" height="15" fill="rgb(207,207,25)" fg:x="78" fg:w="13"/><text x="6.5353%" y="559.50"></text></g><g><title>_dl_signal_error (2 samples, 0.16%)</title><rect x="7.1716%" y="533" width="0.1612%" height="15" fill="rgb(253,96,18)" fg:x="89" fg:w="2"/><text x="7.4216%" y="543.50"></text></g><g><title>_dl_exception_create (2 samples, 0.16%)</title><rect x="7.1716%" y="517" width="0.1612%" height="15" fill="rgb(252,215,20)" fg:x="89" fg:w="2"/><text x="7.4216%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.2522%" y="501" width="0.0806%" height="15" fill="rgb(245,227,26)" fg:x="90" fg:w="1"/><text x="7.5022%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (18 samples, 1.45%)</title><rect x="5.9629%" y="645" width="1.4504%" height="15" fill="rgb(241,208,0)" fg:x="74" fg:w="18"/><text x="6.2129%" y="655.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="7.3328%" y="629" width="0.0806%" height="15" fill="rgb(224,130,10)" fg:x="91" fg:w="1"/><text x="7.5828%" y="639.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="7.3328%" y="613" width="0.0806%" height="15" fill="rgb(237,29,0)" fg:x="91" fg:w="1"/><text x="7.5828%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (19 samples, 1.53%)</title><rect x="5.9629%" y="661" width="1.5310%" height="15" fill="rgb(219,27,41)" fg:x="74" fg:w="19"/><text x="6.2129%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="7.4134%" y="645" width="0.0806%" height="15" fill="rgb(245,101,19)" fg:x="92" fg:w="1"/><text x="7.6634%" y="655.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="7.4134%" y="629" width="0.0806%" height="15" fill="rgb(243,44,37)" fg:x="92" fg:w="1"/><text x="7.6634%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="7.4940%" y="645" width="0.0806%" height="15" fill="rgb(228,213,43)" fg:x="93" fg:w="1"/><text x="7.7440%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.4940%" y="629" width="0.0806%" height="15" fill="rgb(219,163,21)" fg:x="93" fg:w="1"/><text x="7.7440%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="7.4940%" y="661" width="0.1612%" height="15" fill="rgb(234,86,24)" fg:x="93" fg:w="2"/><text x="7.7440%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="7.5745%" y="645" width="0.0806%" height="15" fill="rgb(225,10,24)" fg:x="94" fg:w="1"/><text x="7.8245%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="7.5745%" y="629" width="0.0806%" height="15" fill="rgb(218,109,7)" fg:x="94" fg:w="1"/><text x="7.8245%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.5745%" y="613" width="0.0806%" height="15" fill="rgb(210,20,26)" fg:x="94" fg:w="1"/><text x="7.8245%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.5745%" y="597" width="0.0806%" height="15" fill="rgb(216,18,1)" fg:x="94" fg:w="1"/><text x="7.8245%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.5745%" y="581" width="0.0806%" height="15" fill="rgb(206,163,23)" fg:x="94" fg:w="1"/><text x="7.8245%" y="591.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (59 samples, 4.75%)</title><rect x="3.0620%" y="693" width="4.7542%" height="15" fill="rgb(229,150,31)" fg:x="38" fg:w="59"/><text x="3.3120%" y="703.50">&lt;engin..</text></g><g><title>engine::session::Session::new (59 samples, 4.75%)</title><rect x="3.0620%" y="677" width="4.7542%" height="15" fill="rgb(231,10,5)" fg:x="38" fg:w="59"/><text x="3.3120%" y="687.50">engine..</text></g><g><title>std::alloc::default_alloc_error_hook (2 samples, 0.16%)</title><rect x="7.6551%" y="661" width="0.1612%" height="15" fill="rgb(250,40,50)" fg:x="95" fg:w="2"/><text x="7.9051%" y="671.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.16%)</title><rect x="7.6551%" y="645" width="0.1612%" height="15" fill="rgb(217,119,7)" fg:x="95" fg:w="2"/><text x="7.9051%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="7.8969%" y="677" width="0.1612%" height="15" fill="rgb(245,214,40)" fg:x="98" fg:w="2"/><text x="8.1469%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="7.8969%" y="661" width="0.1612%" height="15" fill="rgb(216,187,1)" fg:x="98" fg:w="2"/><text x="8.1469%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="7.8969%" y="645" width="0.1612%" height="15" fill="rgb(237,146,21)" fg:x="98" fg:w="2"/><text x="8.1469%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="7.8969%" y="629" width="0.1612%" height="15" fill="rgb(210,174,47)" fg:x="98" fg:w="2"/><text x="8.1469%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="7.8969%" y="613" width="0.1612%" height="15" fill="rgb(218,111,39)" fg:x="98" fg:w="2"/><text x="8.1469%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="7.8969%" y="597" width="0.1612%" height="15" fill="rgb(224,95,19)" fg:x="98" fg:w="2"/><text x="8.1469%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="7.8969%" y="581" width="0.1612%" height="15" fill="rgb(234,15,38)" fg:x="98" fg:w="2"/><text x="8.1469%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="7.8969%" y="565" width="0.1612%" height="15" fill="rgb(246,56,12)" fg:x="98" fg:w="2"/><text x="8.1469%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="7.8969%" y="549" width="0.1612%" height="15" fill="rgb(247,16,17)" fg:x="98" fg:w="2"/><text x="8.1469%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="7.8969%" y="533" width="0.1612%" height="15" fill="rgb(215,151,11)" fg:x="98" fg:w="2"/><text x="8.1469%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="7.8969%" y="517" width="0.1612%" height="15" fill="rgb(225,16,24)" fg:x="98" fg:w="2"/><text x="8.1469%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="7.8969%" y="501" width="0.1612%" height="15" fill="rgb(217,117,5)" fg:x="98" fg:w="2"/><text x="8.1469%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="7.8969%" y="485" width="0.1612%" height="15" fill="rgb(246,187,53)" fg:x="98" fg:w="2"/><text x="8.1469%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0580%" y="677" width="0.0806%" height="15" fill="rgb(241,71,40)" fg:x="100" fg:w="1"/><text x="8.3080%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.2192%" y="629" width="0.0806%" height="15" fill="rgb(231,67,39)" fg:x="102" fg:w="1"/><text x="8.4692%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.2192%" y="613" width="0.0806%" height="15" fill="rgb(222,120,24)" fg:x="102" fg:w="1"/><text x="8.4692%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.2192%" y="597" width="0.0806%" height="15" fill="rgb(248,3,3)" fg:x="102" fg:w="1"/><text x="8.4692%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.2192%" y="581" width="0.0806%" height="15" fill="rgb(228,218,5)" fg:x="102" fg:w="1"/><text x="8.4692%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.2192%" y="565" width="0.0806%" height="15" fill="rgb(212,202,43)" fg:x="102" fg:w="1"/><text x="8.4692%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="8.2192%" y="549" width="0.0806%" height="15" fill="rgb(235,183,2)" fg:x="102" fg:w="1"/><text x="8.4692%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="8.2192%" y="533" width="0.0806%" height="15" fill="rgb(230,165,10)" fg:x="102" fg:w="1"/><text x="8.4692%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="8.1386%" y="645" width="0.2417%" height="15" fill="rgb(219,54,40)" fg:x="101" fg:w="3"/><text x="8.3886%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.2998%" y="629" width="0.0806%" height="15" fill="rgb(244,73,9)" fg:x="103" fg:w="1"/><text x="8.5498%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.3803%" y="645" width="0.0806%" height="15" fill="rgb(212,32,45)" fg:x="104" fg:w="1"/><text x="8.6303%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="8.3803%" y="629" width="0.0806%" height="15" fill="rgb(205,58,31)" fg:x="104" fg:w="1"/><text x="8.6303%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.3803%" y="613" width="0.0806%" height="15" fill="rgb(250,120,43)" fg:x="104" fg:w="1"/><text x="8.6303%" y="623.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.4609%" y="597" width="0.0806%" height="15" fill="rgb(235,13,10)" fg:x="105" fg:w="1"/><text x="8.7109%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.4609%" y="581" width="0.0806%" height="15" fill="rgb(232,219,31)" fg:x="105" fg:w="1"/><text x="8.7109%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.4609%" y="565" width="0.0806%" height="15" fill="rgb(218,157,51)" fg:x="105" fg:w="1"/><text x="8.7109%" y="575.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="8.4609%" y="645" width="0.1612%" height="15" fill="rgb(211,91,52)" fg:x="105" fg:w="2"/><text x="8.7109%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="8.4609%" y="629" width="0.1612%" height="15" fill="rgb(240,173,1)" fg:x="105" fg:w="2"/><text x="8.7109%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="8.4609%" y="613" width="0.1612%" height="15" fill="rgb(248,20,47)" fg:x="105" fg:w="2"/><text x="8.7109%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.5415%" y="597" width="0.0806%" height="15" fill="rgb(217,221,40)" fg:x="106" fg:w="1"/><text x="8.7915%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.5415%" y="581" width="0.0806%" height="15" fill="rgb(226,149,51)" fg:x="106" fg:w="1"/><text x="8.7915%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="8.5415%" y="565" width="0.0806%" height="15" fill="rgb(252,193,7)" fg:x="106" fg:w="1"/><text x="8.7915%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.5415%" y="549" width="0.0806%" height="15" fill="rgb(205,123,0)" fg:x="106" fg:w="1"/><text x="8.7915%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="8.6221%" y="613" width="0.2417%" height="15" fill="rgb(233,173,25)" fg:x="107" fg:w="3"/><text x="8.8721%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="8.6221%" y="597" width="0.2417%" height="15" fill="rgb(216,63,32)" fg:x="107" fg:w="3"/><text x="8.8721%" y="607.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="8.6221%" y="581" width="0.2417%" height="15" fill="rgb(209,56,45)" fg:x="107" fg:w="3"/><text x="8.8721%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="8.6221%" y="565" width="0.2417%" height="15" fill="rgb(226,111,49)" fg:x="107" fg:w="3"/><text x="8.8721%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="8.6221%" y="549" width="0.2417%" height="15" fill="rgb(244,181,21)" fg:x="107" fg:w="3"/><text x="8.8721%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.7832%" y="533" width="0.0806%" height="15" fill="rgb(222,126,15)" fg:x="109" fg:w="1"/><text x="9.0332%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.7832%" y="517" width="0.0806%" height="15" fill="rgb(222,95,17)" fg:x="109" fg:w="1"/><text x="9.0332%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="8.8638%" y="581" width="0.4835%" height="15" fill="rgb(254,46,5)" fg:x="110" fg:w="6"/><text x="9.1138%" y="591.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="8.8638%" y="565" width="0.4835%" height="15" fill="rgb(236,216,35)" fg:x="110" fg:w="6"/><text x="9.1138%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="9.1056%" y="549" width="0.2417%" height="15" fill="rgb(217,187,26)" fg:x="113" fg:w="3"/><text x="9.3556%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="9.1056%" y="533" width="0.2417%" height="15" fill="rgb(207,192,25)" fg:x="113" fg:w="3"/><text x="9.3556%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (11 samples, 0.89%)</title><rect x="8.8638%" y="597" width="0.8864%" height="15" fill="rgb(253,135,27)" fg:x="110" fg:w="11"/><text x="9.1138%" y="607.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="9.3473%" y="581" width="0.4029%" height="15" fill="rgb(211,122,29)" fg:x="116" fg:w="5"/><text x="9.5973%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.5890%" y="565" width="0.1612%" height="15" fill="rgb(233,162,40)" fg:x="119" fg:w="2"/><text x="9.8390%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.6696%" y="549" width="0.0806%" height="15" fill="rgb(222,184,47)" fg:x="120" fg:w="1"/><text x="9.9196%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.8308%" y="581" width="0.0806%" height="15" fill="rgb(249,99,23)" fg:x="122" fg:w="1"/><text x="10.0808%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.73%)</title><rect x="9.9114%" y="581" width="0.7252%" height="15" fill="rgb(214,60,12)" fg:x="123" fg:w="9"/><text x="10.1614%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.3948%" y="565" width="0.2417%" height="15" fill="rgb(250,229,36)" fg:x="129" fg:w="3"/><text x="10.6448%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="10.3948%" y="549" width="0.2417%" height="15" fill="rgb(232,195,10)" fg:x="129" fg:w="3"/><text x="10.6448%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.5560%" y="533" width="0.0806%" height="15" fill="rgb(205,213,31)" fg:x="131" fg:w="1"/><text x="10.8060%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.5560%" y="517" width="0.0806%" height="15" fill="rgb(237,43,8)" fg:x="131" fg:w="1"/><text x="10.8060%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.5560%" y="501" width="0.0806%" height="15" fill="rgb(216,208,3)" fg:x="131" fg:w="1"/><text x="10.8060%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.5560%" y="485" width="0.0806%" height="15" fill="rgb(228,179,44)" fg:x="131" fg:w="1"/><text x="10.8060%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6366%" y="533" width="0.0806%" height="15" fill="rgb(230,192,27)" fg:x="132" fg:w="1"/><text x="10.8866%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="10.6366%" y="565" width="0.1612%" height="15" fill="rgb(251,30,38)" fg:x="132" fg:w="2"/><text x="10.8866%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="10.6366%" y="549" width="0.1612%" height="15" fill="rgb(246,55,52)" fg:x="132" fg:w="2"/><text x="10.8866%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.7172%" y="533" width="0.0806%" height="15" fill="rgb(249,79,26)" fg:x="133" fg:w="1"/><text x="10.9672%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.7172%" y="517" width="0.0806%" height="15" fill="rgb(220,202,16)" fg:x="133" fg:w="1"/><text x="10.9672%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="10.7977%" y="565" width="0.1612%" height="15" fill="rgb(250,170,23)" fg:x="134" fg:w="2"/><text x="11.0477%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.7977%" y="549" width="0.1612%" height="15" fill="rgb(230,7,37)" fg:x="134" fg:w="2"/><text x="11.0477%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.8783%" y="533" width="0.0806%" height="15" fill="rgb(213,71,1)" fg:x="135" fg:w="1"/><text x="11.1283%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="10.8783%" y="517" width="0.0806%" height="15" fill="rgb(227,87,39)" fg:x="135" fg:w="1"/><text x="11.1283%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="11.0395%" y="501" width="0.1612%" height="15" fill="rgb(210,41,29)" fg:x="137" fg:w="2"/><text x="11.2895%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="11.0395%" y="549" width="0.2417%" height="15" fill="rgb(206,191,31)" fg:x="137" fg:w="3"/><text x="11.2895%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="11.0395%" y="533" width="0.2417%" height="15" fill="rgb(247,75,54)" fg:x="137" fg:w="3"/><text x="11.2895%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="11.0395%" y="517" width="0.2417%" height="15" fill="rgb(208,54,50)" fg:x="137" fg:w="3"/><text x="11.2895%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="11.2006%" y="501" width="0.0806%" height="15" fill="rgb(214,90,37)" fg:x="139" fg:w="1"/><text x="11.4506%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="11.2812%" y="533" width="0.2417%" height="15" fill="rgb(220,132,6)" fg:x="140" fg:w="3"/><text x="11.5312%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="11.2812%" y="517" width="0.2417%" height="15" fill="rgb(213,167,7)" fg:x="140" fg:w="3"/><text x="11.5312%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="11.3618%" y="501" width="0.1612%" height="15" fill="rgb(243,36,27)" fg:x="141" fg:w="2"/><text x="11.6118%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="11.3618%" y="485" width="0.1612%" height="15" fill="rgb(235,147,12)" fg:x="141" fg:w="2"/><text x="11.6118%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.4424%" y="469" width="0.0806%" height="15" fill="rgb(212,198,44)" fg:x="142" fg:w="1"/><text x="11.6924%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.4424%" y="453" width="0.0806%" height="15" fill="rgb(218,68,50)" fg:x="142" fg:w="1"/><text x="11.6924%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.4424%" y="437" width="0.0806%" height="15" fill="rgb(224,79,48)" fg:x="142" fg:w="1"/><text x="11.6924%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="11.5230%" y="517" width="0.4029%" height="15" fill="rgb(213,191,50)" fg:x="143" fg:w="5"/><text x="11.7730%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="11.6841%" y="501" width="0.2417%" height="15" fill="rgb(254,146,10)" fg:x="145" fg:w="3"/><text x="11.9341%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.8453%" y="485" width="0.0806%" height="15" fill="rgb(215,175,11)" fg:x="147" fg:w="1"/><text x="12.0953%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.8453%" y="469" width="0.0806%" height="15" fill="rgb(207,49,7)" fg:x="147" fg:w="1"/><text x="12.0953%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="11.9259%" y="501" width="0.1612%" height="15" fill="rgb(234,144,29)" fg:x="148" fg:w="2"/><text x="12.1759%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.9259%" y="485" width="0.1612%" height="15" fill="rgb(213,222,48)" fg:x="148" fg:w="2"/><text x="12.1759%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="11.9259%" y="517" width="0.3223%" height="15" fill="rgb(222,8,6)" fg:x="148" fg:w="4"/><text x="12.1759%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="12.0870%" y="501" width="0.1612%" height="15" fill="rgb(221,114,49)" fg:x="150" fg:w="2"/><text x="12.3370%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.37%)</title><rect x="10.9589%" y="565" width="1.3699%" height="15" fill="rgb(250,140,42)" fg:x="136" fg:w="17"/><text x="11.2089%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="11.2812%" y="549" width="1.0475%" height="15" fill="rgb(250,150,27)" fg:x="140" fg:w="13"/><text x="11.5312%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="11.5230%" y="533" width="0.8058%" height="15" fill="rgb(252,159,3)" fg:x="143" fg:w="10"/><text x="11.7730%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.2482%" y="517" width="0.0806%" height="15" fill="rgb(241,182,3)" fg:x="152" fg:w="1"/><text x="12.4982%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.5705%" y="533" width="0.0806%" height="15" fill="rgb(236,3,9)" fg:x="156" fg:w="1"/><text x="12.8205%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.10%)</title><rect x="10.6366%" y="581" width="2.0951%" height="15" fill="rgb(223,227,51)" fg:x="132" fg:w="26"/><text x="10.8866%" y="591.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="12.3288%" y="565" width="0.4029%" height="15" fill="rgb(232,133,30)" fg:x="153" fg:w="5"/><text x="12.5788%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="12.5705%" y="549" width="0.1612%" height="15" fill="rgb(209,93,27)" fg:x="156" fg:w="2"/><text x="12.8205%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="12.6511%" y="533" width="0.0806%" height="15" fill="rgb(208,108,34)" fg:x="157" fg:w="1"/><text x="12.9011%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (42 samples, 3.38%)</title><rect x="9.7502%" y="597" width="3.3844%" height="15" fill="rgb(215,189,13)" fg:x="121" fg:w="42"/><text x="10.0002%" y="607.50">ser..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="12.7317%" y="581" width="0.4029%" height="15" fill="rgb(206,88,23)" fg:x="158" fg:w="5"/><text x="12.9817%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="12.7317%" y="565" width="0.4029%" height="15" fill="rgb(240,173,0)" fg:x="158" fg:w="5"/><text x="12.9817%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="12.7317%" y="549" width="0.4029%" height="15" fill="rgb(223,106,52)" fg:x="158" fg:w="5"/><text x="12.9817%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="12.8122%" y="533" width="0.3223%" height="15" fill="rgb(206,130,16)" fg:x="159" fg:w="4"/><text x="13.0622%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="12.8122%" y="517" width="0.3223%" height="15" fill="rgb(220,54,25)" fg:x="159" fg:w="4"/><text x="13.0622%" y="527.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="12.8122%" y="501" width="0.3223%" height="15" fill="rgb(210,4,38)" fg:x="159" fg:w="4"/><text x="13.0622%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (54 samples, 4.35%)</title><rect x="8.8638%" y="613" width="4.3513%" height="15" fill="rgb(238,94,39)" fg:x="110" fg:w="54"/><text x="9.1138%" y="623.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.1346%" y="597" width="0.0806%" height="15" fill="rgb(234,124,34)" fg:x="163" fg:w="1"/><text x="13.3846%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="13.3763%" y="581" width="0.1612%" height="15" fill="rgb(221,91,40)" fg:x="166" fg:w="2"/><text x="13.6263%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.5375%" y="581" width="0.0806%" height="15" fill="rgb(246,53,28)" fg:x="168" fg:w="1"/><text x="13.7875%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6986%" y="565" width="0.0806%" height="15" fill="rgb(229,109,7)" fg:x="170" fg:w="1"/><text x="13.9486%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0210%" y="549" width="0.0806%" height="15" fill="rgb(249,117,8)" fg:x="174" fg:w="1"/><text x="14.2710%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="14.1015%" y="549" width="0.2417%" height="15" fill="rgb(210,181,1)" fg:x="175" fg:w="3"/><text x="14.3515%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="14.1015%" y="533" width="0.2417%" height="15" fill="rgb(211,66,1)" fg:x="175" fg:w="3"/><text x="14.3515%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="14.3433%" y="533" width="0.2417%" height="15" fill="rgb(221,90,14)" fg:x="178" fg:w="3"/><text x="14.5933%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.5850%" y="533" width="0.0806%" height="15" fill="rgb(219,222,44)" fg:x="181" fg:w="1"/><text x="14.8350%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.5850%" y="517" width="0.0806%" height="15" fill="rgb(246,34,33)" fg:x="181" fg:w="1"/><text x="14.8350%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="14.6656%" y="533" width="0.0806%" height="15" fill="rgb(227,135,41)" fg:x="182" fg:w="1"/><text x="14.9156%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.6656%" y="517" width="0.0806%" height="15" fill="rgb(226,15,14)" fg:x="182" fg:w="1"/><text x="14.9156%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.6656%" y="501" width="0.0806%" height="15" fill="rgb(236,148,47)" fg:x="182" fg:w="1"/><text x="14.9156%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.7462%" y="517" width="0.0806%" height="15" fill="rgb(233,162,52)" fg:x="183" fg:w="1"/><text x="14.9962%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.7462%" y="501" width="0.0806%" height="15" fill="rgb(244,35,28)" fg:x="183" fg:w="1"/><text x="14.9962%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.8268%" y="485" width="0.0806%" height="15" fill="rgb(205,121,10)" fg:x="184" fg:w="1"/><text x="15.0768%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.8268%" y="469" width="0.0806%" height="15" fill="rgb(250,58,18)" fg:x="184" fg:w="1"/><text x="15.0768%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (22 samples, 1.77%)</title><rect x="13.2151%" y="613" width="1.7728%" height="15" fill="rgb(216,37,13)" fg:x="164" fg:w="22"/><text x="13.4651%" y="623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (22 samples, 1.77%)</title><rect x="13.2151%" y="597" width="1.7728%" height="15" fill="rgb(221,215,42)" fg:x="164" fg:w="22"/><text x="13.4651%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.37%)</title><rect x="13.6180%" y="581" width="1.3699%" height="15" fill="rgb(217,214,19)" fg:x="169" fg:w="17"/><text x="13.8680%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="13.7792%" y="565" width="1.2087%" height="15" fill="rgb(233,139,13)" fg:x="171" fg:w="15"/><text x="14.0292%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="14.3433%" y="549" width="0.6446%" height="15" fill="rgb(247,168,23)" fg:x="178" fg:w="8"/><text x="14.5933%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="14.7462%" y="533" width="0.2417%" height="15" fill="rgb(207,202,1)" fg:x="183" fg:w="3"/><text x="14.9962%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.8268%" y="517" width="0.1612%" height="15" fill="rgb(220,155,48)" fg:x="184" fg:w="2"/><text x="15.0768%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.8268%" y="501" width="0.1612%" height="15" fill="rgb(250,43,26)" fg:x="184" fg:w="2"/><text x="15.0768%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9073%" y="485" width="0.0806%" height="15" fill="rgb(212,190,23)" fg:x="185" fg:w="1"/><text x="15.1573%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.9879%" y="581" width="0.0806%" height="15" fill="rgb(216,39,24)" fg:x="186" fg:w="1"/><text x="15.2379%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="14.9879%" y="597" width="0.1612%" height="15" fill="rgb(252,113,16)" fg:x="186" fg:w="2"/><text x="15.2379%" y="607.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="15.0685%" y="581" width="0.0806%" height="15" fill="rgb(208,113,19)" fg:x="187" fg:w="1"/><text x="15.3185%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="15.0685%" y="565" width="0.0806%" height="15" fill="rgb(234,107,25)" fg:x="187" fg:w="1"/><text x="15.3185%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="15.2297%" y="565" width="0.3223%" height="15" fill="rgb(234,217,51)" fg:x="189" fg:w="4"/><text x="15.4797%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="15.3102%" y="549" width="0.2417%" height="15" fill="rgb(251,29,42)" fg:x="190" fg:w="3"/><text x="15.5602%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="15.3908%" y="533" width="0.1612%" height="15" fill="rgb(221,62,51)" fg:x="191" fg:w="2"/><text x="15.6408%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="15.5520%" y="565" width="0.0806%" height="15" fill="rgb(240,192,43)" fg:x="193" fg:w="1"/><text x="15.8020%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.6326%" y="549" width="0.0806%" height="15" fill="rgb(224,157,47)" fg:x="194" fg:w="1"/><text x="15.8826%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6326%" y="533" width="0.0806%" height="15" fill="rgb(226,84,45)" fg:x="194" fg:w="1"/><text x="15.8826%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="15.6326%" y="565" width="0.1612%" height="15" fill="rgb(208,207,23)" fg:x="194" fg:w="2"/><text x="15.8826%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="15.7131%" y="549" width="0.0806%" height="15" fill="rgb(253,34,51)" fg:x="195" fg:w="1"/><text x="15.9631%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.8743%" y="517" width="0.1612%" height="15" fill="rgb(227,26,34)" fg:x="197" fg:w="2"/><text x="16.1243%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.8743%" y="501" width="0.1612%" height="15" fill="rgb(245,75,19)" fg:x="197" fg:w="2"/><text x="16.1243%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9549%" y="485" width="0.0806%" height="15" fill="rgb(250,191,31)" fg:x="198" fg:w="1"/><text x="16.2049%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="16.0355%" y="517" width="0.2417%" height="15" fill="rgb(224,11,50)" fg:x="199" fg:w="3"/><text x="16.2855%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="16.0355%" y="501" width="0.2417%" height="15" fill="rgb(231,171,7)" fg:x="199" fg:w="3"/><text x="16.2855%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="16.0355%" y="485" width="0.2417%" height="15" fill="rgb(252,214,10)" fg:x="199" fg:w="3"/><text x="16.2855%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="16.0355%" y="469" width="0.2417%" height="15" fill="rgb(249,45,46)" fg:x="199" fg:w="3"/><text x="16.2855%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.1160%" y="453" width="0.1612%" height="15" fill="rgb(240,173,7)" fg:x="200" fg:w="2"/><text x="16.3660%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1966%" y="437" width="0.0806%" height="15" fill="rgb(235,214,13)" fg:x="201" fg:w="1"/><text x="16.4466%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.2772%" y="485" width="0.0806%" height="15" fill="rgb(245,156,8)" fg:x="202" fg:w="1"/><text x="16.5272%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.2772%" y="469" width="0.0806%" height="15" fill="rgb(235,46,12)" fg:x="202" fg:w="1"/><text x="16.5272%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="16.2772%" y="453" width="0.0806%" height="15" fill="rgb(221,81,14)" fg:x="202" fg:w="1"/><text x="16.5272%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="16.4384%" y="469" width="0.0806%" height="15" fill="rgb(238,207,9)" fg:x="204" fg:w="1"/><text x="16.6884%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5189%" y="453" width="0.0806%" height="15" fill="rgb(224,129,35)" fg:x="205" fg:w="1"/><text x="16.7689%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5189%" y="437" width="0.0806%" height="15" fill="rgb(243,218,34)" fg:x="205" fg:w="1"/><text x="16.7689%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7607%" y="421" width="0.0806%" height="15" fill="rgb(220,166,13)" fg:x="208" fg:w="1"/><text x="17.0107%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7607%" y="405" width="0.0806%" height="15" fill="rgb(227,167,49)" fg:x="208" fg:w="1"/><text x="17.0107%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="16.9218%" y="389" width="0.3223%" height="15" fill="rgb(234,142,12)" fg:x="210" fg:w="4"/><text x="17.1718%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="16.9218%" y="373" width="0.3223%" height="15" fill="rgb(207,100,48)" fg:x="210" fg:w="4"/><text x="17.1718%" y="383.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="16.9218%" y="357" width="0.3223%" height="15" fill="rgb(210,25,14)" fg:x="210" fg:w="4"/><text x="17.1718%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="16.9218%" y="405" width="0.4029%" height="15" fill="rgb(246,116,27)" fg:x="210" fg:w="5"/><text x="17.1718%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="17.2442%" y="389" width="0.0806%" height="15" fill="rgb(214,193,42)" fg:x="214" fg:w="1"/><text x="17.4942%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="17.2442%" y="373" width="0.0806%" height="15" fill="rgb(214,122,8)" fg:x="214" fg:w="1"/><text x="17.4942%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.89%)</title><rect x="16.6801%" y="437" width="0.8864%" height="15" fill="rgb(244,173,18)" fg:x="207" fg:w="11"/><text x="16.9301%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.73%)</title><rect x="16.8413%" y="421" width="0.7252%" height="15" fill="rgb(232,68,19)" fg:x="209" fg:w="9"/><text x="17.0913%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="17.3247%" y="405" width="0.2417%" height="15" fill="rgb(236,224,1)" fg:x="215" fg:w="3"/><text x="17.5747%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.37%)</title><rect x="16.2772%" y="501" width="1.3699%" height="15" fill="rgb(240,11,8)" fg:x="202" fg:w="17"/><text x="16.5272%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.29%)</title><rect x="16.3578%" y="485" width="1.2893%" height="15" fill="rgb(244,159,20)" fg:x="203" fg:w="16"/><text x="16.6078%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="16.5189%" y="469" width="1.1281%" height="15" fill="rgb(240,223,54)" fg:x="205" fg:w="14"/><text x="16.7689%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.05%)</title><rect x="16.5995%" y="453" width="1.0475%" height="15" fill="rgb(237,146,5)" fg:x="206" fg:w="13"/><text x="16.8495%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="17.5665%" y="437" width="0.0806%" height="15" fill="rgb(218,221,32)" fg:x="218" fg:w="1"/><text x="17.8165%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.5665%" y="421" width="0.0806%" height="15" fill="rgb(244,96,26)" fg:x="218" fg:w="1"/><text x="17.8165%" y="431.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (113 samples, 9.11%)</title><rect x="8.6221%" y="645" width="9.1056%" height="15" fill="rgb(245,184,37)" fg:x="107" fg:w="113"/><text x="8.8721%" y="655.50">engine::inter..</text></g><g><title>engine::session::SavesEntities::check_for_changes (113 samples, 9.11%)</title><rect x="8.6221%" y="629" width="9.1056%" height="15" fill="rgb(248,91,47)" fg:x="107" fg:w="113"/><text x="8.8721%" y="639.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (34 samples, 2.74%)</title><rect x="14.9879%" y="613" width="2.7397%" height="15" fill="rgb(243,199,8)" fg:x="186" fg:w="34"/><text x="15.2379%" y="623.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (32 samples, 2.58%)</title><rect x="15.1491%" y="597" width="2.5786%" height="15" fill="rgb(249,12,15)" fg:x="188" fg:w="32"/><text x="15.3991%" y="607.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 2.58%)</title><rect x="15.1491%" y="581" width="2.5786%" height="15" fill="rgb(245,97,12)" fg:x="188" fg:w="32"/><text x="15.3991%" y="591.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.93%)</title><rect x="15.7937%" y="565" width="1.9339%" height="15" fill="rgb(244,61,1)" fg:x="196" fg:w="24"/><text x="16.0437%" y="575.50">s..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 1.85%)</title><rect x="15.8743%" y="549" width="1.8533%" height="15" fill="rgb(222,194,10)" fg:x="197" fg:w="23"/><text x="16.1243%" y="559.50">&lt;..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (23 samples, 1.85%)</title><rect x="15.8743%" y="533" width="1.8533%" height="15" fill="rgb(226,178,8)" fg:x="197" fg:w="23"/><text x="16.1243%" y="543.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.45%)</title><rect x="16.2772%" y="517" width="1.4504%" height="15" fill="rgb(241,32,34)" fg:x="202" fg:w="18"/><text x="16.5272%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6471%" y="501" width="0.0806%" height="15" fill="rgb(254,26,6)" fg:x="219" fg:w="1"/><text x="17.8971%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="17.7276%" y="613" width="0.0806%" height="15" fill="rgb(249,71,11)" fg:x="220" fg:w="1"/><text x="17.9776%" y="623.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="17.7276%" y="597" width="0.0806%" height="15" fill="rgb(232,170,27)" fg:x="220" fg:w="1"/><text x="17.9776%" y="607.50"></text></g><g><title>engine::session::Session::flush (121 samples, 9.75%)</title><rect x="8.1386%" y="677" width="9.7502%" height="15" fill="rgb(214,223,17)" fg:x="101" fg:w="121"/><text x="8.3886%" y="687.50">engine::sessio..</text></g><g><title>engine::session::Session::save_entity_changes (121 samples, 9.75%)</title><rect x="8.1386%" y="661" width="9.7502%" height="15" fill="rgb(250,18,15)" fg:x="101" fg:w="121"/><text x="8.3886%" y="671.50">engine::sessio..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="17.7276%" y="645" width="0.1612%" height="15" fill="rgb(212,153,51)" fg:x="220" fg:w="2"/><text x="17.9776%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="17.7276%" y="629" width="0.1612%" height="15" fill="rgb(219,194,12)" fg:x="220" fg:w="2"/><text x="17.9776%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="17.8082%" y="613" width="0.0806%" height="15" fill="rgb(212,58,17)" fg:x="221" fg:w="1"/><text x="18.0582%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8082%" y="597" width="0.0806%" height="15" fill="rgb(254,5,10)" fg:x="221" fg:w="1"/><text x="18.0582%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8082%" y="581" width="0.0806%" height="15" fill="rgb(246,91,7)" fg:x="221" fg:w="1"/><text x="18.0582%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.8082%" y="565" width="0.0806%" height="15" fill="rgb(218,108,49)" fg:x="221" fg:w="1"/><text x="18.0582%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.8082%" y="549" width="0.0806%" height="15" fill="rgb(238,123,20)" fg:x="221" fg:w="1"/><text x="18.0582%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.8082%" y="533" width="0.0806%" height="15" fill="rgb(231,69,23)" fg:x="221" fg:w="1"/><text x="18.0582%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.8082%" y="517" width="0.0806%" height="15" fill="rgb(230,209,3)" fg:x="221" fg:w="1"/><text x="18.0582%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.8082%" y="501" width="0.0806%" height="15" fill="rgb(231,19,0)" fg:x="221" fg:w="1"/><text x="18.0582%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8888%" y="565" width="0.0806%" height="15" fill="rgb(226,192,25)" fg:x="222" fg:w="1"/><text x="18.1388%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8888%" y="549" width="0.0806%" height="15" fill="rgb(223,175,53)" fg:x="222" fg:w="1"/><text x="18.1388%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8888%" y="533" width="0.0806%" height="15" fill="rgb(248,35,51)" fg:x="222" fg:w="1"/><text x="18.1388%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8888%" y="517" width="0.0806%" height="15" fill="rgb(230,37,26)" fg:x="222" fg:w="1"/><text x="18.1388%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="17.8888%" y="613" width="0.3223%" height="15" fill="rgb(206,120,22)" fg:x="222" fg:w="4"/><text x="18.1388%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="17.8888%" y="597" width="0.3223%" height="15" fill="rgb(207,165,28)" fg:x="222" fg:w="4"/><text x="18.1388%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="17.8888%" y="581" width="0.3223%" height="15" fill="rgb(226,23,46)" fg:x="222" fg:w="4"/><text x="18.1388%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="17.9694%" y="565" width="0.2417%" height="15" fill="rgb(208,130,44)" fg:x="223" fg:w="3"/><text x="18.2194%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.9694%" y="549" width="0.2417%" height="15" fill="rgb(231,67,8)" fg:x="223" fg:w="3"/><text x="18.2194%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.1305%" y="533" width="0.0806%" height="15" fill="rgb(205,183,22)" fg:x="225" fg:w="1"/><text x="18.3805%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1305%" y="517" width="0.0806%" height="15" fill="rgb(224,47,9)" fg:x="225" fg:w="1"/><text x="18.3805%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.1305%" y="501" width="0.0806%" height="15" fill="rgb(250,183,49)" fg:x="225" fg:w="1"/><text x="18.3805%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1305%" y="485" width="0.0806%" height="15" fill="rgb(220,151,39)" fg:x="225" fg:w="1"/><text x="18.3805%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.1305%" y="469" width="0.0806%" height="15" fill="rgb(220,118,20)" fg:x="225" fg:w="1"/><text x="18.3805%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1305%" y="453" width="0.0806%" height="15" fill="rgb(231,65,51)" fg:x="225" fg:w="1"/><text x="18.3805%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.1305%" y="437" width="0.0806%" height="15" fill="rgb(253,125,37)" fg:x="225" fg:w="1"/><text x="18.3805%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1305%" y="421" width="0.0806%" height="15" fill="rgb(232,102,6)" fg:x="225" fg:w="1"/><text x="18.3805%" y="431.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="18.2111%" y="565" width="0.1612%" height="15" fill="rgb(251,105,13)" fg:x="226" fg:w="2"/><text x="18.4611%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.2111%" y="549" width="0.1612%" height="15" fill="rgb(222,179,29)" fg:x="226" fg:w="2"/><text x="18.4611%" y="559.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="18.2111%" y="533" width="0.1612%" height="15" fill="rgb(229,180,53)" fg:x="226" fg:w="2"/><text x="18.4611%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.2111%" y="517" width="0.1612%" height="15" fill="rgb(238,104,13)" fg:x="226" fg:w="2"/><text x="18.4611%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="18.2111%" y="501" width="0.1612%" height="15" fill="rgb(210,130,5)" fg:x="226" fg:w="2"/><text x="18.4611%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="18.2917%" y="485" width="0.0806%" height="15" fill="rgb(233,87,49)" fg:x="227" fg:w="1"/><text x="18.5417%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="18.2917%" y="469" width="0.0806%" height="15" fill="rgb(243,34,9)" fg:x="227" fg:w="1"/><text x="18.5417%" y="479.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="17.8888%" y="629" width="0.5641%" height="15" fill="rgb(235,225,10)" fg:x="222" fg:w="7"/><text x="18.1388%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="18.2111%" y="613" width="0.2417%" height="15" fill="rgb(212,0,30)" fg:x="226" fg:w="3"/><text x="18.4611%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="18.2111%" y="597" width="0.2417%" height="15" fill="rgb(211,177,0)" fg:x="226" fg:w="3"/><text x="18.4611%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="18.2111%" y="581" width="0.2417%" height="15" fill="rgb(225,220,11)" fg:x="226" fg:w="3"/><text x="18.4611%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3723%" y="565" width="0.0806%" height="15" fill="rgb(215,10,13)" fg:x="228" fg:w="1"/><text x="18.6223%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.3723%" y="549" width="0.0806%" height="15" fill="rgb(240,177,14)" fg:x="228" fg:w="1"/><text x="18.6223%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3723%" y="533" width="0.0806%" height="15" fill="rgb(243,7,39)" fg:x="228" fg:w="1"/><text x="18.6223%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3723%" y="517" width="0.0806%" height="15" fill="rgb(212,99,0)" fg:x="228" fg:w="1"/><text x="18.6223%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.3723%" y="501" width="0.0806%" height="15" fill="rgb(225,162,48)" fg:x="228" fg:w="1"/><text x="18.6223%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="17.8888%" y="661" width="0.6446%" height="15" fill="rgb(246,16,25)" fg:x="222" fg:w="8"/><text x="18.1388%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="17.8888%" y="645" width="0.6446%" height="15" fill="rgb(220,150,2)" fg:x="222" fg:w="8"/><text x="18.1388%" y="655.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="18.4529%" y="629" width="0.0806%" height="15" fill="rgb(237,113,11)" fg:x="229" fg:w="1"/><text x="18.7029%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5334%" y="661" width="0.0806%" height="15" fill="rgb(236,70,20)" fg:x="230" fg:w="1"/><text x="18.7834%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (2 samples, 0.16%)</title><rect x="18.6946%" y="645" width="0.1612%" height="15" fill="rgb(234,94,7)" fg:x="232" fg:w="2"/><text x="18.9446%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="18.6946%" y="629" width="0.1612%" height="15" fill="rgb(250,221,0)" fg:x="232" fg:w="2"/><text x="18.9446%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.7752%" y="613" width="0.0806%" height="15" fill="rgb(245,149,46)" fg:x="233" fg:w="1"/><text x="19.0252%" y="623.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="18.8558%" y="597" width="0.1612%" height="15" fill="rgb(215,37,27)" fg:x="234" fg:w="2"/><text x="19.1058%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="18.8558%" y="581" width="0.1612%" height="15" fill="rgb(232,65,3)" fg:x="234" fg:w="2"/><text x="19.1058%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.9363%" y="565" width="0.0806%" height="15" fill="rgb(214,2,16)" fg:x="235" fg:w="1"/><text x="19.1863%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.0169%" y="565" width="0.0806%" height="15" fill="rgb(227,131,50)" fg:x="236" fg:w="1"/><text x="19.2669%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0169%" y="549" width="0.0806%" height="15" fill="rgb(247,131,45)" fg:x="236" fg:w="1"/><text x="19.2669%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="18.8558%" y="613" width="0.3223%" height="15" fill="rgb(215,97,47)" fg:x="234" fg:w="4"/><text x="19.1058%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="19.0169%" y="597" width="0.1612%" height="15" fill="rgb(233,143,12)" fg:x="236" fg:w="2"/><text x="19.2669%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.0169%" y="581" width="0.1612%" height="15" fill="rgb(222,57,17)" fg:x="236" fg:w="2"/><text x="19.2669%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.0975%" y="565" width="0.0806%" height="15" fill="rgb(214,119,38)" fg:x="237" fg:w="1"/><text x="19.3475%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0975%" y="549" width="0.0806%" height="15" fill="rgb(217,28,47)" fg:x="237" fg:w="1"/><text x="19.3475%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.0975%" y="533" width="0.0806%" height="15" fill="rgb(231,14,52)" fg:x="237" fg:w="1"/><text x="19.3475%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0975%" y="517" width="0.0806%" height="15" fill="rgb(220,158,18)" fg:x="237" fg:w="1"/><text x="19.3475%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.0975%" y="501" width="0.0806%" height="15" fill="rgb(222,143,46)" fg:x="237" fg:w="1"/><text x="19.3475%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0975%" y="485" width="0.0806%" height="15" fill="rgb(227,165,5)" fg:x="237" fg:w="1"/><text x="19.3475%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.0975%" y="469" width="0.0806%" height="15" fill="rgb(216,222,49)" fg:x="237" fg:w="1"/><text x="19.3475%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0975%" y="453" width="0.0806%" height="15" fill="rgb(238,73,39)" fg:x="237" fg:w="1"/><text x="19.3475%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.0975%" y="437" width="0.0806%" height="15" fill="rgb(252,115,9)" fg:x="237" fg:w="1"/><text x="19.3475%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.0975%" y="421" width="0.0806%" height="15" fill="rgb(238,202,4)" fg:x="237" fg:w="1"/><text x="19.3475%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="18.8558%" y="645" width="0.4835%" height="15" fill="rgb(252,153,44)" fg:x="234" fg:w="6"/><text x="19.1058%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="18.8558%" y="629" width="0.4835%" height="15" fill="rgb(235,128,27)" fg:x="234" fg:w="6"/><text x="19.1058%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="19.1781%" y="613" width="0.1612%" height="15" fill="rgb(221,121,47)" fg:x="238" fg:w="2"/><text x="19.4281%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="19.1781%" y="597" width="0.1612%" height="15" fill="rgb(247,211,47)" fg:x="238" fg:w="2"/><text x="19.4281%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.1781%" y="581" width="0.1612%" height="15" fill="rgb(252,47,49)" fg:x="238" fg:w="2"/><text x="19.4281%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.1781%" y="565" width="0.1612%" height="15" fill="rgb(219,119,53)" fg:x="238" fg:w="2"/><text x="19.4281%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.1781%" y="549" width="0.1612%" height="15" fill="rgb(243,165,53)" fg:x="238" fg:w="2"/><text x="19.4281%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.1781%" y="533" width="0.1612%" height="15" fill="rgb(230,12,35)" fg:x="238" fg:w="2"/><text x="19.4281%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.1781%" y="517" width="0.1612%" height="15" fill="rgb(239,57,49)" fg:x="238" fg:w="2"/><text x="19.4281%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="19.1781%" y="501" width="0.1612%" height="15" fill="rgb(231,154,7)" fg:x="238" fg:w="2"/><text x="19.4281%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.1781%" y="485" width="0.1612%" height="15" fill="rgb(248,81,34)" fg:x="238" fg:w="2"/><text x="19.4281%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.1781%" y="469" width="0.1612%" height="15" fill="rgb(247,9,5)" fg:x="238" fg:w="2"/><text x="19.4281%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.1781%" y="453" width="0.1612%" height="15" fill="rgb(228,172,27)" fg:x="238" fg:w="2"/><text x="19.4281%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.2587%" y="437" width="0.0806%" height="15" fill="rgb(230,57,44)" fg:x="239" fg:w="1"/><text x="19.5087%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2587%" y="421" width="0.0806%" height="15" fill="rgb(249,35,22)" fg:x="239" fg:w="1"/><text x="19.5087%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="19.3392%" y="645" width="0.0806%" height="15" fill="rgb(250,137,27)" fg:x="240" fg:w="1"/><text x="19.5892%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.3392%" y="629" width="0.0806%" height="15" fill="rgb(251,57,31)" fg:x="240" fg:w="1"/><text x="19.5892%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.3392%" y="613" width="0.0806%" height="15" fill="rgb(238,60,0)" fg:x="240" fg:w="1"/><text x="19.5892%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="19.3392%" y="597" width="0.0806%" height="15" fill="rgb(242,185,39)" fg:x="240" fg:w="1"/><text x="19.5892%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.4198%" y="645" width="0.0806%" height="15" fill="rgb(240,63,43)" fg:x="241" fg:w="1"/><text x="19.6698%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4198%" y="629" width="0.0806%" height="15" fill="rgb(236,155,6)" fg:x="241" fg:w="1"/><text x="19.6698%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4198%" y="613" width="0.0806%" height="15" fill="rgb(215,11,29)" fg:x="241" fg:w="1"/><text x="19.6698%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5004%" y="597" width="0.0806%" height="15" fill="rgb(228,180,48)" fg:x="242" fg:w="1"/><text x="19.7504%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5004%" y="581" width="0.0806%" height="15" fill="rgb(241,102,12)" fg:x="242" fg:w="1"/><text x="19.7504%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.5004%" y="565" width="0.0806%" height="15" fill="rgb(246,213,4)" fg:x="242" fg:w="1"/><text x="19.7504%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.5004%" y="549" width="0.0806%" height="15" fill="rgb(218,134,35)" fg:x="242" fg:w="1"/><text x="19.7504%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.5004%" y="533" width="0.0806%" height="15" fill="rgb(251,117,35)" fg:x="242" fg:w="1"/><text x="19.7504%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.5004%" y="517" width="0.0806%" height="15" fill="rgb(206,156,45)" fg:x="242" fg:w="1"/><text x="19.7504%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.5004%" y="501" width="0.0806%" height="15" fill="rgb(218,52,27)" fg:x="242" fg:w="1"/><text x="19.7504%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.5004%" y="485" width="0.0806%" height="15" fill="rgb(238,83,36)" fg:x="242" fg:w="1"/><text x="19.7504%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.5004%" y="469" width="0.0806%" height="15" fill="rgb(218,53,43)" fg:x="242" fg:w="1"/><text x="19.7504%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.5004%" y="453" width="0.0806%" height="15" fill="rgb(239,54,39)" fg:x="242" fg:w="1"/><text x="19.7504%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.5004%" y="437" width="0.0806%" height="15" fill="rgb(212,198,13)" fg:x="242" fg:w="1"/><text x="19.7504%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5004%" y="421" width="0.0806%" height="15" fill="rgb(234,54,46)" fg:x="242" fg:w="1"/><text x="19.7504%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5810%" y="581" width="0.0806%" height="15" fill="rgb(217,120,7)" fg:x="243" fg:w="1"/><text x="19.8310%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7421%" y="549" width="0.0806%" height="15" fill="rgb(246,39,15)" fg:x="245" fg:w="1"/><text x="19.9921%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7421%" y="533" width="0.0806%" height="15" fill="rgb(242,143,31)" fg:x="245" fg:w="1"/><text x="19.9921%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7421%" y="517" width="0.0806%" height="15" fill="rgb(252,60,24)" fg:x="245" fg:w="1"/><text x="19.9921%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7421%" y="501" width="0.0806%" height="15" fill="rgb(249,220,7)" fg:x="245" fg:w="1"/><text x="19.9921%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7421%" y="485" width="0.0806%" height="15" fill="rgb(236,67,13)" fg:x="245" fg:w="1"/><text x="19.9921%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.7421%" y="469" width="0.0806%" height="15" fill="rgb(210,62,39)" fg:x="245" fg:w="1"/><text x="19.9921%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="19.5810%" y="597" width="0.3223%" height="15" fill="rgb(219,122,53)" fg:x="243" fg:w="4"/><text x="19.8310%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="19.6616%" y="581" width="0.2417%" height="15" fill="rgb(218,87,25)" fg:x="244" fg:w="3"/><text x="19.9116%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="19.6616%" y="565" width="0.2417%" height="15" fill="rgb(234,179,48)" fg:x="244" fg:w="3"/><text x="19.9116%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.8227%" y="549" width="0.0806%" height="15" fill="rgb(248,90,0)" fg:x="246" fg:w="1"/><text x="20.0727%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.8227%" y="533" width="0.0806%" height="15" fill="rgb(207,228,37)" fg:x="246" fg:w="1"/><text x="20.0727%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.8227%" y="517" width="0.0806%" height="15" fill="rgb(235,214,15)" fg:x="246" fg:w="1"/><text x="20.0727%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.8227%" y="501" width="0.0806%" height="15" fill="rgb(210,144,39)" fg:x="246" fg:w="1"/><text x="20.0727%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.8227%" y="485" width="0.0806%" height="15" fill="rgb(222,67,41)" fg:x="246" fg:w="1"/><text x="20.0727%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.8227%" y="469" width="0.0806%" height="15" fill="rgb(205,35,37)" fg:x="246" fg:w="1"/><text x="20.0727%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.8227%" y="453" width="0.0806%" height="15" fill="rgb(216,125,40)" fg:x="246" fg:w="1"/><text x="20.0727%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.8227%" y="437" width="0.0806%" height="15" fill="rgb(228,227,20)" fg:x="246" fg:w="1"/><text x="20.0727%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.8227%" y="421" width="0.0806%" height="15" fill="rgb(242,173,45)" fg:x="246" fg:w="1"/><text x="20.0727%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.8227%" y="405" width="0.0806%" height="15" fill="rgb(215,79,24)" fg:x="246" fg:w="1"/><text x="20.0727%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="19.8227%" y="389" width="0.0806%" height="15" fill="rgb(238,164,38)" fg:x="246" fg:w="1"/><text x="20.0727%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="19.8227%" y="373" width="0.0806%" height="15" fill="rgb(245,196,38)" fg:x="246" fg:w="1"/><text x="20.0727%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="19.8227%" y="357" width="0.0806%" height="15" fill="rgb(231,217,29)" fg:x="246" fg:w="1"/><text x="20.0727%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0645%" y="517" width="0.0806%" height="15" fill="rgb(245,6,4)" fg:x="249" fg:w="1"/><text x="20.3145%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0645%" y="501" width="0.0806%" height="15" fill="rgb(214,76,49)" fg:x="249" fg:w="1"/><text x="20.3145%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0645%" y="485" width="0.0806%" height="15" fill="rgb(205,96,12)" fg:x="249" fg:w="1"/><text x="20.3145%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.0645%" y="533" width="0.1612%" height="15" fill="rgb(243,131,4)" fg:x="249" fg:w="2"/><text x="20.3145%" y="543.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="20.1450%" y="517" width="0.0806%" height="15" fill="rgb(214,114,4)" fg:x="250" fg:w="1"/><text x="20.3950%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="20.1450%" y="501" width="0.0806%" height="15" fill="rgb(234,215,15)" fg:x="250" fg:w="1"/><text x="20.3950%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="19.9839%" y="549" width="0.3223%" height="15" fill="rgb(250,216,45)" fg:x="248" fg:w="4"/><text x="20.2339%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.2256%" y="533" width="0.0806%" height="15" fill="rgb(236,128,4)" fg:x="251" fg:w="1"/><text x="20.4756%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.3062%" y="517" width="0.0806%" height="15" fill="rgb(234,50,33)" fg:x="252" fg:w="1"/><text x="20.5562%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.3062%" y="549" width="0.1612%" height="15" fill="rgb(253,131,37)" fg:x="252" fg:w="2"/><text x="20.5562%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="20.3062%" y="533" width="0.1612%" height="15" fill="rgb(218,55,27)" fg:x="252" fg:w="2"/><text x="20.5562%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.3868%" y="517" width="0.0806%" height="15" fill="rgb(241,220,28)" fg:x="253" fg:w="1"/><text x="20.6368%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.3868%" y="501" width="0.0806%" height="15" fill="rgb(241,90,48)" fg:x="253" fg:w="1"/><text x="20.6368%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.3868%" y="485" width="0.0806%" height="15" fill="rgb(216,43,37)" fg:x="253" fg:w="1"/><text x="20.6368%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.3868%" y="469" width="0.0806%" height="15" fill="rgb(207,173,9)" fg:x="253" fg:w="1"/><text x="20.6368%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.3868%" y="453" width="0.0806%" height="15" fill="rgb(240,126,30)" fg:x="253" fg:w="1"/><text x="20.6368%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.3868%" y="437" width="0.0806%" height="15" fill="rgb(228,178,53)" fg:x="253" fg:w="1"/><text x="20.6368%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.4674%" y="517" width="0.0806%" height="15" fill="rgb(217,33,4)" fg:x="254" fg:w="1"/><text x="20.7174%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.4674%" y="501" width="0.0806%" height="15" fill="rgb(206,124,34)" fg:x="254" fg:w="1"/><text x="20.7174%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5479%" y="453" width="0.0806%" height="15" fill="rgb(208,122,53)" fg:x="255" fg:w="1"/><text x="20.7979%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.5479%" y="437" width="0.0806%" height="15" fill="rgb(215,202,26)" fg:x="255" fg:w="1"/><text x="20.7979%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (15 samples, 1.21%)</title><rect x="19.5004%" y="629" width="1.2087%" height="15" fill="rgb(232,198,31)" fg:x="242" fg:w="15"/><text x="19.7504%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (15 samples, 1.21%)</title><rect x="19.5004%" y="613" width="1.2087%" height="15" fill="rgb(222,23,35)" fg:x="242" fg:w="15"/><text x="19.7504%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.81%)</title><rect x="19.9033%" y="597" width="0.8058%" height="15" fill="rgb(242,27,53)" fg:x="247" fg:w="10"/><text x="20.1533%" y="607.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.81%)</title><rect x="19.9033%" y="581" width="0.8058%" height="15" fill="rgb(210,216,42)" fg:x="247" fg:w="10"/><text x="20.1533%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="19.9033%" y="565" width="0.8058%" height="15" fill="rgb(234,39,38)" fg:x="247" fg:w="10"/><text x="20.1533%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="20.4674%" y="549" width="0.2417%" height="15" fill="rgb(235,126,54)" fg:x="254" fg:w="3"/><text x="20.7174%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.4674%" y="533" width="0.2417%" height="15" fill="rgb(235,150,33)" fg:x="254" fg:w="3"/><text x="20.7174%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.5479%" y="517" width="0.1612%" height="15" fill="rgb(249,49,53)" fg:x="255" fg:w="2"/><text x="20.7979%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.5479%" y="501" width="0.1612%" height="15" fill="rgb(238,60,50)" fg:x="255" fg:w="2"/><text x="20.7979%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="20.5479%" y="485" width="0.1612%" height="15" fill="rgb(210,5,2)" fg:x="255" fg:w="2"/><text x="20.7979%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.5479%" y="469" width="0.1612%" height="15" fill="rgb(214,207,24)" fg:x="255" fg:w="2"/><text x="20.7979%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.6285%" y="453" width="0.0806%" height="15" fill="rgb(228,173,2)" fg:x="256" fg:w="1"/><text x="20.8785%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.6285%" y="437" width="0.0806%" height="15" fill="rgb(244,26,8)" fg:x="256" fg:w="1"/><text x="20.8785%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.6285%" y="421" width="0.0806%" height="15" fill="rgb(249,153,35)" fg:x="256" fg:w="1"/><text x="20.8785%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.6285%" y="405" width="0.0806%" height="15" fill="rgb(221,215,40)" fg:x="256" fg:w="1"/><text x="20.8785%" y="415.50"></text></g><g><title>plugins_core::build::Build::holding (37 samples, 2.98%)</title><rect x="17.8888%" y="677" width="2.9815%" height="15" fill="rgb(238,106,35)" fg:x="222" fg:w="37"/><text x="18.1388%" y="687.50">plu..</text></g><g><title>plugins_core::tools::set_container (28 samples, 2.26%)</title><rect x="18.6140%" y="661" width="2.2562%" height="15" fill="rgb(207,195,21)" fg:x="231" fg:w="28"/><text x="18.8640%" y="671.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (17 samples, 1.37%)</title><rect x="19.5004%" y="645" width="1.3699%" height="15" fill="rgb(205,43,29)" fg:x="242" fg:w="17"/><text x="19.7504%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="20.7091%" y="629" width="0.1612%" height="15" fill="rgb(236,35,21)" fg:x="257" fg:w="2"/><text x="20.9591%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.7091%" y="613" width="0.1612%" height="15" fill="rgb(244,74,8)" fg:x="257" fg:w="2"/><text x="20.9591%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (2 samples, 0.16%)</title><rect x="20.7091%" y="597" width="0.1612%" height="15" fill="rgb(241,229,7)" fg:x="257" fg:w="2"/><text x="20.9591%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="20.7091%" y="581" width="0.1612%" height="15" fill="rgb(212,223,25)" fg:x="257" fg:w="2"/><text x="20.9591%" y="591.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="20.7897%" y="565" width="0.0806%" height="15" fill="rgb(234,58,53)" fg:x="258" fg:w="1"/><text x="21.0397%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="20.7897%" y="549" width="0.0806%" height="15" fill="rgb(244,36,1)" fg:x="258" fg:w="1"/><text x="21.0397%" y="559.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="20.7897%" y="533" width="0.0806%" height="15" fill="rgb(222,40,54)" fg:x="258" fg:w="1"/><text x="21.0397%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="20.7897%" y="517" width="0.0806%" height="15" fill="rgb(210,207,39)" fg:x="258" fg:w="1"/><text x="21.0397%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7897%" y="501" width="0.0806%" height="15" fill="rgb(234,52,14)" fg:x="258" fg:w="1"/><text x="21.0397%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7897%" y="485" width="0.0806%" height="15" fill="rgb(239,108,46)" fg:x="258" fg:w="1"/><text x="21.0397%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.7897%" y="469" width="0.0806%" height="15" fill="rgb(252,223,5)" fg:x="258" fg:w="1"/><text x="21.0397%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.7897%" y="453" width="0.0806%" height="15" fill="rgb(227,181,11)" fg:x="258" fg:w="1"/><text x="21.0397%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.7897%" y="437" width="0.0806%" height="15" fill="rgb(248,126,40)" fg:x="258" fg:w="1"/><text x="21.0397%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.7897%" y="421" width="0.0806%" height="15" fill="rgb(243,1,18)" fg:x="258" fg:w="1"/><text x="21.0397%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7897%" y="405" width="0.0806%" height="15" fill="rgb(214,145,23)" fg:x="258" fg:w="1"/><text x="21.0397%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="20.8703%" y="645" width="0.0806%" height="15" fill="rgb(241,218,11)" fg:x="259" fg:w="1"/><text x="21.1203%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="20.8703%" y="629" width="0.0806%" height="15" fill="rgb(214,219,24)" fg:x="259" fg:w="1"/><text x="21.1203%" y="639.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="20.8703%" y="613" width="0.0806%" height="15" fill="rgb(235,32,7)" fg:x="259" fg:w="1"/><text x="21.1203%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.8703%" y="597" width="0.0806%" height="15" fill="rgb(227,121,28)" fg:x="259" fg:w="1"/><text x="21.1203%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9508%" y="501" width="0.0806%" height="15" fill="rgb(216,129,49)" fg:x="260" fg:w="1"/><text x="21.2008%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9508%" y="485" width="0.0806%" height="15" fill="rgb(207,194,50)" fg:x="260" fg:w="1"/><text x="21.2008%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.9508%" y="469" width="0.0806%" height="15" fill="rgb(207,4,18)" fg:x="260" fg:w="1"/><text x="21.2008%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.9508%" y="453" width="0.0806%" height="15" fill="rgb(213,50,30)" fg:x="260" fg:w="1"/><text x="21.2008%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.9508%" y="437" width="0.0806%" height="15" fill="rgb(208,77,22)" fg:x="260" fg:w="1"/><text x="21.2008%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.9508%" y="421" width="0.0806%" height="15" fill="rgb(244,204,34)" fg:x="260" fg:w="1"/><text x="21.2008%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.9508%" y="405" width="0.0806%" height="15" fill="rgb(230,20,17)" fg:x="260" fg:w="1"/><text x="21.2008%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.9508%" y="389" width="0.0806%" height="15" fill="rgb(237,83,15)" fg:x="260" fg:w="1"/><text x="21.2008%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.9508%" y="373" width="0.0806%" height="15" fill="rgb(221,109,25)" fg:x="260" fg:w="1"/><text x="21.2008%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.9508%" y="357" width="0.0806%" height="15" fill="rgb(205,194,52)" fg:x="260" fg:w="1"/><text x="21.2008%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.9508%" y="341" width="0.0806%" height="15" fill="rgb(244,173,54)" fg:x="260" fg:w="1"/><text x="21.2008%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.9508%" y="549" width="0.1612%" height="15" fill="rgb(227,181,18)" fg:x="260" fg:w="2"/><text x="21.2008%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.9508%" y="533" width="0.1612%" height="15" fill="rgb(238,36,30)" fg:x="260" fg:w="2"/><text x="21.2008%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.9508%" y="517" width="0.1612%" height="15" fill="rgb(254,85,0)" fg:x="260" fg:w="2"/><text x="21.2008%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.0314%" y="501" width="0.0806%" height="15" fill="rgb(247,63,33)" fg:x="261" fg:w="1"/><text x="21.2814%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.9508%" y="565" width="0.2417%" height="15" fill="rgb(220,7,54)" fg:x="260" fg:w="3"/><text x="21.2008%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1120%" y="549" width="0.0806%" height="15" fill="rgb(238,227,21)" fg:x="262" fg:w="1"/><text x="21.3620%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="20.9508%" y="613" width="0.3223%" height="15" fill="rgb(237,29,31)" fg:x="260" fg:w="4"/><text x="21.2008%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="20.9508%" y="597" width="0.3223%" height="15" fill="rgb(211,21,50)" fg:x="260" fg:w="4"/><text x="21.2008%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="20.9508%" y="581" width="0.3223%" height="15" fill="rgb(239,119,2)" fg:x="260" fg:w="4"/><text x="21.2008%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.1926%" y="565" width="0.0806%" height="15" fill="rgb(250,2,39)" fg:x="263" fg:w="1"/><text x="21.4426%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1926%" y="549" width="0.0806%" height="15" fill="rgb(244,46,53)" fg:x="263" fg:w="1"/><text x="21.4426%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.1926%" y="533" width="0.0806%" height="15" fill="rgb(209,21,19)" fg:x="263" fg:w="1"/><text x="21.4426%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1926%" y="517" width="0.0806%" height="15" fill="rgb(236,145,4)" fg:x="263" fg:w="1"/><text x="21.4426%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.1926%" y="501" width="0.0806%" height="15" fill="rgb(220,133,36)" fg:x="263" fg:w="1"/><text x="21.4426%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1926%" y="485" width="0.0806%" height="15" fill="rgb(244,18,3)" fg:x="263" fg:w="1"/><text x="21.4426%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="21.1926%" y="469" width="0.0806%" height="15" fill="rgb(232,171,48)" fg:x="263" fg:w="1"/><text x="21.4426%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.1926%" y="453" width="0.0806%" height="15" fill="rgb(223,223,53)" fg:x="263" fg:w="1"/><text x="21.4426%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.1926%" y="437" width="0.0806%" height="15" fill="rgb(246,92,13)" fg:x="263" fg:w="1"/><text x="21.4426%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="21.2732%" y="597" width="0.0806%" height="15" fill="rgb(229,171,10)" fg:x="264" fg:w="1"/><text x="21.5232%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.2732%" y="581" width="0.0806%" height="15" fill="rgb(213,131,26)" fg:x="264" fg:w="1"/><text x="21.5232%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4343%" y="533" width="0.0806%" height="15" fill="rgb(242,87,54)" fg:x="266" fg:w="1"/><text x="21.6843%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4343%" y="517" width="0.0806%" height="15" fill="rgb(237,21,35)" fg:x="266" fg:w="1"/><text x="21.6843%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4343%" y="501" width="0.0806%" height="15" fill="rgb(253,13,47)" fg:x="266" fg:w="1"/><text x="21.6843%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4343%" y="485" width="0.0806%" height="15" fill="rgb(215,122,49)" fg:x="266" fg:w="1"/><text x="21.6843%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.4343%" y="469" width="0.0806%" height="15" fill="rgb(209,179,30)" fg:x="266" fg:w="1"/><text x="21.6843%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.4343%" y="453" width="0.0806%" height="15" fill="rgb(235,100,24)" fg:x="266" fg:w="1"/><text x="21.6843%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.4343%" y="437" width="0.0806%" height="15" fill="rgb(209,67,24)" fg:x="266" fg:w="1"/><text x="21.6843%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4343%" y="421" width="0.0806%" height="15" fill="rgb(206,74,32)" fg:x="266" fg:w="1"/><text x="21.6843%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4343%" y="405" width="0.0806%" height="15" fill="rgb(212,45,25)" fg:x="266" fg:w="1"/><text x="21.6843%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.4343%" y="389" width="0.0806%" height="15" fill="rgb(239,26,3)" fg:x="266" fg:w="1"/><text x="21.6843%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.4343%" y="373" width="0.0806%" height="15" fill="rgb(218,36,15)" fg:x="266" fg:w="1"/><text x="21.6843%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.4343%" y="357" width="0.0806%" height="15" fill="rgb(206,108,24)" fg:x="266" fg:w="1"/><text x="21.6843%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.4343%" y="341" width="0.0806%" height="15" fill="rgb(234,204,42)" fg:x="266" fg:w="1"/><text x="21.6843%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4343%" y="325" width="0.0806%" height="15" fill="rgb(229,2,11)" fg:x="266" fg:w="1"/><text x="21.6843%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4343%" y="565" width="0.1612%" height="15" fill="rgb(221,20,48)" fg:x="266" fg:w="2"/><text x="21.6843%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4343%" y="549" width="0.1612%" height="15" fill="rgb(244,164,10)" fg:x="266" fg:w="2"/><text x="21.6843%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.5149%" y="533" width="0.0806%" height="15" fill="rgb(243,229,2)" fg:x="267" fg:w="1"/><text x="21.7649%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.5149%" y="517" width="0.0806%" height="15" fill="rgb(232,131,37)" fg:x="267" fg:w="1"/><text x="21.7649%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.5149%" y="501" width="0.0806%" height="15" fill="rgb(217,156,11)" fg:x="267" fg:w="1"/><text x="21.7649%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.5149%" y="485" width="0.0806%" height="15" fill="rgb(239,99,48)" fg:x="267" fg:w="1"/><text x="21.7649%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.5149%" y="469" width="0.0806%" height="15" fill="rgb(231,209,9)" fg:x="267" fg:w="1"/><text x="21.7649%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5149%" y="453" width="0.0806%" height="15" fill="rgb(254,97,27)" fg:x="267" fg:w="1"/><text x="21.7649%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5149%" y="437" width="0.0806%" height="15" fill="rgb(223,151,38)" fg:x="267" fg:w="1"/><text x="21.7649%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.5149%" y="421" width="0.0806%" height="15" fill="rgb(219,206,35)" fg:x="267" fg:w="1"/><text x="21.7649%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.5149%" y="405" width="0.0806%" height="15" fill="rgb(216,130,31)" fg:x="267" fg:w="1"/><text x="21.7649%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.5149%" y="389" width="0.0806%" height="15" fill="rgb(251,97,34)" fg:x="267" fg:w="1"/><text x="21.7649%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.5149%" y="373" width="0.0806%" height="15" fill="rgb(246,159,47)" fg:x="267" fg:w="1"/><text x="21.7649%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.5149%" y="357" width="0.0806%" height="15" fill="rgb(232,87,10)" fg:x="267" fg:w="1"/><text x="21.7649%" y="367.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (9 samples, 0.73%)</title><rect x="20.9508%" y="629" width="0.7252%" height="15" fill="rgb(249,1,37)" fg:x="260" fg:w="9"/><text x="21.2008%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="21.2732%" y="613" width="0.4029%" height="15" fill="rgb(239,135,14)" fg:x="264" fg:w="5"/><text x="21.5232%" y="623.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="21.3537%" y="597" width="0.3223%" height="15" fill="rgb(253,116,46)" fg:x="265" fg:w="4"/><text x="21.6037%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="21.3537%" y="581" width="0.3223%" height="15" fill="rgb(222,217,37)" fg:x="265" fg:w="4"/><text x="21.6037%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.5955%" y="565" width="0.0806%" height="15" fill="rgb(252,96,8)" fg:x="268" fg:w="1"/><text x="21.8455%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (11 samples, 0.89%)</title><rect x="20.8703%" y="677" width="0.8864%" height="15" fill="rgb(254,103,41)" fg:x="259" fg:w="11"/><text x="21.1203%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.89%)</title><rect x="20.8703%" y="661" width="0.8864%" height="15" fill="rgb(218,213,19)" fg:x="259" fg:w="11"/><text x="21.1203%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (10 samples, 0.81%)</title><rect x="20.9508%" y="645" width="0.8058%" height="15" fill="rgb(253,95,21)" fg:x="260" fg:w="10"/><text x="21.2008%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6761%" y="629" width="0.0806%" height="15" fill="rgb(229,26,28)" fg:x="269" fg:w="1"/><text x="21.9261%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6761%" y="613" width="0.0806%" height="15" fill="rgb(230,129,16)" fg:x="269" fg:w="1"/><text x="21.9261%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6761%" y="597" width="0.0806%" height="15" fill="rgb(236,126,17)" fg:x="269" fg:w="1"/><text x="21.9261%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.6761%" y="581" width="0.0806%" height="15" fill="rgb(209,33,33)" fg:x="269" fg:w="1"/><text x="21.9261%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.6761%" y="565" width="0.0806%" height="15" fill="rgb(227,85,29)" fg:x="269" fg:w="1"/><text x="21.9261%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.6761%" y="549" width="0.0806%" height="15" fill="rgb(241,53,46)" fg:x="269" fg:w="1"/><text x="21.9261%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="21.6761%" y="533" width="0.0806%" height="15" fill="rgb(228,167,53)" fg:x="269" fg:w="1"/><text x="21.9261%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.6761%" y="517" width="0.0806%" height="15" fill="rgb(238,195,45)" fg:x="269" fg:w="1"/><text x="21.9261%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.8372%" y="517" width="0.0806%" height="15" fill="rgb(252,124,45)" fg:x="271" fg:w="1"/><text x="22.0872%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.8372%" y="501" width="0.0806%" height="15" fill="rgb(251,38,35)" fg:x="271" fg:w="1"/><text x="22.0872%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.8372%" y="485" width="0.0806%" height="15" fill="rgb(227,33,2)" fg:x="271" fg:w="1"/><text x="22.0872%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="21.7566%" y="677" width="0.3223%" height="15" fill="rgb(223,157,46)" fg:x="270" fg:w="4"/><text x="22.0066%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="21.7566%" y="661" width="0.3223%" height="15" fill="rgb(222,78,41)" fg:x="270" fg:w="4"/><text x="22.0066%" y="671.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="21.7566%" y="645" width="0.3223%" height="15" fill="rgb(248,176,11)" fg:x="270" fg:w="4"/><text x="22.0066%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="21.8372%" y="629" width="0.2417%" height="15" fill="rgb(241,221,18)" fg:x="271" fg:w="3"/><text x="22.0872%" y="639.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (3 samples, 0.24%)</title><rect x="21.8372%" y="613" width="0.2417%" height="15" fill="rgb(218,85,22)" fg:x="271" fg:w="3"/><text x="22.0872%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="21.8372%" y="597" width="0.2417%" height="15" fill="rgb(222,223,7)" fg:x="271" fg:w="3"/><text x="22.0872%" y="607.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="21.8372%" y="581" width="0.2417%" height="15" fill="rgb(254,59,39)" fg:x="271" fg:w="3"/><text x="22.0872%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="21.8372%" y="565" width="0.2417%" height="15" fill="rgb(247,100,27)" fg:x="271" fg:w="3"/><text x="22.0872%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="21.8372%" y="549" width="0.2417%" height="15" fill="rgb(237,207,10)" fg:x="271" fg:w="3"/><text x="22.0872%" y="559.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="21.8372%" y="533" width="0.2417%" height="15" fill="rgb(220,121,28)" fg:x="271" fg:w="3"/><text x="22.0872%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.9178%" y="517" width="0.1612%" height="15" fill="rgb(213,223,20)" fg:x="272" fg:w="2"/><text x="22.1678%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="21.9178%" y="501" width="0.1612%" height="15" fill="rgb(205,121,27)" fg:x="272" fg:w="2"/><text x="22.1678%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.9178%" y="485" width="0.1612%" height="15" fill="rgb(253,24,53)" fg:x="272" fg:w="2"/><text x="22.1678%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="22.1595%" y="661" width="0.0806%" height="15" fill="rgb(224,224,47)" fg:x="275" fg:w="1"/><text x="22.4095%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="22.1595%" y="645" width="0.0806%" height="15" fill="rgb(250,125,36)" fg:x="275" fg:w="1"/><text x="22.4095%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="22.1595%" y="629" width="0.0806%" height="15" fill="rgb(240,144,38)" fg:x="275" fg:w="1"/><text x="22.4095%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.1595%" y="613" width="0.0806%" height="15" fill="rgb(250,15,50)" fg:x="275" fg:w="1"/><text x="22.4095%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.1595%" y="597" width="0.0806%" height="15" fill="rgb(210,24,26)" fg:x="275" fg:w="1"/><text x="22.4095%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.1595%" y="581" width="0.0806%" height="15" fill="rgb(234,53,53)" fg:x="275" fg:w="1"/><text x="22.4095%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.1595%" y="565" width="0.0806%" height="15" fill="rgb(208,108,28)" fg:x="275" fg:w="1"/><text x="22.4095%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.1595%" y="549" width="0.0806%" height="15" fill="rgb(227,143,7)" fg:x="275" fg:w="1"/><text x="22.4095%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.1595%" y="533" width="0.0806%" height="15" fill="rgb(238,189,38)" fg:x="275" fg:w="1"/><text x="22.4095%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3207%" y="501" width="0.0806%" height="15" fill="rgb(222,69,15)" fg:x="277" fg:w="1"/><text x="22.5707%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3207%" y="485" width="0.0806%" height="15" fill="rgb(213,169,7)" fg:x="277" fg:w="1"/><text x="22.5707%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3207%" y="469" width="0.0806%" height="15" fill="rgb(251,219,4)" fg:x="277" fg:w="1"/><text x="22.5707%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3207%" y="453" width="0.0806%" height="15" fill="rgb(241,55,40)" fg:x="277" fg:w="1"/><text x="22.5707%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3207%" y="437" width="0.0806%" height="15" fill="rgb(243,57,30)" fg:x="277" fg:w="1"/><text x="22.5707%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.4013%" y="501" width="0.0806%" height="15" fill="rgb(234,50,30)" fg:x="278" fg:w="1"/><text x="22.6513%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.4013%" y="485" width="0.0806%" height="15" fill="rgb(239,23,42)" fg:x="278" fg:w="1"/><text x="22.6513%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.4013%" y="469" width="0.0806%" height="15" fill="rgb(217,38,19)" fg:x="278" fg:w="1"/><text x="22.6513%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.4013%" y="453" width="0.0806%" height="15" fill="rgb(215,179,16)" fg:x="278" fg:w="1"/><text x="22.6513%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.4013%" y="437" width="0.0806%" height="15" fill="rgb(254,21,37)" fg:x="278" fg:w="1"/><text x="22.6513%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.4819%" y="437" width="0.0806%" height="15" fill="rgb(219,207,48)" fg:x="279" fg:w="1"/><text x="22.7319%" y="447.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="22.2401%" y="565" width="0.4835%" height="15" fill="rgb(227,225,41)" fg:x="276" fg:w="6"/><text x="22.4901%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="22.2401%" y="549" width="0.4835%" height="15" fill="rgb(223,130,1)" fg:x="276" fg:w="6"/><text x="22.4901%" y="559.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="22.2401%" y="533" width="0.4835%" height="15" fill="rgb(249,54,42)" fg:x="276" fg:w="6"/><text x="22.4901%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="22.2401%" y="517" width="0.4835%" height="15" fill="rgb(248,69,25)" fg:x="276" fg:w="6"/><text x="22.4901%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="22.4819%" y="501" width="0.2417%" height="15" fill="rgb(234,21,32)" fg:x="279" fg:w="3"/><text x="22.7319%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="22.4819%" y="485" width="0.2417%" height="15" fill="rgb(252,136,6)" fg:x="279" fg:w="3"/><text x="22.7319%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="22.4819%" y="469" width="0.2417%" height="15" fill="rgb(245,87,12)" fg:x="279" fg:w="3"/><text x="22.7319%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="22.4819%" y="453" width="0.2417%" height="15" fill="rgb(208,12,15)" fg:x="279" fg:w="3"/><text x="22.7319%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="22.5624%" y="437" width="0.1612%" height="15" fill="rgb(250,98,2)" fg:x="280" fg:w="2"/><text x="22.8124%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.5624%" y="421" width="0.1612%" height="15" fill="rgb(205,213,15)" fg:x="280" fg:w="2"/><text x="22.8124%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.6430%" y="405" width="0.0806%" height="15" fill="rgb(248,192,44)" fg:x="281" fg:w="1"/><text x="22.8930%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="22.2401%" y="613" width="0.5641%" height="15" fill="rgb(221,89,17)" fg:x="276" fg:w="7"/><text x="22.4901%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="22.2401%" y="597" width="0.5641%" height="15" fill="rgb(209,55,3)" fg:x="276" fg:w="7"/><text x="22.4901%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="22.2401%" y="581" width="0.5641%" height="15" fill="rgb(247,23,45)" fg:x="276" fg:w="7"/><text x="22.4901%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="22.7236%" y="565" width="0.0806%" height="15" fill="rgb(235,152,23)" fg:x="282" fg:w="1"/><text x="22.9736%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7236%" y="549" width="0.0806%" height="15" fill="rgb(244,63,13)" fg:x="282" fg:w="1"/><text x="22.9736%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="22.8848%" y="565" width="0.0806%" height="15" fill="rgb(227,30,37)" fg:x="284" fg:w="1"/><text x="23.1348%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="22.8848%" y="581" width="0.1612%" height="15" fill="rgb(224,49,42)" fg:x="284" fg:w="2"/><text x="23.1348%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="22.9654%" y="565" width="0.0806%" height="15" fill="rgb(218,129,5)" fg:x="285" fg:w="1"/><text x="23.2154%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="22.9654%" y="549" width="0.0806%" height="15" fill="rgb(240,199,54)" fg:x="285" fg:w="1"/><text x="23.2154%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.9654%" y="533" width="0.0806%" height="15" fill="rgb(234,31,13)" fg:x="285" fg:w="1"/><text x="23.2154%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.9654%" y="517" width="0.0806%" height="15" fill="rgb(219,73,54)" fg:x="285" fg:w="1"/><text x="23.2154%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.9654%" y="501" width="0.0806%" height="15" fill="rgb(251,162,10)" fg:x="285" fg:w="1"/><text x="23.2154%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="22.9654%" y="485" width="0.0806%" height="15" fill="rgb(240,138,47)" fg:x="285" fg:w="1"/><text x="23.2154%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.9654%" y="469" width="0.0806%" height="15" fill="rgb(216,138,26)" fg:x="285" fg:w="1"/><text x="23.2154%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.9654%" y="453" width="0.0806%" height="15" fill="rgb(243,17,35)" fg:x="285" fg:w="1"/><text x="23.2154%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.9654%" y="437" width="0.0806%" height="15" fill="rgb(241,60,18)" fg:x="285" fg:w="1"/><text x="23.2154%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.9654%" y="421" width="0.0806%" height="15" fill="rgb(234,2,44)" fg:x="285" fg:w="1"/><text x="23.2154%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="22.9654%" y="405" width="0.0806%" height="15" fill="rgb(225,225,33)" fg:x="285" fg:w="1"/><text x="23.2154%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="22.9654%" y="389" width="0.0806%" height="15" fill="rgb(234,50,31)" fg:x="285" fg:w="1"/><text x="23.2154%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="22.9654%" y="373" width="0.0806%" height="15" fill="rgb(249,6,25)" fg:x="285" fg:w="1"/><text x="23.2154%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="22.9654%" y="357" width="0.0806%" height="15" fill="rgb(241,5,17)" fg:x="285" fg:w="1"/><text x="23.2154%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="22.9654%" y="341" width="0.0806%" height="15" fill="rgb(207,116,10)" fg:x="285" fg:w="1"/><text x="23.2154%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="22.9654%" y="325" width="0.0806%" height="15" fill="rgb(222,128,18)" fg:x="285" fg:w="1"/><text x="23.2154%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.9654%" y="309" width="0.0806%" height="15" fill="rgb(229,109,25)" fg:x="285" fg:w="1"/><text x="23.2154%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="22.9654%" y="293" width="0.0806%" height="15" fill="rgb(222,102,25)" fg:x="285" fg:w="1"/><text x="23.2154%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.9654%" y="277" width="0.0806%" height="15" fill="rgb(239,211,5)" fg:x="285" fg:w="1"/><text x="23.2154%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9654%" y="261" width="0.0806%" height="15" fill="rgb(223,136,26)" fg:x="285" fg:w="1"/><text x="23.2154%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.0459%" y="501" width="0.0806%" height="15" fill="rgb(227,30,15)" fg:x="286" fg:w="1"/><text x="23.2959%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="23.0459%" y="485" width="0.0806%" height="15" fill="rgb(247,76,4)" fg:x="286" fg:w="1"/><text x="23.2959%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.0459%" y="549" width="0.1612%" height="15" fill="rgb(245,38,48)" fg:x="286" fg:w="2"/><text x="23.2959%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.0459%" y="533" width="0.1612%" height="15" fill="rgb(210,220,14)" fg:x="286" fg:w="2"/><text x="23.2959%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.0459%" y="517" width="0.1612%" height="15" fill="rgb(224,60,51)" fg:x="286" fg:w="2"/><text x="23.2959%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.1265%" y="501" width="0.0806%" height="15" fill="rgb(212,133,49)" fg:x="287" fg:w="1"/><text x="23.3765%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.1265%" y="485" width="0.0806%" height="15" fill="rgb(231,39,22)" fg:x="287" fg:w="1"/><text x="23.3765%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.1265%" y="469" width="0.0806%" height="15" fill="rgb(236,173,22)" fg:x="287" fg:w="1"/><text x="23.3765%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.1265%" y="453" width="0.0806%" height="15" fill="rgb(210,70,0)" fg:x="287" fg:w="1"/><text x="23.3765%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.1265%" y="437" width="0.0806%" height="15" fill="rgb(215,170,11)" fg:x="287" fg:w="1"/><text x="23.3765%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.2071%" y="533" width="0.0806%" height="15" fill="rgb(220,154,28)" fg:x="288" fg:w="1"/><text x="23.4571%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.2071%" y="517" width="0.0806%" height="15" fill="rgb(240,160,41)" fg:x="288" fg:w="1"/><text x="23.4571%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.2071%" y="501" width="0.0806%" height="15" fill="rgb(243,215,41)" fg:x="288" fg:w="1"/><text x="23.4571%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.2071%" y="485" width="0.0806%" height="15" fill="rgb(214,208,31)" fg:x="288" fg:w="1"/><text x="23.4571%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2877%" y="453" width="0.0806%" height="15" fill="rgb(247,57,22)" fg:x="289" fg:w="1"/><text x="23.5377%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2877%" y="437" width="0.0806%" height="15" fill="rgb(228,73,52)" fg:x="289" fg:w="1"/><text x="23.5377%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2877%" y="421" width="0.0806%" height="15" fill="rgb(252,60,9)" fg:x="289" fg:w="1"/><text x="23.5377%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.2877%" y="405" width="0.0806%" height="15" fill="rgb(233,9,51)" fg:x="289" fg:w="1"/><text x="23.5377%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.2877%" y="389" width="0.0806%" height="15" fill="rgb(223,67,14)" fg:x="289" fg:w="1"/><text x="23.5377%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.2877%" y="373" width="0.0806%" height="15" fill="rgb(222,86,2)" fg:x="289" fg:w="1"/><text x="23.5377%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.2877%" y="357" width="0.0806%" height="15" fill="rgb(243,58,54)" fg:x="289" fg:w="1"/><text x="23.5377%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.2877%" y="341" width="0.0806%" height="15" fill="rgb(210,200,39)" fg:x="289" fg:w="1"/><text x="23.5377%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.2877%" y="469" width="0.1612%" height="15" fill="rgb(238,135,9)" fg:x="289" fg:w="2"/><text x="23.5377%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="23.3683%" y="453" width="0.0806%" height="15" fill="rgb(232,179,7)" fg:x="290" fg:w="1"/><text x="23.6183%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="23.3683%" y="437" width="0.0806%" height="15" fill="rgb(245,65,41)" fg:x="290" fg:w="1"/><text x="23.6183%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.2877%" y="501" width="0.2417%" height="15" fill="rgb(227,43,8)" fg:x="289" fg:w="3"/><text x="23.5377%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.2877%" y="485" width="0.2417%" height="15" fill="rgb(235,91,14)" fg:x="289" fg:w="3"/><text x="23.5377%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.4488%" y="469" width="0.0806%" height="15" fill="rgb(235,219,31)" fg:x="291" fg:w="1"/><text x="23.6988%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.4488%" y="453" width="0.0806%" height="15" fill="rgb(227,121,25)" fg:x="291" fg:w="1"/><text x="23.6988%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.4488%" y="437" width="0.0806%" height="15" fill="rgb(254,129,24)" fg:x="291" fg:w="1"/><text x="23.6988%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.4488%" y="421" width="0.0806%" height="15" fill="rgb(226,144,49)" fg:x="291" fg:w="1"/><text x="23.6988%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.4488%" y="405" width="0.0806%" height="15" fill="rgb(214,187,32)" fg:x="291" fg:w="1"/><text x="23.6988%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.4488%" y="389" width="0.0806%" height="15" fill="rgb(243,129,46)" fg:x="291" fg:w="1"/><text x="23.6988%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.4488%" y="373" width="0.0806%" height="15" fill="rgb(221,185,35)" fg:x="291" fg:w="1"/><text x="23.6988%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.4488%" y="357" width="0.0806%" height="15" fill="rgb(205,0,32)" fg:x="291" fg:w="1"/><text x="23.6988%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.4488%" y="341" width="0.0806%" height="15" fill="rgb(229,179,12)" fg:x="291" fg:w="1"/><text x="23.6988%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.4488%" y="325" width="0.0806%" height="15" fill="rgb(252,107,19)" fg:x="291" fg:w="1"/><text x="23.6988%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.4488%" y="309" width="0.0806%" height="15" fill="rgb(220,95,27)" fg:x="291" fg:w="1"/><text x="23.6988%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4488%" y="293" width="0.0806%" height="15" fill="rgb(240,113,40)" fg:x="291" fg:w="1"/><text x="23.6988%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="22.8042%" y="597" width="0.8058%" height="15" fill="rgb(208,4,43)" fg:x="283" fg:w="10"/><text x="23.0542%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="23.0459%" y="581" width="0.5641%" height="15" fill="rgb(247,189,30)" fg:x="286" fg:w="7"/><text x="23.2959%" y="591.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="23.0459%" y="565" width="0.5641%" height="15" fill="rgb(231,157,17)" fg:x="286" fg:w="7"/><text x="23.2959%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="23.2071%" y="549" width="0.4029%" height="15" fill="rgb(224,139,6)" fg:x="288" fg:w="5"/><text x="23.4571%" y="559.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="23.2877%" y="533" width="0.3223%" height="15" fill="rgb(223,83,16)" fg:x="289" fg:w="4"/><text x="23.5377%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="23.2877%" y="517" width="0.3223%" height="15" fill="rgb(232,211,20)" fg:x="289" fg:w="4"/><text x="23.5377%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="23.5294%" y="501" width="0.0806%" height="15" fill="rgb(225,203,35)" fg:x="292" fg:w="1"/><text x="23.7794%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.5294%" y="485" width="0.0806%" height="15" fill="rgb(215,211,44)" fg:x="292" fg:w="1"/><text x="23.7794%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="23.5294%" y="469" width="0.0806%" height="15" fill="rgb(248,213,26)" fg:x="292" fg:w="1"/><text x="23.7794%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.5294%" y="453" width="0.0806%" height="15" fill="rgb(214,23,52)" fg:x="292" fg:w="1"/><text x="23.7794%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="23.5294%" y="437" width="0.0806%" height="15" fill="rgb(225,173,50)" fg:x="292" fg:w="1"/><text x="23.7794%" y="447.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="23.5294%" y="421" width="0.0806%" height="15" fill="rgb(206,150,22)" fg:x="292" fg:w="1"/><text x="23.7794%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.5294%" y="405" width="0.0806%" height="15" fill="rgb(239,64,23)" fg:x="292" fg:w="1"/><text x="23.7794%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="23.5294%" y="389" width="0.0806%" height="15" fill="rgb(242,50,38)" fg:x="292" fg:w="1"/><text x="23.7794%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5294%" y="373" width="0.0806%" height="15" fill="rgb(217,91,15)" fg:x="292" fg:w="1"/><text x="23.7794%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6100%" y="533" width="0.0806%" height="15" fill="rgb(230,172,6)" fg:x="293" fg:w="1"/><text x="23.8600%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6906%" y="469" width="0.0806%" height="15" fill="rgb(221,98,26)" fg:x="294" fg:w="1"/><text x="23.9406%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6906%" y="453" width="0.0806%" height="15" fill="rgb(227,210,45)" fg:x="294" fg:w="1"/><text x="23.9406%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6906%" y="501" width="0.1612%" height="15" fill="rgb(206,8,30)" fg:x="294" fg:w="2"/><text x="23.9406%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6906%" y="485" width="0.1612%" height="15" fill="rgb(241,219,17)" fg:x="294" fg:w="2"/><text x="23.9406%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7712%" y="469" width="0.0806%" height="15" fill="rgb(247,121,29)" fg:x="295" fg:w="1"/><text x="24.0212%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="23.6100%" y="549" width="0.4029%" height="15" fill="rgb(219,169,49)" fg:x="293" fg:w="5"/><text x="23.8600%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="23.6906%" y="533" width="0.3223%" height="15" fill="rgb(253,49,49)" fg:x="294" fg:w="4"/><text x="23.9406%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="23.6906%" y="517" width="0.3223%" height="15" fill="rgb(217,178,3)" fg:x="294" fg:w="4"/><text x="23.9406%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.8517%" y="501" width="0.1612%" height="15" fill="rgb(234,73,37)" fg:x="296" fg:w="2"/><text x="24.1017%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.8517%" y="485" width="0.1612%" height="15" fill="rgb(250,98,22)" fg:x="296" fg:w="2"/><text x="24.1017%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.8517%" y="469" width="0.1612%" height="15" fill="rgb(220,108,37)" fg:x="296" fg:w="2"/><text x="24.1017%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.8517%" y="453" width="0.1612%" height="15" fill="rgb(225,168,10)" fg:x="296" fg:w="2"/><text x="24.1017%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="23.8517%" y="437" width="0.1612%" height="15" fill="rgb(247,215,21)" fg:x="296" fg:w="2"/><text x="24.1017%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.8517%" y="421" width="0.1612%" height="15" fill="rgb(253,189,31)" fg:x="296" fg:w="2"/><text x="24.1017%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="23.8517%" y="405" width="0.1612%" height="15" fill="rgb(241,54,22)" fg:x="296" fg:w="2"/><text x="24.1017%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.8517%" y="389" width="0.1612%" height="15" fill="rgb(211,87,4)" fg:x="296" fg:w="2"/><text x="24.1017%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="23.9323%" y="373" width="0.0806%" height="15" fill="rgb(245,112,24)" fg:x="297" fg:w="1"/><text x="24.1823%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.0129%" y="501" width="0.0806%" height="15" fill="rgb(235,190,41)" fg:x="298" fg:w="1"/><text x="24.2629%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0129%" y="485" width="0.0806%" height="15" fill="rgb(214,89,8)" fg:x="298" fg:w="1"/><text x="24.2629%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="24.1741%" y="405" width="0.0806%" height="15" fill="rgb(249,155,35)" fg:x="300" fg:w="1"/><text x="24.4241%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.73%)</title><rect x="23.6100%" y="581" width="0.7252%" height="15" fill="rgb(249,88,26)" fg:x="293" fg:w="9"/><text x="23.8600%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.73%)</title><rect x="23.6100%" y="565" width="0.7252%" height="15" fill="rgb(232,56,8)" fg:x="293" fg:w="9"/><text x="23.8600%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="24.0129%" y="549" width="0.3223%" height="15" fill="rgb(240,95,3)" fg:x="298" fg:w="4"/><text x="24.2629%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="24.0129%" y="533" width="0.3223%" height="15" fill="rgb(222,44,28)" fg:x="298" fg:w="4"/><text x="24.2629%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="24.0129%" y="517" width="0.3223%" height="15" fill="rgb(234,16,30)" fg:x="298" fg:w="4"/><text x="24.2629%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="24.0935%" y="501" width="0.2417%" height="15" fill="rgb(223,26,17)" fg:x="299" fg:w="3"/><text x="24.3435%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="24.0935%" y="485" width="0.2417%" height="15" fill="rgb(239,187,47)" fg:x="299" fg:w="3"/><text x="24.3435%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="24.1741%" y="469" width="0.1612%" height="15" fill="rgb(247,102,50)" fg:x="300" fg:w="2"/><text x="24.4241%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.1741%" y="453" width="0.1612%" height="15" fill="rgb(231,216,22)" fg:x="300" fg:w="2"/><text x="24.4241%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="24.1741%" y="437" width="0.1612%" height="15" fill="rgb(216,201,26)" fg:x="300" fg:w="2"/><text x="24.4241%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.1741%" y="421" width="0.1612%" height="15" fill="rgb(214,186,23)" fg:x="300" fg:w="2"/><text x="24.4241%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.2546%" y="405" width="0.0806%" height="15" fill="rgb(235,184,4)" fg:x="301" fg:w="1"/><text x="24.5046%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2546%" y="389" width="0.0806%" height="15" fill="rgb(244,46,17)" fg:x="301" fg:w="1"/><text x="24.5046%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="24.3352%" y="581" width="0.0806%" height="15" fill="rgb(248,74,46)" fg:x="302" fg:w="1"/><text x="24.5852%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3352%" y="565" width="0.0806%" height="15" fill="rgb(243,79,5)" fg:x="302" fg:w="1"/><text x="24.5852%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3352%" y="549" width="0.0806%" height="15" fill="rgb(213,148,1)" fg:x="302" fg:w="1"/><text x="24.5852%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3352%" y="533" width="0.0806%" height="15" fill="rgb(221,30,0)" fg:x="302" fg:w="1"/><text x="24.5852%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.3352%" y="517" width="0.0806%" height="15" fill="rgb(207,85,29)" fg:x="302" fg:w="1"/><text x="24.5852%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.3352%" y="501" width="0.0806%" height="15" fill="rgb(239,31,46)" fg:x="302" fg:w="1"/><text x="24.5852%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.3352%" y="485" width="0.0806%" height="15" fill="rgb(219,6,1)" fg:x="302" fg:w="1"/><text x="24.5852%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.3352%" y="469" width="0.0806%" height="15" fill="rgb(229,90,29)" fg:x="302" fg:w="1"/><text x="24.5852%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.3352%" y="453" width="0.0806%" height="15" fill="rgb(242,201,42)" fg:x="302" fg:w="1"/><text x="24.5852%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.3352%" y="437" width="0.0806%" height="15" fill="rgb(243,80,54)" fg:x="302" fg:w="1"/><text x="24.5852%" y="447.50"></text></g><g><title>plugins_core::build::Build::leads_to (21 samples, 1.69%)</title><rect x="22.8042%" y="613" width="1.6922%" height="15" fill="rgb(223,166,15)" fg:x="283" fg:w="21"/><text x="23.0542%" y="623.50"></text></g><g><title>plugins_core::tools::leads_to (11 samples, 0.89%)</title><rect x="23.6100%" y="597" width="0.8864%" height="15" fill="rgb(238,78,27)" fg:x="293" fg:w="11"/><text x="23.8600%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.4158%" y="581" width="0.0806%" height="15" fill="rgb(235,28,43)" fg:x="303" fg:w="1"/><text x="24.6658%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (29 samples, 2.34%)</title><rect x="22.2401%" y="661" width="2.3368%" height="15" fill="rgb(240,210,28)" fg:x="276" fg:w="29"/><text x="22.4901%" y="671.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 2.34%)</title><rect x="22.2401%" y="645" width="2.3368%" height="15" fill="rgb(253,6,46)" fg:x="276" fg:w="29"/><text x="22.4901%" y="655.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (29 samples, 2.34%)</title><rect x="22.2401%" y="629" width="2.3368%" height="15" fill="rgb(250,159,47)" fg:x="276" fg:w="29"/><text x="22.4901%" y="639.50">p..</text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="24.4964%" y="613" width="0.0806%" height="15" fill="rgb(216,139,2)" fg:x="304" fg:w="1"/><text x="24.7464%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="24.4964%" y="597" width="0.0806%" height="15" fill="rgb(221,124,44)" fg:x="304" fg:w="1"/><text x="24.7464%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="24.4964%" y="581" width="0.0806%" height="15" fill="rgb(205,37,22)" fg:x="304" fg:w="1"/><text x="24.7464%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.4964%" y="565" width="0.0806%" height="15" fill="rgb(250,55,8)" fg:x="304" fg:w="1"/><text x="24.7464%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.4964%" y="549" width="0.0806%" height="15" fill="rgb(215,83,48)" fg:x="304" fg:w="1"/><text x="24.7464%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.4964%" y="533" width="0.0806%" height="15" fill="rgb(253,2,32)" fg:x="304" fg:w="1"/><text x="24.7464%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.4964%" y="517" width="0.0806%" height="15" fill="rgb(236,67,28)" fg:x="304" fg:w="1"/><text x="24.7464%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="24.5770%" y="629" width="0.0806%" height="15" fill="rgb(252,55,15)" fg:x="305" fg:w="1"/><text x="24.8270%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.5770%" y="613" width="0.0806%" height="15" fill="rgb(243,173,17)" fg:x="305" fg:w="1"/><text x="24.8270%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.5770%" y="597" width="0.0806%" height="15" fill="rgb(215,212,13)" fg:x="305" fg:w="1"/><text x="24.8270%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.5770%" y="581" width="0.0806%" height="15" fill="rgb(253,176,6)" fg:x="305" fg:w="1"/><text x="24.8270%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="24.6575%" y="613" width="0.1612%" height="15" fill="rgb(236,105,26)" fg:x="306" fg:w="2"/><text x="24.9075%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="24.6575%" y="597" width="0.1612%" height="15" fill="rgb(239,226,32)" fg:x="306" fg:w="2"/><text x="24.9075%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="24.6575%" y="581" width="0.1612%" height="15" fill="rgb(236,104,51)" fg:x="306" fg:w="2"/><text x="24.9075%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="24.6575%" y="565" width="0.1612%" height="15" fill="rgb(220,172,33)" fg:x="306" fg:w="2"/><text x="24.9075%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="24.6575%" y="549" width="0.1612%" height="15" fill="rgb(224,182,25)" fg:x="306" fg:w="2"/><text x="24.9075%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="24.6575%" y="533" width="0.1612%" height="15" fill="rgb(236,184,24)" fg:x="306" fg:w="2"/><text x="24.9075%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="24.6575%" y="517" width="0.1612%" height="15" fill="rgb(241,221,14)" fg:x="306" fg:w="2"/><text x="24.9075%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="24.6575%" y="501" width="0.1612%" height="15" fill="rgb(227,146,5)" fg:x="306" fg:w="2"/><text x="24.9075%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="24.6575%" y="485" width="0.1612%" height="15" fill="rgb(214,15,23)" fg:x="306" fg:w="2"/><text x="24.9075%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="24.6575%" y="469" width="0.1612%" height="15" fill="rgb(233,157,31)" fg:x="306" fg:w="2"/><text x="24.9075%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="24.6575%" y="453" width="0.1612%" height="15" fill="rgb(211,27,52)" fg:x="306" fg:w="2"/><text x="24.9075%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.6575%" y="437" width="0.1612%" height="15" fill="rgb(212,223,15)" fg:x="306" fg:w="2"/><text x="24.9075%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (6 samples, 0.48%)</title><rect x="24.6575%" y="629" width="0.4835%" height="15" fill="rgb(254,211,0)" fg:x="306" fg:w="6"/><text x="24.9075%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="24.8187%" y="613" width="0.3223%" height="15" fill="rgb(205,43,38)" fg:x="308" fg:w="4"/><text x="25.0687%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.8993%" y="597" width="0.2417%" height="15" fill="rgb(242,206,46)" fg:x="309" fg:w="3"/><text x="25.1493%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="24.8993%" y="581" width="0.2417%" height="15" fill="rgb(220,221,12)" fg:x="309" fg:w="3"/><text x="25.1493%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="25.1410%" y="629" width="0.0806%" height="15" fill="rgb(217,156,35)" fg:x="312" fg:w="1"/><text x="25.3910%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="25.1410%" y="613" width="0.0806%" height="15" fill="rgb(207,181,49)" fg:x="312" fg:w="1"/><text x="25.3910%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.1410%" y="597" width="0.0806%" height="15" fill="rgb(235,103,47)" fg:x="312" fg:w="1"/><text x="25.3910%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="25.2216%" y="613" width="0.1612%" height="15" fill="rgb(222,63,28)" fg:x="313" fg:w="2"/><text x="25.4716%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.3022%" y="597" width="0.0806%" height="15" fill="rgb(244,137,21)" fg:x="314" fg:w="1"/><text x="25.5522%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.3022%" y="581" width="0.0806%" height="15" fill="rgb(228,35,27)" fg:x="314" fg:w="1"/><text x="25.5522%" y="591.50"></text></g><g><title>engine::identifiers::model::set_gid (3 samples, 0.24%)</title><rect x="25.2216%" y="629" width="0.2417%" height="15" fill="rgb(226,191,41)" fg:x="313" fg:w="3"/><text x="25.4716%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.3828%" y="613" width="0.0806%" height="15" fill="rgb(210,154,3)" fg:x="315" fg:w="1"/><text x="25.6328%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.3828%" y="597" width="0.0806%" height="15" fill="rgb(216,60,49)" fg:x="315" fg:w="1"/><text x="25.6328%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="25.3828%" y="581" width="0.0806%" height="15" fill="rgb(226,17,20)" fg:x="315" fg:w="1"/><text x="25.6328%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="25.4633%" y="613" width="0.0806%" height="15" fill="rgb(206,115,35)" fg:x="316" fg:w="1"/><text x="25.7133%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.4633%" y="597" width="0.0806%" height="15" fill="rgb(227,88,1)" fg:x="316" fg:w="1"/><text x="25.7133%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.4633%" y="581" width="0.0806%" height="15" fill="rgb(230,222,24)" fg:x="316" fg:w="1"/><text x="25.7133%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="25.5439%" y="565" width="0.4835%" height="15" fill="rgb(214,124,32)" fg:x="317" fg:w="6"/><text x="25.7939%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="25.7857%" y="549" width="0.2417%" height="15" fill="rgb(240,41,36)" fg:x="320" fg:w="3"/><text x="26.0357%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="25.8662%" y="533" width="0.1612%" height="15" fill="rgb(221,17,52)" fg:x="321" fg:w="2"/><text x="26.1162%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.9468%" y="517" width="0.0806%" height="15" fill="rgb(252,70,16)" fg:x="322" fg:w="1"/><text x="26.1968%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="25.5439%" y="581" width="0.6446%" height="15" fill="rgb(250,177,4)" fg:x="317" fg:w="8"/><text x="25.7939%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.0274%" y="565" width="0.1612%" height="15" fill="rgb(240,188,47)" fg:x="323" fg:w="2"/><text x="26.2774%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.1080%" y="549" width="0.0806%" height="15" fill="rgb(215,92,12)" fg:x="324" fg:w="1"/><text x="26.3580%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="26.1080%" y="533" width="0.0806%" height="15" fill="rgb(242,110,29)" fg:x="324" fg:w="1"/><text x="26.3580%" y="543.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="26.4303%" y="469" width="0.0806%" height="15" fill="rgb(208,211,26)" fg:x="328" fg:w="1"/><text x="26.6803%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="26.4303%" y="453" width="0.0806%" height="15" fill="rgb(244,147,6)" fg:x="328" fg:w="1"/><text x="26.6803%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="26.2691%" y="565" width="0.3223%" height="15" fill="rgb(211,130,42)" fg:x="326" fg:w="4"/><text x="26.5191%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.3497%" y="549" width="0.2417%" height="15" fill="rgb(220,63,1)" fg:x="327" fg:w="3"/><text x="26.5997%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="26.3497%" y="533" width="0.2417%" height="15" fill="rgb(241,212,30)" fg:x="327" fg:w="3"/><text x="26.5997%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.4303%" y="517" width="0.1612%" height="15" fill="rgb(233,153,17)" fg:x="328" fg:w="2"/><text x="26.6803%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="26.4303%" y="501" width="0.1612%" height="15" fill="rgb(236,3,10)" fg:x="328" fg:w="2"/><text x="26.6803%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="26.4303%" y="485" width="0.1612%" height="15" fill="rgb(232,41,21)" fg:x="328" fg:w="2"/><text x="26.6803%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.5109%" y="469" width="0.0806%" height="15" fill="rgb(206,63,51)" fg:x="329" fg:w="1"/><text x="26.7609%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="26.7526%" y="517" width="0.1612%" height="15" fill="rgb(250,214,3)" fg:x="332" fg:w="2"/><text x="27.0026%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.7526%" y="501" width="0.1612%" height="15" fill="rgb(254,89,27)" fg:x="332" fg:w="2"/><text x="27.0026%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.8332%" y="485" width="0.0806%" height="15" fill="rgb(249,41,14)" fg:x="333" fg:w="1"/><text x="27.0832%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="26.9138%" y="517" width="0.2417%" height="15" fill="rgb(221,196,51)" fg:x="334" fg:w="3"/><text x="27.1638%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="26.9944%" y="501" width="0.1612%" height="15" fill="rgb(214,116,26)" fg:x="335" fg:w="2"/><text x="27.2444%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.0749%" y="485" width="0.0806%" height="15" fill="rgb(236,67,7)" fg:x="336" fg:w="1"/><text x="27.3249%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="26.7526%" y="549" width="0.4835%" height="15" fill="rgb(253,179,32)" fg:x="332" fg:w="6"/><text x="27.0026%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="26.7526%" y="533" width="0.4835%" height="15" fill="rgb(218,33,15)" fg:x="332" fg:w="6"/><text x="27.0026%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.1555%" y="517" width="0.0806%" height="15" fill="rgb(217,202,41)" fg:x="337" fg:w="1"/><text x="27.4055%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="27.2361%" y="549" width="0.1612%" height="15" fill="rgb(234,133,5)" fg:x="338" fg:w="2"/><text x="27.4861%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.2361%" y="533" width="0.1612%" height="15" fill="rgb(240,47,40)" fg:x="338" fg:w="2"/><text x="27.4861%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.2361%" y="517" width="0.1612%" height="15" fill="rgb(234,166,26)" fg:x="338" fg:w="2"/><text x="27.4861%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.2361%" y="501" width="0.1612%" height="15" fill="rgb(244,125,51)" fg:x="338" fg:w="2"/><text x="27.4861%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="27.5584%" y="533" width="0.1612%" height="15" fill="rgb(229,171,11)" fg:x="342" fg:w="2"/><text x="27.8084%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.6390%" y="517" width="0.0806%" height="15" fill="rgb(224,38,45)" fg:x="343" fg:w="1"/><text x="27.8890%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="27.8002%" y="517" width="0.3223%" height="15" fill="rgb(237,27,7)" fg:x="345" fg:w="4"/><text x="28.0502%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.8807%" y="501" width="0.2417%" height="15" fill="rgb(216,52,7)" fg:x="346" fg:w="3"/><text x="28.1307%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.8807%" y="485" width="0.2417%" height="15" fill="rgb(243,11,11)" fg:x="346" fg:w="3"/><text x="28.1307%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.9613%" y="469" width="0.1612%" height="15" fill="rgb(253,167,20)" fg:x="347" fg:w="2"/><text x="28.2113%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.0419%" y="453" width="0.0806%" height="15" fill="rgb(215,207,5)" fg:x="348" fg:w="1"/><text x="28.2919%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.0419%" y="437" width="0.0806%" height="15" fill="rgb(252,127,31)" fg:x="348" fg:w="1"/><text x="28.2919%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.0419%" y="421" width="0.0806%" height="15" fill="rgb(209,106,27)" fg:x="348" fg:w="1"/><text x="28.2919%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.1225%" y="501" width="0.1612%" height="15" fill="rgb(214,220,18)" fg:x="349" fg:w="2"/><text x="28.3725%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.1225%" y="485" width="0.1612%" height="15" fill="rgb(237,89,12)" fg:x="349" fg:w="2"/><text x="28.3725%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="28.2836%" y="501" width="0.3223%" height="15" fill="rgb(209,167,36)" fg:x="351" fg:w="4"/><text x="28.5336%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="28.2836%" y="485" width="0.3223%" height="15" fill="rgb(243,45,22)" fg:x="351" fg:w="4"/><text x="28.5336%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="28.2836%" y="469" width="0.3223%" height="15" fill="rgb(239,2,46)" fg:x="351" fg:w="4"/><text x="28.5336%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.3642%" y="453" width="0.2417%" height="15" fill="rgb(241,101,0)" fg:x="352" fg:w="3"/><text x="28.6142%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.4448%" y="437" width="0.1612%" height="15" fill="rgb(244,34,31)" fg:x="353" fg:w="2"/><text x="28.6948%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="27.7196%" y="533" width="1.0475%" height="15" fill="rgb(248,23,22)" fg:x="344" fg:w="13"/><text x="27.9696%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="28.1225%" y="517" width="0.6446%" height="15" fill="rgb(218,27,48)" fg:x="349" fg:w="8"/><text x="28.3725%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.6060%" y="501" width="0.1612%" height="15" fill="rgb(232,78,1)" fg:x="355" fg:w="2"/><text x="28.8560%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.6865%" y="485" width="0.0806%" height="15" fill="rgb(233,169,12)" fg:x="356" fg:w="1"/><text x="28.9365%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.6865%" y="469" width="0.0806%" height="15" fill="rgb(225,222,54)" fg:x="356" fg:w="1"/><text x="28.9365%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.61%)</title><rect x="27.3973%" y="549" width="1.6116%" height="15" fill="rgb(245,126,29)" fg:x="340" fg:w="20"/><text x="27.6473%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.7671%" y="533" width="0.2417%" height="15" fill="rgb(241,63,48)" fg:x="357" fg:w="3"/><text x="29.0171%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.7671%" y="517" width="0.2417%" height="15" fill="rgb(235,126,38)" fg:x="357" fg:w="3"/><text x="29.0171%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.8477%" y="501" width="0.1612%" height="15" fill="rgb(232,96,49)" fg:x="358" fg:w="2"/><text x="29.0977%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.66%)</title><rect x="26.5915%" y="565" width="2.6591%" height="15" fill="rgb(211,146,40)" fg:x="330" fg:w="33"/><text x="26.8415%" y="575.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.0089%" y="549" width="0.2417%" height="15" fill="rgb(247,93,44)" fg:x="360" fg:w="3"/><text x="29.2589%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="29.0089%" y="533" width="0.2417%" height="15" fill="rgb(251,41,49)" fg:x="360" fg:w="3"/><text x="29.2589%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.1700%" y="517" width="0.0806%" height="15" fill="rgb(218,155,12)" fg:x="362" fg:w="1"/><text x="29.4200%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (48 samples, 3.87%)</title><rect x="25.5439%" y="597" width="3.8678%" height="15" fill="rgb(221,161,30)" fg:x="317" fg:w="48"/><text x="25.7939%" y="607.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (40 samples, 3.22%)</title><rect x="26.1886%" y="581" width="3.2232%" height="15" fill="rgb(221,179,11)" fg:x="325" fg:w="40"/><text x="26.4386%" y="591.50">ser..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.2506%" y="565" width="0.1612%" height="15" fill="rgb(224,170,48)" fg:x="363" fg:w="2"/><text x="29.5006%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.3312%" y="549" width="0.0806%" height="15" fill="rgb(223,117,5)" fg:x="364" fg:w="1"/><text x="29.5812%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.4923%" y="565" width="0.1612%" height="15" fill="rgb(209,52,20)" fg:x="366" fg:w="2"/><text x="29.7423%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.7341%" y="549" width="0.0806%" height="15" fill="rgb(209,19,41)" fg:x="369" fg:w="1"/><text x="29.9841%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="29.8147%" y="549" width="0.2417%" height="15" fill="rgb(210,177,12)" fg:x="370" fg:w="3"/><text x="30.0647%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.8952%" y="533" width="0.1612%" height="15" fill="rgb(211,159,37)" fg:x="371" fg:w="2"/><text x="30.1452%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2176%" y="533" width="0.0806%" height="15" fill="rgb(209,20,2)" fg:x="375" fg:w="1"/><text x="30.4676%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.2981%" y="517" width="0.0806%" height="15" fill="rgb(244,3,46)" fg:x="376" fg:w="1"/><text x="30.5481%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.3787%" y="501" width="0.1612%" height="15" fill="rgb(220,94,38)" fg:x="377" fg:w="2"/><text x="30.6287%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="30.5399%" y="501" width="0.2417%" height="15" fill="rgb(253,14,31)" fg:x="379" fg:w="3"/><text x="30.7899%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="30.5399%" y="485" width="0.2417%" height="15" fill="rgb(234,176,13)" fg:x="379" fg:w="3"/><text x="30.7899%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9428%" y="485" width="0.0806%" height="15" fill="rgb(218,62,25)" fg:x="384" fg:w="1"/><text x="31.1928%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (22 samples, 1.77%)</title><rect x="29.4118%" y="597" width="1.7728%" height="15" fill="rgb(216,124,40)" fg:x="365" fg:w="22"/><text x="29.6618%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (22 samples, 1.77%)</title><rect x="29.4118%" y="581" width="1.7728%" height="15" fill="rgb(228,170,12)" fg:x="365" fg:w="22"/><text x="29.6618%" y="591.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.53%)</title><rect x="29.6535%" y="565" width="1.5310%" height="15" fill="rgb(231,226,5)" fg:x="368" fg:w="19"/><text x="29.9035%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="30.0564%" y="549" width="1.1281%" height="15" fill="rgb(237,122,22)" fg:x="373" fg:w="14"/><text x="30.3064%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="30.2981%" y="533" width="0.8864%" height="15" fill="rgb(209,185,25)" fg:x="376" fg:w="11"/><text x="30.5481%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="30.3787%" y="517" width="0.8058%" height="15" fill="rgb(228,200,32)" fg:x="377" fg:w="10"/><text x="30.6287%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="30.7816%" y="501" width="0.4029%" height="15" fill="rgb(217,140,10)" fg:x="382" fg:w="5"/><text x="31.0316%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="31.0234%" y="485" width="0.1612%" height="15" fill="rgb(253,17,24)" fg:x="385" fg:w="2"/><text x="31.2734%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1039%" y="469" width="0.0806%" height="15" fill="rgb(212,61,6)" fg:x="386" fg:w="1"/><text x="31.3539%" y="479.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="31.1845%" y="581" width="0.0806%" height="15" fill="rgb(205,14,25)" fg:x="387" fg:w="1"/><text x="31.4345%" y="591.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="31.1845%" y="565" width="0.0806%" height="15" fill="rgb(232,69,41)" fg:x="387" fg:w="1"/><text x="31.4345%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="31.2651%" y="581" width="0.0806%" height="15" fill="rgb(241,106,47)" fg:x="388" fg:w="1"/><text x="31.5151%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.2651%" y="565" width="0.0806%" height="15" fill="rgb(210,213,53)" fg:x="388" fg:w="1"/><text x="31.5151%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="31.4263%" y="565" width="0.0806%" height="15" fill="rgb(253,175,27)" fg:x="390" fg:w="1"/><text x="31.6763%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5874%" y="549" width="0.0806%" height="15" fill="rgb(211,171,24)" fg:x="392" fg:w="1"/><text x="31.8374%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="31.6680%" y="549" width="0.2417%" height="15" fill="rgb(229,80,7)" fg:x="393" fg:w="3"/><text x="31.9180%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.7486%" y="533" width="0.1612%" height="15" fill="rgb(212,46,39)" fg:x="394" fg:w="2"/><text x="31.9986%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8292%" y="517" width="0.0806%" height="15" fill="rgb(240,80,45)" fg:x="395" fg:w="1"/><text x="32.0792%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.1515%" y="501" width="0.1612%" height="15" fill="rgb(253,177,40)" fg:x="399" fg:w="2"/><text x="32.4015%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.1515%" y="485" width="0.1612%" height="15" fill="rgb(249,200,15)" fg:x="399" fg:w="2"/><text x="32.4015%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.1515%" y="469" width="0.1612%" height="15" fill="rgb(217,78,26)" fg:x="399" fg:w="2"/><text x="32.4015%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.3932%" y="453" width="0.0806%" height="15" fill="rgb(254,151,32)" fg:x="402" fg:w="1"/><text x="32.6432%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.3932%" y="437" width="0.0806%" height="15" fill="rgb(226,165,27)" fg:x="402" fg:w="1"/><text x="32.6432%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="32.3127%" y="501" width="0.2417%" height="15" fill="rgb(250,206,4)" fg:x="401" fg:w="3"/><text x="32.5627%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="32.3127%" y="485" width="0.2417%" height="15" fill="rgb(231,229,27)" fg:x="401" fg:w="3"/><text x="32.5627%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="32.3932%" y="469" width="0.1612%" height="15" fill="rgb(239,217,8)" fg:x="402" fg:w="2"/><text x="32.6432%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.4738%" y="453" width="0.0806%" height="15" fill="rgb(225,204,27)" fg:x="403" fg:w="1"/><text x="32.7238%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.4738%" y="437" width="0.0806%" height="15" fill="rgb(230,56,32)" fg:x="403" fg:w="1"/><text x="32.7238%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.6350%" y="469" width="0.1612%" height="15" fill="rgb(222,56,27)" fg:x="405" fg:w="2"/><text x="32.8850%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.6350%" y="453" width="0.1612%" height="15" fill="rgb(253,108,27)" fg:x="405" fg:w="2"/><text x="32.8850%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.6350%" y="437" width="0.1612%" height="15" fill="rgb(212,87,36)" fg:x="405" fg:w="2"/><text x="32.8850%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="32.8767%" y="405" width="0.2417%" height="15" fill="rgb(247,82,36)" fg:x="408" fg:w="3"/><text x="33.1267%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="32.8767%" y="437" width="0.3223%" height="15" fill="rgb(222,143,9)" fg:x="408" fg:w="4"/><text x="33.1267%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="32.8767%" y="421" width="0.3223%" height="15" fill="rgb(238,162,48)" fg:x="408" fg:w="4"/><text x="33.1267%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.1185%" y="405" width="0.0806%" height="15" fill="rgb(221,59,43)" fg:x="411" fg:w="1"/><text x="33.3685%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.3602%" y="421" width="0.0806%" height="15" fill="rgb(205,166,41)" fg:x="414" fg:w="1"/><text x="33.6102%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4408%" y="405" width="0.0806%" height="15" fill="rgb(241,186,40)" fg:x="415" fg:w="1"/><text x="33.6908%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4408%" y="389" width="0.0806%" height="15" fill="rgb(216,119,35)" fg:x="415" fg:w="1"/><text x="33.6908%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.4408%" y="373" width="0.0806%" height="15" fill="rgb(208,68,38)" fg:x="415" fg:w="1"/><text x="33.6908%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="33.5214%" y="389" width="0.3223%" height="15" fill="rgb(217,113,1)" fg:x="416" fg:w="4"/><text x="33.7714%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.6825%" y="373" width="0.1612%" height="15" fill="rgb(242,153,3)" fg:x="418" fg:w="2"/><text x="33.9325%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.6825%" y="357" width="0.1612%" height="15" fill="rgb(229,76,35)" fg:x="418" fg:w="2"/><text x="33.9325%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7631%" y="341" width="0.0806%" height="15" fill="rgb(229,125,34)" fg:x="419" fg:w="1"/><text x="34.0131%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="32.8767%" y="453" width="1.1281%" height="15" fill="rgb(238,179,36)" fg:x="408" fg:w="14"/><text x="33.1267%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="33.1990%" y="437" width="0.8058%" height="15" fill="rgb(244,183,19)" fg:x="412" fg:w="10"/><text x="33.4490%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="33.4408%" y="421" width="0.5641%" height="15" fill="rgb(216,85,49)" fg:x="415" fg:w="7"/><text x="33.6908%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="33.5214%" y="405" width="0.4835%" height="15" fill="rgb(208,161,47)" fg:x="416" fg:w="6"/><text x="33.7714%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.8437%" y="389" width="0.1612%" height="15" fill="rgb(233,210,18)" fg:x="420" fg:w="2"/><text x="34.0937%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.93%)</title><rect x="32.1515%" y="517" width="1.9339%" height="15" fill="rgb(205,104,42)" fg:x="399" fg:w="24"/><text x="32.4015%" y="527.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.53%)</title><rect x="32.5544%" y="501" width="1.5310%" height="15" fill="rgb(248,90,43)" fg:x="404" fg:w="19"/><text x="32.8044%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.53%)</title><rect x="32.5544%" y="485" width="1.5310%" height="15" fill="rgb(206,198,11)" fg:x="404" fg:w="19"/><text x="32.8044%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.29%)</title><rect x="32.7961%" y="469" width="1.2893%" height="15" fill="rgb(239,165,27)" fg:x="407" fg:w="16"/><text x="33.0461%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0048%" y="453" width="0.0806%" height="15" fill="rgb(246,44,32)" fg:x="422" fg:w="1"/><text x="34.2548%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (25 samples, 2.01%)</title><rect x="32.1515%" y="533" width="2.0145%" height="15" fill="rgb(252,65,42)" fg:x="399" fg:w="25"/><text x="32.4015%" y="543.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="34.0854%" y="517" width="0.0806%" height="15" fill="rgb(246,197,18)" fg:x="423" fg:w="1"/><text x="34.3354%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0854%" y="501" width="0.0806%" height="15" fill="rgb(216,192,4)" fg:x="423" fg:w="1"/><text x="34.3354%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1660%" y="533" width="0.0806%" height="15" fill="rgb(208,117,10)" fg:x="424" fg:w="1"/><text x="34.4160%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.4077%" y="501" width="0.1612%" height="15" fill="rgb(240,61,47)" fg:x="427" fg:w="2"/><text x="34.6577%" y="511.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (114 samples, 9.19%)</title><rect x="25.4633%" y="629" width="9.1861%" height="15" fill="rgb(228,178,21)" fg:x="316" fg:w="114"/><text x="25.7133%" y="639.50">engine::inter..</text></g><g><title>engine::session::SavesEntities::check_for_changes (113 samples, 9.11%)</title><rect x="25.5439%" y="613" width="9.1056%" height="15" fill="rgb(219,96,54)" fg:x="317" fg:w="113"/><text x="25.7939%" y="623.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (43 samples, 3.46%)</title><rect x="31.1845%" y="597" width="3.4649%" height="15" fill="rgb(250,177,24)" fg:x="387" fg:w="43"/><text x="31.4345%" y="607.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (41 samples, 3.30%)</title><rect x="31.3457%" y="581" width="3.3038%" height="15" fill="rgb(242,154,46)" fg:x="389" fg:w="41"/><text x="31.5957%" y="591.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (39 samples, 3.14%)</title><rect x="31.5068%" y="565" width="3.1426%" height="15" fill="rgb(226,176,29)" fg:x="391" fg:w="39"/><text x="31.7568%" y="575.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (34 samples, 2.74%)</title><rect x="31.9098%" y="549" width="2.7397%" height="15" fill="rgb(226,29,2)" fg:x="396" fg:w="34"/><text x="32.1598%" y="559.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="34.2466%" y="533" width="0.4029%" height="15" fill="rgb(237,104,14)" fg:x="425" fg:w="5"/><text x="34.4966%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="34.3272%" y="517" width="0.3223%" height="15" fill="rgb(245,207,31)" fg:x="426" fg:w="4"/><text x="34.5772%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.5689%" y="501" width="0.0806%" height="15" fill="rgb(229,211,45)" fg:x="429" fg:w="1"/><text x="34.8189%" y="511.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="34.6495%" y="629" width="0.0806%" height="15" fill="rgb(229,113,15)" fg:x="430" fg:w="1"/><text x="34.8995%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="34.6495%" y="613" width="0.0806%" height="15" fill="rgb(237,147,15)" fg:x="430" fg:w="1"/><text x="34.8995%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6495%" y="597" width="0.0806%" height="15" fill="rgb(244,120,12)" fg:x="430" fg:w="1"/><text x="34.8995%" y="607.50"></text></g><g><title>engine::session::Session::flush (127 samples, 10.23%)</title><rect x="24.5770%" y="661" width="10.2337%" height="15" fill="rgb(205,120,12)" fg:x="305" fg:w="127"/><text x="24.8270%" y="671.50">engine::session..</text></g><g><title>engine::session::Session::save_entity_changes (127 samples, 10.23%)</title><rect x="24.5770%" y="645" width="10.2337%" height="15" fill="rgb(231,26,45)" fg:x="305" fg:w="127"/><text x="24.8270%" y="655.50">engine::session..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="34.7301%" y="629" width="0.0806%" height="15" fill="rgb(246,98,1)" fg:x="431" fg:w="1"/><text x="34.9801%" y="639.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="34.7301%" y="613" width="0.0806%" height="15" fill="rgb(207,68,45)" fg:x="431" fg:w="1"/><text x="34.9801%" y="623.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="34.7301%" y="597" width="0.0806%" height="15" fill="rgb(231,27,38)" fg:x="431" fg:w="1"/><text x="34.9801%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="34.7301%" y="581" width="0.0806%" height="15" fill="rgb(214,223,3)" fg:x="431" fg:w="1"/><text x="34.9801%" y="591.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="34.7301%" y="565" width="0.0806%" height="15" fill="rgb(228,195,46)" fg:x="431" fg:w="1"/><text x="34.9801%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="34.7301%" y="549" width="0.0806%" height="15" fill="rgb(231,100,42)" fg:x="431" fg:w="1"/><text x="34.9801%" y="559.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="34.7301%" y="533" width="0.0806%" height="15" fill="rgb(236,53,4)" fg:x="431" fg:w="1"/><text x="34.9801%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="34.8106%" y="629" width="0.0806%" height="15" fill="rgb(230,152,12)" fg:x="432" fg:w="1"/><text x="35.0606%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="34.8106%" y="613" width="0.0806%" height="15" fill="rgb(226,101,19)" fg:x="432" fg:w="1"/><text x="35.0606%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.8106%" y="597" width="0.0806%" height="15" fill="rgb(250,149,32)" fg:x="432" fg:w="1"/><text x="35.0606%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.8106%" y="581" width="0.0806%" height="15" fill="rgb(232,178,12)" fg:x="432" fg:w="1"/><text x="35.0606%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.8106%" y="565" width="0.0806%" height="15" fill="rgb(246,151,17)" fg:x="432" fg:w="1"/><text x="35.0606%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.8106%" y="549" width="0.0806%" height="15" fill="rgb(252,17,51)" fg:x="432" fg:w="1"/><text x="35.0606%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.8106%" y="533" width="0.0806%" height="15" fill="rgb(250,207,23)" fg:x="432" fg:w="1"/><text x="35.0606%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.8106%" y="517" width="0.0806%" height="15" fill="rgb(205,27,5)" fg:x="432" fg:w="1"/><text x="35.0606%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.8106%" y="501" width="0.0806%" height="15" fill="rgb(224,32,19)" fg:x="432" fg:w="1"/><text x="35.0606%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.8106%" y="485" width="0.0806%" height="15" fill="rgb(247,214,40)" fg:x="432" fg:w="1"/><text x="35.0606%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="34.8106%" y="469" width="0.0806%" height="15" fill="rgb(239,199,17)" fg:x="432" fg:w="1"/><text x="35.0606%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.8106%" y="453" width="0.0806%" height="15" fill="rgb(251,159,9)" fg:x="432" fg:w="1"/><text x="35.0606%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.8106%" y="437" width="0.0806%" height="15" fill="rgb(225,78,32)" fg:x="432" fg:w="1"/><text x="35.0606%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.8106%" y="421" width="0.0806%" height="15" fill="rgb(206,97,47)" fg:x="432" fg:w="1"/><text x="35.0606%" y="431.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="34.8106%" y="405" width="0.0806%" height="15" fill="rgb(227,107,4)" fg:x="432" fg:w="1"/><text x="35.0606%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8912%" y="517" width="0.0806%" height="15" fill="rgb(241,146,50)" fg:x="433" fg:w="1"/><text x="35.1412%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8912%" y="501" width="0.0806%" height="15" fill="rgb(232,92,30)" fg:x="433" fg:w="1"/><text x="35.1412%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8912%" y="485" width="0.0806%" height="15" fill="rgb(222,0,40)" fg:x="433" fg:w="1"/><text x="35.1412%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8912%" y="469" width="0.0806%" height="15" fill="rgb(219,54,33)" fg:x="433" fg:w="1"/><text x="35.1412%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.8912%" y="453" width="0.0806%" height="15" fill="rgb(226,209,28)" fg:x="433" fg:w="1"/><text x="35.1412%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.8912%" y="437" width="0.0806%" height="15" fill="rgb(254,205,35)" fg:x="433" fg:w="1"/><text x="35.1412%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.8912%" y="421" width="0.0806%" height="15" fill="rgb(230,159,3)" fg:x="433" fg:w="1"/><text x="35.1412%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8912%" y="405" width="0.0806%" height="15" fill="rgb(232,190,24)" fg:x="433" fg:w="1"/><text x="35.1412%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8912%" y="389" width="0.0806%" height="15" fill="rgb(217,227,44)" fg:x="433" fg:w="1"/><text x="35.1412%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.8912%" y="373" width="0.0806%" height="15" fill="rgb(236,211,1)" fg:x="433" fg:w="1"/><text x="35.1412%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.8912%" y="357" width="0.0806%" height="15" fill="rgb(250,127,46)" fg:x="433" fg:w="1"/><text x="35.1412%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.8912%" y="341" width="0.0806%" height="15" fill="rgb(229,213,6)" fg:x="433" fg:w="1"/><text x="35.1412%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.8912%" y="325" width="0.0806%" height="15" fill="rgb(237,15,36)" fg:x="433" fg:w="1"/><text x="35.1412%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8912%" y="309" width="0.0806%" height="15" fill="rgb(213,131,41)" fg:x="433" fg:w="1"/><text x="35.1412%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.8912%" y="533" width="0.1612%" height="15" fill="rgb(225,82,44)" fg:x="433" fg:w="2"/><text x="35.1412%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9718%" y="517" width="0.0806%" height="15" fill="rgb(249,42,11)" fg:x="434" fg:w="1"/><text x="35.2218%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9718%" y="501" width="0.0806%" height="15" fill="rgb(253,11,29)" fg:x="434" fg:w="1"/><text x="35.2218%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.9718%" y="485" width="0.0806%" height="15" fill="rgb(206,8,54)" fg:x="434" fg:w="1"/><text x="35.2218%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.9718%" y="469" width="0.0806%" height="15" fill="rgb(222,186,2)" fg:x="434" fg:w="1"/><text x="35.2218%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.9718%" y="453" width="0.0806%" height="15" fill="rgb(221,206,53)" fg:x="434" fg:w="1"/><text x="35.2218%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9718%" y="437" width="0.0806%" height="15" fill="rgb(230,150,21)" fg:x="434" fg:w="1"/><text x="35.2218%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9718%" y="421" width="0.0806%" height="15" fill="rgb(253,202,10)" fg:x="434" fg:w="1"/><text x="35.2218%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.9718%" y="405" width="0.0806%" height="15" fill="rgb(238,109,40)" fg:x="434" fg:w="1"/><text x="35.2218%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.9718%" y="389" width="0.0806%" height="15" fill="rgb(247,120,22)" fg:x="434" fg:w="1"/><text x="35.2218%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.9718%" y="373" width="0.0806%" height="15" fill="rgb(207,43,30)" fg:x="434" fg:w="1"/><text x="35.2218%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.9718%" y="357" width="0.0806%" height="15" fill="rgb(213,211,24)" fg:x="434" fg:w="1"/><text x="35.2218%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="34.9718%" y="341" width="0.0806%" height="15" fill="rgb(239,73,39)" fg:x="434" fg:w="1"/><text x="35.2218%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="34.9718%" y="325" width="0.0806%" height="15" fill="rgb(245,182,19)" fg:x="434" fg:w="1"/><text x="35.2218%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.8912%" y="549" width="0.2417%" height="15" fill="rgb(247,143,26)" fg:x="433" fg:w="3"/><text x="35.1412%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0524%" y="533" width="0.0806%" height="15" fill="rgb(228,191,23)" fg:x="435" fg:w="1"/><text x="35.3024%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0524%" y="517" width="0.0806%" height="15" fill="rgb(253,165,31)" fg:x="435" fg:w="1"/><text x="35.3024%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.0524%" y="501" width="0.0806%" height="15" fill="rgb(234,138,20)" fg:x="435" fg:w="1"/><text x="35.3024%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.0524%" y="485" width="0.0806%" height="15" fill="rgb(218,191,29)" fg:x="435" fg:w="1"/><text x="35.3024%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.0524%" y="469" width="0.0806%" height="15" fill="rgb(221,157,19)" fg:x="435" fg:w="1"/><text x="35.3024%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="35.0524%" y="453" width="0.0806%" height="15" fill="rgb(237,26,42)" fg:x="435" fg:w="1"/><text x="35.3024%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="35.0524%" y="437" width="0.0806%" height="15" fill="rgb(220,163,24)" fg:x="435" fg:w="1"/><text x="35.3024%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="34.8912%" y="597" width="0.3223%" height="15" fill="rgb(242,115,20)" fg:x="433" fg:w="4"/><text x="35.1412%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="34.8912%" y="581" width="0.3223%" height="15" fill="rgb(210,206,9)" fg:x="433" fg:w="4"/><text x="35.1412%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="34.8912%" y="565" width="0.3223%" height="15" fill="rgb(208,71,17)" fg:x="433" fg:w="4"/><text x="35.1412%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.1330%" y="549" width="0.0806%" height="15" fill="rgb(233,7,5)" fg:x="436" fg:w="1"/><text x="35.3830%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1330%" y="533" width="0.0806%" height="15" fill="rgb(207,92,33)" fg:x="436" fg:w="1"/><text x="35.3830%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.1330%" y="517" width="0.0806%" height="15" fill="rgb(218,87,9)" fg:x="436" fg:w="1"/><text x="35.3830%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1330%" y="501" width="0.0806%" height="15" fill="rgb(219,47,37)" fg:x="436" fg:w="1"/><text x="35.3830%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.1330%" y="485" width="0.0806%" height="15" fill="rgb(221,152,34)" fg:x="436" fg:w="1"/><text x="35.3830%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1330%" y="469" width="0.0806%" height="15" fill="rgb(235,176,21)" fg:x="436" fg:w="1"/><text x="35.3830%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="35.2135%" y="581" width="0.1612%" height="15" fill="rgb(232,212,21)" fg:x="437" fg:w="2"/><text x="35.4635%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="35.2135%" y="565" width="0.1612%" height="15" fill="rgb(245,82,39)" fg:x="437" fg:w="2"/><text x="35.4635%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="35.2135%" y="549" width="0.1612%" height="15" fill="rgb(241,52,51)" fg:x="437" fg:w="2"/><text x="35.4635%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.2135%" y="533" width="0.1612%" height="15" fill="rgb(219,91,24)" fg:x="437" fg:w="2"/><text x="35.4635%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="35.2135%" y="517" width="0.1612%" height="15" fill="rgb(241,142,12)" fg:x="437" fg:w="2"/><text x="35.4635%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.2135%" y="501" width="0.1612%" height="15" fill="rgb(230,27,9)" fg:x="437" fg:w="2"/><text x="35.4635%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.2135%" y="485" width="0.1612%" height="15" fill="rgb(249,181,32)" fg:x="437" fg:w="2"/><text x="35.4635%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.2135%" y="469" width="0.1612%" height="15" fill="rgb(230,107,3)" fg:x="437" fg:w="2"/><text x="35.4635%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="35.2135%" y="453" width="0.1612%" height="15" fill="rgb(246,204,14)" fg:x="437" fg:w="2"/><text x="35.4635%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.2135%" y="437" width="0.1612%" height="15" fill="rgb(213,192,47)" fg:x="437" fg:w="2"/><text x="35.4635%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="35.2941%" y="421" width="0.0806%" height="15" fill="rgb(240,44,36)" fg:x="438" fg:w="1"/><text x="35.5441%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3747%" y="549" width="0.0806%" height="15" fill="rgb(244,209,38)" fg:x="439" fg:w="1"/><text x="35.6247%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3747%" y="533" width="0.0806%" height="15" fill="rgb(219,34,37)" fg:x="439" fg:w="1"/><text x="35.6247%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3747%" y="517" width="0.0806%" height="15" fill="rgb(210,28,6)" fg:x="439" fg:w="1"/><text x="35.6247%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3747%" y="501" width="0.0806%" height="15" fill="rgb(244,110,52)" fg:x="439" fg:w="1"/><text x="35.6247%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3747%" y="485" width="0.0806%" height="15" fill="rgb(254,124,47)" fg:x="439" fg:w="1"/><text x="35.6247%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="35.4553%" y="549" width="0.0806%" height="15" fill="rgb(254,110,13)" fg:x="440" fg:w="1"/><text x="35.7053%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.4553%" y="533" width="0.0806%" height="15" fill="rgb(252,57,21)" fg:x="440" fg:w="1"/><text x="35.7053%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="35.4553%" y="517" width="0.0806%" height="15" fill="rgb(242,60,45)" fg:x="440" fg:w="1"/><text x="35.7053%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.4553%" y="501" width="0.0806%" height="15" fill="rgb(234,49,30)" fg:x="440" fg:w="1"/><text x="35.7053%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="35.4553%" y="485" width="0.0806%" height="15" fill="rgb(218,98,6)" fg:x="440" fg:w="1"/><text x="35.7053%" y="495.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (9 samples, 0.73%)</title><rect x="34.8912%" y="613" width="0.7252%" height="15" fill="rgb(220,174,29)" fg:x="433" fg:w="9"/><text x="35.1412%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="35.2135%" y="597" width="0.4029%" height="15" fill="rgb(236,163,23)" fg:x="437" fg:w="5"/><text x="35.4635%" y="607.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="35.3747%" y="581" width="0.2417%" height="15" fill="rgb(242,114,45)" fg:x="439" fg:w="3"/><text x="35.6247%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="35.3747%" y="565" width="0.2417%" height="15" fill="rgb(232,10,53)" fg:x="439" fg:w="3"/><text x="35.6247%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.5359%" y="549" width="0.0806%" height="15" fill="rgb(245,108,29)" fg:x="441" fg:w="1"/><text x="35.7859%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="35.5359%" y="533" width="0.0806%" height="15" fill="rgb(240,89,53)" fg:x="441" fg:w="1"/><text x="35.7859%" y="543.50"></text></g><g><title>engine::internal::Entities::add_entity (28 samples, 2.26%)</title><rect x="34.8912%" y="629" width="2.2562%" height="15" fill="rgb(226,60,45)" fg:x="433" fg:w="28"/><text x="35.1412%" y="639.50">e..</text></g><g><title>engine::internal::EntityMap::add_entity (19 samples, 1.53%)</title><rect x="35.6164%" y="613" width="1.5310%" height="15" fill="rgb(230,41,44)" fg:x="442" fg:w="19"/><text x="35.8664%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 1.37%)</title><rect x="35.7776%" y="597" width="1.3699%" height="15" fill="rgb(230,26,20)" fg:x="444" fg:w="17"/><text x="36.0276%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (16 samples, 1.29%)</title><rect x="35.8582%" y="581" width="1.2893%" height="15" fill="rgb(237,170,32)" fg:x="445" fg:w="16"/><text x="36.1082%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 1.29%)</title><rect x="35.8582%" y="565" width="1.2893%" height="15" fill="rgb(212,35,42)" fg:x="445" fg:w="16"/><text x="36.1082%" y="575.50"></text></g><g><title>__libc_malloc (16 samples, 1.29%)</title><rect x="35.8582%" y="549" width="1.2893%" height="15" fill="rgb(227,31,34)" fg:x="445" fg:w="16"/><text x="36.1082%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (30 samples, 2.42%)</title><rect x="34.8106%" y="645" width="2.4174%" height="15" fill="rgb(216,19,18)" fg:x="432" fg:w="30"/><text x="35.0606%" y="655.50">&lt;e..</text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="37.1475%" y="629" width="0.0806%" height="15" fill="rgb(211,133,42)" fg:x="461" fg:w="1"/><text x="37.3975%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.3086%" y="485" width="0.2417%" height="15" fill="rgb(244,66,13)" fg:x="463" fg:w="3"/><text x="37.5586%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4698%" y="469" width="0.0806%" height="15" fill="rgb(218,185,50)" fg:x="465" fg:w="1"/><text x="37.7198%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="37.3086%" y="517" width="0.3223%" height="15" fill="rgb(219,149,13)" fg:x="463" fg:w="4"/><text x="37.5586%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="37.3086%" y="501" width="0.3223%" height="15" fill="rgb(221,125,0)" fg:x="463" fg:w="4"/><text x="37.5586%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.5504%" y="485" width="0.0806%" height="15" fill="rgb(247,126,27)" fg:x="466" fg:w="1"/><text x="37.8004%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.5504%" y="469" width="0.0806%" height="15" fill="rgb(250,138,30)" fg:x="466" fg:w="1"/><text x="37.8004%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.5504%" y="453" width="0.0806%" height="15" fill="rgb(230,151,9)" fg:x="466" fg:w="1"/><text x="37.8004%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.5504%" y="437" width="0.0806%" height="15" fill="rgb(233,80,38)" fg:x="466" fg:w="1"/><text x="37.8004%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.5504%" y="421" width="0.0806%" height="15" fill="rgb(232,68,43)" fg:x="466" fg:w="1"/><text x="37.8004%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.5504%" y="405" width="0.0806%" height="15" fill="rgb(254,5,50)" fg:x="466" fg:w="1"/><text x="37.8004%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.5504%" y="389" width="0.0806%" height="15" fill="rgb(225,45,5)" fg:x="466" fg:w="1"/><text x="37.8004%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.5504%" y="373" width="0.0806%" height="15" fill="rgb(239,22,3)" fg:x="466" fg:w="1"/><text x="37.8004%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.5504%" y="357" width="0.0806%" height="15" fill="rgb(243,129,0)" fg:x="466" fg:w="1"/><text x="37.8004%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.5504%" y="341" width="0.0806%" height="15" fill="rgb(223,164,0)" fg:x="466" fg:w="1"/><text x="37.8004%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.5504%" y="325" width="0.0806%" height="15" fill="rgb(221,46,29)" fg:x="466" fg:w="1"/><text x="37.8004%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5504%" y="309" width="0.0806%" height="15" fill="rgb(205,97,47)" fg:x="466" fg:w="1"/><text x="37.8004%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="37.3086%" y="549" width="0.4835%" height="15" fill="rgb(249,14,8)" fg:x="463" fg:w="6"/><text x="37.5586%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="37.3086%" y="533" width="0.4835%" height="15" fill="rgb(216,77,3)" fg:x="463" fg:w="6"/><text x="37.5586%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.6309%" y="517" width="0.1612%" height="15" fill="rgb(206,168,54)" fg:x="467" fg:w="2"/><text x="37.8809%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.7921%" y="549" width="0.0806%" height="15" fill="rgb(236,3,41)" fg:x="469" fg:w="1"/><text x="38.0421%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.7921%" y="533" width="0.0806%" height="15" fill="rgb(231,132,24)" fg:x="469" fg:w="1"/><text x="38.0421%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.81%)</title><rect x="37.2280%" y="597" width="0.8058%" height="15" fill="rgb(227,221,40)" fg:x="462" fg:w="10"/><text x="37.4780%" y="607.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.81%)</title><rect x="37.2280%" y="581" width="0.8058%" height="15" fill="rgb(233,151,11)" fg:x="462" fg:w="10"/><text x="37.4780%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="37.2280%" y="565" width="0.8058%" height="15" fill="rgb(247,81,35)" fg:x="462" fg:w="10"/><text x="37.4780%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="37.8727%" y="549" width="0.1612%" height="15" fill="rgb(243,128,48)" fg:x="470" fg:w="2"/><text x="38.1227%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.8727%" y="533" width="0.1612%" height="15" fill="rgb(253,16,10)" fg:x="470" fg:w="2"/><text x="38.1227%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="37.8727%" y="517" width="0.1612%" height="15" fill="rgb(228,67,27)" fg:x="470" fg:w="2"/><text x="38.1227%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.8727%" y="501" width="0.1612%" height="15" fill="rgb(231,105,25)" fg:x="470" fg:w="2"/><text x="38.1227%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="37.8727%" y="485" width="0.1612%" height="15" fill="rgb(213,166,47)" fg:x="470" fg:w="2"/><text x="38.1227%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.8727%" y="469" width="0.1612%" height="15" fill="rgb(209,27,10)" fg:x="470" fg:w="2"/><text x="38.1227%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="37.9533%" y="453" width="0.0806%" height="15" fill="rgb(241,44,30)" fg:x="471" fg:w="1"/><text x="38.2033%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.9533%" y="437" width="0.0806%" height="15" fill="rgb(223,216,15)" fg:x="471" fg:w="1"/><text x="38.2033%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.9533%" y="421" width="0.0806%" height="15" fill="rgb(227,14,7)" fg:x="471" fg:w="1"/><text x="38.2033%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.9533%" y="405" width="0.0806%" height="15" fill="rgb(237,14,5)" fg:x="471" fg:w="1"/><text x="38.2033%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.0338%" y="549" width="0.1612%" height="15" fill="rgb(232,14,36)" fg:x="472" fg:w="2"/><text x="38.2838%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.0338%" y="533" width="0.1612%" height="15" fill="rgb(234,0,38)" fg:x="472" fg:w="2"/><text x="38.2838%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1144%" y="517" width="0.0806%" height="15" fill="rgb(207,170,14)" fg:x="473" fg:w="1"/><text x="38.3644%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1144%" y="501" width="0.0806%" height="15" fill="rgb(252,45,13)" fg:x="473" fg:w="1"/><text x="38.3644%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1144%" y="485" width="0.0806%" height="15" fill="rgb(213,142,7)" fg:x="473" fg:w="1"/><text x="38.3644%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.1144%" y="469" width="0.0806%" height="15" fill="rgb(216,157,23)" fg:x="473" fg:w="1"/><text x="38.3644%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.1950%" y="549" width="0.0806%" height="15" fill="rgb(212,145,33)" fg:x="474" fg:w="1"/><text x="38.4450%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.1950%" y="533" width="0.0806%" height="15" fill="rgb(233,26,13)" fg:x="474" fg:w="1"/><text x="38.4450%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.1950%" y="517" width="0.0806%" height="15" fill="rgb(219,196,19)" fg:x="474" fg:w="1"/><text x="38.4450%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1950%" y="501" width="0.0806%" height="15" fill="rgb(246,56,21)" fg:x="474" fg:w="1"/><text x="38.4450%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.13%)</title><rect x="37.2280%" y="629" width="1.1281%" height="15" fill="rgb(222,28,53)" fg:x="462" fg:w="14"/><text x="37.4780%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (14 samples, 1.13%)</title><rect x="37.2280%" y="613" width="1.1281%" height="15" fill="rgb(224,5,27)" fg:x="462" fg:w="14"/><text x="37.4780%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="38.0338%" y="597" width="0.3223%" height="15" fill="rgb(220,153,33)" fg:x="472" fg:w="4"/><text x="38.2838%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="38.0338%" y="581" width="0.3223%" height="15" fill="rgb(226,58,19)" fg:x="472" fg:w="4"/><text x="38.2838%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="38.0338%" y="565" width="0.3223%" height="15" fill="rgb(239,112,23)" fg:x="472" fg:w="4"/><text x="38.2838%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.2756%" y="549" width="0.0806%" height="15" fill="rgb(251,213,20)" fg:x="475" fg:w="1"/><text x="38.5256%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2756%" y="533" width="0.0806%" height="15" fill="rgb(215,181,21)" fg:x="475" fg:w="1"/><text x="38.5256%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.2756%" y="517" width="0.0806%" height="15" fill="rgb(240,8,35)" fg:x="475" fg:w="1"/><text x="38.5256%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2756%" y="501" width="0.0806%" height="15" fill="rgb(232,203,3)" fg:x="475" fg:w="1"/><text x="38.5256%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.2756%" y="485" width="0.0806%" height="15" fill="rgb(214,202,43)" fg:x="475" fg:w="1"/><text x="38.5256%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2756%" y="469" width="0.0806%" height="15" fill="rgb(254,35,11)" fg:x="475" fg:w="1"/><text x="38.5256%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.2756%" y="453" width="0.0806%" height="15" fill="rgb(239,173,13)" fg:x="475" fg:w="1"/><text x="38.5256%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2756%" y="437" width="0.0806%" height="15" fill="rgb(220,141,0)" fg:x="475" fg:w="1"/><text x="38.5256%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.2756%" y="421" width="0.0806%" height="15" fill="rgb(210,98,12)" fg:x="475" fg:w="1"/><text x="38.5256%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2756%" y="405" width="0.0806%" height="15" fill="rgb(254,153,22)" fg:x="475" fg:w="1"/><text x="38.5256%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.2756%" y="389" width="0.0806%" height="15" fill="rgb(247,223,17)" fg:x="475" fg:w="1"/><text x="38.5256%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3562%" y="581" width="0.0806%" height="15" fill="rgb(246,56,7)" fg:x="476" fg:w="1"/><text x="38.6062%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="38.3562%" y="629" width="0.1612%" height="15" fill="rgb(240,226,12)" fg:x="476" fg:w="2"/><text x="38.6062%" y="639.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="38.3562%" y="613" width="0.1612%" height="15" fill="rgb(205,87,46)" fg:x="476" fg:w="2"/><text x="38.6062%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="38.3562%" y="597" width="0.1612%" height="15" fill="rgb(245,214,51)" fg:x="476" fg:w="2"/><text x="38.6062%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="38.4367%" y="581" width="0.0806%" height="15" fill="rgb(223,172,33)" fg:x="477" fg:w="1"/><text x="38.6867%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="38.4367%" y="565" width="0.0806%" height="15" fill="rgb(227,203,34)" fg:x="477" fg:w="1"/><text x="38.6867%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.4367%" y="549" width="0.0806%" height="15" fill="rgb(248,143,44)" fg:x="477" fg:w="1"/><text x="38.6867%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.4367%" y="533" width="0.0806%" height="15" fill="rgb(226,162,5)" fg:x="477" fg:w="1"/><text x="38.6867%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.6785%" y="469" width="0.0806%" height="15" fill="rgb(211,143,1)" fg:x="480" fg:w="1"/><text x="38.9285%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6785%" y="453" width="0.0806%" height="15" fill="rgb(224,96,15)" fg:x="480" fg:w="1"/><text x="38.9285%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.7591%" y="469" width="0.0806%" height="15" fill="rgb(222,4,38)" fg:x="481" fg:w="1"/><text x="39.0091%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.7591%" y="453" width="0.0806%" height="15" fill="rgb(253,228,15)" fg:x="481" fg:w="1"/><text x="39.0091%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.7591%" y="437" width="0.0806%" height="15" fill="rgb(242,194,12)" fg:x="481" fg:w="1"/><text x="39.0091%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.7591%" y="421" width="0.0806%" height="15" fill="rgb(214,177,31)" fg:x="481" fg:w="1"/><text x="39.0091%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.7591%" y="405" width="0.0806%" height="15" fill="rgb(226,58,51)" fg:x="481" fg:w="1"/><text x="39.0091%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.7591%" y="389" width="0.0806%" height="15" fill="rgb(250,119,16)" fg:x="481" fg:w="1"/><text x="39.0091%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.7591%" y="373" width="0.0806%" height="15" fill="rgb(223,128,53)" fg:x="481" fg:w="1"/><text x="39.0091%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.7591%" y="357" width="0.0806%" height="15" fill="rgb(251,199,15)" fg:x="481" fg:w="1"/><text x="39.0091%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.7591%" y="341" width="0.0806%" height="15" fill="rgb(235,168,42)" fg:x="481" fg:w="1"/><text x="39.0091%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.7591%" y="325" width="0.0806%" height="15" fill="rgb(250,210,17)" fg:x="481" fg:w="1"/><text x="39.0091%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.7591%" y="309" width="0.0806%" height="15" fill="rgb(226,36,41)" fg:x="481" fg:w="1"/><text x="39.0091%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.7591%" y="293" width="0.0806%" height="15" fill="rgb(225,87,10)" fg:x="481" fg:w="1"/><text x="39.0091%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="38.6785%" y="485" width="0.3223%" height="15" fill="rgb(228,83,9)" fg:x="480" fg:w="4"/><text x="38.9285%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.8396%" y="469" width="0.1612%" height="15" fill="rgb(225,16,36)" fg:x="482" fg:w="2"/><text x="39.0896%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="38.5979%" y="533" width="0.4835%" height="15" fill="rgb(242,198,13)" fg:x="479" fg:w="6"/><text x="38.8479%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="38.5979%" y="517" width="0.4835%" height="15" fill="rgb(239,25,51)" fg:x="479" fg:w="6"/><text x="38.8479%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="38.5979%" y="501" width="0.4835%" height="15" fill="rgb(239,28,37)" fg:x="479" fg:w="6"/><text x="38.8479%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.0008%" y="485" width="0.0806%" height="15" fill="rgb(234,70,17)" fg:x="484" fg:w="1"/><text x="39.2508%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.0814%" y="453" width="0.0806%" height="15" fill="rgb(231,215,53)" fg:x="485" fg:w="1"/><text x="39.3314%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0814%" y="437" width="0.0806%" height="15" fill="rgb(218,140,42)" fg:x="485" fg:w="1"/><text x="39.3314%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.0814%" y="533" width="0.1612%" height="15" fill="rgb(233,227,45)" fg:x="485" fg:w="2"/><text x="39.3314%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="39.0814%" y="517" width="0.1612%" height="15" fill="rgb(225,189,21)" fg:x="485" fg:w="2"/><text x="39.3314%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.0814%" y="501" width="0.1612%" height="15" fill="rgb(237,176,54)" fg:x="485" fg:w="2"/><text x="39.3314%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.0814%" y="485" width="0.1612%" height="15" fill="rgb(215,131,46)" fg:x="485" fg:w="2"/><text x="39.3314%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.0814%" y="469" width="0.1612%" height="15" fill="rgb(218,95,20)" fg:x="485" fg:w="2"/><text x="39.3314%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1620%" y="453" width="0.0806%" height="15" fill="rgb(208,198,12)" fg:x="486" fg:w="1"/><text x="39.4120%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.1620%" y="437" width="0.0806%" height="15" fill="rgb(239,107,50)" fg:x="486" fg:w="1"/><text x="39.4120%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.1620%" y="421" width="0.0806%" height="15" fill="rgb(240,217,37)" fg:x="486" fg:w="1"/><text x="39.4120%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.2425%" y="501" width="0.0806%" height="15" fill="rgb(242,197,49)" fg:x="487" fg:w="1"/><text x="39.4925%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.81%)</title><rect x="38.5979%" y="581" width="0.8058%" height="15" fill="rgb(219,171,17)" fg:x="479" fg:w="10"/><text x="38.8479%" y="591.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.81%)</title><rect x="38.5979%" y="565" width="0.8058%" height="15" fill="rgb(209,81,40)" fg:x="479" fg:w="10"/><text x="38.8479%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="38.5979%" y="549" width="0.8058%" height="15" fill="rgb(237,156,30)" fg:x="479" fg:w="10"/><text x="38.8479%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="39.2425%" y="533" width="0.1612%" height="15" fill="rgb(212,127,16)" fg:x="487" fg:w="2"/><text x="39.4925%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.2425%" y="517" width="0.1612%" height="15" fill="rgb(226,66,32)" fg:x="487" fg:w="2"/><text x="39.4925%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.3231%" y="501" width="0.0806%" height="15" fill="rgb(245,22,46)" fg:x="488" fg:w="1"/><text x="39.5731%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.3231%" y="485" width="0.0806%" height="15" fill="rgb(210,112,21)" fg:x="488" fg:w="1"/><text x="39.5731%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.3231%" y="469" width="0.0806%" height="15" fill="rgb(207,118,39)" fg:x="488" fg:w="1"/><text x="39.5731%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.3231%" y="453" width="0.0806%" height="15" fill="rgb(205,206,35)" fg:x="488" fg:w="1"/><text x="39.5731%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.3231%" y="437" width="0.0806%" height="15" fill="rgb(222,120,2)" fg:x="488" fg:w="1"/><text x="39.5731%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.3231%" y="421" width="0.0806%" height="15" fill="rgb(205,38,18)" fg:x="488" fg:w="1"/><text x="39.5731%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.3231%" y="405" width="0.0806%" height="15" fill="rgb(226,61,2)" fg:x="488" fg:w="1"/><text x="39.5731%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.3231%" y="389" width="0.0806%" height="15" fill="rgb(242,161,23)" fg:x="488" fg:w="1"/><text x="39.5731%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="39.3231%" y="373" width="0.0806%" height="15" fill="rgb(213,13,52)" fg:x="488" fg:w="1"/><text x="39.5731%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="39.3231%" y="357" width="0.0806%" height="15" fill="rgb(246,209,47)" fg:x="488" fg:w="1"/><text x="39.5731%" y="367.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="39.3231%" y="341" width="0.0806%" height="15" fill="rgb(214,41,3)" fg:x="488" fg:w="1"/><text x="39.5731%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.4037%" y="565" width="0.0806%" height="15" fill="rgb(236,119,38)" fg:x="489" fg:w="1"/><text x="39.6537%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.5649%" y="501" width="0.0806%" height="15" fill="rgb(218,50,11)" fg:x="491" fg:w="1"/><text x="39.8149%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.5649%" y="485" width="0.0806%" height="15" fill="rgb(228,38,11)" fg:x="491" fg:w="1"/><text x="39.8149%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.5649%" y="469" width="0.0806%" height="15" fill="rgb(212,13,9)" fg:x="491" fg:w="1"/><text x="39.8149%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.5649%" y="453" width="0.0806%" height="15" fill="rgb(208,211,9)" fg:x="491" fg:w="1"/><text x="39.8149%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.5649%" y="437" width="0.0806%" height="15" fill="rgb(239,39,32)" fg:x="491" fg:w="1"/><text x="39.8149%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.5649%" y="421" width="0.0806%" height="15" fill="rgb(254,179,26)" fg:x="491" fg:w="1"/><text x="39.8149%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.5649%" y="405" width="0.0806%" height="15" fill="rgb(249,165,28)" fg:x="491" fg:w="1"/><text x="39.8149%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.5649%" y="389" width="0.0806%" height="15" fill="rgb(225,59,50)" fg:x="491" fg:w="1"/><text x="39.8149%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.5649%" y="373" width="0.0806%" height="15" fill="rgb(209,122,5)" fg:x="491" fg:w="1"/><text x="39.8149%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.5649%" y="357" width="0.0806%" height="15" fill="rgb(214,65,34)" fg:x="491" fg:w="1"/><text x="39.8149%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.5649%" y="341" width="0.0806%" height="15" fill="rgb(249,183,32)" fg:x="491" fg:w="1"/><text x="39.8149%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.5649%" y="325" width="0.0806%" height="15" fill="rgb(218,122,24)" fg:x="491" fg:w="1"/><text x="39.8149%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.5649%" y="309" width="0.0806%" height="15" fill="rgb(224,109,18)" fg:x="491" fg:w="1"/><text x="39.8149%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.5649%" y="517" width="0.1612%" height="15" fill="rgb(210,68,50)" fg:x="491" fg:w="2"/><text x="39.8149%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6454%" y="501" width="0.0806%" height="15" fill="rgb(212,184,34)" fg:x="492" fg:w="1"/><text x="39.8954%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.5649%" y="533" width="0.2417%" height="15" fill="rgb(238,105,48)" fg:x="491" fg:w="3"/><text x="39.8149%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7260%" y="517" width="0.0806%" height="15" fill="rgb(222,134,54)" fg:x="493" fg:w="1"/><text x="39.9760%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7260%" y="501" width="0.0806%" height="15" fill="rgb(246,24,43)" fg:x="493" fg:w="1"/><text x="39.9760%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.7260%" y="485" width="0.0806%" height="15" fill="rgb(227,169,22)" fg:x="493" fg:w="1"/><text x="39.9760%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.7260%" y="469" width="0.0806%" height="15" fill="rgb(253,152,4)" fg:x="493" fg:w="1"/><text x="39.9760%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.7260%" y="453" width="0.0806%" height="15" fill="rgb(219,158,36)" fg:x="493" fg:w="1"/><text x="39.9760%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.7260%" y="437" width="0.0806%" height="15" fill="rgb(251,128,40)" fg:x="493" fg:w="1"/><text x="39.9760%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.7260%" y="421" width="0.0806%" height="15" fill="rgb(254,101,39)" fg:x="493" fg:w="1"/><text x="39.9760%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.8066%" y="501" width="0.0806%" height="15" fill="rgb(221,168,40)" fg:x="494" fg:w="1"/><text x="40.0566%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.8066%" y="485" width="0.0806%" height="15" fill="rgb(221,14,27)" fg:x="494" fg:w="1"/><text x="40.0566%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (64 samples, 5.16%)</title><rect x="34.8106%" y="661" width="5.1571%" height="15" fill="rgb(207,36,43)" fg:x="432" fg:w="64"/><text x="35.0606%" y="671.50">plugin..</text></g><g><title>plugins_core::tools::set_container (34 samples, 2.74%)</title><rect x="37.2280%" y="645" width="2.7397%" height="15" fill="rgb(240,172,53)" fg:x="462" fg:w="34"/><text x="37.4780%" y="655.50">pl..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (18 samples, 1.45%)</title><rect x="38.5173%" y="629" width="1.4504%" height="15" fill="rgb(241,138,43)" fg:x="478" fg:w="18"/><text x="38.7673%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (18 samples, 1.45%)</title><rect x="38.5173%" y="613" width="1.4504%" height="15" fill="rgb(227,78,19)" fg:x="478" fg:w="18"/><text x="38.7673%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (17 samples, 1.37%)</title><rect x="38.5979%" y="597" width="1.3699%" height="15" fill="rgb(215,127,44)" fg:x="479" fg:w="17"/><text x="38.8479%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="39.4037%" y="581" width="0.5641%" height="15" fill="rgb(227,13,10)" fg:x="489" fg:w="7"/><text x="39.6537%" y="591.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="39.4843%" y="565" width="0.4835%" height="15" fill="rgb(249,177,6)" fg:x="490" fg:w="6"/><text x="39.7343%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="39.4843%" y="549" width="0.4835%" height="15" fill="rgb(215,154,26)" fg:x="490" fg:w="6"/><text x="39.7343%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="39.8066%" y="533" width="0.1612%" height="15" fill="rgb(250,168,20)" fg:x="494" fg:w="2"/><text x="40.0566%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.8066%" y="517" width="0.1612%" height="15" fill="rgb(222,53,38)" fg:x="494" fg:w="2"/><text x="40.0566%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.8872%" y="501" width="0.0806%" height="15" fill="rgb(245,154,5)" fg:x="495" fg:w="1"/><text x="40.1372%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.8872%" y="485" width="0.0806%" height="15" fill="rgb(214,89,50)" fg:x="495" fg:w="1"/><text x="40.1372%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.8872%" y="469" width="0.0806%" height="15" fill="rgb(232,73,14)" fg:x="495" fg:w="1"/><text x="40.1372%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.8872%" y="453" width="0.0806%" height="15" fill="rgb(230,101,20)" fg:x="495" fg:w="1"/><text x="40.1372%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8872%" y="437" width="0.0806%" height="15" fill="rgb(208,56,28)" fg:x="495" fg:w="1"/><text x="40.1372%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8872%" y="421" width="0.0806%" height="15" fill="rgb(247,205,22)" fg:x="495" fg:w="1"/><text x="40.1372%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="39.9678%" y="629" width="0.0806%" height="15" fill="rgb(252,109,51)" fg:x="496" fg:w="1"/><text x="40.2178%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="39.9678%" y="613" width="0.0806%" height="15" fill="rgb(220,40,24)" fg:x="496" fg:w="1"/><text x="40.2178%" y="623.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="39.9678%" y="597" width="0.0806%" height="15" fill="rgb(251,108,7)" fg:x="496" fg:w="1"/><text x="40.2178%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.9678%" y="581" width="0.0806%" height="15" fill="rgb(238,102,51)" fg:x="496" fg:w="1"/><text x="40.2178%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.0483%" y="581" width="0.0806%" height="15" fill="rgb(219,149,34)" fg:x="497" fg:w="1"/><text x="40.2983%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.1289%" y="485" width="0.2417%" height="15" fill="rgb(239,70,0)" fg:x="498" fg:w="3"/><text x="40.3789%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.2095%" y="469" width="0.1612%" height="15" fill="rgb(246,214,23)" fg:x="499" fg:w="2"/><text x="40.4595%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3707%" y="485" width="0.0806%" height="15" fill="rgb(239,221,51)" fg:x="501" fg:w="1"/><text x="40.6207%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3707%" y="469" width="0.0806%" height="15" fill="rgb(254,62,14)" fg:x="501" fg:w="1"/><text x="40.6207%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.3707%" y="453" width="0.0806%" height="15" fill="rgb(253,57,33)" fg:x="501" fg:w="1"/><text x="40.6207%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.3707%" y="437" width="0.0806%" height="15" fill="rgb(229,34,6)" fg:x="501" fg:w="1"/><text x="40.6207%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.3707%" y="421" width="0.0806%" height="15" fill="rgb(235,191,23)" fg:x="501" fg:w="1"/><text x="40.6207%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3707%" y="405" width="0.0806%" height="15" fill="rgb(217,207,27)" fg:x="501" fg:w="1"/><text x="40.6207%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3707%" y="389" width="0.0806%" height="15" fill="rgb(232,41,44)" fg:x="501" fg:w="1"/><text x="40.6207%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.3707%" y="373" width="0.0806%" height="15" fill="rgb(221,188,19)" fg:x="501" fg:w="1"/><text x="40.6207%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.3707%" y="357" width="0.0806%" height="15" fill="rgb(245,180,45)" fg:x="501" fg:w="1"/><text x="40.6207%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.3707%" y="341" width="0.0806%" height="15" fill="rgb(250,220,42)" fg:x="501" fg:w="1"/><text x="40.6207%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.3707%" y="325" width="0.0806%" height="15" fill="rgb(234,16,34)" fg:x="501" fg:w="1"/><text x="40.6207%" y="335.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="40.3707%" y="309" width="0.0806%" height="15" fill="rgb(233,217,23)" fg:x="501" fg:w="1"/><text x="40.6207%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="40.1289%" y="501" width="0.4835%" height="15" fill="rgb(209,22,46)" fg:x="498" fg:w="6"/><text x="40.3789%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.4512%" y="485" width="0.1612%" height="15" fill="rgb(213,101,18)" fg:x="502" fg:w="2"/><text x="40.7012%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="40.1289%" y="549" width="0.5641%" height="15" fill="rgb(215,179,52)" fg:x="498" fg:w="7"/><text x="40.3789%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="40.1289%" y="533" width="0.5641%" height="15" fill="rgb(223,50,25)" fg:x="498" fg:w="7"/><text x="40.3789%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="40.1289%" y="517" width="0.5641%" height="15" fill="rgb(224,51,44)" fg:x="498" fg:w="7"/><text x="40.3789%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6124%" y="501" width="0.0806%" height="15" fill="rgb(224,13,54)" fg:x="504" fg:w="1"/><text x="40.8624%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.6930%" y="517" width="0.0806%" height="15" fill="rgb(219,58,47)" fg:x="505" fg:w="1"/><text x="40.9430%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.6930%" y="501" width="0.0806%" height="15" fill="rgb(246,124,34)" fg:x="505" fg:w="1"/><text x="40.9430%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.7736%" y="501" width="0.0806%" height="15" fill="rgb(245,109,25)" fg:x="506" fg:w="1"/><text x="41.0236%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.8541%" y="485" width="0.0806%" height="15" fill="rgb(235,48,23)" fg:x="507" fg:w="1"/><text x="41.1041%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8541%" y="469" width="0.0806%" height="15" fill="rgb(229,203,36)" fg:x="507" fg:w="1"/><text x="41.1041%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.9347%" y="469" width="0.0806%" height="15" fill="rgb(234,180,9)" fg:x="508" fg:w="1"/><text x="41.1847%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.9347%" y="453" width="0.0806%" height="15" fill="rgb(228,98,45)" fg:x="508" fg:w="1"/><text x="41.1847%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="40.6930%" y="549" width="0.4029%" height="15" fill="rgb(240,24,36)" fg:x="505" fg:w="5"/><text x="40.9430%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="40.6930%" y="533" width="0.4029%" height="15" fill="rgb(227,154,19)" fg:x="505" fg:w="5"/><text x="40.9430%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="40.7736%" y="517" width="0.3223%" height="15" fill="rgb(231,2,48)" fg:x="506" fg:w="4"/><text x="41.0236%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="40.8541%" y="501" width="0.2417%" height="15" fill="rgb(219,216,0)" fg:x="507" fg:w="3"/><text x="41.1041%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.9347%" y="485" width="0.1612%" height="15" fill="rgb(251,88,0)" fg:x="508" fg:w="2"/><text x="41.1847%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.0153%" y="469" width="0.0806%" height="15" fill="rgb(242,45,45)" fg:x="509" fg:w="1"/><text x="41.2653%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0959%" y="453" width="0.0806%" height="15" fill="rgb(218,149,45)" fg:x="510" fg:w="1"/><text x="41.3459%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1765%" y="453" width="0.0806%" height="15" fill="rgb(247,194,10)" fg:x="511" fg:w="1"/><text x="41.4265%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="41.1765%" y="437" width="0.0806%" height="15" fill="rgb(234,33,37)" fg:x="511" fg:w="1"/><text x="41.4265%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.1765%" y="421" width="0.0806%" height="15" fill="rgb(218,61,13)" fg:x="511" fg:w="1"/><text x="41.4265%" y="431.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (16 samples, 1.29%)</title><rect x="40.0483%" y="613" width="1.2893%" height="15" fill="rgb(210,80,52)" fg:x="497" fg:w="16"/><text x="40.2983%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (16 samples, 1.29%)</title><rect x="40.0483%" y="597" width="1.2893%" height="15" fill="rgb(218,203,27)" fg:x="497" fg:w="16"/><text x="40.2983%" y="607.50"></text></g><g><title>kernel::model::props::load_props (15 samples, 1.21%)</title><rect x="40.1289%" y="581" width="1.2087%" height="15" fill="rgb(209,126,33)" fg:x="498" fg:w="15"/><text x="40.3789%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.21%)</title><rect x="40.1289%" y="565" width="1.2087%" height="15" fill="rgb(234,173,41)" fg:x="498" fg:w="15"/><text x="40.3789%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="41.0959%" y="549" width="0.2417%" height="15" fill="rgb(228,166,9)" fg:x="510" fg:w="3"/><text x="41.3459%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.0959%" y="533" width="0.2417%" height="15" fill="rgb(208,124,43)" fg:x="510" fg:w="3"/><text x="41.3459%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="41.0959%" y="517" width="0.2417%" height="15" fill="rgb(212,154,38)" fg:x="510" fg:w="3"/><text x="41.3459%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.0959%" y="501" width="0.2417%" height="15" fill="rgb(246,179,35)" fg:x="510" fg:w="3"/><text x="41.3459%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="41.0959%" y="485" width="0.2417%" height="15" fill="rgb(251,3,50)" fg:x="510" fg:w="3"/><text x="41.3459%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.0959%" y="469" width="0.2417%" height="15" fill="rgb(219,96,8)" fg:x="510" fg:w="3"/><text x="41.3459%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.2571%" y="453" width="0.0806%" height="15" fill="rgb(251,216,33)" fg:x="512" fg:w="1"/><text x="41.5071%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.2571%" y="437" width="0.0806%" height="15" fill="rgb(243,145,29)" fg:x="512" fg:w="1"/><text x="41.5071%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.2571%" y="421" width="0.0806%" height="15" fill="rgb(210,75,20)" fg:x="512" fg:w="1"/><text x="41.5071%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.53%)</title><rect x="39.9678%" y="661" width="1.5310%" height="15" fill="rgb(235,56,8)" fg:x="496" fg:w="19"/><text x="40.2178%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.53%)</title><rect x="39.9678%" y="645" width="1.5310%" height="15" fill="rgb(226,175,49)" fg:x="496" fg:w="19"/><text x="40.2178%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (18 samples, 1.45%)</title><rect x="40.0483%" y="629" width="1.4504%" height="15" fill="rgb(242,204,23)" fg:x="497" fg:w="18"/><text x="40.2983%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="41.3376%" y="613" width="0.1612%" height="15" fill="rgb(225,104,24)" fg:x="513" fg:w="2"/><text x="41.5876%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="41.4182%" y="597" width="0.0806%" height="15" fill="rgb(253,34,1)" fg:x="514" fg:w="1"/><text x="41.6682%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="41.4988%" y="661" width="0.1612%" height="15" fill="rgb(233,199,23)" fg:x="515" fg:w="2"/><text x="41.7488%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="41.4988%" y="645" width="0.1612%" height="15" fill="rgb(247,7,51)" fg:x="515" fg:w="2"/><text x="41.7488%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="41.5794%" y="629" width="0.0806%" height="15" fill="rgb(214,146,12)" fg:x="516" fg:w="1"/><text x="41.8294%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="41.5794%" y="613" width="0.0806%" height="15" fill="rgb(234,181,43)" fg:x="516" fg:w="1"/><text x="41.8294%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5794%" y="597" width="0.0806%" height="15" fill="rgb(239,148,6)" fg:x="516" fg:w="1"/><text x="41.8294%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5794%" y="581" width="0.0806%" height="15" fill="rgb(206,151,17)" fg:x="516" fg:w="1"/><text x="41.8294%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="41.5794%" y="565" width="0.0806%" height="15" fill="rgb(213,215,10)" fg:x="516" fg:w="1"/><text x="41.8294%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5794%" y="549" width="0.0806%" height="15" fill="rgb(215,220,44)" fg:x="516" fg:w="1"/><text x="41.8294%" y="559.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="41.6600%" y="661" width="0.0806%" height="15" fill="rgb(245,205,37)" fg:x="517" fg:w="1"/><text x="41.9100%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="41.6600%" y="645" width="0.0806%" height="15" fill="rgb(245,130,43)" fg:x="517" fg:w="1"/><text x="41.9100%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="41.6600%" y="629" width="0.0806%" height="15" fill="rgb(231,227,38)" fg:x="517" fg:w="1"/><text x="41.9100%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="41.6600%" y="613" width="0.0806%" height="15" fill="rgb(233,185,4)" fg:x="517" fg:w="1"/><text x="41.9100%" y="623.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="41.6600%" y="597" width="0.0806%" height="15" fill="rgb(224,154,43)" fg:x="517" fg:w="1"/><text x="41.9100%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.6600%" y="581" width="0.0806%" height="15" fill="rgb(235,156,15)" fg:x="517" fg:w="1"/><text x="41.9100%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="41.6600%" y="565" width="0.0806%" height="15" fill="rgb(211,55,43)" fg:x="517" fg:w="1"/><text x="41.9100%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="41.6600%" y="549" width="0.0806%" height="15" fill="rgb(247,149,40)" fg:x="517" fg:w="1"/><text x="41.9100%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.6600%" y="533" width="0.0806%" height="15" fill="rgb(232,171,16)" fg:x="517" fg:w="1"/><text x="41.9100%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.6600%" y="517" width="0.0806%" height="15" fill="rgb(215,117,49)" fg:x="517" fg:w="1"/><text x="41.9100%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.6600%" y="501" width="0.0806%" height="15" fill="rgb(246,194,11)" fg:x="517" fg:w="1"/><text x="41.9100%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.6600%" y="485" width="0.0806%" height="15" fill="rgb(242,101,44)" fg:x="517" fg:w="1"/><text x="41.9100%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.6600%" y="469" width="0.0806%" height="15" fill="rgb(226,174,6)" fg:x="517" fg:w="1"/><text x="41.9100%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.6600%" y="453" width="0.0806%" height="15" fill="rgb(213,150,20)" fg:x="517" fg:w="1"/><text x="41.9100%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.6600%" y="437" width="0.0806%" height="15" fill="rgb(222,124,42)" fg:x="517" fg:w="1"/><text x="41.9100%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="41.7405%" y="597" width="0.2417%" height="15" fill="rgb(250,19,47)" fg:x="518" fg:w="3"/><text x="41.9905%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="41.7405%" y="581" width="0.2417%" height="15" fill="rgb(241,217,19)" fg:x="518" fg:w="3"/><text x="41.9905%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="41.7405%" y="565" width="0.2417%" height="15" fill="rgb(207,210,34)" fg:x="518" fg:w="3"/><text x="41.9905%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.8211%" y="549" width="0.1612%" height="15" fill="rgb(244,45,4)" fg:x="519" fg:w="2"/><text x="42.0711%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8211%" y="533" width="0.1612%" height="15" fill="rgb(252,134,50)" fg:x="519" fg:w="2"/><text x="42.0711%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.8211%" y="517" width="0.1612%" height="15" fill="rgb(238,74,2)" fg:x="519" fg:w="2"/><text x="42.0711%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8211%" y="501" width="0.1612%" height="15" fill="rgb(226,58,46)" fg:x="519" fg:w="2"/><text x="42.0711%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.9017%" y="485" width="0.0806%" height="15" fill="rgb(232,83,35)" fg:x="520" fg:w="1"/><text x="42.1517%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9017%" y="469" width="0.0806%" height="15" fill="rgb(212,148,47)" fg:x="520" fg:w="1"/><text x="42.1517%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.9017%" y="453" width="0.0806%" height="15" fill="rgb(235,29,1)" fg:x="520" fg:w="1"/><text x="42.1517%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9017%" y="437" width="0.0806%" height="15" fill="rgb(247,55,37)" fg:x="520" fg:w="1"/><text x="42.1517%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.9017%" y="421" width="0.0806%" height="15" fill="rgb(222,48,3)" fg:x="520" fg:w="1"/><text x="42.1517%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9017%" y="405" width="0.0806%" height="15" fill="rgb(234,21,33)" fg:x="520" fg:w="1"/><text x="42.1517%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="41.9017%" y="389" width="0.0806%" height="15" fill="rgb(247,178,53)" fg:x="520" fg:w="1"/><text x="42.1517%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="41.9017%" y="373" width="0.0806%" height="15" fill="rgb(225,75,7)" fg:x="520" fg:w="1"/><text x="42.1517%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.9017%" y="357" width="0.0806%" height="15" fill="rgb(219,199,7)" fg:x="520" fg:w="1"/><text x="42.1517%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9823%" y="549" width="0.0806%" height="15" fill="rgb(209,93,42)" fg:x="521" fg:w="1"/><text x="42.2323%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9823%" y="533" width="0.0806%" height="15" fill="rgb(240,175,17)" fg:x="521" fg:w="1"/><text x="42.2323%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9823%" y="517" width="0.0806%" height="15" fill="rgb(232,106,7)" fg:x="521" fg:w="1"/><text x="42.2323%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9823%" y="501" width="0.0806%" height="15" fill="rgb(242,106,43)" fg:x="521" fg:w="1"/><text x="42.2323%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="41.9823%" y="581" width="0.1612%" height="15" fill="rgb(242,61,37)" fg:x="521" fg:w="2"/><text x="42.2323%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.9823%" y="565" width="0.1612%" height="15" fill="rgb(205,72,10)" fg:x="521" fg:w="2"/><text x="42.2323%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.0629%" y="549" width="0.0806%" height="15" fill="rgb(214,184,36)" fg:x="522" fg:w="1"/><text x="42.3129%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0629%" y="533" width="0.0806%" height="15" fill="rgb(206,107,18)" fg:x="522" fg:w="1"/><text x="42.3129%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.0629%" y="517" width="0.0806%" height="15" fill="rgb(210,75,5)" fg:x="522" fg:w="1"/><text x="42.3129%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0629%" y="501" width="0.0806%" height="15" fill="rgb(205,3,19)" fg:x="522" fg:w="1"/><text x="42.3129%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.0629%" y="485" width="0.0806%" height="15" fill="rgb(207,181,42)" fg:x="522" fg:w="1"/><text x="42.3129%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0629%" y="469" width="0.0806%" height="15" fill="rgb(229,179,43)" fg:x="522" fg:w="1"/><text x="42.3129%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.0629%" y="453" width="0.0806%" height="15" fill="rgb(246,95,30)" fg:x="522" fg:w="1"/><text x="42.3129%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.1434%" y="549" width="0.1612%" height="15" fill="rgb(234,144,45)" fg:x="523" fg:w="2"/><text x="42.3934%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.1434%" y="533" width="0.1612%" height="15" fill="rgb(250,54,25)" fg:x="523" fg:w="2"/><text x="42.3934%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.1434%" y="517" width="0.1612%" height="15" fill="rgb(215,195,40)" fg:x="523" fg:w="2"/><text x="42.3934%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.1434%" y="501" width="0.1612%" height="15" fill="rgb(233,188,42)" fg:x="523" fg:w="2"/><text x="42.3934%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2240%" y="485" width="0.0806%" height="15" fill="rgb(247,227,35)" fg:x="524" fg:w="1"/><text x="42.4740%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="42.3046%" y="533" width="0.0806%" height="15" fill="rgb(249,124,27)" fg:x="525" fg:w="1"/><text x="42.5546%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.3852%" y="453" width="0.0806%" height="15" fill="rgb(219,207,25)" fg:x="526" fg:w="1"/><text x="42.6352%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3852%" y="437" width="0.0806%" height="15" fill="rgb(241,216,47)" fg:x="526" fg:w="1"/><text x="42.6352%" y="447.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (4 samples, 0.32%)</title><rect x="42.3046%" y="549" width="0.3223%" height="15" fill="rgb(233,82,50)" fg:x="525" fg:w="4"/><text x="42.5546%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="42.3852%" y="533" width="0.2417%" height="15" fill="rgb(232,63,2)" fg:x="526" fg:w="3"/><text x="42.6352%" y="543.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="42.3852%" y="517" width="0.2417%" height="15" fill="rgb(236,184,28)" fg:x="526" fg:w="3"/><text x="42.6352%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="42.3852%" y="501" width="0.2417%" height="15" fill="rgb(254,63,27)" fg:x="526" fg:w="3"/><text x="42.6352%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="42.3852%" y="485" width="0.2417%" height="15" fill="rgb(253,106,28)" fg:x="526" fg:w="3"/><text x="42.6352%" y="495.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="42.3852%" y="469" width="0.2417%" height="15" fill="rgb(225,141,39)" fg:x="526" fg:w="3"/><text x="42.6352%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="42.4658%" y="453" width="0.1612%" height="15" fill="rgb(222,157,20)" fg:x="527" fg:w="2"/><text x="42.7158%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="42.4658%" y="437" width="0.1612%" height="15" fill="rgb(210,190,9)" fg:x="527" fg:w="2"/><text x="42.7158%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.5463%" y="421" width="0.0806%" height="15" fill="rgb(242,167,7)" fg:x="528" fg:w="1"/><text x="42.7963%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.97%)</title><rect x="41.7405%" y="645" width="0.9670%" height="15" fill="rgb(227,82,41)" fg:x="518" fg:w="12"/><text x="41.9905%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (12 samples, 0.97%)</title><rect x="41.7405%" y="629" width="0.9670%" height="15" fill="rgb(222,131,13)" fg:x="518" fg:w="12"/><text x="41.9905%" y="639.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (12 samples, 0.97%)</title><rect x="41.7405%" y="613" width="0.9670%" height="15" fill="rgb(221,98,26)" fg:x="518" fg:w="12"/><text x="41.9905%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (9 samples, 0.73%)</title><rect x="41.9823%" y="597" width="0.7252%" height="15" fill="rgb(251,63,52)" fg:x="521" fg:w="9"/><text x="42.2323%" y="607.50"></text></g><g><title>kernel::model::props::save_props (7 samples, 0.56%)</title><rect x="42.1434%" y="581" width="0.5641%" height="15" fill="rgb(246,25,43)" fg:x="523" fg:w="7"/><text x="42.3934%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="42.1434%" y="565" width="0.5641%" height="15" fill="rgb(247,167,15)" fg:x="523" fg:w="7"/><text x="42.3934%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.6269%" y="549" width="0.0806%" height="15" fill="rgb(240,104,42)" fg:x="529" fg:w="1"/><text x="42.8769%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.6269%" y="533" width="0.0806%" height="15" fill="rgb(224,54,6)" fg:x="529" fg:w="1"/><text x="42.8769%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.6269%" y="517" width="0.0806%" height="15" fill="rgb(244,108,35)" fg:x="529" fg:w="1"/><text x="42.8769%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.6269%" y="501" width="0.0806%" height="15" fill="rgb(216,154,2)" fg:x="529" fg:w="1"/><text x="42.8769%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.6269%" y="485" width="0.0806%" height="15" fill="rgb(222,8,47)" fg:x="529" fg:w="1"/><text x="42.8769%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6269%" y="469" width="0.0806%" height="15" fill="rgb(252,93,1)" fg:x="529" fg:w="1"/><text x="42.8769%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="42.7075%" y="629" width="0.0806%" height="15" fill="rgb(223,226,51)" fg:x="530" fg:w="1"/><text x="42.9575%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7881%" y="533" width="0.0806%" height="15" fill="rgb(206,147,9)" fg:x="531" fg:w="1"/><text x="43.0381%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7881%" y="517" width="0.0806%" height="15" fill="rgb(248,180,41)" fg:x="531" fg:w="1"/><text x="43.0381%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7881%" y="501" width="0.0806%" height="15" fill="rgb(209,47,50)" fg:x="531" fg:w="1"/><text x="43.0381%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7881%" y="485" width="0.0806%" height="15" fill="rgb(243,65,31)" fg:x="531" fg:w="1"/><text x="43.0381%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7881%" y="469" width="0.0806%" height="15" fill="rgb(228,128,1)" fg:x="531" fg:w="1"/><text x="43.0381%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.7881%" y="549" width="0.1612%" height="15" fill="rgb(231,192,16)" fg:x="531" fg:w="2"/><text x="43.0381%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8687%" y="533" width="0.0806%" height="15" fill="rgb(224,26,40)" fg:x="532" fg:w="1"/><text x="43.1187%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.9492%" y="549" width="0.0806%" height="15" fill="rgb(214,192,17)" fg:x="533" fg:w="1"/><text x="43.1992%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.9492%" y="533" width="0.0806%" height="15" fill="rgb(225,147,18)" fg:x="533" fg:w="1"/><text x="43.1992%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.9492%" y="517" width="0.0806%" height="15" fill="rgb(205,35,11)" fg:x="533" fg:w="1"/><text x="43.1992%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.9492%" y="501" width="0.0806%" height="15" fill="rgb(242,40,42)" fg:x="533" fg:w="1"/><text x="43.1992%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="42.7881%" y="597" width="0.3223%" height="15" fill="rgb(250,170,13)" fg:x="531" fg:w="4"/><text x="43.0381%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="42.7881%" y="581" width="0.3223%" height="15" fill="rgb(240,161,28)" fg:x="531" fg:w="4"/><text x="43.0381%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="42.7881%" y="565" width="0.3223%" height="15" fill="rgb(245,179,12)" fg:x="531" fg:w="4"/><text x="43.0381%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0298%" y="549" width="0.0806%" height="15" fill="rgb(250,92,32)" fg:x="534" fg:w="1"/><text x="43.2798%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0298%" y="533" width="0.0806%" height="15" fill="rgb(233,10,40)" fg:x="534" fg:w="1"/><text x="43.2798%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0298%" y="517" width="0.0806%" height="15" fill="rgb(217,98,1)" fg:x="534" fg:w="1"/><text x="43.2798%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0298%" y="501" width="0.0806%" height="15" fill="rgb(238,202,7)" fg:x="534" fg:w="1"/><text x="43.2798%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="43.0298%" y="485" width="0.0806%" height="15" fill="rgb(222,91,3)" fg:x="534" fg:w="1"/><text x="43.2798%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0298%" y="469" width="0.0806%" height="15" fill="rgb(211,170,49)" fg:x="534" fg:w="1"/><text x="43.2798%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0298%" y="453" width="0.0806%" height="15" fill="rgb(253,139,18)" fg:x="534" fg:w="1"/><text x="43.2798%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0298%" y="437" width="0.0806%" height="15" fill="rgb(222,4,43)" fg:x="534" fg:w="1"/><text x="43.2798%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0298%" y="421" width="0.0806%" height="15" fill="rgb(207,205,12)" fg:x="534" fg:w="1"/><text x="43.2798%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0298%" y="405" width="0.0806%" height="15" fill="rgb(216,159,46)" fg:x="534" fg:w="1"/><text x="43.2798%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.0298%" y="389" width="0.0806%" height="15" fill="rgb(236,115,1)" fg:x="534" fg:w="1"/><text x="43.2798%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.0298%" y="373" width="0.0806%" height="15" fill="rgb(251,35,33)" fg:x="534" fg:w="1"/><text x="43.2798%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="43.1104%" y="581" width="0.0806%" height="15" fill="rgb(248,62,51)" fg:x="535" fg:w="1"/><text x="43.3604%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="43.1104%" y="565" width="0.0806%" height="15" fill="rgb(254,180,19)" fg:x="535" fg:w="1"/><text x="43.3604%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="42.7881%" y="629" width="0.4835%" height="15" fill="rgb(217,100,32)" fg:x="531" fg:w="6"/><text x="43.0381%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="42.7881%" y="613" width="0.4835%" height="15" fill="rgb(224,71,22)" fg:x="531" fg:w="6"/><text x="43.0381%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="43.1104%" y="597" width="0.1612%" height="15" fill="rgb(251,185,33)" fg:x="535" fg:w="2"/><text x="43.3604%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="43.1910%" y="581" width="0.0806%" height="15" fill="rgb(209,75,48)" fg:x="536" fg:w="1"/><text x="43.4410%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.1910%" y="565" width="0.0806%" height="15" fill="rgb(253,190,16)" fg:x="536" fg:w="1"/><text x="43.4410%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.1910%" y="549" width="0.0806%" height="15" fill="rgb(226,140,1)" fg:x="536" fg:w="1"/><text x="43.4410%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.1910%" y="533" width="0.0806%" height="15" fill="rgb(206,75,30)" fg:x="536" fg:w="1"/><text x="43.4410%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.1910%" y="517" width="0.0806%" height="15" fill="rgb(231,208,37)" fg:x="536" fg:w="1"/><text x="43.4410%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.1910%" y="501" width="0.0806%" height="15" fill="rgb(238,136,40)" fg:x="536" fg:w="1"/><text x="43.4410%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="43.1910%" y="485" width="0.0806%" height="15" fill="rgb(247,137,17)" fg:x="536" fg:w="1"/><text x="43.4410%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.1910%" y="469" width="0.0806%" height="15" fill="rgb(240,60,40)" fg:x="536" fg:w="1"/><text x="43.4410%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="43.2716%" y="629" width="0.1612%" height="15" fill="rgb(236,68,50)" fg:x="537" fg:w="2"/><text x="43.5216%" y="639.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="43.3521%" y="613" width="0.0806%" height="15" fill="rgb(230,42,12)" fg:x="538" fg:w="1"/><text x="43.6021%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4327%" y="613" width="0.0806%" height="15" fill="rgb(219,16,16)" fg:x="539" fg:w="1"/><text x="43.6827%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4327%" y="597" width="0.0806%" height="15" fill="rgb(220,38,35)" fg:x="539" fg:w="1"/><text x="43.6827%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.5133%" y="597" width="0.1612%" height="15" fill="rgb(228,33,1)" fg:x="540" fg:w="2"/><text x="43.7633%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="43.5133%" y="581" width="0.1612%" height="15" fill="rgb(241,46,31)" fg:x="540" fg:w="2"/><text x="43.7633%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="43.5133%" y="565" width="0.1612%" height="15" fill="rgb(232,58,20)" fg:x="540" fg:w="2"/><text x="43.7633%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.5133%" y="549" width="0.1612%" height="15" fill="rgb(206,228,53)" fg:x="540" fg:w="2"/><text x="43.7633%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.5133%" y="533" width="0.1612%" height="15" fill="rgb(206,88,33)" fg:x="540" fg:w="2"/><text x="43.7633%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="43.5133%" y="613" width="0.2417%" height="15" fill="rgb(238,69,7)" fg:x="540" fg:w="3"/><text x="43.7633%" y="623.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="43.6745%" y="597" width="0.0806%" height="15" fill="rgb(250,21,46)" fg:x="542" fg:w="1"/><text x="43.9245%" y="607.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.6745%" y="581" width="0.0806%" height="15" fill="rgb(215,212,21)" fg:x="542" fg:w="1"/><text x="43.9245%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="43.4327%" y="629" width="0.4029%" height="15" fill="rgb(211,35,12)" fg:x="539" fg:w="5"/><text x="43.6827%" y="639.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="43.7550%" y="613" width="0.0806%" height="15" fill="rgb(231,184,16)" fg:x="543" fg:w="1"/><text x="44.0050%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.7550%" y="597" width="0.0806%" height="15" fill="rgb(242,140,15)" fg:x="543" fg:w="1"/><text x="44.0050%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="43.7550%" y="581" width="0.0806%" height="15" fill="rgb(220,37,14)" fg:x="543" fg:w="1"/><text x="44.0050%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.7550%" y="565" width="0.0806%" height="15" fill="rgb(223,146,22)" fg:x="543" fg:w="1"/><text x="44.0050%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.8356%" y="565" width="0.0806%" height="15" fill="rgb(216,132,15)" fg:x="544" fg:w="1"/><text x="44.0856%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.9162%" y="469" width="0.0806%" height="15" fill="rgb(248,83,5)" fg:x="545" fg:w="1"/><text x="44.1662%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.9162%" y="517" width="0.1612%" height="15" fill="rgb(231,206,48)" fg:x="545" fg:w="2"/><text x="44.1662%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.9162%" y="501" width="0.1612%" height="15" fill="rgb(253,185,37)" fg:x="545" fg:w="2"/><text x="44.1662%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.9162%" y="485" width="0.1612%" height="15" fill="rgb(208,21,44)" fg:x="545" fg:w="2"/><text x="44.1662%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.9968%" y="469" width="0.0806%" height="15" fill="rgb(236,125,4)" fg:x="546" fg:w="1"/><text x="44.2468%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.9968%" y="453" width="0.0806%" height="15" fill="rgb(226,134,25)" fg:x="546" fg:w="1"/><text x="44.2468%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.9968%" y="437" width="0.0806%" height="15" fill="rgb(250,201,12)" fg:x="546" fg:w="1"/><text x="44.2468%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.9968%" y="421" width="0.0806%" height="15" fill="rgb(225,92,18)" fg:x="546" fg:w="1"/><text x="44.2468%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.9968%" y="405" width="0.0806%" height="15" fill="rgb(227,35,22)" fg:x="546" fg:w="1"/><text x="44.2468%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.9968%" y="389" width="0.0806%" height="15" fill="rgb(214,180,52)" fg:x="546" fg:w="1"/><text x="44.2468%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.9968%" y="373" width="0.0806%" height="15" fill="rgb(233,55,38)" fg:x="546" fg:w="1"/><text x="44.2468%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.9162%" y="533" width="0.2417%" height="15" fill="rgb(249,171,43)" fg:x="545" fg:w="3"/><text x="44.1662%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.0774%" y="517" width="0.0806%" height="15" fill="rgb(239,87,2)" fg:x="547" fg:w="1"/><text x="44.3274%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.0774%" y="501" width="0.0806%" height="15" fill="rgb(248,141,5)" fg:x="547" fg:w="1"/><text x="44.3274%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.0774%" y="485" width="0.0806%" height="15" fill="rgb(238,33,42)" fg:x="547" fg:w="1"/><text x="44.3274%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.0774%" y="469" width="0.0806%" height="15" fill="rgb(231,57,19)" fg:x="547" fg:w="1"/><text x="44.3274%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.0774%" y="453" width="0.0806%" height="15" fill="rgb(214,78,53)" fg:x="547" fg:w="1"/><text x="44.3274%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="44.0774%" y="437" width="0.0806%" height="15" fill="rgb(206,132,29)" fg:x="547" fg:w="1"/><text x="44.3274%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="44.0774%" y="421" width="0.0806%" height="15" fill="rgb(248,174,31)" fg:x="547" fg:w="1"/><text x="44.3274%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.1579%" y="501" width="0.0806%" height="15" fill="rgb(221,87,13)" fg:x="548" fg:w="1"/><text x="44.4079%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="44.1579%" y="533" width="0.1612%" height="15" fill="rgb(223,197,17)" fg:x="548" fg:w="2"/><text x="44.4079%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="44.1579%" y="517" width="0.1612%" height="15" fill="rgb(220,144,50)" fg:x="548" fg:w="2"/><text x="44.4079%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.2385%" y="501" width="0.0806%" height="15" fill="rgb(244,201,11)" fg:x="549" fg:w="1"/><text x="44.4885%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.2385%" y="485" width="0.0806%" height="15" fill="rgb(249,81,34)" fg:x="549" fg:w="1"/><text x="44.4885%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="43.8356%" y="581" width="0.5641%" height="15" fill="rgb(205,161,12)" fg:x="544" fg:w="7"/><text x="44.0856%" y="591.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="43.9162%" y="565" width="0.4835%" height="15" fill="rgb(252,139,50)" fg:x="545" fg:w="6"/><text x="44.1662%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="43.9162%" y="549" width="0.4835%" height="15" fill="rgb(205,169,14)" fg:x="545" fg:w="6"/><text x="44.1662%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.3191%" y="533" width="0.0806%" height="15" fill="rgb(248,198,33)" fg:x="550" fg:w="1"/><text x="44.5691%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.3191%" y="517" width="0.0806%" height="15" fill="rgb(236,23,21)" fg:x="550" fg:w="1"/><text x="44.5691%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.3191%" y="501" width="0.0806%" height="15" fill="rgb(231,13,38)" fg:x="550" fg:w="1"/><text x="44.5691%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.3191%" y="485" width="0.0806%" height="15" fill="rgb(239,139,21)" fg:x="550" fg:w="1"/><text x="44.5691%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.3191%" y="469" width="0.0806%" height="15" fill="rgb(222,164,45)" fg:x="550" fg:w="1"/><text x="44.5691%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.3191%" y="453" width="0.0806%" height="15" fill="rgb(230,52,27)" fg:x="550" fg:w="1"/><text x="44.5691%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.3191%" y="437" width="0.0806%" height="15" fill="rgb(227,143,42)" fg:x="550" fg:w="1"/><text x="44.5691%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.3191%" y="421" width="0.0806%" height="15" fill="rgb(249,127,1)" fg:x="550" fg:w="1"/><text x="44.5691%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.3191%" y="405" width="0.0806%" height="15" fill="rgb(243,107,26)" fg:x="550" fg:w="1"/><text x="44.5691%" y="415.50"></text></g><g><title>plugins_core::build::Build::occupying (34 samples, 2.74%)</title><rect x="41.7405%" y="661" width="2.7397%" height="15" fill="rgb(225,7,45)" fg:x="518" fg:w="34"/><text x="41.9905%" y="671.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (22 samples, 1.77%)</title><rect x="42.7075%" y="645" width="1.7728%" height="15" fill="rgb(241,88,38)" fg:x="530" fg:w="22"/><text x="42.9575%" y="655.50">p..</text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (8 samples, 0.64%)</title><rect x="43.8356%" y="629" width="0.6446%" height="15" fill="rgb(226,121,9)" fg:x="544" fg:w="8"/><text x="44.0856%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="43.8356%" y="613" width="0.6446%" height="15" fill="rgb(253,60,29)" fg:x="544" fg:w="8"/><text x="44.0856%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="43.8356%" y="597" width="0.6446%" height="15" fill="rgb(244,181,39)" fg:x="544" fg:w="8"/><text x="44.0856%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="44.3997%" y="581" width="0.0806%" height="15" fill="rgb(252,203,31)" fg:x="551" fg:w="1"/><text x="44.6497%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="44.3997%" y="565" width="0.0806%" height="15" fill="rgb(224,120,8)" fg:x="551" fg:w="1"/><text x="44.6497%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.3997%" y="549" width="0.0806%" height="15" fill="rgb(205,171,54)" fg:x="551" fg:w="1"/><text x="44.6497%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3997%" y="533" width="0.0806%" height="15" fill="rgb(235,89,11)" fg:x="551" fg:w="1"/><text x="44.6497%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3997%" y="517" width="0.0806%" height="15" fill="rgb(212,180,28)" fg:x="551" fg:w="1"/><text x="44.6497%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3997%" y="501" width="0.0806%" height="15" fill="rgb(247,84,49)" fg:x="551" fg:w="1"/><text x="44.6497%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3997%" y="485" width="0.0806%" height="15" fill="rgb(236,187,52)" fg:x="551" fg:w="1"/><text x="44.6497%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.3997%" y="469" width="0.0806%" height="15" fill="rgb(227,24,15)" fg:x="551" fg:w="1"/><text x="44.6497%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="44.5608%" y="629" width="0.0806%" height="15" fill="rgb(227,211,13)" fg:x="553" fg:w="1"/><text x="44.8108%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="44.5608%" y="613" width="0.0806%" height="15" fill="rgb(245,52,14)" fg:x="553" fg:w="1"/><text x="44.8108%" y="623.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.5608%" y="597" width="0.0806%" height="15" fill="rgb(225,185,13)" fg:x="553" fg:w="1"/><text x="44.8108%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6414%" y="485" width="0.0806%" height="15" fill="rgb(217,160,29)" fg:x="554" fg:w="1"/><text x="44.8914%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.6414%" y="501" width="0.1612%" height="15" fill="rgb(216,115,53)" fg:x="554" fg:w="2"/><text x="44.8914%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.7220%" y="485" width="0.0806%" height="15" fill="rgb(236,99,5)" fg:x="555" fg:w="1"/><text x="44.9720%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.7220%" y="469" width="0.0806%" height="15" fill="rgb(222,60,38)" fg:x="555" fg:w="1"/><text x="44.9720%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.7220%" y="453" width="0.0806%" height="15" fill="rgb(212,82,22)" fg:x="555" fg:w="1"/><text x="44.9720%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.7220%" y="437" width="0.0806%" height="15" fill="rgb(214,48,28)" fg:x="555" fg:w="1"/><text x="44.9720%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.7220%" y="421" width="0.0806%" height="15" fill="rgb(245,196,50)" fg:x="555" fg:w="1"/><text x="44.9720%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.7220%" y="405" width="0.0806%" height="15" fill="rgb(225,159,46)" fg:x="555" fg:w="1"/><text x="44.9720%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.7220%" y="389" width="0.0806%" height="15" fill="rgb(207,195,48)" fg:x="555" fg:w="1"/><text x="44.9720%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.7220%" y="373" width="0.0806%" height="15" fill="rgb(240,73,3)" fg:x="555" fg:w="1"/><text x="44.9720%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.7220%" y="357" width="0.0806%" height="15" fill="rgb(245,57,23)" fg:x="555" fg:w="1"/><text x="44.9720%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.7220%" y="341" width="0.0806%" height="15" fill="rgb(240,75,18)" fg:x="555" fg:w="1"/><text x="44.9720%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.7220%" y="325" width="0.0806%" height="15" fill="rgb(238,168,12)" fg:x="555" fg:w="1"/><text x="44.9720%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7220%" y="309" width="0.0806%" height="15" fill="rgb(226,20,40)" fg:x="555" fg:w="1"/><text x="44.9720%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="44.6414%" y="517" width="0.3223%" height="15" fill="rgb(224,130,35)" fg:x="554" fg:w="4"/><text x="44.8914%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.8026%" y="501" width="0.1612%" height="15" fill="rgb(225,63,41)" fg:x="556" fg:w="2"/><text x="45.0526%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="44.6414%" y="597" width="0.4029%" height="15" fill="rgb(219,3,3)" fg:x="554" fg:w="5"/><text x="44.8914%" y="607.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="44.6414%" y="581" width="0.4029%" height="15" fill="rgb(218,157,4)" fg:x="554" fg:w="5"/><text x="44.8914%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="44.6414%" y="565" width="0.4029%" height="15" fill="rgb(232,76,36)" fg:x="554" fg:w="5"/><text x="44.8914%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="44.6414%" y="549" width="0.4029%" height="15" fill="rgb(247,36,0)" fg:x="554" fg:w="5"/><text x="44.8914%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="44.6414%" y="533" width="0.4029%" height="15" fill="rgb(205,2,34)" fg:x="554" fg:w="5"/><text x="44.8914%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.9637%" y="517" width="0.0806%" height="15" fill="rgb(239,136,13)" fg:x="558" fg:w="1"/><text x="45.2137%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="45.0443%" y="453" width="0.0806%" height="15" fill="rgb(253,122,12)" fg:x="559" fg:w="1"/><text x="45.2943%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.0443%" y="437" width="0.0806%" height="15" fill="rgb(222,174,7)" fg:x="559" fg:w="1"/><text x="45.2943%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.73%)</title><rect x="44.4803%" y="645" width="0.7252%" height="15" fill="rgb(208,191,42)" fg:x="552" fg:w="9"/><text x="44.7303%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="44.6414%" y="629" width="0.5641%" height="15" fill="rgb(237,212,15)" fg:x="554" fg:w="7"/><text x="44.8914%" y="639.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="44.6414%" y="613" width="0.5641%" height="15" fill="rgb(215,65,20)" fg:x="554" fg:w="7"/><text x="44.8914%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="45.0443%" y="597" width="0.1612%" height="15" fill="rgb(232,103,11)" fg:x="559" fg:w="2"/><text x="45.2943%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="45.0443%" y="581" width="0.1612%" height="15" fill="rgb(235,148,18)" fg:x="559" fg:w="2"/><text x="45.2943%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="45.0443%" y="565" width="0.1612%" height="15" fill="rgb(240,173,7)" fg:x="559" fg:w="2"/><text x="45.2943%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="45.0443%" y="549" width="0.1612%" height="15" fill="rgb(228,182,25)" fg:x="559" fg:w="2"/><text x="45.2943%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="45.0443%" y="533" width="0.1612%" height="15" fill="rgb(247,3,52)" fg:x="559" fg:w="2"/><text x="45.2943%" y="543.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="45.0443%" y="517" width="0.1612%" height="15" fill="rgb(226,155,8)" fg:x="559" fg:w="2"/><text x="45.2943%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="45.0443%" y="501" width="0.1612%" height="15" fill="rgb(243,195,38)" fg:x="559" fg:w="2"/><text x="45.2943%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="45.0443%" y="485" width="0.1612%" height="15" fill="rgb(254,181,33)" fg:x="559" fg:w="2"/><text x="45.2943%" y="495.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="45.0443%" y="469" width="0.1612%" height="15" fill="rgb(232,98,23)" fg:x="559" fg:w="2"/><text x="45.2943%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.1249%" y="453" width="0.0806%" height="15" fill="rgb(205,23,10)" fg:x="560" fg:w="1"/><text x="45.3749%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (288 samples, 23.21%)</title><rect x="22.0790%" y="677" width="23.2071%" height="15" fill="rgb(212,124,38)" fg:x="274" fg:w="288"/><text x="22.3290%" y="687.50">plugins_core::build::BuildSurrounding..</text></g><g><title>plugins_core::build::Build::with_username (10 samples, 0.81%)</title><rect x="44.4803%" y="661" width="0.8058%" height="15" fill="rgb(228,207,2)" fg:x="552" fg:w="10"/><text x="44.7303%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="45.2055%" y="645" width="0.0806%" height="15" fill="rgb(215,120,22)" fg:x="561" fg:w="1"/><text x="45.4555%" y="655.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="45.2055%" y="629" width="0.0806%" height="15" fill="rgb(251,172,33)" fg:x="561" fg:w="1"/><text x="45.4555%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="45.2055%" y="613" width="0.0806%" height="15" fill="rgb(250,83,2)" fg:x="561" fg:w="1"/><text x="45.4555%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.2055%" y="597" width="0.0806%" height="15" fill="rgb(210,132,53)" fg:x="561" fg:w="1"/><text x="45.4555%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.2055%" y="581" width="0.0806%" height="15" fill="rgb(221,208,36)" fg:x="561" fg:w="1"/><text x="45.4555%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="45.2861%" y="677" width="0.0806%" height="15" fill="rgb(205,192,46)" fg:x="562" fg:w="1"/><text x="45.5361%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="45.2861%" y="661" width="0.0806%" height="15" fill="rgb(223,163,14)" fg:x="562" fg:w="1"/><text x="45.5361%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="45.2861%" y="645" width="0.0806%" height="15" fill="rgb(218,41,28)" fg:x="562" fg:w="1"/><text x="45.5361%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="45.2861%" y="629" width="0.0806%" height="15" fill="rgb(235,104,10)" fg:x="562" fg:w="1"/><text x="45.5361%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="45.2861%" y="613" width="0.0806%" height="15" fill="rgb(246,17,4)" fg:x="562" fg:w="1"/><text x="45.5361%" y="623.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="45.2861%" y="597" width="0.0806%" height="15" fill="rgb(240,7,16)" fg:x="562" fg:w="1"/><text x="45.5361%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="45.3666%" y="597" width="0.0806%" height="15" fill="rgb(213,160,23)" fg:x="563" fg:w="1"/><text x="45.6166%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="45.3666%" y="581" width="0.0806%" height="15" fill="rgb(251,179,49)" fg:x="563" fg:w="1"/><text x="45.6166%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.3666%" y="565" width="0.0806%" height="15" fill="rgb(247,198,10)" fg:x="563" fg:w="1"/><text x="45.6166%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3666%" y="549" width="0.0806%" height="15" fill="rgb(220,65,29)" fg:x="563" fg:w="1"/><text x="45.6166%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="45.4472%" y="581" width="0.0806%" height="15" fill="rgb(237,171,28)" fg:x="564" fg:w="1"/><text x="45.6972%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.4472%" y="565" width="0.0806%" height="15" fill="rgb(228,44,26)" fg:x="564" fg:w="1"/><text x="45.6972%" y="575.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="45.3666%" y="613" width="0.3223%" height="15" fill="rgb(216,210,27)" fg:x="563" fg:w="4"/><text x="45.6166%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="45.4472%" y="597" width="0.2417%" height="15" fill="rgb(252,10,17)" fg:x="564" fg:w="3"/><text x="45.6972%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="45.5278%" y="581" width="0.1612%" height="15" fill="rgb(214,172,30)" fg:x="565" fg:w="2"/><text x="45.7778%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="45.5278%" y="565" width="0.1612%" height="15" fill="rgb(253,130,48)" fg:x="565" fg:w="2"/><text x="45.7778%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="45.6084%" y="549" width="0.0806%" height="15" fill="rgb(226,99,43)" fg:x="566" fg:w="1"/><text x="45.8584%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.6084%" y="533" width="0.0806%" height="15" fill="rgb(239,111,26)" fg:x="566" fg:w="1"/><text x="45.8584%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="45.6084%" y="517" width="0.0806%" height="15" fill="rgb(240,27,53)" fg:x="566" fg:w="1"/><text x="45.8584%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.6084%" y="501" width="0.0806%" height="15" fill="rgb(254,163,12)" fg:x="566" fg:w="1"/><text x="45.8584%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="45.6084%" y="485" width="0.0806%" height="15" fill="rgb(225,51,48)" fg:x="566" fg:w="1"/><text x="45.8584%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.6890%" y="613" width="0.0806%" height="15" fill="rgb(205,19,32)" fg:x="567" fg:w="1"/><text x="45.9390%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.6890%" y="597" width="0.0806%" height="15" fill="rgb(218,119,26)" fg:x="567" fg:w="1"/><text x="45.9390%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.6890%" y="581" width="0.0806%" height="15" fill="rgb(231,173,33)" fg:x="567" fg:w="1"/><text x="45.9390%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.6890%" y="565" width="0.0806%" height="15" fill="rgb(241,100,29)" fg:x="567" fg:w="1"/><text x="45.9390%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.6890%" y="549" width="0.0806%" height="15" fill="rgb(250,194,34)" fg:x="567" fg:w="1"/><text x="45.9390%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.6890%" y="533" width="0.0806%" height="15" fill="rgb(215,23,50)" fg:x="567" fg:w="1"/><text x="45.9390%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="45.6890%" y="517" width="0.0806%" height="15" fill="rgb(206,49,37)" fg:x="567" fg:w="1"/><text x="45.9390%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.6890%" y="501" width="0.0806%" height="15" fill="rgb(247,39,21)" fg:x="567" fg:w="1"/><text x="45.9390%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="45.3666%" y="645" width="0.4835%" height="15" fill="rgb(209,220,15)" fg:x="563" fg:w="6"/><text x="45.6166%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="45.3666%" y="629" width="0.4835%" height="15" fill="rgb(206,41,33)" fg:x="563" fg:w="6"/><text x="45.6166%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="45.7695%" y="613" width="0.0806%" height="15" fill="rgb(221,225,45)" fg:x="568" fg:w="1"/><text x="46.0195%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.7695%" y="597" width="0.0806%" height="15" fill="rgb(216,27,18)" fg:x="568" fg:w="1"/><text x="46.0195%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.7695%" y="581" width="0.0806%" height="15" fill="rgb(250,193,34)" fg:x="568" fg:w="1"/><text x="46.0195%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.7695%" y="565" width="0.0806%" height="15" fill="rgb(227,215,20)" fg:x="568" fg:w="1"/><text x="46.0195%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::chain (1 samples, 0.08%)</title><rect x="45.9307%" y="613" width="0.0806%" height="15" fill="rgb(242,211,27)" fg:x="570" fg:w="1"/><text x="46.1807%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (2 samples, 0.16%)</title><rect x="45.9307%" y="629" width="0.1612%" height="15" fill="rgb(229,190,30)" fg:x="570" fg:w="2"/><text x="46.1807%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="46.0113%" y="613" width="0.0806%" height="15" fill="rgb(253,31,29)" fg:x="571" fg:w="1"/><text x="46.2613%" y="623.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="46.0113%" y="597" width="0.0806%" height="15" fill="rgb(229,177,52)" fg:x="571" fg:w="1"/><text x="46.2613%" y="607.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="46.0113%" y="581" width="0.0806%" height="15" fill="rgb(226,88,8)" fg:x="571" fg:w="1"/><text x="46.2613%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="45.8501%" y="645" width="0.3223%" height="15" fill="rgb(214,55,27)" fg:x="569" fg:w="4"/><text x="46.1001%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="46.0919%" y="629" width="0.0806%" height="15" fill="rgb(233,202,5)" fg:x="572" fg:w="1"/><text x="46.3419%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0919%" y="613" width="0.0806%" height="15" fill="rgb(251,49,30)" fg:x="572" fg:w="1"/><text x="46.3419%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0919%" y="597" width="0.0806%" height="15" fill="rgb(235,18,52)" fg:x="572" fg:w="1"/><text x="46.3419%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.0919%" y="581" width="0.0806%" height="15" fill="rgb(250,111,51)" fg:x="572" fg:w="1"/><text x="46.3419%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.0919%" y="565" width="0.0806%" height="15" fill="rgb(218,13,25)" fg:x="572" fg:w="1"/><text x="46.3419%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.0919%" y="549" width="0.0806%" height="15" fill="rgb(248,96,7)" fg:x="572" fg:w="1"/><text x="46.3419%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.0919%" y="533" width="0.0806%" height="15" fill="rgb(217,31,15)" fg:x="572" fg:w="1"/><text x="46.3419%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.0919%" y="517" width="0.0806%" height="15" fill="rgb(228,59,49)" fg:x="572" fg:w="1"/><text x="46.3419%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.0919%" y="501" width="0.0806%" height="15" fill="rgb(210,152,38)" fg:x="572" fg:w="1"/><text x="46.3419%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.0919%" y="485" width="0.0806%" height="15" fill="rgb(206,71,11)" fg:x="572" fg:w="1"/><text x="46.3419%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.0919%" y="469" width="0.0806%" height="15" fill="rgb(244,199,5)" fg:x="572" fg:w="1"/><text x="46.3419%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.0919%" y="453" width="0.0806%" height="15" fill="rgb(253,49,1)" fg:x="572" fg:w="1"/><text x="46.3419%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.0919%" y="437" width="0.0806%" height="15" fill="rgb(225,206,40)" fg:x="572" fg:w="1"/><text x="46.3419%" y="447.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="46.1724%" y="613" width="0.0806%" height="15" fill="rgb(243,116,47)" fg:x="573" fg:w="1"/><text x="46.4224%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1724%" y="597" width="0.0806%" height="15" fill="rgb(219,225,16)" fg:x="573" fg:w="1"/><text x="46.4224%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1724%" y="581" width="0.0806%" height="15" fill="rgb(233,29,47)" fg:x="573" fg:w="1"/><text x="46.4224%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2530%" y="597" width="0.0806%" height="15" fill="rgb(250,179,18)" fg:x="574" fg:w="1"/><text x="46.5030%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="46.3336%" y="581" width="0.1612%" height="15" fill="rgb(215,176,6)" fg:x="575" fg:w="2"/><text x="46.5836%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.3336%" y="565" width="0.1612%" height="15" fill="rgb(214,117,39)" fg:x="575" fg:w="2"/><text x="46.5836%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="46.4142%" y="549" width="0.0806%" height="15" fill="rgb(247,183,36)" fg:x="576" fg:w="1"/><text x="46.6642%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.4142%" y="533" width="0.0806%" height="15" fill="rgb(237,200,3)" fg:x="576" fg:w="1"/><text x="46.6642%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="46.4142%" y="517" width="0.0806%" height="15" fill="rgb(212,220,24)" fg:x="576" fg:w="1"/><text x="46.6642%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="46.4142%" y="501" width="0.0806%" height="15" fill="rgb(245,216,20)" fg:x="576" fg:w="1"/><text x="46.6642%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.4142%" y="485" width="0.0806%" height="15" fill="rgb(219,124,7)" fg:x="576" fg:w="1"/><text x="46.6642%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.4142%" y="469" width="0.0806%" height="15" fill="rgb(227,167,8)" fg:x="576" fg:w="1"/><text x="46.6642%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.4142%" y="453" width="0.0806%" height="15" fill="rgb(241,37,2)" fg:x="576" fg:w="1"/><text x="46.6642%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.4142%" y="437" width="0.0806%" height="15" fill="rgb(238,134,33)" fg:x="576" fg:w="1"/><text x="46.6642%" y="447.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (481 samples, 38.76%)</title><rect x="7.8163%" y="693" width="38.7591%" height="15" fill="rgb(248,48,27)" fg:x="97" fg:w="481"/><text x="8.0663%" y="703.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::make (15 samples, 1.21%)</title><rect x="45.3666%" y="677" width="1.2087%" height="15" fill="rgb(212,14,16)" fg:x="563" fg:w="15"/><text x="45.6166%" y="687.50"></text></g><g><title>plugins_core::build::QuickThing::make (15 samples, 1.21%)</title><rect x="45.3666%" y="661" width="1.2087%" height="15" fill="rgb(217,205,37)" fg:x="563" fg:w="15"/><text x="45.6166%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="46.1724%" y="645" width="0.4029%" height="15" fill="rgb(233,185,47)" fg:x="573" fg:w="5"/><text x="46.4224%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="46.1724%" y="629" width="0.4029%" height="15" fill="rgb(244,88,8)" fg:x="573" fg:w="5"/><text x="46.4224%" y="639.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="46.2530%" y="613" width="0.3223%" height="15" fill="rgb(213,0,20)" fg:x="574" fg:w="4"/><text x="46.5030%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="46.3336%" y="597" width="0.2417%" height="15" fill="rgb(238,159,36)" fg:x="575" fg:w="3"/><text x="46.5836%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.4948%" y="581" width="0.0806%" height="15" fill="rgb(253,173,17)" fg:x="577" fg:w="1"/><text x="46.7448%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.4948%" y="565" width="0.0806%" height="15" fill="rgb(221,23,28)" fg:x="577" fg:w="1"/><text x="46.7448%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.5753%" y="693" width="0.1612%" height="15" fill="rgb(218,113,15)" fg:x="578" fg:w="2"/><text x="46.8253%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="46.7365%" y="693" width="0.0806%" height="15" fill="rgb(233,58,3)" fg:x="580" fg:w="1"/><text x="46.9865%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.7365%" y="677" width="0.0806%" height="15" fill="rgb(250,46,35)" fg:x="580" fg:w="1"/><text x="46.9865%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="46.8171%" y="693" width="0.0806%" height="15" fill="rgb(210,169,11)" fg:x="581" fg:w="1"/><text x="47.0671%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="46.8171%" y="677" width="0.0806%" height="15" fill="rgb(246,88,19)" fg:x="581" fg:w="1"/><text x="47.0671%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="46.8171%" y="661" width="0.0806%" height="15" fill="rgb(206,81,49)" fg:x="581" fg:w="1"/><text x="47.0671%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.8171%" y="645" width="0.0806%" height="15" fill="rgb(232,144,18)" fg:x="581" fg:w="1"/><text x="47.0671%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.8171%" y="629" width="0.0806%" height="15" fill="rgb(235,2,27)" fg:x="581" fg:w="1"/><text x="47.0671%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.8977%" y="677" width="0.0806%" height="15" fill="rgb(239,157,39)" fg:x="582" fg:w="1"/><text x="47.1477%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="46.9782%" y="677" width="0.0806%" height="15" fill="rgb(220,11,17)" fg:x="583" fg:w="1"/><text x="47.2282%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="46.9782%" y="661" width="0.0806%" height="15" fill="rgb(243,94,50)" fg:x="583" fg:w="1"/><text x="47.2282%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.9782%" y="645" width="0.0806%" height="15" fill="rgb(218,22,0)" fg:x="583" fg:w="1"/><text x="47.2282%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.9782%" y="629" width="0.0806%" height="15" fill="rgb(249,70,21)" fg:x="583" fg:w="1"/><text x="47.2282%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="46.9782%" y="613" width="0.0806%" height="15" fill="rgb(245,111,46)" fg:x="583" fg:w="1"/><text x="47.2282%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="46.9782%" y="597" width="0.0806%" height="15" fill="rgb(244,183,12)" fg:x="583" fg:w="1"/><text x="47.2282%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="46.9782%" y="581" width="0.0806%" height="15" fill="rgb(207,117,0)" fg:x="583" fg:w="1"/><text x="47.2282%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.9782%" y="565" width="0.0806%" height="15" fill="rgb(206,20,43)" fg:x="583" fg:w="1"/><text x="47.2282%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.9782%" y="549" width="0.0806%" height="15" fill="rgb(221,104,11)" fg:x="583" fg:w="1"/><text x="47.2282%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="46.9782%" y="533" width="0.0806%" height="15" fill="rgb(254,36,50)" fg:x="583" fg:w="1"/><text x="47.2282%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="46.9782%" y="517" width="0.0806%" height="15" fill="rgb(252,17,15)" fg:x="583" fg:w="1"/><text x="47.2282%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.9782%" y="501" width="0.0806%" height="15" fill="rgb(219,129,43)" fg:x="583" fg:w="1"/><text x="47.2282%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.9782%" y="485" width="0.0806%" height="15" fill="rgb(205,34,45)" fg:x="583" fg:w="1"/><text x="47.2282%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="46.9782%" y="469" width="0.0806%" height="15" fill="rgb(251,201,32)" fg:x="583" fg:w="1"/><text x="47.2282%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="46.9782%" y="453" width="0.0806%" height="15" fill="rgb(205,56,0)" fg:x="583" fg:w="1"/><text x="47.2282%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="46.9782%" y="437" width="0.0806%" height="15" fill="rgb(211,193,27)" fg:x="583" fg:w="1"/><text x="47.2282%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="46.9782%" y="421" width="0.0806%" height="15" fill="rgb(231,100,42)" fg:x="583" fg:w="1"/><text x="47.2282%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="46.9782%" y="405" width="0.0806%" height="15" fill="rgb(245,85,27)" fg:x="583" fg:w="1"/><text x="47.2282%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="46.9782%" y="389" width="0.0806%" height="15" fill="rgb(241,76,24)" fg:x="583" fg:w="1"/><text x="47.2282%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.9782%" y="373" width="0.0806%" height="15" fill="rgb(249,157,15)" fg:x="583" fg:w="1"/><text x="47.2282%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="46.9782%" y="357" width="0.0806%" height="15" fill="rgb(222,218,25)" fg:x="583" fg:w="1"/><text x="47.2282%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.9782%" y="341" width="0.0806%" height="15" fill="rgb(252,156,52)" fg:x="583" fg:w="1"/><text x="47.2282%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9782%" y="325" width="0.0806%" height="15" fill="rgb(211,185,7)" fg:x="583" fg:w="1"/><text x="47.2282%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="47.0588%" y="661" width="0.0806%" height="15" fill="rgb(234,108,24)" fg:x="584" fg:w="1"/><text x="47.3088%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="47.1394%" y="661" width="0.0806%" height="15" fill="rgb(227,218,2)" fg:x="585" fg:w="1"/><text x="47.3894%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.1394%" y="645" width="0.0806%" height="15" fill="rgb(224,0,36)" fg:x="585" fg:w="1"/><text x="47.3894%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.1394%" y="629" width="0.0806%" height="15" fill="rgb(233,201,10)" fg:x="585" fg:w="1"/><text x="47.3894%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.1394%" y="613" width="0.0806%" height="15" fill="rgb(252,209,14)" fg:x="585" fg:w="1"/><text x="47.3894%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.1394%" y="597" width="0.0806%" height="15" fill="rgb(205,93,49)" fg:x="585" fg:w="1"/><text x="47.3894%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.1394%" y="581" width="0.0806%" height="15" fill="rgb(234,116,45)" fg:x="585" fg:w="1"/><text x="47.3894%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.1394%" y="565" width="0.0806%" height="15" fill="rgb(248,89,35)" fg:x="585" fg:w="1"/><text x="47.3894%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.1394%" y="549" width="0.0806%" height="15" fill="rgb(233,167,45)" fg:x="585" fg:w="1"/><text x="47.3894%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.1394%" y="533" width="0.0806%" height="15" fill="rgb(248,228,14)" fg:x="585" fg:w="1"/><text x="47.3894%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.1394%" y="517" width="0.0806%" height="15" fill="rgb(246,91,14)" fg:x="585" fg:w="1"/><text x="47.3894%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.1394%" y="501" width="0.0806%" height="15" fill="rgb(227,142,5)" fg:x="585" fg:w="1"/><text x="47.3894%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.1394%" y="485" width="0.0806%" height="15" fill="rgb(221,63,33)" fg:x="585" fg:w="1"/><text x="47.3894%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="47.2200%" y="661" width="0.0806%" height="15" fill="rgb(233,49,0)" fg:x="586" fg:w="1"/><text x="47.4700%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="47.2200%" y="645" width="0.0806%" height="15" fill="rgb(251,115,38)" fg:x="586" fg:w="1"/><text x="47.4700%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="47.2200%" y="629" width="0.0806%" height="15" fill="rgb(231,214,32)" fg:x="586" fg:w="1"/><text x="47.4700%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="47.3006%" y="661" width="0.0806%" height="15" fill="rgb(248,73,46)" fg:x="587" fg:w="1"/><text x="47.5506%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="47.3006%" y="645" width="0.0806%" height="15" fill="rgb(237,156,4)" fg:x="587" fg:w="1"/><text x="47.5506%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.3006%" y="629" width="0.0806%" height="15" fill="rgb(227,132,2)" fg:x="587" fg:w="1"/><text x="47.5506%" y="639.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="47.3811%" y="661" width="0.1612%" height="15" fill="rgb(248,161,9)" fg:x="588" fg:w="2"/><text x="47.6311%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="47.3811%" y="645" width="0.1612%" height="15" fill="rgb(238,77,38)" fg:x="588" fg:w="2"/><text x="47.6311%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="47.3811%" y="629" width="0.1612%" height="15" fill="rgb(222,166,40)" fg:x="588" fg:w="2"/><text x="47.6311%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.3811%" y="613" width="0.1612%" height="15" fill="rgb(214,168,45)" fg:x="588" fg:w="2"/><text x="47.6311%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.3811%" y="597" width="0.1612%" height="15" fill="rgb(226,64,37)" fg:x="588" fg:w="2"/><text x="47.6311%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="47.4617%" y="581" width="0.0806%" height="15" fill="rgb(232,210,43)" fg:x="589" fg:w="1"/><text x="47.7117%" y="591.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="47.4617%" y="565" width="0.0806%" height="15" fill="rgb(214,76,33)" fg:x="589" fg:w="1"/><text x="47.7117%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="47.5423%" y="645" width="0.1612%" height="15" fill="rgb(210,78,5)" fg:x="590" fg:w="2"/><text x="47.7923%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="47.5423%" y="629" width="0.1612%" height="15" fill="rgb(211,107,37)" fg:x="590" fg:w="2"/><text x="47.7923%" y="639.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="47.5423%" y="613" width="0.1612%" height="15" fill="rgb(249,67,16)" fg:x="590" fg:w="2"/><text x="47.7923%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.7840%" y="501" width="0.0806%" height="15" fill="rgb(222,114,31)" fg:x="593" fg:w="1"/><text x="48.0340%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.7840%" y="485" width="0.0806%" height="15" fill="rgb(242,118,19)" fg:x="593" fg:w="1"/><text x="48.0340%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.7840%" y="469" width="0.0806%" height="15" fill="rgb(223,115,1)" fg:x="593" fg:w="1"/><text x="48.0340%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="47.7840%" y="453" width="0.0806%" height="15" fill="rgb(241,182,54)" fg:x="593" fg:w="1"/><text x="48.0340%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.7840%" y="629" width="0.1612%" height="15" fill="rgb(244,166,36)" fg:x="593" fg:w="2"/><text x="48.0340%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.7840%" y="613" width="0.1612%" height="15" fill="rgb(241,52,43)" fg:x="593" fg:w="2"/><text x="48.0340%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="47.7840%" y="597" width="0.1612%" height="15" fill="rgb(236,82,9)" fg:x="593" fg:w="2"/><text x="48.0340%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="47.7840%" y="581" width="0.1612%" height="15" fill="rgb(241,119,0)" fg:x="593" fg:w="2"/><text x="48.0340%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="47.7840%" y="565" width="0.1612%" height="15" fill="rgb(221,19,22)" fg:x="593" fg:w="2"/><text x="48.0340%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="47.7840%" y="549" width="0.1612%" height="15" fill="rgb(254,144,35)" fg:x="593" fg:w="2"/><text x="48.0340%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="47.7840%" y="533" width="0.1612%" height="15" fill="rgb(246,132,30)" fg:x="593" fg:w="2"/><text x="48.0340%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="47.7840%" y="517" width="0.1612%" height="15" fill="rgb(234,69,28)" fg:x="593" fg:w="2"/><text x="48.0340%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="47.8646%" y="501" width="0.0806%" height="15" fill="rgb(219,106,47)" fg:x="594" fg:w="1"/><text x="48.1146%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="47.8646%" y="485" width="0.0806%" height="15" fill="rgb(218,79,24)" fg:x="594" fg:w="1"/><text x="48.1146%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.9452%" y="613" width="0.0806%" height="15" fill="rgb(225,26,21)" fg:x="595" fg:w="1"/><text x="48.1952%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="48.4287%" y="549" width="0.3223%" height="15" fill="rgb(217,68,49)" fg:x="601" fg:w="4"/><text x="48.6787%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="48.4287%" y="533" width="0.3223%" height="15" fill="rgb(220,204,28)" fg:x="601" fg:w="4"/><text x="48.6787%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="48.4287%" y="517" width="0.3223%" height="15" fill="rgb(237,208,43)" fg:x="601" fg:w="4"/><text x="48.6787%" y="527.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="48.4287%" y="501" width="0.3223%" height="15" fill="rgb(213,97,42)" fg:x="601" fg:w="4"/><text x="48.6787%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.73%)</title><rect x="48.1064%" y="597" width="0.7252%" height="15" fill="rgb(238,96,52)" fg:x="597" fg:w="9"/><text x="48.3564%" y="607.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="48.1869%" y="581" width="0.6446%" height="15" fill="rgb(228,14,13)" fg:x="598" fg:w="8"/><text x="48.4369%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="48.3481%" y="565" width="0.4835%" height="15" fill="rgb(219,123,13)" fg:x="600" fg:w="6"/><text x="48.5981%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="48.7510%" y="549" width="0.0806%" height="15" fill="rgb(216,144,17)" fg:x="605" fg:w="1"/><text x="49.0010%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (11 samples, 0.89%)</title><rect x="48.0258%" y="613" width="0.8864%" height="15" fill="rgb(230,228,29)" fg:x="596" fg:w="11"/><text x="48.2758%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="48.8316%" y="597" width="0.0806%" height="15" fill="rgb(233,18,5)" fg:x="606" fg:w="1"/><text x="49.0816%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.9122%" y="597" width="0.0806%" height="15" fill="rgb(233,197,12)" fg:x="607" fg:w="1"/><text x="49.1622%" y="607.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="49.3956%" y="501" width="0.0806%" height="15" fill="rgb(234,140,29)" fg:x="613" fg:w="1"/><text x="49.6456%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="48.9927%" y="597" width="0.6446%" height="15" fill="rgb(233,113,19)" fg:x="608" fg:w="8"/><text x="49.2427%" y="607.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="49.0733%" y="581" width="0.5641%" height="15" fill="rgb(246,209,13)" fg:x="609" fg:w="7"/><text x="49.3233%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="49.2345%" y="565" width="0.4029%" height="15" fill="rgb(242,79,54)" fg:x="611" fg:w="5"/><text x="49.4845%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="49.3151%" y="549" width="0.3223%" height="15" fill="rgb(219,73,16)" fg:x="612" fg:w="4"/><text x="49.5651%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="49.3956%" y="533" width="0.2417%" height="15" fill="rgb(224,52,10)" fg:x="613" fg:w="3"/><text x="49.6456%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="49.3956%" y="517" width="0.2417%" height="15" fill="rgb(237,179,5)" fg:x="613" fg:w="3"/><text x="49.6456%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="49.4762%" y="501" width="0.1612%" height="15" fill="rgb(231,20,6)" fg:x="614" fg:w="2"/><text x="49.7262%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="49.6374%" y="549" width="0.1612%" height="15" fill="rgb(253,171,45)" fg:x="616" fg:w="2"/><text x="49.8874%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="49.6374%" y="533" width="0.1612%" height="15" fill="rgb(230,75,49)" fg:x="616" fg:w="2"/><text x="49.8874%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="49.7985%" y="533" width="0.0806%" height="15" fill="rgb(216,83,46)" fg:x="618" fg:w="1"/><text x="50.0485%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.7985%" y="517" width="0.0806%" height="15" fill="rgb(236,56,9)" fg:x="618" fg:w="1"/><text x="50.0485%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="49.6374%" y="581" width="0.3223%" height="15" fill="rgb(215,28,34)" fg:x="616" fg:w="4"/><text x="49.8874%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="49.6374%" y="565" width="0.3223%" height="15" fill="rgb(230,222,20)" fg:x="616" fg:w="4"/><text x="49.8874%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="49.7985%" y="549" width="0.1612%" height="15" fill="rgb(235,209,51)" fg:x="618" fg:w="2"/><text x="50.0485%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.8791%" y="533" width="0.0806%" height="15" fill="rgb(235,167,1)" fg:x="619" fg:w="1"/><text x="50.1291%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.8791%" y="517" width="0.0806%" height="15" fill="rgb(248,220,0)" fg:x="619" fg:w="1"/><text x="50.1291%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8791%" y="501" width="0.0806%" height="15" fill="rgb(239,0,18)" fg:x="619" fg:w="1"/><text x="50.1291%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="49.9597%" y="581" width="0.4835%" height="15" fill="rgb(229,179,11)" fg:x="620" fg:w="6"/><text x="50.2097%" y="591.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="49.9597%" y="565" width="0.4835%" height="15" fill="rgb(226,116,53)" fg:x="620" fg:w="6"/><text x="50.2097%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="50.2820%" y="549" width="0.1612%" height="15" fill="rgb(218,1,49)" fg:x="624" fg:w="2"/><text x="50.5320%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="50.2820%" y="533" width="0.1612%" height="15" fill="rgb(208,184,47)" fg:x="624" fg:w="2"/><text x="50.5320%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="50.5238%" y="517" width="0.1612%" height="15" fill="rgb(238,174,3)" fg:x="627" fg:w="2"/><text x="50.7738%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="50.4432%" y="565" width="0.4029%" height="15" fill="rgb(247,188,6)" fg:x="626" fg:w="5"/><text x="50.6932%" y="575.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="50.5238%" y="549" width="0.3223%" height="15" fill="rgb(211,165,46)" fg:x="627" fg:w="4"/><text x="50.7738%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="50.5238%" y="533" width="0.3223%" height="15" fill="rgb(222,190,10)" fg:x="627" fg:w="4"/><text x="50.7738%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="50.6849%" y="517" width="0.1612%" height="15" fill="rgb(206,185,3)" fg:x="629" fg:w="2"/><text x="50.9349%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="50.9267%" y="549" width="0.4835%" height="15" fill="rgb(244,125,37)" fg:x="632" fg:w="6"/><text x="51.1767%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="51.1684%" y="533" width="0.2417%" height="15" fill="rgb(211,43,7)" fg:x="635" fg:w="3"/><text x="51.4184%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="51.1684%" y="517" width="0.2417%" height="15" fill="rgb(250,41,42)" fg:x="635" fg:w="3"/><text x="51.4184%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="51.2490%" y="501" width="0.1612%" height="15" fill="rgb(254,54,42)" fg:x="636" fg:w="2"/><text x="51.4990%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.3296%" y="485" width="0.0806%" height="15" fill="rgb(213,71,43)" fg:x="637" fg:w="1"/><text x="51.5796%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.3296%" y="469" width="0.0806%" height="15" fill="rgb(249,3,44)" fg:x="637" fg:w="1"/><text x="51.5796%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="51.3296%" y="453" width="0.0806%" height="15" fill="rgb(229,80,41)" fg:x="637" fg:w="1"/><text x="51.5796%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="51.4907%" y="533" width="0.0806%" height="15" fill="rgb(231,25,28)" fg:x="639" fg:w="1"/><text x="51.7407%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.4907%" y="517" width="0.0806%" height="15" fill="rgb(208,79,48)" fg:x="639" fg:w="1"/><text x="51.7407%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="51.4907%" y="501" width="0.0806%" height="15" fill="rgb(207,196,38)" fg:x="639" fg:w="1"/><text x="51.7407%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.4907%" y="485" width="0.0806%" height="15" fill="rgb(228,105,49)" fg:x="639" fg:w="1"/><text x="51.7407%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="51.5713%" y="517" width="0.0806%" height="15" fill="rgb(237,99,15)" fg:x="640" fg:w="1"/><text x="51.8213%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.5713%" y="501" width="0.0806%" height="15" fill="rgb(224,207,46)" fg:x="640" fg:w="1"/><text x="51.8213%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="51.5713%" y="485" width="0.0806%" height="15" fill="rgb(249,117,50)" fg:x="640" fg:w="1"/><text x="51.8213%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="51.6519%" y="517" width="0.0806%" height="15" fill="rgb(248,17,13)" fg:x="641" fg:w="1"/><text x="51.9019%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.6519%" y="501" width="0.0806%" height="15" fill="rgb(228,187,36)" fg:x="641" fg:w="1"/><text x="51.9019%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="51.6519%" y="485" width="0.0806%" height="15" fill="rgb(234,132,20)" fg:x="641" fg:w="1"/><text x="51.9019%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="51.5713%" y="533" width="0.4835%" height="15" fill="rgb(209,170,46)" fg:x="640" fg:w="6"/><text x="51.8213%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="51.7325%" y="517" width="0.3223%" height="15" fill="rgb(237,23,19)" fg:x="642" fg:w="4"/><text x="51.9825%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="51.8131%" y="501" width="0.2417%" height="15" fill="rgb(227,21,26)" fg:x="643" fg:w="3"/><text x="52.0631%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="51.8131%" y="485" width="0.2417%" height="15" fill="rgb(222,220,48)" fg:x="643" fg:w="3"/><text x="52.0631%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="50.8461%" y="565" width="1.2893%" height="15" fill="rgb(214,9,16)" fg:x="631" fg:w="16"/><text x="51.0961%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="51.4102%" y="549" width="0.7252%" height="15" fill="rgb(209,73,30)" fg:x="638" fg:w="9"/><text x="51.6602%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.0548%" y="533" width="0.0806%" height="15" fill="rgb(207,20,33)" fg:x="646" fg:w="1"/><text x="52.3048%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.77%)</title><rect x="50.4432%" y="581" width="1.7728%" height="15" fill="rgb(219,153,12)" fg:x="626" fg:w="22"/><text x="50.6932%" y="591.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.1354%" y="565" width="0.0806%" height="15" fill="rgb(235,97,25)" fg:x="647" fg:w="1"/><text x="52.3854%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="52.1354%" y="549" width="0.0806%" height="15" fill="rgb(244,30,34)" fg:x="647" fg:w="1"/><text x="52.3854%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.1354%" y="533" width="0.0806%" height="15" fill="rgb(214,106,45)" fg:x="647" fg:w="1"/><text x="52.3854%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.66%)</title><rect x="49.6374%" y="597" width="2.6591%" height="15" fill="rgb(226,41,9)" fg:x="616" fg:w="33"/><text x="49.8874%" y="607.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.2160%" y="581" width="0.0806%" height="15" fill="rgb(253,139,29)" fg:x="648" fg:w="1"/><text x="52.4660%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="52.2160%" y="565" width="0.0806%" height="15" fill="rgb(213,205,39)" fg:x="648" fg:w="1"/><text x="52.4660%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (51 samples, 4.11%)</title><rect x="48.9122%" y="613" width="4.1096%" height="15" fill="rgb(209,27,10)" fg:x="607" fg:w="51"/><text x="49.1622%" y="623.50">serd..</text></g><g><title>std::io::Write::write_all (9 samples, 0.73%)</title><rect x="52.2965%" y="597" width="0.7252%" height="15" fill="rgb(249,142,16)" fg:x="649" fg:w="9"/><text x="52.5465%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (8 samples, 0.64%)</title><rect x="52.3771%" y="581" width="0.6446%" height="15" fill="rgb(242,65,12)" fg:x="650" fg:w="8"/><text x="52.6271%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.64%)</title><rect x="52.3771%" y="565" width="0.6446%" height="15" fill="rgb(232,48,10)" fg:x="650" fg:w="8"/><text x="52.6271%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.48%)</title><rect x="52.5383%" y="549" width="0.4835%" height="15" fill="rgb(253,67,19)" fg:x="652" fg:w="6"/><text x="52.7883%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.48%)</title><rect x="52.5383%" y="533" width="0.4835%" height="15" fill="rgb(227,93,29)" fg:x="652" fg:w="6"/><text x="52.7883%" y="543.50"></text></g><g><title>realloc (6 samples, 0.48%)</title><rect x="52.5383%" y="517" width="0.4835%" height="15" fill="rgb(226,189,53)" fg:x="652" fg:w="6"/><text x="52.7883%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (64 samples, 5.16%)</title><rect x="47.9452%" y="629" width="5.1571%" height="15" fill="rgb(223,224,1)" fg:x="595" fg:w="64"/><text x="48.1952%" y="639.50">&lt;serde..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="53.0218%" y="613" width="0.0806%" height="15" fill="rgb(221,84,32)" fg:x="658" fg:w="1"/><text x="53.2718%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.0218%" y="597" width="0.0806%" height="15" fill="rgb(214,189,28)" fg:x="658" fg:w="1"/><text x="53.2718%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.0218%" y="581" width="0.0806%" height="15" fill="rgb(234,7,52)" fg:x="658" fg:w="1"/><text x="53.2718%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.0218%" y="565" width="0.0806%" height="15" fill="rgb(249,73,31)" fg:x="658" fg:w="1"/><text x="53.2718%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="53.1023%" y="597" width="0.1612%" height="15" fill="rgb(253,153,41)" fg:x="659" fg:w="2"/><text x="53.3523%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.3441%" y="581" width="0.0806%" height="15" fill="rgb(249,52,34)" fg:x="662" fg:w="1"/><text x="53.5941%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.4247%" y="565" width="0.0806%" height="15" fill="rgb(236,177,47)" fg:x="663" fg:w="1"/><text x="53.6747%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.5052%" y="565" width="0.0806%" height="15" fill="rgb(252,185,45)" fg:x="664" fg:w="1"/><text x="53.7552%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="53.5858%" y="549" width="0.1612%" height="15" fill="rgb(251,15,30)" fg:x="665" fg:w="2"/><text x="53.8358%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.7470%" y="549" width="0.0806%" height="15" fill="rgb(233,31,4)" fg:x="667" fg:w="1"/><text x="53.9970%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.7470%" y="533" width="0.0806%" height="15" fill="rgb(254,44,24)" fg:x="667" fg:w="1"/><text x="53.9970%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.8276%" y="533" width="0.0806%" height="15" fill="rgb(218,54,1)" fg:x="668" fg:w="1"/><text x="54.0776%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.9081%" y="533" width="0.0806%" height="15" fill="rgb(243,209,39)" fg:x="669" fg:w="1"/><text x="54.1581%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.9081%" y="517" width="0.0806%" height="15" fill="rgb(206,75,33)" fg:x="669" fg:w="1"/><text x="54.1581%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.9887%" y="517" width="0.0806%" height="15" fill="rgb(223,108,18)" fg:x="670" fg:w="1"/><text x="54.2387%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.9887%" y="501" width="0.0806%" height="15" fill="rgb(244,89,31)" fg:x="670" fg:w="1"/><text x="54.2387%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="53.1023%" y="629" width="1.0475%" height="15" fill="rgb(222,167,27)" fg:x="659" fg:w="13"/><text x="53.3523%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.05%)</title><rect x="53.1023%" y="613" width="1.0475%" height="15" fill="rgb(247,41,16)" fg:x="659" fg:w="13"/><text x="53.3523%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="53.2635%" y="597" width="0.8864%" height="15" fill="rgb(233,168,40)" fg:x="661" fg:w="11"/><text x="53.5135%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="53.4247%" y="581" width="0.7252%" height="15" fill="rgb(205,211,8)" fg:x="663" fg:w="9"/><text x="53.6747%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="53.5858%" y="565" width="0.5641%" height="15" fill="rgb(238,105,11)" fg:x="665" fg:w="7"/><text x="53.8358%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="53.8276%" y="549" width="0.3223%" height="15" fill="rgb(223,142,52)" fg:x="668" fg:w="4"/><text x="54.0776%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="53.9887%" y="533" width="0.1612%" height="15" fill="rgb(238,51,33)" fg:x="670" fg:w="2"/><text x="54.2387%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.0693%" y="517" width="0.0806%" height="15" fill="rgb(231,188,43)" fg:x="671" fg:w="1"/><text x="54.3193%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.0693%" y="501" width="0.0806%" height="15" fill="rgb(216,92,17)" fg:x="671" fg:w="1"/><text x="54.3193%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.0693%" y="485" width="0.0806%" height="15" fill="rgb(228,2,40)" fg:x="671" fg:w="1"/><text x="54.3193%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.1499%" y="565" width="0.0806%" height="15" fill="rgb(226,73,15)" fg:x="672" fg:w="1"/><text x="54.3999%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.2305%" y="549" width="0.1612%" height="15" fill="rgb(227,66,46)" fg:x="673" fg:w="2"/><text x="54.4805%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.5528%" y="533" width="0.1612%" height="15" fill="rgb(209,71,6)" fg:x="677" fg:w="2"/><text x="54.8028%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.7139%" y="517" width="0.1612%" height="15" fill="rgb(246,100,25)" fg:x="679" fg:w="2"/><text x="54.9639%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="54.8751%" y="517" width="0.1612%" height="15" fill="rgb(248,185,27)" fg:x="681" fg:w="2"/><text x="55.1251%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="54.9557%" y="501" width="0.0806%" height="15" fill="rgb(225,118,47)" fg:x="682" fg:w="1"/><text x="55.2057%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.9557%" y="485" width="0.0806%" height="15" fill="rgb(220,185,44)" fg:x="682" fg:w="1"/><text x="55.2057%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="54.1499%" y="597" width="1.0475%" height="15" fill="rgb(227,95,24)" fg:x="672" fg:w="13"/><text x="54.3999%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.05%)</title><rect x="54.1499%" y="581" width="1.0475%" height="15" fill="rgb(252,84,24)" fg:x="672" fg:w="13"/><text x="54.3999%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="54.2305%" y="565" width="0.9670%" height="15" fill="rgb(240,34,44)" fg:x="673" fg:w="12"/><text x="54.4805%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="54.3916%" y="549" width="0.8058%" height="15" fill="rgb(209,72,54)" fg:x="675" fg:w="10"/><text x="54.6416%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="54.7139%" y="533" width="0.4835%" height="15" fill="rgb(226,19,45)" fg:x="679" fg:w="6"/><text x="54.9639%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="55.0363%" y="517" width="0.1612%" height="15" fill="rgb(246,7,45)" fg:x="683" fg:w="2"/><text x="55.2863%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.1168%" y="501" width="0.0806%" height="15" fill="rgb(225,45,2)" fg:x="684" fg:w="1"/><text x="55.3668%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.1168%" y="485" width="0.0806%" height="15" fill="rgb(221,80,29)" fg:x="684" fg:w="1"/><text x="55.3668%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.1168%" y="469" width="0.0806%" height="15" fill="rgb(228,11,19)" fg:x="684" fg:w="1"/><text x="55.3668%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="55.1974%" y="581" width="0.6446%" height="15" fill="rgb(243,17,21)" fg:x="685" fg:w="8"/><text x="55.4474%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="55.2780%" y="565" width="0.5641%" height="15" fill="rgb(243,88,8)" fg:x="686" fg:w="7"/><text x="55.5280%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="55.6809%" y="549" width="0.1612%" height="15" fill="rgb(214,17,9)" fg:x="691" fg:w="2"/><text x="55.9309%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="55.7615%" y="533" width="0.0806%" height="15" fill="rgb(232,169,15)" fg:x="692" fg:w="1"/><text x="56.0115%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (22 samples, 1.77%)</title><rect x="54.1499%" y="613" width="1.7728%" height="15" fill="rgb(232,86,53)" fg:x="672" fg:w="22"/><text x="54.3999%" y="623.50">&lt;..</text></g><g><title>treediff::diff::diff (9 samples, 0.73%)</title><rect x="55.1974%" y="597" width="0.7252%" height="15" fill="rgb(222,100,4)" fg:x="685" fg:w="9"/><text x="55.4474%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8421%" y="581" width="0.0806%" height="15" fill="rgb(253,151,38)" fg:x="693" fg:w="1"/><text x="56.0921%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="55.9226%" y="613" width="0.1612%" height="15" fill="rgb(238,215,29)" fg:x="694" fg:w="2"/><text x="56.1726%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.0032%" y="597" width="0.0806%" height="15" fill="rgb(205,128,53)" fg:x="695" fg:w="1"/><text x="56.2532%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="56.2450%" y="581" width="0.4029%" height="15" fill="rgb(248,183,14)" fg:x="698" fg:w="5"/><text x="56.4950%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.4061%" y="565" width="0.2417%" height="15" fill="rgb(244,172,35)" fg:x="700" fg:w="3"/><text x="56.6561%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="56.4867%" y="549" width="0.1612%" height="15" fill="rgb(234,93,19)" fg:x="701" fg:w="2"/><text x="56.7367%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.7284%" y="549" width="0.0806%" height="15" fill="rgb(227,109,7)" fg:x="704" fg:w="1"/><text x="56.9784%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="56.6479%" y="581" width="0.2417%" height="15" fill="rgb(233,136,54)" fg:x="703" fg:w="3"/><text x="56.8979%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="56.7284%" y="565" width="0.1612%" height="15" fill="rgb(233,19,40)" fg:x="704" fg:w="2"/><text x="56.9784%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="56.8090%" y="549" width="0.0806%" height="15" fill="rgb(247,41,18)" fg:x="705" fg:w="1"/><text x="57.0590%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.0508%" y="549" width="0.0806%" height="15" fill="rgb(220,34,34)" fg:x="708" fg:w="1"/><text x="57.3008%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="56.8896%" y="581" width="0.4029%" height="15" fill="rgb(222,135,32)" fg:x="706" fg:w="5"/><text x="57.1396%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="56.8896%" y="565" width="0.4029%" height="15" fill="rgb(214,80,19)" fg:x="706" fg:w="5"/><text x="57.1396%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.1313%" y="549" width="0.1612%" height="15" fill="rgb(234,54,46)" fg:x="709" fg:w="2"/><text x="57.3813%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="57.6148%" y="517" width="0.0806%" height="15" fill="rgb(251,48,23)" fg:x="715" fg:w="1"/><text x="57.8648%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="57.6148%" y="533" width="0.1612%" height="15" fill="rgb(254,109,52)" fg:x="715" fg:w="2"/><text x="57.8648%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="57.6954%" y="517" width="0.0806%" height="15" fill="rgb(240,186,19)" fg:x="716" fg:w="1"/><text x="57.9454%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="57.6954%" y="501" width="0.0806%" height="15" fill="rgb(246,187,17)" fg:x="716" fg:w="1"/><text x="57.9454%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.6954%" y="485" width="0.0806%" height="15" fill="rgb(212,21,5)" fg:x="716" fg:w="1"/><text x="57.9454%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.6954%" y="469" width="0.0806%" height="15" fill="rgb(225,185,18)" fg:x="716" fg:w="1"/><text x="57.9454%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="57.7760%" y="517" width="0.0806%" height="15" fill="rgb(245,114,17)" fg:x="717" fg:w="1"/><text x="58.0260%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="57.8566%" y="501" width="0.4029%" height="15" fill="rgb(223,164,24)" fg:x="718" fg:w="5"/><text x="58.1066%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="57.8566%" y="485" width="0.4029%" height="15" fill="rgb(211,228,3)" fg:x="718" fg:w="5"/><text x="58.1066%" y="495.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="58.0177%" y="469" width="0.2417%" height="15" fill="rgb(223,16,38)" fg:x="720" fg:w="3"/><text x="58.2677%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="58.2595%" y="501" width="0.0806%" height="15" fill="rgb(207,31,54)" fg:x="723" fg:w="1"/><text x="58.5095%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="58.5012%" y="453" width="0.0806%" height="15" fill="rgb(220,39,11)" fg:x="726" fg:w="1"/><text x="58.7512%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="58.5818%" y="453" width="0.0806%" height="15" fill="rgb(235,185,0)" fg:x="727" fg:w="1"/><text x="58.8318%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="58.6624%" y="437" width="0.3223%" height="15" fill="rgb(249,39,18)" fg:x="728" fg:w="4"/><text x="58.9124%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.9041%" y="421" width="0.0806%" height="15" fill="rgb(240,110,33)" fg:x="731" fg:w="1"/><text x="59.1541%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="58.9847%" y="421" width="0.0806%" height="15" fill="rgb(210,92,42)" fg:x="732" fg:w="1"/><text x="59.2347%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.9847%" y="405" width="0.0806%" height="15" fill="rgb(218,215,28)" fg:x="732" fg:w="1"/><text x="59.2347%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.9847%" y="389" width="0.0806%" height="15" fill="rgb(238,215,36)" fg:x="732" fg:w="1"/><text x="59.2347%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9847%" y="373" width="0.0806%" height="15" fill="rgb(220,31,10)" fg:x="732" fg:w="1"/><text x="59.2347%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.37%)</title><rect x="57.8566%" y="517" width="1.3699%" height="15" fill="rgb(212,93,14)" fg:x="718" fg:w="17"/><text x="58.1066%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.89%)</title><rect x="58.3400%" y="501" width="0.8864%" height="15" fill="rgb(254,207,2)" fg:x="724" fg:w="11"/><text x="58.5900%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="58.4206%" y="485" width="0.8058%" height="15" fill="rgb(205,57,44)" fg:x="725" fg:w="10"/><text x="58.6706%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="58.4206%" y="469" width="0.8058%" height="15" fill="rgb(226,151,19)" fg:x="725" fg:w="10"/><text x="58.6706%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="58.6624%" y="453" width="0.5641%" height="15" fill="rgb(230,72,30)" fg:x="728" fg:w="7"/><text x="58.9124%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="58.9847%" y="437" width="0.2417%" height="15" fill="rgb(244,0,8)" fg:x="732" fg:w="3"/><text x="59.2347%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.0653%" y="421" width="0.1612%" height="15" fill="rgb(230,192,6)" fg:x="733" fg:w="2"/><text x="59.3153%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (23 samples, 1.85%)</title><rect x="57.5342%" y="549" width="1.8533%" height="15" fill="rgb(233,207,13)" fg:x="714" fg:w="23"/><text x="57.7842%" y="559.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.61%)</title><rect x="57.7760%" y="533" width="1.6116%" height="15" fill="rgb(206,227,7)" fg:x="717" fg:w="20"/><text x="58.0260%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.2264%" y="517" width="0.1612%" height="15" fill="rgb(213,217,25)" fg:x="735" fg:w="2"/><text x="59.4764%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (27 samples, 2.18%)</title><rect x="57.3731%" y="565" width="2.1757%" height="15" fill="rgb(249,75,4)" fg:x="712" fg:w="27"/><text x="57.6231%" y="575.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="59.3876%" y="549" width="0.1612%" height="15" fill="rgb(225,114,18)" fg:x="737" fg:w="2"/><text x="59.6376%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4682%" y="533" width="0.0806%" height="15" fill="rgb(211,162,40)" fg:x="738" fg:w="1"/><text x="59.7182%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (44 samples, 3.55%)</title><rect x="56.0838%" y="613" width="3.5455%" height="15" fill="rgb(206,49,29)" fg:x="696" fg:w="44"/><text x="56.3338%" y="623.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (44 samples, 3.55%)</title><rect x="56.0838%" y="597" width="3.5455%" height="15" fill="rgb(244,8,6)" fg:x="696" fg:w="44"/><text x="56.3338%" y="607.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 2.34%)</title><rect x="57.2925%" y="581" width="2.3368%" height="15" fill="rgb(231,194,28)" fg:x="711" fg:w="29"/><text x="57.5425%" y="591.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5488%" y="565" width="0.0806%" height="15" fill="rgb(210,69,5)" fg:x="739" fg:w="1"/><text x="59.7988%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.7905%" y="533" width="0.0806%" height="15" fill="rgb(216,186,12)" fg:x="742" fg:w="1"/><text x="60.0405%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.1934%" y="469" width="0.0806%" height="15" fill="rgb(238,61,15)" fg:x="747" fg:w="1"/><text x="60.4434%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.1934%" y="453" width="0.0806%" height="15" fill="rgb(226,104,1)" fg:x="747" fg:w="1"/><text x="60.4434%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.1934%" y="437" width="0.0806%" height="15" fill="rgb(229,128,15)" fg:x="747" fg:w="1"/><text x="60.4434%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.1934%" y="421" width="0.0806%" height="15" fill="rgb(247,110,15)" fg:x="747" fg:w="1"/><text x="60.4434%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.5963%" y="389" width="0.1612%" height="15" fill="rgb(210,74,48)" fg:x="752" fg:w="2"/><text x="60.8463%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.6769%" y="373" width="0.0806%" height="15" fill="rgb(246,121,10)" fg:x="753" fg:w="1"/><text x="60.9269%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="60.4351%" y="453" width="0.4029%" height="15" fill="rgb(214,156,37)" fg:x="750" fg:w="5"/><text x="60.6851%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.4351%" y="437" width="0.4029%" height="15" fill="rgb(214,210,34)" fg:x="750" fg:w="5"/><text x="60.6851%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="60.5963%" y="421" width="0.2417%" height="15" fill="rgb(237,93,35)" fg:x="752" fg:w="3"/><text x="60.8463%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.5963%" y="405" width="0.2417%" height="15" fill="rgb(206,36,8)" fg:x="752" fg:w="3"/><text x="60.8463%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.7575%" y="389" width="0.0806%" height="15" fill="rgb(208,151,12)" fg:x="754" fg:w="1"/><text x="61.0075%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.7575%" y="373" width="0.0806%" height="15" fill="rgb(225,133,52)" fg:x="754" fg:w="1"/><text x="61.0075%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7575%" y="357" width="0.0806%" height="15" fill="rgb(231,71,53)" fg:x="754" fg:w="1"/><text x="61.0075%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.8380%" y="453" width="0.0806%" height="15" fill="rgb(243,76,21)" fg:x="755" fg:w="1"/><text x="61.0880%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8380%" y="437" width="0.0806%" height="15" fill="rgb(252,144,3)" fg:x="755" fg:w="1"/><text x="61.0880%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="60.2740%" y="469" width="0.7252%" height="15" fill="rgb(231,199,10)" fg:x="748" fg:w="9"/><text x="60.5240%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9186%" y="453" width="0.0806%" height="15" fill="rgb(215,18,11)" fg:x="756" fg:w="1"/><text x="61.1686%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9186%" y="437" width="0.0806%" height="15" fill="rgb(241,65,24)" fg:x="756" fg:w="1"/><text x="61.1686%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9186%" y="421" width="0.0806%" height="15" fill="rgb(251,192,38)" fg:x="756" fg:w="1"/><text x="61.1686%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="60.1128%" y="485" width="0.9670%" height="15" fill="rgb(205,9,35)" fg:x="746" fg:w="12"/><text x="60.3628%" y="495.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="60.9992%" y="469" width="0.0806%" height="15" fill="rgb(229,225,49)" fg:x="757" fg:w="1"/><text x="61.2492%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.0798%" y="485" width="0.0806%" height="15" fill="rgb(207,125,39)" fg:x="758" fg:w="1"/><text x="61.3298%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.0798%" y="469" width="0.0806%" height="15" fill="rgb(222,78,19)" fg:x="758" fg:w="1"/><text x="61.3298%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.13%)</title><rect x="60.1128%" y="517" width="1.1281%" height="15" fill="rgb(248,207,20)" fg:x="746" fg:w="14"/><text x="60.3628%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.13%)</title><rect x="60.1128%" y="501" width="1.1281%" height="15" fill="rgb(205,103,49)" fg:x="746" fg:w="14"/><text x="60.3628%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1604%" y="485" width="0.0806%" height="15" fill="rgb(216,42,28)" fg:x="759" fg:w="1"/><text x="61.4104%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1604%" y="469" width="0.0806%" height="15" fill="rgb(213,205,53)" fg:x="759" fg:w="1"/><text x="61.4104%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.2409%" y="517" width="0.0806%" height="15" fill="rgb(239,140,53)" fg:x="760" fg:w="1"/><text x="61.4909%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.2409%" y="501" width="0.0806%" height="15" fill="rgb(248,95,9)" fg:x="760" fg:w="1"/><text x="61.4909%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.61%)</title><rect x="59.7905%" y="549" width="1.6116%" height="15" fill="rgb(254,58,47)" fg:x="742" fg:w="20"/><text x="60.0405%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.53%)</title><rect x="59.8711%" y="533" width="1.5310%" height="15" fill="rgb(234,227,14)" fg:x="743" fg:w="19"/><text x="60.1211%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.3215%" y="517" width="0.0806%" height="15" fill="rgb(205,192,45)" fg:x="761" fg:w="1"/><text x="61.5715%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.4021%" y="533" width="0.0806%" height="15" fill="rgb(253,187,31)" fg:x="762" fg:w="1"/><text x="61.6521%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="61.4021%" y="549" width="0.3223%" height="15" fill="rgb(222,6,32)" fg:x="762" fg:w="4"/><text x="61.6521%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="61.4827%" y="533" width="0.2417%" height="15" fill="rgb(249,190,19)" fg:x="763" fg:w="3"/><text x="61.7327%" y="543.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (178 samples, 14.34%)</title><rect x="47.5423%" y="661" width="14.3433%" height="15" fill="rgb(251,28,20)" fg:x="590" fg:w="178"/><text x="47.7923%" y="671.50">engine::internal::Enti..</text></g><g><title>engine::session::SavesEntities::check_for_changes (176 samples, 14.18%)</title><rect x="47.7035%" y="645" width="14.1821%" height="15" fill="rgb(210,223,40)" fg:x="592" fg:w="176"/><text x="47.9535%" y="655.50">engine::session::Saves..</text></g><g><title>kernel::model::any_entity_changes (96 samples, 7.74%)</title><rect x="54.1499%" y="629" width="7.7357%" height="15" fill="rgb(216,137,22)" fg:x="672" fg:w="96"/><text x="54.3999%" y="639.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (28 samples, 2.26%)</title><rect x="59.6293%" y="613" width="2.2562%" height="15" fill="rgb(247,39,34)" fg:x="740" fg:w="28"/><text x="59.8793%" y="623.50">s..</text></g><g><title>serde_json::de::from_trait (28 samples, 2.26%)</title><rect x="59.6293%" y="597" width="2.2562%" height="15" fill="rgb(239,43,50)" fg:x="740" fg:w="28"/><text x="59.8793%" y="607.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (27 samples, 2.18%)</title><rect x="59.7099%" y="581" width="2.1757%" height="15" fill="rgb(241,212,9)" fg:x="741" fg:w="27"/><text x="59.9599%" y="591.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (27 samples, 2.18%)</title><rect x="59.7099%" y="565" width="2.1757%" height="15" fill="rgb(205,8,2)" fg:x="741" fg:w="27"/><text x="59.9599%" y="575.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.7244%" y="549" width="0.1612%" height="15" fill="rgb(217,173,54)" fg:x="766" fg:w="2"/><text x="61.9744%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.8050%" y="533" width="0.0806%" height="15" fill="rgb(208,149,52)" fg:x="767" fg:w="1"/><text x="62.0550%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="61.8856%" y="629" width="0.0806%" height="15" fill="rgb(239,99,40)" fg:x="768" fg:w="1"/><text x="62.1356%" y="639.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="61.8856%" y="613" width="0.0806%" height="15" fill="rgb(233,214,26)" fg:x="768" fg:w="1"/><text x="62.1356%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.8856%" y="597" width="0.0806%" height="15" fill="rgb(231,225,37)" fg:x="768" fg:w="1"/><text x="62.1356%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.8856%" y="581" width="0.0806%" height="15" fill="rgb(252,55,35)" fg:x="768" fg:w="1"/><text x="62.1356%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.8856%" y="565" width="0.0806%" height="15" fill="rgb(239,43,18)" fg:x="768" fg:w="1"/><text x="62.1356%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.8856%" y="549" width="0.0806%" height="15" fill="rgb(251,125,49)" fg:x="768" fg:w="1"/><text x="62.1356%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.8856%" y="533" width="0.0806%" height="15" fill="rgb(212,83,54)" fg:x="768" fg:w="1"/><text x="62.1356%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.8856%" y="517" width="0.0806%" height="15" fill="rgb(250,75,6)" fg:x="768" fg:w="1"/><text x="62.1356%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.8856%" y="501" width="0.0806%" height="15" fill="rgb(252,36,40)" fg:x="768" fg:w="1"/><text x="62.1356%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.8856%" y="485" width="0.0806%" height="15" fill="rgb(230,91,51)" fg:x="768" fg:w="1"/><text x="62.1356%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.8856%" y="469" width="0.0806%" height="15" fill="rgb(212,92,28)" fg:x="768" fg:w="1"/><text x="62.1356%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.8856%" y="453" width="0.0806%" height="15" fill="rgb(227,13,22)" fg:x="768" fg:w="1"/><text x="62.1356%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.8856%" y="437" width="0.0806%" height="15" fill="rgb(239,204,32)" fg:x="768" fg:w="1"/><text x="62.1356%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.8856%" y="421" width="0.0806%" height="15" fill="rgb(228,49,41)" fg:x="768" fg:w="1"/><text x="62.1356%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8856%" y="405" width="0.0806%" height="15" fill="rgb(206,95,6)" fg:x="768" fg:w="1"/><text x="62.1356%" y="415.50"></text></g><g><title>engine::session::Session::save_entity_changes (186 samples, 14.99%)</title><rect x="47.0588%" y="677" width="14.9879%" height="15" fill="rgb(251,20,14)" fg:x="584" fg:w="186"/><text x="47.3088%" y="687.50">engine::session::Sessio..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="61.8856%" y="661" width="0.1612%" height="15" fill="rgb(214,99,28)" fg:x="768" fg:w="2"/><text x="62.1356%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="61.8856%" y="645" width="0.1612%" height="15" fill="rgb(239,122,54)" fg:x="768" fg:w="2"/><text x="62.1356%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="61.9662%" y="629" width="0.0806%" height="15" fill="rgb(218,217,46)" fg:x="769" fg:w="1"/><text x="62.2162%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="61.9662%" y="613" width="0.0806%" height="15" fill="rgb(249,106,28)" fg:x="769" fg:w="1"/><text x="62.2162%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="61.9662%" y="597" width="0.0806%" height="15" fill="rgb(250,158,18)" fg:x="769" fg:w="1"/><text x="62.2162%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.9662%" y="581" width="0.0806%" height="15" fill="rgb(226,137,29)" fg:x="769" fg:w="1"/><text x="62.2162%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.9662%" y="565" width="0.0806%" height="15" fill="rgb(210,188,1)" fg:x="769" fg:w="1"/><text x="62.2162%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="61.9662%" y="549" width="0.0806%" height="15" fill="rgb(227,84,42)" fg:x="769" fg:w="1"/><text x="62.2162%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.9662%" y="533" width="0.0806%" height="15" fill="rgb(222,147,48)" fg:x="769" fg:w="1"/><text x="62.2162%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.9662%" y="517" width="0.0806%" height="15" fill="rgb(241,150,43)" fg:x="769" fg:w="1"/><text x="62.2162%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.9662%" y="501" width="0.0806%" height="15" fill="rgb(206,139,52)" fg:x="769" fg:w="1"/><text x="62.2162%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="61.9662%" y="485" width="0.0806%" height="15" fill="rgb(230,63,14)" fg:x="769" fg:w="1"/><text x="62.2162%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.9662%" y="469" width="0.0806%" height="15" fill="rgb(247,8,20)" fg:x="769" fg:w="1"/><text x="62.2162%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.9662%" y="453" width="0.0806%" height="15" fill="rgb(213,115,4)" fg:x="769" fg:w="1"/><text x="62.2162%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.9662%" y="437" width="0.0806%" height="15" fill="rgb(241,79,49)" fg:x="769" fg:w="1"/><text x="62.2162%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="61.9662%" y="421" width="0.0806%" height="15" fill="rgb(222,42,35)" fg:x="769" fg:w="1"/><text x="62.2162%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="61.9662%" y="405" width="0.0806%" height="15" fill="rgb(247,59,23)" fg:x="769" fg:w="1"/><text x="62.2162%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.9662%" y="389" width="0.0806%" height="15" fill="rgb(247,93,18)" fg:x="769" fg:w="1"/><text x="62.2162%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.9662%" y="373" width="0.0806%" height="15" fill="rgb(249,107,47)" fg:x="769" fg:w="1"/><text x="62.2162%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="61.9662%" y="357" width="0.0806%" height="15" fill="rgb(219,27,1)" fg:x="769" fg:w="1"/><text x="62.2162%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="61.9662%" y="341" width="0.0806%" height="15" fill="rgb(217,82,32)" fg:x="769" fg:w="1"/><text x="62.2162%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="61.9662%" y="325" width="0.0806%" height="15" fill="rgb(250,129,47)" fg:x="769" fg:w="1"/><text x="62.2162%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="61.9662%" y="309" width="0.0806%" height="15" fill="rgb(253,88,35)" fg:x="769" fg:w="1"/><text x="62.2162%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.9662%" y="293" width="0.0806%" height="15" fill="rgb(245,221,14)" fg:x="769" fg:w="1"/><text x="62.2162%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.9662%" y="277" width="0.0806%" height="15" fill="rgb(217,119,54)" fg:x="769" fg:w="1"/><text x="62.2162%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="61.9662%" y="261" width="0.0806%" height="15" fill="rgb(247,128,31)" fg:x="769" fg:w="1"/><text x="62.2162%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="61.9662%" y="245" width="0.0806%" height="15" fill="rgb(211,99,22)" fg:x="769" fg:w="1"/><text x="62.2162%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="61.9662%" y="229" width="0.0806%" height="15" fill="rgb(212,20,17)" fg:x="769" fg:w="1"/><text x="62.2162%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="61.9662%" y="213" width="0.0806%" height="15" fill="rgb(209,159,29)" fg:x="769" fg:w="1"/><text x="62.2162%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="61.9662%" y="197" width="0.0806%" height="15" fill="rgb(222,177,53)" fg:x="769" fg:w="1"/><text x="62.2162%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="61.9662%" y="181" width="0.0806%" height="15" fill="rgb(234,46,43)" fg:x="769" fg:w="1"/><text x="62.2162%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="61.9662%" y="165" width="0.0806%" height="15" fill="rgb(208,108,14)" fg:x="769" fg:w="1"/><text x="62.2162%" y="175.50"></text></g><g><title>engine::session::Session::close (189 samples, 15.23%)</title><rect x="46.8977%" y="693" width="15.2297%" height="15" fill="rgb(226,78,53)" fg:x="582" fg:w="189"/><text x="47.1477%" y="703.50">engine::session::Sessio..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="62.0467%" y="677" width="0.0806%" height="15" fill="rgb(230,20,41)" fg:x="770" fg:w="1"/><text x="62.2967%" y="687.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="62.0467%" y="661" width="0.0806%" height="15" fill="rgb(213,195,35)" fg:x="770" fg:w="1"/><text x="62.2967%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="62.0467%" y="645" width="0.0806%" height="15" fill="rgb(242,62,36)" fg:x="770" fg:w="1"/><text x="62.2967%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="62.0467%" y="629" width="0.0806%" height="15" fill="rgb(222,210,37)" fg:x="770" fg:w="1"/><text x="62.2967%" y="639.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="62.0467%" y="613" width="0.0806%" height="15" fill="rgb(232,107,19)" fg:x="770" fg:w="1"/><text x="62.2967%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="62.1273%" y="645" width="0.0806%" height="15" fill="rgb(235,85,17)" fg:x="771" fg:w="1"/><text x="62.3773%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="62.1273%" y="629" width="0.0806%" height="15" fill="rgb(219,195,31)" fg:x="771" fg:w="1"/><text x="62.3773%" y="639.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="62.3691%" y="597" width="0.0806%" height="15" fill="rgb(231,183,30)" fg:x="774" fg:w="1"/><text x="62.6191%" y="607.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="62.3691%" y="581" width="0.0806%" height="15" fill="rgb(212,0,11)" fg:x="774" fg:w="1"/><text x="62.6191%" y="591.50"></text></g><g><title>&lt;plugins_core::building::parser::DuplicateActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="62.3691%" y="565" width="0.0806%" height="15" fill="rgb(249,53,54)" fg:x="774" fg:w="1"/><text x="62.6191%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="62.3691%" y="549" width="0.0806%" height="15" fill="rgb(211,118,13)" fg:x="774" fg:w="1"/><text x="62.6191%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="62.6108%" y="533" width="0.2417%" height="15" fill="rgb(237,42,9)" fg:x="777" fg:w="3"/><text x="62.8608%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8525%" y="517" width="0.0806%" height="15" fill="rgb(227,68,32)" fg:x="780" fg:w="1"/><text x="63.1025%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="62.8525%" y="533" width="0.3223%" height="15" fill="rgb(238,10,7)" fg:x="780" fg:w="4"/><text x="63.1025%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="62.9331%" y="517" width="0.2417%" height="15" fill="rgb(224,42,12)" fg:x="781" fg:w="3"/><text x="63.1831%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.0137%" y="501" width="0.1612%" height="15" fill="rgb(252,190,5)" fg:x="782" fg:w="2"/><text x="63.2637%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.0137%" y="485" width="0.1612%" height="15" fill="rgb(220,214,39)" fg:x="782" fg:w="2"/><text x="63.2637%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.0137%" y="469" width="0.1612%" height="15" fill="rgb(247,98,4)" fg:x="782" fg:w="2"/><text x="63.2637%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="63.0137%" y="453" width="0.1612%" height="15" fill="rgb(211,60,12)" fg:x="782" fg:w="2"/><text x="63.2637%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.0137%" y="437" width="0.1612%" height="15" fill="rgb(224,42,10)" fg:x="782" fg:w="2"/><text x="63.2637%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="63.1749%" y="517" width="0.0806%" height="15" fill="rgb(217,167,4)" fg:x="784" fg:w="1"/><text x="63.4249%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="63.1749%" y="501" width="0.0806%" height="15" fill="rgb(253,18,17)" fg:x="784" fg:w="1"/><text x="63.4249%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.1749%" y="485" width="0.0806%" height="15" fill="rgb(249,186,44)" fg:x="784" fg:w="1"/><text x="63.4249%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.4166%" y="485" width="0.0806%" height="15" fill="rgb(254,124,54)" fg:x="787" fg:w="1"/><text x="63.6666%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.4972%" y="469" width="0.1612%" height="15" fill="rgb(220,124,39)" fg:x="788" fg:w="2"/><text x="63.7472%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.29%)</title><rect x="62.4496%" y="549" width="1.2893%" height="15" fill="rgb(225,96,46)" fg:x="775" fg:w="16"/><text x="62.6996%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="63.1749%" y="533" width="0.5641%" height="15" fill="rgb(221,106,12)" fg:x="784" fg:w="7"/><text x="63.4249%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="63.2554%" y="517" width="0.4835%" height="15" fill="rgb(227,133,23)" fg:x="785" fg:w="6"/><text x="63.5054%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="63.4166%" y="501" width="0.3223%" height="15" fill="rgb(216,44,52)" fg:x="787" fg:w="4"/><text x="63.6666%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.4972%" y="485" width="0.2417%" height="15" fill="rgb(239,149,7)" fg:x="788" fg:w="3"/><text x="63.7472%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.6583%" y="469" width="0.0806%" height="15" fill="rgb(211,157,31)" fg:x="790" fg:w="1"/><text x="63.9083%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.6583%" y="453" width="0.0806%" height="15" fill="rgb(206,215,22)" fg:x="790" fg:w="1"/><text x="63.9083%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="63.7389%" y="533" width="0.0806%" height="15" fill="rgb(208,113,15)" fg:x="791" fg:w="1"/><text x="63.9889%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.7389%" y="517" width="0.0806%" height="15" fill="rgb(207,189,15)" fg:x="791" fg:w="1"/><text x="63.9889%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.9807%" y="437" width="0.1612%" height="15" fill="rgb(231,115,4)" fg:x="794" fg:w="2"/><text x="64.2307%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.9807%" y="421" width="0.1612%" height="15" fill="rgb(253,117,2)" fg:x="794" fg:w="2"/><text x="64.2307%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="63.9807%" y="405" width="0.1612%" height="15" fill="rgb(248,48,24)" fg:x="794" fg:w="2"/><text x="64.2307%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="63.9807%" y="389" width="0.1612%" height="15" fill="rgb(241,28,46)" fg:x="794" fg:w="2"/><text x="64.2307%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="63.9807%" y="373" width="0.1612%" height="15" fill="rgb(216,165,52)" fg:x="794" fg:w="2"/><text x="64.2307%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="63.9807%" y="357" width="0.1612%" height="15" fill="rgb(220,222,34)" fg:x="794" fg:w="2"/><text x="64.2307%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="63.9807%" y="341" width="0.1612%" height="15" fill="rgb(247,222,49)" fg:x="794" fg:w="2"/><text x="64.2307%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.9807%" y="453" width="0.2417%" height="15" fill="rgb(240,10,31)" fg:x="794" fg:w="3"/><text x="64.2307%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.1418%" y="437" width="0.0806%" height="15" fill="rgb(221,199,35)" fg:x="796" fg:w="1"/><text x="64.3918%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.3030%" y="373" width="0.1612%" height="15" fill="rgb(230,223,11)" fg:x="798" fg:w="2"/><text x="64.5530%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.3030%" y="357" width="0.1612%" height="15" fill="rgb(218,82,45)" fg:x="798" fg:w="2"/><text x="64.5530%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.3030%" y="341" width="0.1612%" height="15" fill="rgb(233,213,33)" fg:x="798" fg:w="2"/><text x="64.5530%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.3030%" y="325" width="0.1612%" height="15" fill="rgb(210,143,52)" fg:x="798" fg:w="2"/><text x="64.5530%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.3030%" y="309" width="0.1612%" height="15" fill="rgb(206,95,4)" fg:x="798" fg:w="2"/><text x="64.5530%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.3030%" y="293" width="0.1612%" height="15" fill="rgb(246,164,46)" fg:x="798" fg:w="2"/><text x="64.5530%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.3030%" y="277" width="0.1612%" height="15" fill="rgb(213,210,47)" fg:x="798" fg:w="2"/><text x="64.5530%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="64.2224%" y="453" width="0.3223%" height="15" fill="rgb(210,12,38)" fg:x="797" fg:w="4"/><text x="64.4724%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="64.3030%" y="437" width="0.2417%" height="15" fill="rgb(252,192,54)" fg:x="798" fg:w="3"/><text x="64.5530%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="64.3030%" y="421" width="0.2417%" height="15" fill="rgb(242,92,6)" fg:x="798" fg:w="3"/><text x="64.5530%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="64.3030%" y="405" width="0.2417%" height="15" fill="rgb(253,154,15)" fg:x="798" fg:w="3"/><text x="64.5530%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="64.3030%" y="389" width="0.2417%" height="15" fill="rgb(209,20,43)" fg:x="798" fg:w="3"/><text x="64.5530%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.4641%" y="373" width="0.0806%" height="15" fill="rgb(232,28,49)" fg:x="800" fg:w="1"/><text x="64.7141%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.4641%" y="357" width="0.0806%" height="15" fill="rgb(248,131,53)" fg:x="800" fg:w="1"/><text x="64.7141%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.81%)</title><rect x="63.8195%" y="469" width="0.8058%" height="15" fill="rgb(214,16,30)" fg:x="792" fg:w="10"/><text x="64.0695%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5447%" y="453" width="0.0806%" height="15" fill="rgb(245,16,0)" fg:x="801" fg:w="1"/><text x="64.7947%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7865%" y="389" width="0.0806%" height="15" fill="rgb(245,17,35)" fg:x="804" fg:w="1"/><text x="65.0365%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7865%" y="373" width="0.0806%" height="15" fill="rgb(249,27,53)" fg:x="804" fg:w="1"/><text x="65.0365%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.7865%" y="357" width="0.0806%" height="15" fill="rgb(214,73,24)" fg:x="804" fg:w="1"/><text x="65.0365%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.7865%" y="341" width="0.0806%" height="15" fill="rgb(223,84,37)" fg:x="804" fg:w="1"/><text x="65.0365%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.7865%" y="325" width="0.0806%" height="15" fill="rgb(210,109,28)" fg:x="804" fg:w="1"/><text x="65.0365%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.7865%" y="309" width="0.0806%" height="15" fill="rgb(208,186,6)" fg:x="804" fg:w="1"/><text x="65.0365%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7865%" y="293" width="0.0806%" height="15" fill="rgb(235,201,30)" fg:x="804" fg:w="1"/><text x="65.0365%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14 samples, 1.13%)</title><rect x="63.8195%" y="485" width="1.1281%" height="15" fill="rgb(216,198,48)" fg:x="792" fg:w="14"/><text x="64.0695%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="64.6253%" y="469" width="0.3223%" height="15" fill="rgb(254,186,25)" fg:x="802" fg:w="4"/><text x="64.8753%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.7865%" y="453" width="0.1612%" height="15" fill="rgb(227,87,5)" fg:x="804" fg:w="2"/><text x="65.0365%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.7865%" y="437" width="0.1612%" height="15" fill="rgb(236,205,25)" fg:x="804" fg:w="2"/><text x="65.0365%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.7865%" y="421" width="0.1612%" height="15" fill="rgb(229,99,32)" fg:x="804" fg:w="2"/><text x="65.0365%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.7865%" y="405" width="0.1612%" height="15" fill="rgb(231,177,31)" fg:x="804" fg:w="2"/><text x="65.0365%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.8670%" y="389" width="0.0806%" height="15" fill="rgb(246,15,2)" fg:x="805" fg:w="1"/><text x="65.1170%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.8670%" y="373" width="0.0806%" height="15" fill="rgb(207,39,15)" fg:x="805" fg:w="1"/><text x="65.1170%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.9476%" y="485" width="0.1612%" height="15" fill="rgb(207,44,9)" fg:x="806" fg:w="2"/><text x="65.1976%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.9476%" y="469" width="0.1612%" height="15" fill="rgb(225,224,33)" fg:x="806" fg:w="2"/><text x="65.1976%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.9476%" y="453" width="0.1612%" height="15" fill="rgb(252,151,3)" fg:x="806" fg:w="2"/><text x="65.1976%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.9476%" y="437" width="0.1612%" height="15" fill="rgb(211,140,13)" fg:x="806" fg:w="2"/><text x="65.1976%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.9476%" y="421" width="0.1612%" height="15" fill="rgb(239,225,17)" fg:x="806" fg:w="2"/><text x="65.1976%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.9476%" y="405" width="0.1612%" height="15" fill="rgb(223,170,52)" fg:x="806" fg:w="2"/><text x="65.1976%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.9476%" y="389" width="0.1612%" height="15" fill="rgb(212,64,21)" fg:x="806" fg:w="2"/><text x="65.1976%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.9476%" y="373" width="0.1612%" height="15" fill="rgb(236,126,48)" fg:x="806" fg:w="2"/><text x="65.1976%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.9476%" y="357" width="0.1612%" height="15" fill="rgb(209,135,11)" fg:x="806" fg:w="2"/><text x="65.1976%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.9476%" y="341" width="0.1612%" height="15" fill="rgb(228,126,40)" fg:x="806" fg:w="2"/><text x="65.1976%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.9476%" y="325" width="0.1612%" height="15" fill="rgb(205,196,36)" fg:x="806" fg:w="2"/><text x="65.1976%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.9476%" y="309" width="0.1612%" height="15" fill="rgb(243,160,33)" fg:x="806" fg:w="2"/><text x="65.1976%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19 samples, 1.53%)</title><rect x="63.8195%" y="501" width="1.5310%" height="15" fill="rgb(210,84,20)" fg:x="792" fg:w="19"/><text x="64.0695%" y="511.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="65.1088%" y="485" width="0.2417%" height="15" fill="rgb(228,213,30)" fg:x="808" fg:w="3"/><text x="65.3588%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.3505%" y="421" width="0.0806%" height="15" fill="rgb(252,33,45)" fg:x="811" fg:w="1"/><text x="65.6005%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.3505%" y="405" width="0.0806%" height="15" fill="rgb(254,227,20)" fg:x="811" fg:w="1"/><text x="65.6005%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.3505%" y="389" width="0.0806%" height="15" fill="rgb(228,192,2)" fg:x="811" fg:w="1"/><text x="65.6005%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.3505%" y="373" width="0.0806%" height="15" fill="rgb(233,32,8)" fg:x="811" fg:w="1"/><text x="65.6005%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.3505%" y="357" width="0.0806%" height="15" fill="rgb(220,146,47)" fg:x="811" fg:w="1"/><text x="65.6005%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.3505%" y="341" width="0.0806%" height="15" fill="rgb(246,194,1)" fg:x="811" fg:w="1"/><text x="65.6005%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.3505%" y="325" width="0.0806%" height="15" fill="rgb(218,203,9)" fg:x="811" fg:w="1"/><text x="65.6005%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.3505%" y="501" width="0.1612%" height="15" fill="rgb(237,97,14)" fg:x="811" fg:w="2"/><text x="65.6005%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.3505%" y="485" width="0.1612%" height="15" fill="rgb(239,76,15)" fg:x="811" fg:w="2"/><text x="65.6005%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="65.3505%" y="469" width="0.1612%" height="15" fill="rgb(222,53,45)" fg:x="811" fg:w="2"/><text x="65.6005%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="65.3505%" y="453" width="0.1612%" height="15" fill="rgb(237,88,5)" fg:x="811" fg:w="2"/><text x="65.6005%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="65.3505%" y="437" width="0.1612%" height="15" fill="rgb(218,223,35)" fg:x="811" fg:w="2"/><text x="65.6005%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.4311%" y="421" width="0.0806%" height="15" fill="rgb(243,229,38)" fg:x="812" fg:w="1"/><text x="65.6811%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.4311%" y="405" width="0.0806%" height="15" fill="rgb(240,75,41)" fg:x="812" fg:w="1"/><text x="65.6811%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.6728%" y="389" width="0.1612%" height="15" fill="rgb(209,110,37)" fg:x="815" fg:w="2"/><text x="65.9228%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.6728%" y="373" width="0.1612%" height="15" fill="rgb(221,130,46)" fg:x="815" fg:w="2"/><text x="65.9228%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="65.6728%" y="357" width="0.1612%" height="15" fill="rgb(237,160,20)" fg:x="815" fg:w="2"/><text x="65.9228%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="65.6728%" y="341" width="0.1612%" height="15" fill="rgb(234,126,24)" fg:x="815" fg:w="2"/><text x="65.9228%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="65.6728%" y="325" width="0.1612%" height="15" fill="rgb(207,177,9)" fg:x="815" fg:w="2"/><text x="65.9228%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="65.6728%" y="309" width="0.1612%" height="15" fill="rgb(231,191,33)" fg:x="815" fg:w="2"/><text x="65.9228%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.6728%" y="293" width="0.1612%" height="15" fill="rgb(207,42,1)" fg:x="815" fg:w="2"/><text x="65.9228%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="65.5117%" y="501" width="0.4029%" height="15" fill="rgb(218,34,50)" fg:x="813" fg:w="5"/><text x="65.7617%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.6728%" y="485" width="0.2417%" height="15" fill="rgb(254,126,39)" fg:x="815" fg:w="3"/><text x="65.9228%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="65.6728%" y="469" width="0.2417%" height="15" fill="rgb(251,17,26)" fg:x="815" fg:w="3"/><text x="65.9228%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="65.6728%" y="453" width="0.2417%" height="15" fill="rgb(252,215,34)" fg:x="815" fg:w="3"/><text x="65.9228%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="65.6728%" y="437" width="0.2417%" height="15" fill="rgb(217,120,44)" fg:x="815" fg:w="3"/><text x="65.9228%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="65.6728%" y="421" width="0.2417%" height="15" fill="rgb(211,31,11)" fg:x="815" fg:w="3"/><text x="65.9228%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="65.6728%" y="405" width="0.2417%" height="15" fill="rgb(222,69,51)" fg:x="815" fg:w="3"/><text x="65.9228%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.8340%" y="389" width="0.0806%" height="15" fill="rgb(215,229,42)" fg:x="817" fg:w="1"/><text x="66.0840%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.8340%" y="373" width="0.0806%" height="15" fill="rgb(212,102,15)" fg:x="817" fg:w="1"/><text x="66.0840%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (28 samples, 2.26%)</title><rect x="63.8195%" y="517" width="2.2562%" height="15" fill="rgb(205,179,41)" fg:x="792" fg:w="28"/><text x="64.0695%" y="527.50">&lt;..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.9146%" y="501" width="0.1612%" height="15" fill="rgb(219,148,46)" fg:x="818" fg:w="2"/><text x="66.1646%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.0757%" y="517" width="0.1612%" height="15" fill="rgb(243,40,19)" fg:x="820" fg:w="2"/><text x="66.3257%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.0757%" y="501" width="0.1612%" height="15" fill="rgb(208,206,34)" fg:x="820" fg:w="2"/><text x="66.3257%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="66.0757%" y="485" width="0.1612%" height="15" fill="rgb(244,184,38)" fg:x="820" fg:w="2"/><text x="66.3257%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="66.0757%" y="469" width="0.1612%" height="15" fill="rgb(244,151,47)" fg:x="820" fg:w="2"/><text x="66.3257%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="66.0757%" y="453" width="0.1612%" height="15" fill="rgb(236,134,42)" fg:x="820" fg:w="2"/><text x="66.3257%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="66.0757%" y="437" width="0.1612%" height="15" fill="rgb(233,93,22)" fg:x="820" fg:w="2"/><text x="66.3257%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="66.0757%" y="421" width="0.1612%" height="15" fill="rgb(211,202,10)" fg:x="820" fg:w="2"/><text x="66.3257%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="66.0757%" y="405" width="0.1612%" height="15" fill="rgb(240,63,8)" fg:x="820" fg:w="2"/><text x="66.3257%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="66.0757%" y="389" width="0.1612%" height="15" fill="rgb(214,9,4)" fg:x="820" fg:w="2"/><text x="66.3257%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="66.0757%" y="373" width="0.1612%" height="15" fill="rgb(243,66,45)" fg:x="820" fg:w="2"/><text x="66.3257%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="66.0757%" y="357" width="0.1612%" height="15" fill="rgb(220,50,42)" fg:x="820" fg:w="2"/><text x="66.3257%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.0757%" y="341" width="0.1612%" height="15" fill="rgb(220,134,27)" fg:x="820" fg:w="2"/><text x="66.3257%" y="351.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (33 samples, 2.66%)</title><rect x="63.7389%" y="549" width="2.6591%" height="15" fill="rgb(246,151,50)" fg:x="791" fg:w="33"/><text x="63.9889%" y="559.50">en..</text></g><g><title>kernel::model::scopes::Scopes::modified (32 samples, 2.58%)</title><rect x="63.8195%" y="533" width="2.5786%" height="15" fill="rgb(238,216,27)" fg:x="792" fg:w="32"/><text x="64.0695%" y="543.50">ke..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="66.2369%" y="517" width="0.1612%" height="15" fill="rgb(250,92,11)" fg:x="822" fg:w="2"/><text x="66.4869%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.3175%" y="501" width="0.0806%" height="15" fill="rgb(248,183,6)" fg:x="823" fg:w="1"/><text x="66.5675%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.3175%" y="485" width="0.0806%" height="15" fill="rgb(211,204,50)" fg:x="823" fg:w="1"/><text x="66.5675%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (2 samples, 0.16%)</title><rect x="66.3981%" y="517" width="0.1612%" height="15" fill="rgb(252,55,47)" fg:x="824" fg:w="2"/><text x="66.6481%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="66.4786%" y="501" width="0.0806%" height="15" fill="rgb(240,198,32)" fg:x="825" fg:w="1"/><text x="66.7286%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="66.4786%" y="485" width="0.0806%" height="15" fill="rgb(224,203,19)" fg:x="825" fg:w="1"/><text x="66.7286%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4786%" y="469" width="0.0806%" height="15" fill="rgb(205,27,16)" fg:x="825" fg:w="1"/><text x="66.7286%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4786%" y="453" width="0.0806%" height="15" fill="rgb(224,226,17)" fg:x="825" fg:w="1"/><text x="66.7286%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.4786%" y="437" width="0.0806%" height="15" fill="rgb(205,216,54)" fg:x="825" fg:w="1"/><text x="66.7286%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.4786%" y="421" width="0.0806%" height="15" fill="rgb(248,168,46)" fg:x="825" fg:w="1"/><text x="66.7286%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.4786%" y="405" width="0.0806%" height="15" fill="rgb(226,111,45)" fg:x="825" fg:w="1"/><text x="66.7286%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4786%" y="389" width="0.0806%" height="15" fill="rgb(231,15,9)" fg:x="825" fg:w="1"/><text x="66.7286%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4786%" y="373" width="0.0806%" height="15" fill="rgb(243,168,3)" fg:x="825" fg:w="1"/><text x="66.7286%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.4786%" y="357" width="0.0806%" height="15" fill="rgb(221,220,54)" fg:x="825" fg:w="1"/><text x="66.7286%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.4786%" y="341" width="0.0806%" height="15" fill="rgb(232,174,38)" fg:x="825" fg:w="1"/><text x="66.7286%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.4786%" y="325" width="0.0806%" height="15" fill="rgb(205,14,38)" fg:x="825" fg:w="1"/><text x="66.7286%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.4786%" y="309" width="0.0806%" height="15" fill="rgb(234,89,19)" fg:x="825" fg:w="1"/><text x="66.7286%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.4786%" y="293" width="0.0806%" height="15" fill="rgb(216,68,51)" fg:x="825" fg:w="1"/><text x="66.7286%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="66.8010%" y="453" width="0.0806%" height="15" fill="rgb(213,49,2)" fg:x="829" fg:w="1"/><text x="67.0510%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8010%" y="437" width="0.0806%" height="15" fill="rgb(242,146,30)" fg:x="829" fg:w="1"/><text x="67.0510%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8010%" y="421" width="0.0806%" height="15" fill="rgb(224,188,11)" fg:x="829" fg:w="1"/><text x="67.0510%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.8010%" y="405" width="0.0806%" height="15" fill="rgb(213,159,11)" fg:x="829" fg:w="1"/><text x="67.0510%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.8010%" y="389" width="0.0806%" height="15" fill="rgb(229,13,31)" fg:x="829" fg:w="1"/><text x="67.0510%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.8010%" y="373" width="0.0806%" height="15" fill="rgb(209,103,11)" fg:x="829" fg:w="1"/><text x="67.0510%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8010%" y="357" width="0.0806%" height="15" fill="rgb(206,3,4)" fg:x="829" fg:w="1"/><text x="67.0510%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8010%" y="341" width="0.0806%" height="15" fill="rgb(252,10,49)" fg:x="829" fg:w="1"/><text x="67.0510%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.8010%" y="325" width="0.0806%" height="15" fill="rgb(217,160,32)" fg:x="829" fg:w="1"/><text x="67.0510%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.8010%" y="309" width="0.0806%" height="15" fill="rgb(249,196,0)" fg:x="829" fg:w="1"/><text x="67.0510%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.8010%" y="293" width="0.0806%" height="15" fill="rgb(213,17,48)" fg:x="829" fg:w="1"/><text x="67.0510%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.8010%" y="277" width="0.0806%" height="15" fill="rgb(206,42,46)" fg:x="829" fg:w="1"/><text x="67.0510%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.8010%" y="261" width="0.0806%" height="15" fill="rgb(212,105,24)" fg:x="829" fg:w="1"/><text x="67.0510%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.8815%" y="309" width="0.1612%" height="15" fill="rgb(243,216,30)" fg:x="830" fg:w="2"/><text x="67.1315%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9621%" y="293" width="0.0806%" height="15" fill="rgb(207,121,3)" fg:x="831" fg:w="1"/><text x="67.2121%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9621%" y="277" width="0.0806%" height="15" fill="rgb(249,78,0)" fg:x="831" fg:w="1"/><text x="67.2121%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.8815%" y="357" width="0.2417%" height="15" fill="rgb(244,151,32)" fg:x="830" fg:w="3"/><text x="67.1315%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.8815%" y="341" width="0.2417%" height="15" fill="rgb(228,63,25)" fg:x="830" fg:w="3"/><text x="67.1315%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.8815%" y="325" width="0.2417%" height="15" fill="rgb(231,158,23)" fg:x="830" fg:w="3"/><text x="67.1315%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0427%" y="309" width="0.0806%" height="15" fill="rgb(248,107,23)" fg:x="832" fg:w="1"/><text x="67.2927%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="66.8815%" y="405" width="0.3223%" height="15" fill="rgb(215,168,21)" fg:x="830" fg:w="4"/><text x="67.1315%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="66.8815%" y="389" width="0.3223%" height="15" fill="rgb(227,83,22)" fg:x="830" fg:w="4"/><text x="67.1315%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="66.8815%" y="373" width="0.3223%" height="15" fill="rgb(217,118,43)" fg:x="830" fg:w="4"/><text x="67.1315%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.1233%" y="357" width="0.0806%" height="15" fill="rgb(229,220,41)" fg:x="833" fg:w="1"/><text x="67.3733%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.1233%" y="341" width="0.0806%" height="15" fill="rgb(254,146,46)" fg:x="833" fg:w="1"/><text x="67.3733%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.1233%" y="325" width="0.0806%" height="15" fill="rgb(233,208,31)" fg:x="833" fg:w="1"/><text x="67.3733%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.1233%" y="309" width="0.0806%" height="15" fill="rgb(222,162,7)" fg:x="833" fg:w="1"/><text x="67.3733%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.1233%" y="293" width="0.0806%" height="15" fill="rgb(230,117,45)" fg:x="833" fg:w="1"/><text x="67.3733%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.1233%" y="277" width="0.0806%" height="15" fill="rgb(239,163,6)" fg:x="833" fg:w="1"/><text x="67.3733%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.1233%" y="261" width="0.0806%" height="15" fill="rgb(246,130,17)" fg:x="833" fg:w="1"/><text x="67.3733%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.1233%" y="245" width="0.0806%" height="15" fill="rgb(216,84,5)" fg:x="833" fg:w="1"/><text x="67.3733%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.1233%" y="229" width="0.0806%" height="15" fill="rgb(230,200,21)" fg:x="833" fg:w="1"/><text x="67.3733%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.1233%" y="213" width="0.0806%" height="15" fill="rgb(224,2,8)" fg:x="833" fg:w="1"/><text x="67.3733%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.2039%" y="293" width="0.0806%" height="15" fill="rgb(238,178,10)" fg:x="834" fg:w="1"/><text x="67.4539%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.2039%" y="277" width="0.0806%" height="15" fill="rgb(242,153,24)" fg:x="834" fg:w="1"/><text x="67.4539%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.2039%" y="261" width="0.0806%" height="15" fill="rgb(242,32,48)" fg:x="834" fg:w="1"/><text x="67.4539%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.2039%" y="245" width="0.0806%" height="15" fill="rgb(227,36,0)" fg:x="834" fg:w="1"/><text x="67.4539%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.2039%" y="229" width="0.0806%" height="15" fill="rgb(251,33,35)" fg:x="834" fg:w="1"/><text x="67.4539%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.2039%" y="213" width="0.0806%" height="15" fill="rgb(232,168,51)" fg:x="834" fg:w="1"/><text x="67.4539%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.2039%" y="197" width="0.0806%" height="15" fill="rgb(228,56,10)" fg:x="834" fg:w="1"/><text x="67.4539%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.2039%" y="181" width="0.0806%" height="15" fill="rgb(231,10,26)" fg:x="834" fg:w="1"/><text x="67.4539%" y="191.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="66.8815%" y="437" width="0.4835%" height="15" fill="rgb(226,202,12)" fg:x="830" fg:w="6"/><text x="67.1315%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="66.8815%" y="421" width="0.4835%" height="15" fill="rgb(251,49,21)" fg:x="830" fg:w="6"/><text x="67.1315%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="67.2039%" y="405" width="0.1612%" height="15" fill="rgb(206,228,28)" fg:x="834" fg:w="2"/><text x="67.4539%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="67.2039%" y="389" width="0.1612%" height="15" fill="rgb(205,198,31)" fg:x="834" fg:w="2"/><text x="67.4539%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="67.2039%" y="373" width="0.1612%" height="15" fill="rgb(213,69,1)" fg:x="834" fg:w="2"/><text x="67.4539%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.2039%" y="357" width="0.1612%" height="15" fill="rgb(209,177,9)" fg:x="834" fg:w="2"/><text x="67.4539%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.2039%" y="341" width="0.1612%" height="15" fill="rgb(227,119,30)" fg:x="834" fg:w="2"/><text x="67.4539%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.2039%" y="325" width="0.1612%" height="15" fill="rgb(234,106,41)" fg:x="834" fg:w="2"/><text x="67.4539%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.2039%" y="309" width="0.1612%" height="15" fill="rgb(244,103,47)" fg:x="834" fg:w="2"/><text x="67.4539%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.2844%" y="293" width="0.0806%" height="15" fill="rgb(212,211,25)" fg:x="835" fg:w="1"/><text x="67.5344%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.4456%" y="389" width="0.1612%" height="15" fill="rgb(208,63,53)" fg:x="837" fg:w="2"/><text x="67.6956%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.4456%" y="373" width="0.1612%" height="15" fill="rgb(213,176,21)" fg:x="837" fg:w="2"/><text x="67.6956%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.4456%" y="357" width="0.1612%" height="15" fill="rgb(243,124,12)" fg:x="837" fg:w="2"/><text x="67.6956%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5262%" y="341" width="0.0806%" height="15" fill="rgb(239,2,35)" fg:x="838" fg:w="1"/><text x="67.7762%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="67.3650%" y="437" width="0.3223%" height="15" fill="rgb(253,169,22)" fg:x="836" fg:w="4"/><text x="67.6150%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="67.4456%" y="421" width="0.2417%" height="15" fill="rgb(254,51,12)" fg:x="837" fg:w="3"/><text x="67.6956%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="67.4456%" y="405" width="0.2417%" height="15" fill="rgb(244,17,47)" fg:x="837" fg:w="3"/><text x="67.6956%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.6068%" y="389" width="0.0806%" height="15" fill="rgb(251,45,46)" fg:x="839" fg:w="1"/><text x="67.8568%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6068%" y="373" width="0.0806%" height="15" fill="rgb(223,87,43)" fg:x="839" fg:w="1"/><text x="67.8568%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="67.6873%" y="389" width="0.0806%" height="15" fill="rgb(230,132,31)" fg:x="840" fg:w="1"/><text x="67.9373%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.8485%" y="245" width="0.1612%" height="15" fill="rgb(206,99,1)" fg:x="842" fg:w="2"/><text x="68.0985%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.8485%" y="229" width="0.1612%" height="15" fill="rgb(227,110,25)" fg:x="842" fg:w="2"/><text x="68.0985%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="67.8485%" y="213" width="0.1612%" height="15" fill="rgb(217,182,7)" fg:x="842" fg:w="2"/><text x="68.0985%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="67.7679%" y="309" width="0.3223%" height="15" fill="rgb(250,176,4)" fg:x="841" fg:w="4"/><text x="68.0179%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="67.7679%" y="293" width="0.3223%" height="15" fill="rgb(244,98,30)" fg:x="841" fg:w="4"/><text x="68.0179%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="67.7679%" y="277" width="0.3223%" height="15" fill="rgb(228,150,42)" fg:x="841" fg:w="4"/><text x="68.0179%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="67.7679%" y="261" width="0.3223%" height="15" fill="rgb(231,91,46)" fg:x="841" fg:w="4"/><text x="68.0179%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.0097%" y="245" width="0.0806%" height="15" fill="rgb(252,161,32)" fg:x="844" fg:w="1"/><text x="68.2597%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="68.0902%" y="309" width="0.2417%" height="15" fill="rgb(236,69,41)" fg:x="845" fg:w="3"/><text x="68.3402%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="68.0902%" y="293" width="0.2417%" height="15" fill="rgb(212,160,3)" fg:x="845" fg:w="3"/><text x="68.3402%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="68.0902%" y="277" width="0.2417%" height="15" fill="rgb(216,5,50)" fg:x="845" fg:w="3"/><text x="68.3402%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="68.2514%" y="261" width="0.0806%" height="15" fill="rgb(241,138,25)" fg:x="847" fg:w="1"/><text x="68.5014%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.2514%" y="245" width="0.0806%" height="15" fill="rgb(239,42,18)" fg:x="847" fg:w="1"/><text x="68.5014%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.3320%" y="277" width="0.0806%" height="15" fill="rgb(239,40,7)" fg:x="848" fg:w="1"/><text x="68.5820%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="68.4126%" y="261" width="0.0806%" height="15" fill="rgb(239,11,31)" fg:x="849" fg:w="1"/><text x="68.6626%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="68.4126%" y="245" width="0.0806%" height="15" fill="rgb(224,77,40)" fg:x="849" fg:w="1"/><text x="68.6626%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4126%" y="229" width="0.0806%" height="15" fill="rgb(226,15,5)" fg:x="849" fg:w="1"/><text x="68.6626%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.4126%" y="213" width="0.0806%" height="15" fill="rgb(254,188,5)" fg:x="849" fg:w="1"/><text x="68.6626%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.4126%" y="197" width="0.0806%" height="15" fill="rgb(241,148,52)" fg:x="849" fg:w="1"/><text x="68.6626%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.4126%" y="181" width="0.0806%" height="15" fill="rgb(251,48,36)" fg:x="849" fg:w="1"/><text x="68.6626%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="68.5737%" y="133" width="0.1612%" height="15" fill="rgb(243,83,13)" fg:x="851" fg:w="2"/><text x="68.8237%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.6543%" y="117" width="0.0806%" height="15" fill="rgb(210,105,0)" fg:x="852" fg:w="1"/><text x="68.9043%" y="127.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.6543%" y="101" width="0.0806%" height="15" fill="rgb(239,60,36)" fg:x="852" fg:w="1"/><text x="68.9043%" y="111.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.05%)</title><rect x="67.7679%" y="357" width="1.0475%" height="15" fill="rgb(210,20,0)" fg:x="841" fg:w="13"/><text x="68.0179%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.05%)</title><rect x="67.7679%" y="341" width="1.0475%" height="15" fill="rgb(244,26,53)" fg:x="841" fg:w="13"/><text x="68.0179%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (13 samples, 1.05%)</title><rect x="67.7679%" y="325" width="1.0475%" height="15" fill="rgb(240,100,49)" fg:x="841" fg:w="13"/><text x="68.0179%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="68.3320%" y="309" width="0.4835%" height="15" fill="rgb(250,46,45)" fg:x="848" fg:w="6"/><text x="68.5820%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="68.3320%" y="293" width="0.4835%" height="15" fill="rgb(220,181,29)" fg:x="848" fg:w="6"/><text x="68.5820%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="68.4126%" y="277" width="0.4029%" height="15" fill="rgb(213,137,33)" fg:x="849" fg:w="5"/><text x="68.6626%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="68.4932%" y="261" width="0.3223%" height="15" fill="rgb(213,27,48)" fg:x="850" fg:w="4"/><text x="68.7432%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.5737%" y="245" width="0.2417%" height="15" fill="rgb(245,180,39)" fg:x="851" fg:w="3"/><text x="68.8237%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="68.5737%" y="229" width="0.2417%" height="15" fill="rgb(212,158,42)" fg:x="851" fg:w="3"/><text x="68.8237%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.5737%" y="213" width="0.2417%" height="15" fill="rgb(228,193,18)" fg:x="851" fg:w="3"/><text x="68.8237%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.5737%" y="197" width="0.2417%" height="15" fill="rgb(245,172,29)" fg:x="851" fg:w="3"/><text x="68.8237%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="68.5737%" y="181" width="0.2417%" height="15" fill="rgb(207,98,24)" fg:x="851" fg:w="3"/><text x="68.8237%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.5737%" y="165" width="0.2417%" height="15" fill="rgb(249,92,26)" fg:x="851" fg:w="3"/><text x="68.8237%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.5737%" y="149" width="0.2417%" height="15" fill="rgb(217,176,26)" fg:x="851" fg:w="3"/><text x="68.8237%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="68.7349%" y="133" width="0.0806%" height="15" fill="rgb(221,8,39)" fg:x="853" fg:w="1"/><text x="68.9849%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.7349%" y="117" width="0.0806%" height="15" fill="rgb(208,90,18)" fg:x="853" fg:w="1"/><text x="68.9849%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.7349%" y="101" width="0.0806%" height="15" fill="rgb(207,202,30)" fg:x="853" fg:w="1"/><text x="68.9849%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.7349%" y="85" width="0.0806%" height="15" fill="rgb(231,124,22)" fg:x="853" fg:w="1"/><text x="68.9849%" y="95.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (15 samples, 1.21%)</title><rect x="67.6873%" y="421" width="1.2087%" height="15" fill="rgb(206,15,5)" fg:x="840" fg:w="15"/><text x="67.9373%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (15 samples, 1.21%)</title><rect x="67.6873%" y="405" width="1.2087%" height="15" fill="rgb(239,16,52)" fg:x="840" fg:w="15"/><text x="67.9373%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.13%)</title><rect x="67.7679%" y="389" width="1.1281%" height="15" fill="rgb(245,213,29)" fg:x="841" fg:w="14"/><text x="68.0179%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.13%)</title><rect x="67.7679%" y="373" width="1.1281%" height="15" fill="rgb(213,203,36)" fg:x="841" fg:w="14"/><text x="68.0179%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.8155%" y="357" width="0.0806%" height="15" fill="rgb(209,55,18)" fg:x="854" fg:w="1"/><text x="69.0655%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8155%" y="341" width="0.0806%" height="15" fill="rgb(207,133,49)" fg:x="854" fg:w="1"/><text x="69.0655%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.8961%" y="373" width="0.0806%" height="15" fill="rgb(240,33,46)" fg:x="855" fg:w="1"/><text x="69.1461%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.9766%" y="341" width="0.0806%" height="15" fill="rgb(212,35,2)" fg:x="856" fg:w="1"/><text x="69.2266%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.0572%" y="309" width="0.0806%" height="15" fill="rgb(231,119,28)" fg:x="857" fg:w="1"/><text x="69.3072%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0572%" y="293" width="0.0806%" height="15" fill="rgb(252,178,7)" fg:x="857" fg:w="1"/><text x="69.3072%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.1378%" y="293" width="0.0806%" height="15" fill="rgb(251,91,4)" fg:x="858" fg:w="1"/><text x="69.3878%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.1378%" y="277" width="0.0806%" height="15" fill="rgb(233,122,19)" fg:x="858" fg:w="1"/><text x="69.3878%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.1378%" y="261" width="0.0806%" height="15" fill="rgb(231,208,46)" fg:x="858" fg:w="1"/><text x="69.3878%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.1378%" y="245" width="0.0806%" height="15" fill="rgb(243,15,41)" fg:x="858" fg:w="1"/><text x="69.3878%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.1378%" y="229" width="0.0806%" height="15" fill="rgb(210,32,43)" fg:x="858" fg:w="1"/><text x="69.3878%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.1378%" y="213" width="0.0806%" height="15" fill="rgb(222,177,15)" fg:x="858" fg:w="1"/><text x="69.3878%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="69.1378%" y="197" width="0.0806%" height="15" fill="rgb(244,121,34)" fg:x="858" fg:w="1"/><text x="69.3878%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (33 samples, 2.66%)</title><rect x="66.6398%" y="485" width="2.6591%" height="15" fill="rgb(234,138,4)" fg:x="827" fg:w="33"/><text x="66.8898%" y="495.50">&lt;e..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (32 samples, 2.58%)</title><rect x="66.7204%" y="469" width="2.5786%" height="15" fill="rgb(240,97,48)" fg:x="828" fg:w="32"/><text x="66.9704%" y="479.50">&lt;e..</text></g><g><title>engine::internal::Entities::add_persisted (30 samples, 2.42%)</title><rect x="66.8815%" y="453" width="2.4174%" height="15" fill="rgb(237,65,54)" fg:x="830" fg:w="30"/><text x="67.1315%" y="463.50">en..</text></g><g><title>kernel::model::deserialize_entity (20 samples, 1.61%)</title><rect x="67.6873%" y="437" width="1.6116%" height="15" fill="rgb(214,25,24)" fg:x="840" fg:w="20"/><text x="67.9373%" y="447.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="68.8961%" y="421" width="0.4029%" height="15" fill="rgb(213,5,3)" fg:x="855" fg:w="5"/><text x="69.1461%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="68.8961%" y="405" width="0.4029%" height="15" fill="rgb(219,81,29)" fg:x="855" fg:w="5"/><text x="69.1461%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="68.8961%" y="389" width="0.4029%" height="15" fill="rgb(220,43,48)" fg:x="855" fg:w="5"/><text x="69.1461%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="68.9766%" y="373" width="0.3223%" height="15" fill="rgb(239,157,2)" fg:x="856" fg:w="4"/><text x="69.2266%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.9766%" y="357" width="0.3223%" height="15" fill="rgb(213,104,43)" fg:x="856" fg:w="4"/><text x="69.2266%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.0572%" y="341" width="0.2417%" height="15" fill="rgb(237,84,9)" fg:x="857" fg:w="3"/><text x="69.3072%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.0572%" y="325" width="0.2417%" height="15" fill="rgb(252,6,33)" fg:x="857" fg:w="3"/><text x="69.3072%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.1378%" y="309" width="0.1612%" height="15" fill="rgb(251,172,22)" fg:x="858" fg:w="2"/><text x="69.3878%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.2184%" y="293" width="0.0806%" height="15" fill="rgb(244,91,53)" fg:x="859" fg:w="1"/><text x="69.4684%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.2184%" y="277" width="0.0806%" height="15" fill="rgb(219,29,30)" fg:x="859" fg:w="1"/><text x="69.4684%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.2990%" y="453" width="0.0806%" height="15" fill="rgb(213,3,15)" fg:x="860" fg:w="1"/><text x="69.5490%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.2990%" y="437" width="0.0806%" height="15" fill="rgb(208,25,28)" fg:x="860" fg:w="1"/><text x="69.5490%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.2990%" y="421" width="0.0806%" height="15" fill="rgb(252,144,25)" fg:x="860" fg:w="1"/><text x="69.5490%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.2990%" y="405" width="0.0806%" height="15" fill="rgb(226,220,25)" fg:x="860" fg:w="1"/><text x="69.5490%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.2990%" y="389" width="0.0806%" height="15" fill="rgb(212,131,28)" fg:x="860" fg:w="1"/><text x="69.5490%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.2990%" y="373" width="0.0806%" height="15" fill="rgb(219,143,52)" fg:x="860" fg:w="1"/><text x="69.5490%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.2990%" y="357" width="0.0806%" height="15" fill="rgb(215,56,7)" fg:x="860" fg:w="1"/><text x="69.5490%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.2990%" y="341" width="0.0806%" height="15" fill="rgb(239,59,51)" fg:x="860" fg:w="1"/><text x="69.5490%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.2990%" y="325" width="0.0806%" height="15" fill="rgb(209,215,4)" fg:x="860" fg:w="1"/><text x="69.5490%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.2990%" y="309" width="0.0806%" height="15" fill="rgb(221,118,39)" fg:x="860" fg:w="1"/><text x="69.5490%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.2990%" y="293" width="0.0806%" height="15" fill="rgb(236,6,44)" fg:x="860" fg:w="1"/><text x="69.5490%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.2990%" y="277" width="0.0806%" height="15" fill="rgb(216,122,9)" fg:x="860" fg:w="1"/><text x="69.5490%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.2990%" y="485" width="0.1612%" height="15" fill="rgb(244,134,42)" fg:x="860" fg:w="2"/><text x="69.5490%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.2990%" y="469" width="0.1612%" height="15" fill="rgb(209,189,35)" fg:x="860" fg:w="2"/><text x="69.5490%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3795%" y="453" width="0.0806%" height="15" fill="rgb(250,47,36)" fg:x="861" fg:w="1"/><text x="69.6295%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="69.4601%" y="485" width="0.0806%" height="15" fill="rgb(252,112,4)" fg:x="862" fg:w="1"/><text x="69.7101%" y="495.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (40 samples, 3.22%)</title><rect x="66.3981%" y="533" width="3.2232%" height="15" fill="rgb(221,79,51)" fg:x="824" fg:w="40"/><text x="66.6481%" y="543.50">&lt;pl..</text></g><g><title>kernel::model::entry::Entry::scope (38 samples, 3.06%)</title><rect x="66.5592%" y="517" width="3.0620%" height="15" fill="rgb(232,65,53)" fg:x="826" fg:w="38"/><text x="66.8092%" y="527.50">ker..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (38 samples, 3.06%)</title><rect x="66.5592%" y="501" width="3.0620%" height="15" fill="rgb(211,37,7)" fg:x="826" fg:w="38"/><text x="66.8092%" y="511.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.5407%" y="485" width="0.0806%" height="15" fill="rgb(234,221,18)" fg:x="863" fg:w="1"/><text x="69.7907%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.5407%" y="469" width="0.0806%" height="15" fill="rgb(220,158,26)" fg:x="863" fg:w="1"/><text x="69.7907%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.5407%" y="453" width="0.0806%" height="15" fill="rgb(220,70,6)" fg:x="863" fg:w="1"/><text x="69.7907%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6213%" y="373" width="0.0806%" height="15" fill="rgb(250,39,48)" fg:x="864" fg:w="1"/><text x="69.8713%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6213%" y="357" width="0.0806%" height="15" fill="rgb(206,40,27)" fg:x="864" fg:w="1"/><text x="69.8713%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.6213%" y="341" width="0.0806%" height="15" fill="rgb(247,80,36)" fg:x="864" fg:w="1"/><text x="69.8713%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.6213%" y="325" width="0.0806%" height="15" fill="rgb(222,9,20)" fg:x="864" fg:w="1"/><text x="69.8713%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.6213%" y="309" width="0.0806%" height="15" fill="rgb(217,26,45)" fg:x="864" fg:w="1"/><text x="69.8713%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.6213%" y="293" width="0.0806%" height="15" fill="rgb(221,67,14)" fg:x="864" fg:w="1"/><text x="69.8713%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6213%" y="277" width="0.0806%" height="15" fill="rgb(248,100,24)" fg:x="864" fg:w="1"/><text x="69.8713%" y="287.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (42 samples, 3.38%)</title><rect x="66.3981%" y="549" width="3.3844%" height="15" fill="rgb(230,187,16)" fg:x="824" fg:w="42"/><text x="66.6481%" y="559.50">eng..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="69.6213%" y="533" width="0.1612%" height="15" fill="rgb(205,108,13)" fg:x="864" fg:w="2"/><text x="69.8713%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="69.6213%" y="517" width="0.1612%" height="15" fill="rgb(235,71,51)" fg:x="864" fg:w="2"/><text x="69.8713%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="69.6213%" y="501" width="0.1612%" height="15" fill="rgb(251,172,48)" fg:x="864" fg:w="2"/><text x="69.8713%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="69.6213%" y="485" width="0.1612%" height="15" fill="rgb(240,96,49)" fg:x="864" fg:w="2"/><text x="69.8713%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.6213%" y="469" width="0.1612%" height="15" fill="rgb(235,46,36)" fg:x="864" fg:w="2"/><text x="69.8713%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.6213%" y="453" width="0.1612%" height="15" fill="rgb(244,3,49)" fg:x="864" fg:w="2"/><text x="69.8713%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.6213%" y="437" width="0.1612%" height="15" fill="rgb(206,78,54)" fg:x="864" fg:w="2"/><text x="69.8713%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="69.6213%" y="421" width="0.1612%" height="15" fill="rgb(208,85,42)" fg:x="864" fg:w="2"/><text x="69.8713%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="69.6213%" y="405" width="0.1612%" height="15" fill="rgb(219,196,21)" fg:x="864" fg:w="2"/><text x="69.8713%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="69.6213%" y="389" width="0.1612%" height="15" fill="rgb(238,19,9)" fg:x="864" fg:w="2"/><text x="69.8713%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.7019%" y="373" width="0.0806%" height="15" fill="rgb(206,86,13)" fg:x="865" fg:w="1"/><text x="69.9519%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.7019%" y="357" width="0.0806%" height="15" fill="rgb(214,123,40)" fg:x="865" fg:w="1"/><text x="69.9519%" y="367.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (96 samples, 7.74%)</title><rect x="62.4496%" y="565" width="7.7357%" height="15" fill="rgb(243,53,5)" fg:x="775" fg:w="96"/><text x="62.6996%" y="575.50">&lt;engine::pe..</text></g><g><title>kernel::plugins::mw::apply_middleware (5 samples, 0.40%)</title><rect x="69.7824%" y="549" width="0.4029%" height="15" fill="rgb(254,186,31)" fg:x="866" fg:w="5"/><text x="70.0324%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="69.7824%" y="533" width="0.4029%" height="15" fill="rgb(221,216,25)" fg:x="866" fg:w="5"/><text x="70.0324%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="69.8630%" y="517" width="0.3223%" height="15" fill="rgb(248,107,42)" fg:x="867" fg:w="4"/><text x="70.1130%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="69.8630%" y="501" width="0.3223%" height="15" fill="rgb(221,85,43)" fg:x="867" fg:w="4"/><text x="70.1130%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="69.8630%" y="485" width="0.3223%" height="15" fill="rgb(225,34,24)" fg:x="867" fg:w="4"/><text x="70.1130%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="69.8630%" y="469" width="0.3223%" height="15" fill="rgb(211,119,1)" fg:x="867" fg:w="4"/><text x="70.1130%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="69.8630%" y="453" width="0.3223%" height="15" fill="rgb(254,216,46)" fg:x="867" fg:w="4"/><text x="70.1130%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (4 samples, 0.32%)</title><rect x="69.8630%" y="437" width="0.3223%" height="15" fill="rgb(238,11,38)" fg:x="867" fg:w="4"/><text x="70.1130%" y="447.50"></text></g><g><title>kernel::surround::Surroundings::unpack (4 samples, 0.32%)</title><rect x="69.8630%" y="421" width="0.3223%" height="15" fill="rgb(233,50,15)" fg:x="867" fg:w="4"/><text x="70.1130%" y="431.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="69.8630%" y="405" width="0.3223%" height="15" fill="rgb(217,181,29)" fg:x="867" fg:w="4"/><text x="70.1130%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.0242%" y="389" width="0.1612%" height="15" fill="rgb(214,56,3)" fg:x="869" fg:w="2"/><text x="70.2742%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.0242%" y="373" width="0.1612%" height="15" fill="rgb(230,69,45)" fg:x="869" fg:w="2"/><text x="70.2742%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="70.0242%" y="357" width="0.1612%" height="15" fill="rgb(224,201,50)" fg:x="869" fg:w="2"/><text x="70.2742%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="70.0242%" y="341" width="0.1612%" height="15" fill="rgb(217,228,18)" fg:x="869" fg:w="2"/><text x="70.2742%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="70.0242%" y="325" width="0.1612%" height="15" fill="rgb(239,33,44)" fg:x="869" fg:w="2"/><text x="70.2742%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="70.0242%" y="309" width="0.1612%" height="15" fill="rgb(248,210,23)" fg:x="869" fg:w="2"/><text x="70.2742%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="70.0242%" y="293" width="0.1612%" height="15" fill="rgb(253,135,8)" fg:x="869" fg:w="2"/><text x="70.2742%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="70.4271%" y="517" width="0.0806%" height="15" fill="rgb(217,98,21)" fg:x="874" fg:w="1"/><text x="70.6771%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.5077%" y="421" width="0.0806%" height="15" fill="rgb(253,130,21)" fg:x="875" fg:w="1"/><text x="70.7577%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.5077%" y="405" width="0.0806%" height="15" fill="rgb(207,81,54)" fg:x="875" fg:w="1"/><text x="70.7577%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.5077%" y="389" width="0.0806%" height="15" fill="rgb(232,48,33)" fg:x="875" fg:w="1"/><text x="70.7577%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.5077%" y="373" width="0.0806%" height="15" fill="rgb(211,9,35)" fg:x="875" fg:w="1"/><text x="70.7577%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.5077%" y="357" width="0.0806%" height="15" fill="rgb(205,152,21)" fg:x="875" fg:w="1"/><text x="70.7577%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.5077%" y="341" width="0.0806%" height="15" fill="rgb(249,21,27)" fg:x="875" fg:w="1"/><text x="70.7577%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.5077%" y="325" width="0.0806%" height="15" fill="rgb(252,29,24)" fg:x="875" fg:w="1"/><text x="70.7577%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.5077%" y="309" width="0.0806%" height="15" fill="rgb(230,130,50)" fg:x="875" fg:w="1"/><text x="70.7577%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.5077%" y="293" width="0.0806%" height="15" fill="rgb(239,144,14)" fg:x="875" fg:w="1"/><text x="70.7577%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.5077%" y="277" width="0.0806%" height="15" fill="rgb(227,111,50)" fg:x="875" fg:w="1"/><text x="70.7577%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.5077%" y="261" width="0.0806%" height="15" fill="rgb(254,84,20)" fg:x="875" fg:w="1"/><text x="70.7577%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.5077%" y="245" width="0.0806%" height="15" fill="rgb(232,90,48)" fg:x="875" fg:w="1"/><text x="70.7577%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.5077%" y="229" width="0.0806%" height="15" fill="rgb(253,63,47)" fg:x="875" fg:w="1"/><text x="70.7577%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.5077%" y="213" width="0.0806%" height="15" fill="rgb(251,146,35)" fg:x="875" fg:w="1"/><text x="70.7577%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.5077%" y="197" width="0.0806%" height="15" fill="rgb(229,192,35)" fg:x="875" fg:w="1"/><text x="70.7577%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5077%" y="181" width="0.0806%" height="15" fill="rgb(225,68,9)" fg:x="875" fg:w="1"/><text x="70.7577%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="70.5077%" y="469" width="0.1612%" height="15" fill="rgb(214,97,34)" fg:x="875" fg:w="2"/><text x="70.7577%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="70.5077%" y="453" width="0.1612%" height="15" fill="rgb(253,31,26)" fg:x="875" fg:w="2"/><text x="70.7577%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.5077%" y="437" width="0.1612%" height="15" fill="rgb(225,151,47)" fg:x="875" fg:w="2"/><text x="70.7577%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.5882%" y="421" width="0.0806%" height="15" fill="rgb(206,185,9)" fg:x="876" fg:w="1"/><text x="70.8382%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.5882%" y="405" width="0.0806%" height="15" fill="rgb(249,65,17)" fg:x="876" fg:w="1"/><text x="70.8382%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.5882%" y="389" width="0.0806%" height="15" fill="rgb(220,110,10)" fg:x="876" fg:w="1"/><text x="70.8382%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.5882%" y="373" width="0.0806%" height="15" fill="rgb(222,198,49)" fg:x="876" fg:w="1"/><text x="70.8382%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.5882%" y="357" width="0.0806%" height="15" fill="rgb(239,81,13)" fg:x="876" fg:w="1"/><text x="70.8382%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.5882%" y="341" width="0.0806%" height="15" fill="rgb(216,128,11)" fg:x="876" fg:w="1"/><text x="70.8382%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.5882%" y="325" width="0.0806%" height="15" fill="rgb(247,156,8)" fg:x="876" fg:w="1"/><text x="70.8382%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="70.5077%" y="501" width="0.2417%" height="15" fill="rgb(219,173,1)" fg:x="875" fg:w="3"/><text x="70.7577%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="70.5077%" y="485" width="0.2417%" height="15" fill="rgb(227,42,24)" fg:x="875" fg:w="3"/><text x="70.7577%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="70.6688%" y="469" width="0.0806%" height="15" fill="rgb(253,219,50)" fg:x="877" fg:w="1"/><text x="70.9188%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.6688%" y="453" width="0.0806%" height="15" fill="rgb(215,191,54)" fg:x="877" fg:w="1"/><text x="70.9188%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.6688%" y="437" width="0.0806%" height="15" fill="rgb(238,83,12)" fg:x="877" fg:w="1"/><text x="70.9188%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.6688%" y="421" width="0.0806%" height="15" fill="rgb(205,124,9)" fg:x="877" fg:w="1"/><text x="70.9188%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6688%" y="405" width="0.0806%" height="15" fill="rgb(253,174,7)" fg:x="877" fg:w="1"/><text x="70.9188%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.6688%" y="389" width="0.0806%" height="15" fill="rgb(206,134,49)" fg:x="877" fg:w="1"/><text x="70.9188%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6688%" y="373" width="0.0806%" height="15" fill="rgb(221,89,20)" fg:x="877" fg:w="1"/><text x="70.9188%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.6688%" y="357" width="0.0806%" height="15" fill="rgb(240,205,13)" fg:x="877" fg:w="1"/><text x="70.9188%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6688%" y="341" width="0.0806%" height="15" fill="rgb(237,174,32)" fg:x="877" fg:w="1"/><text x="70.9188%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.6688%" y="325" width="0.0806%" height="15" fill="rgb(226,12,15)" fg:x="877" fg:w="1"/><text x="70.9188%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6688%" y="309" width="0.0806%" height="15" fill="rgb(245,160,52)" fg:x="877" fg:w="1"/><text x="70.9188%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7494%" y="453" width="0.0806%" height="15" fill="rgb(253,80,21)" fg:x="878" fg:w="1"/><text x="70.9994%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7494%" y="437" width="0.0806%" height="15" fill="rgb(231,225,22)" fg:x="878" fg:w="1"/><text x="70.9994%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7494%" y="421" width="0.0806%" height="15" fill="rgb(253,185,12)" fg:x="878" fg:w="1"/><text x="70.9994%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7494%" y="405" width="0.0806%" height="15" fill="rgb(234,197,21)" fg:x="878" fg:w="1"/><text x="70.9994%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7494%" y="389" width="0.0806%" height="15" fill="rgb(210,47,30)" fg:x="878" fg:w="1"/><text x="70.9994%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.8300%" y="421" width="0.0806%" height="15" fill="rgb(246,139,27)" fg:x="879" fg:w="1"/><text x="71.0800%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8300%" y="405" width="0.0806%" height="15" fill="rgb(226,130,16)" fg:x="879" fg:w="1"/><text x="71.0800%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.9106%" y="325" width="0.0806%" height="15" fill="rgb(237,208,20)" fg:x="880" fg:w="1"/><text x="71.1606%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.9106%" y="309" width="0.0806%" height="15" fill="rgb(245,186,28)" fg:x="880" fg:w="1"/><text x="71.1606%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.9911%" y="325" width="0.0806%" height="15" fill="rgb(238,105,39)" fg:x="881" fg:w="1"/><text x="71.2411%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="70.7494%" y="501" width="0.4835%" height="15" fill="rgb(253,228,11)" fg:x="878" fg:w="6"/><text x="70.9994%" y="511.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="70.7494%" y="485" width="0.4835%" height="15" fill="rgb(224,136,38)" fg:x="878" fg:w="6"/><text x="70.9994%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="70.7494%" y="469" width="0.4835%" height="15" fill="rgb(211,3,25)" fg:x="878" fg:w="6"/><text x="70.9994%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (5 samples, 0.40%)</title><rect x="70.8300%" y="453" width="0.4029%" height="15" fill="rgb(238,66,34)" fg:x="879" fg:w="5"/><text x="71.0800%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="70.8300%" y="437" width="0.4029%" height="15" fill="rgb(223,188,11)" fg:x="879" fg:w="5"/><text x="71.0800%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (4 samples, 0.32%)</title><rect x="70.9106%" y="421" width="0.3223%" height="15" fill="rgb(221,10,35)" fg:x="880" fg:w="4"/><text x="71.1606%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="70.9106%" y="405" width="0.3223%" height="15" fill="rgb(223,18,44)" fg:x="880" fg:w="4"/><text x="71.1606%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="70.9106%" y="389" width="0.3223%" height="15" fill="rgb(220,97,41)" fg:x="880" fg:w="4"/><text x="71.1606%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="70.9106%" y="373" width="0.3223%" height="15" fill="rgb(206,95,45)" fg:x="880" fg:w="4"/><text x="71.1606%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (4 samples, 0.32%)</title><rect x="70.9106%" y="357" width="0.3223%" height="15" fill="rgb(209,96,13)" fg:x="880" fg:w="4"/><text x="71.1606%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="70.9106%" y="341" width="0.3223%" height="15" fill="rgb(237,39,34)" fg:x="880" fg:w="4"/><text x="71.1606%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.0717%" y="325" width="0.1612%" height="15" fill="rgb(213,49,47)" fg:x="882" fg:w="2"/><text x="71.3217%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.0717%" y="309" width="0.1612%" height="15" fill="rgb(205,107,27)" fg:x="882" fg:w="2"/><text x="71.3217%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.1523%" y="293" width="0.0806%" height="15" fill="rgb(212,142,9)" fg:x="883" fg:w="1"/><text x="71.4023%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="71.2329%" y="421" width="0.0806%" height="15" fill="rgb(226,182,0)" fg:x="884" fg:w="1"/><text x="71.4829%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.3135%" y="421" width="0.0806%" height="15" fill="rgb(231,3,53)" fg:x="885" fg:w="1"/><text x="71.5635%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="71.3940%" y="373" width="0.1612%" height="15" fill="rgb(246,111,28)" fg:x="886" fg:w="2"/><text x="71.6440%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.4746%" y="357" width="0.0806%" height="15" fill="rgb(254,183,7)" fg:x="887" fg:w="1"/><text x="71.7246%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.4746%" y="341" width="0.0806%" height="15" fill="rgb(247,177,28)" fg:x="887" fg:w="1"/><text x="71.7246%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.4746%" y="325" width="0.0806%" height="15" fill="rgb(244,43,1)" fg:x="887" fg:w="1"/><text x="71.7246%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.4746%" y="309" width="0.0806%" height="15" fill="rgb(207,2,35)" fg:x="887" fg:w="1"/><text x="71.7246%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.4746%" y="293" width="0.0806%" height="15" fill="rgb(213,83,22)" fg:x="887" fg:w="1"/><text x="71.7246%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="71.4746%" y="277" width="0.0806%" height="15" fill="rgb(246,212,13)" fg:x="887" fg:w="1"/><text x="71.7246%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.4746%" y="261" width="0.0806%" height="15" fill="rgb(213,127,46)" fg:x="887" fg:w="1"/><text x="71.7246%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.4746%" y="245" width="0.0806%" height="15" fill="rgb(219,215,39)" fg:x="887" fg:w="1"/><text x="71.7246%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4746%" y="229" width="0.0806%" height="15" fill="rgb(227,99,17)" fg:x="887" fg:w="1"/><text x="71.7246%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5552%" y="341" width="0.0806%" height="15" fill="rgb(208,155,18)" fg:x="888" fg:w="1"/><text x="71.8052%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="71.5552%" y="373" width="0.1612%" height="15" fill="rgb(223,204,38)" fg:x="888" fg:w="2"/><text x="71.8052%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="71.5552%" y="357" width="0.1612%" height="15" fill="rgb(212,114,21)" fg:x="888" fg:w="2"/><text x="71.8052%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="71.6358%" y="341" width="0.0806%" height="15" fill="rgb(250,74,13)" fg:x="889" fg:w="1"/><text x="71.8858%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="71.6358%" y="325" width="0.0806%" height="15" fill="rgb(234,7,1)" fg:x="889" fg:w="1"/><text x="71.8858%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6358%" y="309" width="0.0806%" height="15" fill="rgb(207,138,31)" fg:x="889" fg:w="1"/><text x="71.8858%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.7969%" y="293" width="0.0806%" height="15" fill="rgb(215,186,42)" fg:x="891" fg:w="1"/><text x="72.0469%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.7969%" y="277" width="0.0806%" height="15" fill="rgb(229,205,49)" fg:x="891" fg:w="1"/><text x="72.0469%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7969%" y="261" width="0.0806%" height="15" fill="rgb(216,156,32)" fg:x="891" fg:w="1"/><text x="72.0469%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.8775%" y="197" width="0.0806%" height="15" fill="rgb(238,7,21)" fg:x="892" fg:w="1"/><text x="72.1275%" y="207.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (10 samples, 0.81%)</title><rect x="71.2329%" y="485" width="0.8058%" height="15" fill="rgb(249,190,22)" fg:x="884" fg:w="10"/><text x="71.4829%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (10 samples, 0.81%)</title><rect x="71.2329%" y="469" width="0.8058%" height="15" fill="rgb(253,51,31)" fg:x="884" fg:w="10"/><text x="71.4829%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.81%)</title><rect x="71.2329%" y="453" width="0.8058%" height="15" fill="rgb(237,90,54)" fg:x="884" fg:w="10"/><text x="71.4829%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="71.2329%" y="437" width="0.8058%" height="15" fill="rgb(250,214,33)" fg:x="884" fg:w="10"/><text x="71.4829%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="71.3940%" y="421" width="0.6446%" height="15" fill="rgb(237,10,49)" fg:x="886" fg:w="8"/><text x="71.6440%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="71.3940%" y="405" width="0.6446%" height="15" fill="rgb(241,56,36)" fg:x="886" fg:w="8"/><text x="71.6440%" y="415.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="71.3940%" y="389" width="0.6446%" height="15" fill="rgb(227,164,12)" fg:x="886" fg:w="8"/><text x="71.6440%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="71.7164%" y="373" width="0.3223%" height="15" fill="rgb(249,149,35)" fg:x="890" fg:w="4"/><text x="71.9664%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="71.7164%" y="357" width="0.3223%" height="15" fill="rgb(238,227,50)" fg:x="890" fg:w="4"/><text x="71.9664%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="71.7164%" y="341" width="0.3223%" height="15" fill="rgb(235,102,45)" fg:x="890" fg:w="4"/><text x="71.9664%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="71.7164%" y="325" width="0.3223%" height="15" fill="rgb(211,10,38)" fg:x="890" fg:w="4"/><text x="71.9664%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="71.7164%" y="309" width="0.3223%" height="15" fill="rgb(219,77,48)" fg:x="890" fg:w="4"/><text x="71.9664%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="71.8775%" y="293" width="0.1612%" height="15" fill="rgb(246,6,15)" fg:x="892" fg:w="2"/><text x="72.1275%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.8775%" y="277" width="0.1612%" height="15" fill="rgb(207,220,2)" fg:x="892" fg:w="2"/><text x="72.1275%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.8775%" y="261" width="0.1612%" height="15" fill="rgb(242,48,14)" fg:x="892" fg:w="2"/><text x="72.1275%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="71.8775%" y="245" width="0.1612%" height="15" fill="rgb(218,19,27)" fg:x="892" fg:w="2"/><text x="72.1275%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.8775%" y="229" width="0.1612%" height="15" fill="rgb(228,0,35)" fg:x="892" fg:w="2"/><text x="72.1275%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.8775%" y="213" width="0.1612%" height="15" fill="rgb(244,142,54)" fg:x="892" fg:w="2"/><text x="72.1275%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="71.9581%" y="197" width="0.0806%" height="15" fill="rgb(243,217,40)" fg:x="893" fg:w="1"/><text x="72.2081%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.9581%" y="181" width="0.0806%" height="15" fill="rgb(207,114,16)" fg:x="893" fg:w="1"/><text x="72.2081%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.9581%" y="165" width="0.0806%" height="15" fill="rgb(224,33,25)" fg:x="893" fg:w="1"/><text x="72.2081%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.9581%" y="149" width="0.0806%" height="15" fill="rgb(230,93,54)" fg:x="893" fg:w="1"/><text x="72.2081%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="72.0387%" y="421" width="0.0806%" height="15" fill="rgb(224,56,24)" fg:x="894" fg:w="1"/><text x="72.2887%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.1998%" y="373" width="0.0806%" height="15" fill="rgb(235,189,50)" fg:x="896" fg:w="1"/><text x="72.4498%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.2804%" y="341" width="0.0806%" height="15" fill="rgb(242,173,8)" fg:x="897" fg:w="1"/><text x="72.5304%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.2804%" y="325" width="0.0806%" height="15" fill="rgb(209,206,10)" fg:x="897" fg:w="1"/><text x="72.5304%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="72.3610%" y="261" width="0.0806%" height="15" fill="rgb(213,182,44)" fg:x="898" fg:w="1"/><text x="72.6110%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (27 samples, 2.18%)</title><rect x="70.3465%" y="549" width="2.1757%" height="15" fill="rgb(243,51,15)" fg:x="873" fg:w="27"/><text x="70.5965%" y="559.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (27 samples, 2.18%)</title><rect x="70.3465%" y="533" width="2.1757%" height="15" fill="rgb(241,13,14)" fg:x="873" fg:w="27"/><text x="70.5965%" y="543.50">&lt;..</text></g><g><title>engine::internal::Entities::add_persisted (25 samples, 2.01%)</title><rect x="70.5077%" y="517" width="2.0145%" height="15" fill="rgb(239,147,24)" fg:x="875" fg:w="25"/><text x="70.7577%" y="527.50">e..</text></g><g><title>kernel::model::deserialize_entity (16 samples, 1.29%)</title><rect x="71.2329%" y="501" width="1.2893%" height="15" fill="rgb(223,129,16)" fg:x="884" fg:w="16"/><text x="71.4829%" y="511.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="72.0387%" y="485" width="0.4835%" height="15" fill="rgb(209,169,13)" fg:x="894" fg:w="6"/><text x="72.2887%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="72.0387%" y="469" width="0.4835%" height="15" fill="rgb(235,159,41)" fg:x="894" fg:w="6"/><text x="72.2887%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="72.0387%" y="453" width="0.4835%" height="15" fill="rgb(223,219,48)" fg:x="894" fg:w="6"/><text x="72.2887%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="72.0387%" y="437" width="0.4835%" height="15" fill="rgb(236,80,13)" fg:x="894" fg:w="6"/><text x="72.2887%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="72.1193%" y="421" width="0.4029%" height="15" fill="rgb(213,5,6)" fg:x="895" fg:w="5"/><text x="72.3693%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="72.1193%" y="405" width="0.4029%" height="15" fill="rgb(205,59,21)" fg:x="895" fg:w="5"/><text x="72.3693%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="72.1193%" y="389" width="0.4029%" height="15" fill="rgb(247,137,35)" fg:x="895" fg:w="5"/><text x="72.3693%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="72.2804%" y="373" width="0.2417%" height="15" fill="rgb(242,208,28)" fg:x="897" fg:w="3"/><text x="72.5304%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="72.2804%" y="357" width="0.2417%" height="15" fill="rgb(245,62,25)" fg:x="897" fg:w="3"/><text x="72.5304%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="72.3610%" y="341" width="0.1612%" height="15" fill="rgb(233,99,54)" fg:x="898" fg:w="2"/><text x="72.6110%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="72.3610%" y="325" width="0.1612%" height="15" fill="rgb(213,10,37)" fg:x="898" fg:w="2"/><text x="72.6110%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="72.3610%" y="309" width="0.1612%" height="15" fill="rgb(235,143,30)" fg:x="898" fg:w="2"/><text x="72.6110%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="72.3610%" y="293" width="0.1612%" height="15" fill="rgb(250,146,33)" fg:x="898" fg:w="2"/><text x="72.6110%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="72.3610%" y="277" width="0.1612%" height="15" fill="rgb(226,198,42)" fg:x="898" fg:w="2"/><text x="72.6110%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.4416%" y="261" width="0.0806%" height="15" fill="rgb(222,55,6)" fg:x="899" fg:w="1"/><text x="72.6916%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.6027%" y="485" width="0.1612%" height="15" fill="rgb(213,224,31)" fg:x="901" fg:w="2"/><text x="72.8527%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.6027%" y="469" width="0.1612%" height="15" fill="rgb(226,103,35)" fg:x="901" fg:w="2"/><text x="72.8527%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.6027%" y="453" width="0.1612%" height="15" fill="rgb(205,66,45)" fg:x="901" fg:w="2"/><text x="72.8527%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.6027%" y="437" width="0.1612%" height="15" fill="rgb(226,51,42)" fg:x="901" fg:w="2"/><text x="72.8527%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.6027%" y="421" width="0.1612%" height="15" fill="rgb(206,69,1)" fg:x="901" fg:w="2"/><text x="72.8527%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="72.6027%" y="405" width="0.1612%" height="15" fill="rgb(213,228,47)" fg:x="901" fg:w="2"/><text x="72.8527%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="72.6027%" y="389" width="0.1612%" height="15" fill="rgb(224,204,18)" fg:x="901" fg:w="2"/><text x="72.8527%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="72.6027%" y="373" width="0.1612%" height="15" fill="rgb(253,187,47)" fg:x="901" fg:w="2"/><text x="72.8527%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="72.6027%" y="357" width="0.1612%" height="15" fill="rgb(232,61,2)" fg:x="901" fg:w="2"/><text x="72.8527%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="72.6027%" y="341" width="0.1612%" height="15" fill="rgb(213,132,35)" fg:x="901" fg:w="2"/><text x="72.8527%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="72.6027%" y="325" width="0.1612%" height="15" fill="rgb(247,33,21)" fg:x="901" fg:w="2"/><text x="72.8527%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="72.6027%" y="309" width="0.1612%" height="15" fill="rgb(233,71,46)" fg:x="901" fg:w="2"/><text x="72.8527%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="72.6027%" y="293" width="0.1612%" height="15" fill="rgb(222,173,43)" fg:x="901" fg:w="2"/><text x="72.8527%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="72.6027%" y="277" width="0.1612%" height="15" fill="rgb(249,218,47)" fg:x="901" fg:w="2"/><text x="72.8527%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6833%" y="261" width="0.0806%" height="15" fill="rgb(254,185,48)" fg:x="902" fg:w="1"/><text x="72.9333%" y="271.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (4 samples, 0.32%)</title><rect x="72.5222%" y="549" width="0.3223%" height="15" fill="rgb(252,165,50)" fg:x="900" fg:w="4"/><text x="72.7722%" y="559.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="72.5222%" y="533" width="0.3223%" height="15" fill="rgb(206,219,6)" fg:x="900" fg:w="4"/><text x="72.7722%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="72.5222%" y="517" width="0.3223%" height="15" fill="rgb(212,212,45)" fg:x="900" fg:w="4"/><text x="72.7722%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="72.5222%" y="501" width="0.3223%" height="15" fill="rgb(221,31,9)" fg:x="900" fg:w="4"/><text x="72.7722%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.7639%" y="485" width="0.0806%" height="15" fill="rgb(234,198,39)" fg:x="903" fg:w="1"/><text x="73.0139%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.7639%" y="469" width="0.0806%" height="15" fill="rgb(252,145,46)" fg:x="903" fg:w="1"/><text x="73.0139%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="72.8445%" y="517" width="0.0806%" height="15" fill="rgb(237,149,0)" fg:x="904" fg:w="1"/><text x="73.0945%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="72.8445%" y="501" width="0.0806%" height="15" fill="rgb(229,65,5)" fg:x="904" fg:w="1"/><text x="73.0945%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8445%" y="485" width="0.0806%" height="15" fill="rgb(235,60,36)" fg:x="904" fg:w="1"/><text x="73.0945%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8445%" y="469" width="0.0806%" height="15" fill="rgb(222,47,18)" fg:x="904" fg:w="1"/><text x="73.0945%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8445%" y="453" width="0.0806%" height="15" fill="rgb(235,114,22)" fg:x="904" fg:w="1"/><text x="73.0945%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.8445%" y="437" width="0.0806%" height="15" fill="rgb(209,167,11)" fg:x="904" fg:w="1"/><text x="73.0945%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.8445%" y="421" width="0.0806%" height="15" fill="rgb(251,73,18)" fg:x="904" fg:w="1"/><text x="73.0945%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.8445%" y="405" width="0.0806%" height="15" fill="rgb(217,60,17)" fg:x="904" fg:w="1"/><text x="73.0945%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.8445%" y="389" width="0.0806%" height="15" fill="rgb(224,36,37)" fg:x="904" fg:w="1"/><text x="73.0945%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.8445%" y="373" width="0.0806%" height="15" fill="rgb(211,21,32)" fg:x="904" fg:w="1"/><text x="73.0945%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.8445%" y="357" width="0.0806%" height="15" fill="rgb(231,55,48)" fg:x="904" fg:w="1"/><text x="73.0945%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.8445%" y="341" width="0.0806%" height="15" fill="rgb(227,42,18)" fg:x="904" fg:w="1"/><text x="73.0945%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.8445%" y="325" width="0.0806%" height="15" fill="rgb(217,2,27)" fg:x="904" fg:w="1"/><text x="73.0945%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.8445%" y="309" width="0.0806%" height="15" fill="rgb(251,138,23)" fg:x="904" fg:w="1"/><text x="73.0945%" y="319.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (132 samples, 10.64%)</title><rect x="62.4496%" y="581" width="10.6366%" height="15" fill="rgb(226,184,11)" fg:x="775" fg:w="132"/><text x="62.6996%" y="591.50">&lt;engine::perform..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (36 samples, 2.90%)</title><rect x="70.1853%" y="565" width="2.9009%" height="15" fill="rgb(242,142,12)" fg:x="871" fg:w="36"/><text x="70.4353%" y="575.50">en..</text></g><g><title>engine::session::Session::world (3 samples, 0.24%)</title><rect x="72.8445%" y="549" width="0.2417%" height="15" fill="rgb(234,187,18)" fg:x="904" fg:w="3"/><text x="73.0945%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="72.8445%" y="533" width="0.2417%" height="15" fill="rgb(237,44,42)" fg:x="904" fg:w="3"/><text x="73.0945%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="72.9251%" y="517" width="0.1612%" height="15" fill="rgb(211,90,23)" fg:x="905" fg:w="2"/><text x="73.1751%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="72.9251%" y="501" width="0.1612%" height="15" fill="rgb(207,81,18)" fg:x="905" fg:w="2"/><text x="73.1751%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="73.0056%" y="485" width="0.0806%" height="15" fill="rgb(222,107,28)" fg:x="906" fg:w="1"/><text x="73.2556%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.0056%" y="469" width="0.0806%" height="15" fill="rgb(237,83,52)" fg:x="906" fg:w="1"/><text x="73.2556%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.0056%" y="453" width="0.0806%" height="15" fill="rgb(208,67,11)" fg:x="906" fg:w="1"/><text x="73.2556%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="73.0056%" y="437" width="0.0806%" height="15" fill="rgb(249,157,49)" fg:x="906" fg:w="1"/><text x="73.2556%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="73.0056%" y="421" width="0.0806%" height="15" fill="rgb(243,200,1)" fg:x="906" fg:w="1"/><text x="73.2556%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.0056%" y="405" width="0.0806%" height="15" fill="rgb(225,162,37)" fg:x="906" fg:w="1"/><text x="73.2556%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.0056%" y="389" width="0.0806%" height="15" fill="rgb(242,92,13)" fg:x="906" fg:w="1"/><text x="73.2556%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.0056%" y="373" width="0.0806%" height="15" fill="rgb(220,43,36)" fg:x="906" fg:w="1"/><text x="73.2556%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="73.0056%" y="357" width="0.0806%" height="15" fill="rgb(213,165,48)" fg:x="906" fg:w="1"/><text x="73.2556%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="73.0056%" y="341" width="0.0806%" height="15" fill="rgb(227,200,9)" fg:x="906" fg:w="1"/><text x="73.2556%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="73.0056%" y="325" width="0.0806%" height="15" fill="rgb(221,222,28)" fg:x="906" fg:w="1"/><text x="73.2556%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="73.0056%" y="309" width="0.0806%" height="15" fill="rgb(223,142,26)" fg:x="906" fg:w="1"/><text x="73.2556%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="73.0056%" y="293" width="0.0806%" height="15" fill="rgb(243,46,9)" fg:x="906" fg:w="1"/><text x="73.2556%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (136 samples, 10.96%)</title><rect x="62.2079%" y="613" width="10.9589%" height="15" fill="rgb(250,56,11)" fg:x="772" fg:w="136"/><text x="62.4579%" y="623.50">&lt;core::iter::ada..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (133 samples, 10.72%)</title><rect x="62.4496%" y="597" width="10.7172%" height="15" fill="rgb(229,113,5)" fg:x="775" fg:w="133"/><text x="62.6996%" y="607.50">&lt;plugins_core::c..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="73.0862%" y="581" width="0.0806%" height="15" fill="rgb(244,108,28)" fg:x="907" fg:w="1"/><text x="73.3362%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="73.0862%" y="565" width="0.0806%" height="15" fill="rgb(242,119,50)" fg:x="907" fg:w="1"/><text x="73.3362%" y="575.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="73.0862%" y="549" width="0.0806%" height="15" fill="rgb(224,164,23)" fg:x="907" fg:w="1"/><text x="73.3362%" y="559.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (138 samples, 11.12%)</title><rect x="62.1273%" y="661" width="11.1201%" height="15" fill="rgb(214,227,44)" fg:x="771" fg:w="138"/><text x="62.3773%" y="671.50">&lt;kernel::plugins..</text></g><g><title>core::iter::adapters::try_process (137 samples, 11.04%)</title><rect x="62.2079%" y="645" width="11.0395%" height="15" fill="rgb(238,202,4)" fg:x="772" fg:w="137"/><text x="62.4579%" y="655.50">core::iter::adap..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (137 samples, 11.04%)</title><rect x="62.2079%" y="629" width="11.0395%" height="15" fill="rgb(213,190,30)" fg:x="772" fg:w="137"/><text x="62.4579%" y="639.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.1668%" y="613" width="0.0806%" height="15" fill="rgb(239,15,2)" fg:x="908" fg:w="1"/><text x="73.4168%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.1668%" y="597" width="0.0806%" height="15" fill="rgb(249,229,4)" fg:x="908" fg:w="1"/><text x="73.4168%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.1668%" y="581" width="0.0806%" height="15" fill="rgb(239,75,44)" fg:x="908" fg:w="1"/><text x="73.4168%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (910 samples, 73.33%)</title><rect x="0.0000%" y="741" width="73.3280%" height="15" fill="rgb(251,206,23)" fg:x="0" fg:w="910"/><text x="0.2500%" y="751.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (910 samples, 73.33%)</title><rect x="0.0000%" y="725" width="73.3280%" height="15" fill="rgb(215,208,0)" fg:x="0" fg:w="910"/><text x="0.2500%" y="735.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (910 samples, 73.33%)</title><rect x="0.0000%" y="709" width="73.3280%" height="15" fill="rgb(230,75,50)" fg:x="0" fg:w="910"/><text x="0.2500%" y="719.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (139 samples, 11.20%)</title><rect x="62.1273%" y="693" width="11.2006%" height="15" fill="rgb(246,180,39)" fg:x="771" fg:w="139"/><text x="62.3773%" y="703.50">engine::session:..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (139 samples, 11.20%)</title><rect x="62.1273%" y="677" width="11.2006%" height="15" fill="rgb(249,175,24)" fg:x="771" fg:w="139"/><text x="62.3773%" y="687.50">engine::perform:..</text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="73.2474%" y="661" width="0.0806%" height="15" fill="rgb(247,176,22)" fg:x="909" fg:w="1"/><text x="73.4974%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="73.2474%" y="645" width="0.0806%" height="15" fill="rgb(241,100,24)" fg:x="909" fg:w="1"/><text x="73.4974%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.2474%" y="629" width="0.0806%" height="15" fill="rgb(233,4,35)" fg:x="909" fg:w="1"/><text x="73.4974%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.2474%" y="613" width="0.0806%" height="15" fill="rgb(211,164,46)" fg:x="909" fg:w="1"/><text x="73.4974%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="73.2474%" y="597" width="0.0806%" height="15" fill="rgb(242,99,53)" fg:x="909" fg:w="1"/><text x="73.4974%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="73.2474%" y="581" width="0.0806%" height="15" fill="rgb(243,45,33)" fg:x="909" fg:w="1"/><text x="73.4974%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="73.3280%" y="677" width="0.0806%" height="15" fill="rgb(217,55,21)" fg:x="910" fg:w="1"/><text x="73.5780%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.3280%" y="661" width="0.0806%" height="15" fill="rgb(245,145,46)" fg:x="910" fg:w="1"/><text x="73.5780%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4085%" y="645" width="0.0806%" height="15" fill="rgb(215,112,45)" fg:x="911" fg:w="1"/><text x="73.6585%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4891%" y="597" width="0.0806%" height="15" fill="rgb(228,104,16)" fg:x="912" fg:w="1"/><text x="73.7391%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.5697%" y="565" width="0.0806%" height="15" fill="rgb(239,186,38)" fg:x="913" fg:w="1"/><text x="73.8197%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.6503%" y="549" width="0.0806%" height="15" fill="rgb(228,38,35)" fg:x="914" fg:w="1"/><text x="73.9003%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.6503%" y="533" width="0.0806%" height="15" fill="rgb(251,42,40)" fg:x="914" fg:w="1"/><text x="73.9003%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6503%" y="517" width="0.0806%" height="15" fill="rgb(210,51,19)" fg:x="914" fg:w="1"/><text x="73.9003%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.7309%" y="549" width="0.0806%" height="15" fill="rgb(236,94,42)" fg:x="915" fg:w="1"/><text x="73.9809%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8920%" y="517" width="0.0806%" height="15" fill="rgb(239,167,16)" fg:x="917" fg:w="1"/><text x="74.1420%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="73.3280%" y="693" width="0.7252%" height="15" fill="rgb(252,175,31)" fg:x="910" fg:w="9"/><text x="73.5780%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (8 samples, 0.64%)</title><rect x="73.4085%" y="677" width="0.6446%" height="15" fill="rgb(206,166,30)" fg:x="911" fg:w="8"/><text x="73.6585%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="73.4085%" y="661" width="0.6446%" height="15" fill="rgb(206,209,37)" fg:x="911" fg:w="8"/><text x="73.6585%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (7 samples, 0.56%)</title><rect x="73.4891%" y="645" width="0.5641%" height="15" fill="rgb(226,91,4)" fg:x="912" fg:w="7"/><text x="73.7391%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="73.4891%" y="629" width="0.5641%" height="15" fill="rgb(222,167,0)" fg:x="912" fg:w="7"/><text x="73.7391%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="73.4891%" y="613" width="0.5641%" height="15" fill="rgb(211,70,14)" fg:x="912" fg:w="7"/><text x="73.7391%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (6 samples, 0.48%)</title><rect x="73.5697%" y="597" width="0.4835%" height="15" fill="rgb(214,84,42)" fg:x="913" fg:w="6"/><text x="73.8197%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="73.5697%" y="581" width="0.4835%" height="15" fill="rgb(235,157,37)" fg:x="913" fg:w="6"/><text x="73.8197%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="73.6503%" y="565" width="0.4029%" height="15" fill="rgb(225,13,6)" fg:x="914" fg:w="5"/><text x="73.9003%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.8114%" y="549" width="0.2417%" height="15" fill="rgb(205,202,1)" fg:x="916" fg:w="3"/><text x="74.0614%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.8114%" y="533" width="0.2417%" height="15" fill="rgb(232,195,26)" fg:x="916" fg:w="3"/><text x="74.0614%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9726%" y="517" width="0.0806%" height="15" fill="rgb(208,102,26)" fg:x="918" fg:w="1"/><text x="74.2226%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9726%" y="501" width="0.0806%" height="15" fill="rgb(215,41,39)" fg:x="918" fg:w="1"/><text x="74.2226%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.9726%" y="485" width="0.0806%" height="15" fill="rgb(247,139,11)" fg:x="918" fg:w="1"/><text x="74.2226%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.0532%" y="533" width="0.0806%" height="15" fill="rgb(243,99,6)" fg:x="919" fg:w="1"/><text x="74.3032%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="74.0532%" y="581" width="0.2417%" height="15" fill="rgb(230,168,48)" fg:x="919" fg:w="3"/><text x="74.3032%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="74.0532%" y="565" width="0.2417%" height="15" fill="rgb(238,227,13)" fg:x="919" fg:w="3"/><text x="74.3032%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.0532%" y="549" width="0.2417%" height="15" fill="rgb(209,109,13)" fg:x="919" fg:w="3"/><text x="74.3032%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.1338%" y="533" width="0.1612%" height="15" fill="rgb(228,195,1)" fg:x="920" fg:w="2"/><text x="74.3838%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.1338%" y="517" width="0.1612%" height="15" fill="rgb(230,218,0)" fg:x="920" fg:w="2"/><text x="74.3838%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.1338%" y="501" width="0.1612%" height="15" fill="rgb(206,1,45)" fg:x="920" fg:w="2"/><text x="74.3838%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.1338%" y="485" width="0.1612%" height="15" fill="rgb(209,124,26)" fg:x="920" fg:w="2"/><text x="74.3838%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="74.1338%" y="469" width="0.1612%" height="15" fill="rgb(220,59,8)" fg:x="920" fg:w="2"/><text x="74.3838%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.2143%" y="453" width="0.0806%" height="15" fill="rgb(251,41,37)" fg:x="921" fg:w="1"/><text x="74.4643%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2143%" y="437" width="0.0806%" height="15" fill="rgb(239,152,21)" fg:x="921" fg:w="1"/><text x="74.4643%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.2143%" y="421" width="0.0806%" height="15" fill="rgb(226,32,1)" fg:x="921" fg:w="1"/><text x="74.4643%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="74.0532%" y="613" width="0.3223%" height="15" fill="rgb(230,154,36)" fg:x="919" fg:w="4"/><text x="74.3032%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="74.0532%" y="597" width="0.3223%" height="15" fill="rgb(208,228,43)" fg:x="919" fg:w="4"/><text x="74.3032%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.2949%" y="581" width="0.0806%" height="15" fill="rgb(214,203,3)" fg:x="922" fg:w="1"/><text x="74.5449%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.2949%" y="565" width="0.0806%" height="15" fill="rgb(207,149,29)" fg:x="922" fg:w="1"/><text x="74.5449%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.2949%" y="549" width="0.0806%" height="15" fill="rgb(250,105,7)" fg:x="922" fg:w="1"/><text x="74.5449%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3755%" y="565" width="0.0806%" height="15" fill="rgb(232,222,16)" fg:x="923" fg:w="1"/><text x="74.6255%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3755%" y="549" width="0.0806%" height="15" fill="rgb(209,32,24)" fg:x="923" fg:w="1"/><text x="74.6255%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3755%" y="533" width="0.0806%" height="15" fill="rgb(225,13,6)" fg:x="923" fg:w="1"/><text x="74.6255%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3755%" y="517" width="0.0806%" height="15" fill="rgb(245,226,26)" fg:x="923" fg:w="1"/><text x="74.6255%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3755%" y="501" width="0.0806%" height="15" fill="rgb(229,178,27)" fg:x="923" fg:w="1"/><text x="74.6255%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3755%" y="485" width="0.0806%" height="15" fill="rgb(205,227,28)" fg:x="923" fg:w="1"/><text x="74.6255%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="74.3755%" y="613" width="0.1612%" height="15" fill="rgb(210,191,45)" fg:x="923" fg:w="2"/><text x="74.6255%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.3755%" y="597" width="0.1612%" height="15" fill="rgb(206,124,16)" fg:x="923" fg:w="2"/><text x="74.6255%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.3755%" y="581" width="0.1612%" height="15" fill="rgb(210,162,0)" fg:x="923" fg:w="2"/><text x="74.6255%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.4561%" y="565" width="0.0806%" height="15" fill="rgb(211,54,38)" fg:x="924" fg:w="1"/><text x="74.7061%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4561%" y="549" width="0.0806%" height="15" fill="rgb(248,192,3)" fg:x="924" fg:w="1"/><text x="74.7061%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.4561%" y="533" width="0.0806%" height="15" fill="rgb(233,187,18)" fg:x="924" fg:w="1"/><text x="74.7061%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4561%" y="517" width="0.0806%" height="15" fill="rgb(237,208,14)" fg:x="924" fg:w="1"/><text x="74.7061%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.4561%" y="501" width="0.0806%" height="15" fill="rgb(212,77,1)" fg:x="924" fg:w="1"/><text x="74.7061%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4561%" y="485" width="0.0806%" height="15" fill="rgb(210,163,22)" fg:x="924" fg:w="1"/><text x="74.7061%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.4561%" y="469" width="0.0806%" height="15" fill="rgb(250,58,28)" fg:x="924" fg:w="1"/><text x="74.7061%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4561%" y="453" width="0.0806%" height="15" fill="rgb(254,28,41)" fg:x="924" fg:w="1"/><text x="74.7061%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.4561%" y="437" width="0.0806%" height="15" fill="rgb(237,162,36)" fg:x="924" fg:w="1"/><text x="74.7061%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6978%" y="533" width="0.0806%" height="15" fill="rgb(232,56,6)" fg:x="927" fg:w="1"/><text x="74.9478%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.7784%" y="421" width="0.0806%" height="15" fill="rgb(216,127,42)" fg:x="928" fg:w="1"/><text x="75.0284%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.7784%" y="405" width="0.0806%" height="15" fill="rgb(241,69,15)" fg:x="928" fg:w="1"/><text x="75.0284%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.7784%" y="389" width="0.0806%" height="15" fill="rgb(227,180,19)" fg:x="928" fg:w="1"/><text x="75.0284%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.7784%" y="373" width="0.0806%" height="15" fill="rgb(231,188,29)" fg:x="928" fg:w="1"/><text x="75.0284%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.7784%" y="357" width="0.0806%" height="15" fill="rgb(224,176,27)" fg:x="928" fg:w="1"/><text x="75.0284%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.7784%" y="341" width="0.0806%" height="15" fill="rgb(249,214,19)" fg:x="928" fg:w="1"/><text x="75.0284%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7784%" y="325" width="0.0806%" height="15" fill="rgb(240,0,4)" fg:x="928" fg:w="1"/><text x="75.0284%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7784%" y="309" width="0.0806%" height="15" fill="rgb(233,28,41)" fg:x="928" fg:w="1"/><text x="75.0284%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="74.5367%" y="597" width="0.4029%" height="15" fill="rgb(220,90,51)" fg:x="925" fg:w="5"/><text x="74.7867%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="74.5367%" y="581" width="0.4029%" height="15" fill="rgb(250,52,22)" fg:x="925" fg:w="5"/><text x="74.7867%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="74.5367%" y="565" width="0.4029%" height="15" fill="rgb(231,152,36)" fg:x="925" fg:w="5"/><text x="74.7867%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="74.5367%" y="549" width="0.4029%" height="15" fill="rgb(250,218,4)" fg:x="925" fg:w="5"/><text x="74.7867%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="74.7784%" y="533" width="0.1612%" height="15" fill="rgb(210,38,21)" fg:x="928" fg:w="2"/><text x="75.0284%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7784%" y="517" width="0.1612%" height="15" fill="rgb(230,75,13)" fg:x="928" fg:w="2"/><text x="75.0284%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.7784%" y="501" width="0.1612%" height="15" fill="rgb(250,68,53)" fg:x="928" fg:w="2"/><text x="75.0284%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.7784%" y="485" width="0.1612%" height="15" fill="rgb(250,210,16)" fg:x="928" fg:w="2"/><text x="75.0284%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.7784%" y="469" width="0.1612%" height="15" fill="rgb(240,132,5)" fg:x="928" fg:w="2"/><text x="75.0284%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.7784%" y="453" width="0.1612%" height="15" fill="rgb(222,148,48)" fg:x="928" fg:w="2"/><text x="75.0284%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.7784%" y="437" width="0.1612%" height="15" fill="rgb(247,181,24)" fg:x="928" fg:w="2"/><text x="75.0284%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="74.8590%" y="421" width="0.0806%" height="15" fill="rgb(239,5,31)" fg:x="929" fg:w="1"/><text x="75.1090%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.8590%" y="405" width="0.0806%" height="15" fill="rgb(241,152,38)" fg:x="929" fg:w="1"/><text x="75.1090%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.8590%" y="389" width="0.0806%" height="15" fill="rgb(246,200,37)" fg:x="929" fg:w="1"/><text x="75.1090%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (13 samples, 1.05%)</title><rect x="74.0532%" y="661" width="1.0475%" height="15" fill="rgb(243,210,26)" fg:x="919" fg:w="13"/><text x="74.3032%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.05%)</title><rect x="74.0532%" y="645" width="1.0475%" height="15" fill="rgb(222,22,22)" fg:x="919" fg:w="13"/><text x="74.3032%" y="655.50"></text></g><g><title>engine::internal::Entities::add_persisted (13 samples, 1.05%)</title><rect x="74.0532%" y="629" width="1.0475%" height="15" fill="rgb(208,129,28)" fg:x="919" fg:w="13"/><text x="74.3032%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.56%)</title><rect x="74.5367%" y="613" width="0.5641%" height="15" fill="rgb(254,169,28)" fg:x="925" fg:w="7"/><text x="74.7867%" y="623.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="74.9396%" y="597" width="0.1612%" height="15" fill="rgb(225,45,17)" fg:x="930" fg:w="2"/><text x="75.1896%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.9396%" y="581" width="0.1612%" height="15" fill="rgb(232,199,2)" fg:x="930" fg:w="2"/><text x="75.1896%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.9396%" y="565" width="0.1612%" height="15" fill="rgb(235,33,40)" fg:x="930" fg:w="2"/><text x="75.1896%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.9396%" y="549" width="0.1612%" height="15" fill="rgb(237,89,50)" fg:x="930" fg:w="2"/><text x="75.1896%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.9396%" y="533" width="0.1612%" height="15" fill="rgb(238,126,5)" fg:x="930" fg:w="2"/><text x="75.1896%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="74.9396%" y="517" width="0.1612%" height="15" fill="rgb(247,214,42)" fg:x="930" fg:w="2"/><text x="75.1896%" y="527.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="75.1007%" y="661" width="0.1612%" height="15" fill="rgb(238,60,45)" fg:x="932" fg:w="2"/><text x="75.3507%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="75.1007%" y="645" width="0.1612%" height="15" fill="rgb(225,69,44)" fg:x="932" fg:w="2"/><text x="75.3507%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="75.1007%" y="629" width="0.1612%" height="15" fill="rgb(241,13,44)" fg:x="932" fg:w="2"/><text x="75.3507%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (2 samples, 0.16%)</title><rect x="75.1007%" y="613" width="0.1612%" height="15" fill="rgb(227,121,22)" fg:x="932" fg:w="2"/><text x="75.3507%" y="623.50"></text></g><g><title>__rdl_alloc (2 samples, 0.16%)</title><rect x="75.1007%" y="597" width="0.1612%" height="15" fill="rgb(231,160,23)" fg:x="932" fg:w="2"/><text x="75.3507%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.16%)</title><rect x="75.1007%" y="581" width="0.1612%" height="15" fill="rgb(250,179,43)" fg:x="932" fg:w="2"/><text x="75.3507%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="75.2619%" y="629" width="0.0806%" height="15" fill="rgb(233,54,46)" fg:x="934" fg:w="1"/><text x="75.5119%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="75.2619%" y="613" width="0.0806%" height="15" fill="rgb(247,120,42)" fg:x="934" fg:w="1"/><text x="75.5119%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.2619%" y="597" width="0.0806%" height="15" fill="rgb(221,219,12)" fg:x="934" fg:w="1"/><text x="75.5119%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.2619%" y="581" width="0.0806%" height="15" fill="rgb(211,126,8)" fg:x="934" fg:w="1"/><text x="75.5119%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.2619%" y="565" width="0.0806%" height="15" fill="rgb(218,154,33)" fg:x="934" fg:w="1"/><text x="75.5119%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.2619%" y="549" width="0.0806%" height="15" fill="rgb(212,199,16)" fg:x="934" fg:w="1"/><text x="75.5119%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="75.2619%" y="533" width="0.0806%" height="15" fill="rgb(236,215,46)" fg:x="934" fg:w="1"/><text x="75.5119%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="75.2619%" y="517" width="0.0806%" height="15" fill="rgb(232,32,22)" fg:x="934" fg:w="1"/><text x="75.5119%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="75.2619%" y="501" width="0.0806%" height="15" fill="rgb(234,79,15)" fg:x="934" fg:w="1"/><text x="75.5119%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="75.2619%" y="485" width="0.0806%" height="15" fill="rgb(235,187,47)" fg:x="934" fg:w="1"/><text x="75.5119%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.2619%" y="469" width="0.0806%" height="15" fill="rgb(244,69,37)" fg:x="934" fg:w="1"/><text x="75.5119%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="75.2619%" y="453" width="0.0806%" height="15" fill="rgb(249,140,25)" fg:x="934" fg:w="1"/><text x="75.5119%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.2619%" y="437" width="0.0806%" height="15" fill="rgb(213,69,8)" fg:x="934" fg:w="1"/><text x="75.5119%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="75.2619%" y="421" width="0.0806%" height="15" fill="rgb(220,136,2)" fg:x="934" fg:w="1"/><text x="75.5119%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.2619%" y="405" width="0.0806%" height="15" fill="rgb(237,50,36)" fg:x="934" fg:w="1"/><text x="75.5119%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="75.2619%" y="389" width="0.0806%" height="15" fill="rgb(226,18,11)" fg:x="934" fg:w="1"/><text x="75.5119%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="75.2619%" y="373" width="0.0806%" height="15" fill="rgb(243,156,2)" fg:x="934" fg:w="1"/><text x="75.5119%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="75.2619%" y="357" width="0.0806%" height="15" fill="rgb(218,8,34)" fg:x="934" fg:w="1"/><text x="75.5119%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.2619%" y="341" width="0.0806%" height="15" fill="rgb(250,94,35)" fg:x="934" fg:w="1"/><text x="75.5119%" y="351.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="75.3425%" y="613" width="0.1612%" height="15" fill="rgb(229,127,21)" fg:x="935" fg:w="2"/><text x="75.5925%" y="623.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="75.3425%" y="597" width="0.1612%" height="15" fill="rgb(234,49,5)" fg:x="935" fg:w="2"/><text x="75.5925%" y="607.50"></text></g><g><title>libloading::os::unix::Library::open (8 samples, 0.64%)</title><rect x="75.3425%" y="629" width="0.6446%" height="15" fill="rgb(248,12,16)" fg:x="935" fg:w="8"/><text x="75.5925%" y="639.50"></text></g><g><title>dlopen (6 samples, 0.48%)</title><rect x="75.5036%" y="613" width="0.4835%" height="15" fill="rgb(208,220,31)" fg:x="937" fg:w="6"/><text x="75.7536%" y="623.50"></text></g><g><title>_dl_catch_error (6 samples, 0.48%)</title><rect x="75.5036%" y="597" width="0.4835%" height="15" fill="rgb(243,184,0)" fg:x="937" fg:w="6"/><text x="75.7536%" y="607.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="75.5036%" y="581" width="0.4835%" height="15" fill="rgb(217,38,21)" fg:x="937" fg:w="6"/><text x="75.7536%" y="591.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="75.5036%" y="565" width="0.4835%" height="15" fill="rgb(239,120,45)" fg:x="937" fg:w="6"/><text x="75.7536%" y="575.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="75.5036%" y="549" width="0.4835%" height="15" fill="rgb(235,33,2)" fg:x="937" fg:w="6"/><text x="75.7536%" y="559.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="75.9065%" y="533" width="0.0806%" height="15" fill="rgb(249,161,5)" fg:x="942" fg:w="1"/><text x="76.1565%" y="543.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="75.9065%" y="517" width="0.0806%" height="15" fill="rgb(250,165,48)" fg:x="942" fg:w="1"/><text x="76.1565%" y="527.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (25 samples, 2.01%)</title><rect x="74.0532%" y="693" width="2.0145%" height="15" fill="rgb(221,23,45)" fg:x="919" fg:w="25"/><text x="74.3032%" y="703.50">&lt;..</text></g><g><title>engine::session::Session::new (25 samples, 2.01%)</title><rect x="74.0532%" y="677" width="2.0145%" height="15" fill="rgb(217,108,46)" fg:x="919" fg:w="25"/><text x="74.3032%" y="687.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (10 samples, 0.81%)</title><rect x="75.2619%" y="661" width="0.8058%" height="15" fill="rgb(254,26,35)" fg:x="934" fg:w="10"/><text x="75.5119%" y="671.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (10 samples, 0.81%)</title><rect x="75.2619%" y="645" width="0.8058%" height="15" fill="rgb(218,223,28)" fg:x="934" fg:w="10"/><text x="75.5119%" y="655.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="75.9871%" y="629" width="0.0806%" height="15" fill="rgb(242,27,47)" fg:x="943" fg:w="1"/><text x="76.2371%" y="639.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="75.9871%" y="613" width="0.0806%" height="15" fill="rgb(218,39,35)" fg:x="943" fg:w="1"/><text x="76.2371%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.1483%" y="629" width="0.0806%" height="15" fill="rgb(232,127,16)" fg:x="945" fg:w="1"/><text x="76.3983%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.1483%" y="613" width="0.0806%" height="15" fill="rgb(231,219,51)" fg:x="945" fg:w="1"/><text x="76.3983%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.1483%" y="597" width="0.0806%" height="15" fill="rgb(217,220,46)" fg:x="945" fg:w="1"/><text x="76.3983%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.1483%" y="581" width="0.0806%" height="15" fill="rgb(230,75,1)" fg:x="945" fg:w="1"/><text x="76.3983%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.1483%" y="565" width="0.0806%" height="15" fill="rgb(218,2,8)" fg:x="945" fg:w="1"/><text x="76.3983%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.1483%" y="549" width="0.0806%" height="15" fill="rgb(206,111,30)" fg:x="945" fg:w="1"/><text x="76.3983%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.1483%" y="533" width="0.0806%" height="15" fill="rgb(209,135,6)" fg:x="945" fg:w="1"/><text x="76.3983%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.1483%" y="517" width="0.0806%" height="15" fill="rgb(205,169,10)" fg:x="945" fg:w="1"/><text x="76.3983%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.1483%" y="501" width="0.0806%" height="15" fill="rgb(212,204,38)" fg:x="945" fg:w="1"/><text x="76.3983%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.1483%" y="485" width="0.0806%" height="15" fill="rgb(205,199,14)" fg:x="945" fg:w="1"/><text x="76.3983%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.1483%" y="469" width="0.0806%" height="15" fill="rgb(212,4,6)" fg:x="945" fg:w="1"/><text x="76.3983%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="76.1483%" y="453" width="0.0806%" height="15" fill="rgb(250,15,10)" fg:x="945" fg:w="1"/><text x="76.3983%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="76.1483%" y="437" width="0.0806%" height="15" fill="rgb(212,49,51)" fg:x="945" fg:w="1"/><text x="76.3983%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="76.0677%" y="645" width="0.3223%" height="15" fill="rgb(235,21,9)" fg:x="944" fg:w="4"/><text x="76.3177%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.2288%" y="629" width="0.1612%" height="15" fill="rgb(251,31,32)" fg:x="946" fg:w="2"/><text x="76.4788%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="76.3900%" y="645" width="0.0806%" height="15" fill="rgb(246,23,9)" fg:x="948" fg:w="1"/><text x="76.6400%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="76.3900%" y="629" width="0.0806%" height="15" fill="rgb(225,216,14)" fg:x="948" fg:w="1"/><text x="76.6400%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="76.3900%" y="613" width="0.0806%" height="15" fill="rgb(215,200,26)" fg:x="948" fg:w="1"/><text x="76.6400%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3900%" y="597" width="0.0806%" height="15" fill="rgb(237,130,47)" fg:x="948" fg:w="1"/><text x="76.6400%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3900%" y="581" width="0.0806%" height="15" fill="rgb(247,74,14)" fg:x="948" fg:w="1"/><text x="76.6400%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.3900%" y="565" width="0.0806%" height="15" fill="rgb(254,97,46)" fg:x="948" fg:w="1"/><text x="76.6400%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.3900%" y="549" width="0.0806%" height="15" fill="rgb(234,191,1)" fg:x="948" fg:w="1"/><text x="76.6400%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.3900%" y="533" width="0.0806%" height="15" fill="rgb(215,165,14)" fg:x="948" fg:w="1"/><text x="76.6400%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.3900%" y="517" width="0.0806%" height="15" fill="rgb(230,182,6)" fg:x="948" fg:w="1"/><text x="76.6400%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.3900%" y="501" width="0.0806%" height="15" fill="rgb(210,127,39)" fg:x="948" fg:w="1"/><text x="76.6400%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.3900%" y="485" width="0.0806%" height="15" fill="rgb(223,212,51)" fg:x="948" fg:w="1"/><text x="76.6400%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.3900%" y="469" width="0.0806%" height="15" fill="rgb(226,176,43)" fg:x="948" fg:w="1"/><text x="76.6400%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.3900%" y="453" width="0.0806%" height="15" fill="rgb(222,155,4)" fg:x="948" fg:w="1"/><text x="76.6400%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.3900%" y="437" width="0.0806%" height="15" fill="rgb(215,149,7)" fg:x="948" fg:w="1"/><text x="76.6400%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4706%" y="613" width="0.0806%" height="15" fill="rgb(252,199,23)" fg:x="949" fg:w="1"/><text x="76.7206%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4706%" y="597" width="0.0806%" height="15" fill="rgb(245,52,29)" fg:x="949" fg:w="1"/><text x="76.7206%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.4706%" y="581" width="0.0806%" height="15" fill="rgb(221,228,19)" fg:x="949" fg:w="1"/><text x="76.7206%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.4706%" y="565" width="0.0806%" height="15" fill="rgb(253,101,6)" fg:x="949" fg:w="1"/><text x="76.7206%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.4706%" y="549" width="0.0806%" height="15" fill="rgb(211,130,8)" fg:x="949" fg:w="1"/><text x="76.7206%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="76.4706%" y="533" width="0.0806%" height="15" fill="rgb(238,37,53)" fg:x="949" fg:w="1"/><text x="76.7206%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.4706%" y="517" width="0.0806%" height="15" fill="rgb(235,145,5)" fg:x="949" fg:w="1"/><text x="76.7206%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.5512%" y="581" width="0.0806%" height="15" fill="rgb(244,12,43)" fg:x="950" fg:w="1"/><text x="76.8012%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.5512%" y="565" width="0.0806%" height="15" fill="rgb(246,195,24)" fg:x="950" fg:w="1"/><text x="76.8012%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.5512%" y="549" width="0.0806%" height="15" fill="rgb(235,163,6)" fg:x="950" fg:w="1"/><text x="76.8012%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.5512%" y="533" width="0.0806%" height="15" fill="rgb(236,218,17)" fg:x="950" fg:w="1"/><text x="76.8012%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.5512%" y="517" width="0.0806%" height="15" fill="rgb(235,12,38)" fg:x="950" fg:w="1"/><text x="76.8012%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.5512%" y="501" width="0.0806%" height="15" fill="rgb(225,195,33)" fg:x="950" fg:w="1"/><text x="76.8012%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.5512%" y="485" width="0.0806%" height="15" fill="rgb(238,54,35)" fg:x="950" fg:w="1"/><text x="76.8012%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="76.5512%" y="597" width="0.1612%" height="15" fill="rgb(238,33,7)" fg:x="950" fg:w="2"/><text x="76.8012%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.6317%" y="581" width="0.0806%" height="15" fill="rgb(245,5,14)" fg:x="951" fg:w="1"/><text x="76.8817%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.6317%" y="565" width="0.0806%" height="15" fill="rgb(251,95,31)" fg:x="951" fg:w="1"/><text x="76.8817%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.7123%" y="581" width="0.0806%" height="15" fill="rgb(222,15,46)" fg:x="952" fg:w="1"/><text x="76.9623%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.7123%" y="565" width="0.0806%" height="15" fill="rgb(226,182,24)" fg:x="952" fg:w="1"/><text x="76.9623%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.7123%" y="549" width="0.0806%" height="15" fill="rgb(229,105,41)" fg:x="952" fg:w="1"/><text x="76.9623%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="76.7929%" y="581" width="0.2417%" height="15" fill="rgb(216,99,53)" fg:x="953" fg:w="3"/><text x="77.0429%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.8735%" y="565" width="0.1612%" height="15" fill="rgb(253,26,20)" fg:x="954" fg:w="2"/><text x="77.1235%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.9541%" y="549" width="0.0806%" height="15" fill="rgb(249,155,28)" fg:x="955" fg:w="1"/><text x="77.2041%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.9541%" y="533" width="0.0806%" height="15" fill="rgb(241,221,2)" fg:x="955" fg:w="1"/><text x="77.2041%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.9541%" y="517" width="0.0806%" height="15" fill="rgb(219,124,6)" fg:x="955" fg:w="1"/><text x="77.2041%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.9541%" y="501" width="0.0806%" height="15" fill="rgb(233,37,6)" fg:x="955" fg:w="1"/><text x="77.2041%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.9541%" y="485" width="0.0806%" height="15" fill="rgb(238,20,14)" fg:x="955" fg:w="1"/><text x="77.2041%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.0346%" y="565" width="0.1612%" height="15" fill="rgb(232,106,27)" fg:x="956" fg:w="2"/><text x="77.2846%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.0346%" y="549" width="0.1612%" height="15" fill="rgb(246,157,24)" fg:x="956" fg:w="2"/><text x="77.2846%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.1152%" y="533" width="0.0806%" height="15" fill="rgb(214,153,10)" fg:x="957" fg:w="1"/><text x="77.3652%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.1152%" y="517" width="0.0806%" height="15" fill="rgb(212,94,6)" fg:x="957" fg:w="1"/><text x="77.3652%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.3570%" y="533" width="0.0806%" height="15" fill="rgb(254,25,27)" fg:x="960" fg:w="1"/><text x="77.6070%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="77.5181%" y="517" width="0.0806%" height="15" fill="rgb(250,43,52)" fg:x="962" fg:w="1"/><text x="77.7681%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.5987%" y="517" width="0.0806%" height="15" fill="rgb(221,226,40)" fg:x="963" fg:w="1"/><text x="77.8487%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.5987%" y="501" width="0.0806%" height="15" fill="rgb(235,162,34)" fg:x="963" fg:w="1"/><text x="77.8487%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.5987%" y="485" width="0.0806%" height="15" fill="rgb(239,24,26)" fg:x="963" fg:w="1"/><text x="77.8487%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5987%" y="469" width="0.0806%" height="15" fill="rgb(244,226,11)" fg:x="963" fg:w="1"/><text x="77.8487%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="77.4376%" y="533" width="0.5641%" height="15" fill="rgb(225,23,10)" fg:x="961" fg:w="7"/><text x="77.6876%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="77.6793%" y="517" width="0.3223%" height="15" fill="rgb(249,125,6)" fg:x="964" fg:w="4"/><text x="77.9293%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="77.7599%" y="501" width="0.2417%" height="15" fill="rgb(246,212,12)" fg:x="965" fg:w="3"/><text x="78.0099%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="77.7599%" y="485" width="0.2417%" height="15" fill="rgb(230,43,32)" fg:x="965" fg:w="3"/><text x="78.0099%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="77.7599%" y="469" width="0.2417%" height="15" fill="rgb(210,95,23)" fg:x="965" fg:w="3"/><text x="78.0099%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="77.9210%" y="453" width="0.0806%" height="15" fill="rgb(229,103,33)" fg:x="967" fg:w="1"/><text x="78.1710%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="77.1958%" y="565" width="0.8864%" height="15" fill="rgb(222,104,27)" fg:x="958" fg:w="11"/><text x="77.4458%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="77.1958%" y="549" width="0.8864%" height="15" fill="rgb(239,221,23)" fg:x="958" fg:w="11"/><text x="77.4458%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.0016%" y="533" width="0.0806%" height="15" fill="rgb(222,98,21)" fg:x="968" fg:w="1"/><text x="78.2516%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="77.0346%" y="581" width="1.2893%" height="15" fill="rgb(231,101,20)" fg:x="956" fg:w="16"/><text x="77.2846%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="78.0822%" y="565" width="0.2417%" height="15" fill="rgb(215,150,22)" fg:x="969" fg:w="3"/><text x="78.3322%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.1628%" y="549" width="0.1612%" height="15" fill="rgb(248,3,34)" fg:x="970" fg:w="2"/><text x="78.4128%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="78.1628%" y="533" width="0.1612%" height="15" fill="rgb(220,141,21)" fg:x="970" fg:w="2"/><text x="78.4128%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.85%)</title><rect x="76.5512%" y="613" width="1.8533%" height="15" fill="rgb(223,41,48)" fg:x="950" fg:w="23"/><text x="76.8012%" y="623.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.69%)</title><rect x="76.7123%" y="597" width="1.6922%" height="15" fill="rgb(247,12,5)" fg:x="952" fg:w="21"/><text x="76.9623%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.3239%" y="581" width="0.0806%" height="15" fill="rgb(206,173,10)" fg:x="972" fg:w="1"/><text x="78.5739%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.3239%" y="565" width="0.0806%" height="15" fill="rgb(233,214,37)" fg:x="972" fg:w="1"/><text x="78.5739%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.3239%" y="549" width="0.0806%" height="15" fill="rgb(238,86,43)" fg:x="972" fg:w="1"/><text x="78.5739%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.3239%" y="533" width="0.0806%" height="15" fill="rgb(212,182,8)" fg:x="972" fg:w="1"/><text x="78.5739%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.3239%" y="517" width="0.0806%" height="15" fill="rgb(240,91,47)" fg:x="972" fg:w="1"/><text x="78.5739%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.3239%" y="501" width="0.0806%" height="15" fill="rgb(209,138,26)" fg:x="972" fg:w="1"/><text x="78.5739%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4045%" y="581" width="0.0806%" height="15" fill="rgb(231,163,20)" fg:x="973" fg:w="1"/><text x="78.6545%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.4851%" y="565" width="0.0806%" height="15" fill="rgb(214,91,54)" fg:x="974" fg:w="1"/><text x="78.7351%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7268%" y="533" width="0.0806%" height="15" fill="rgb(230,32,17)" fg:x="977" fg:w="1"/><text x="78.9768%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8074%" y="501" width="0.0806%" height="15" fill="rgb(231,34,34)" fg:x="978" fg:w="1"/><text x="79.0574%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="78.8880%" y="501" width="0.1612%" height="15" fill="rgb(224,228,27)" fg:x="979" fg:w="2"/><text x="79.1380%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.9686%" y="485" width="0.0806%" height="15" fill="rgb(219,35,40)" fg:x="980" fg:w="1"/><text x="79.2186%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="78.4045%" y="613" width="0.7252%" height="15" fill="rgb(234,42,8)" fg:x="973" fg:w="9"/><text x="78.6545%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="78.4045%" y="597" width="0.7252%" height="15" fill="rgb(226,75,22)" fg:x="973" fg:w="9"/><text x="78.6545%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="78.4851%" y="581" width="0.6446%" height="15" fill="rgb(242,203,28)" fg:x="974" fg:w="8"/><text x="78.7351%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="78.5657%" y="565" width="0.5641%" height="15" fill="rgb(221,3,9)" fg:x="975" fg:w="7"/><text x="78.8157%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="78.6463%" y="549" width="0.4835%" height="15" fill="rgb(214,34,31)" fg:x="976" fg:w="6"/><text x="78.8963%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="78.8074%" y="533" width="0.3223%" height="15" fill="rgb(252,119,15)" fg:x="978" fg:w="4"/><text x="79.0574%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="78.8074%" y="517" width="0.3223%" height="15" fill="rgb(244,224,31)" fg:x="978" fg:w="4"/><text x="79.0574%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.0492%" y="501" width="0.0806%" height="15" fill="rgb(215,8,51)" fg:x="981" fg:w="1"/><text x="79.2992%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0492%" y="485" width="0.0806%" height="15" fill="rgb(207,24,1)" fg:x="981" fg:w="1"/><text x="79.2992%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.2909%" y="517" width="0.0806%" height="15" fill="rgb(245,90,0)" fg:x="984" fg:w="1"/><text x="79.5409%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.2909%" y="501" width="0.0806%" height="15" fill="rgb(246,43,48)" fg:x="984" fg:w="1"/><text x="79.5409%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.2909%" y="485" width="0.0806%" height="15" fill="rgb(252,218,10)" fg:x="984" fg:w="1"/><text x="79.5409%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.3715%" y="517" width="0.0806%" height="15" fill="rgb(231,24,35)" fg:x="985" fg:w="1"/><text x="79.6215%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3715%" y="501" width="0.0806%" height="15" fill="rgb(225,66,19)" fg:x="985" fg:w="1"/><text x="79.6215%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3715%" y="485" width="0.0806%" height="15" fill="rgb(214,96,51)" fg:x="985" fg:w="1"/><text x="79.6215%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.5326%" y="485" width="0.0806%" height="15" fill="rgb(251,151,47)" fg:x="987" fg:w="1"/><text x="79.7826%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.5326%" y="469" width="0.0806%" height="15" fill="rgb(236,79,14)" fg:x="987" fg:w="1"/><text x="79.7826%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.5326%" y="453" width="0.0806%" height="15" fill="rgb(210,205,11)" fg:x="987" fg:w="1"/><text x="79.7826%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="79.1297%" y="549" width="0.5641%" height="15" fill="rgb(233,142,53)" fg:x="982" fg:w="7"/><text x="79.3797%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="79.1297%" y="533" width="0.5641%" height="15" fill="rgb(212,116,48)" fg:x="982" fg:w="7"/><text x="79.3797%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="79.4521%" y="517" width="0.2417%" height="15" fill="rgb(234,55,33)" fg:x="986" fg:w="3"/><text x="79.7021%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="79.5326%" y="501" width="0.1612%" height="15" fill="rgb(253,92,27)" fg:x="987" fg:w="2"/><text x="79.7826%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6132%" y="485" width="0.0806%" height="15" fill="rgb(220,7,35)" fg:x="988" fg:w="1"/><text x="79.8632%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.6132%" y="469" width="0.0806%" height="15" fill="rgb(246,124,6)" fg:x="988" fg:w="1"/><text x="79.8632%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6132%" y="453" width="0.0806%" height="15" fill="rgb(212,111,51)" fg:x="988" fg:w="1"/><text x="79.8632%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.6132%" y="437" width="0.0806%" height="15" fill="rgb(253,116,7)" fg:x="988" fg:w="1"/><text x="79.8632%" y="447.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="79.6132%" y="421" width="0.0806%" height="15" fill="rgb(213,145,18)" fg:x="988" fg:w="1"/><text x="79.8632%" y="431.50"></text></g><g><title>engine::session::Session::flush (46 samples, 3.71%)</title><rect x="76.0677%" y="677" width="3.7067%" height="15" fill="rgb(219,149,7)" fg:x="944" fg:w="46"/><text x="76.3177%" y="687.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (46 samples, 3.71%)</title><rect x="76.0677%" y="661" width="3.7067%" height="15" fill="rgb(225,156,20)" fg:x="944" fg:w="46"/><text x="76.3177%" y="671.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (41 samples, 3.30%)</title><rect x="76.4706%" y="645" width="3.3038%" height="15" fill="rgb(211,98,19)" fg:x="949" fg:w="41"/><text x="76.7206%" y="655.50">eng..</text></g><g><title>engine::session::SavesEntities::check_for_changes (41 samples, 3.30%)</title><rect x="76.4706%" y="629" width="3.3038%" height="15" fill="rgb(231,192,31)" fg:x="949" fg:w="41"/><text x="76.7206%" y="639.50">eng..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="79.1297%" y="613" width="0.6446%" height="15" fill="rgb(249,95,19)" fg:x="982" fg:w="8"/><text x="79.3797%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="79.1297%" y="597" width="0.6446%" height="15" fill="rgb(247,101,36)" fg:x="982" fg:w="8"/><text x="79.3797%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="79.1297%" y="581" width="0.6446%" height="15" fill="rgb(221,45,43)" fg:x="982" fg:w="8"/><text x="79.3797%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="79.1297%" y="565" width="0.6446%" height="15" fill="rgb(220,42,1)" fg:x="982" fg:w="8"/><text x="79.3797%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6938%" y="549" width="0.0806%" height="15" fill="rgb(236,19,24)" fg:x="989" fg:w="1"/><text x="79.9438%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6938%" y="533" width="0.0806%" height="15" fill="rgb(225,192,6)" fg:x="989" fg:w="1"/><text x="79.9438%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.7744%" y="597" width="0.0806%" height="15" fill="rgb(242,30,19)" fg:x="990" fg:w="1"/><text x="80.0244%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.7744%" y="581" width="0.0806%" height="15" fill="rgb(240,36,6)" fg:x="990" fg:w="1"/><text x="80.0244%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7744%" y="565" width="0.0806%" height="15" fill="rgb(246,40,28)" fg:x="990" fg:w="1"/><text x="80.0244%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7744%" y="549" width="0.0806%" height="15" fill="rgb(225,155,33)" fg:x="990" fg:w="1"/><text x="80.0244%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7744%" y="533" width="0.0806%" height="15" fill="rgb(240,65,18)" fg:x="990" fg:w="1"/><text x="80.0244%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7744%" y="517" width="0.0806%" height="15" fill="rgb(217,0,48)" fg:x="990" fg:w="1"/><text x="80.0244%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7744%" y="501" width="0.0806%" height="15" fill="rgb(217,80,15)" fg:x="990" fg:w="1"/><text x="80.0244%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.7744%" y="485" width="0.0806%" height="15" fill="rgb(253,43,51)" fg:x="990" fg:w="1"/><text x="80.0244%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8550%" y="565" width="0.0806%" height="15" fill="rgb(246,60,4)" fg:x="991" fg:w="1"/><text x="80.1050%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.8550%" y="549" width="0.0806%" height="15" fill="rgb(230,40,54)" fg:x="991" fg:w="1"/><text x="80.1050%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="79.8550%" y="533" width="0.0806%" height="15" fill="rgb(208,20,44)" fg:x="991" fg:w="1"/><text x="80.1050%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.8550%" y="517" width="0.0806%" height="15" fill="rgb(230,22,22)" fg:x="991" fg:w="1"/><text x="80.1050%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.8550%" y="501" width="0.0806%" height="15" fill="rgb(207,57,4)" fg:x="991" fg:w="1"/><text x="80.1050%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="79.8550%" y="485" width="0.0806%" height="15" fill="rgb(242,130,33)" fg:x="991" fg:w="1"/><text x="80.1050%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="79.7744%" y="661" width="0.2417%" height="15" fill="rgb(218,66,43)" fg:x="990" fg:w="3"/><text x="80.0244%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="79.7744%" y="645" width="0.2417%" height="15" fill="rgb(236,105,16)" fg:x="990" fg:w="3"/><text x="80.0244%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="79.7744%" y="629" width="0.2417%" height="15" fill="rgb(230,46,15)" fg:x="990" fg:w="3"/><text x="80.0244%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="79.7744%" y="613" width="0.2417%" height="15" fill="rgb(251,172,40)" fg:x="990" fg:w="3"/><text x="80.0244%" y="623.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="79.8550%" y="597" width="0.1612%" height="15" fill="rgb(225,217,32)" fg:x="991" fg:w="2"/><text x="80.1050%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="79.8550%" y="581" width="0.1612%" height="15" fill="rgb(243,10,29)" fg:x="991" fg:w="2"/><text x="80.1050%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.9355%" y="565" width="0.0806%" height="15" fill="rgb(207,102,10)" fg:x="992" fg:w="1"/><text x="80.1855%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.9355%" y="549" width="0.0806%" height="15" fill="rgb(241,125,5)" fg:x="992" fg:w="1"/><text x="80.1855%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.9355%" y="533" width="0.0806%" height="15" fill="rgb(230,125,29)" fg:x="992" fg:w="1"/><text x="80.1855%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.9355%" y="517" width="0.0806%" height="15" fill="rgb(223,65,44)" fg:x="992" fg:w="1"/><text x="80.1855%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.9355%" y="501" width="0.0806%" height="15" fill="rgb(224,188,28)" fg:x="992" fg:w="1"/><text x="80.1855%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9355%" y="485" width="0.0806%" height="15" fill="rgb(254,197,27)" fg:x="992" fg:w="1"/><text x="80.1855%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0161%" y="565" width="0.0806%" height="15" fill="rgb(220,200,25)" fg:x="993" fg:w="1"/><text x="80.2661%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0161%" y="549" width="0.0806%" height="15" fill="rgb(239,225,54)" fg:x="993" fg:w="1"/><text x="80.2661%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0161%" y="533" width="0.0806%" height="15" fill="rgb(211,59,40)" fg:x="993" fg:w="1"/><text x="80.2661%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0161%" y="517" width="0.0806%" height="15" fill="rgb(213,176,46)" fg:x="993" fg:w="1"/><text x="80.2661%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0161%" y="501" width="0.0806%" height="15" fill="rgb(226,99,4)" fg:x="993" fg:w="1"/><text x="80.2661%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0161%" y="485" width="0.0806%" height="15" fill="rgb(239,203,43)" fg:x="993" fg:w="1"/><text x="80.2661%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0161%" y="469" width="0.0806%" height="15" fill="rgb(246,1,45)" fg:x="993" fg:w="1"/><text x="80.2661%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.0161%" y="453" width="0.0806%" height="15" fill="rgb(231,42,52)" fg:x="993" fg:w="1"/><text x="80.2661%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.0161%" y="437" width="0.0806%" height="15" fill="rgb(240,13,50)" fg:x="993" fg:w="1"/><text x="80.2661%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.0161%" y="421" width="0.0806%" height="15" fill="rgb(225,81,14)" fg:x="993" fg:w="1"/><text x="80.2661%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0161%" y="405" width="0.0806%" height="15" fill="rgb(216,182,23)" fg:x="993" fg:w="1"/><text x="80.2661%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0161%" y="389" width="0.0806%" height="15" fill="rgb(233,137,19)" fg:x="993" fg:w="1"/><text x="80.2661%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.0161%" y="373" width="0.0806%" height="15" fill="rgb(242,61,46)" fg:x="993" fg:w="1"/><text x="80.2661%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.0161%" y="357" width="0.0806%" height="15" fill="rgb(221,168,51)" fg:x="993" fg:w="1"/><text x="80.2661%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.0161%" y="341" width="0.0806%" height="15" fill="rgb(238,48,15)" fg:x="993" fg:w="1"/><text x="80.2661%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.0161%" y="325" width="0.0806%" height="15" fill="rgb(216,13,16)" fg:x="993" fg:w="1"/><text x="80.2661%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.0161%" y="309" width="0.0806%" height="15" fill="rgb(223,185,34)" fg:x="993" fg:w="1"/><text x="80.2661%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.0161%" y="613" width="0.1612%" height="15" fill="rgb(228,94,42)" fg:x="993" fg:w="2"/><text x="80.2661%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.0161%" y="597" width="0.1612%" height="15" fill="rgb(218,166,43)" fg:x="993" fg:w="2"/><text x="80.2661%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.0161%" y="581" width="0.1612%" height="15" fill="rgb(232,30,50)" fg:x="993" fg:w="2"/><text x="80.2661%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.0967%" y="565" width="0.0806%" height="15" fill="rgb(245,206,45)" fg:x="994" fg:w="1"/><text x="80.3467%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0967%" y="549" width="0.0806%" height="15" fill="rgb(220,56,22)" fg:x="994" fg:w="1"/><text x="80.3467%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.0967%" y="533" width="0.0806%" height="15" fill="rgb(239,129,38)" fg:x="994" fg:w="1"/><text x="80.3467%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.64%)</title><rect x="79.7744%" y="677" width="0.6446%" height="15" fill="rgb(207,68,41)" fg:x="990" fg:w="8"/><text x="80.0244%" y="687.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="80.0161%" y="661" width="0.4029%" height="15" fill="rgb(221,21,7)" fg:x="993" fg:w="5"/><text x="80.2661%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="80.0161%" y="645" width="0.4029%" height="15" fill="rgb(240,33,25)" fg:x="993" fg:w="5"/><text x="80.2661%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="80.0161%" y="629" width="0.4029%" height="15" fill="rgb(242,119,10)" fg:x="993" fg:w="5"/><text x="80.2661%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="80.1773%" y="613" width="0.2417%" height="15" fill="rgb(214,149,40)" fg:x="995" fg:w="3"/><text x="80.4273%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="80.1773%" y="597" width="0.2417%" height="15" fill="rgb(228,25,36)" fg:x="995" fg:w="3"/><text x="80.4273%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="80.1773%" y="581" width="0.2417%" height="15" fill="rgb(222,59,15)" fg:x="995" fg:w="3"/><text x="80.4273%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="80.1773%" y="565" width="0.2417%" height="15" fill="rgb(218,170,0)" fg:x="995" fg:w="3"/><text x="80.4273%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="80.1773%" y="549" width="0.2417%" height="15" fill="rgb(232,173,23)" fg:x="995" fg:w="3"/><text x="80.4273%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.2579%" y="533" width="0.1612%" height="15" fill="rgb(218,116,1)" fg:x="996" fg:w="2"/><text x="80.5079%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.2579%" y="517" width="0.1612%" height="15" fill="rgb(207,34,4)" fg:x="996" fg:w="2"/><text x="80.5079%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="80.2579%" y="501" width="0.1612%" height="15" fill="rgb(229,54,52)" fg:x="996" fg:w="2"/><text x="80.5079%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.2579%" y="485" width="0.1612%" height="15" fill="rgb(211,86,23)" fg:x="996" fg:w="2"/><text x="80.5079%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.2579%" y="469" width="0.1612%" height="15" fill="rgb(254,153,34)" fg:x="996" fg:w="2"/><text x="80.5079%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.2579%" y="453" width="0.1612%" height="15" fill="rgb(219,220,14)" fg:x="996" fg:w="2"/><text x="80.5079%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.3384%" y="437" width="0.0806%" height="15" fill="rgb(247,8,26)" fg:x="997" fg:w="1"/><text x="80.5884%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.3384%" y="421" width="0.0806%" height="15" fill="rgb(213,129,42)" fg:x="997" fg:w="1"/><text x="80.5884%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3384%" y="405" width="0.0806%" height="15" fill="rgb(225,95,41)" fg:x="997" fg:w="1"/><text x="80.5884%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.4190%" y="565" width="0.0806%" height="15" fill="rgb(215,134,24)" fg:x="998" fg:w="1"/><text x="80.6690%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.4190%" y="549" width="0.0806%" height="15" fill="rgb(235,23,54)" fg:x="998" fg:w="1"/><text x="80.6690%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.4190%" y="533" width="0.0806%" height="15" fill="rgb(229,96,31)" fg:x="998" fg:w="1"/><text x="80.6690%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.4190%" y="517" width="0.0806%" height="15" fill="rgb(206,111,12)" fg:x="998" fg:w="1"/><text x="80.6690%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.4190%" y="501" width="0.0806%" height="15" fill="rgb(222,177,8)" fg:x="998" fg:w="1"/><text x="80.6690%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4190%" y="485" width="0.0806%" height="15" fill="rgb(251,36,52)" fg:x="998" fg:w="1"/><text x="80.6690%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.4190%" y="613" width="0.1612%" height="15" fill="rgb(216,182,29)" fg:x="998" fg:w="2"/><text x="80.6690%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.4190%" y="597" width="0.1612%" height="15" fill="rgb(241,145,50)" fg:x="998" fg:w="2"/><text x="80.6690%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.4190%" y="581" width="0.1612%" height="15" fill="rgb(231,71,35)" fg:x="998" fg:w="2"/><text x="80.6690%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.4996%" y="565" width="0.0806%" height="15" fill="rgb(218,22,17)" fg:x="999" fg:w="1"/><text x="80.7496%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4996%" y="549" width="0.0806%" height="15" fill="rgb(225,227,6)" fg:x="999" fg:w="1"/><text x="80.7496%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.4996%" y="533" width="0.0806%" height="15" fill="rgb(224,204,17)" fg:x="999" fg:w="1"/><text x="80.7496%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4996%" y="517" width="0.0806%" height="15" fill="rgb(227,61,28)" fg:x="999" fg:w="1"/><text x="80.7496%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.4996%" y="501" width="0.0806%" height="15" fill="rgb(242,148,23)" fg:x="999" fg:w="1"/><text x="80.7496%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4996%" y="485" width="0.0806%" height="15" fill="rgb(237,105,33)" fg:x="999" fg:w="1"/><text x="80.7496%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.5802%" y="597" width="0.0806%" height="15" fill="rgb(238,218,40)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.5802%" y="581" width="0.0806%" height="15" fill="rgb(209,126,11)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5802%" y="565" width="0.0806%" height="15" fill="rgb(245,90,11)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5802%" y="549" width="0.0806%" height="15" fill="rgb(211,195,10)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5802%" y="533" width="0.0806%" height="15" fill="rgb(231,45,45)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5802%" y="517" width="0.0806%" height="15" fill="rgb(246,100,43)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5802%" y="501" width="0.0806%" height="15" fill="rgb(241,193,8)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5802%" y="485" width="0.0806%" height="15" fill="rgb(208,76,19)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="80.6608%" y="565" width="0.0806%" height="15" fill="rgb(223,69,40)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.6608%" y="549" width="0.0806%" height="15" fill="rgb(207,120,39)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="80.6608%" y="533" width="0.0806%" height="15" fill="rgb(212,209,28)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.6608%" y="517" width="0.0806%" height="15" fill="rgb(246,82,29)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="80.6608%" y="501" width="0.0806%" height="15" fill="rgb(239,6,40)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="80.6608%" y="485" width="0.0806%" height="15" fill="rgb(228,181,35)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.6608%" y="469" width="0.0806%" height="15" fill="rgb(238,151,2)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="80.6608%" y="453" width="0.0806%" height="15" fill="rgb(236,94,18)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.6608%" y="437" width="0.0806%" height="15" fill="rgb(208,38,14)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.6608%" y="421" width="0.0806%" height="15" fill="rgb(234,215,27)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.7413%" y="565" width="0.0806%" height="15" fill="rgb(254,211,53)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.7413%" y="549" width="0.0806%" height="15" fill="rgb(216,175,11)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.7413%" y="533" width="0.0806%" height="15" fill="rgb(246,179,26)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.7413%" y="517" width="0.0806%" height="15" fill="rgb(249,19,52)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.7413%" y="501" width="0.0806%" height="15" fill="rgb(230,42,52)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.7413%" y="485" width="0.0806%" height="15" fill="rgb(221,171,0)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="80.4190%" y="677" width="0.4835%" height="15" fill="rgb(222,177,40)" fg:x="998" fg:w="6"/><text x="80.6690%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="80.4190%" y="661" width="0.4835%" height="15" fill="rgb(247,34,16)" fg:x="998" fg:w="6"/><text x="80.6690%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="80.4190%" y="645" width="0.4835%" height="15" fill="rgb(213,217,37)" fg:x="998" fg:w="6"/><text x="80.6690%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="80.4190%" y="629" width="0.4835%" height="15" fill="rgb(231,189,24)" fg:x="998" fg:w="6"/><text x="80.6690%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="80.5802%" y="613" width="0.3223%" height="15" fill="rgb(214,22,9)" fg:x="1000" fg:w="4"/><text x="80.8302%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="80.6608%" y="597" width="0.2417%" height="15" fill="rgb(212,70,22)" fg:x="1001" fg:w="3"/><text x="80.9108%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="80.6608%" y="581" width="0.2417%" height="15" fill="rgb(249,64,51)" fg:x="1001" fg:w="3"/><text x="80.9108%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8219%" y="565" width="0.0806%" height="15" fill="rgb(249,148,20)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8219%" y="549" width="0.0806%" height="15" fill="rgb(246,46,48)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="80.9025%" y="677" width="0.0806%" height="15" fill="rgb(217,34,48)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="80.9025%" y="661" width="0.0806%" height="15" fill="rgb(222,45,26)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="80.9025%" y="645" width="0.0806%" height="15" fill="rgb(230,201,36)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="80.9025%" y="629" width="0.0806%" height="15" fill="rgb(217,30,43)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="639.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="80.9025%" y="613" width="0.0806%" height="15" fill="rgb(230,197,40)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9831%" y="517" width="0.0806%" height="15" fill="rgb(239,181,18)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9831%" y="501" width="0.0806%" height="15" fill="rgb(222,60,39)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.9831%" y="565" width="0.1612%" height="15" fill="rgb(210,60,22)" fg:x="1005" fg:w="2"/><text x="81.2331%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.9831%" y="549" width="0.1612%" height="15" fill="rgb(239,213,48)" fg:x="1005" fg:w="2"/><text x="81.2331%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.9831%" y="533" width="0.1612%" height="15" fill="rgb(253,214,23)" fg:x="1005" fg:w="2"/><text x="81.2331%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0637%" y="517" width="0.0806%" height="15" fill="rgb(211,98,45)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0637%" y="501" width="0.0806%" height="15" fill="rgb(239,130,44)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.0637%" y="485" width="0.0806%" height="15" fill="rgb(222,181,35)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.0637%" y="469" width="0.0806%" height="15" fill="rgb(219,219,49)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.0637%" y="453" width="0.0806%" height="15" fill="rgb(227,161,51)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="81.0637%" y="437" width="0.0806%" height="15" fill="rgb(239,112,27)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.0637%" y="421" width="0.0806%" height="15" fill="rgb(248,122,18)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="80.9831%" y="661" width="0.2417%" height="15" fill="rgb(245,130,23)" fg:x="1005" fg:w="3"/><text x="81.2331%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="80.9831%" y="645" width="0.2417%" height="15" fill="rgb(211,225,28)" fg:x="1005" fg:w="3"/><text x="81.2331%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="80.9831%" y="629" width="0.2417%" height="15" fill="rgb(242,105,44)" fg:x="1005" fg:w="3"/><text x="81.2331%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="80.9831%" y="613" width="0.2417%" height="15" fill="rgb(216,183,46)" fg:x="1005" fg:w="3"/><text x="81.2331%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="80.9831%" y="597" width="0.2417%" height="15" fill="rgb(227,112,9)" fg:x="1005" fg:w="3"/><text x="81.2331%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="80.9831%" y="581" width="0.2417%" height="15" fill="rgb(244,21,0)" fg:x="1005" fg:w="3"/><text x="81.2331%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.1442%" y="565" width="0.0806%" height="15" fill="rgb(236,185,14)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1442%" y="549" width="0.0806%" height="15" fill="rgb(236,170,30)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.1442%" y="533" width="0.0806%" height="15" fill="rgb(209,198,51)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1442%" y="517" width="0.0806%" height="15" fill="rgb(205,171,26)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.1442%" y="501" width="0.0806%" height="15" fill="rgb(246,41,49)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1442%" y="485" width="0.0806%" height="15" fill="rgb(240,229,12)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.1442%" y="469" width="0.0806%" height="15" fill="rgb(212,8,54)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1442%" y="453" width="0.0806%" height="15" fill="rgb(230,114,13)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3054%" y="501" width="0.0806%" height="15" fill="rgb(229,130,28)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3054%" y="485" width="0.0806%" height="15" fill="rgb(206,139,15)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3054%" y="469" width="0.0806%" height="15" fill="rgb(241,188,35)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3054%" y="453" width="0.0806%" height="15" fill="rgb(208,224,26)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3054%" y="437" width="0.0806%" height="15" fill="rgb(251,131,28)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3054%" y="421" width="0.0806%" height="15" fill="rgb(208,153,1)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3054%" y="405" width="0.0806%" height="15" fill="rgb(234,33,36)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.3054%" y="389" width="0.0806%" height="15" fill="rgb(246,42,29)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.3054%" y="373" width="0.0806%" height="15" fill="rgb(251,114,16)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.3054%" y="357" width="0.0806%" height="15" fill="rgb(233,13,38)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.3054%" y="341" width="0.0806%" height="15" fill="rgb(247,120,19)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.3054%" y="325" width="0.0806%" height="15" fill="rgb(205,11,16)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.3054%" y="309" width="0.0806%" height="15" fill="rgb(228,185,19)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.3054%" y="293" width="0.0806%" height="15" fill="rgb(239,88,52)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.3054%" y="277" width="0.0806%" height="15" fill="rgb(219,23,1)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.3054%" y="261" width="0.0806%" height="15" fill="rgb(253,177,16)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="81.3054%" y="245" width="0.0806%" height="15" fill="rgb(225,150,40)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="81.3054%" y="229" width="0.0806%" height="15" fill="rgb(208,108,30)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.3860%" y="405" width="0.0806%" height="15" fill="rgb(214,122,4)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3860%" y="389" width="0.0806%" height="15" fill="rgb(229,74,37)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3860%" y="373" width="0.0806%" height="15" fill="rgb(233,61,41)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="81.3054%" y="613" width="0.2417%" height="15" fill="rgb(238,191,5)" fg:x="1009" fg:w="3"/><text x="81.5554%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="81.3054%" y="597" width="0.2417%" height="15" fill="rgb(233,78,24)" fg:x="1009" fg:w="3"/><text x="81.5554%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="81.3054%" y="581" width="0.2417%" height="15" fill="rgb(211,142,8)" fg:x="1009" fg:w="3"/><text x="81.5554%" y="591.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="81.3054%" y="565" width="0.2417%" height="15" fill="rgb(253,38,53)" fg:x="1009" fg:w="3"/><text x="81.5554%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.3054%" y="549" width="0.2417%" height="15" fill="rgb(234,63,51)" fg:x="1009" fg:w="3"/><text x="81.5554%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.3054%" y="533" width="0.2417%" height="15" fill="rgb(205,23,31)" fg:x="1009" fg:w="3"/><text x="81.5554%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.3054%" y="517" width="0.2417%" height="15" fill="rgb(210,184,50)" fg:x="1009" fg:w="3"/><text x="81.5554%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.3860%" y="501" width="0.1612%" height="15" fill="rgb(222,112,26)" fg:x="1010" fg:w="2"/><text x="81.6360%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.3860%" y="485" width="0.1612%" height="15" fill="rgb(250,98,18)" fg:x="1010" fg:w="2"/><text x="81.6360%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="81.3860%" y="469" width="0.1612%" height="15" fill="rgb(250,34,12)" fg:x="1010" fg:w="2"/><text x="81.6360%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.3860%" y="453" width="0.1612%" height="15" fill="rgb(236,141,30)" fg:x="1010" fg:w="2"/><text x="81.6360%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="81.3860%" y="437" width="0.1612%" height="15" fill="rgb(246,134,38)" fg:x="1010" fg:w="2"/><text x="81.6360%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.3860%" y="421" width="0.1612%" height="15" fill="rgb(240,114,4)" fg:x="1010" fg:w="2"/><text x="81.6360%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.4666%" y="405" width="0.0806%" height="15" fill="rgb(243,113,39)" fg:x="1011" fg:w="1"/><text x="81.7166%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4666%" y="389" width="0.0806%" height="15" fill="rgb(239,215,4)" fg:x="1011" fg:w="1"/><text x="81.7166%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4666%" y="373" width="0.0806%" height="15" fill="rgb(236,229,45)" fg:x="1011" fg:w="1"/><text x="81.7166%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.6277%" y="501" width="0.0806%" height="15" fill="rgb(242,2,6)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6277%" y="485" width="0.0806%" height="15" fill="rgb(239,108,21)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.6277%" y="469" width="0.0806%" height="15" fill="rgb(215,168,34)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6277%" y="453" width="0.0806%" height="15" fill="rgb(238,31,17)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6277%" y="437" width="0.0806%" height="15" fill="rgb(220,133,11)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.6277%" y="549" width="0.1612%" height="15" fill="rgb(212,158,23)" fg:x="1013" fg:w="2"/><text x="81.8777%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="81.6277%" y="533" width="0.1612%" height="15" fill="rgb(223,172,7)" fg:x="1013" fg:w="2"/><text x="81.8777%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.6277%" y="517" width="0.1612%" height="15" fill="rgb(244,3,52)" fg:x="1013" fg:w="2"/><text x="81.8777%" y="527.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="81.7083%" y="501" width="0.0806%" height="15" fill="rgb(207,69,27)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="81.6277%" y="597" width="0.2417%" height="15" fill="rgb(213,136,45)" fg:x="1013" fg:w="3"/><text x="81.8777%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="81.6277%" y="581" width="0.2417%" height="15" fill="rgb(218,79,17)" fg:x="1013" fg:w="3"/><text x="81.8777%" y="591.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="81.6277%" y="565" width="0.2417%" height="15" fill="rgb(216,106,36)" fg:x="1013" fg:w="3"/><text x="81.8777%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.7889%" y="549" width="0.0806%" height="15" fill="rgb(251,27,45)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.7889%" y="533" width="0.0806%" height="15" fill="rgb(232,21,34)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.7889%" y="517" width="0.0806%" height="15" fill="rgb(249,191,16)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7889%" y="501" width="0.0806%" height="15" fill="rgb(224,88,20)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7889%" y="485" width="0.0806%" height="15" fill="rgb(237,93,27)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="81.7889%" y="469" width="0.0806%" height="15" fill="rgb(226,198,48)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7889%" y="453" width="0.0806%" height="15" fill="rgb(207,162,53)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.7889%" y="437" width="0.0806%" height="15" fill="rgb(207,169,9)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="447.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="81.7889%" y="421" width="0.0806%" height="15" fill="rgb(224,166,46)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7889%" y="405" width="0.0806%" height="15" fill="rgb(233,26,6)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7889%" y="389" width="0.0806%" height="15" fill="rgb(218,106,45)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7889%" y="373" width="0.0806%" height="15" fill="rgb(240,217,4)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="81.8695%" y="597" width="0.0806%" height="15" fill="rgb(246,171,10)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="81.8695%" y="581" width="0.0806%" height="15" fill="rgb(223,197,30)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.8695%" y="565" width="0.0806%" height="15" fill="rgb(207,92,16)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9500%" y="437" width="0.0806%" height="15" fill="rgb(211,6,44)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9500%" y="421" width="0.0806%" height="15" fill="rgb(219,139,2)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.9500%" y="549" width="0.1612%" height="15" fill="rgb(224,103,21)" fg:x="1017" fg:w="2"/><text x="82.2000%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="81.9500%" y="533" width="0.1612%" height="15" fill="rgb(254,110,48)" fg:x="1017" fg:w="2"/><text x="82.2000%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.9500%" y="517" width="0.1612%" height="15" fill="rgb(212,88,19)" fg:x="1017" fg:w="2"/><text x="82.2000%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.9500%" y="501" width="0.1612%" height="15" fill="rgb(248,103,6)" fg:x="1017" fg:w="2"/><text x="82.2000%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.9500%" y="485" width="0.1612%" height="15" fill="rgb(214,53,46)" fg:x="1017" fg:w="2"/><text x="82.2000%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.9500%" y="469" width="0.1612%" height="15" fill="rgb(236,190,24)" fg:x="1017" fg:w="2"/><text x="82.2000%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.9500%" y="453" width="0.1612%" height="15" fill="rgb(254,58,28)" fg:x="1017" fg:w="2"/><text x="82.2000%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0306%" y="437" width="0.0806%" height="15" fill="rgb(243,63,27)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0306%" y="421" width="0.0806%" height="15" fill="rgb(206,81,20)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.0306%" y="405" width="0.0806%" height="15" fill="rgb(252,69,51)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.0306%" y="389" width="0.0806%" height="15" fill="rgb(222,213,4)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.0306%" y="373" width="0.0806%" height="15" fill="rgb(226,198,12)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0306%" y="357" width="0.0806%" height="15" fill="rgb(248,115,11)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0306%" y="341" width="0.0806%" height="15" fill="rgb(221,148,54)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.0306%" y="325" width="0.0806%" height="15" fill="rgb(214,209,51)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.0306%" y="309" width="0.0806%" height="15" fill="rgb(249,116,53)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.0306%" y="293" width="0.0806%" height="15" fill="rgb(248,170,1)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.0306%" y="277" width="0.0806%" height="15" fill="rgb(244,105,10)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.0306%" y="261" width="0.0806%" height="15" fill="rgb(229,100,5)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="271.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.73%)</title><rect x="81.5471%" y="613" width="0.7252%" height="15" fill="rgb(233,221,39)" fg:x="1012" fg:w="9"/><text x="81.7971%" y="623.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="81.9500%" y="597" width="0.3223%" height="15" fill="rgb(233,88,21)" fg:x="1017" fg:w="4"/><text x="82.2000%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="81.9500%" y="581" width="0.3223%" height="15" fill="rgb(206,13,0)" fg:x="1017" fg:w="4"/><text x="82.2000%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="81.9500%" y="565" width="0.3223%" height="15" fill="rgb(242,15,35)" fg:x="1017" fg:w="4"/><text x="82.2000%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="82.1112%" y="549" width="0.1612%" height="15" fill="rgb(247,142,41)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.1918%" y="533" width="0.0806%" height="15" fill="rgb(245,51,29)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.1918%" y="517" width="0.0806%" height="15" fill="rgb(228,209,43)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1918%" y="501" width="0.0806%" height="15" fill="rgb(233,185,9)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1918%" y="485" width="0.0806%" height="15" fill="rgb(226,93,0)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1918%" y="469" width="0.0806%" height="15" fill="rgb(245,194,43)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1918%" y="453" width="0.0806%" height="15" fill="rgb(211,145,34)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1918%" y="437" width="0.0806%" height="15" fill="rgb(231,228,28)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.1918%" y="421" width="0.0806%" height="15" fill="rgb(236,149,4)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 1.13%)</title><rect x="81.2248%" y="661" width="1.1281%" height="15" fill="rgb(234,114,38)" fg:x="1008" fg:w="14"/><text x="81.4748%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 1.05%)</title><rect x="81.3054%" y="645" width="1.0475%" height="15" fill="rgb(246,132,51)" fg:x="1009" fg:w="13"/><text x="81.5554%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (13 samples, 1.05%)</title><rect x="81.3054%" y="629" width="1.0475%" height="15" fill="rgb(251,137,22)" fg:x="1009" fg:w="13"/><text x="81.5554%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="82.2724%" y="613" width="0.0806%" height="15" fill="rgb(243,59,52)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="82.2724%" y="597" width="0.0806%" height="15" fill="rgb(239,56,28)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.2724%" y="581" width="0.0806%" height="15" fill="rgb(218,168,27)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.2724%" y="565" width="0.0806%" height="15" fill="rgb(232,165,11)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2724%" y="549" width="0.0806%" height="15" fill="rgb(253,55,41)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2724%" y="533" width="0.0806%" height="15" fill="rgb(233,206,24)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="82.2724%" y="517" width="0.0806%" height="15" fill="rgb(220,199,8)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2724%" y="501" width="0.0806%" height="15" fill="rgb(254,65,26)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2724%" y="485" width="0.0806%" height="15" fill="rgb(253,102,23)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2724%" y="469" width="0.0806%" height="15" fill="rgb(231,103,35)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2724%" y="453" width="0.0806%" height="15" fill="rgb(238,26,10)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="82.3529%" y="661" width="0.0806%" height="15" fill="rgb(234,191,34)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="82.4335%" y="661" width="0.0806%" height="15" fill="rgb(206,210,9)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.4335%" y="645" width="0.0806%" height="15" fill="rgb(219,155,3)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="82.5141%" y="597" width="0.0806%" height="15" fill="rgb(221,62,52)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5141%" y="581" width="0.0806%" height="15" fill="rgb(215,197,36)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5141%" y="565" width="0.0806%" height="15" fill="rgb(226,222,6)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.5141%" y="549" width="0.0806%" height="15" fill="rgb(215,58,28)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.5141%" y="533" width="0.0806%" height="15" fill="rgb(212,148,2)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.5141%" y="517" width="0.0806%" height="15" fill="rgb(208,21,42)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="82.5141%" y="501" width="0.0806%" height="15" fill="rgb(209,107,26)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="82.5141%" y="485" width="0.0806%" height="15" fill="rgb(254,60,47)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="82.5141%" y="629" width="0.1612%" height="15" fill="rgb(207,226,45)" fg:x="1024" fg:w="2"/><text x="82.7641%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="82.5141%" y="613" width="0.1612%" height="15" fill="rgb(223,124,22)" fg:x="1024" fg:w="2"/><text x="82.7641%" y="623.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="82.5947%" y="597" width="0.0806%" height="15" fill="rgb(240,162,13)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="82.6753%" y="613" width="0.0806%" height="15" fill="rgb(244,199,31)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.6753%" y="597" width="0.0806%" height="15" fill="rgb(207,92,16)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.6753%" y="581" width="0.0806%" height="15" fill="rgb(215,31,19)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.9170%" y="581" width="0.0806%" height="15" fill="rgb(245,118,14)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.9170%" y="565" width="0.0806%" height="15" fill="rgb(248,12,46)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.9170%" y="549" width="0.0806%" height="15" fill="rgb(209,119,0)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.9170%" y="533" width="0.0806%" height="15" fill="rgb(254,51,44)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9170%" y="517" width="0.0806%" height="15" fill="rgb(253,182,35)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.9170%" y="501" width="0.0806%" height="15" fill="rgb(205,198,39)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.9170%" y="485" width="0.0806%" height="15" fill="rgb(251,175,48)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.9170%" y="469" width="0.0806%" height="15" fill="rgb(239,38,17)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.0782%" y="565" width="0.0806%" height="15" fill="rgb(212,101,8)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.0782%" y="549" width="0.0806%" height="15" fill="rgb(228,35,17)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.0782%" y="533" width="0.0806%" height="15" fill="rgb(214,95,8)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.0782%" y="517" width="0.0806%" height="15" fill="rgb(210,176,35)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.0782%" y="501" width="0.0806%" height="15" fill="rgb(226,4,3)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.0782%" y="485" width="0.0806%" height="15" fill="rgb(232,133,14)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.0782%" y="469" width="0.0806%" height="15" fill="rgb(250,191,8)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.2393%" y="549" width="0.1612%" height="15" fill="rgb(213,12,45)" fg:x="1033" fg:w="2"/><text x="83.4893%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.3199%" y="533" width="0.0806%" height="15" fill="rgb(233,78,26)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.3199%" y="517" width="0.0806%" height="15" fill="rgb(245,222,11)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.3199%" y="501" width="0.0806%" height="15" fill="rgb(216,174,12)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.4005%" y="533" width="0.1612%" height="15" fill="rgb(213,15,9)" fg:x="1035" fg:w="2"/><text x="83.6505%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4811%" y="517" width="0.0806%" height="15" fill="rgb(238,103,32)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.4811%" y="501" width="0.0806%" height="15" fill="rgb(245,85,15)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.4811%" y="485" width="0.0806%" height="15" fill="rgb(254,204,5)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.5616%" y="501" width="0.0806%" height="15" fill="rgb(231,178,15)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.5616%" y="485" width="0.0806%" height="15" fill="rgb(248,151,3)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.5616%" y="469" width="0.0806%" height="15" fill="rgb(250,139,13)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.5616%" y="453" width="0.0806%" height="15" fill="rgb(243,107,53)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="83.5616%" y="533" width="0.2417%" height="15" fill="rgb(232,81,15)" fg:x="1037" fg:w="3"/><text x="83.8116%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="83.5616%" y="517" width="0.2417%" height="15" fill="rgb(225,187,48)" fg:x="1037" fg:w="3"/><text x="83.8116%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.6422%" y="501" width="0.1612%" height="15" fill="rgb(205,116,12)" fg:x="1038" fg:w="2"/><text x="83.8922%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.6422%" y="485" width="0.1612%" height="15" fill="rgb(220,222,31)" fg:x="1038" fg:w="2"/><text x="83.8922%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.6422%" y="469" width="0.1612%" height="15" fill="rgb(233,187,49)" fg:x="1038" fg:w="2"/><text x="83.8922%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="83.6422%" y="453" width="0.1612%" height="15" fill="rgb(211,168,53)" fg:x="1038" fg:w="2"/><text x="83.8922%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.7228%" y="437" width="0.0806%" height="15" fill="rgb(206,160,16)" fg:x="1039" fg:w="1"/><text x="83.9728%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.7228%" y="421" width="0.0806%" height="15" fill="rgb(254,164,13)" fg:x="1039" fg:w="1"/><text x="83.9728%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.7228%" y="405" width="0.0806%" height="15" fill="rgb(229,45,30)" fg:x="1039" fg:w="1"/><text x="83.9728%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="83.4005%" y="549" width="0.4835%" height="15" fill="rgb(237,32,10)" fg:x="1035" fg:w="6"/><text x="83.6505%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.8034%" y="533" width="0.0806%" height="15" fill="rgb(251,20,47)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="83.1587%" y="565" width="0.8058%" height="15" fill="rgb(251,116,12)" fg:x="1032" fg:w="10"/><text x="83.4087%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.8840%" y="549" width="0.0806%" height="15" fill="rgb(214,227,27)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.8840%" y="533" width="0.0806%" height="15" fill="rgb(248,10,53)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.8840%" y="517" width="0.0806%" height="15" fill="rgb(221,176,25)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.45%)</title><rect x="82.8364%" y="597" width="1.4504%" height="15" fill="rgb(205,70,46)" fg:x="1028" fg:w="18"/><text x="83.0864%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="82.9976%" y="581" width="1.2893%" height="15" fill="rgb(217,45,38)" fg:x="1030" fg:w="16"/><text x="83.2476%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="83.9645%" y="565" width="0.3223%" height="15" fill="rgb(243,6,54)" fg:x="1042" fg:w="4"/><text x="84.2145%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="84.0451%" y="549" width="0.2417%" height="15" fill="rgb(242,76,23)" fg:x="1043" fg:w="3"/><text x="84.2951%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="84.0451%" y="533" width="0.2417%" height="15" fill="rgb(239,166,0)" fg:x="1043" fg:w="3"/><text x="84.2951%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.2063%" y="517" width="0.0806%" height="15" fill="rgb(238,174,32)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.2063%" y="501" width="0.0806%" height="15" fill="rgb(238,124,44)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.2063%" y="485" width="0.0806%" height="15" fill="rgb(206,185,9)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.2869%" y="549" width="0.0806%" height="15" fill="rgb(215,157,17)" fg:x="1046" fg:w="1"/><text x="84.5369%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5286%" y="533" width="0.0806%" height="15" fill="rgb(251,17,29)" fg:x="1049" fg:w="1"/><text x="84.7786%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.6092%" y="485" width="0.0806%" height="15" fill="rgb(227,113,27)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.6898%" y="469" width="0.0806%" height="15" fill="rgb(217,226,24)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6898%" y="453" width="0.0806%" height="15" fill="rgb(251,99,38)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="84.2869%" y="597" width="0.5641%" height="15" fill="rgb(231,147,19)" fg:x="1046" fg:w="7"/><text x="84.5369%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="84.2869%" y="581" width="0.5641%" height="15" fill="rgb(230,86,8)" fg:x="1046" fg:w="7"/><text x="84.5369%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="84.2869%" y="565" width="0.5641%" height="15" fill="rgb(237,159,39)" fg:x="1046" fg:w="7"/><text x="84.5369%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="84.3674%" y="549" width="0.4835%" height="15" fill="rgb(247,179,47)" fg:x="1047" fg:w="6"/><text x="84.6174%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.6092%" y="533" width="0.2417%" height="15" fill="rgb(253,152,26)" fg:x="1050" fg:w="3"/><text x="84.8592%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.6092%" y="517" width="0.2417%" height="15" fill="rgb(222,211,15)" fg:x="1050" fg:w="3"/><text x="84.8592%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.6092%" y="501" width="0.2417%" height="15" fill="rgb(236,193,6)" fg:x="1050" fg:w="3"/><text x="84.8592%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.6898%" y="485" width="0.1612%" height="15" fill="rgb(226,206,10)" fg:x="1051" fg:w="2"/><text x="84.9398%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7703%" y="469" width="0.0806%" height="15" fill="rgb(213,125,22)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="84.7703%" y="453" width="0.0806%" height="15" fill="rgb(221,66,28)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="84.8509%" y="581" width="0.0806%" height="15" fill="rgb(222,84,53)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="591.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="84.8509%" y="565" width="0.0806%" height="15" fill="rgb(243,50,15)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="84.8509%" y="549" width="0.0806%" height="15" fill="rgb(208,184,23)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.8509%" y="533" width="0.0806%" height="15" fill="rgb(221,83,2)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8509%" y="517" width="0.0806%" height="15" fill="rgb(236,53,24)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9315%" y="549" width="0.0806%" height="15" fill="rgb(244,171,29)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9315%" y="533" width="0.0806%" height="15" fill="rgb(205,19,11)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0121%" y="501" width="0.0806%" height="15" fill="rgb(207,108,29)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0121%" y="485" width="0.0806%" height="15" fill="rgb(236,215,43)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.0927%" y="501" width="0.0806%" height="15" fill="rgb(213,58,35)" fg:x="1056" fg:w="1"/><text x="85.3427%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0927%" y="485" width="0.0806%" height="15" fill="rgb(220,211,46)" fg:x="1056" fg:w="1"/><text x="85.3427%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.0927%" y="469" width="0.0806%" height="15" fill="rgb(212,134,16)" fg:x="1056" fg:w="1"/><text x="85.3427%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0927%" y="453" width="0.0806%" height="15" fill="rgb(232,90,44)" fg:x="1056" fg:w="1"/><text x="85.3427%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="85.2538%" y="453" width="0.2417%" height="15" fill="rgb(212,18,36)" fg:x="1058" fg:w="3"/><text x="85.5038%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="85.2538%" y="437" width="0.2417%" height="15" fill="rgb(206,112,24)" fg:x="1058" fg:w="3"/><text x="85.5038%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="85.2538%" y="421" width="0.2417%" height="15" fill="rgb(238,223,40)" fg:x="1058" fg:w="3"/><text x="85.5038%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="85.0121%" y="517" width="0.5641%" height="15" fill="rgb(226,169,20)" fg:x="1055" fg:w="7"/><text x="85.2621%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="85.1732%" y="501" width="0.4029%" height="15" fill="rgb(241,64,52)" fg:x="1057" fg:w="5"/><text x="85.4232%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="85.1732%" y="485" width="0.4029%" height="15" fill="rgb(228,120,25)" fg:x="1057" fg:w="5"/><text x="85.4232%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="85.2538%" y="469" width="0.3223%" height="15" fill="rgb(234,108,19)" fg:x="1058" fg:w="4"/><text x="85.5038%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4956%" y="453" width="0.0806%" height="15" fill="rgb(236,133,29)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="463.50"></text></g><g><title>engine::session::Session::flush (39 samples, 3.14%)</title><rect x="82.5141%" y="661" width="3.1426%" height="15" fill="rgb(246,174,53)" fg:x="1024" fg:w="39"/><text x="82.7641%" y="671.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (39 samples, 3.14%)</title><rect x="82.5141%" y="645" width="3.1426%" height="15" fill="rgb(210,105,35)" fg:x="1024" fg:w="39"/><text x="82.7641%" y="655.50">eng..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (37 samples, 2.98%)</title><rect x="82.6753%" y="629" width="2.9815%" height="15" fill="rgb(225,27,26)" fg:x="1026" fg:w="37"/><text x="82.9253%" y="639.50">eng..</text></g><g><title>engine::session::SavesEntities::check_for_changes (36 samples, 2.90%)</title><rect x="82.7558%" y="613" width="2.9009%" height="15" fill="rgb(233,2,39)" fg:x="1027" fg:w="36"/><text x="83.0058%" y="623.50">en..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.81%)</title><rect x="84.8509%" y="597" width="0.8058%" height="15" fill="rgb(219,164,26)" fg:x="1053" fg:w="10"/><text x="85.1009%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.73%)</title><rect x="84.9315%" y="581" width="0.7252%" height="15" fill="rgb(236,211,5)" fg:x="1054" fg:w="9"/><text x="85.1815%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="84.9315%" y="565" width="0.7252%" height="15" fill="rgb(244,227,23)" fg:x="1054" fg:w="9"/><text x="85.1815%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="85.0121%" y="549" width="0.6446%" height="15" fill="rgb(230,184,8)" fg:x="1055" fg:w="8"/><text x="85.2621%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="85.0121%" y="533" width="0.6446%" height="15" fill="rgb(217,125,48)" fg:x="1055" fg:w="8"/><text x="85.2621%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="85.5761%" y="517" width="0.0806%" height="15" fill="rgb(223,192,47)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="85.6567%" y="661" width="0.0806%" height="15" fill="rgb(226,119,10)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="85.6567%" y="645" width="0.0806%" height="15" fill="rgb(221,49,29)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="85.6567%" y="629" width="0.0806%" height="15" fill="rgb(217,205,19)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.6567%" y="613" width="0.0806%" height="15" fill="rgb(242,104,7)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.6567%" y="597" width="0.0806%" height="15" fill="rgb(209,154,48)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.6567%" y="581" width="0.0806%" height="15" fill="rgb(219,213,46)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.6567%" y="565" width="0.0806%" height="15" fill="rgb(229,105,38)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.6567%" y="549" width="0.0806%" height="15" fill="rgb(205,151,5)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.6567%" y="533" width="0.0806%" height="15" fill="rgb(248,115,40)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="85.6567%" y="517" width="0.0806%" height="15" fill="rgb(206,179,2)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="85.6567%" y="501" width="0.0806%" height="15" fill="rgb(230,103,24)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.6567%" y="485" width="0.0806%" height="15" fill="rgb(218,152,4)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="85.6567%" y="469" width="0.0806%" height="15" fill="rgb(236,161,54)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.6567%" y="453" width="0.0806%" height="15" fill="rgb(226,65,17)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.7373%" y="533" width="0.1612%" height="15" fill="rgb(221,134,44)" fg:x="1064" fg:w="2"/><text x="85.9873%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.7373%" y="517" width="0.1612%" height="15" fill="rgb(251,129,4)" fg:x="1064" fg:w="2"/><text x="85.9873%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.8179%" y="501" width="0.0806%" height="15" fill="rgb(244,32,34)" fg:x="1065" fg:w="1"/><text x="86.0679%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="85.7373%" y="549" width="0.2417%" height="15" fill="rgb(251,224,37)" fg:x="1064" fg:w="3"/><text x="85.9873%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.8985%" y="533" width="0.0806%" height="15" fill="rgb(248,117,31)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.8985%" y="517" width="0.0806%" height="15" fill="rgb(222,208,37)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.8985%" y="501" width="0.0806%" height="15" fill="rgb(234,211,25)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.8985%" y="485" width="0.0806%" height="15" fill="rgb(211,72,6)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.8985%" y="469" width="0.0806%" height="15" fill="rgb(249,198,38)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.8985%" y="453" width="0.0806%" height="15" fill="rgb(221,86,51)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.8985%" y="437" width="0.0806%" height="15" fill="rgb(226,178,43)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.8985%" y="421" width="0.0806%" height="15" fill="rgb(215,145,7)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.8985%" y="405" width="0.0806%" height="15" fill="rgb(250,202,36)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.8985%" y="389" width="0.0806%" height="15" fill="rgb(215,86,13)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.8985%" y="373" width="0.0806%" height="15" fill="rgb(221,134,12)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.8985%" y="357" width="0.0806%" height="15" fill="rgb(213,82,10)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="85.7373%" y="597" width="0.3223%" height="15" fill="rgb(214,142,0)" fg:x="1064" fg:w="4"/><text x="85.9873%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="85.7373%" y="581" width="0.3223%" height="15" fill="rgb(205,145,9)" fg:x="1064" fg:w="4"/><text x="85.9873%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="85.7373%" y="565" width="0.3223%" height="15" fill="rgb(244,214,8)" fg:x="1064" fg:w="4"/><text x="85.9873%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.9790%" y="549" width="0.0806%" height="15" fill="rgb(224,72,51)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9790%" y="533" width="0.0806%" height="15" fill="rgb(233,137,37)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.9790%" y="517" width="0.0806%" height="15" fill="rgb(208,71,28)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9790%" y="501" width="0.0806%" height="15" fill="rgb(226,31,7)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.9790%" y="485" width="0.0806%" height="15" fill="rgb(229,62,18)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9790%" y="469" width="0.0806%" height="15" fill="rgb(226,74,28)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.9790%" y="453" width="0.0806%" height="15" fill="rgb(214,170,18)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9790%" y="437" width="0.0806%" height="15" fill="rgb(227,229,35)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.9790%" y="421" width="0.0806%" height="15" fill="rgb(225,181,39)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9790%" y="405" width="0.0806%" height="15" fill="rgb(253,124,44)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="85.9790%" y="389" width="0.0806%" height="15" fill="rgb(220,75,18)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="85.9790%" y="373" width="0.0806%" height="15" fill="rgb(239,175,43)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.0596%" y="581" width="0.0806%" height="15" fill="rgb(228,112,50)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.0596%" y="565" width="0.0806%" height="15" fill="rgb(232,105,36)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.0596%" y="549" width="0.0806%" height="15" fill="rgb(227,137,47)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0596%" y="533" width="0.0806%" height="15" fill="rgb(217,51,9)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.0596%" y="517" width="0.0806%" height="15" fill="rgb(245,117,0)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0596%" y="501" width="0.0806%" height="15" fill="rgb(252,52,30)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.0596%" y="485" width="0.0806%" height="15" fill="rgb(227,85,33)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0596%" y="469" width="0.0806%" height="15" fill="rgb(220,157,20)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.0596%" y="453" width="0.0806%" height="15" fill="rgb(254,14,34)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0596%" y="437" width="0.0806%" height="15" fill="rgb(216,103,41)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.1402%" y="549" width="0.0806%" height="15" fill="rgb(245,221,9)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1402%" y="533" width="0.0806%" height="15" fill="rgb(254,136,47)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="543.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="85.7373%" y="613" width="0.5641%" height="15" fill="rgb(235,71,46)" fg:x="1064" fg:w="7"/><text x="85.9873%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="86.0596%" y="597" width="0.2417%" height="15" fill="rgb(242,154,29)" fg:x="1068" fg:w="3"/><text x="86.3096%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="86.1402%" y="581" width="0.1612%" height="15" fill="rgb(210,65,31)" fg:x="1069" fg:w="2"/><text x="86.3902%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.1402%" y="565" width="0.1612%" height="15" fill="rgb(244,9,50)" fg:x="1069" fg:w="2"/><text x="86.3902%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2208%" y="549" width="0.0806%" height="15" fill="rgb(215,141,38)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2208%" y="533" width="0.0806%" height="15" fill="rgb(241,129,6)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="86.2208%" y="517" width="0.0806%" height="15" fill="rgb(253,169,4)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2208%" y="501" width="0.0806%" height="15" fill="rgb(237,82,36)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.2208%" y="485" width="0.0806%" height="15" fill="rgb(209,171,11)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="86.2208%" y="469" width="0.0806%" height="15" fill="rgb(242,19,22)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2208%" y="453" width="0.0806%" height="15" fill="rgb(251,122,24)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2208%" y="437" width="0.0806%" height="15" fill="rgb(226,166,42)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2208%" y="421" width="0.0806%" height="15" fill="rgb(244,101,48)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.2208%" y="405" width="0.0806%" height="15" fill="rgb(227,125,1)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="86.2208%" y="389" width="0.0806%" height="15" fill="rgb(206,79,43)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="85.7373%" y="645" width="0.8058%" height="15" fill="rgb(241,109,41)" fg:x="1064" fg:w="10"/><text x="85.9873%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (10 samples, 0.81%)</title><rect x="85.7373%" y="629" width="0.8058%" height="15" fill="rgb(219,73,4)" fg:x="1064" fg:w="10"/><text x="85.9873%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="86.3014%" y="613" width="0.2417%" height="15" fill="rgb(239,25,41)" fg:x="1071" fg:w="3"/><text x="86.5514%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="86.3014%" y="597" width="0.2417%" height="15" fill="rgb(208,88,46)" fg:x="1071" fg:w="3"/><text x="86.5514%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="86.3014%" y="581" width="0.2417%" height="15" fill="rgb(239,184,9)" fg:x="1071" fg:w="3"/><text x="86.5514%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="86.3014%" y="565" width="0.2417%" height="15" fill="rgb(223,114,13)" fg:x="1071" fg:w="3"/><text x="86.5514%" y="575.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="86.3014%" y="549" width="0.2417%" height="15" fill="rgb(214,28,42)" fg:x="1071" fg:w="3"/><text x="86.5514%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5431%" y="629" width="0.0806%" height="15" fill="rgb(252,32,44)" fg:x="1074" fg:w="1"/><text x="86.7931%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6237%" y="501" width="0.0806%" height="15" fill="rgb(231,159,4)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6237%" y="485" width="0.0806%" height="15" fill="rgb(210,35,26)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.6237%" y="549" width="0.1612%" height="15" fill="rgb(208,190,37)" fg:x="1075" fg:w="2"/><text x="86.8737%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.6237%" y="533" width="0.1612%" height="15" fill="rgb(226,148,22)" fg:x="1075" fg:w="2"/><text x="86.8737%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.6237%" y="517" width="0.1612%" height="15" fill="rgb(242,153,24)" fg:x="1075" fg:w="2"/><text x="86.8737%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7043%" y="501" width="0.0806%" height="15" fill="rgb(213,133,7)" fg:x="1076" fg:w="1"/><text x="86.9543%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.7849%" y="549" width="0.0806%" height="15" fill="rgb(248,206,18)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.7849%" y="533" width="0.0806%" height="15" fill="rgb(233,157,4)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.7849%" y="517" width="0.0806%" height="15" fill="rgb(249,179,32)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.7849%" y="501" width="0.0806%" height="15" fill="rgb(248,69,35)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.7849%" y="485" width="0.0806%" height="15" fill="rgb(249,158,38)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.7849%" y="469" width="0.0806%" height="15" fill="rgb(223,18,43)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8654%" y="453" width="0.0806%" height="15" fill="rgb(238,42,45)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="86.6237%" y="597" width="0.4029%" height="15" fill="rgb(219,65,47)" fg:x="1075" fg:w="5"/><text x="86.8737%" y="607.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="86.6237%" y="581" width="0.4029%" height="15" fill="rgb(248,153,12)" fg:x="1075" fg:w="5"/><text x="86.8737%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="86.6237%" y="565" width="0.4029%" height="15" fill="rgb(240,118,4)" fg:x="1075" fg:w="5"/><text x="86.8737%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="86.8654%" y="549" width="0.1612%" height="15" fill="rgb(250,96,34)" fg:x="1078" fg:w="2"/><text x="87.1154%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.8654%" y="533" width="0.1612%" height="15" fill="rgb(221,15,4)" fg:x="1078" fg:w="2"/><text x="87.1154%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="86.8654%" y="517" width="0.1612%" height="15" fill="rgb(217,149,33)" fg:x="1078" fg:w="2"/><text x="87.1154%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.8654%" y="501" width="0.1612%" height="15" fill="rgb(213,58,29)" fg:x="1078" fg:w="2"/><text x="87.1154%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="86.8654%" y="485" width="0.1612%" height="15" fill="rgb(236,218,9)" fg:x="1078" fg:w="2"/><text x="87.1154%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.8654%" y="469" width="0.1612%" height="15" fill="rgb(248,40,19)" fg:x="1078" fg:w="2"/><text x="87.1154%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.9460%" y="453" width="0.0806%" height="15" fill="rgb(212,17,6)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9460%" y="437" width="0.0806%" height="15" fill="rgb(206,212,20)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.9460%" y="421" width="0.0806%" height="15" fill="rgb(229,80,37)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9460%" y="405" width="0.0806%" height="15" fill="rgb(253,8,37)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="86.6237%" y="629" width="0.4835%" height="15" fill="rgb(215,16,43)" fg:x="1075" fg:w="6"/><text x="86.8737%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="86.6237%" y="613" width="0.4835%" height="15" fill="rgb(236,219,16)" fg:x="1075" fg:w="6"/><text x="86.8737%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.0266%" y="597" width="0.0806%" height="15" fill="rgb(251,0,3)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.0266%" y="581" width="0.0806%" height="15" fill="rgb(207,133,37)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.0266%" y="565" width="0.0806%" height="15" fill="rgb(250,143,20)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.0266%" y="549" width="0.0806%" height="15" fill="rgb(242,19,50)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0266%" y="533" width="0.0806%" height="15" fill="rgb(206,124,43)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.0266%" y="517" width="0.0806%" height="15" fill="rgb(229,4,38)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0266%" y="501" width="0.0806%" height="15" fill="rgb(247,220,45)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.0266%" y="485" width="0.0806%" height="15" fill="rgb(247,195,0)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0266%" y="469" width="0.0806%" height="15" fill="rgb(252,12,19)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0266%" y="453" width="0.0806%" height="15" fill="rgb(222,49,50)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.1072%" y="629" width="0.0806%" height="15" fill="rgb(209,157,28)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.1072%" y="613" width="0.0806%" height="15" fill="rgb(238,174,24)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.1072%" y="597" width="0.0806%" height="15" fill="rgb(224,17,28)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.1878%" y="533" width="0.0806%" height="15" fill="rgb(249,7,29)" fg:x="1082" fg:w="1"/><text x="87.4378%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.1878%" y="517" width="0.0806%" height="15" fill="rgb(243,178,4)" fg:x="1082" fg:w="1"/><text x="87.4378%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.3489%" y="405" width="0.0806%" height="15" fill="rgb(246,138,35)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="87.1878%" y="581" width="0.3223%" height="15" fill="rgb(251,85,18)" fg:x="1082" fg:w="4"/><text x="87.4378%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="87.1878%" y="565" width="0.3223%" height="15" fill="rgb(254,55,9)" fg:x="1082" fg:w="4"/><text x="87.4378%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="87.1878%" y="549" width="0.3223%" height="15" fill="rgb(248,4,50)" fg:x="1082" fg:w="4"/><text x="87.4378%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="87.2683%" y="533" width="0.2417%" height="15" fill="rgb(215,208,14)" fg:x="1083" fg:w="3"/><text x="87.5183%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="87.2683%" y="517" width="0.2417%" height="15" fill="rgb(218,37,18)" fg:x="1083" fg:w="3"/><text x="87.5183%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="87.2683%" y="501" width="0.2417%" height="15" fill="rgb(206,104,13)" fg:x="1083" fg:w="3"/><text x="87.5183%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.3489%" y="485" width="0.1612%" height="15" fill="rgb(248,94,22)" fg:x="1084" fg:w="2"/><text x="87.5989%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="87.3489%" y="469" width="0.1612%" height="15" fill="rgb(235,42,46)" fg:x="1084" fg:w="2"/><text x="87.5989%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.3489%" y="453" width="0.1612%" height="15" fill="rgb(220,228,48)" fg:x="1084" fg:w="2"/><text x="87.5989%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="87.3489%" y="437" width="0.1612%" height="15" fill="rgb(216,58,12)" fg:x="1084" fg:w="2"/><text x="87.5989%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.3489%" y="421" width="0.1612%" height="15" fill="rgb(223,97,52)" fg:x="1084" fg:w="2"/><text x="87.5989%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4295%" y="405" width="0.0806%" height="15" fill="rgb(208,159,17)" fg:x="1085" fg:w="1"/><text x="87.6795%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4295%" y="389" width="0.0806%" height="15" fill="rgb(215,172,9)" fg:x="1085" fg:w="1"/><text x="87.6795%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.5907%" y="453" width="0.0806%" height="15" fill="rgb(252,175,30)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.5907%" y="437" width="0.0806%" height="15" fill="rgb(209,159,10)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.5907%" y="421" width="0.0806%" height="15" fill="rgb(229,73,51)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.5907%" y="405" width="0.0806%" height="15" fill="rgb(208,212,43)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.5907%" y="389" width="0.0806%" height="15" fill="rgb(254,123,53)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.5907%" y="373" width="0.0806%" height="15" fill="rgb(254,128,49)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.5907%" y="357" width="0.0806%" height="15" fill="rgb(246,16,16)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.5907%" y="341" width="0.0806%" height="15" fill="rgb(209,200,1)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.5907%" y="325" width="0.0806%" height="15" fill="rgb(235,9,3)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.5907%" y="309" width="0.0806%" height="15" fill="rgb(233,121,54)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.5907%" y="293" width="0.0806%" height="15" fill="rgb(236,80,25)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.5907%" y="277" width="0.0806%" height="15" fill="rgb(220,44,24)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="87.5101%" y="517" width="0.2417%" height="15" fill="rgb(236,225,16)" fg:x="1086" fg:w="3"/><text x="87.7601%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="87.5101%" y="501" width="0.2417%" height="15" fill="rgb(237,140,0)" fg:x="1086" fg:w="3"/><text x="87.7601%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="87.5101%" y="485" width="0.2417%" height="15" fill="rgb(243,225,53)" fg:x="1086" fg:w="3"/><text x="87.7601%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.5907%" y="469" width="0.1612%" height="15" fill="rgb(240,140,30)" fg:x="1087" fg:w="2"/><text x="87.8407%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6712%" y="453" width="0.0806%" height="15" fill="rgb(217,51,16)" fg:x="1088" fg:w="1"/><text x="87.9212%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="87.5101%" y="533" width="0.3223%" height="15" fill="rgb(245,75,50)" fg:x="1086" fg:w="4"/><text x="87.7601%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.7518%" y="517" width="0.0806%" height="15" fill="rgb(208,174,22)" fg:x="1089" fg:w="1"/><text x="88.0018%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.8324%" y="533" width="0.0806%" height="15" fill="rgb(219,98,50)" fg:x="1090" fg:w="1"/><text x="88.0824%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.81%)</title><rect x="87.1878%" y="613" width="0.8058%" height="15" fill="rgb(243,138,3)" fg:x="1082" fg:w="10"/><text x="87.4378%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.81%)</title><rect x="87.1878%" y="597" width="0.8058%" height="15" fill="rgb(243,132,26)" fg:x="1082" fg:w="10"/><text x="87.4378%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="87.5101%" y="581" width="0.4835%" height="15" fill="rgb(250,201,8)" fg:x="1086" fg:w="6"/><text x="87.7601%" y="591.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="87.5101%" y="565" width="0.4835%" height="15" fill="rgb(213,91,26)" fg:x="1086" fg:w="6"/><text x="87.7601%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="87.5101%" y="549" width="0.4835%" height="15" fill="rgb(229,117,1)" fg:x="1086" fg:w="6"/><text x="87.7601%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.9130%" y="533" width="0.0806%" height="15" fill="rgb(229,24,6)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9130%" y="517" width="0.0806%" height="15" fill="rgb(206,69,11)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.9130%" y="501" width="0.0806%" height="15" fill="rgb(234,111,34)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9130%" y="485" width="0.0806%" height="15" fill="rgb(213,187,51)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.9130%" y="469" width="0.0806%" height="15" fill="rgb(207,45,11)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9130%" y="453" width="0.0806%" height="15" fill="rgb(225,151,47)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9130%" y="437" width="0.0806%" height="15" fill="rgb(211,226,5)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9130%" y="421" width="0.0806%" height="15" fill="rgb(214,83,52)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="431.50"></text></g><g><title>plugins_core::build::Build::holding (29 samples, 2.34%)</title><rect x="85.7373%" y="661" width="2.3368%" height="15" fill="rgb(229,49,53)" fg:x="1064" fg:w="29"/><text x="85.9873%" y="671.50">p..</text></g><g><title>plugins_core::tools::set_container (19 samples, 1.53%)</title><rect x="86.5431%" y="645" width="1.5310%" height="15" fill="rgb(246,8,28)" fg:x="1074" fg:w="19"/><text x="86.7931%" y="655.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.89%)</title><rect x="87.1878%" y="629" width="0.8864%" height="15" fill="rgb(207,28,41)" fg:x="1082" fg:w="11"/><text x="87.4378%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="87.9936%" y="613" width="0.0806%" height="15" fill="rgb(254,22,25)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.9936%" y="597" width="0.0806%" height="15" fill="rgb(209,120,42)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="87.9936%" y="581" width="0.0806%" height="15" fill="rgb(216,194,18)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="87.9936%" y="565" width="0.0806%" height="15" fill="rgb(213,70,17)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="87.9936%" y="549" width="0.0806%" height="15" fill="rgb(228,66,19)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="88.0741%" y="629" width="0.0806%" height="15" fill="rgb(236,221,54)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="88.0741%" y="613" width="0.0806%" height="15" fill="rgb(207,175,15)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="623.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.0741%" y="597" width="0.0806%" height="15" fill="rgb(234,76,8)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.0741%" y="581" width="0.0806%" height="15" fill="rgb(243,106,0)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="88.0741%" y="565" width="0.0806%" height="15" fill="rgb(208,48,19)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1547%" y="549" width="0.0806%" height="15" fill="rgb(251,50,29)" fg:x="1094" fg:w="1"/><text x="88.4047%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1547%" y="533" width="0.0806%" height="15" fill="rgb(222,31,49)" fg:x="1094" fg:w="1"/><text x="88.4047%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1547%" y="517" width="0.0806%" height="15" fill="rgb(232,33,18)" fg:x="1094" fg:w="1"/><text x="88.4047%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1547%" y="501" width="0.0806%" height="15" fill="rgb(209,1,44)" fg:x="1094" fg:w="1"/><text x="88.4047%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="88.0741%" y="661" width="0.2417%" height="15" fill="rgb(211,7,1)" fg:x="1093" fg:w="3"/><text x="88.3241%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="88.0741%" y="645" width="0.2417%" height="15" fill="rgb(224,111,27)" fg:x="1093" fg:w="3"/><text x="88.3241%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="88.1547%" y="629" width="0.1612%" height="15" fill="rgb(252,195,39)" fg:x="1094" fg:w="2"/><text x="88.4047%" y="639.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="88.1547%" y="613" width="0.1612%" height="15" fill="rgb(237,198,5)" fg:x="1094" fg:w="2"/><text x="88.4047%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.1547%" y="597" width="0.1612%" height="15" fill="rgb(232,148,1)" fg:x="1094" fg:w="2"/><text x="88.4047%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.1547%" y="581" width="0.1612%" height="15" fill="rgb(249,41,3)" fg:x="1094" fg:w="2"/><text x="88.4047%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.1547%" y="565" width="0.1612%" height="15" fill="rgb(215,14,33)" fg:x="1094" fg:w="2"/><text x="88.4047%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2353%" y="549" width="0.0806%" height="15" fill="rgb(209,146,24)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2353%" y="533" width="0.0806%" height="15" fill="rgb(219,51,47)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2353%" y="517" width="0.0806%" height="15" fill="rgb(234,217,40)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2353%" y="501" width="0.0806%" height="15" fill="rgb(228,34,26)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.2353%" y="485" width="0.0806%" height="15" fill="rgb(224,50,29)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2353%" y="469" width="0.0806%" height="15" fill="rgb(205,79,51)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2353%" y="453" width="0.0806%" height="15" fill="rgb(218,136,28)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2353%" y="437" width="0.0806%" height="15" fill="rgb(220,150,10)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.2353%" y="421" width="0.0806%" height="15" fill="rgb(242,158,47)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2353%" y="405" width="0.0806%" height="15" fill="rgb(209,68,0)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.2353%" y="389" width="0.0806%" height="15" fill="rgb(208,13,41)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.2353%" y="373" width="0.0806%" height="15" fill="rgb(226,201,7)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="383.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3159%" y="597" width="0.0806%" height="15" fill="rgb(236,103,26)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.3159%" y="581" width="0.0806%" height="15" fill="rgb(243,162,8)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="591.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="88.3159%" y="565" width="0.0806%" height="15" fill="rgb(237,225,11)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.3159%" y="549" width="0.0806%" height="15" fill="rgb(247,186,32)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.3159%" y="533" width="0.0806%" height="15" fill="rgb(215,26,28)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="88.3159%" y="517" width="0.0806%" height="15" fill="rgb(208,121,6)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.3159%" y="501" width="0.0806%" height="15" fill="rgb(225,91,3)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="88.3159%" y="661" width="0.1612%" height="15" fill="rgb(246,119,36)" fg:x="1096" fg:w="2"/><text x="88.5659%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="88.3159%" y="645" width="0.1612%" height="15" fill="rgb(254,173,2)" fg:x="1096" fg:w="2"/><text x="88.5659%" y="655.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="88.3159%" y="629" width="0.1612%" height="15" fill="rgb(209,87,54)" fg:x="1096" fg:w="2"/><text x="88.5659%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="88.3159%" y="613" width="0.1612%" height="15" fill="rgb(223,216,20)" fg:x="1096" fg:w="2"/><text x="88.5659%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3965%" y="597" width="0.0806%" height="15" fill="rgb(220,31,8)" fg:x="1097" fg:w="1"/><text x="88.6465%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="88.4770%" y="645" width="0.0806%" height="15" fill="rgb(220,185,15)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="88.4770%" y="629" width="0.0806%" height="15" fill="rgb(247,190,50)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="88.4770%" y="613" width="0.0806%" height="15" fill="rgb(239,173,47)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4770%" y="597" width="0.0806%" height="15" fill="rgb(218,190,42)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4770%" y="581" width="0.0806%" height="15" fill="rgb(251,207,16)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="88.5576%" y="629" width="0.0806%" height="15" fill="rgb(222,199,47)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="88.5576%" y="613" width="0.0806%" height="15" fill="rgb(245,190,7)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.5576%" y="597" width="0.0806%" height="15" fill="rgb(239,85,38)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.5576%" y="581" width="0.0806%" height="15" fill="rgb(229,69,51)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.5576%" y="565" width="0.0806%" height="15" fill="rgb(231,104,51)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5576%" y="549" width="0.0806%" height="15" fill="rgb(235,49,4)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5576%" y="533" width="0.0806%" height="15" fill="rgb(246,166,20)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5576%" y="517" width="0.0806%" height="15" fill="rgb(230,119,37)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5576%" y="501" width="0.0806%" height="15" fill="rgb(234,77,34)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.5576%" y="485" width="0.0806%" height="15" fill="rgb(211,222,33)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.5576%" y="469" width="0.0806%" height="15" fill="rgb(226,45,42)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.5576%" y="453" width="0.0806%" height="15" fill="rgb(215,174,28)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.5576%" y="437" width="0.0806%" height="15" fill="rgb(254,173,49)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.5576%" y="421" width="0.0806%" height="15" fill="rgb(229,191,6)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.5576%" y="405" width="0.0806%" height="15" fill="rgb(212,145,22)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.5576%" y="389" width="0.0806%" height="15" fill="rgb(226,6,51)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.5576%" y="373" width="0.0806%" height="15" fill="rgb(227,128,8)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.5576%" y="357" width="0.0806%" height="15" fill="rgb(205,24,10)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.5576%" y="341" width="0.0806%" height="15" fill="rgb(217,147,27)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.5576%" y="325" width="0.0806%" height="15" fill="rgb(250,82,42)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5576%" y="309" width="0.0806%" height="15" fill="rgb(248,93,17)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6382%" y="533" width="0.0806%" height="15" fill="rgb(254,212,40)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6382%" y="517" width="0.0806%" height="15" fill="rgb(229,209,2)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.6382%" y="581" width="0.1612%" height="15" fill="rgb(211,50,43)" fg:x="1100" fg:w="2"/><text x="88.8882%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.6382%" y="565" width="0.1612%" height="15" fill="rgb(245,196,29)" fg:x="1100" fg:w="2"/><text x="88.8882%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.6382%" y="549" width="0.1612%" height="15" fill="rgb(216,132,13)" fg:x="1100" fg:w="2"/><text x="88.8882%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.7188%" y="533" width="0.0806%" height="15" fill="rgb(251,108,21)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7188%" y="517" width="0.0806%" height="15" fill="rgb(229,174,54)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.7188%" y="501" width="0.0806%" height="15" fill="rgb(211,175,47)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7188%" y="485" width="0.0806%" height="15" fill="rgb(234,5,37)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.7188%" y="469" width="0.0806%" height="15" fill="rgb(244,150,43)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7188%" y="453" width="0.0806%" height="15" fill="rgb(242,172,38)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="463.50"></text></g><g><title>plugins_core::build::Build::occupying (5 samples, 0.40%)</title><rect x="88.4770%" y="661" width="0.4029%" height="15" fill="rgb(205,27,8)" fg:x="1098" fg:w="5"/><text x="88.7270%" y="671.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.32%)</title><rect x="88.5576%" y="645" width="0.3223%" height="15" fill="rgb(217,57,3)" fg:x="1099" fg:w="4"/><text x="88.8076%" y="655.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="88.6382%" y="629" width="0.2417%" height="15" fill="rgb(242,21,38)" fg:x="1100" fg:w="3"/><text x="88.8882%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="88.6382%" y="613" width="0.2417%" height="15" fill="rgb(209,64,43)" fg:x="1100" fg:w="3"/><text x="88.8882%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="88.6382%" y="597" width="0.2417%" height="15" fill="rgb(222,2,46)" fg:x="1100" fg:w="3"/><text x="88.8882%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.7994%" y="581" width="0.0806%" height="15" fill="rgb(218,19,44)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.7994%" y="565" width="0.0806%" height="15" fill="rgb(240,203,42)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.7994%" y="549" width="0.0806%" height="15" fill="rgb(229,23,45)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.7994%" y="533" width="0.0806%" height="15" fill="rgb(205,228,51)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.7994%" y="517" width="0.0806%" height="15" fill="rgb(239,36,20)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.7994%" y="501" width="0.0806%" height="15" fill="rgb(248,172,27)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.8799%" y="597" width="0.0806%" height="15" fill="rgb(244,55,32)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.8799%" y="581" width="0.0806%" height="15" fill="rgb(215,97,16)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.8799%" y="565" width="0.0806%" height="15" fill="rgb(224,80,29)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.8799%" y="549" width="0.0806%" height="15" fill="rgb(216,93,47)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8799%" y="533" width="0.0806%" height="15" fill="rgb(238,159,10)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.8799%" y="517" width="0.0806%" height="15" fill="rgb(223,98,29)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8799%" y="501" width="0.0806%" height="15" fill="rgb(210,176,23)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.8799%" y="485" width="0.0806%" height="15" fill="rgb(242,162,27)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8799%" y="469" width="0.0806%" height="15" fill="rgb(245,109,32)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.8799%" y="453" width="0.0806%" height="15" fill="rgb(248,87,8)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8799%" y="437" width="0.0806%" height="15" fill="rgb(250,160,50)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.8799%" y="421" width="0.0806%" height="15" fill="rgb(246,165,25)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8799%" y="405" width="0.0806%" height="15" fill="rgb(249,219,3)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9605%" y="565" width="0.0806%" height="15" fill="rgb(226,66,5)" fg:x="1104" fg:w="1"/><text x="89.2105%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="88.8799%" y="645" width="0.2417%" height="15" fill="rgb(250,220,43)" fg:x="1103" fg:w="3"/><text x="89.1299%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="88.8799%" y="629" width="0.2417%" height="15" fill="rgb(225,111,31)" fg:x="1103" fg:w="3"/><text x="89.1299%" y="639.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="88.8799%" y="613" width="0.2417%" height="15" fill="rgb(248,106,18)" fg:x="1103" fg:w="3"/><text x="89.1299%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="88.9605%" y="597" width="0.1612%" height="15" fill="rgb(220,226,45)" fg:x="1104" fg:w="2"/><text x="89.2105%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="88.9605%" y="581" width="0.1612%" height="15" fill="rgb(208,58,53)" fg:x="1104" fg:w="2"/><text x="89.2105%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="89.0411%" y="565" width="0.0806%" height="15" fill="rgb(209,133,1)" fg:x="1105" fg:w="1"/><text x="89.2911%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.0411%" y="549" width="0.0806%" height="15" fill="rgb(228,216,27)" fg:x="1105" fg:w="1"/><text x="89.2911%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.0411%" y="533" width="0.0806%" height="15" fill="rgb(238,155,2)" fg:x="1105" fg:w="1"/><text x="89.2911%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.0411%" y="517" width="0.0806%" height="15" fill="rgb(244,99,37)" fg:x="1105" fg:w="1"/><text x="89.2911%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0411%" y="501" width="0.0806%" height="15" fill="rgb(254,32,3)" fg:x="1105" fg:w="1"/><text x="89.2911%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="89.1217%" y="645" width="0.0806%" height="15" fill="rgb(234,46,50)" fg:x="1106" fg:w="1"/><text x="89.3717%" y="655.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (103 samples, 8.30%)</title><rect x="80.9831%" y="677" width="8.2998%" height="15" fill="rgb(232,118,51)" fg:x="1005" fg:w="103"/><text x="81.2331%" y="687.50">plugins_core..</text></g><g><title>plugins_core::build::Build::with_username (5 samples, 0.40%)</title><rect x="88.8799%" y="661" width="0.4029%" height="15" fill="rgb(207,24,32)" fg:x="1103" fg:w="5"/><text x="89.1299%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2023%" y="645" width="0.0806%" height="15" fill="rgb(208,107,43)" fg:x="1107" fg:w="1"/><text x="89.4523%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="89.2828%" y="661" width="0.0806%" height="15" fill="rgb(231,28,9)" fg:x="1108" fg:w="1"/><text x="89.5328%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3634%" y="549" width="0.0806%" height="15" fill="rgb(241,204,15)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="89.3634%" y="597" width="0.1612%" height="15" fill="rgb(214,54,15)" fg:x="1109" fg:w="2"/><text x="89.6134%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="89.3634%" y="581" width="0.1612%" height="15" fill="rgb(230,12,28)" fg:x="1109" fg:w="2"/><text x="89.6134%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.3634%" y="565" width="0.1612%" height="15" fill="rgb(221,171,5)" fg:x="1109" fg:w="2"/><text x="89.6134%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4440%" y="549" width="0.0806%" height="15" fill="rgb(207,72,25)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4440%" y="533" width="0.0806%" height="15" fill="rgb(249,79,37)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4440%" y="517" width="0.0806%" height="15" fill="rgb(209,98,49)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4440%" y="501" width="0.0806%" height="15" fill="rgb(221,62,13)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.4440%" y="485" width="0.0806%" height="15" fill="rgb(223,39,6)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4440%" y="469" width="0.0806%" height="15" fill="rgb(246,163,20)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4440%" y="453" width="0.0806%" height="15" fill="rgb(211,111,29)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4440%" y="437" width="0.0806%" height="15" fill="rgb(243,118,5)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.5246%" y="581" width="0.0806%" height="15" fill="rgb(240,144,52)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.5246%" y="565" width="0.0806%" height="15" fill="rgb(244,158,36)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.5246%" y="549" width="0.0806%" height="15" fill="rgb(241,109,37)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.5246%" y="533" width="0.0806%" height="15" fill="rgb(213,95,32)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="543.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="89.3634%" y="613" width="0.3223%" height="15" fill="rgb(252,193,9)" fg:x="1109" fg:w="4"/><text x="89.6134%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="89.5246%" y="597" width="0.1612%" height="15" fill="rgb(225,213,21)" fg:x="1111" fg:w="2"/><text x="89.7746%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="89.6052%" y="581" width="0.0806%" height="15" fill="rgb(220,172,46)" fg:x="1112" fg:w="1"/><text x="89.8552%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="89.6052%" y="565" width="0.0806%" height="15" fill="rgb(235,75,41)" fg:x="1112" fg:w="1"/><text x="89.8552%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="89.3634%" y="645" width="0.4029%" height="15" fill="rgb(213,86,9)" fg:x="1109" fg:w="5"/><text x="89.6134%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="89.3634%" y="629" width="0.4029%" height="15" fill="rgb(238,127,51)" fg:x="1109" fg:w="5"/><text x="89.6134%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="89.6857%" y="613" width="0.0806%" height="15" fill="rgb(215,2,54)" fg:x="1113" fg:w="1"/><text x="89.9357%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.6857%" y="597" width="0.0806%" height="15" fill="rgb(245,80,6)" fg:x="1113" fg:w="1"/><text x="89.9357%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.6857%" y="581" width="0.0806%" height="15" fill="rgb(233,106,42)" fg:x="1113" fg:w="1"/><text x="89.9357%" y="591.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (171 samples, 13.78%)</title><rect x="76.0677%" y="693" width="13.7792%" height="15" fill="rgb(244,86,38)" fg:x="944" fg:w="171"/><text x="76.3177%" y="703.50">&lt;tests::HoldingKeyInV..</text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.56%)</title><rect x="89.2828%" y="677" width="0.5641%" height="15" fill="rgb(242,167,7)" fg:x="1108" fg:w="7"/><text x="89.5328%" y="687.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="89.3634%" y="661" width="0.4835%" height="15" fill="rgb(218,216,3)" fg:x="1109" fg:w="6"/><text x="89.6134%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="89.7663%" y="645" width="0.0806%" height="15" fill="rgb(206,136,36)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="89.7663%" y="629" width="0.0806%" height="15" fill="rgb(206,206,15)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="89.7663%" y="613" width="0.0806%" height="15" fill="rgb(207,163,34)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="89.7663%" y="597" width="0.0806%" height="15" fill="rgb(240,127,22)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="89.7663%" y="581" width="0.0806%" height="15" fill="rgb(227,49,5)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.7663%" y="565" width="0.0806%" height="15" fill="rgb(231,8,6)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="89.7663%" y="549" width="0.0806%" height="15" fill="rgb(223,21,24)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.7663%" y="533" width="0.0806%" height="15" fill="rgb(244,44,52)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="89.7663%" y="517" width="0.0806%" height="15" fill="rgb(207,73,28)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7663%" y="501" width="0.0806%" height="15" fill="rgb(234,215,10)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="89.8469%" y="693" width="0.0806%" height="15" fill="rgb(236,85,3)" fg:x="1115" fg:w="1"/><text x="90.0969%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8469%" y="677" width="0.0806%" height="15" fill="rgb(236,102,39)" fg:x="1115" fg:w="1"/><text x="90.0969%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="89.9275%" y="693" width="0.0806%" height="15" fill="rgb(243,50,8)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="89.9275%" y="677" width="0.0806%" height="15" fill="rgb(207,111,4)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="90.0081%" y="661" width="0.0806%" height="15" fill="rgb(230,52,42)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0081%" y="645" width="0.0806%" height="15" fill="rgb(252,178,50)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="90.0886%" y="645" width="0.0806%" height="15" fill="rgb(234,46,35)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.0886%" y="629" width="0.0806%" height="15" fill="rgb(228,69,37)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.0886%" y="613" width="0.0806%" height="15" fill="rgb(221,21,11)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3304%" y="549" width="0.0806%" height="15" fill="rgb(223,56,9)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3304%" y="533" width="0.0806%" height="15" fill="rgb(234,30,19)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.3304%" y="517" width="0.0806%" height="15" fill="rgb(211,64,54)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.3304%" y="501" width="0.0806%" height="15" fill="rgb(250,189,5)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.3304%" y="485" width="0.0806%" height="15" fill="rgb(214,180,13)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.3304%" y="469" width="0.0806%" height="15" fill="rgb(238,40,40)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3304%" y="453" width="0.0806%" height="15" fill="rgb(214,101,38)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.3304%" y="629" width="0.1612%" height="15" fill="rgb(242,65,53)" fg:x="1121" fg:w="2"/><text x="90.5804%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.3304%" y="613" width="0.1612%" height="15" fill="rgb(230,22,45)" fg:x="1121" fg:w="2"/><text x="90.5804%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="90.3304%" y="597" width="0.1612%" height="15" fill="rgb(223,77,1)" fg:x="1121" fg:w="2"/><text x="90.5804%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="90.3304%" y="581" width="0.1612%" height="15" fill="rgb(227,33,37)" fg:x="1121" fg:w="2"/><text x="90.5804%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="90.3304%" y="565" width="0.1612%" height="15" fill="rgb(224,148,39)" fg:x="1121" fg:w="2"/><text x="90.5804%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.4110%" y="549" width="0.0806%" height="15" fill="rgb(232,212,39)" fg:x="1122" fg:w="1"/><text x="90.6610%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.4110%" y="533" width="0.0806%" height="15" fill="rgb(251,172,7)" fg:x="1122" fg:w="1"/><text x="90.6610%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="90.4915%" y="613" width="0.4835%" height="15" fill="rgb(219,39,9)" fg:x="1123" fg:w="6"/><text x="90.7415%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="90.6527%" y="597" width="0.3223%" height="15" fill="rgb(228,118,14)" fg:x="1125" fg:w="4"/><text x="90.9027%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="90.7333%" y="581" width="0.2417%" height="15" fill="rgb(207,140,10)" fg:x="1126" fg:w="3"/><text x="90.9833%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="90.7333%" y="565" width="0.2417%" height="15" fill="rgb(227,111,53)" fg:x="1126" fg:w="3"/><text x="90.9833%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="90.8139%" y="549" width="0.1612%" height="15" fill="rgb(216,165,16)" fg:x="1127" fg:w="2"/><text x="91.0639%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.8944%" y="533" width="0.0806%" height="15" fill="rgb(226,111,18)" fg:x="1128" fg:w="1"/><text x="91.1444%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.8944%" y="517" width="0.0806%" height="15" fill="rgb(251,27,17)" fg:x="1128" fg:w="1"/><text x="91.1444%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.8944%" y="501" width="0.0806%" height="15" fill="rgb(254,69,9)" fg:x="1128" fg:w="1"/><text x="91.1444%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.9750%" y="597" width="0.1612%" height="15" fill="rgb(234,140,37)" fg:x="1129" fg:w="2"/><text x="91.2250%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.0556%" y="581" width="0.0806%" height="15" fill="rgb(220,93,8)" fg:x="1130" fg:w="1"/><text x="91.3056%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.0556%" y="565" width="0.0806%" height="15" fill="rgb(236,113,3)" fg:x="1130" fg:w="1"/><text x="91.3056%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.0556%" y="549" width="0.0806%" height="15" fill="rgb(234,108,23)" fg:x="1130" fg:w="1"/><text x="91.3056%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.1362%" y="581" width="0.0806%" height="15" fill="rgb(205,114,34)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="91.1362%" y="565" width="0.0806%" height="15" fill="rgb(236,200,45)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.1362%" y="549" width="0.0806%" height="15" fill="rgb(227,194,29)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.1362%" y="533" width="0.0806%" height="15" fill="rgb(250,76,42)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.1362%" y="517" width="0.0806%" height="15" fill="rgb(208,128,8)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.3779%" y="549" width="0.0806%" height="15" fill="rgb(229,209,35)" fg:x="1134" fg:w="1"/><text x="91.6279%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.3779%" y="533" width="0.0806%" height="15" fill="rgb(215,39,53)" fg:x="1134" fg:w="1"/><text x="91.6279%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="91.6197%" y="533" width="0.1612%" height="15" fill="rgb(219,123,41)" fg:x="1137" fg:w="2"/><text x="91.8697%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.6197%" y="517" width="0.1612%" height="15" fill="rgb(212,158,18)" fg:x="1137" fg:w="2"/><text x="91.8697%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.6197%" y="501" width="0.1612%" height="15" fill="rgb(234,196,53)" fg:x="1137" fg:w="2"/><text x="91.8697%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="91.6197%" y="485" width="0.1612%" height="15" fill="rgb(210,139,12)" fg:x="1137" fg:w="2"/><text x="91.8697%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="91.4585%" y="549" width="0.4029%" height="15" fill="rgb(220,116,54)" fg:x="1135" fg:w="5"/><text x="91.7085%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="91.7808%" y="533" width="0.0806%" height="15" fill="rgb(247,103,28)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.7808%" y="517" width="0.0806%" height="15" fill="rgb(253,156,45)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.7808%" y="501" width="0.0806%" height="15" fill="rgb(237,157,52)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="91.1362%" y="597" width="0.8864%" height="15" fill="rgb(253,112,16)" fg:x="1131" fg:w="11"/><text x="91.3862%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="91.2168%" y="581" width="0.8058%" height="15" fill="rgb(234,70,18)" fg:x="1132" fg:w="10"/><text x="91.4668%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="91.2168%" y="565" width="0.8058%" height="15" fill="rgb(247,138,19)" fg:x="1132" fg:w="10"/><text x="91.4668%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.8614%" y="549" width="0.1612%" height="15" fill="rgb(207,171,1)" fg:x="1140" fg:w="2"/><text x="92.1114%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.9420%" y="533" width="0.0806%" height="15" fill="rgb(239,213,3)" fg:x="1141" fg:w="1"/><text x="92.1920%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.0226%" y="565" width="0.0806%" height="15" fill="rgb(226,112,4)" fg:x="1142" fg:w="1"/><text x="92.2726%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.0226%" y="549" width="0.0806%" height="15" fill="rgb(252,170,12)" fg:x="1142" fg:w="1"/><text x="92.2726%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.0226%" y="533" width="0.0806%" height="15" fill="rgb(241,106,13)" fg:x="1142" fg:w="1"/><text x="92.2726%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.0226%" y="517" width="0.0806%" height="15" fill="rgb(225,73,23)" fg:x="1142" fg:w="1"/><text x="92.2726%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="90.9750%" y="613" width="1.2087%" height="15" fill="rgb(251,227,29)" fg:x="1129" fg:w="15"/><text x="91.2250%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.0226%" y="597" width="0.1612%" height="15" fill="rgb(237,144,13)" fg:x="1142" fg:w="2"/><text x="92.2726%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="92.0226%" y="581" width="0.1612%" height="15" fill="rgb(232,106,46)" fg:x="1142" fg:w="2"/><text x="92.2726%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="92.1031%" y="565" width="0.0806%" height="15" fill="rgb(245,154,53)" fg:x="1143" fg:w="1"/><text x="92.3531%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.77%)</title><rect x="90.4915%" y="629" width="1.7728%" height="15" fill="rgb(212,119,47)" fg:x="1123" fg:w="22"/><text x="90.7415%" y="639.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.1837%" y="613" width="0.0806%" height="15" fill="rgb(253,135,25)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.1837%" y="597" width="0.0806%" height="15" fill="rgb(253,208,39)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.1837%" y="581" width="0.0806%" height="15" fill="rgb(226,64,12)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.1837%" y="565" width="0.0806%" height="15" fill="rgb(214,162,37)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.1837%" y="549" width="0.0806%" height="15" fill="rgb(250,104,5)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.3449%" y="597" width="0.0806%" height="15" fill="rgb(220,202,50)" fg:x="1146" fg:w="1"/><text x="92.5949%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4255%" y="581" width="0.0806%" height="15" fill="rgb(248,67,38)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.5060%" y="581" width="0.0806%" height="15" fill="rgb(242,94,35)" fg:x="1148" fg:w="1"/><text x="92.7560%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.5866%" y="549" width="0.0806%" height="15" fill="rgb(209,78,37)" fg:x="1149" fg:w="1"/><text x="92.8366%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="92.6672%" y="549" width="0.0806%" height="15" fill="rgb(230,126,47)" fg:x="1150" fg:w="1"/><text x="92.9172%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="92.6672%" y="533" width="0.0806%" height="15" fill="rgb(222,110,35)" fg:x="1150" fg:w="1"/><text x="92.9172%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.6672%" y="517" width="0.0806%" height="15" fill="rgb(233,154,20)" fg:x="1150" fg:w="1"/><text x="92.9172%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.7478%" y="533" width="0.0806%" height="15" fill="rgb(223,53,50)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7478%" y="517" width="0.0806%" height="15" fill="rgb(251,27,26)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.8284%" y="517" width="0.0806%" height="15" fill="rgb(223,189,16)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="92.2643%" y="629" width="0.7252%" height="15" fill="rgb(207,5,54)" fg:x="1145" fg:w="9"/><text x="92.5143%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="92.2643%" y="613" width="0.7252%" height="15" fill="rgb(254,124,50)" fg:x="1145" fg:w="9"/><text x="92.5143%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="92.4255%" y="597" width="0.5641%" height="15" fill="rgb(253,193,24)" fg:x="1147" fg:w="7"/><text x="92.6755%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="92.5866%" y="581" width="0.4029%" height="15" fill="rgb(235,170,24)" fg:x="1149" fg:w="5"/><text x="92.8366%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="92.5866%" y="565" width="0.4029%" height="15" fill="rgb(222,212,52)" fg:x="1149" fg:w="5"/><text x="92.8366%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="92.7478%" y="549" width="0.2417%" height="15" fill="rgb(223,17,45)" fg:x="1151" fg:w="3"/><text x="92.9978%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="92.8284%" y="533" width="0.1612%" height="15" fill="rgb(227,103,26)" fg:x="1152" fg:w="2"/><text x="93.0784%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.9089%" y="517" width="0.0806%" height="15" fill="rgb(251,151,25)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.9089%" y="501" width="0.0806%" height="15" fill="rgb(248,144,29)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="92.9089%" y="485" width="0.0806%" height="15" fill="rgb(245,97,16)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.0701%" y="565" width="0.0806%" height="15" fill="rgb(220,200,29)" fg:x="1155" fg:w="1"/><text x="93.3201%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.1507%" y="549" width="0.0806%" height="15" fill="rgb(206,38,29)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="92.9895%" y="597" width="0.3223%" height="15" fill="rgb(245,19,52)" fg:x="1154" fg:w="4"/><text x="93.2395%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="92.9895%" y="581" width="0.3223%" height="15" fill="rgb(205,67,43)" fg:x="1154" fg:w="4"/><text x="93.2395%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="93.1507%" y="565" width="0.1612%" height="15" fill="rgb(217,128,23)" fg:x="1156" fg:w="2"/><text x="93.4007%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2313%" y="549" width="0.0806%" height="15" fill="rgb(210,109,28)" fg:x="1157" fg:w="1"/><text x="93.4813%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.2313%" y="533" width="0.0806%" height="15" fill="rgb(233,181,7)" fg:x="1157" fg:w="1"/><text x="93.4813%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="93.3118%" y="533" width="0.0806%" height="15" fill="rgb(244,11,22)" fg:x="1158" fg:w="1"/><text x="93.5618%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.3118%" y="517" width="0.0806%" height="15" fill="rgb(205,124,54)" fg:x="1158" fg:w="1"/><text x="93.5618%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (6 samples, 0.48%)</title><rect x="92.9895%" y="613" width="0.4835%" height="15" fill="rgb(218,21,27)" fg:x="1154" fg:w="6"/><text x="93.2395%" y="623.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="93.3118%" y="597" width="0.1612%" height="15" fill="rgb(224,153,33)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.3118%" y="581" width="0.1612%" height="15" fill="rgb(240,219,28)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.3118%" y="565" width="0.1612%" height="15" fill="rgb(214,80,29)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.3118%" y="549" width="0.1612%" height="15" fill="rgb(247,148,44)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.3924%" y="533" width="0.0806%" height="15" fill="rgb(243,110,30)" fg:x="1159" fg:w="1"/><text x="93.6424%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.3924%" y="517" width="0.0806%" height="15" fill="rgb(243,173,41)" fg:x="1159" fg:w="1"/><text x="93.6424%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5536%" y="581" width="0.0806%" height="15" fill="rgb(225,160,47)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6342%" y="581" width="0.0806%" height="15" fill="rgb(215,44,21)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6342%" y="565" width="0.0806%" height="15" fill="rgb(248,90,3)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="93.6342%" y="549" width="0.0806%" height="15" fill="rgb(220,196,49)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="93.7147%" y="581" width="0.0806%" height="15" fill="rgb(217,138,14)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.7147%" y="565" width="0.0806%" height="15" fill="rgb(219,111,20)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7147%" y="549" width="0.0806%" height="15" fill="rgb(218,114,4)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7147%" y="533" width="0.0806%" height="15" fill="rgb(238,133,3)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7147%" y="517" width="0.0806%" height="15" fill="rgb(224,95,0)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="93.7953%" y="581" width="0.0806%" height="15" fill="rgb(220,169,35)" fg:x="1164" fg:w="1"/><text x="94.0453%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.7953%" y="565" width="0.0806%" height="15" fill="rgb(242,116,47)" fg:x="1164" fg:w="1"/><text x="94.0453%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8759%" y="549" width="0.0806%" height="15" fill="rgb(251,42,20)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="93.8759%" y="581" width="0.1612%" height="15" fill="rgb(234,7,34)" fg:x="1165" fg:w="2"/><text x="94.1259%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="93.8759%" y="565" width="0.1612%" height="15" fill="rgb(243,208,13)" fg:x="1165" fg:w="2"/><text x="94.1259%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.9565%" y="549" width="0.0806%" height="15" fill="rgb(227,33,28)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="94.2788%" y="517" width="0.0806%" height="15" fill="rgb(250,47,37)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.4400%" y="437" width="0.1612%" height="15" fill="rgb(235,111,52)" fg:x="1172" fg:w="2"/><text x="94.6900%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.4400%" y="421" width="0.1612%" height="15" fill="rgb(223,64,28)" fg:x="1172" fg:w="2"/><text x="94.6900%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5205%" y="405" width="0.0806%" height="15" fill="rgb(236,67,22)" fg:x="1173" fg:w="1"/><text x="94.7705%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6817%" y="405" width="0.0806%" height="15" fill="rgb(243,79,24)" fg:x="1175" fg:w="1"/><text x="94.9317%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6817%" y="389" width="0.0806%" height="15" fill="rgb(241,225,22)" fg:x="1175" fg:w="1"/><text x="94.9317%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6817%" y="373" width="0.0806%" height="15" fill="rgb(228,214,26)" fg:x="1175" fg:w="1"/><text x="94.9317%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.37%)</title><rect x="93.4730%" y="613" width="1.3699%" height="15" fill="rgb(219,84,52)" fg:x="1160" fg:w="17"/><text x="93.7230%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.37%)</title><rect x="93.4730%" y="597" width="1.3699%" height="15" fill="rgb(220,12,22)" fg:x="1160" fg:w="17"/><text x="93.7230%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.81%)</title><rect x="94.0371%" y="581" width="0.8058%" height="15" fill="rgb(219,9,49)" fg:x="1167" fg:w="10"/><text x="94.2871%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.73%)</title><rect x="94.1176%" y="565" width="0.7252%" height="15" fill="rgb(237,40,43)" fg:x="1168" fg:w="9"/><text x="94.3676%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="94.1176%" y="549" width="0.7252%" height="15" fill="rgb(212,189,32)" fg:x="1168" fg:w="9"/><text x="94.3676%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="94.2788%" y="533" width="0.5641%" height="15" fill="rgb(247,48,9)" fg:x="1170" fg:w="7"/><text x="94.5288%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="94.3594%" y="517" width="0.4835%" height="15" fill="rgb(247,112,3)" fg:x="1171" fg:w="6"/><text x="94.6094%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="94.4400%" y="501" width="0.4029%" height="15" fill="rgb(243,110,18)" fg:x="1172" fg:w="5"/><text x="94.6900%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="94.4400%" y="485" width="0.4029%" height="15" fill="rgb(233,223,44)" fg:x="1172" fg:w="5"/><text x="94.6900%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="94.4400%" y="469" width="0.4029%" height="15" fill="rgb(245,160,20)" fg:x="1172" fg:w="5"/><text x="94.6900%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="94.4400%" y="453" width="0.4029%" height="15" fill="rgb(225,37,1)" fg:x="1172" fg:w="5"/><text x="94.6900%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="94.6011%" y="437" width="0.2417%" height="15" fill="rgb(253,227,39)" fg:x="1174" fg:w="3"/><text x="94.8511%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="94.6817%" y="421" width="0.1612%" height="15" fill="rgb(240,179,26)" fg:x="1175" fg:w="2"/><text x="94.9317%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="94.7623%" y="405" width="0.0806%" height="15" fill="rgb(237,212,23)" fg:x="1176" fg:w="1"/><text x="95.0123%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.1652%" y="389" width="0.0806%" height="15" fill="rgb(221,38,11)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1652%" y="373" width="0.0806%" height="15" fill="rgb(215,85,6)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="95.0040%" y="453" width="0.3223%" height="15" fill="rgb(239,64,14)" fg:x="1179" fg:w="4"/><text x="95.2540%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.0846%" y="437" width="0.2417%" height="15" fill="rgb(215,150,32)" fg:x="1180" fg:w="3"/><text x="95.3346%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.0846%" y="421" width="0.2417%" height="15" fill="rgb(238,15,13)" fg:x="1180" fg:w="3"/><text x="95.3346%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.0846%" y="405" width="0.2417%" height="15" fill="rgb(251,87,8)" fg:x="1180" fg:w="3"/><text x="95.3346%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.2458%" y="389" width="0.0806%" height="15" fill="rgb(206,86,1)" fg:x="1182" fg:w="1"/><text x="95.4958%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2458%" y="373" width="0.0806%" height="15" fill="rgb(208,151,45)" fg:x="1182" fg:w="1"/><text x="95.4958%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.3263%" y="453" width="0.0806%" height="15" fill="rgb(231,181,24)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="94.9234%" y="485" width="0.5641%" height="15" fill="rgb(240,106,29)" fg:x="1178" fg:w="7"/><text x="95.1734%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="95.0040%" y="469" width="0.4835%" height="15" fill="rgb(227,166,11)" fg:x="1179" fg:w="6"/><text x="95.2540%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4069%" y="453" width="0.0806%" height="15" fill="rgb(254,14,34)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4069%" y="437" width="0.0806%" height="15" fill="rgb(223,222,6)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4069%" y="421" width="0.0806%" height="15" fill="rgb(245,69,24)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="94.9234%" y="517" width="0.6446%" height="15" fill="rgb(213,193,7)" fg:x="1178" fg:w="8"/><text x="95.1734%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="94.9234%" y="501" width="0.6446%" height="15" fill="rgb(237,92,51)" fg:x="1178" fg:w="8"/><text x="95.1734%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.4875%" y="485" width="0.0806%" height="15" fill="rgb(225,194,6)" fg:x="1185" fg:w="1"/><text x="95.7375%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.4875%" y="469" width="0.0806%" height="15" fill="rgb(205,159,49)" fg:x="1185" fg:w="1"/><text x="95.7375%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="94.9234%" y="549" width="0.7252%" height="15" fill="rgb(219,69,2)" fg:x="1178" fg:w="9"/><text x="95.1734%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="94.9234%" y="533" width="0.7252%" height="15" fill="rgb(215,107,24)" fg:x="1178" fg:w="9"/><text x="95.1734%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5681%" y="517" width="0.0806%" height="15" fill="rgb(249,208,29)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="95.6487%" y="549" width="0.1612%" height="15" fill="rgb(213,147,10)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7293%" y="533" width="0.0806%" height="15" fill="rgb(254,140,42)" fg:x="1188" fg:w="1"/><text x="95.9793%" y="543.50"></text></g><g><title>engine::session::Session::close (74 samples, 5.96%)</title><rect x="90.0081%" y="693" width="5.9629%" height="15" fill="rgb(249,9,15)" fg:x="1117" fg:w="74"/><text x="90.2581%" y="703.50">engine::..</text></g><g><title>engine::session::Session::save_entity_changes (74 samples, 5.96%)</title><rect x="90.0081%" y="677" width="5.9629%" height="15" fill="rgb(210,19,33)" fg:x="1117" fg:w="74"/><text x="90.2581%" y="687.50">engine::..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (73 samples, 5.88%)</title><rect x="90.0886%" y="661" width="5.8824%" height="15" fill="rgb(241,121,22)" fg:x="1118" fg:w="73"/><text x="90.3386%" y="671.50">engine:..</text></g><g><title>engine::session::SavesEntities::check_for_changes (72 samples, 5.80%)</title><rect x="90.1692%" y="645" width="5.8018%" height="15" fill="rgb(244,69,52)" fg:x="1119" fg:w="72"/><text x="90.4192%" y="655.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (37 samples, 2.98%)</title><rect x="92.9895%" y="629" width="2.9815%" height="15" fill="rgb(244,191,54)" fg:x="1154" fg:w="37"/><text x="93.2395%" y="639.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (14 samples, 1.13%)</title><rect x="94.8429%" y="613" width="1.1281%" height="15" fill="rgb(250,3,53)" fg:x="1177" fg:w="14"/><text x="95.0929%" y="623.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.13%)</title><rect x="94.8429%" y="597" width="1.1281%" height="15" fill="rgb(205,77,3)" fg:x="1177" fg:w="14"/><text x="95.0929%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.13%)</title><rect x="94.8429%" y="581" width="1.1281%" height="15" fill="rgb(207,155,3)" fg:x="1177" fg:w="14"/><text x="95.0929%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.13%)</title><rect x="94.8429%" y="565" width="1.1281%" height="15" fill="rgb(224,79,2)" fg:x="1177" fg:w="14"/><text x="95.0929%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.8098%" y="549" width="0.1612%" height="15" fill="rgb(243,172,5)" fg:x="1189" fg:w="2"/><text x="96.0598%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.1322%" y="533" width="0.0806%" height="15" fill="rgb(217,23,43)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.2127%" y="533" width="0.0806%" height="15" fill="rgb(223,109,20)" fg:x="1194" fg:w="1"/><text x="96.4627%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2127%" y="517" width="0.0806%" height="15" fill="rgb(232,159,21)" fg:x="1194" fg:w="1"/><text x="96.4627%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.2933%" y="533" width="0.0806%" height="15" fill="rgb(219,58,2)" fg:x="1195" fg:w="1"/><text x="96.5433%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2933%" y="517" width="0.0806%" height="15" fill="rgb(241,56,8)" fg:x="1195" fg:w="1"/><text x="96.5433%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2933%" y="501" width="0.0806%" height="15" fill="rgb(249,10,27)" fg:x="1195" fg:w="1"/><text x="96.5433%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2933%" y="485" width="0.0806%" height="15" fill="rgb(248,177,5)" fg:x="1195" fg:w="1"/><text x="96.5433%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.3739%" y="517" width="0.0806%" height="15" fill="rgb(239,12,30)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="96.1322%" y="549" width="0.4835%" height="15" fill="rgb(229,164,25)" fg:x="1193" fg:w="6"/><text x="96.3822%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="96.3739%" y="533" width="0.2417%" height="15" fill="rgb(231,217,50)" fg:x="1196" fg:w="3"/><text x="96.6239%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="96.4545%" y="517" width="0.1612%" height="15" fill="rgb(247,99,32)" fg:x="1197" fg:w="2"/><text x="96.7045%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="96.4545%" y="501" width="0.1612%" height="15" fill="rgb(240,74,50)" fg:x="1197" fg:w="2"/><text x="96.7045%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="96.4545%" y="485" width="0.1612%" height="15" fill="rgb(218,54,8)" fg:x="1197" fg:w="2"/><text x="96.7045%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.6156%" y="533" width="0.0806%" height="15" fill="rgb(227,132,20)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="96.6156%" y="549" width="0.1612%" height="15" fill="rgb(232,134,12)" fg:x="1199" fg:w="2"/><text x="96.8656%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="96.6962%" y="533" width="0.0806%" height="15" fill="rgb(250,129,18)" fg:x="1200" fg:w="1"/><text x="96.9462%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.6962%" y="517" width="0.0806%" height="15" fill="rgb(232,129,47)" fg:x="1200" fg:w="1"/><text x="96.9462%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.7768%" y="453" width="0.1612%" height="15" fill="rgb(230,31,40)" fg:x="1201" fg:w="2"/><text x="97.0268%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8574%" y="437" width="0.0806%" height="15" fill="rgb(232,126,10)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.9380%" y="453" width="0.1612%" height="15" fill="rgb(205,46,31)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.9380%" y="437" width="0.1612%" height="15" fill="rgb(232,37,37)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="96.9380%" y="421" width="0.1612%" height="15" fill="rgb(240,91,16)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="96.9380%" y="405" width="0.1612%" height="15" fill="rgb(224,160,9)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="96.9380%" y="389" width="0.1612%" height="15" fill="rgb(215,116,14)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="96.9380%" y="373" width="0.1612%" height="15" fill="rgb(235,46,36)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="96.9380%" y="357" width="0.1612%" height="15" fill="rgb(238,39,28)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="96.9380%" y="341" width="0.1612%" height="15" fill="rgb(242,125,29)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="96.9380%" y="325" width="0.1612%" height="15" fill="rgb(238,211,30)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="96.9380%" y="309" width="0.1612%" height="15" fill="rgb(227,201,28)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="96.9380%" y="293" width="0.1612%" height="15" fill="rgb(238,77,29)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.9380%" y="277" width="0.1612%" height="15" fill="rgb(213,221,40)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="96.7768%" y="469" width="0.4029%" height="15" fill="rgb(226,220,44)" fg:x="1201" fg:w="5"/><text x="97.0268%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.0991%" y="453" width="0.0806%" height="15" fill="rgb(228,90,23)" fg:x="1205" fg:w="1"/><text x="97.3491%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="96.7768%" y="501" width="0.5641%" height="15" fill="rgb(235,72,29)" fg:x="1201" fg:w="7"/><text x="97.0268%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="96.7768%" y="485" width="0.5641%" height="15" fill="rgb(248,117,39)" fg:x="1201" fg:w="7"/><text x="97.0268%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.1797%" y="469" width="0.1612%" height="15" fill="rgb(225,43,28)" fg:x="1206" fg:w="2"/><text x="97.4297%" y="479.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (8 samples, 0.64%)</title><rect x="96.7768%" y="549" width="0.6446%" height="15" fill="rgb(240,93,4)" fg:x="1201" fg:w="8"/><text x="97.0268%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::modified (8 samples, 0.64%)</title><rect x="96.7768%" y="533" width="0.6446%" height="15" fill="rgb(234,178,27)" fg:x="1201" fg:w="8"/><text x="97.0268%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="96.7768%" y="517" width="0.6446%" height="15" fill="rgb(254,88,22)" fg:x="1201" fg:w="8"/><text x="97.0268%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3409%" y="501" width="0.0806%" height="15" fill="rgb(240,206,50)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3409%" y="485" width="0.0806%" height="15" fill="rgb(249,103,8)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.3409%" y="469" width="0.0806%" height="15" fill="rgb(241,178,36)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.3409%" y="453" width="0.0806%" height="15" fill="rgb(246,110,15)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.3409%" y="437" width="0.0806%" height="15" fill="rgb(207,14,43)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3409%" y="421" width="0.0806%" height="15" fill="rgb(253,219,19)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3409%" y="405" width="0.0806%" height="15" fill="rgb(216,126,5)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.3409%" y="389" width="0.0806%" height="15" fill="rgb(218,78,42)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.3409%" y="373" width="0.0806%" height="15" fill="rgb(215,154,40)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.3409%" y="357" width="0.0806%" height="15" fill="rgb(235,129,32)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.3409%" y="341" width="0.0806%" height="15" fill="rgb(218,51,8)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3409%" y="325" width="0.0806%" height="15" fill="rgb(245,48,4)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.5826%" y="405" width="0.0806%" height="15" fill="rgb(250,175,12)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.5826%" y="389" width="0.0806%" height="15" fill="rgb(237,95,40)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.5826%" y="373" width="0.0806%" height="15" fill="rgb(244,120,0)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.5826%" y="357" width="0.0806%" height="15" fill="rgb(241,19,42)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5826%" y="341" width="0.0806%" height="15" fill="rgb(217,174,48)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.5826%" y="325" width="0.0806%" height="15" fill="rgb(239,36,38)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5826%" y="309" width="0.0806%" height="15" fill="rgb(220,63,49)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.5826%" y="293" width="0.0806%" height="15" fill="rgb(240,101,13)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5826%" y="277" width="0.0806%" height="15" fill="rgb(209,184,51)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.5826%" y="261" width="0.0806%" height="15" fill="rgb(206,136,39)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5826%" y="245" width="0.0806%" height="15" fill="rgb(254,47,45)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.5826%" y="229" width="0.0806%" height="15" fill="rgb(252,103,20)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5826%" y="213" width="0.0806%" height="15" fill="rgb(230,69,12)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="97.5826%" y="437" width="0.1612%" height="15" fill="rgb(219,2,28)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="97.5826%" y="421" width="0.1612%" height="15" fill="rgb(210,9,12)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.6632%" y="405" width="0.0806%" height="15" fill="rgb(235,99,33)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="415.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="97.6632%" y="389" width="0.0806%" height="15" fill="rgb(230,11,38)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7438%" y="357" width="0.0806%" height="15" fill="rgb(217,129,0)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7438%" y="341" width="0.0806%" height="15" fill="rgb(222,198,4)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7438%" y="325" width="0.0806%" height="15" fill="rgb(246,170,27)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.7438%" y="437" width="0.1612%" height="15" fill="rgb(229,17,28)" fg:x="1213" fg:w="2"/><text x="97.9938%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.7438%" y="421" width="0.1612%" height="15" fill="rgb(233,198,48)" fg:x="1213" fg:w="2"/><text x="97.9938%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.7438%" y="405" width="0.1612%" height="15" fill="rgb(238,103,23)" fg:x="1213" fg:w="2"/><text x="97.9938%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.7438%" y="389" width="0.1612%" height="15" fill="rgb(206,91,41)" fg:x="1213" fg:w="2"/><text x="97.9938%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.7438%" y="373" width="0.1612%" height="15" fill="rgb(227,34,25)" fg:x="1213" fg:w="2"/><text x="97.9938%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8243%" y="357" width="0.0806%" height="15" fill="rgb(210,110,44)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0661%" y="309" width="0.0806%" height="15" fill="rgb(216,189,8)" fg:x="1217" fg:w="1"/><text x="98.3161%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0661%" y="293" width="0.0806%" height="15" fill="rgb(234,9,46)" fg:x="1217" fg:w="1"/><text x="98.3161%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.0661%" y="277" width="0.0806%" height="15" fill="rgb(251,200,5)" fg:x="1217" fg:w="1"/><text x="98.3161%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0661%" y="261" width="0.0806%" height="15" fill="rgb(238,165,37)" fg:x="1217" fg:w="1"/><text x="98.3161%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.1467%" y="277" width="0.0806%" height="15" fill="rgb(232,77,38)" fg:x="1218" fg:w="1"/><text x="98.3967%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="98.1467%" y="309" width="0.1612%" height="15" fill="rgb(253,179,33)" fg:x="1218" fg:w="2"/><text x="98.3967%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="98.1467%" y="293" width="0.1612%" height="15" fill="rgb(240,13,35)" fg:x="1218" fg:w="2"/><text x="98.3967%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.2272%" y="277" width="0.0806%" height="15" fill="rgb(242,150,49)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.2272%" y="261" width="0.0806%" height="15" fill="rgb(237,176,28)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="271.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.48%)</title><rect x="97.9049%" y="421" width="0.4835%" height="15" fill="rgb(214,176,33)" fg:x="1215" fg:w="6"/><text x="98.1549%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.48%)</title><rect x="97.9049%" y="405" width="0.4835%" height="15" fill="rgb(214,25,12)" fg:x="1215" fg:w="6"/><text x="98.1549%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="97.9855%" y="389" width="0.4029%" height="15" fill="rgb(238,190,20)" fg:x="1216" fg:w="5"/><text x="98.2355%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="97.9855%" y="373" width="0.4029%" height="15" fill="rgb(208,11,19)" fg:x="1216" fg:w="5"/><text x="98.2355%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="98.0661%" y="357" width="0.3223%" height="15" fill="rgb(239,90,4)" fg:x="1217" fg:w="4"/><text x="98.3161%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.0661%" y="341" width="0.3223%" height="15" fill="rgb(248,110,3)" fg:x="1217" fg:w="4"/><text x="98.3161%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.0661%" y="325" width="0.3223%" height="15" fill="rgb(210,41,30)" fg:x="1217" fg:w="4"/><text x="98.3161%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3078%" y="309" width="0.0806%" height="15" fill="rgb(239,36,8)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3078%" y="293" width="0.0806%" height="15" fill="rgb(237,201,47)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.3078%" y="277" width="0.0806%" height="15" fill="rgb(224,140,29)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3078%" y="261" width="0.0806%" height="15" fill="rgb(231,209,17)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3078%" y="245" width="0.0806%" height="15" fill="rgb(249,196,1)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.3078%" y="229" width="0.0806%" height="15" fill="rgb(223,207,51)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.5496%" y="309" width="0.0806%" height="15" fill="rgb(210,14,40)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5496%" y="293" width="0.0806%" height="15" fill="rgb(250,20,52)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (15 samples, 1.21%)</title><rect x="97.5020%" y="485" width="1.2087%" height="15" fill="rgb(241,46,11)" fg:x="1210" fg:w="15"/><text x="97.7520%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (15 samples, 1.21%)</title><rect x="97.5020%" y="469" width="1.2087%" height="15" fill="rgb(219,105,5)" fg:x="1210" fg:w="15"/><text x="97.7520%" y="479.50"></text></g><g><title>engine::internal::Entities::add_persisted (14 samples, 1.13%)</title><rect x="97.5826%" y="453" width="1.1281%" height="15" fill="rgb(252,77,35)" fg:x="1211" fg:w="14"/><text x="97.8326%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.81%)</title><rect x="97.9049%" y="437" width="0.8058%" height="15" fill="rgb(243,119,2)" fg:x="1215" fg:w="10"/><text x="98.1549%" y="447.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="98.3884%" y="421" width="0.3223%" height="15" fill="rgb(206,82,28)" fg:x="1221" fg:w="4"/><text x="98.6384%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.3884%" y="405" width="0.3223%" height="15" fill="rgb(227,120,12)" fg:x="1221" fg:w="4"/><text x="98.6384%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.3884%" y="389" width="0.3223%" height="15" fill="rgb(229,134,41)" fg:x="1221" fg:w="4"/><text x="98.6384%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4690%" y="373" width="0.2417%" height="15" fill="rgb(239,96,32)" fg:x="1222" fg:w="3"/><text x="98.7190%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4690%" y="357" width="0.2417%" height="15" fill="rgb(225,46,27)" fg:x="1222" fg:w="3"/><text x="98.7190%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4690%" y="341" width="0.2417%" height="15" fill="rgb(215,168,2)" fg:x="1222" fg:w="3"/><text x="98.7190%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4690%" y="325" width="0.2417%" height="15" fill="rgb(207,170,52)" fg:x="1222" fg:w="3"/><text x="98.7190%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6301%" y="309" width="0.0806%" height="15" fill="rgb(237,198,36)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6301%" y="293" width="0.0806%" height="15" fill="rgb(213,27,14)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6301%" y="277" width="0.0806%" height="15" fill="rgb(218,77,5)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6301%" y="261" width="0.0806%" height="15" fill="rgb(230,219,39)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6301%" y="245" width="0.0806%" height="15" fill="rgb(245,177,7)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6301%" y="229" width="0.0806%" height="15" fill="rgb(246,44,46)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6301%" y="213" width="0.0806%" height="15" fill="rgb(207,173,15)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6301%" y="197" width="0.0806%" height="15" fill="rgb(245,170,50)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6301%" y="181" width="0.0806%" height="15" fill="rgb(233,156,21)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="191.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (16 samples, 1.29%)</title><rect x="97.5020%" y="533" width="1.2893%" height="15" fill="rgb(253,146,27)" fg:x="1210" fg:w="16"/><text x="97.7520%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.29%)</title><rect x="97.5020%" y="517" width="1.2893%" height="15" fill="rgb(247,66,29)" fg:x="1210" fg:w="16"/><text x="97.7520%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.29%)</title><rect x="97.5020%" y="501" width="1.2893%" height="15" fill="rgb(218,207,26)" fg:x="1210" fg:w="16"/><text x="97.7520%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="98.7107%" y="485" width="0.0806%" height="15" fill="rgb(234,93,26)" fg:x="1225" fg:w="1"/><text x="98.9607%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7107%" y="469" width="0.0806%" height="15" fill="rgb(214,75,48)" fg:x="1225" fg:w="1"/><text x="98.9607%" y="479.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (18 samples, 1.45%)</title><rect x="97.4214%" y="549" width="1.4504%" height="15" fill="rgb(229,119,22)" fg:x="1209" fg:w="18"/><text x="97.6714%" y="559.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="98.7913%" y="533" width="0.0806%" height="15" fill="rgb(226,153,19)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="98.7913%" y="517" width="0.0806%" height="15" fill="rgb(220,204,36)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="98.7913%" y="501" width="0.0806%" height="15" fill="rgb(253,181,43)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="98.7913%" y="485" width="0.0806%" height="15" fill="rgb(211,41,51)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.7913%" y="469" width="0.0806%" height="15" fill="rgb(207,215,0)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.7913%" y="453" width="0.0806%" height="15" fill="rgb(212,153,10)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.7913%" y="437" width="0.0806%" height="15" fill="rgb(251,171,36)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="98.7913%" y="421" width="0.0806%" height="15" fill="rgb(225,219,41)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="98.7913%" y="405" width="0.0806%" height="15" fill="rgb(208,200,1)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.7913%" y="389" width="0.0806%" height="15" fill="rgb(206,75,47)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.7913%" y="373" width="0.0806%" height="15" fill="rgb(248,3,16)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="98.7913%" y="357" width="0.0806%" height="15" fill="rgb(242,157,36)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="98.7913%" y="341" width="0.0806%" height="15" fill="rgb(215,175,11)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.7913%" y="325" width="0.0806%" height="15" fill="rgb(252,222,22)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.7913%" y="309" width="0.0806%" height="15" fill="rgb(250,121,35)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="98.7913%" y="293" width="0.0806%" height="15" fill="rgb(233,120,49)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="303.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="98.7913%" y="277" width="0.0806%" height="15" fill="rgb(205,201,14)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.7913%" y="261" width="0.0806%" height="15" fill="rgb(219,58,45)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.7913%" y="245" width="0.0806%" height="15" fill="rgb(251,65,12)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="98.7913%" y="229" width="0.0806%" height="15" fill="rgb(224,47,31)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="98.7913%" y="213" width="0.0806%" height="15" fill="rgb(233,74,26)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="98.7913%" y="197" width="0.0806%" height="15" fill="rgb(231,211,31)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="98.7913%" y="181" width="0.0806%" height="15" fill="rgb(239,167,5)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="98.7913%" y="165" width="0.0806%" height="15" fill="rgb(241,85,0)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="98.7913%" y="149" width="0.0806%" height="15" fill="rgb(229,130,21)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="98.7913%" y="133" width="0.0806%" height="15" fill="rgb(254,84,49)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="98.7913%" y="117" width="0.0806%" height="15" fill="rgb(235,85,21)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="98.7913%" y="101" width="0.0806%" height="15" fill="rgb(246,128,52)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="98.7913%" y="85" width="0.0806%" height="15" fill="rgb(243,114,49)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="98.7913%" y="69" width="0.0806%" height="15" fill="rgb(240,224,22)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="98.7913%" y="53" width="0.0806%" height="15" fill="rgb(247,201,52)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="63.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="98.7913%" y="37" width="0.0806%" height="15" fill="rgb(231,70,45)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="47.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (36 samples, 2.90%)</title><rect x="96.0516%" y="565" width="2.9009%" height="15" fill="rgb(217,215,20)" fg:x="1192" fg:w="36"/><text x="96.3016%" y="575.50">&lt;e..</text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="98.8719%" y="549" width="0.0806%" height="15" fill="rgb(226,170,30)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="98.8719%" y="533" width="0.0806%" height="15" fill="rgb(220,190,43)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="98.8719%" y="517" width="0.0806%" height="15" fill="rgb(218,20,18)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8719%" y="501" width="0.0806%" height="15" fill="rgb(245,37,26)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.0330%" y="389" width="0.0806%" height="15" fill="rgb(241,127,29)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.0330%" y="421" width="0.1612%" height="15" fill="rgb(241,33,26)" fg:x="1229" fg:w="2"/><text x="99.2830%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.0330%" y="405" width="0.1612%" height="15" fill="rgb(220,106,21)" fg:x="1229" fg:w="2"/><text x="99.2830%" y="415.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1136%" y="389" width="0.0806%" height="15" fill="rgb(225,125,35)" fg:x="1230" fg:w="1"/><text x="99.3636%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1136%" y="373" width="0.0806%" height="15" fill="rgb(248,80,22)" fg:x="1230" fg:w="1"/><text x="99.3636%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.1136%" y="357" width="0.0806%" height="15" fill="rgb(231,117,39)" fg:x="1230" fg:w="1"/><text x="99.3636%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1136%" y="341" width="0.0806%" height="15" fill="rgb(239,183,16)" fg:x="1230" fg:w="1"/><text x="99.3636%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1136%" y="325" width="0.0806%" height="15" fill="rgb(221,61,19)" fg:x="1230" fg:w="1"/><text x="99.3636%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1136%" y="309" width="0.0806%" height="15" fill="rgb(239,196,44)" fg:x="1230" fg:w="1"/><text x="99.3636%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="99.0330%" y="485" width="0.2417%" height="15" fill="rgb(206,113,19)" fg:x="1229" fg:w="3"/><text x="99.2830%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="99.0330%" y="469" width="0.2417%" height="15" fill="rgb(245,114,12)" fg:x="1229" fg:w="3"/><text x="99.2830%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.0330%" y="453" width="0.2417%" height="15" fill="rgb(247,89,39)" fg:x="1229" fg:w="3"/><text x="99.2830%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.0330%" y="437" width="0.2417%" height="15" fill="rgb(213,85,14)" fg:x="1229" fg:w="3"/><text x="99.2830%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1942%" y="421" width="0.0806%" height="15" fill="rgb(249,206,33)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1942%" y="405" width="0.0806%" height="15" fill="rgb(235,167,47)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="99.1942%" y="389" width="0.0806%" height="15" fill="rgb(217,177,16)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.1942%" y="373" width="0.0806%" height="15" fill="rgb(250,228,29)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="99.2748%" y="373" width="0.1612%" height="15" fill="rgb(216,195,42)" fg:x="1232" fg:w="2"/><text x="99.5248%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.48%)</title><rect x="99.0330%" y="549" width="0.4835%" height="15" fill="rgb(232,192,32)" fg:x="1229" fg:w="6"/><text x="99.2830%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="99.0330%" y="533" width="0.4835%" height="15" fill="rgb(211,8,47)" fg:x="1229" fg:w="6"/><text x="99.2830%" y="543.50"></text></g><g><title>engine::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="99.0330%" y="517" width="0.4835%" height="15" fill="rgb(251,201,9)" fg:x="1229" fg:w="6"/><text x="99.2830%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="99.0330%" y="501" width="0.4835%" height="15" fill="rgb(206,185,47)" fg:x="1229" fg:w="6"/><text x="99.2830%" y="511.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="99.2748%" y="485" width="0.2417%" height="15" fill="rgb(245,54,32)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.2748%" y="469" width="0.2417%" height="15" fill="rgb(208,1,8)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.2748%" y="453" width="0.2417%" height="15" fill="rgb(228,57,24)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.2748%" y="437" width="0.2417%" height="15" fill="rgb(251,24,8)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.2748%" y="421" width="0.2417%" height="15" fill="rgb(236,196,50)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.2748%" y="405" width="0.2417%" height="15" fill="rgb(246,222,29)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.2748%" y="389" width="0.2417%" height="15" fill="rgb(211,34,40)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4359%" y="373" width="0.0806%" height="15" fill="rgb(210,66,51)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4359%" y="357" width="0.0806%" height="15" fill="rgb(250,56,43)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.5971%" y="517" width="0.0806%" height="15" fill="rgb(240,111,50)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5971%" y="501" width="0.0806%" height="15" fill="rgb(209,117,13)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (3 samples, 0.24%)</title><rect x="99.5165%" y="549" width="0.2417%" height="15" fill="rgb(232,164,45)" fg:x="1235" fg:w="3"/><text x="99.7665%" y="559.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="99.5165%" y="533" width="0.2417%" height="15" fill="rgb(205,69,32)" fg:x="1235" fg:w="3"/><text x="99.7665%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.6777%" y="517" width="0.0806%" height="15" fill="rgb(240,147,45)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.6777%" y="501" width="0.0806%" height="15" fill="rgb(221,94,48)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.6777%" y="485" width="0.0806%" height="15" fill="rgb(249,209,17)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="495.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (48 samples, 3.87%)</title><rect x="95.9710%" y="661" width="3.8678%" height="15" fill="rgb(228,57,28)" fg:x="1191" fg:w="48"/><text x="96.2210%" y="671.50">&lt;ker..</text></g><g><title>core::iter::adapters::try_process (48 samples, 3.87%)</title><rect x="95.9710%" y="645" width="3.8678%" height="15" fill="rgb(250,133,26)" fg:x="1191" fg:w="48"/><text x="96.2210%" y="655.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 3.87%)</title><rect x="95.9710%" y="629" width="3.8678%" height="15" fill="rgb(254,15,16)" fg:x="1191" fg:w="48"/><text x="96.2210%" y="639.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 3.87%)</title><rect x="95.9710%" y="613" width="3.8678%" height="15" fill="rgb(209,147,42)" fg:x="1191" fg:w="48"/><text x="96.2210%" y="623.50">&lt;cor..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (47 samples, 3.79%)</title><rect x="96.0516%" y="597" width="3.7873%" height="15" fill="rgb(208,5,29)" fg:x="1192" fg:w="47"/><text x="96.3016%" y="607.50">&lt;plu..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (47 samples, 3.79%)</title><rect x="96.0516%" y="581" width="3.7873%" height="15" fill="rgb(250,73,31)" fg:x="1192" fg:w="47"/><text x="96.3016%" y="591.50">&lt;eng..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (11 samples, 0.89%)</title><rect x="98.9525%" y="565" width="0.8864%" height="15" fill="rgb(238,45,10)" fg:x="1228" fg:w="11"/><text x="99.2025%" y="575.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="99.7583%" y="549" width="0.0806%" height="15" fill="rgb(214,104,5)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="99.7583%" y="533" width="0.0806%" height="15" fill="rgb(242,217,19)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="99.7583%" y="517" width="0.0806%" height="15" fill="rgb(246,113,27)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.7583%" y="501" width="0.0806%" height="15" fill="rgb(221,34,27)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7583%" y="485" width="0.0806%" height="15" fill="rgb(246,109,6)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7583%" y="469" width="0.0806%" height="15" fill="rgb(217,12,25)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7583%" y="453" width="0.0806%" height="15" fill="rgb(250,195,5)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.7583%" y="437" width="0.0806%" height="15" fill="rgb(244,140,45)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.7583%" y="421" width="0.0806%" height="15" fill="rgb(230,64,14)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.7583%" y="405" width="0.0806%" height="15" fill="rgb(206,27,27)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.7583%" y="389" width="0.0806%" height="15" fill="rgb(230,14,50)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.7583%" y="373" width="0.0806%" height="15" fill="rgb(237,172,14)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.7583%" y="357" width="0.0806%" height="15" fill="rgb(209,25,21)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.7583%" y="341" width="0.0806%" height="15" fill="rgb(248,148,22)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.7583%" y="325" width="0.0806%" height="15" fill="rgb(234,100,22)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.7583%" y="309" width="0.0806%" height="15" fill="rgb(210,20,30)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7583%" y="293" width="0.0806%" height="15" fill="rgb(232,58,0)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="303.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (49 samples, 3.95%)</title><rect x="95.9710%" y="693" width="3.9484%" height="15" fill="rgb(221,68,13)" fg:x="1191" fg:w="49"/><text x="96.2210%" y="703.50">engi..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (49 samples, 3.95%)</title><rect x="95.9710%" y="677" width="3.9484%" height="15" fill="rgb(231,194,11)" fg:x="1191" fg:w="49"/><text x="96.2210%" y="687.50">engi..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="99.8388%" y="661" width="0.0806%" height="15" fill="rgb(235,51,41)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="671.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="99.8388%" y="645" width="0.0806%" height="15" fill="rgb(240,50,32)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="99.8388%" y="629" width="0.0806%" height="15" fill="rgb(240,185,36)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="99.8388%" y="613" width="0.0806%" height="15" fill="rgb(211,168,15)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="623.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="99.8388%" y="597" width="0.0806%" height="15" fill="rgb(221,70,0)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="607.50"></text></g><g><title>all (1,241 samples, 100%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(205,21,33)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1055.50"></text></g><g><title>simple-7c3643c3 (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(225,106,10)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1039.50">simple-7c3643c3</text></g><g><title>_start (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(236,200,50)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1023.50">_start</text></g><g><title>__libc_start_main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(249,93,23)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1007.50">__libc_start_main</text></g><g><title>main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(244,115,35)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="991.50">main</text></g><g><title>std::rt::lang_start_internal (1,241 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(231,129,47)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="975.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,241 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(225,160,50)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="959.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,241 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(218,135,23)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="943.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,241 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(227,119,14)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="927.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,241 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(242,138,13)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="911.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,241 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(215,11,16)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,241 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(234,170,50)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="879.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,241 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(233,34,20)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="863.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,241 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(237,100,45)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="847.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,241 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(231,184,36)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="831.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,241 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(252,93,2)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="815.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(248,176,47)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="799.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,241 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(249,125,23)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="783.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,241 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(239,67,42)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="767.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (331 samples, 26.67%)</title><rect x="73.3280%" y="741" width="26.6720%" height="15" fill="rgb(244,162,4)" fg:x="910" fg:w="331"/><text x="73.5780%" y="751.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as cri..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (331 samples, 26.67%)</title><rect x="73.3280%" y="725" width="26.6720%" height="15" fill="rgb(214,150,38)" fg:x="910" fg:w="331"/><text x="73.5780%" y="735.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (331 samples, 26.67%)</title><rect x="73.3280%" y="709" width="26.6720%" height="15" fill="rgb(228,211,28)" fg:x="910" fg:w="331"/><text x="73.5780%" y="719.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9194%" y="693" width="0.0806%" height="15" fill="rgb(212,98,48)" fg:x="1240" fg:w="1"/><text x="100.1694%" y="703.50"></text></g></svg></svg>