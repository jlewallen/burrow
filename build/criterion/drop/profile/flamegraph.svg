<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1126" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1109.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1109.00"> </text><svg id="frames" x="10" width="1180" total_samples="1244"><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4823%" y="597" width="0.1608%" height="15" fill="rgb(218,8,2)" fg:x="6" fg:w="2"/><text x="0.7323%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.7235%" y="581" width="0.0804%" height="15" fill="rgb(209,61,28)" fg:x="9" fg:w="1"/><text x="0.9735%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="0.7235%" y="565" width="0.0804%" height="15" fill="rgb(233,140,39)" fg:x="9" fg:w="1"/><text x="0.9735%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8039%" y="581" width="0.1608%" height="15" fill="rgb(251,66,48)" fg:x="10" fg:w="2"/><text x="1.0539%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.9646%" y="581" width="0.1608%" height="15" fill="rgb(210,44,45)" fg:x="12" fg:w="2"/><text x="1.2146%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0450%" y="565" width="0.0804%" height="15" fill="rgb(214,136,46)" fg:x="13" fg:w="1"/><text x="1.2950%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.1254%" y="565" width="0.2412%" height="15" fill="rgb(207,130,50)" fg:x="14" fg:w="3"/><text x="1.3754%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.1254%" y="549" width="0.2412%" height="15" fill="rgb(228,102,49)" fg:x="14" fg:w="3"/><text x="1.3754%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.4469%" y="549" width="0.0804%" height="15" fill="rgb(253,55,1)" fg:x="18" fg:w="1"/><text x="1.6969%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4469%" y="533" width="0.0804%" height="15" fill="rgb(238,222,9)" fg:x="18" fg:w="1"/><text x="1.6969%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.37%)</title><rect x="0.2412%" y="645" width="1.3666%" height="15" fill="rgb(246,99,6)" fg:x="3" fg:w="17"/><text x="0.4912%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (17 samples, 1.37%)</title><rect x="0.2412%" y="629" width="1.3666%" height="15" fill="rgb(219,110,26)" fg:x="3" fg:w="17"/><text x="0.4912%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.29%)</title><rect x="0.3215%" y="613" width="1.2862%" height="15" fill="rgb(239,160,33)" fg:x="4" fg:w="16"/><text x="0.5715%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="0.6431%" y="597" width="0.9646%" height="15" fill="rgb(220,202,23)" fg:x="8" fg:w="12"/><text x="0.8931%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="1.1254%" y="581" width="0.4823%" height="15" fill="rgb(208,80,26)" fg:x="14" fg:w="6"/><text x="1.3754%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.3666%" y="565" width="0.2412%" height="15" fill="rgb(243,85,7)" fg:x="17" fg:w="3"/><text x="1.6166%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.5273%" y="549" width="0.0804%" height="15" fill="rgb(228,77,47)" fg:x="19" fg:w="1"/><text x="1.7773%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.45%)</title><rect x="0.2412%" y="661" width="1.4469%" height="15" fill="rgb(212,226,8)" fg:x="3" fg:w="18"/><text x="0.4912%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6077%" y="645" width="0.0804%" height="15" fill="rgb(241,120,54)" fg:x="20" fg:w="1"/><text x="1.8577%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.85%)</title><rect x="0.0000%" y="725" width="1.8489%" height="15" fill="rgb(226,80,16)" fg:x="0" fg:w="23"/><text x="0.2500%" y="735.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (22 samples, 1.77%)</title><rect x="0.0804%" y="709" width="1.7685%" height="15" fill="rgb(240,76,13)" fg:x="1" fg:w="22"/><text x="0.3304%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.77%)</title><rect x="0.0804%" y="693" width="1.7685%" height="15" fill="rgb(252,74,8)" fg:x="1" fg:w="22"/><text x="0.3304%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (20 samples, 1.61%)</title><rect x="0.2412%" y="677" width="1.6077%" height="15" fill="rgb(244,155,2)" fg:x="3" fg:w="20"/><text x="0.4912%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="1.6881%" y="661" width="0.1608%" height="15" fill="rgb(215,81,35)" fg:x="21" fg:w="2"/><text x="1.9381%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7685%" y="645" width="0.0804%" height="15" fill="rgb(206,55,2)" fg:x="22" fg:w="1"/><text x="2.0185%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (3 samples, 0.24%)</title><rect x="1.9293%" y="661" width="0.2412%" height="15" fill="rgb(231,2,34)" fg:x="24" fg:w="3"/><text x="2.1793%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="2.1704%" y="613" width="0.0804%" height="15" fill="rgb(242,176,48)" fg:x="27" fg:w="1"/><text x="2.4204%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="2.1704%" y="597" width="0.0804%" height="15" fill="rgb(249,31,36)" fg:x="27" fg:w="1"/><text x="2.4204%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="2.1704%" y="581" width="0.0804%" height="15" fill="rgb(205,18,17)" fg:x="27" fg:w="1"/><text x="2.4204%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.1704%" y="565" width="0.0804%" height="15" fill="rgb(254,130,5)" fg:x="27" fg:w="1"/><text x="2.4204%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.1704%" y="549" width="0.0804%" height="15" fill="rgb(229,42,45)" fg:x="27" fg:w="1"/><text x="2.4204%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="2.1704%" y="645" width="0.1608%" height="15" fill="rgb(245,95,25)" fg:x="27" fg:w="2"/><text x="2.4204%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="2.1704%" y="629" width="0.1608%" height="15" fill="rgb(249,193,38)" fg:x="27" fg:w="2"/><text x="2.4204%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="2.2508%" y="613" width="0.0804%" height="15" fill="rgb(241,140,43)" fg:x="28" fg:w="1"/><text x="2.5008%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="2.2508%" y="597" width="0.0804%" height="15" fill="rgb(245,78,48)" fg:x="28" fg:w="1"/><text x="2.5008%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2508%" y="581" width="0.0804%" height="15" fill="rgb(214,92,39)" fg:x="28" fg:w="1"/><text x="2.5008%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.4116%" y="597" width="0.0804%" height="15" fill="rgb(211,189,14)" fg:x="30" fg:w="1"/><text x="2.6616%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.4116%" y="581" width="0.0804%" height="15" fill="rgb(218,7,24)" fg:x="30" fg:w="1"/><text x="2.6616%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.4116%" y="565" width="0.0804%" height="15" fill="rgb(224,200,49)" fg:x="30" fg:w="1"/><text x="2.6616%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.4116%" y="549" width="0.0804%" height="15" fill="rgb(218,210,14)" fg:x="30" fg:w="1"/><text x="2.6616%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.4116%" y="533" width="0.0804%" height="15" fill="rgb(234,142,31)" fg:x="30" fg:w="1"/><text x="2.6616%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.4116%" y="517" width="0.0804%" height="15" fill="rgb(227,165,2)" fg:x="30" fg:w="1"/><text x="2.6616%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="2.4116%" y="501" width="0.0804%" height="15" fill="rgb(232,44,46)" fg:x="30" fg:w="1"/><text x="2.6616%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="2.4116%" y="485" width="0.0804%" height="15" fill="rgb(236,149,47)" fg:x="30" fg:w="1"/><text x="2.6616%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="2.4116%" y="469" width="0.0804%" height="15" fill="rgb(227,45,31)" fg:x="30" fg:w="1"/><text x="2.6616%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.4116%" y="453" width="0.0804%" height="15" fill="rgb(240,176,51)" fg:x="30" fg:w="1"/><text x="2.6616%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.4116%" y="437" width="0.0804%" height="15" fill="rgb(249,146,41)" fg:x="30" fg:w="1"/><text x="2.6616%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="2.4116%" y="421" width="0.0804%" height="15" fill="rgb(213,208,4)" fg:x="30" fg:w="1"/><text x="2.6616%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="2.4116%" y="405" width="0.0804%" height="15" fill="rgb(245,84,36)" fg:x="30" fg:w="1"/><text x="2.6616%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="2.4116%" y="389" width="0.0804%" height="15" fill="rgb(254,84,18)" fg:x="30" fg:w="1"/><text x="2.6616%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="2.4116%" y="373" width="0.0804%" height="15" fill="rgb(225,38,54)" fg:x="30" fg:w="1"/><text x="2.6616%" y="383.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="2.4116%" y="357" width="0.0804%" height="15" fill="rgb(246,50,30)" fg:x="30" fg:w="1"/><text x="2.6616%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.4116%" y="341" width="0.0804%" height="15" fill="rgb(246,148,9)" fg:x="30" fg:w="1"/><text x="2.6616%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4920%" y="565" width="0.0804%" height="15" fill="rgb(223,75,4)" fg:x="31" fg:w="1"/><text x="2.7420%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="2.3312%" y="645" width="0.4823%" height="15" fill="rgb(239,148,41)" fg:x="29" fg:w="6"/><text x="2.5812%" y="655.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="2.4116%" y="629" width="0.4019%" height="15" fill="rgb(205,195,3)" fg:x="30" fg:w="5"/><text x="2.6616%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="2.4116%" y="613" width="0.4019%" height="15" fill="rgb(254,161,1)" fg:x="30" fg:w="5"/><text x="2.6616%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="2.4920%" y="597" width="0.3215%" height="15" fill="rgb(211,229,8)" fg:x="31" fg:w="4"/><text x="2.7420%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="2.4920%" y="581" width="0.3215%" height="15" fill="rgb(220,97,9)" fg:x="31" fg:w="4"/><text x="2.7420%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="2.5723%" y="565" width="0.2412%" height="15" fill="rgb(240,218,8)" fg:x="32" fg:w="3"/><text x="2.8223%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="2.5723%" y="549" width="0.2412%" height="15" fill="rgb(250,44,0)" fg:x="32" fg:w="3"/><text x="2.8223%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="2.5723%" y="533" width="0.2412%" height="15" fill="rgb(236,41,53)" fg:x="32" fg:w="3"/><text x="2.8223%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="2.5723%" y="517" width="0.2412%" height="15" fill="rgb(218,227,13)" fg:x="32" fg:w="3"/><text x="2.8223%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.7331%" y="501" width="0.0804%" height="15" fill="rgb(217,94,32)" fg:x="34" fg:w="1"/><text x="2.9831%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="2.7331%" y="485" width="0.0804%" height="15" fill="rgb(213,217,12)" fg:x="34" fg:w="1"/><text x="2.9831%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="2.7331%" y="469" width="0.0804%" height="15" fill="rgb(229,13,46)" fg:x="34" fg:w="1"/><text x="2.9831%" y="479.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="2.8135%" y="645" width="0.1608%" height="15" fill="rgb(243,139,5)" fg:x="35" fg:w="2"/><text x="3.0635%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.8939%" y="629" width="0.0804%" height="15" fill="rgb(249,38,45)" fg:x="36" fg:w="1"/><text x="3.1439%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.9743%" y="549" width="0.0804%" height="15" fill="rgb(216,70,11)" fg:x="37" fg:w="1"/><text x="3.2243%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.9743%" y="533" width="0.0804%" height="15" fill="rgb(253,101,25)" fg:x="37" fg:w="1"/><text x="3.2243%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="3.1350%" y="517" width="0.0804%" height="15" fill="rgb(207,197,30)" fg:x="39" fg:w="1"/><text x="3.3850%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="3.1350%" y="501" width="0.0804%" height="15" fill="rgb(238,87,13)" fg:x="39" fg:w="1"/><text x="3.3850%" y="511.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="2.9743%" y="629" width="0.3215%" height="15" fill="rgb(215,155,8)" fg:x="37" fg:w="4"/><text x="3.2243%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="2.9743%" y="613" width="0.3215%" height="15" fill="rgb(239,166,38)" fg:x="37" fg:w="4"/><text x="3.2243%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="2.9743%" y="597" width="0.3215%" height="15" fill="rgb(240,194,35)" fg:x="37" fg:w="4"/><text x="3.2243%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="2.9743%" y="581" width="0.3215%" height="15" fill="rgb(219,10,44)" fg:x="37" fg:w="4"/><text x="3.2243%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="2.9743%" y="565" width="0.3215%" height="15" fill="rgb(251,220,35)" fg:x="37" fg:w="4"/><text x="3.2243%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="3.0547%" y="549" width="0.2412%" height="15" fill="rgb(218,117,13)" fg:x="38" fg:w="3"/><text x="3.3047%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.1350%" y="533" width="0.1608%" height="15" fill="rgb(221,213,40)" fg:x="39" fg:w="2"/><text x="3.3850%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.2154%" y="517" width="0.0804%" height="15" fill="rgb(251,224,35)" fg:x="40" fg:w="1"/><text x="3.4654%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.2154%" y="501" width="0.0804%" height="15" fill="rgb(241,33,39)" fg:x="40" fg:w="1"/><text x="3.4654%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.2154%" y="485" width="0.0804%" height="15" fill="rgb(222,74,17)" fg:x="40" fg:w="1"/><text x="3.4654%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.2154%" y="469" width="0.0804%" height="15" fill="rgb(225,103,0)" fg:x="40" fg:w="1"/><text x="3.4654%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.2154%" y="453" width="0.0804%" height="15" fill="rgb(240,0,12)" fg:x="40" fg:w="1"/><text x="3.4654%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.2154%" y="437" width="0.0804%" height="15" fill="rgb(233,213,37)" fg:x="40" fg:w="1"/><text x="3.4654%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.2154%" y="421" width="0.0804%" height="15" fill="rgb(225,84,52)" fg:x="40" fg:w="1"/><text x="3.4654%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.2154%" y="405" width="0.0804%" height="15" fill="rgb(247,160,51)" fg:x="40" fg:w="1"/><text x="3.4654%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="3.2154%" y="389" width="0.0804%" height="15" fill="rgb(244,60,51)" fg:x="40" fg:w="1"/><text x="3.4654%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="3.2154%" y="373" width="0.0804%" height="15" fill="rgb(233,114,7)" fg:x="40" fg:w="1"/><text x="3.4654%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.4566%" y="597" width="0.0804%" height="15" fill="rgb(246,136,16)" fg:x="43" fg:w="1"/><text x="3.7066%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="3.5370%" y="549" width="0.1608%" height="15" fill="rgb(243,114,45)" fg:x="44" fg:w="2"/><text x="3.7870%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.5370%" y="533" width="0.1608%" height="15" fill="rgb(247,183,43)" fg:x="44" fg:w="2"/><text x="3.7870%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="3.5370%" y="517" width="0.1608%" height="15" fill="rgb(251,210,42)" fg:x="44" fg:w="2"/><text x="3.7870%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.5370%" y="501" width="0.1608%" height="15" fill="rgb(221,88,35)" fg:x="44" fg:w="2"/><text x="3.7870%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="3.5370%" y="485" width="0.1608%" height="15" fill="rgb(242,21,20)" fg:x="44" fg:w="2"/><text x="3.7870%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.6174%" y="469" width="0.0804%" height="15" fill="rgb(233,226,36)" fg:x="45" fg:w="1"/><text x="3.8674%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="3.6174%" y="453" width="0.0804%" height="15" fill="rgb(243,189,34)" fg:x="45" fg:w="1"/><text x="3.8674%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="3.6174%" y="437" width="0.0804%" height="15" fill="rgb(207,145,50)" fg:x="45" fg:w="1"/><text x="3.8674%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.6174%" y="421" width="0.0804%" height="15" fill="rgb(242,1,50)" fg:x="45" fg:w="1"/><text x="3.8674%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="3.6174%" y="405" width="0.0804%" height="15" fill="rgb(231,65,32)" fg:x="45" fg:w="1"/><text x="3.8674%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.6174%" y="389" width="0.0804%" height="15" fill="rgb(208,68,49)" fg:x="45" fg:w="1"/><text x="3.8674%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="3.5370%" y="597" width="0.2412%" height="15" fill="rgb(253,54,49)" fg:x="44" fg:w="3"/><text x="3.7870%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="3.5370%" y="581" width="0.2412%" height="15" fill="rgb(245,186,24)" fg:x="44" fg:w="3"/><text x="3.7870%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="3.5370%" y="565" width="0.2412%" height="15" fill="rgb(209,2,41)" fg:x="44" fg:w="3"/><text x="3.7870%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.6977%" y="549" width="0.0804%" height="15" fill="rgb(242,208,54)" fg:x="46" fg:w="1"/><text x="3.9477%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.6977%" y="533" width="0.0804%" height="15" fill="rgb(225,9,51)" fg:x="46" fg:w="1"/><text x="3.9477%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="3.6977%" y="517" width="0.0804%" height="15" fill="rgb(207,207,25)" fg:x="46" fg:w="1"/><text x="3.9477%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.6977%" y="501" width="0.0804%" height="15" fill="rgb(253,96,18)" fg:x="46" fg:w="1"/><text x="3.9477%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.6977%" y="485" width="0.0804%" height="15" fill="rgb(252,215,20)" fg:x="46" fg:w="1"/><text x="3.9477%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (26 samples, 2.09%)</title><rect x="1.8489%" y="693" width="2.0900%" height="15" fill="rgb(245,227,26)" fg:x="23" fg:w="26"/><text x="2.0989%" y="703.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (26 samples, 2.09%)</title><rect x="1.8489%" y="677" width="2.0900%" height="15" fill="rgb(241,208,0)" fg:x="23" fg:w="26"/><text x="2.0989%" y="687.50">&lt;..</text></g><g><title>engine::internal::Entities::add_persisted (22 samples, 1.77%)</title><rect x="2.1704%" y="661" width="1.7685%" height="15" fill="rgb(224,130,10)" fg:x="27" fg:w="22"/><text x="2.4204%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::from_str (12 samples, 0.96%)</title><rect x="2.9743%" y="645" width="0.9646%" height="15" fill="rgb(237,29,0)" fg:x="37" fg:w="12"/><text x="3.2243%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="3.2958%" y="629" width="0.6431%" height="15" fill="rgb(219,27,41)" fg:x="41" fg:w="8"/><text x="3.5458%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="3.2958%" y="613" width="0.6431%" height="15" fill="rgb(245,101,19)" fg:x="41" fg:w="8"/><text x="3.5458%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="3.7781%" y="597" width="0.1608%" height="15" fill="rgb(243,44,37)" fg:x="47" fg:w="2"/><text x="4.0281%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.8585%" y="581" width="0.0804%" height="15" fill="rgb(228,213,43)" fg:x="48" fg:w="1"/><text x="4.1085%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="3.8585%" y="565" width="0.0804%" height="15" fill="rgb(219,163,21)" fg:x="48" fg:w="1"/><text x="4.1085%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.9389%" y="693" width="0.0804%" height="15" fill="rgb(234,86,24)" fg:x="49" fg:w="1"/><text x="4.1889%" y="703.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="4.0193%" y="645" width="0.1608%" height="15" fill="rgb(225,10,24)" fg:x="50" fg:w="2"/><text x="4.2693%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="4.0193%" y="629" width="0.1608%" height="15" fill="rgb(218,109,7)" fg:x="50" fg:w="2"/><text x="4.2693%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="4.0997%" y="613" width="0.0804%" height="15" fill="rgb(210,20,26)" fg:x="51" fg:w="1"/><text x="4.3497%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.0997%" y="597" width="0.0804%" height="15" fill="rgb(216,18,1)" fg:x="51" fg:w="1"/><text x="4.3497%" y="607.50"></text></g><g><title>engine::identifiers::model::get_gid (5 samples, 0.40%)</title><rect x="4.0193%" y="693" width="0.4019%" height="15" fill="rgb(206,163,23)" fg:x="50" fg:w="5"/><text x="4.2693%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="4.0193%" y="677" width="0.4019%" height="15" fill="rgb(229,150,31)" fg:x="50" fg:w="5"/><text x="4.2693%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="4.0193%" y="661" width="0.4019%" height="15" fill="rgb(231,10,5)" fg:x="50" fg:w="5"/><text x="4.2693%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="4.1801%" y="645" width="0.2412%" height="15" fill="rgb(250,40,50)" fg:x="52" fg:w="3"/><text x="4.4301%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="4.2605%" y="629" width="0.1608%" height="15" fill="rgb(217,119,7)" fg:x="53" fg:w="2"/><text x="4.5105%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.3408%" y="613" width="0.0804%" height="15" fill="rgb(245,214,40)" fg:x="54" fg:w="1"/><text x="4.5908%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3408%" y="597" width="0.0804%" height="15" fill="rgb(216,187,1)" fg:x="54" fg:w="1"/><text x="4.5908%" y="607.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="4.4212%" y="693" width="0.2412%" height="15" fill="rgb(237,146,21)" fg:x="55" fg:w="3"/><text x="4.6712%" y="703.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="4.4212%" y="677" width="0.2412%" height="15" fill="rgb(210,174,47)" fg:x="55" fg:w="3"/><text x="4.6712%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="4.4212%" y="661" width="0.2412%" height="15" fill="rgb(218,111,39)" fg:x="55" fg:w="3"/><text x="4.6712%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.5016%" y="645" width="0.1608%" height="15" fill="rgb(224,95,19)" fg:x="56" fg:w="2"/><text x="4.7516%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.5016%" y="629" width="0.1608%" height="15" fill="rgb(234,15,38)" fg:x="56" fg:w="2"/><text x="4.7516%" y="639.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.5016%" y="613" width="0.1608%" height="15" fill="rgb(246,56,12)" fg:x="56" fg:w="2"/><text x="4.7516%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="4.6624%" y="661" width="0.0804%" height="15" fill="rgb(247,16,17)" fg:x="58" fg:w="1"/><text x="4.9124%" y="671.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="4.6624%" y="645" width="0.0804%" height="15" fill="rgb(215,151,11)" fg:x="58" fg:w="1"/><text x="4.9124%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="4.6624%" y="629" width="0.0804%" height="15" fill="rgb(225,16,24)" fg:x="58" fg:w="1"/><text x="4.9124%" y="639.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="4.6624%" y="613" width="0.0804%" height="15" fill="rgb(217,117,5)" fg:x="58" fg:w="1"/><text x="4.9124%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="4.6624%" y="597" width="0.0804%" height="15" fill="rgb(246,187,53)" fg:x="58" fg:w="1"/><text x="4.9124%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="4.6624%" y="581" width="0.0804%" height="15" fill="rgb(241,71,40)" fg:x="58" fg:w="1"/><text x="4.9124%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="4.6624%" y="565" width="0.0804%" height="15" fill="rgb(231,67,39)" fg:x="58" fg:w="1"/><text x="4.9124%" y="575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="4.6624%" y="549" width="0.0804%" height="15" fill="rgb(222,120,24)" fg:x="58" fg:w="1"/><text x="4.9124%" y="559.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="4.7428%" y="661" width="0.0804%" height="15" fill="rgb(248,3,3)" fg:x="59" fg:w="1"/><text x="4.9928%" y="671.50"></text></g><g><title>&lt;alloc::ffi::c_str::NulError as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="4.8232%" y="645" width="0.0804%" height="15" fill="rgb(228,218,5)" fg:x="60" fg:w="1"/><text x="5.0732%" y="655.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="5.0643%" y="613" width="0.0804%" height="15" fill="rgb(212,202,43)" fg:x="63" fg:w="1"/><text x="5.3143%" y="623.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="5.0643%" y="629" width="0.1608%" height="15" fill="rgb(235,183,2)" fg:x="63" fg:w="2"/><text x="5.3143%" y="639.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="5.1447%" y="613" width="0.0804%" height="15" fill="rgb(230,165,10)" fg:x="64" fg:w="1"/><text x="5.3947%" y="623.50"></text></g><g><title>dlerror (5 samples, 0.40%)</title><rect x="4.9035%" y="645" width="0.4019%" height="15" fill="rgb(219,54,40)" fg:x="61" fg:w="5"/><text x="5.1535%" y="655.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="5.2251%" y="629" width="0.0804%" height="15" fill="rgb(244,73,9)" fg:x="65" fg:w="1"/><text x="5.4751%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.3055%" y="629" width="0.0804%" height="15" fill="rgb(212,32,45)" fg:x="66" fg:w="1"/><text x="5.5555%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (23 samples, 1.85%)</title><rect x="4.6624%" y="677" width="1.8489%" height="15" fill="rgb(205,58,31)" fg:x="58" fg:w="23"/><text x="4.9124%" y="687.50">&lt;..</text></g><g><title>libloading::os::unix::Library::open (21 samples, 1.69%)</title><rect x="4.8232%" y="661" width="1.6881%" height="15" fill="rgb(250,120,43)" fg:x="60" fg:w="21"/><text x="5.0732%" y="671.50"></text></g><g><title>dlopen (15 samples, 1.21%)</title><rect x="5.3055%" y="645" width="1.2058%" height="15" fill="rgb(235,13,10)" fg:x="66" fg:w="15"/><text x="5.5555%" y="655.50"></text></g><g><title>_dl_catch_error (14 samples, 1.13%)</title><rect x="5.3859%" y="629" width="1.1254%" height="15" fill="rgb(232,219,31)" fg:x="67" fg:w="14"/><text x="5.6359%" y="639.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.13%)</title><rect x="5.3859%" y="613" width="1.1254%" height="15" fill="rgb(218,157,51)" fg:x="67" fg:w="14"/><text x="5.6359%" y="623.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.96%)</title><rect x="5.5466%" y="597" width="0.9646%" height="15" fill="rgb(211,91,52)" fg:x="69" fg:w="12"/><text x="5.7966%" y="607.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="5.6270%" y="581" width="0.8842%" height="15" fill="rgb(240,173,1)" fg:x="70" fg:w="11"/><text x="5.8770%" y="591.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="6.4309%" y="565" width="0.0804%" height="15" fill="rgb(248,20,47)" fg:x="80" fg:w="1"/><text x="6.6809%" y="575.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="6.4309%" y="549" width="0.0804%" height="15" fill="rgb(217,221,40)" fg:x="80" fg:w="1"/><text x="6.6809%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (27 samples, 2.17%)</title><rect x="4.6624%" y="693" width="2.1704%" height="15" fill="rgb(226,149,51)" fg:x="58" fg:w="27"/><text x="4.9124%" y="703.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.32%)</title><rect x="6.5113%" y="677" width="0.3215%" height="15" fill="rgb(252,193,7)" fg:x="81" fg:w="4"/><text x="6.7613%" y="687.50"></text></g><g><title>clock_gettime (4 samples, 0.32%)</title><rect x="6.5113%" y="661" width="0.3215%" height="15" fill="rgb(205,123,0)" fg:x="81" fg:w="4"/><text x="6.7613%" y="671.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (63 samples, 5.06%)</title><rect x="1.8489%" y="725" width="5.0643%" height="15" fill="rgb(233,173,25)" fg:x="23" fg:w="63"/><text x="2.0989%" y="735.50">&lt;engin..</text></g><g><title>engine::session::Session::new (63 samples, 5.06%)</title><rect x="1.8489%" y="709" width="5.0643%" height="15" fill="rgb(216,63,32)" fg:x="23" fg:w="63"/><text x="2.0989%" y="719.50">engine..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="6.8328%" y="693" width="0.0804%" height="15" fill="rgb(209,56,45)" fg:x="85" fg:w="1"/><text x="7.0828%" y="703.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="6.8328%" y="677" width="0.0804%" height="15" fill="rgb(226,111,49)" fg:x="85" fg:w="1"/><text x="7.0828%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.8328%" y="661" width="0.0804%" height="15" fill="rgb(244,181,21)" fg:x="85" fg:w="1"/><text x="7.0828%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.8328%" y="645" width="0.0804%" height="15" fill="rgb(222,126,15)" fg:x="85" fg:w="1"/><text x="7.0828%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.8328%" y="629" width="0.0804%" height="15" fill="rgb(222,95,17)" fg:x="85" fg:w="1"/><text x="7.0828%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.8328%" y="613" width="0.0804%" height="15" fill="rgb(254,46,5)" fg:x="85" fg:w="1"/><text x="7.0828%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.9936%" y="709" width="0.0804%" height="15" fill="rgb(236,216,35)" fg:x="87" fg:w="1"/><text x="7.2436%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="7.0740%" y="709" width="0.0804%" height="15" fill="rgb(217,187,26)" fg:x="88" fg:w="1"/><text x="7.3240%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.0740%" y="693" width="0.0804%" height="15" fill="rgb(207,192,25)" fg:x="88" fg:w="1"/><text x="7.3240%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="7.1543%" y="709" width="0.0804%" height="15" fill="rgb(253,135,27)" fg:x="89" fg:w="1"/><text x="7.4043%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="7.1543%" y="693" width="0.0804%" height="15" fill="rgb(211,122,29)" fg:x="89" fg:w="1"/><text x="7.4043%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.1543%" y="677" width="0.0804%" height="15" fill="rgb(233,162,40)" fg:x="89" fg:w="1"/><text x="7.4043%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="7.2347%" y="709" width="0.0804%" height="15" fill="rgb(222,184,47)" fg:x="90" fg:w="1"/><text x="7.4847%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="7.3151%" y="709" width="0.0804%" height="15" fill="rgb(249,99,23)" fg:x="91" fg:w="1"/><text x="7.5651%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="7.3151%" y="693" width="0.0804%" height="15" fill="rgb(214,60,12)" fg:x="91" fg:w="1"/><text x="7.5651%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="7.3151%" y="677" width="0.0804%" height="15" fill="rgb(250,229,36)" fg:x="91" fg:w="1"/><text x="7.5651%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="7.3151%" y="661" width="0.0804%" height="15" fill="rgb(232,195,10)" fg:x="91" fg:w="1"/><text x="7.5651%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.3151%" y="645" width="0.0804%" height="15" fill="rgb(205,213,31)" fg:x="91" fg:w="1"/><text x="7.5651%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.3955%" y="661" width="0.0804%" height="15" fill="rgb(237,43,8)" fg:x="92" fg:w="1"/><text x="7.6455%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="7.3955%" y="677" width="0.1608%" height="15" fill="rgb(216,208,3)" fg:x="92" fg:w="2"/><text x="7.6455%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.4759%" y="661" width="0.0804%" height="15" fill="rgb(228,179,44)" fg:x="93" fg:w="1"/><text x="7.7259%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.4759%" y="645" width="0.0804%" height="15" fill="rgb(230,192,27)" fg:x="93" fg:w="1"/><text x="7.7259%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="7.5563%" y="645" width="0.0804%" height="15" fill="rgb(251,30,38)" fg:x="94" fg:w="1"/><text x="7.8063%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.5563%" y="629" width="0.0804%" height="15" fill="rgb(246,55,52)" fg:x="94" fg:w="1"/><text x="7.8063%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.5563%" y="613" width="0.0804%" height="15" fill="rgb(249,79,26)" fg:x="94" fg:w="1"/><text x="7.8063%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.5563%" y="597" width="0.0804%" height="15" fill="rgb(220,202,16)" fg:x="94" fg:w="1"/><text x="7.8063%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.5563%" y="581" width="0.0804%" height="15" fill="rgb(250,170,23)" fg:x="94" fg:w="1"/><text x="7.8063%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.5563%" y="565" width="0.0804%" height="15" fill="rgb(230,7,37)" fg:x="94" fg:w="1"/><text x="7.8063%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="7.5563%" y="549" width="0.0804%" height="15" fill="rgb(213,71,1)" fg:x="94" fg:w="1"/><text x="7.8063%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="7.5563%" y="533" width="0.0804%" height="15" fill="rgb(227,87,39)" fg:x="94" fg:w="1"/><text x="7.8063%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="7.5563%" y="677" width="0.2412%" height="15" fill="rgb(210,41,29)" fg:x="94" fg:w="3"/><text x="7.8063%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="7.5563%" y="661" width="0.2412%" height="15" fill="rgb(206,191,31)" fg:x="94" fg:w="3"/><text x="7.8063%" y="671.50"></text></g><g><title>engine::session::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="7.6367%" y="645" width="0.1608%" height="15" fill="rgb(247,75,54)" fg:x="95" fg:w="2"/><text x="7.8867%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="7.6367%" y="629" width="0.1608%" height="15" fill="rgb(208,54,50)" fg:x="95" fg:w="2"/><text x="7.8867%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="7.7974%" y="677" width="0.0804%" height="15" fill="rgb(214,90,37)" fg:x="97" fg:w="1"/><text x="8.0474%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="7.7974%" y="661" width="0.0804%" height="15" fill="rgb(220,132,6)" fg:x="97" fg:w="1"/><text x="8.0474%" y="671.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="7.8778%" y="677" width="0.1608%" height="15" fill="rgb(213,167,7)" fg:x="98" fg:w="2"/><text x="8.1278%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="7.8778%" y="661" width="0.1608%" height="15" fill="rgb(243,36,27)" fg:x="98" fg:w="2"/><text x="8.1278%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="7.8778%" y="645" width="0.1608%" height="15" fill="rgb(235,147,12)" fg:x="98" fg:w="2"/><text x="8.1278%" y="655.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.9582%" y="629" width="0.0804%" height="15" fill="rgb(212,198,44)" fg:x="99" fg:w="1"/><text x="8.2082%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="7.9582%" y="613" width="0.0804%" height="15" fill="rgb(218,68,50)" fg:x="99" fg:w="1"/><text x="8.2082%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="7.9582%" y="597" width="0.0804%" height="15" fill="rgb(224,79,48)" fg:x="99" fg:w="1"/><text x="8.2082%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.0386%" y="661" width="0.0804%" height="15" fill="rgb(213,191,50)" fg:x="100" fg:w="1"/><text x="8.2886%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.0386%" y="645" width="0.0804%" height="15" fill="rgb(254,146,10)" fg:x="100" fg:w="1"/><text x="8.2886%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.0386%" y="629" width="0.0804%" height="15" fill="rgb(215,175,11)" fg:x="100" fg:w="1"/><text x="8.2886%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.1190%" y="645" width="0.0804%" height="15" fill="rgb(207,49,7)" fg:x="101" fg:w="1"/><text x="8.3690%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.1190%" y="629" width="0.0804%" height="15" fill="rgb(234,144,29)" fg:x="101" fg:w="1"/><text x="8.3690%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.1190%" y="613" width="0.0804%" height="15" fill="rgb(213,222,48)" fg:x="101" fg:w="1"/><text x="8.3690%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.1190%" y="597" width="0.0804%" height="15" fill="rgb(222,8,6)" fg:x="101" fg:w="1"/><text x="8.3690%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.1190%" y="581" width="0.0804%" height="15" fill="rgb(221,114,49)" fg:x="101" fg:w="1"/><text x="8.3690%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.1190%" y="565" width="0.0804%" height="15" fill="rgb(250,140,42)" fg:x="101" fg:w="1"/><text x="8.3690%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.1190%" y="549" width="0.0804%" height="15" fill="rgb(250,150,27)" fg:x="101" fg:w="1"/><text x="8.3690%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.1190%" y="533" width="0.0804%" height="15" fill="rgb(252,159,3)" fg:x="101" fg:w="1"/><text x="8.3690%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.1190%" y="517" width="0.0804%" height="15" fill="rgb(241,182,3)" fg:x="101" fg:w="1"/><text x="8.3690%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.1190%" y="501" width="0.0804%" height="15" fill="rgb(236,3,9)" fg:x="101" fg:w="1"/><text x="8.3690%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.1190%" y="485" width="0.0804%" height="15" fill="rgb(223,227,51)" fg:x="101" fg:w="1"/><text x="8.3690%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="8.1994%" y="645" width="0.0804%" height="15" fill="rgb(232,133,30)" fg:x="102" fg:w="1"/><text x="8.4494%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.1994%" y="629" width="0.0804%" height="15" fill="rgb(209,93,27)" fg:x="102" fg:w="1"/><text x="8.4494%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.1994%" y="613" width="0.0804%" height="15" fill="rgb(208,108,34)" fg:x="102" fg:w="1"/><text x="8.4494%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.1994%" y="597" width="0.0804%" height="15" fill="rgb(215,189,13)" fg:x="102" fg:w="1"/><text x="8.4494%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.1994%" y="581" width="0.0804%" height="15" fill="rgb(206,88,23)" fg:x="102" fg:w="1"/><text x="8.4494%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.1994%" y="565" width="0.0804%" height="15" fill="rgb(240,173,0)" fg:x="102" fg:w="1"/><text x="8.4494%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.1994%" y="549" width="0.0804%" height="15" fill="rgb(223,106,52)" fg:x="102" fg:w="1"/><text x="8.4494%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.3601%" y="581" width="0.0804%" height="15" fill="rgb(206,130,16)" fg:x="104" fg:w="1"/><text x="8.6101%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="8.2797%" y="629" width="0.2412%" height="15" fill="rgb(220,54,25)" fg:x="103" fg:w="3"/><text x="8.5297%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.2797%" y="613" width="0.2412%" height="15" fill="rgb(210,4,38)" fg:x="103" fg:w="3"/><text x="8.5297%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.3601%" y="597" width="0.1608%" height="15" fill="rgb(238,94,39)" fg:x="104" fg:w="2"/><text x="8.6101%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.4405%" y="581" width="0.0804%" height="15" fill="rgb(234,124,34)" fg:x="105" fg:w="1"/><text x="8.6905%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="8.6013%" y="613" width="0.4019%" height="15" fill="rgb(221,91,40)" fg:x="107" fg:w="5"/><text x="8.8513%" y="623.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="8.6013%" y="597" width="0.4019%" height="15" fill="rgb(246,53,28)" fg:x="107" fg:w="5"/><text x="8.8513%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="8.6817%" y="581" width="0.3215%" height="15" fill="rgb(229,109,7)" fg:x="108" fg:w="4"/><text x="8.9317%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.9228%" y="565" width="0.0804%" height="15" fill="rgb(249,117,8)" fg:x="111" fg:w="1"/><text x="9.1728%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.1640%" y="565" width="0.0804%" height="15" fill="rgb(210,181,1)" fg:x="114" fg:w="1"/><text x="9.4140%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.1640%" y="549" width="0.0804%" height="15" fill="rgb(211,66,1)" fg:x="114" fg:w="1"/><text x="9.4140%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="9.0836%" y="581" width="0.2412%" height="15" fill="rgb(221,90,14)" fg:x="113" fg:w="3"/><text x="9.3336%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.2444%" y="565" width="0.0804%" height="15" fill="rgb(219,222,44)" fg:x="115" fg:w="1"/><text x="9.4944%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.2444%" y="549" width="0.0804%" height="15" fill="rgb(246,34,33)" fg:x="115" fg:w="1"/><text x="9.4944%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="9.0836%" y="597" width="0.3215%" height="15" fill="rgb(227,135,41)" fg:x="113" fg:w="4"/><text x="9.3336%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.3248%" y="581" width="0.0804%" height="15" fill="rgb(226,15,14)" fg:x="116" fg:w="1"/><text x="9.5748%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="9.4051%" y="597" width="0.2412%" height="15" fill="rgb(236,148,47)" fg:x="117" fg:w="3"/><text x="9.6551%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.5659%" y="581" width="0.0804%" height="15" fill="rgb(233,162,52)" fg:x="119" fg:w="1"/><text x="9.8159%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.5659%" y="565" width="0.0804%" height="15" fill="rgb(244,35,28)" fg:x="119" fg:w="1"/><text x="9.8159%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.5659%" y="549" width="0.0804%" height="15" fill="rgb(205,121,10)" fg:x="119" fg:w="1"/><text x="9.8159%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.6463%" y="581" width="0.0804%" height="15" fill="rgb(250,58,18)" fg:x="120" fg:w="1"/><text x="9.8963%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.7267%" y="581" width="0.0804%" height="15" fill="rgb(216,37,13)" fg:x="121" fg:w="1"/><text x="9.9767%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.7267%" y="565" width="0.0804%" height="15" fill="rgb(221,215,42)" fg:x="121" fg:w="1"/><text x="9.9767%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="9.8071%" y="549" width="0.1608%" height="15" fill="rgb(217,214,19)" fg:x="122" fg:w="2"/><text x="10.0571%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.8071%" y="533" width="0.1608%" height="15" fill="rgb(233,139,13)" fg:x="122" fg:w="2"/><text x="10.0571%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.8071%" y="517" width="0.1608%" height="15" fill="rgb(247,168,23)" fg:x="122" fg:w="2"/><text x="10.0571%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="9.8071%" y="565" width="0.2412%" height="15" fill="rgb(207,202,1)" fg:x="122" fg:w="3"/><text x="10.0571%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.9678%" y="549" width="0.0804%" height="15" fill="rgb(220,155,48)" fg:x="124" fg:w="1"/><text x="10.2178%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="9.8071%" y="581" width="0.3215%" height="15" fill="rgb(250,43,26)" fg:x="122" fg:w="4"/><text x="10.0571%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.0482%" y="565" width="0.0804%" height="15" fill="rgb(212,190,23)" fg:x="125" fg:w="1"/><text x="10.2982%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.0482%" y="549" width="0.0804%" height="15" fill="rgb(216,39,24)" fg:x="125" fg:w="1"/><text x="10.2982%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.0482%" y="533" width="0.0804%" height="15" fill="rgb(252,113,16)" fg:x="125" fg:w="1"/><text x="10.2982%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="9.0032%" y="613" width="1.2058%" height="15" fill="rgb(208,113,19)" fg:x="112" fg:w="15"/><text x="9.2532%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="9.6463%" y="597" width="0.5627%" height="15" fill="rgb(234,107,25)" fg:x="120" fg:w="7"/><text x="9.8963%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.1286%" y="581" width="0.0804%" height="15" fill="rgb(234,217,51)" fg:x="126" fg:w="1"/><text x="10.3786%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.1286%" y="565" width="0.0804%" height="15" fill="rgb(251,29,42)" fg:x="126" fg:w="1"/><text x="10.3786%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (26 samples, 2.09%)</title><rect x="8.2797%" y="645" width="2.0900%" height="15" fill="rgb(221,62,51)" fg:x="103" fg:w="26"/><text x="8.5297%" y="655.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.85%)</title><rect x="8.5209%" y="629" width="1.8489%" height="15" fill="rgb(240,192,43)" fg:x="106" fg:w="23"/><text x="8.7709%" y="639.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.2090%" y="613" width="0.1608%" height="15" fill="rgb(224,157,47)" fg:x="127" fg:w="2"/><text x="10.4590%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.2894%" y="597" width="0.0804%" height="15" fill="rgb(226,84,45)" fg:x="128" fg:w="1"/><text x="10.5394%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.3698%" y="613" width="0.1608%" height="15" fill="rgb(208,207,23)" fg:x="129" fg:w="2"/><text x="10.6198%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.6913%" y="581" width="0.0804%" height="15" fill="rgb(253,34,51)" fg:x="133" fg:w="1"/><text x="10.9413%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.8521%" y="549" width="0.0804%" height="15" fill="rgb(227,26,34)" fg:x="135" fg:w="1"/><text x="11.1021%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.8521%" y="533" width="0.0804%" height="15" fill="rgb(245,75,19)" fg:x="135" fg:w="1"/><text x="11.1021%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="10.3698%" y="645" width="0.6431%" height="15" fill="rgb(250,191,31)" fg:x="129" fg:w="8"/><text x="10.6198%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="10.3698%" y="629" width="0.6431%" height="15" fill="rgb(224,11,50)" fg:x="129" fg:w="8"/><text x="10.6198%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="10.5305%" y="613" width="0.4823%" height="15" fill="rgb(231,171,7)" fg:x="131" fg:w="6"/><text x="10.7805%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="10.5305%" y="597" width="0.4823%" height="15" fill="rgb(252,214,10)" fg:x="131" fg:w="6"/><text x="10.7805%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="10.7717%" y="581" width="0.2412%" height="15" fill="rgb(249,45,46)" fg:x="134" fg:w="3"/><text x="11.0217%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.8521%" y="565" width="0.1608%" height="15" fill="rgb(240,173,7)" fg:x="135" fg:w="2"/><text x="11.1021%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.9325%" y="549" width="0.0804%" height="15" fill="rgb(235,214,13)" fg:x="136" fg:w="1"/><text x="11.1825%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.9325%" y="533" width="0.0804%" height="15" fill="rgb(245,156,8)" fg:x="136" fg:w="1"/><text x="11.1825%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.9325%" y="517" width="0.0804%" height="15" fill="rgb(235,46,12)" fg:x="136" fg:w="1"/><text x="11.1825%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9325%" y="501" width="0.0804%" height="15" fill="rgb(221,81,14)" fg:x="136" fg:w="1"/><text x="11.1825%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.1736%" y="597" width="0.2412%" height="15" fill="rgb(238,207,9)" fg:x="139" fg:w="3"/><text x="11.4236%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3344%" y="581" width="0.0804%" height="15" fill="rgb(224,129,35)" fg:x="141" fg:w="1"/><text x="11.5844%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.3344%" y="565" width="0.0804%" height="15" fill="rgb(243,218,34)" fg:x="141" fg:w="1"/><text x="11.5844%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="11.4148%" y="565" width="0.0804%" height="15" fill="rgb(220,166,13)" fg:x="142" fg:w="1"/><text x="11.6648%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.6559%" y="549" width="0.2412%" height="15" fill="rgb(227,167,49)" fg:x="145" fg:w="3"/><text x="11.9059%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.6559%" y="533" width="0.2412%" height="15" fill="rgb(234,142,12)" fg:x="145" fg:w="3"/><text x="11.9059%" y="543.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="11.6559%" y="517" width="0.2412%" height="15" fill="rgb(207,100,48)" fg:x="145" fg:w="3"/><text x="11.9059%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.8971%" y="549" width="0.0804%" height="15" fill="rgb(210,25,14)" fg:x="148" fg:w="1"/><text x="12.1471%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="11.8971%" y="533" width="0.0804%" height="15" fill="rgb(246,116,27)" fg:x="148" fg:w="1"/><text x="12.1471%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.8971%" y="517" width="0.0804%" height="15" fill="rgb(214,193,42)" fg:x="148" fg:w="1"/><text x="12.1471%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="11.8971%" y="501" width="0.0804%" height="15" fill="rgb(214,122,8)" fg:x="148" fg:w="1"/><text x="12.1471%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8971%" y="485" width="0.0804%" height="15" fill="rgb(244,173,18)" fg:x="148" fg:w="1"/><text x="12.1471%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.9775%" y="517" width="0.2412%" height="15" fill="rgb(232,68,19)" fg:x="149" fg:w="3"/><text x="12.2275%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.9775%" y="501" width="0.2412%" height="15" fill="rgb(236,224,1)" fg:x="149" fg:w="3"/><text x="12.2275%" y="511.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="11.9775%" y="485" width="0.2412%" height="15" fill="rgb(240,11,8)" fg:x="149" fg:w="3"/><text x="12.2275%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.2990%" y="453" width="0.0804%" height="15" fill="rgb(244,159,20)" fg:x="153" fg:w="1"/><text x="12.5490%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="12.2186%" y="501" width="0.3215%" height="15" fill="rgb(240,223,54)" fg:x="152" fg:w="4"/><text x="12.4686%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="12.2186%" y="485" width="0.3215%" height="15" fill="rgb(237,146,5)" fg:x="152" fg:w="4"/><text x="12.4686%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="12.2990%" y="469" width="0.2412%" height="15" fill="rgb(218,221,32)" fg:x="153" fg:w="3"/><text x="12.5490%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.3794%" y="453" width="0.1608%" height="15" fill="rgb(244,96,26)" fg:x="154" fg:w="2"/><text x="12.6294%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="12.3794%" y="437" width="0.1608%" height="15" fill="rgb(245,184,37)" fg:x="154" fg:w="2"/><text x="12.6294%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.3794%" y="421" width="0.1608%" height="15" fill="rgb(248,91,47)" fg:x="154" fg:w="2"/><text x="12.6294%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.3794%" y="405" width="0.1608%" height="15" fill="rgb(243,199,8)" fg:x="154" fg:w="2"/><text x="12.6294%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="12.3794%" y="389" width="0.1608%" height="15" fill="rgb(249,12,15)" fg:x="154" fg:w="2"/><text x="12.6294%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="11.4952%" y="565" width="1.1254%" height="15" fill="rgb(245,97,12)" fg:x="143" fg:w="14"/><text x="11.7452%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="11.9775%" y="549" width="0.6431%" height="15" fill="rgb(244,61,1)" fg:x="149" fg:w="8"/><text x="12.2275%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="11.9775%" y="533" width="0.6431%" height="15" fill="rgb(222,194,10)" fg:x="149" fg:w="8"/><text x="12.2275%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="12.2186%" y="517" width="0.4019%" height="15" fill="rgb(226,178,8)" fg:x="152" fg:w="5"/><text x="12.4686%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5402%" y="501" width="0.0804%" height="15" fill="rgb(241,32,34)" fg:x="156" fg:w="1"/><text x="12.7902%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.29%)</title><rect x="11.4148%" y="581" width="1.2862%" height="15" fill="rgb(254,26,6)" fg:x="142" fg:w="16"/><text x="11.6648%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="12.6206%" y="565" width="0.0804%" height="15" fill="rgb(249,71,11)" fg:x="157" fg:w="1"/><text x="12.8706%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6206%" y="549" width="0.0804%" height="15" fill="rgb(232,170,27)" fg:x="157" fg:w="1"/><text x="12.8706%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.37%)</title><rect x="11.4148%" y="597" width="1.3666%" height="15" fill="rgb(214,223,17)" fg:x="142" fg:w="17"/><text x="11.6648%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7010%" y="581" width="0.0804%" height="15" fill="rgb(250,18,15)" fg:x="158" fg:w="1"/><text x="12.9510%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7010%" y="565" width="0.0804%" height="15" fill="rgb(212,153,51)" fg:x="158" fg:w="1"/><text x="12.9510%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.7010%" y="549" width="0.0804%" height="15" fill="rgb(219,194,12)" fg:x="158" fg:w="1"/><text x="12.9510%" y="559.50"></text></g><g><title>engine::session::Session::flush (68 samples, 5.47%)</title><rect x="7.3955%" y="709" width="5.4662%" height="15" fill="rgb(212,58,17)" fg:x="92" fg:w="68"/><text x="7.6455%" y="719.50">engine:..</text></g><g><title>engine::session::Session::save_entity_changes (68 samples, 5.47%)</title><rect x="7.3955%" y="693" width="5.4662%" height="15" fill="rgb(254,5,10)" fg:x="92" fg:w="68"/><text x="7.6455%" y="703.50">engine:..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (60 samples, 4.82%)</title><rect x="8.0386%" y="677" width="4.8232%" height="15" fill="rgb(246,91,7)" fg:x="100" fg:w="60"/><text x="8.2886%" y="687.50">engine..</text></g><g><title>engine::session::SavesEntities::check_for_changes (59 samples, 4.74%)</title><rect x="8.1190%" y="661" width="4.7428%" height="15" fill="rgb(218,108,49)" fg:x="101" fg:w="59"/><text x="8.3690%" y="671.50">engine..</text></g><g><title>kernel::model::any_entity_changes (23 samples, 1.85%)</title><rect x="11.0129%" y="645" width="1.8489%" height="15" fill="rgb(238,123,20)" fg:x="137" fg:w="23"/><text x="11.2629%" y="655.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (23 samples, 1.85%)</title><rect x="11.0129%" y="629" width="1.8489%" height="15" fill="rgb(231,69,23)" fg:x="137" fg:w="23"/><text x="11.2629%" y="639.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.77%)</title><rect x="11.0932%" y="613" width="1.7685%" height="15" fill="rgb(230,209,3)" fg:x="138" fg:w="22"/><text x="11.3432%" y="623.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="12.7814%" y="597" width="0.0804%" height="15" fill="rgb(231,19,0)" fg:x="159" fg:w="1"/><text x="13.0314%" y="607.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.7814%" y="581" width="0.0804%" height="15" fill="rgb(226,192,25)" fg:x="159" fg:w="1"/><text x="13.0314%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.8617%" y="565" width="0.0804%" height="15" fill="rgb(223,175,53)" fg:x="160" fg:w="1"/><text x="13.1117%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="12.8617%" y="677" width="0.2412%" height="15" fill="rgb(248,35,51)" fg:x="160" fg:w="3"/><text x="13.1117%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="12.8617%" y="661" width="0.2412%" height="15" fill="rgb(230,37,26)" fg:x="160" fg:w="3"/><text x="13.1117%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="12.8617%" y="645" width="0.2412%" height="15" fill="rgb(206,120,22)" fg:x="160" fg:w="3"/><text x="13.1117%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="12.8617%" y="629" width="0.2412%" height="15" fill="rgb(207,165,28)" fg:x="160" fg:w="3"/><text x="13.1117%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="12.8617%" y="613" width="0.2412%" height="15" fill="rgb(226,23,46)" fg:x="160" fg:w="3"/><text x="13.1117%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="12.8617%" y="597" width="0.2412%" height="15" fill="rgb(208,130,44)" fg:x="160" fg:w="3"/><text x="13.1117%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="12.8617%" y="581" width="0.2412%" height="15" fill="rgb(231,67,8)" fg:x="160" fg:w="3"/><text x="13.1117%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="12.9421%" y="565" width="0.1608%" height="15" fill="rgb(205,183,22)" fg:x="161" fg:w="2"/><text x="13.1921%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="12.9421%" y="549" width="0.1608%" height="15" fill="rgb(224,47,9)" fg:x="161" fg:w="2"/><text x="13.1921%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="12.9421%" y="533" width="0.1608%" height="15" fill="rgb(250,183,49)" fg:x="161" fg:w="2"/><text x="13.1921%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="12.9421%" y="517" width="0.1608%" height="15" fill="rgb(220,151,39)" fg:x="161" fg:w="2"/><text x="13.1921%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="12.9421%" y="501" width="0.1608%" height="15" fill="rgb(220,118,20)" fg:x="161" fg:w="2"/><text x="13.1921%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="12.9421%" y="485" width="0.1608%" height="15" fill="rgb(231,65,51)" fg:x="161" fg:w="2"/><text x="13.1921%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="12.9421%" y="469" width="0.1608%" height="15" fill="rgb(253,125,37)" fg:x="161" fg:w="2"/><text x="13.1921%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.9421%" y="453" width="0.1608%" height="15" fill="rgb(232,102,6)" fg:x="161" fg:w="2"/><text x="13.1921%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.9421%" y="437" width="0.1608%" height="15" fill="rgb(251,105,13)" fg:x="161" fg:w="2"/><text x="13.1921%" y="447.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="12.9421%" y="421" width="0.1608%" height="15" fill="rgb(222,179,29)" fg:x="161" fg:w="2"/><text x="13.1921%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="12.9421%" y="405" width="0.1608%" height="15" fill="rgb(229,180,53)" fg:x="161" fg:w="2"/><text x="13.1921%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="12.9421%" y="389" width="0.1608%" height="15" fill="rgb(238,104,13)" fg:x="161" fg:w="2"/><text x="13.1921%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="12.9421%" y="373" width="0.1608%" height="15" fill="rgb(210,130,5)" fg:x="161" fg:w="2"/><text x="13.1921%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="12.9421%" y="357" width="0.1608%" height="15" fill="rgb(233,87,49)" fg:x="161" fg:w="2"/><text x="13.1921%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="12.9421%" y="341" width="0.1608%" height="15" fill="rgb(243,34,9)" fg:x="161" fg:w="2"/><text x="13.1921%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="12.9421%" y="325" width="0.1608%" height="15" fill="rgb(235,225,10)" fg:x="161" fg:w="2"/><text x="13.1921%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="12.9421%" y="309" width="0.1608%" height="15" fill="rgb(212,0,30)" fg:x="161" fg:w="2"/><text x="13.1921%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="12.9421%" y="293" width="0.1608%" height="15" fill="rgb(211,177,0)" fg:x="161" fg:w="2"/><text x="13.1921%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="12.9421%" y="277" width="0.1608%" height="15" fill="rgb(225,220,11)" fg:x="161" fg:w="2"/><text x="13.1921%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="12.9421%" y="261" width="0.1608%" height="15" fill="rgb(215,10,13)" fg:x="161" fg:w="2"/><text x="13.1921%" y="271.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="12.9421%" y="245" width="0.1608%" height="15" fill="rgb(240,177,14)" fg:x="161" fg:w="2"/><text x="13.1921%" y="255.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="12.9421%" y="229" width="0.1608%" height="15" fill="rgb(243,7,39)" fg:x="161" fg:w="2"/><text x="13.1921%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.1029%" y="565" width="0.0804%" height="15" fill="rgb(212,99,0)" fg:x="163" fg:w="1"/><text x="13.3529%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1833%" y="501" width="0.0804%" height="15" fill="rgb(225,162,48)" fg:x="164" fg:w="1"/><text x="13.4333%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.1029%" y="645" width="0.2412%" height="15" fill="rgb(246,16,25)" fg:x="163" fg:w="3"/><text x="13.3529%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="13.1029%" y="629" width="0.2412%" height="15" fill="rgb(220,150,2)" fg:x="163" fg:w="3"/><text x="13.3529%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.1029%" y="613" width="0.2412%" height="15" fill="rgb(237,113,11)" fg:x="163" fg:w="3"/><text x="13.3529%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="13.1029%" y="597" width="0.2412%" height="15" fill="rgb(236,70,20)" fg:x="163" fg:w="3"/><text x="13.3529%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="13.1029%" y="581" width="0.2412%" height="15" fill="rgb(234,94,7)" fg:x="163" fg:w="3"/><text x="13.3529%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="13.1833%" y="565" width="0.1608%" height="15" fill="rgb(250,221,0)" fg:x="164" fg:w="2"/><text x="13.4333%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.1833%" y="549" width="0.1608%" height="15" fill="rgb(245,149,46)" fg:x="164" fg:w="2"/><text x="13.4333%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="13.1833%" y="533" width="0.1608%" height="15" fill="rgb(215,37,27)" fg:x="164" fg:w="2"/><text x="13.4333%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.1833%" y="517" width="0.1608%" height="15" fill="rgb(232,65,3)" fg:x="164" fg:w="2"/><text x="13.4333%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.2637%" y="501" width="0.0804%" height="15" fill="rgb(214,2,16)" fg:x="165" fg:w="1"/><text x="13.5137%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2637%" y="485" width="0.0804%" height="15" fill="rgb(227,131,50)" fg:x="165" fg:w="1"/><text x="13.5137%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.3441%" y="629" width="0.0804%" height="15" fill="rgb(247,131,45)" fg:x="166" fg:w="1"/><text x="13.5941%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.3441%" y="613" width="0.0804%" height="15" fill="rgb(215,97,47)" fg:x="166" fg:w="1"/><text x="13.5941%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.3441%" y="597" width="0.0804%" height="15" fill="rgb(233,143,12)" fg:x="166" fg:w="1"/><text x="13.5941%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3441%" y="581" width="0.0804%" height="15" fill="rgb(222,57,17)" fg:x="166" fg:w="1"/><text x="13.5941%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.3441%" y="565" width="0.0804%" height="15" fill="rgb(214,119,38)" fg:x="166" fg:w="1"/><text x="13.5941%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3441%" y="549" width="0.0804%" height="15" fill="rgb(217,28,47)" fg:x="166" fg:w="1"/><text x="13.5941%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.3441%" y="533" width="0.0804%" height="15" fill="rgb(231,14,52)" fg:x="166" fg:w="1"/><text x="13.5941%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3441%" y="517" width="0.0804%" height="15" fill="rgb(220,158,18)" fg:x="166" fg:w="1"/><text x="13.5941%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="13.4244%" y="597" width="0.0804%" height="15" fill="rgb(222,143,46)" fg:x="167" fg:w="1"/><text x="13.6744%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.4244%" y="581" width="0.0804%" height="15" fill="rgb(227,165,5)" fg:x="167" fg:w="1"/><text x="13.6744%" y="591.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="13.4244%" y="565" width="0.0804%" height="15" fill="rgb(216,222,49)" fg:x="167" fg:w="1"/><text x="13.6744%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.4244%" y="549" width="0.0804%" height="15" fill="rgb(238,73,39)" fg:x="167" fg:w="1"/><text x="13.6744%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="13.4244%" y="533" width="0.0804%" height="15" fill="rgb(252,115,9)" fg:x="167" fg:w="1"/><text x="13.6744%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="13.4244%" y="517" width="0.0804%" height="15" fill="rgb(238,202,4)" fg:x="167" fg:w="1"/><text x="13.6744%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="12.8617%" y="693" width="0.7235%" height="15" fill="rgb(252,153,44)" fg:x="160" fg:w="9"/><text x="13.1117%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="13.1029%" y="677" width="0.4823%" height="15" fill="rgb(235,128,27)" fg:x="163" fg:w="6"/><text x="13.3529%" y="687.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="13.1029%" y="661" width="0.4823%" height="15" fill="rgb(221,121,47)" fg:x="163" fg:w="6"/><text x="13.3529%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="13.3441%" y="645" width="0.2412%" height="15" fill="rgb(247,211,47)" fg:x="166" fg:w="3"/><text x="13.5941%" y="655.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="13.4244%" y="629" width="0.1608%" height="15" fill="rgb(252,47,49)" fg:x="167" fg:w="2"/><text x="13.6744%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="13.4244%" y="613" width="0.1608%" height="15" fill="rgb(219,119,53)" fg:x="167" fg:w="2"/><text x="13.6744%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5048%" y="597" width="0.0804%" height="15" fill="rgb(243,165,53)" fg:x="168" fg:w="1"/><text x="13.7548%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.5048%" y="581" width="0.0804%" height="15" fill="rgb(230,12,35)" fg:x="168" fg:w="1"/><text x="13.7548%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5048%" y="565" width="0.0804%" height="15" fill="rgb(239,57,49)" fg:x="168" fg:w="1"/><text x="13.7548%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5048%" y="549" width="0.0804%" height="15" fill="rgb(231,154,7)" fg:x="168" fg:w="1"/><text x="13.7548%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5048%" y="533" width="0.0804%" height="15" fill="rgb(248,81,34)" fg:x="168" fg:w="1"/><text x="13.7548%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5048%" y="517" width="0.0804%" height="15" fill="rgb(247,9,5)" fg:x="168" fg:w="1"/><text x="13.7548%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5048%" y="501" width="0.0804%" height="15" fill="rgb(228,172,27)" fg:x="168" fg:w="1"/><text x="13.7548%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (2 samples, 0.16%)</title><rect x="13.5852%" y="677" width="0.1608%" height="15" fill="rgb(230,57,44)" fg:x="169" fg:w="2"/><text x="13.8352%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="13.6656%" y="661" width="0.0804%" height="15" fill="rgb(249,35,22)" fg:x="170" fg:w="1"/><text x="13.9156%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6656%" y="645" width="0.0804%" height="15" fill="rgb(250,137,27)" fg:x="170" fg:w="1"/><text x="13.9156%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.7460%" y="645" width="0.1608%" height="15" fill="rgb(251,57,31)" fg:x="171" fg:w="2"/><text x="13.9960%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.7460%" y="629" width="0.1608%" height="15" fill="rgb(238,60,0)" fg:x="171" fg:w="2"/><text x="13.9960%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.7460%" y="613" width="0.1608%" height="15" fill="rgb(242,185,39)" fg:x="171" fg:w="2"/><text x="13.9960%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.7460%" y="597" width="0.1608%" height="15" fill="rgb(240,63,43)" fg:x="171" fg:w="2"/><text x="13.9960%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.7460%" y="581" width="0.1608%" height="15" fill="rgb(236,155,6)" fg:x="171" fg:w="2"/><text x="13.9960%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.7460%" y="565" width="0.1608%" height="15" fill="rgb(215,11,29)" fg:x="171" fg:w="2"/><text x="13.9960%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.7460%" y="549" width="0.1608%" height="15" fill="rgb(228,180,48)" fg:x="171" fg:w="2"/><text x="13.9960%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9068%" y="533" width="0.0804%" height="15" fill="rgb(241,102,12)" fg:x="173" fg:w="1"/><text x="14.1568%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.9068%" y="597" width="0.1608%" height="15" fill="rgb(246,213,4)" fg:x="173" fg:w="2"/><text x="14.1568%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="13.9068%" y="581" width="0.1608%" height="15" fill="rgb(218,134,35)" fg:x="173" fg:w="2"/><text x="14.1568%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.9068%" y="565" width="0.1608%" height="15" fill="rgb(251,117,35)" fg:x="173" fg:w="2"/><text x="14.1568%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.9068%" y="549" width="0.1608%" height="15" fill="rgb(206,156,45)" fg:x="173" fg:w="2"/><text x="14.1568%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.9871%" y="533" width="0.0804%" height="15" fill="rgb(218,52,27)" fg:x="174" fg:w="1"/><text x="14.2371%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.9871%" y="517" width="0.0804%" height="15" fill="rgb(238,83,36)" fg:x="174" fg:w="1"/><text x="14.2371%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="13.7460%" y="677" width="0.4019%" height="15" fill="rgb(218,53,43)" fg:x="171" fg:w="5"/><text x="13.9960%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="13.7460%" y="661" width="0.4019%" height="15" fill="rgb(239,54,39)" fg:x="171" fg:w="5"/><text x="13.9960%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="13.9068%" y="645" width="0.2412%" height="15" fill="rgb(212,198,13)" fg:x="173" fg:w="3"/><text x="14.1568%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="13.9068%" y="629" width="0.2412%" height="15" fill="rgb(234,54,46)" fg:x="173" fg:w="3"/><text x="14.1568%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.9068%" y="613" width="0.2412%" height="15" fill="rgb(217,120,7)" fg:x="173" fg:w="3"/><text x="14.1568%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.0675%" y="597" width="0.0804%" height="15" fill="rgb(246,39,15)" fg:x="175" fg:w="1"/><text x="14.3175%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0675%" y="581" width="0.0804%" height="15" fill="rgb(242,143,31)" fg:x="175" fg:w="1"/><text x="14.3175%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.0675%" y="565" width="0.0804%" height="15" fill="rgb(252,60,24)" fg:x="175" fg:w="1"/><text x="14.3175%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0675%" y="549" width="0.0804%" height="15" fill="rgb(249,220,7)" fg:x="175" fg:w="1"/><text x="14.3175%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.0675%" y="533" width="0.0804%" height="15" fill="rgb(236,67,13)" fg:x="175" fg:w="1"/><text x="14.3175%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0675%" y="517" width="0.0804%" height="15" fill="rgb(210,62,39)" fg:x="175" fg:w="1"/><text x="14.3175%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.0675%" y="501" width="0.0804%" height="15" fill="rgb(219,122,53)" fg:x="175" fg:w="1"/><text x="14.3175%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0675%" y="485" width="0.0804%" height="15" fill="rgb(218,87,25)" fg:x="175" fg:w="1"/><text x="14.3175%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0675%" y="469" width="0.0804%" height="15" fill="rgb(234,179,48)" fg:x="175" fg:w="1"/><text x="14.3175%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0675%" y="453" width="0.0804%" height="15" fill="rgb(248,90,0)" fg:x="175" fg:w="1"/><text x="14.3175%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.2283%" y="629" width="0.0804%" height="15" fill="rgb(207,228,37)" fg:x="177" fg:w="1"/><text x="14.4783%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.2283%" y="613" width="0.0804%" height="15" fill="rgb(235,214,15)" fg:x="177" fg:w="1"/><text x="14.4783%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.2283%" y="597" width="0.0804%" height="15" fill="rgb(210,144,39)" fg:x="177" fg:w="1"/><text x="14.4783%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.2283%" y="581" width="0.0804%" height="15" fill="rgb(222,67,41)" fg:x="177" fg:w="1"/><text x="14.4783%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.2283%" y="565" width="0.0804%" height="15" fill="rgb(205,35,37)" fg:x="177" fg:w="1"/><text x="14.4783%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.2283%" y="549" width="0.0804%" height="15" fill="rgb(216,125,40)" fg:x="177" fg:w="1"/><text x="14.4783%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.2283%" y="533" width="0.0804%" height="15" fill="rgb(228,227,20)" fg:x="177" fg:w="1"/><text x="14.4783%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.2283%" y="517" width="0.0804%" height="15" fill="rgb(242,173,45)" fg:x="177" fg:w="1"/><text x="14.4783%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.2283%" y="501" width="0.0804%" height="15" fill="rgb(215,79,24)" fg:x="177" fg:w="1"/><text x="14.4783%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.2283%" y="485" width="0.0804%" height="15" fill="rgb(238,164,38)" fg:x="177" fg:w="1"/><text x="14.4783%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.2283%" y="469" width="0.0804%" height="15" fill="rgb(245,196,38)" fg:x="177" fg:w="1"/><text x="14.4783%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.2283%" y="453" width="0.0804%" height="15" fill="rgb(231,217,29)" fg:x="177" fg:w="1"/><text x="14.4783%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3087%" y="565" width="0.0804%" height="15" fill="rgb(245,6,4)" fg:x="178" fg:w="1"/><text x="14.5587%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3087%" y="549" width="0.0804%" height="15" fill="rgb(214,76,49)" fg:x="178" fg:w="1"/><text x="14.5587%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3087%" y="533" width="0.0804%" height="15" fill="rgb(205,96,12)" fg:x="178" fg:w="1"/><text x="14.5587%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.3087%" y="581" width="0.1608%" height="15" fill="rgb(243,131,4)" fg:x="178" fg:w="2"/><text x="14.5587%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3891%" y="565" width="0.0804%" height="15" fill="rgb(214,114,4)" fg:x="179" fg:w="1"/><text x="14.6391%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.4695%" y="581" width="0.0804%" height="15" fill="rgb(234,215,15)" fg:x="180" fg:w="1"/><text x="14.7195%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="14.3087%" y="629" width="0.3215%" height="15" fill="rgb(250,216,45)" fg:x="178" fg:w="4"/><text x="14.5587%" y="639.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="14.3087%" y="613" width="0.3215%" height="15" fill="rgb(236,128,4)" fg:x="178" fg:w="4"/><text x="14.5587%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.3087%" y="597" width="0.3215%" height="15" fill="rgb(234,50,33)" fg:x="178" fg:w="4"/><text x="14.5587%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.5498%" y="581" width="0.0804%" height="15" fill="rgb(253,131,37)" fg:x="181" fg:w="1"/><text x="14.7998%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5498%" y="565" width="0.0804%" height="15" fill="rgb(218,55,27)" fg:x="181" fg:w="1"/><text x="14.7998%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.5498%" y="549" width="0.0804%" height="15" fill="rgb(241,220,28)" fg:x="181" fg:w="1"/><text x="14.7998%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5498%" y="533" width="0.0804%" height="15" fill="rgb(241,90,48)" fg:x="181" fg:w="1"/><text x="14.7998%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.5498%" y="517" width="0.0804%" height="15" fill="rgb(216,43,37)" fg:x="181" fg:w="1"/><text x="14.7998%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5498%" y="501" width="0.0804%" height="15" fill="rgb(207,173,9)" fg:x="181" fg:w="1"/><text x="14.7998%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.5498%" y="485" width="0.0804%" height="15" fill="rgb(240,126,30)" fg:x="181" fg:w="1"/><text x="14.7998%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5498%" y="469" width="0.0804%" height="15" fill="rgb(228,178,53)" fg:x="181" fg:w="1"/><text x="14.7998%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6302%" y="437" width="0.0804%" height="15" fill="rgb(217,33,4)" fg:x="182" fg:w="1"/><text x="14.8802%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6302%" y="421" width="0.0804%" height="15" fill="rgb(206,124,34)" fg:x="182" fg:w="1"/><text x="14.8802%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.6302%" y="405" width="0.0804%" height="15" fill="rgb(208,122,53)" fg:x="182" fg:w="1"/><text x="14.8802%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.6302%" y="389" width="0.0804%" height="15" fill="rgb(215,202,26)" fg:x="182" fg:w="1"/><text x="14.8802%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.6302%" y="373" width="0.0804%" height="15" fill="rgb(232,198,31)" fg:x="182" fg:w="1"/><text x="14.8802%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.6302%" y="357" width="0.0804%" height="15" fill="rgb(222,23,35)" fg:x="182" fg:w="1"/><text x="14.8802%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6302%" y="341" width="0.0804%" height="15" fill="rgb(242,27,53)" fg:x="182" fg:w="1"/><text x="14.8802%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.6302%" y="549" width="0.1608%" height="15" fill="rgb(210,216,42)" fg:x="182" fg:w="2"/><text x="14.8802%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.6302%" y="533" width="0.1608%" height="15" fill="rgb(234,39,38)" fg:x="182" fg:w="2"/><text x="14.8802%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="14.6302%" y="517" width="0.1608%" height="15" fill="rgb(235,126,54)" fg:x="182" fg:w="2"/><text x="14.8802%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="14.6302%" y="501" width="0.1608%" height="15" fill="rgb(235,150,33)" fg:x="182" fg:w="2"/><text x="14.8802%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="14.6302%" y="485" width="0.1608%" height="15" fill="rgb(249,49,53)" fg:x="182" fg:w="2"/><text x="14.8802%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="14.6302%" y="469" width="0.1608%" height="15" fill="rgb(238,60,50)" fg:x="182" fg:w="2"/><text x="14.8802%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="14.6302%" y="453" width="0.1608%" height="15" fill="rgb(210,5,2)" fg:x="182" fg:w="2"/><text x="14.8802%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.7106%" y="437" width="0.0804%" height="15" fill="rgb(214,207,24)" fg:x="183" fg:w="1"/><text x="14.9606%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.7106%" y="421" width="0.0804%" height="15" fill="rgb(228,173,2)" fg:x="183" fg:w="1"/><text x="14.9606%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.6302%" y="565" width="0.2412%" height="15" fill="rgb(244,26,8)" fg:x="182" fg:w="3"/><text x="14.8802%" y="575.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="14.7910%" y="549" width="0.0804%" height="15" fill="rgb(249,153,35)" fg:x="184" fg:w="1"/><text x="15.0410%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.7910%" y="533" width="0.0804%" height="15" fill="rgb(221,215,40)" fg:x="184" fg:w="1"/><text x="15.0410%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="14.6302%" y="581" width="0.4019%" height="15" fill="rgb(238,106,35)" fg:x="182" fg:w="5"/><text x="14.8802%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.8714%" y="565" width="0.1608%" height="15" fill="rgb(207,195,21)" fg:x="185" fg:w="2"/><text x="15.1214%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.0322%" y="581" width="0.0804%" height="15" fill="rgb(205,43,29)" fg:x="187" fg:w="1"/><text x="15.2822%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.0322%" y="565" width="0.0804%" height="15" fill="rgb(236,35,21)" fg:x="187" fg:w="1"/><text x="15.2822%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.0322%" y="549" width="0.0804%" height="15" fill="rgb(244,74,8)" fg:x="187" fg:w="1"/><text x="15.2822%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.1125%" y="549" width="0.0804%" height="15" fill="rgb(241,229,7)" fg:x="188" fg:w="1"/><text x="15.3625%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1125%" y="533" width="0.0804%" height="15" fill="rgb(212,223,25)" fg:x="188" fg:w="1"/><text x="15.3625%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (30 samples, 2.41%)</title><rect x="12.8617%" y="709" width="2.4116%" height="15" fill="rgb(234,58,53)" fg:x="160" fg:w="30"/><text x="13.1117%" y="719.50">pl..</text></g><g><title>plugins_core::tools::set_container (21 samples, 1.69%)</title><rect x="13.5852%" y="693" width="1.6881%" height="15" fill="rgb(244,36,1)" fg:x="169" fg:w="21"/><text x="13.8352%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (14 samples, 1.13%)</title><rect x="14.1479%" y="677" width="1.1254%" height="15" fill="rgb(222,40,54)" fg:x="176" fg:w="14"/><text x="14.3979%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.05%)</title><rect x="14.2283%" y="661" width="1.0450%" height="15" fill="rgb(210,207,39)" fg:x="177" fg:w="13"/><text x="14.4783%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (13 samples, 1.05%)</title><rect x="14.2283%" y="645" width="1.0450%" height="15" fill="rgb(234,52,14)" fg:x="177" fg:w="13"/><text x="14.4783%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="14.6302%" y="629" width="0.6431%" height="15" fill="rgb(239,108,46)" fg:x="182" fg:w="8"/><text x="14.8802%" y="639.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="14.6302%" y="613" width="0.6431%" height="15" fill="rgb(252,223,5)" fg:x="182" fg:w="8"/><text x="14.8802%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="14.6302%" y="597" width="0.6431%" height="15" fill="rgb(227,181,11)" fg:x="182" fg:w="8"/><text x="14.8802%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="15.1125%" y="581" width="0.1608%" height="15" fill="rgb(248,126,40)" fg:x="188" fg:w="2"/><text x="15.3625%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1125%" y="565" width="0.1608%" height="15" fill="rgb(243,1,18)" fg:x="188" fg:w="2"/><text x="15.3625%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.1929%" y="549" width="0.0804%" height="15" fill="rgb(214,145,23)" fg:x="189" fg:w="1"/><text x="15.4429%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1929%" y="533" width="0.0804%" height="15" fill="rgb(241,218,11)" fg:x="189" fg:w="1"/><text x="15.4429%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.1929%" y="517" width="0.0804%" height="15" fill="rgb(214,219,24)" fg:x="189" fg:w="1"/><text x="15.4429%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1929%" y="501" width="0.0804%" height="15" fill="rgb(235,32,7)" fg:x="189" fg:w="1"/><text x="15.4429%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.1929%" y="485" width="0.0804%" height="15" fill="rgb(227,121,28)" fg:x="189" fg:w="1"/><text x="15.4429%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1929%" y="469" width="0.0804%" height="15" fill="rgb(216,129,49)" fg:x="189" fg:w="1"/><text x="15.4429%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="15.2733%" y="677" width="0.0804%" height="15" fill="rgb(207,194,50)" fg:x="190" fg:w="1"/><text x="15.5233%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.2733%" y="661" width="0.0804%" height="15" fill="rgb(207,4,18)" fg:x="190" fg:w="1"/><text x="15.5233%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.2733%" y="645" width="0.0804%" height="15" fill="rgb(213,50,30)" fg:x="190" fg:w="1"/><text x="15.5233%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.2733%" y="629" width="0.0804%" height="15" fill="rgb(208,77,22)" fg:x="190" fg:w="1"/><text x="15.5233%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.2733%" y="613" width="0.0804%" height="15" fill="rgb(244,204,34)" fg:x="190" fg:w="1"/><text x="15.5233%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3537%" y="565" width="0.0804%" height="15" fill="rgb(230,20,17)" fg:x="191" fg:w="1"/><text x="15.6037%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3537%" y="549" width="0.0804%" height="15" fill="rgb(237,83,15)" fg:x="191" fg:w="1"/><text x="15.6037%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3537%" y="533" width="0.0804%" height="15" fill="rgb(221,109,25)" fg:x="191" fg:w="1"/><text x="15.6037%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.3537%" y="597" width="0.1608%" height="15" fill="rgb(205,194,52)" fg:x="191" fg:w="2"/><text x="15.6037%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.3537%" y="581" width="0.1608%" height="15" fill="rgb(244,173,54)" fg:x="191" fg:w="2"/><text x="15.6037%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.4341%" y="565" width="0.0804%" height="15" fill="rgb(227,181,18)" fg:x="192" fg:w="1"/><text x="15.6841%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5145%" y="597" width="0.0804%" height="15" fill="rgb(238,36,30)" fg:x="193" fg:w="1"/><text x="15.7645%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.5145%" y="581" width="0.0804%" height="15" fill="rgb(254,85,0)" fg:x="193" fg:w="1"/><text x="15.7645%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5145%" y="565" width="0.0804%" height="15" fill="rgb(247,63,33)" fg:x="193" fg:w="1"/><text x="15.7645%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5145%" y="549" width="0.0804%" height="15" fill="rgb(220,7,54)" fg:x="193" fg:w="1"/><text x="15.7645%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5145%" y="533" width="0.0804%" height="15" fill="rgb(238,227,21)" fg:x="193" fg:w="1"/><text x="15.7645%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5145%" y="517" width="0.0804%" height="15" fill="rgb(237,29,31)" fg:x="193" fg:w="1"/><text x="15.7645%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5145%" y="501" width="0.0804%" height="15" fill="rgb(211,21,50)" fg:x="193" fg:w="1"/><text x="15.7645%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="15.3537%" y="645" width="0.4019%" height="15" fill="rgb(239,119,2)" fg:x="191" fg:w="5"/><text x="15.6037%" y="655.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="15.3537%" y="629" width="0.4019%" height="15" fill="rgb(250,2,39)" fg:x="191" fg:w="5"/><text x="15.6037%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="15.3537%" y="613" width="0.4019%" height="15" fill="rgb(244,46,53)" fg:x="191" fg:w="5"/><text x="15.6037%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="15.5949%" y="597" width="0.1608%" height="15" fill="rgb(209,21,19)" fg:x="194" fg:w="2"/><text x="15.8449%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.5949%" y="581" width="0.1608%" height="15" fill="rgb(236,145,4)" fg:x="194" fg:w="2"/><text x="15.8449%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="15.5949%" y="565" width="0.1608%" height="15" fill="rgb(220,133,36)" fg:x="194" fg:w="2"/><text x="15.8449%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.5949%" y="549" width="0.1608%" height="15" fill="rgb(244,18,3)" fg:x="194" fg:w="2"/><text x="15.8449%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="15.5949%" y="533" width="0.1608%" height="15" fill="rgb(232,171,48)" fg:x="194" fg:w="2"/><text x="15.8449%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.5949%" y="517" width="0.1608%" height="15" fill="rgb(223,223,53)" fg:x="194" fg:w="2"/><text x="15.8449%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.6752%" y="501" width="0.0804%" height="15" fill="rgb(246,92,13)" fg:x="195" fg:w="1"/><text x="15.9252%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6752%" y="485" width="0.0804%" height="15" fill="rgb(229,171,10)" fg:x="195" fg:w="1"/><text x="15.9252%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.7556%" y="597" width="0.1608%" height="15" fill="rgb(213,131,26)" fg:x="196" fg:w="2"/><text x="16.0056%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.7556%" y="581" width="0.1608%" height="15" fill="rgb(242,87,54)" fg:x="196" fg:w="2"/><text x="16.0056%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.7556%" y="565" width="0.1608%" height="15" fill="rgb(237,21,35)" fg:x="196" fg:w="2"/><text x="16.0056%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8360%" y="549" width="0.0804%" height="15" fill="rgb(253,13,47)" fg:x="197" fg:w="1"/><text x="16.0860%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="15.7556%" y="629" width="0.2412%" height="15" fill="rgb(215,122,49)" fg:x="196" fg:w="3"/><text x="16.0056%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.7556%" y="613" width="0.2412%" height="15" fill="rgb(209,179,30)" fg:x="196" fg:w="3"/><text x="16.0056%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.9164%" y="597" width="0.0804%" height="15" fill="rgb(235,100,24)" fg:x="198" fg:w="1"/><text x="16.1664%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9164%" y="581" width="0.0804%" height="15" fill="rgb(209,67,24)" fg:x="198" fg:w="1"/><text x="16.1664%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.9164%" y="565" width="0.0804%" height="15" fill="rgb(206,74,32)" fg:x="198" fg:w="1"/><text x="16.1664%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9164%" y="549" width="0.0804%" height="15" fill="rgb(212,45,25)" fg:x="198" fg:w="1"/><text x="16.1664%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.9164%" y="533" width="0.0804%" height="15" fill="rgb(239,26,3)" fg:x="198" fg:w="1"/><text x="16.1664%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9164%" y="517" width="0.0804%" height="15" fill="rgb(218,36,15)" fg:x="198" fg:w="1"/><text x="16.1664%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.9164%" y="501" width="0.0804%" height="15" fill="rgb(206,108,24)" fg:x="198" fg:w="1"/><text x="16.1664%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9164%" y="485" width="0.0804%" height="15" fill="rgb(234,204,42)" fg:x="198" fg:w="1"/><text x="16.1664%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.9164%" y="469" width="0.0804%" height="15" fill="rgb(229,2,11)" fg:x="198" fg:w="1"/><text x="16.1664%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9164%" y="453" width="0.0804%" height="15" fill="rgb(221,20,48)" fg:x="198" fg:w="1"/><text x="16.1664%" y="463.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (11 samples, 0.88%)</title><rect x="15.3537%" y="661" width="0.8842%" height="15" fill="rgb(244,164,10)" fg:x="191" fg:w="11"/><text x="15.6037%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="15.7556%" y="645" width="0.4823%" height="15" fill="rgb(243,229,2)" fg:x="196" fg:w="6"/><text x="16.0056%" y="655.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="15.9968%" y="629" width="0.2412%" height="15" fill="rgb(232,131,37)" fg:x="199" fg:w="3"/><text x="16.2468%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.0772%" y="613" width="0.1608%" height="15" fill="rgb(217,156,11)" fg:x="200" fg:w="2"/><text x="16.3272%" y="623.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="16.0772%" y="597" width="0.1608%" height="15" fill="rgb(239,99,48)" fg:x="200" fg:w="2"/><text x="16.3272%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.0772%" y="581" width="0.1608%" height="15" fill="rgb(231,209,9)" fg:x="200" fg:w="2"/><text x="16.3272%" y="591.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="16.0772%" y="565" width="0.1608%" height="15" fill="rgb(254,97,27)" fg:x="200" fg:w="2"/><text x="16.3272%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.0772%" y="549" width="0.1608%" height="15" fill="rgb(223,151,38)" fg:x="200" fg:w="2"/><text x="16.3272%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="16.0772%" y="533" width="0.1608%" height="15" fill="rgb(219,206,35)" fg:x="200" fg:w="2"/><text x="16.3272%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="16.1576%" y="517" width="0.0804%" height="15" fill="rgb(216,130,31)" fg:x="201" fg:w="1"/><text x="16.4076%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.1576%" y="501" width="0.0804%" height="15" fill="rgb(251,97,34)" fg:x="201" fg:w="1"/><text x="16.4076%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="16.1576%" y="485" width="0.0804%" height="15" fill="rgb(246,159,47)" fg:x="201" fg:w="1"/><text x="16.4076%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1576%" y="469" width="0.0804%" height="15" fill="rgb(232,87,10)" fg:x="201" fg:w="1"/><text x="16.4076%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.05%)</title><rect x="15.2733%" y="709" width="1.0450%" height="15" fill="rgb(249,1,37)" fg:x="190" fg:w="13"/><text x="15.5233%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="15.2733%" y="693" width="1.0450%" height="15" fill="rgb(239,135,14)" fg:x="190" fg:w="13"/><text x="15.5233%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (12 samples, 0.96%)</title><rect x="15.3537%" y="677" width="0.9646%" height="15" fill="rgb(253,116,46)" fg:x="191" fg:w="12"/><text x="15.6037%" y="687.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="16.2379%" y="661" width="0.0804%" height="15" fill="rgb(222,217,37)" fg:x="202" fg:w="1"/><text x="16.4879%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2379%" y="645" width="0.0804%" height="15" fill="rgb(252,96,8)" fg:x="202" fg:w="1"/><text x="16.4879%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2379%" y="629" width="0.0804%" height="15" fill="rgb(254,103,41)" fg:x="202" fg:w="1"/><text x="16.4879%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.2379%" y="613" width="0.0804%" height="15" fill="rgb(218,213,19)" fg:x="202" fg:w="1"/><text x="16.4879%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.2379%" y="597" width="0.0804%" height="15" fill="rgb(253,95,21)" fg:x="202" fg:w="1"/><text x="16.4879%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.2379%" y="581" width="0.0804%" height="15" fill="rgb(229,26,28)" fg:x="202" fg:w="1"/><text x="16.4879%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.2379%" y="565" width="0.0804%" height="15" fill="rgb(230,129,16)" fg:x="202" fg:w="1"/><text x="16.4879%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.2379%" y="549" width="0.0804%" height="15" fill="rgb(236,126,17)" fg:x="202" fg:w="1"/><text x="16.4879%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.2379%" y="533" width="0.0804%" height="15" fill="rgb(209,33,33)" fg:x="202" fg:w="1"/><text x="16.4879%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.2379%" y="517" width="0.0804%" height="15" fill="rgb(227,85,29)" fg:x="202" fg:w="1"/><text x="16.4879%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.2379%" y="501" width="0.0804%" height="15" fill="rgb(241,53,46)" fg:x="202" fg:w="1"/><text x="16.4879%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.2379%" y="485" width="0.0804%" height="15" fill="rgb(228,167,53)" fg:x="202" fg:w="1"/><text x="16.4879%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="16.3183%" y="709" width="0.0804%" height="15" fill="rgb(238,195,45)" fg:x="203" fg:w="1"/><text x="16.5683%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="16.3183%" y="693" width="0.0804%" height="15" fill="rgb(252,124,45)" fg:x="203" fg:w="1"/><text x="16.5683%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.3183%" y="677" width="0.0804%" height="15" fill="rgb(251,38,35)" fg:x="203" fg:w="1"/><text x="16.5683%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="16.3183%" y="661" width="0.0804%" height="15" fill="rgb(227,33,2)" fg:x="203" fg:w="1"/><text x="16.5683%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.3183%" y="645" width="0.0804%" height="15" fill="rgb(223,157,46)" fg:x="203" fg:w="1"/><text x="16.5683%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="16.3987%" y="677" width="0.0804%" height="15" fill="rgb(222,78,41)" fg:x="204" fg:w="1"/><text x="16.6487%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.3987%" y="661" width="0.0804%" height="15" fill="rgb(248,176,11)" fg:x="204" fg:w="1"/><text x="16.6487%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5595%" y="533" width="0.0804%" height="15" fill="rgb(241,221,18)" fg:x="206" fg:w="1"/><text x="16.8095%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5595%" y="517" width="0.0804%" height="15" fill="rgb(218,85,22)" fg:x="206" fg:w="1"/><text x="16.8095%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.5595%" y="501" width="0.0804%" height="15" fill="rgb(222,223,7)" fg:x="206" fg:w="1"/><text x="16.8095%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.5595%" y="485" width="0.0804%" height="15" fill="rgb(254,59,39)" fg:x="206" fg:w="1"/><text x="16.8095%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.5595%" y="469" width="0.0804%" height="15" fill="rgb(247,100,27)" fg:x="206" fg:w="1"/><text x="16.8095%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.5595%" y="453" width="0.0804%" height="15" fill="rgb(237,207,10)" fg:x="206" fg:w="1"/><text x="16.8095%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.5595%" y="437" width="0.0804%" height="15" fill="rgb(220,121,28)" fg:x="206" fg:w="1"/><text x="16.8095%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.5595%" y="421" width="0.0804%" height="15" fill="rgb(213,223,20)" fg:x="206" fg:w="1"/><text x="16.8095%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.5595%" y="405" width="0.0804%" height="15" fill="rgb(205,121,27)" fg:x="206" fg:w="1"/><text x="16.8095%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.5595%" y="389" width="0.0804%" height="15" fill="rgb(253,24,53)" fg:x="206" fg:w="1"/><text x="16.8095%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.5595%" y="373" width="0.0804%" height="15" fill="rgb(224,224,47)" fg:x="206" fg:w="1"/><text x="16.8095%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5595%" y="357" width="0.0804%" height="15" fill="rgb(250,125,36)" fg:x="206" fg:w="1"/><text x="16.8095%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="16.3987%" y="693" width="0.3215%" height="15" fill="rgb(240,144,38)" fg:x="204" fg:w="4"/><text x="16.6487%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="16.4791%" y="677" width="0.2412%" height="15" fill="rgb(250,15,50)" fg:x="205" fg:w="3"/><text x="16.7291%" y="687.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="16.4791%" y="661" width="0.2412%" height="15" fill="rgb(210,24,26)" fg:x="205" fg:w="3"/><text x="16.7291%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="16.4791%" y="645" width="0.2412%" height="15" fill="rgb(234,53,53)" fg:x="205" fg:w="3"/><text x="16.7291%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="16.4791%" y="629" width="0.2412%" height="15" fill="rgb(208,108,28)" fg:x="205" fg:w="3"/><text x="16.7291%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.4791%" y="613" width="0.2412%" height="15" fill="rgb(227,143,7)" fg:x="205" fg:w="3"/><text x="16.7291%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.4791%" y="597" width="0.2412%" height="15" fill="rgb(238,189,38)" fg:x="205" fg:w="3"/><text x="16.7291%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.5595%" y="581" width="0.1608%" height="15" fill="rgb(222,69,15)" fg:x="206" fg:w="2"/><text x="16.8095%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.5595%" y="565" width="0.1608%" height="15" fill="rgb(213,169,7)" fg:x="206" fg:w="2"/><text x="16.8095%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.5595%" y="549" width="0.1608%" height="15" fill="rgb(251,219,4)" fg:x="206" fg:w="2"/><text x="16.8095%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.6399%" y="533" width="0.0804%" height="15" fill="rgb(241,55,40)" fg:x="207" fg:w="1"/><text x="16.8899%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="16.7203%" y="645" width="0.2412%" height="15" fill="rgb(243,57,30)" fg:x="208" fg:w="3"/><text x="16.9703%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="16.9614%" y="613" width="0.0804%" height="15" fill="rgb(234,50,30)" fg:x="211" fg:w="1"/><text x="17.2114%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.9614%" y="597" width="0.0804%" height="15" fill="rgb(239,23,42)" fg:x="211" fg:w="1"/><text x="17.2114%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.9614%" y="581" width="0.0804%" height="15" fill="rgb(217,38,19)" fg:x="211" fg:w="1"/><text x="17.2114%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.9614%" y="565" width="0.0804%" height="15" fill="rgb(215,179,16)" fg:x="211" fg:w="1"/><text x="17.2114%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.9614%" y="549" width="0.0804%" height="15" fill="rgb(254,21,37)" fg:x="211" fg:w="1"/><text x="17.2114%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.9614%" y="533" width="0.0804%" height="15" fill="rgb(219,207,48)" fg:x="211" fg:w="1"/><text x="17.2114%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="16.9614%" y="517" width="0.0804%" height="15" fill="rgb(227,225,41)" fg:x="211" fg:w="1"/><text x="17.2114%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.9614%" y="501" width="0.0804%" height="15" fill="rgb(223,130,1)" fg:x="211" fg:w="1"/><text x="17.2114%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.9614%" y="485" width="0.0804%" height="15" fill="rgb(249,54,42)" fg:x="211" fg:w="1"/><text x="17.2114%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.9614%" y="469" width="0.0804%" height="15" fill="rgb(248,69,25)" fg:x="211" fg:w="1"/><text x="17.2114%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="16.9614%" y="453" width="0.0804%" height="15" fill="rgb(234,21,32)" fg:x="211" fg:w="1"/><text x="17.2114%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.9614%" y="437" width="0.0804%" height="15" fill="rgb(252,136,6)" fg:x="211" fg:w="1"/><text x="17.2114%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.9614%" y="421" width="0.0804%" height="15" fill="rgb(245,87,12)" fg:x="211" fg:w="1"/><text x="17.2114%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.9614%" y="405" width="0.0804%" height="15" fill="rgb(208,12,15)" fg:x="211" fg:w="1"/><text x="17.2114%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.9614%" y="389" width="0.0804%" height="15" fill="rgb(250,98,2)" fg:x="211" fg:w="1"/><text x="17.2114%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.9614%" y="373" width="0.0804%" height="15" fill="rgb(205,213,15)" fg:x="211" fg:w="1"/><text x="17.2114%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="16.9614%" y="357" width="0.0804%" height="15" fill="rgb(248,192,44)" fg:x="211" fg:w="1"/><text x="17.2114%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="16.9614%" y="341" width="0.0804%" height="15" fill="rgb(221,89,17)" fg:x="211" fg:w="1"/><text x="17.2114%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="16.9614%" y="325" width="0.0804%" height="15" fill="rgb(209,55,3)" fg:x="211" fg:w="1"/><text x="17.2114%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="16.9614%" y="309" width="0.0804%" height="15" fill="rgb(247,23,45)" fg:x="211" fg:w="1"/><text x="17.2114%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.9614%" y="293" width="0.0804%" height="15" fill="rgb(235,152,23)" fg:x="211" fg:w="1"/><text x="17.2114%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.9614%" y="277" width="0.0804%" height="15" fill="rgb(244,63,13)" fg:x="211" fg:w="1"/><text x="17.2114%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.9614%" y="261" width="0.0804%" height="15" fill="rgb(227,30,37)" fg:x="211" fg:w="1"/><text x="17.2114%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="16.9614%" y="245" width="0.0804%" height="15" fill="rgb(224,49,42)" fg:x="211" fg:w="1"/><text x="17.2114%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.9614%" y="229" width="0.0804%" height="15" fill="rgb(218,129,5)" fg:x="211" fg:w="1"/><text x="17.2114%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="16.9614%" y="213" width="0.0804%" height="15" fill="rgb(240,199,54)" fg:x="211" fg:w="1"/><text x="17.2114%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="16.9614%" y="197" width="0.0804%" height="15" fill="rgb(234,31,13)" fg:x="211" fg:w="1"/><text x="17.2114%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="16.9614%" y="181" width="0.0804%" height="15" fill="rgb(219,73,54)" fg:x="211" fg:w="1"/><text x="17.2114%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.9614%" y="165" width="0.0804%" height="15" fill="rgb(251,162,10)" fg:x="211" fg:w="1"/><text x="17.2114%" y="175.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="17.0418%" y="597" width="0.0804%" height="15" fill="rgb(240,138,47)" fg:x="212" fg:w="1"/><text x="17.2918%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.0418%" y="581" width="0.0804%" height="15" fill="rgb(216,138,26)" fg:x="212" fg:w="1"/><text x="17.2918%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="17.0418%" y="565" width="0.0804%" height="15" fill="rgb(243,17,35)" fg:x="212" fg:w="1"/><text x="17.2918%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.0418%" y="549" width="0.0804%" height="15" fill="rgb(241,60,18)" fg:x="212" fg:w="1"/><text x="17.2918%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0418%" y="533" width="0.0804%" height="15" fill="rgb(234,2,44)" fg:x="212" fg:w="1"/><text x="17.2918%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0418%" y="517" width="0.0804%" height="15" fill="rgb(225,225,33)" fg:x="212" fg:w="1"/><text x="17.2918%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0418%" y="501" width="0.0804%" height="15" fill="rgb(234,50,31)" fg:x="212" fg:w="1"/><text x="17.2918%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0418%" y="485" width="0.0804%" height="15" fill="rgb(249,6,25)" fg:x="212" fg:w="1"/><text x="17.2918%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.0418%" y="469" width="0.0804%" height="15" fill="rgb(241,5,17)" fg:x="212" fg:w="1"/><text x="17.2918%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1222%" y="597" width="0.0804%" height="15" fill="rgb(207,116,10)" fg:x="213" fg:w="1"/><text x="17.3722%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1222%" y="581" width="0.0804%" height="15" fill="rgb(222,128,18)" fg:x="213" fg:w="1"/><text x="17.3722%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1222%" y="565" width="0.0804%" height="15" fill="rgb(229,109,25)" fg:x="213" fg:w="1"/><text x="17.3722%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.1222%" y="549" width="0.0804%" height="15" fill="rgb(222,102,25)" fg:x="213" fg:w="1"/><text x="17.3722%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.1222%" y="533" width="0.0804%" height="15" fill="rgb(239,211,5)" fg:x="213" fg:w="1"/><text x="17.3722%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.1222%" y="517" width="0.0804%" height="15" fill="rgb(223,136,26)" fg:x="213" fg:w="1"/><text x="17.3722%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.1222%" y="501" width="0.0804%" height="15" fill="rgb(227,30,15)" fg:x="213" fg:w="1"/><text x="17.3722%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.1222%" y="485" width="0.0804%" height="15" fill="rgb(247,76,4)" fg:x="213" fg:w="1"/><text x="17.3722%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.1222%" y="469" width="0.0804%" height="15" fill="rgb(245,38,48)" fg:x="213" fg:w="1"/><text x="17.3722%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.1222%" y="453" width="0.0804%" height="15" fill="rgb(210,220,14)" fg:x="213" fg:w="1"/><text x="17.3722%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.1222%" y="437" width="0.0804%" height="15" fill="rgb(224,60,51)" fg:x="213" fg:w="1"/><text x="17.3722%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.1222%" y="421" width="0.0804%" height="15" fill="rgb(212,133,49)" fg:x="213" fg:w="1"/><text x="17.3722%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1222%" y="405" width="0.0804%" height="15" fill="rgb(231,39,22)" fg:x="213" fg:w="1"/><text x="17.3722%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="16.9614%" y="645" width="0.3215%" height="15" fill="rgb(236,173,22)" fg:x="211" fg:w="4"/><text x="17.2114%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="16.9614%" y="629" width="0.3215%" height="15" fill="rgb(210,70,0)" fg:x="211" fg:w="4"/><text x="17.2114%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="17.0418%" y="613" width="0.2412%" height="15" fill="rgb(215,170,11)" fg:x="212" fg:w="3"/><text x="17.2918%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="17.2026%" y="597" width="0.0804%" height="15" fill="rgb(220,154,28)" fg:x="214" fg:w="1"/><text x="17.4526%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2026%" y="581" width="0.0804%" height="15" fill="rgb(240,160,41)" fg:x="214" fg:w="1"/><text x="17.4526%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2830%" y="565" width="0.0804%" height="15" fill="rgb(243,215,41)" fg:x="215" fg:w="1"/><text x="17.5330%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.3633%" y="485" width="0.1608%" height="15" fill="rgb(214,208,31)" fg:x="216" fg:w="2"/><text x="17.6133%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.4437%" y="469" width="0.0804%" height="15" fill="rgb(247,57,22)" fg:x="217" fg:w="1"/><text x="17.6937%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4437%" y="453" width="0.0804%" height="15" fill="rgb(228,73,52)" fg:x="217" fg:w="1"/><text x="17.6937%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="17.2830%" y="581" width="0.3215%" height="15" fill="rgb(252,60,9)" fg:x="215" fg:w="4"/><text x="17.5330%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="17.3633%" y="565" width="0.2412%" height="15" fill="rgb(233,9,51)" fg:x="216" fg:w="3"/><text x="17.6133%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.3633%" y="549" width="0.2412%" height="15" fill="rgb(223,67,14)" fg:x="216" fg:w="3"/><text x="17.6133%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.3633%" y="533" width="0.2412%" height="15" fill="rgb(222,86,2)" fg:x="216" fg:w="3"/><text x="17.6133%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.3633%" y="517" width="0.2412%" height="15" fill="rgb(243,58,54)" fg:x="216" fg:w="3"/><text x="17.6133%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.3633%" y="501" width="0.2412%" height="15" fill="rgb(210,200,39)" fg:x="216" fg:w="3"/><text x="17.6133%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.5241%" y="485" width="0.0804%" height="15" fill="rgb(238,135,9)" fg:x="218" fg:w="1"/><text x="17.7741%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="17.6045%" y="565" width="0.0804%" height="15" fill="rgb(232,179,7)" fg:x="219" fg:w="1"/><text x="17.8545%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.6045%" y="549" width="0.0804%" height="15" fill="rgb(245,65,41)" fg:x="219" fg:w="1"/><text x="17.8545%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.6045%" y="533" width="0.0804%" height="15" fill="rgb(227,43,8)" fg:x="219" fg:w="1"/><text x="17.8545%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="17.2830%" y="629" width="0.4823%" height="15" fill="rgb(235,91,14)" fg:x="215" fg:w="6"/><text x="17.5330%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="17.2830%" y="613" width="0.4823%" height="15" fill="rgb(235,219,31)" fg:x="215" fg:w="6"/><text x="17.5330%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="17.2830%" y="597" width="0.4823%" height="15" fill="rgb(227,121,25)" fg:x="215" fg:w="6"/><text x="17.5330%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="17.6045%" y="581" width="0.1608%" height="15" fill="rgb(254,129,24)" fg:x="219" fg:w="2"/><text x="17.8545%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.6849%" y="565" width="0.0804%" height="15" fill="rgb(226,144,49)" fg:x="220" fg:w="1"/><text x="17.9349%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.6849%" y="549" width="0.0804%" height="15" fill="rgb(214,187,32)" fg:x="220" fg:w="1"/><text x="17.9349%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6849%" y="533" width="0.0804%" height="15" fill="rgb(243,129,46)" fg:x="220" fg:w="1"/><text x="17.9349%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6849%" y="517" width="0.0804%" height="15" fill="rgb(221,185,35)" fg:x="220" fg:w="1"/><text x="17.9349%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6849%" y="501" width="0.0804%" height="15" fill="rgb(205,0,32)" fg:x="220" fg:w="1"/><text x="17.9349%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6849%" y="485" width="0.0804%" height="15" fill="rgb(229,179,12)" fg:x="220" fg:w="1"/><text x="17.9349%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6849%" y="469" width="0.0804%" height="15" fill="rgb(252,107,19)" fg:x="220" fg:w="1"/><text x="17.9349%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6849%" y="453" width="0.0804%" height="15" fill="rgb(220,95,27)" fg:x="220" fg:w="1"/><text x="17.9349%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.6849%" y="437" width="0.0804%" height="15" fill="rgb(240,113,40)" fg:x="220" fg:w="1"/><text x="17.9349%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.6849%" y="421" width="0.0804%" height="15" fill="rgb(208,4,43)" fg:x="220" fg:w="1"/><text x="17.9349%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.6849%" y="405" width="0.0804%" height="15" fill="rgb(247,189,30)" fg:x="220" fg:w="1"/><text x="17.9349%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.6849%" y="389" width="0.0804%" height="15" fill="rgb(231,157,17)" fg:x="220" fg:w="1"/><text x="17.9349%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.6849%" y="373" width="0.0804%" height="15" fill="rgb(224,139,6)" fg:x="220" fg:w="1"/><text x="17.9349%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="17.7653%" y="613" width="0.0804%" height="15" fill="rgb(223,83,16)" fg:x="221" fg:w="1"/><text x="18.0153%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="17.7653%" y="597" width="0.0804%" height="15" fill="rgb(232,211,20)" fg:x="221" fg:w="1"/><text x="18.0153%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.7653%" y="581" width="0.0804%" height="15" fill="rgb(225,203,35)" fg:x="221" fg:w="1"/><text x="18.0153%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8457%" y="533" width="0.0804%" height="15" fill="rgb(215,211,44)" fg:x="222" fg:w="1"/><text x="18.0957%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8457%" y="517" width="0.0804%" height="15" fill="rgb(248,213,26)" fg:x="222" fg:w="1"/><text x="18.0957%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8457%" y="501" width="0.0804%" height="15" fill="rgb(214,23,52)" fg:x="222" fg:w="1"/><text x="18.0957%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8457%" y="485" width="0.0804%" height="15" fill="rgb(225,173,50)" fg:x="222" fg:w="1"/><text x="18.0957%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8457%" y="469" width="0.0804%" height="15" fill="rgb(206,150,22)" fg:x="222" fg:w="1"/><text x="18.0957%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8457%" y="453" width="0.0804%" height="15" fill="rgb(239,64,23)" fg:x="222" fg:w="1"/><text x="18.0957%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="17.8457%" y="581" width="0.1608%" height="15" fill="rgb(242,50,38)" fg:x="222" fg:w="2"/><text x="18.0957%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="17.8457%" y="565" width="0.1608%" height="15" fill="rgb(217,91,15)" fg:x="222" fg:w="2"/><text x="18.0957%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.8457%" y="549" width="0.1608%" height="15" fill="rgb(230,172,6)" fg:x="222" fg:w="2"/><text x="18.0957%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.9260%" y="533" width="0.0804%" height="15" fill="rgb(221,98,26)" fg:x="223" fg:w="1"/><text x="18.1760%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9260%" y="517" width="0.0804%" height="15" fill="rgb(227,210,45)" fg:x="223" fg:w="1"/><text x="18.1760%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.9260%" y="501" width="0.0804%" height="15" fill="rgb(206,8,30)" fg:x="223" fg:w="1"/><text x="18.1760%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9260%" y="485" width="0.0804%" height="15" fill="rgb(241,219,17)" fg:x="223" fg:w="1"/><text x="18.1760%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.9260%" y="469" width="0.0804%" height="15" fill="rgb(247,121,29)" fg:x="223" fg:w="1"/><text x="18.1760%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9260%" y="453" width="0.0804%" height="15" fill="rgb(219,169,49)" fg:x="223" fg:w="1"/><text x="18.1760%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="17.9260%" y="437" width="0.0804%" height="15" fill="rgb(253,49,49)" fg:x="223" fg:w="1"/><text x="18.1760%" y="447.50"></text></g><g><title>plugins_core::build::Build::leads_to (11 samples, 0.88%)</title><rect x="17.2830%" y="645" width="0.8842%" height="15" fill="rgb(217,178,3)" fg:x="215" fg:w="11"/><text x="17.5330%" y="655.50"></text></g><g><title>plugins_core::tools::leads_to (5 samples, 0.40%)</title><rect x="17.7653%" y="629" width="0.4019%" height="15" fill="rgb(234,73,37)" fg:x="221" fg:w="5"/><text x="18.0153%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="17.8457%" y="613" width="0.3215%" height="15" fill="rgb(250,98,22)" fg:x="222" fg:w="4"/><text x="18.0957%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="17.8457%" y="597" width="0.3215%" height="15" fill="rgb(220,108,37)" fg:x="222" fg:w="4"/><text x="18.0957%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="18.0064%" y="581" width="0.1608%" height="15" fill="rgb(225,168,10)" fg:x="224" fg:w="2"/><text x="18.2564%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="18.0064%" y="565" width="0.1608%" height="15" fill="rgb(247,215,21)" fg:x="224" fg:w="2"/><text x="18.2564%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.0064%" y="549" width="0.1608%" height="15" fill="rgb(253,189,31)" fg:x="224" fg:w="2"/><text x="18.2564%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="18.0064%" y="533" width="0.1608%" height="15" fill="rgb(241,54,22)" fg:x="224" fg:w="2"/><text x="18.2564%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0064%" y="517" width="0.1608%" height="15" fill="rgb(211,87,4)" fg:x="224" fg:w="2"/><text x="18.2564%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="18.0064%" y="501" width="0.1608%" height="15" fill="rgb(245,112,24)" fg:x="224" fg:w="2"/><text x="18.2564%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0064%" y="485" width="0.1608%" height="15" fill="rgb(235,190,41)" fg:x="224" fg:w="2"/><text x="18.2564%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.0064%" y="469" width="0.1608%" height="15" fill="rgb(214,89,8)" fg:x="224" fg:w="2"/><text x="18.2564%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0064%" y="453" width="0.1608%" height="15" fill="rgb(249,155,35)" fg:x="224" fg:w="2"/><text x="18.2564%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="18.0064%" y="437" width="0.1608%" height="15" fill="rgb(249,88,26)" fg:x="224" fg:w="2"/><text x="18.2564%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0064%" y="421" width="0.1608%" height="15" fill="rgb(232,56,8)" fg:x="224" fg:w="2"/><text x="18.2564%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 1.53%)</title><rect x="16.7203%" y="693" width="1.5273%" height="15" fill="rgb(240,95,3)" fg:x="208" fg:w="19"/><text x="16.9703%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 1.53%)</title><rect x="16.7203%" y="677" width="1.5273%" height="15" fill="rgb(222,44,28)" fg:x="208" fg:w="19"/><text x="16.9703%" y="687.50"></text></g><g><title>plugins_core::build::QuickThing::make (19 samples, 1.53%)</title><rect x="16.7203%" y="661" width="1.5273%" height="15" fill="rgb(234,16,30)" fg:x="208" fg:w="19"/><text x="16.9703%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="18.1672%" y="645" width="0.0804%" height="15" fill="rgb(223,26,17)" fg:x="226" fg:w="1"/><text x="18.4172%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="18.1672%" y="629" width="0.0804%" height="15" fill="rgb(239,187,47)" fg:x="226" fg:w="1"/><text x="18.4172%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="18.1672%" y="613" width="0.0804%" height="15" fill="rgb(247,102,50)" fg:x="226" fg:w="1"/><text x="18.4172%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.1672%" y="597" width="0.0804%" height="15" fill="rgb(231,216,22)" fg:x="226" fg:w="1"/><text x="18.4172%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="18.1672%" y="581" width="0.0804%" height="15" fill="rgb(216,201,26)" fg:x="226" fg:w="1"/><text x="18.4172%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.1672%" y="565" width="0.0804%" height="15" fill="rgb(214,186,23)" fg:x="226" fg:w="1"/><text x="18.4172%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1672%" y="549" width="0.0804%" height="15" fill="rgb(235,184,4)" fg:x="226" fg:w="1"/><text x="18.4172%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="18.2476%" y="693" width="0.0804%" height="15" fill="rgb(244,46,17)" fg:x="227" fg:w="1"/><text x="18.4976%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2476%" y="677" width="0.0804%" height="15" fill="rgb(248,74,46)" fg:x="227" fg:w="1"/><text x="18.4976%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3280%" y="645" width="0.0804%" height="15" fill="rgb(243,79,5)" fg:x="228" fg:w="1"/><text x="18.5780%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3280%" y="629" width="0.0804%" height="15" fill="rgb(213,148,1)" fg:x="228" fg:w="1"/><text x="18.5780%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.3280%" y="613" width="0.0804%" height="15" fill="rgb(221,30,0)" fg:x="228" fg:w="1"/><text x="18.5780%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.3280%" y="597" width="0.0804%" height="15" fill="rgb(207,85,29)" fg:x="228" fg:w="1"/><text x="18.5780%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.3280%" y="581" width="0.0804%" height="15" fill="rgb(239,31,46)" fg:x="228" fg:w="1"/><text x="18.5780%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.3280%" y="565" width="0.0804%" height="15" fill="rgb(219,6,1)" fg:x="228" fg:w="1"/><text x="18.5780%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.3280%" y="549" width="0.0804%" height="15" fill="rgb(229,90,29)" fg:x="228" fg:w="1"/><text x="18.5780%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="18.3280%" y="661" width="0.1608%" height="15" fill="rgb(242,201,42)" fg:x="228" fg:w="2"/><text x="18.5780%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4084%" y="645" width="0.0804%" height="15" fill="rgb(243,80,54)" fg:x="229" fg:w="1"/><text x="18.6584%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="18.4887%" y="661" width="0.0804%" height="15" fill="rgb(223,166,15)" fg:x="230" fg:w="1"/><text x="18.7387%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="18.4887%" y="645" width="0.0804%" height="15" fill="rgb(238,78,27)" fg:x="230" fg:w="1"/><text x="18.7387%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="18.4887%" y="629" width="0.0804%" height="15" fill="rgb(235,28,43)" fg:x="230" fg:w="1"/><text x="18.7387%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4887%" y="613" width="0.0804%" height="15" fill="rgb(240,210,28)" fg:x="230" fg:w="1"/><text x="18.7387%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4887%" y="597" width="0.0804%" height="15" fill="rgb(253,6,46)" fg:x="230" fg:w="1"/><text x="18.7387%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.4887%" y="581" width="0.0804%" height="15" fill="rgb(250,159,47)" fg:x="230" fg:w="1"/><text x="18.7387%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.4887%" y="565" width="0.0804%" height="15" fill="rgb(216,139,2)" fg:x="230" fg:w="1"/><text x="18.7387%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.4887%" y="549" width="0.0804%" height="15" fill="rgb(221,124,44)" fg:x="230" fg:w="1"/><text x="18.7387%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.4887%" y="533" width="0.0804%" height="15" fill="rgb(205,37,22)" fg:x="230" fg:w="1"/><text x="18.7387%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.4887%" y="517" width="0.0804%" height="15" fill="rgb(250,55,8)" fg:x="230" fg:w="1"/><text x="18.7387%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.4887%" y="501" width="0.0804%" height="15" fill="rgb(215,83,48)" fg:x="230" fg:w="1"/><text x="18.7387%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.4887%" y="485" width="0.0804%" height="15" fill="rgb(253,2,32)" fg:x="230" fg:w="1"/><text x="18.7387%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.4887%" y="469" width="0.0804%" height="15" fill="rgb(236,67,28)" fg:x="230" fg:w="1"/><text x="18.7387%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.4887%" y="453" width="0.0804%" height="15" fill="rgb(252,55,15)" fg:x="230" fg:w="1"/><text x="18.7387%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4887%" y="437" width="0.0804%" height="15" fill="rgb(243,173,17)" fg:x="230" fg:w="1"/><text x="18.7387%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="18.5691%" y="645" width="0.0804%" height="15" fill="rgb(215,212,13)" fg:x="231" fg:w="1"/><text x="18.8191%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::base::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="18.5691%" y="629" width="0.0804%" height="15" fill="rgb(253,176,6)" fg:x="231" fg:w="1"/><text x="18.8191%" y="639.50"></text></g><g><title>engine::identifiers::model::set_gid (2 samples, 0.16%)</title><rect x="18.5691%" y="661" width="0.1608%" height="15" fill="rgb(236,105,26)" fg:x="231" fg:w="2"/><text x="18.8191%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.6495%" y="645" width="0.0804%" height="15" fill="rgb(239,226,32)" fg:x="232" fg:w="1"/><text x="18.8995%" y="655.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="18.6495%" y="629" width="0.0804%" height="15" fill="rgb(236,104,51)" fg:x="232" fg:w="1"/><text x="18.8995%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.6495%" y="613" width="0.0804%" height="15" fill="rgb(220,172,33)" fg:x="232" fg:w="1"/><text x="18.8995%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.6495%" y="597" width="0.0804%" height="15" fill="rgb(224,182,25)" fg:x="232" fg:w="1"/><text x="18.8995%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.6495%" y="581" width="0.0804%" height="15" fill="rgb(236,184,24)" fg:x="232" fg:w="1"/><text x="18.8995%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="18.6495%" y="565" width="0.0804%" height="15" fill="rgb(241,221,14)" fg:x="232" fg:w="1"/><text x="18.8995%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="18.7299%" y="597" width="0.1608%" height="15" fill="rgb(227,146,5)" fg:x="233" fg:w="2"/><text x="18.9799%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.7299%" y="581" width="0.1608%" height="15" fill="rgb(214,15,23)" fg:x="233" fg:w="2"/><text x="18.9799%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="18.7299%" y="565" width="0.1608%" height="15" fill="rgb(233,157,31)" fg:x="233" fg:w="2"/><text x="18.9799%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.8103%" y="549" width="0.0804%" height="15" fill="rgb(211,27,52)" fg:x="234" fg:w="1"/><text x="19.0603%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="18.7299%" y="613" width="0.2412%" height="15" fill="rgb(212,223,15)" fg:x="233" fg:w="3"/><text x="18.9799%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.8907%" y="597" width="0.0804%" height="15" fill="rgb(254,211,0)" fg:x="235" fg:w="1"/><text x="19.1407%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.8907%" y="581" width="0.0804%" height="15" fill="rgb(205,43,38)" fg:x="235" fg:w="1"/><text x="19.1407%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="19.1318%" y="597" width="0.6431%" height="15" fill="rgb(242,206,46)" fg:x="238" fg:w="8"/><text x="19.3818%" y="607.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="19.1318%" y="581" width="0.6431%" height="15" fill="rgb(220,221,12)" fg:x="238" fg:w="8"/><text x="19.3818%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (8 samples, 0.64%)</title><rect x="19.1318%" y="565" width="0.6431%" height="15" fill="rgb(217,156,35)" fg:x="238" fg:w="8"/><text x="19.3818%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="19.2926%" y="549" width="0.4823%" height="15" fill="rgb(207,181,49)" fg:x="240" fg:w="6"/><text x="19.5426%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.6945%" y="533" width="0.0804%" height="15" fill="rgb(235,103,47)" fg:x="245" fg:w="1"/><text x="19.9445%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.6945%" y="517" width="0.0804%" height="15" fill="rgb(222,63,28)" fg:x="245" fg:w="1"/><text x="19.9445%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.6945%" y="501" width="0.0804%" height="15" fill="rgb(244,137,21)" fg:x="245" fg:w="1"/><text x="19.9445%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.8553%" y="549" width="0.0804%" height="15" fill="rgb(228,35,27)" fg:x="247" fg:w="1"/><text x="20.1053%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8553%" y="533" width="0.0804%" height="15" fill="rgb(226,191,41)" fg:x="247" fg:w="1"/><text x="20.1053%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="19.8553%" y="581" width="0.1608%" height="15" fill="rgb(210,154,3)" fg:x="247" fg:w="2"/><text x="20.1053%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="19.8553%" y="565" width="0.1608%" height="15" fill="rgb(216,60,49)" fg:x="247" fg:w="2"/><text x="20.1053%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9357%" y="549" width="0.0804%" height="15" fill="rgb(226,17,20)" fg:x="248" fg:w="1"/><text x="20.1857%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.9357%" y="533" width="0.0804%" height="15" fill="rgb(206,115,35)" fg:x="248" fg:w="1"/><text x="20.1857%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.9357%" y="517" width="0.0804%" height="15" fill="rgb(227,88,1)" fg:x="248" fg:w="1"/><text x="20.1857%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.9357%" y="501" width="0.0804%" height="15" fill="rgb(230,222,24)" fg:x="248" fg:w="1"/><text x="20.1857%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.0161%" y="581" width="0.1608%" height="15" fill="rgb(214,124,32)" fg:x="249" fg:w="2"/><text x="20.2661%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.0161%" y="565" width="0.1608%" height="15" fill="rgb(240,41,36)" fg:x="249" fg:w="2"/><text x="20.2661%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.0965%" y="549" width="0.0804%" height="15" fill="rgb(221,17,52)" fg:x="250" fg:w="1"/><text x="20.3465%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.1768%" y="565" width="0.1608%" height="15" fill="rgb(252,70,16)" fg:x="251" fg:w="2"/><text x="20.4268%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.2572%" y="549" width="0.0804%" height="15" fill="rgb(250,177,4)" fg:x="252" fg:w="1"/><text x="20.5072%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.2572%" y="533" width="0.0804%" height="15" fill="rgb(240,188,47)" fg:x="252" fg:w="1"/><text x="20.5072%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.2572%" y="517" width="0.0804%" height="15" fill="rgb(215,92,12)" fg:x="252" fg:w="1"/><text x="20.5072%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.4180%" y="549" width="0.0804%" height="15" fill="rgb(242,110,29)" fg:x="254" fg:w="1"/><text x="20.6680%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.4180%" y="533" width="0.0804%" height="15" fill="rgb(208,211,26)" fg:x="254" fg:w="1"/><text x="20.6680%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.4180%" y="517" width="0.0804%" height="15" fill="rgb(244,147,6)" fg:x="254" fg:w="1"/><text x="20.6680%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.4180%" y="501" width="0.0804%" height="15" fill="rgb(211,130,42)" fg:x="254" fg:w="1"/><text x="20.6680%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.4984%" y="533" width="0.0804%" height="15" fill="rgb(220,63,1)" fg:x="255" fg:w="1"/><text x="20.7484%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.5788%" y="533" width="0.0804%" height="15" fill="rgb(241,212,30)" fg:x="256" fg:w="1"/><text x="20.8288%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="20.6592%" y="533" width="0.0804%" height="15" fill="rgb(233,153,17)" fg:x="257" fg:w="1"/><text x="20.9092%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.6592%" y="517" width="0.0804%" height="15" fill="rgb(236,3,10)" fg:x="257" fg:w="1"/><text x="20.9092%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.6592%" y="501" width="0.0804%" height="15" fill="rgb(232,41,21)" fg:x="257" fg:w="1"/><text x="20.9092%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="20.1768%" y="581" width="0.6431%" height="15" fill="rgb(206,63,51)" fg:x="251" fg:w="8"/><text x="20.4268%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="20.3376%" y="565" width="0.4823%" height="15" fill="rgb(250,214,3)" fg:x="253" fg:w="6"/><text x="20.5876%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="20.4984%" y="549" width="0.3215%" height="15" fill="rgb(254,89,27)" fg:x="255" fg:w="4"/><text x="20.7484%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.7395%" y="533" width="0.0804%" height="15" fill="rgb(249,41,14)" fg:x="258" fg:w="1"/><text x="20.9895%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="19.7749%" y="597" width="1.1254%" height="15" fill="rgb(221,196,51)" fg:x="246" fg:w="14"/><text x="20.0249%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.8199%" y="581" width="0.0804%" height="15" fill="rgb(214,116,26)" fg:x="259" fg:w="1"/><text x="21.0699%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.8199%" y="565" width="0.0804%" height="15" fill="rgb(236,67,7)" fg:x="259" fg:w="1"/><text x="21.0699%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.8199%" y="549" width="0.0804%" height="15" fill="rgb(253,179,32)" fg:x="259" fg:w="1"/><text x="21.0699%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (28 samples, 2.25%)</title><rect x="18.7299%" y="629" width="2.2508%" height="15" fill="rgb(218,33,15)" fg:x="233" fg:w="28"/><text x="18.9799%" y="639.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.01%)</title><rect x="18.9711%" y="613" width="2.0096%" height="15" fill="rgb(217,202,41)" fg:x="236" fg:w="25"/><text x="19.2211%" y="623.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.9003%" y="597" width="0.0804%" height="15" fill="rgb(234,133,5)" fg:x="260" fg:w="1"/><text x="21.1503%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.9003%" y="581" width="0.0804%" height="15" fill="rgb(240,47,40)" fg:x="260" fg:w="1"/><text x="21.1503%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.9003%" y="565" width="0.0804%" height="15" fill="rgb(234,166,26)" fg:x="260" fg:w="1"/><text x="21.1503%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.9003%" y="549" width="0.0804%" height="15" fill="rgb(244,125,51)" fg:x="260" fg:w="1"/><text x="21.1503%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.9003%" y="533" width="0.0804%" height="15" fill="rgb(229,171,11)" fg:x="260" fg:w="1"/><text x="21.1503%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.9003%" y="517" width="0.0804%" height="15" fill="rgb(224,38,45)" fg:x="260" fg:w="1"/><text x="21.1503%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.0611%" y="581" width="0.0804%" height="15" fill="rgb(237,27,7)" fg:x="262" fg:w="1"/><text x="21.3111%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.1415%" y="581" width="0.0804%" height="15" fill="rgb(216,52,7)" fg:x="263" fg:w="1"/><text x="21.3915%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3826%" y="549" width="0.0804%" height="15" fill="rgb(243,11,11)" fg:x="266" fg:w="1"/><text x="21.6326%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.4630%" y="549" width="0.0804%" height="15" fill="rgb(253,167,20)" fg:x="267" fg:w="1"/><text x="21.7130%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4630%" y="533" width="0.0804%" height="15" fill="rgb(215,207,5)" fg:x="267" fg:w="1"/><text x="21.7130%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="20.9807%" y="629" width="0.6431%" height="15" fill="rgb(252,127,31)" fg:x="261" fg:w="8"/><text x="21.2307%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="20.9807%" y="613" width="0.6431%" height="15" fill="rgb(209,106,27)" fg:x="261" fg:w="8"/><text x="21.2307%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="20.9807%" y="597" width="0.6431%" height="15" fill="rgb(214,220,18)" fg:x="261" fg:w="8"/><text x="21.2307%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="21.2219%" y="581" width="0.4019%" height="15" fill="rgb(237,89,12)" fg:x="264" fg:w="5"/><text x="21.4719%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="21.3023%" y="565" width="0.3215%" height="15" fill="rgb(209,167,36)" fg:x="265" fg:w="4"/><text x="21.5523%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="21.5434%" y="549" width="0.0804%" height="15" fill="rgb(243,45,22)" fg:x="268" fg:w="1"/><text x="21.7934%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.5434%" y="533" width="0.0804%" height="15" fill="rgb(239,2,46)" fg:x="268" fg:w="1"/><text x="21.7934%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.5434%" y="517" width="0.0804%" height="15" fill="rgb(241,101,0)" fg:x="268" fg:w="1"/><text x="21.7934%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="21.6238%" y="613" width="0.1608%" height="15" fill="rgb(244,34,31)" fg:x="269" fg:w="2"/><text x="21.8738%" y="623.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="21.7042%" y="597" width="0.0804%" height="15" fill="rgb(248,23,22)" fg:x="270" fg:w="1"/><text x="21.9542%" y="607.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="21.7042%" y="581" width="0.0804%" height="15" fill="rgb(218,27,48)" fg:x="270" fg:w="1"/><text x="21.9542%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.7846%" y="581" width="0.1608%" height="15" fill="rgb(232,78,1)" fg:x="271" fg:w="2"/><text x="22.0346%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.9453%" y="581" width="0.1608%" height="15" fill="rgb(233,169,12)" fg:x="273" fg:w="2"/><text x="22.1953%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.0257%" y="565" width="0.0804%" height="15" fill="rgb(225,222,54)" fg:x="274" fg:w="1"/><text x="22.2757%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="22.0257%" y="549" width="0.0804%" height="15" fill="rgb(245,126,29)" fg:x="274" fg:w="1"/><text x="22.2757%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="22.1061%" y="533" width="0.2412%" height="15" fill="rgb(241,63,48)" fg:x="275" fg:w="3"/><text x="22.3561%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.1865%" y="517" width="0.1608%" height="15" fill="rgb(235,126,38)" fg:x="276" fg:w="2"/><text x="22.4365%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="22.1865%" y="501" width="0.1608%" height="15" fill="rgb(232,96,49)" fg:x="276" fg:w="2"/><text x="22.4365%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.3473%" y="533" width="0.0804%" height="15" fill="rgb(211,146,40)" fg:x="278" fg:w="1"/><text x="22.5973%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.3473%" y="517" width="0.0804%" height="15" fill="rgb(247,93,44)" fg:x="278" fg:w="1"/><text x="22.5973%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.3473%" y="501" width="0.0804%" height="15" fill="rgb(251,41,49)" fg:x="278" fg:w="1"/><text x="22.5973%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.3473%" y="485" width="0.0804%" height="15" fill="rgb(218,155,12)" fg:x="278" fg:w="1"/><text x="22.5973%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5884%" y="469" width="0.0804%" height="15" fill="rgb(221,161,30)" fg:x="281" fg:w="1"/><text x="22.8384%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5884%" y="453" width="0.0804%" height="15" fill="rgb(221,179,11)" fg:x="281" fg:w="1"/><text x="22.8384%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5884%" y="437" width="0.0804%" height="15" fill="rgb(224,170,48)" fg:x="281" fg:w="1"/><text x="22.8384%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.7492%" y="421" width="0.0804%" height="15" fill="rgb(223,117,5)" fg:x="283" fg:w="1"/><text x="22.9992%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.8296%" y="405" width="0.0804%" height="15" fill="rgb(209,52,20)" fg:x="284" fg:w="1"/><text x="23.0796%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="22.8296%" y="421" width="0.1608%" height="15" fill="rgb(209,19,41)" fg:x="284" fg:w="2"/><text x="23.0796%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.9100%" y="405" width="0.0804%" height="15" fill="rgb(210,177,12)" fg:x="285" fg:w="1"/><text x="23.1600%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="22.9100%" y="389" width="0.0804%" height="15" fill="rgb(211,159,37)" fg:x="285" fg:w="1"/><text x="23.1600%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="22.6688%" y="453" width="0.4019%" height="15" fill="rgb(209,20,2)" fg:x="282" fg:w="5"/><text x="22.9188%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="22.7492%" y="437" width="0.3215%" height="15" fill="rgb(244,3,46)" fg:x="283" fg:w="4"/><text x="22.9992%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9904%" y="421" width="0.0804%" height="15" fill="rgb(220,94,38)" fg:x="286" fg:w="1"/><text x="23.2404%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.05%)</title><rect x="22.1061%" y="549" width="1.0450%" height="15" fill="rgb(253,14,31)" fg:x="275" fg:w="13"/><text x="22.3561%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="22.4277%" y="533" width="0.7235%" height="15" fill="rgb(234,176,13)" fg:x="279" fg:w="9"/><text x="22.6777%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="22.5884%" y="517" width="0.5627%" height="15" fill="rgb(218,62,25)" fg:x="281" fg:w="7"/><text x="22.8384%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="22.5884%" y="501" width="0.5627%" height="15" fill="rgb(216,124,40)" fg:x="281" fg:w="7"/><text x="22.8384%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="22.5884%" y="485" width="0.5627%" height="15" fill="rgb(228,170,12)" fg:x="281" fg:w="7"/><text x="22.8384%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="22.6688%" y="469" width="0.4823%" height="15" fill="rgb(231,226,5)" fg:x="282" fg:w="6"/><text x="22.9188%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.0707%" y="453" width="0.0804%" height="15" fill="rgb(237,122,22)" fg:x="287" fg:w="1"/><text x="23.3207%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.13%)</title><rect x="22.1061%" y="565" width="1.1254%" height="15" fill="rgb(209,185,25)" fg:x="275" fg:w="14"/><text x="22.3561%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="23.1511%" y="549" width="0.0804%" height="15" fill="rgb(228,200,32)" fg:x="288" fg:w="1"/><text x="23.4011%" y="559.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (57 samples, 4.58%)</title><rect x="18.7299%" y="661" width="4.5820%" height="15" fill="rgb(217,140,10)" fg:x="233" fg:w="57"/><text x="18.9799%" y="671.50">engin..</text></g><g><title>engine::session::SavesEntities::check_for_changes (57 samples, 4.58%)</title><rect x="18.7299%" y="645" width="4.5820%" height="15" fill="rgb(253,17,24)" fg:x="233" fg:w="57"/><text x="18.9799%" y="655.50">engin..</text></g><g><title>kernel::model::any_entity_changes (21 samples, 1.69%)</title><rect x="21.6238%" y="629" width="1.6881%" height="15" fill="rgb(212,61,6)" fg:x="269" fg:w="21"/><text x="21.8738%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.53%)</title><rect x="21.7846%" y="613" width="1.5273%" height="15" fill="rgb(205,14,25)" fg:x="271" fg:w="19"/><text x="22.0346%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.53%)</title><rect x="21.7846%" y="597" width="1.5273%" height="15" fill="rgb(232,69,41)" fg:x="271" fg:w="19"/><text x="22.0346%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.21%)</title><rect x="22.1061%" y="581" width="1.2058%" height="15" fill="rgb(241,106,47)" fg:x="275" fg:w="15"/><text x="22.3561%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2315%" y="565" width="0.0804%" height="15" fill="rgb(210,213,53)" fg:x="289" fg:w="1"/><text x="23.4815%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2315%" y="549" width="0.0804%" height="15" fill="rgb(253,175,27)" fg:x="289" fg:w="1"/><text x="23.4815%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2315%" y="533" width="0.0804%" height="15" fill="rgb(211,171,24)" fg:x="289" fg:w="1"/><text x="23.4815%" y="543.50"></text></g><g><title>engine::session::Session::flush (63 samples, 5.06%)</title><rect x="18.3280%" y="693" width="5.0643%" height="15" fill="rgb(229,80,7)" fg:x="228" fg:w="63"/><text x="18.5780%" y="703.50">engine..</text></g><g><title>engine::session::Session::save_entity_changes (63 samples, 5.06%)</title><rect x="18.3280%" y="677" width="5.0643%" height="15" fill="rgb(212,46,39)" fg:x="228" fg:w="63"/><text x="18.5780%" y="687.50">engine..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="23.3119%" y="661" width="0.0804%" height="15" fill="rgb(240,80,45)" fg:x="290" fg:w="1"/><text x="23.5619%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="23.3923%" y="693" width="0.0804%" height="15" fill="rgb(253,177,40)" fg:x="291" fg:w="1"/><text x="23.6423%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="23.3923%" y="677" width="0.0804%" height="15" fill="rgb(249,200,15)" fg:x="291" fg:w="1"/><text x="23.6423%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="23.3923%" y="661" width="0.0804%" height="15" fill="rgb(217,78,26)" fg:x="291" fg:w="1"/><text x="23.6423%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="23.3923%" y="645" width="0.0804%" height="15" fill="rgb(254,151,32)" fg:x="291" fg:w="1"/><text x="23.6423%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.3923%" y="629" width="0.0804%" height="15" fill="rgb(226,165,27)" fg:x="291" fg:w="1"/><text x="23.6423%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.4727%" y="629" width="0.0804%" height="15" fill="rgb(250,206,4)" fg:x="292" fg:w="1"/><text x="23.7227%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4727%" y="613" width="0.0804%" height="15" fill="rgb(231,229,27)" fg:x="292" fg:w="1"/><text x="23.7227%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.5531%" y="613" width="0.0804%" height="15" fill="rgb(239,217,8)" fg:x="293" fg:w="1"/><text x="23.8031%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.5531%" y="597" width="0.0804%" height="15" fill="rgb(225,204,27)" fg:x="293" fg:w="1"/><text x="23.8031%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5531%" y="581" width="0.0804%" height="15" fill="rgb(230,56,32)" fg:x="293" fg:w="1"/><text x="23.8031%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5531%" y="565" width="0.0804%" height="15" fill="rgb(222,56,27)" fg:x="293" fg:w="1"/><text x="23.8031%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5531%" y="549" width="0.0804%" height="15" fill="rgb(253,108,27)" fg:x="293" fg:w="1"/><text x="23.8031%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="23.4727%" y="645" width="0.2412%" height="15" fill="rgb(212,87,36)" fg:x="292" fg:w="3"/><text x="23.7227%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="23.5531%" y="629" width="0.1608%" height="15" fill="rgb(247,82,36)" fg:x="293" fg:w="2"/><text x="23.8031%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="23.6334%" y="613" width="0.0804%" height="15" fill="rgb(222,143,9)" fg:x="294" fg:w="1"/><text x="23.8834%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.6334%" y="597" width="0.0804%" height="15" fill="rgb(238,162,48)" fg:x="294" fg:w="1"/><text x="23.8834%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="23.6334%" y="581" width="0.0804%" height="15" fill="rgb(221,59,43)" fg:x="294" fg:w="1"/><text x="23.8834%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.6334%" y="565" width="0.0804%" height="15" fill="rgb(205,166,41)" fg:x="294" fg:w="1"/><text x="23.8834%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="23.6334%" y="549" width="0.0804%" height="15" fill="rgb(241,186,40)" fg:x="294" fg:w="1"/><text x="23.8834%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.6334%" y="533" width="0.0804%" height="15" fill="rgb(216,119,35)" fg:x="294" fg:w="1"/><text x="23.8834%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="23.6334%" y="517" width="0.0804%" height="15" fill="rgb(208,68,38)" fg:x="294" fg:w="1"/><text x="23.8834%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="23.6334%" y="501" width="0.0804%" height="15" fill="rgb(217,113,1)" fg:x="294" fg:w="1"/><text x="23.8834%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.6334%" y="485" width="0.0804%" height="15" fill="rgb(242,153,3)" fg:x="294" fg:w="1"/><text x="23.8834%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.6334%" y="469" width="0.0804%" height="15" fill="rgb(229,76,35)" fg:x="294" fg:w="1"/><text x="23.8834%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6334%" y="453" width="0.0804%" height="15" fill="rgb(229,125,34)" fg:x="294" fg:w="1"/><text x="23.8834%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="23.4727%" y="677" width="0.8039%" height="15" fill="rgb(238,179,36)" fg:x="292" fg:w="10"/><text x="23.7227%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="23.4727%" y="661" width="0.8039%" height="15" fill="rgb(244,183,19)" fg:x="292" fg:w="10"/><text x="23.7227%" y="671.50"></text></g><g><title>engine::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="23.7138%" y="645" width="0.5627%" height="15" fill="rgb(216,85,49)" fg:x="295" fg:w="7"/><text x="23.9638%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="23.7138%" y="629" width="0.5627%" height="15" fill="rgb(208,161,47)" fg:x="295" fg:w="7"/><text x="23.9638%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.56%)</title><rect x="23.7138%" y="613" width="0.5627%" height="15" fill="rgb(233,210,18)" fg:x="295" fg:w="7"/><text x="23.9638%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="23.7138%" y="597" width="0.5627%" height="15" fill="rgb(205,104,42)" fg:x="295" fg:w="7"/><text x="23.9638%" y="607.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="23.7942%" y="581" width="0.4823%" height="15" fill="rgb(248,90,43)" fg:x="296" fg:w="6"/><text x="24.0442%" y="591.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="24.3569%" y="613" width="0.0804%" height="15" fill="rgb(206,198,11)" fg:x="303" fg:w="1"/><text x="24.6069%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.4373%" y="581" width="0.0804%" height="15" fill="rgb(239,165,27)" fg:x="304" fg:w="1"/><text x="24.6873%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="24.3569%" y="629" width="0.2412%" height="15" fill="rgb(246,44,32)" fg:x="303" fg:w="3"/><text x="24.6069%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="24.4373%" y="613" width="0.1608%" height="15" fill="rgb(252,65,42)" fg:x="304" fg:w="2"/><text x="24.6873%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.4373%" y="597" width="0.1608%" height="15" fill="rgb(246,197,18)" fg:x="304" fg:w="2"/><text x="24.6873%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.5177%" y="581" width="0.0804%" height="15" fill="rgb(216,192,4)" fg:x="305" fg:w="1"/><text x="24.7677%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.5177%" y="565" width="0.0804%" height="15" fill="rgb(208,117,10)" fg:x="305" fg:w="1"/><text x="24.7677%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5981%" y="565" width="0.0804%" height="15" fill="rgb(240,61,47)" fg:x="306" fg:w="1"/><text x="24.8481%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5981%" y="549" width="0.0804%" height="15" fill="rgb(228,178,21)" fg:x="306" fg:w="1"/><text x="24.8481%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5981%" y="533" width="0.0804%" height="15" fill="rgb(219,96,54)" fg:x="306" fg:w="1"/><text x="24.8481%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="24.3569%" y="661" width="0.4019%" height="15" fill="rgb(250,177,24)" fg:x="303" fg:w="5"/><text x="24.6069%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="24.3569%" y="645" width="0.4019%" height="15" fill="rgb(242,154,46)" fg:x="303" fg:w="5"/><text x="24.6069%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="24.5981%" y="629" width="0.1608%" height="15" fill="rgb(226,176,29)" fg:x="306" fg:w="2"/><text x="24.8481%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="24.5981%" y="613" width="0.1608%" height="15" fill="rgb(226,29,2)" fg:x="306" fg:w="2"/><text x="24.8481%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.5981%" y="597" width="0.1608%" height="15" fill="rgb(237,104,14)" fg:x="306" fg:w="2"/><text x="24.8481%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.5981%" y="581" width="0.1608%" height="15" fill="rgb(245,207,31)" fg:x="306" fg:w="2"/><text x="24.8481%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6785%" y="565" width="0.0804%" height="15" fill="rgb(229,211,45)" fg:x="307" fg:w="1"/><text x="24.9285%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.7588%" y="645" width="0.0804%" height="15" fill="rgb(229,113,15)" fg:x="308" fg:w="1"/><text x="25.0088%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.7588%" y="629" width="0.0804%" height="15" fill="rgb(237,147,15)" fg:x="308" fg:w="1"/><text x="25.0088%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="24.7588%" y="661" width="0.1608%" height="15" fill="rgb(244,120,12)" fg:x="308" fg:w="2"/><text x="25.0088%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="24.8392%" y="645" width="0.0804%" height="15" fill="rgb(205,120,12)" fg:x="309" fg:w="1"/><text x="25.0892%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.8392%" y="629" width="0.0804%" height="15" fill="rgb(231,26,45)" fg:x="309" fg:w="1"/><text x="25.0892%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8392%" y="613" width="0.0804%" height="15" fill="rgb(246,98,1)" fg:x="309" fg:w="1"/><text x="25.0892%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8392%" y="597" width="0.0804%" height="15" fill="rgb(207,68,45)" fg:x="309" fg:w="1"/><text x="25.0892%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.1608%" y="533" width="0.1608%" height="15" fill="rgb(231,27,38)" fg:x="313" fg:w="2"/><text x="25.4108%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.1608%" y="517" width="0.1608%" height="15" fill="rgb(214,223,3)" fg:x="313" fg:w="2"/><text x="25.4108%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.1608%" y="501" width="0.1608%" height="15" fill="rgb(228,195,46)" fg:x="313" fg:w="2"/><text x="25.4108%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="25.1608%" y="485" width="0.1608%" height="15" fill="rgb(231,100,42)" fg:x="313" fg:w="2"/><text x="25.4108%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.2412%" y="469" width="0.0804%" height="15" fill="rgb(236,53,4)" fg:x="314" fg:w="1"/><text x="25.4912%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.2412%" y="453" width="0.0804%" height="15" fill="rgb(230,152,12)" fg:x="314" fg:w="1"/><text x="25.4912%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.2412%" y="437" width="0.0804%" height="15" fill="rgb(226,101,19)" fg:x="314" fg:w="1"/><text x="25.4912%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.2412%" y="421" width="0.0804%" height="15" fill="rgb(250,149,32)" fg:x="314" fg:w="1"/><text x="25.4912%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.2412%" y="405" width="0.0804%" height="15" fill="rgb(232,178,12)" fg:x="314" fg:w="1"/><text x="25.4912%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.2412%" y="389" width="0.0804%" height="15" fill="rgb(246,151,17)" fg:x="314" fg:w="1"/><text x="25.4912%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.2412%" y="373" width="0.0804%" height="15" fill="rgb(252,17,51)" fg:x="314" fg:w="1"/><text x="25.4912%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.2412%" y="357" width="0.0804%" height="15" fill="rgb(250,207,23)" fg:x="314" fg:w="1"/><text x="25.4912%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.2412%" y="341" width="0.0804%" height="15" fill="rgb(205,27,5)" fg:x="314" fg:w="1"/><text x="25.4912%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.2412%" y="325" width="0.0804%" height="15" fill="rgb(224,32,19)" fg:x="314" fg:w="1"/><text x="25.4912%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2412%" y="309" width="0.0804%" height="15" fill="rgb(247,214,40)" fg:x="314" fg:w="1"/><text x="25.4912%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="25.0804%" y="549" width="0.3215%" height="15" fill="rgb(239,199,17)" fg:x="312" fg:w="4"/><text x="25.3304%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.3215%" y="533" width="0.0804%" height="15" fill="rgb(251,159,9)" fg:x="315" fg:w="1"/><text x="25.5715%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.3215%" y="517" width="0.0804%" height="15" fill="rgb(225,78,32)" fg:x="315" fg:w="1"/><text x="25.5715%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.3215%" y="501" width="0.0804%" height="15" fill="rgb(206,97,47)" fg:x="315" fg:w="1"/><text x="25.5715%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.3215%" y="485" width="0.0804%" height="15" fill="rgb(227,107,4)" fg:x="315" fg:w="1"/><text x="25.5715%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.3215%" y="469" width="0.0804%" height="15" fill="rgb(241,146,50)" fg:x="315" fg:w="1"/><text x="25.5715%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.3215%" y="453" width="0.0804%" height="15" fill="rgb(232,92,30)" fg:x="315" fg:w="1"/><text x="25.5715%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.3215%" y="437" width="0.0804%" height="15" fill="rgb(222,0,40)" fg:x="315" fg:w="1"/><text x="25.5715%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.3215%" y="421" width="0.0804%" height="15" fill="rgb(219,54,33)" fg:x="315" fg:w="1"/><text x="25.5715%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.3215%" y="405" width="0.0804%" height="15" fill="rgb(226,209,28)" fg:x="315" fg:w="1"/><text x="25.5715%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.3215%" y="389" width="0.0804%" height="15" fill="rgb(254,205,35)" fg:x="315" fg:w="1"/><text x="25.5715%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.3215%" y="373" width="0.0804%" height="15" fill="rgb(230,159,3)" fg:x="315" fg:w="1"/><text x="25.5715%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.3215%" y="357" width="0.0804%" height="15" fill="rgb(232,190,24)" fg:x="315" fg:w="1"/><text x="25.5715%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="25.3215%" y="341" width="0.0804%" height="15" fill="rgb(217,227,44)" fg:x="315" fg:w="1"/><text x="25.5715%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4019%" y="549" width="0.0804%" height="15" fill="rgb(236,211,1)" fg:x="316" fg:w="1"/><text x="25.6519%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="25.0804%" y="565" width="0.4823%" height="15" fill="rgb(250,127,46)" fg:x="312" fg:w="6"/><text x="25.3304%" y="575.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="25.4823%" y="549" width="0.0804%" height="15" fill="rgb(229,213,6)" fg:x="317" fg:w="1"/><text x="25.7323%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.4823%" y="533" width="0.0804%" height="15" fill="rgb(237,15,36)" fg:x="317" fg:w="1"/><text x="25.7323%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="24.9196%" y="613" width="0.7235%" height="15" fill="rgb(213,131,41)" fg:x="310" fg:w="9"/><text x="25.1696%" y="623.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="25.0000%" y="597" width="0.6431%" height="15" fill="rgb(225,82,44)" fg:x="311" fg:w="8"/><text x="25.2500%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="25.0000%" y="581" width="0.6431%" height="15" fill="rgb(249,42,11)" fg:x="311" fg:w="8"/><text x="25.2500%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.5627%" y="565" width="0.0804%" height="15" fill="rgb(253,11,29)" fg:x="318" fg:w="1"/><text x="25.8127%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5627%" y="549" width="0.0804%" height="15" fill="rgb(206,8,54)" fg:x="318" fg:w="1"/><text x="25.8127%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.5627%" y="533" width="0.0804%" height="15" fill="rgb(222,186,2)" fg:x="318" fg:w="1"/><text x="25.8127%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5627%" y="517" width="0.0804%" height="15" fill="rgb(221,206,53)" fg:x="318" fg:w="1"/><text x="25.8127%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.5627%" y="501" width="0.0804%" height="15" fill="rgb(230,150,21)" fg:x="318" fg:w="1"/><text x="25.8127%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5627%" y="485" width="0.0804%" height="15" fill="rgb(253,202,10)" fg:x="318" fg:w="1"/><text x="25.8127%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.5627%" y="469" width="0.0804%" height="15" fill="rgb(238,109,40)" fg:x="318" fg:w="1"/><text x="25.8127%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5627%" y="453" width="0.0804%" height="15" fill="rgb(247,120,22)" fg:x="318" fg:w="1"/><text x="25.8127%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5627%" y="437" width="0.0804%" height="15" fill="rgb(207,43,30)" fg:x="318" fg:w="1"/><text x="25.8127%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5627%" y="421" width="0.0804%" height="15" fill="rgb(213,211,24)" fg:x="318" fg:w="1"/><text x="25.8127%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="25.6431%" y="597" width="0.0804%" height="15" fill="rgb(239,73,39)" fg:x="319" fg:w="1"/><text x="25.8931%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.6431%" y="581" width="0.0804%" height="15" fill="rgb(245,182,19)" fg:x="319" fg:w="1"/><text x="25.8931%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7235%" y="565" width="0.0804%" height="15" fill="rgb(247,143,26)" fg:x="320" fg:w="1"/><text x="25.9735%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7235%" y="549" width="0.0804%" height="15" fill="rgb(228,191,23)" fg:x="320" fg:w="1"/><text x="25.9735%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7235%" y="533" width="0.0804%" height="15" fill="rgb(253,165,31)" fg:x="320" fg:w="1"/><text x="25.9735%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7235%" y="517" width="0.0804%" height="15" fill="rgb(234,138,20)" fg:x="320" fg:w="1"/><text x="25.9735%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7235%" y="501" width="0.0804%" height="15" fill="rgb(218,191,29)" fg:x="320" fg:w="1"/><text x="25.9735%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7235%" y="485" width="0.0804%" height="15" fill="rgb(221,157,19)" fg:x="320" fg:w="1"/><text x="25.9735%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8039%" y="565" width="0.0804%" height="15" fill="rgb(237,26,42)" fg:x="321" fg:w="1"/><text x="26.0539%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.8039%" y="549" width="0.0804%" height="15" fill="rgb(220,163,24)" fg:x="321" fg:w="1"/><text x="26.0539%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8039%" y="533" width="0.0804%" height="15" fill="rgb(242,115,20)" fg:x="321" fg:w="1"/><text x="26.0539%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.05%)</title><rect x="24.9196%" y="645" width="1.0450%" height="15" fill="rgb(210,206,9)" fg:x="310" fg:w="13"/><text x="25.1696%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (13 samples, 1.05%)</title><rect x="24.9196%" y="629" width="1.0450%" height="15" fill="rgb(208,71,17)" fg:x="310" fg:w="13"/><text x="25.1696%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="25.6431%" y="613" width="0.3215%" height="15" fill="rgb(233,7,5)" fg:x="319" fg:w="4"/><text x="25.8931%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="25.7235%" y="597" width="0.2412%" height="15" fill="rgb(207,92,33)" fg:x="320" fg:w="3"/><text x="25.9735%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.7235%" y="581" width="0.2412%" height="15" fill="rgb(218,87,9)" fg:x="320" fg:w="3"/><text x="25.9735%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.8842%" y="565" width="0.0804%" height="15" fill="rgb(219,47,37)" fg:x="322" fg:w="1"/><text x="26.1342%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.8842%" y="549" width="0.0804%" height="15" fill="rgb(221,152,34)" fg:x="322" fg:w="1"/><text x="26.1342%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (32 samples, 2.57%)</title><rect x="23.4727%" y="693" width="2.5723%" height="15" fill="rgb(235,176,21)" fg:x="292" fg:w="32"/><text x="23.7227%" y="703.50">pl..</text></g><g><title>plugins_core::tools::set_container (22 samples, 1.77%)</title><rect x="24.2765%" y="677" width="1.7685%" height="15" fill="rgb(232,212,21)" fg:x="302" fg:w="22"/><text x="24.5265%" y="687.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (14 samples, 1.13%)</title><rect x="24.9196%" y="661" width="1.1254%" height="15" fill="rgb(245,82,39)" fg:x="310" fg:w="14"/><text x="25.1696%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="25.9646%" y="645" width="0.0804%" height="15" fill="rgb(241,52,51)" fg:x="323" fg:w="1"/><text x="26.2146%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.9646%" y="629" width="0.0804%" height="15" fill="rgb(219,91,24)" fg:x="323" fg:w="1"/><text x="26.2146%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="25.9646%" y="613" width="0.0804%" height="15" fill="rgb(241,142,12)" fg:x="323" fg:w="1"/><text x="26.2146%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0450%" y="581" width="0.0804%" height="15" fill="rgb(230,27,9)" fg:x="324" fg:w="1"/><text x="26.2950%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0450%" y="565" width="0.0804%" height="15" fill="rgb(249,181,32)" fg:x="324" fg:w="1"/><text x="26.2950%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="26.0450%" y="693" width="0.1608%" height="15" fill="rgb(230,107,3)" fg:x="324" fg:w="2"/><text x="26.2950%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="26.0450%" y="677" width="0.1608%" height="15" fill="rgb(246,204,14)" fg:x="324" fg:w="2"/><text x="26.2950%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="26.0450%" y="661" width="0.1608%" height="15" fill="rgb(213,192,47)" fg:x="324" fg:w="2"/><text x="26.2950%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="26.0450%" y="645" width="0.1608%" height="15" fill="rgb(240,44,36)" fg:x="324" fg:w="2"/><text x="26.2950%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="26.0450%" y="629" width="0.1608%" height="15" fill="rgb(244,209,38)" fg:x="324" fg:w="2"/><text x="26.2950%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.0450%" y="613" width="0.1608%" height="15" fill="rgb(219,34,37)" fg:x="324" fg:w="2"/><text x="26.2950%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.0450%" y="597" width="0.1608%" height="15" fill="rgb(210,28,6)" fg:x="324" fg:w="2"/><text x="26.2950%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="26.1254%" y="581" width="0.0804%" height="15" fill="rgb(244,110,52)" fg:x="325" fg:w="1"/><text x="26.3754%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1254%" y="565" width="0.0804%" height="15" fill="rgb(254,124,47)" fg:x="325" fg:w="1"/><text x="26.3754%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="26.1254%" y="549" width="0.0804%" height="15" fill="rgb(254,110,13)" fg:x="325" fg:w="1"/><text x="26.3754%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1254%" y="533" width="0.0804%" height="15" fill="rgb(252,57,21)" fg:x="325" fg:w="1"/><text x="26.3754%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.1254%" y="517" width="0.0804%" height="15" fill="rgb(242,60,45)" fg:x="325" fg:w="1"/><text x="26.3754%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1254%" y="501" width="0.0804%" height="15" fill="rgb(234,49,30)" fg:x="325" fg:w="1"/><text x="26.3754%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="26.1254%" y="485" width="0.0804%" height="15" fill="rgb(218,98,6)" fg:x="325" fg:w="1"/><text x="26.3754%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1254%" y="469" width="0.0804%" height="15" fill="rgb(220,174,29)" fg:x="325" fg:w="1"/><text x="26.3754%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.1254%" y="453" width="0.0804%" height="15" fill="rgb(236,163,23)" fg:x="325" fg:w="1"/><text x="26.3754%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1254%" y="437" width="0.0804%" height="15" fill="rgb(242,114,45)" fg:x="325" fg:w="1"/><text x="26.3754%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="26.1254%" y="421" width="0.0804%" height="15" fill="rgb(232,10,53)" fg:x="325" fg:w="1"/><text x="26.3754%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="26.1254%" y="405" width="0.0804%" height="15" fill="rgb(245,108,29)" fg:x="325" fg:w="1"/><text x="26.3754%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="26.1254%" y="389" width="0.0804%" height="15" fill="rgb(240,89,53)" fg:x="325" fg:w="1"/><text x="26.3754%" y="399.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="26.2058%" y="693" width="0.0804%" height="15" fill="rgb(226,60,45)" fg:x="326" fg:w="1"/><text x="26.4558%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="26.2058%" y="677" width="0.0804%" height="15" fill="rgb(230,41,44)" fg:x="326" fg:w="1"/><text x="26.4558%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="26.2058%" y="661" width="0.0804%" height="15" fill="rgb(230,26,20)" fg:x="326" fg:w="1"/><text x="26.4558%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.2058%" y="645" width="0.0804%" height="15" fill="rgb(237,170,32)" fg:x="326" fg:w="1"/><text x="26.4558%" y="655.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="26.2058%" y="629" width="0.0804%" height="15" fill="rgb(212,35,42)" fg:x="326" fg:w="1"/><text x="26.4558%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.2058%" y="613" width="0.0804%" height="15" fill="rgb(227,31,34)" fg:x="326" fg:w="1"/><text x="26.4558%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="26.2058%" y="597" width="0.0804%" height="15" fill="rgb(216,19,18)" fg:x="326" fg:w="1"/><text x="26.4558%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.2058%" y="581" width="0.0804%" height="15" fill="rgb(211,133,42)" fg:x="326" fg:w="1"/><text x="26.4558%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.2058%" y="565" width="0.0804%" height="15" fill="rgb(244,66,13)" fg:x="326" fg:w="1"/><text x="26.4558%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="26.2058%" y="549" width="0.0804%" height="15" fill="rgb(218,185,50)" fg:x="326" fg:w="1"/><text x="26.4558%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.2058%" y="533" width="0.0804%" height="15" fill="rgb(219,149,13)" fg:x="326" fg:w="1"/><text x="26.4558%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="26.2058%" y="517" width="0.0804%" height="15" fill="rgb(221,125,0)" fg:x="326" fg:w="1"/><text x="26.4558%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.2058%" y="501" width="0.0804%" height="15" fill="rgb(247,126,27)" fg:x="326" fg:w="1"/><text x="26.4558%" y="511.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="26.2862%" y="693" width="0.0804%" height="15" fill="rgb(250,138,30)" fg:x="327" fg:w="1"/><text x="26.5362%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="26.2862%" y="677" width="0.0804%" height="15" fill="rgb(230,151,9)" fg:x="327" fg:w="1"/><text x="26.5362%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="26.2862%" y="661" width="0.0804%" height="15" fill="rgb(233,80,38)" fg:x="327" fg:w="1"/><text x="26.5362%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="26.2862%" y="645" width="0.0804%" height="15" fill="rgb(232,68,43)" fg:x="327" fg:w="1"/><text x="26.5362%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3666%" y="581" width="0.0804%" height="15" fill="rgb(254,5,50)" fg:x="328" fg:w="1"/><text x="26.6166%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3666%" y="565" width="0.0804%" height="15" fill="rgb(225,45,5)" fg:x="328" fg:w="1"/><text x="26.6166%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3666%" y="549" width="0.0804%" height="15" fill="rgb(239,22,3)" fg:x="328" fg:w="1"/><text x="26.6166%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3666%" y="533" width="0.0804%" height="15" fill="rgb(243,129,0)" fg:x="328" fg:w="1"/><text x="26.6166%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3666%" y="517" width="0.0804%" height="15" fill="rgb(223,164,0)" fg:x="328" fg:w="1"/><text x="26.6166%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="26.3666%" y="629" width="0.1608%" height="15" fill="rgb(221,46,29)" fg:x="328" fg:w="2"/><text x="26.6166%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.3666%" y="613" width="0.1608%" height="15" fill="rgb(205,97,47)" fg:x="328" fg:w="2"/><text x="26.6166%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.3666%" y="597" width="0.1608%" height="15" fill="rgb(249,14,8)" fg:x="328" fg:w="2"/><text x="26.6166%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="26.4469%" y="581" width="0.0804%" height="15" fill="rgb(216,77,3)" fg:x="329" fg:w="1"/><text x="26.6969%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.4469%" y="565" width="0.0804%" height="15" fill="rgb(206,168,54)" fg:x="329" fg:w="1"/><text x="26.6969%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="26.4469%" y="549" width="0.0804%" height="15" fill="rgb(236,3,41)" fg:x="329" fg:w="1"/><text x="26.6969%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.4469%" y="533" width="0.0804%" height="15" fill="rgb(231,132,24)" fg:x="329" fg:w="1"/><text x="26.6969%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.4469%" y="517" width="0.0804%" height="15" fill="rgb(227,221,40)" fg:x="329" fg:w="1"/><text x="26.6969%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.4469%" y="501" width="0.0804%" height="15" fill="rgb(233,151,11)" fg:x="329" fg:w="1"/><text x="26.6969%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.5273%" y="613" width="0.1608%" height="15" fill="rgb(247,81,35)" fg:x="330" fg:w="2"/><text x="26.7773%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.5273%" y="597" width="0.1608%" height="15" fill="rgb(243,128,48)" fg:x="330" fg:w="2"/><text x="26.7773%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="26.5273%" y="581" width="0.1608%" height="15" fill="rgb(253,16,10)" fg:x="330" fg:w="2"/><text x="26.7773%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.5273%" y="565" width="0.1608%" height="15" fill="rgb(228,67,27)" fg:x="330" fg:w="2"/><text x="26.7773%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="26.5273%" y="549" width="0.1608%" height="15" fill="rgb(231,105,25)" fg:x="330" fg:w="2"/><text x="26.7773%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.5273%" y="533" width="0.1608%" height="15" fill="rgb(213,166,47)" fg:x="330" fg:w="2"/><text x="26.7773%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="26.5273%" y="517" width="0.1608%" height="15" fill="rgb(209,27,10)" fg:x="330" fg:w="2"/><text x="26.7773%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.5273%" y="501" width="0.1608%" height="15" fill="rgb(241,44,30)" fg:x="330" fg:w="2"/><text x="26.7773%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="26.5273%" y="485" width="0.1608%" height="15" fill="rgb(223,216,15)" fg:x="330" fg:w="2"/><text x="26.7773%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.6077%" y="469" width="0.0804%" height="15" fill="rgb(227,14,7)" fg:x="331" fg:w="1"/><text x="26.8577%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.6077%" y="453" width="0.0804%" height="15" fill="rgb(237,14,5)" fg:x="331" fg:w="1"/><text x="26.8577%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.6077%" y="437" width="0.0804%" height="15" fill="rgb(232,14,36)" fg:x="331" fg:w="1"/><text x="26.8577%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="26.6077%" y="421" width="0.0804%" height="15" fill="rgb(234,0,38)" fg:x="331" fg:w="1"/><text x="26.8577%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="26.6077%" y="405" width="0.0804%" height="15" fill="rgb(207,170,14)" fg:x="331" fg:w="1"/><text x="26.8577%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="26.6077%" y="389" width="0.0804%" height="15" fill="rgb(252,45,13)" fg:x="331" fg:w="1"/><text x="26.8577%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::SeqDeserializer as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="26.6077%" y="373" width="0.0804%" height="15" fill="rgb(213,142,7)" fg:x="331" fg:w="1"/><text x="26.8577%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="26.3666%" y="677" width="0.4019%" height="15" fill="rgb(216,157,23)" fg:x="328" fg:w="5"/><text x="26.6166%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="26.3666%" y="661" width="0.4019%" height="15" fill="rgb(212,145,33)" fg:x="328" fg:w="5"/><text x="26.6166%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="26.3666%" y="645" width="0.4019%" height="15" fill="rgb(233,26,13)" fg:x="328" fg:w="5"/><text x="26.6166%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="26.5273%" y="629" width="0.2412%" height="15" fill="rgb(219,196,19)" fg:x="330" fg:w="3"/><text x="26.7773%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="26.6881%" y="613" width="0.0804%" height="15" fill="rgb(246,56,21)" fg:x="332" fg:w="1"/><text x="26.9381%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.6881%" y="597" width="0.0804%" height="15" fill="rgb(222,28,53)" fg:x="332" fg:w="1"/><text x="26.9381%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6881%" y="581" width="0.0804%" height="15" fill="rgb(224,5,27)" fg:x="332" fg:w="1"/><text x="26.9381%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6881%" y="565" width="0.0804%" height="15" fill="rgb(220,153,33)" fg:x="332" fg:w="1"/><text x="26.9381%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6881%" y="549" width="0.0804%" height="15" fill="rgb(226,58,19)" fg:x="332" fg:w="1"/><text x="26.9381%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6881%" y="533" width="0.0804%" height="15" fill="rgb(239,112,23)" fg:x="332" fg:w="1"/><text x="26.9381%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="26.8489%" y="629" width="0.0804%" height="15" fill="rgb(251,213,20)" fg:x="334" fg:w="1"/><text x="27.0989%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.8489%" y="613" width="0.0804%" height="15" fill="rgb(215,181,21)" fg:x="334" fg:w="1"/><text x="27.0989%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.8489%" y="597" width="0.0804%" height="15" fill="rgb(240,8,35)" fg:x="334" fg:w="1"/><text x="27.0989%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="26.8489%" y="581" width="0.0804%" height="15" fill="rgb(232,203,3)" fg:x="334" fg:w="1"/><text x="27.0989%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8489%" y="565" width="0.0804%" height="15" fill="rgb(214,202,43)" fg:x="334" fg:w="1"/><text x="27.0989%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.9293%" y="581" width="0.1608%" height="15" fill="rgb(254,35,11)" fg:x="335" fg:w="2"/><text x="27.1793%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.9293%" y="565" width="0.1608%" height="15" fill="rgb(239,173,13)" fg:x="335" fg:w="2"/><text x="27.1793%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.9293%" y="549" width="0.1608%" height="15" fill="rgb(220,141,0)" fg:x="335" fg:w="2"/><text x="27.1793%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.9293%" y="533" width="0.1608%" height="15" fill="rgb(210,98,12)" fg:x="335" fg:w="2"/><text x="27.1793%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0096%" y="517" width="0.0804%" height="15" fill="rgb(254,153,22)" fg:x="336" fg:w="1"/><text x="27.2596%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="26.8489%" y="661" width="0.3215%" height="15" fill="rgb(247,223,17)" fg:x="334" fg:w="4"/><text x="27.0989%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="26.8489%" y="645" width="0.3215%" height="15" fill="rgb(246,56,7)" fg:x="334" fg:w="4"/><text x="27.0989%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="26.9293%" y="629" width="0.2412%" height="15" fill="rgb(240,226,12)" fg:x="335" fg:w="3"/><text x="27.1793%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="26.9293%" y="613" width="0.2412%" height="15" fill="rgb(205,87,46)" fg:x="335" fg:w="3"/><text x="27.1793%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="26.9293%" y="597" width="0.2412%" height="15" fill="rgb(245,214,51)" fg:x="335" fg:w="3"/><text x="27.1793%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="27.0900%" y="581" width="0.0804%" height="15" fill="rgb(223,172,33)" fg:x="337" fg:w="1"/><text x="27.3400%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.0900%" y="565" width="0.0804%" height="15" fill="rgb(227,203,34)" fg:x="337" fg:w="1"/><text x="27.3400%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="27.0900%" y="549" width="0.0804%" height="15" fill="rgb(248,143,44)" fg:x="337" fg:w="1"/><text x="27.3400%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.0900%" y="533" width="0.0804%" height="15" fill="rgb(226,162,5)" fg:x="337" fg:w="1"/><text x="27.3400%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.0900%" y="517" width="0.0804%" height="15" fill="rgb(211,143,1)" fg:x="337" fg:w="1"/><text x="27.3400%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="27.1704%" y="661" width="0.0804%" height="15" fill="rgb(224,96,15)" fg:x="338" fg:w="1"/><text x="27.4204%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.1704%" y="645" width="0.0804%" height="15" fill="rgb(222,4,38)" fg:x="338" fg:w="1"/><text x="27.4204%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.1704%" y="629" width="0.0804%" height="15" fill="rgb(253,228,15)" fg:x="338" fg:w="1"/><text x="27.4204%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.1704%" y="613" width="0.0804%" height="15" fill="rgb(242,194,12)" fg:x="338" fg:w="1"/><text x="27.4204%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.1704%" y="597" width="0.0804%" height="15" fill="rgb(214,177,31)" fg:x="338" fg:w="1"/><text x="27.4204%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.1704%" y="581" width="0.0804%" height="15" fill="rgb(226,58,51)" fg:x="338" fg:w="1"/><text x="27.4204%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.1704%" y="565" width="0.0804%" height="15" fill="rgb(250,119,16)" fg:x="338" fg:w="1"/><text x="27.4204%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="27.1704%" y="549" width="0.0804%" height="15" fill="rgb(223,128,53)" fg:x="338" fg:w="1"/><text x="27.4204%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.1704%" y="533" width="0.0804%" height="15" fill="rgb(251,199,15)" fg:x="338" fg:w="1"/><text x="27.4204%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4116%" y="645" width="0.0804%" height="15" fill="rgb(235,168,42)" fg:x="341" fg:w="1"/><text x="27.6616%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.4920%" y="613" width="0.0804%" height="15" fill="rgb(250,210,17)" fg:x="342" fg:w="1"/><text x="27.7420%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.4920%" y="597" width="0.0804%" height="15" fill="rgb(226,36,41)" fg:x="342" fg:w="1"/><text x="27.7420%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4920%" y="581" width="0.0804%" height="15" fill="rgb(225,87,10)" fg:x="342" fg:w="1"/><text x="27.7420%" y="591.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="27.4920%" y="645" width="0.1608%" height="15" fill="rgb(228,83,9)" fg:x="342" fg:w="2"/><text x="27.7420%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.4920%" y="629" width="0.1608%" height="15" fill="rgb(225,16,36)" fg:x="342" fg:w="2"/><text x="27.7420%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.5723%" y="613" width="0.0804%" height="15" fill="rgb(242,198,13)" fg:x="343" fg:w="1"/><text x="27.8223%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="27.5723%" y="597" width="0.0804%" height="15" fill="rgb(239,25,51)" fg:x="343" fg:w="1"/><text x="27.8223%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.5723%" y="581" width="0.0804%" height="15" fill="rgb(239,28,37)" fg:x="343" fg:w="1"/><text x="27.8223%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5723%" y="565" width="0.0804%" height="15" fill="rgb(234,70,17)" fg:x="343" fg:w="1"/><text x="27.8223%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="27.2508%" y="661" width="0.4823%" height="15" fill="rgb(231,215,53)" fg:x="339" fg:w="6"/><text x="27.5008%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="27.6527%" y="645" width="0.0804%" height="15" fill="rgb(218,140,42)" fg:x="344" fg:w="1"/><text x="27.9027%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="27.6527%" y="629" width="0.0804%" height="15" fill="rgb(233,227,45)" fg:x="344" fg:w="1"/><text x="27.9027%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8135%" y="501" width="0.0804%" height="15" fill="rgb(225,189,21)" fg:x="346" fg:w="1"/><text x="28.0635%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8135%" y="485" width="0.0804%" height="15" fill="rgb(237,176,54)" fg:x="346" fg:w="1"/><text x="28.0635%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8135%" y="469" width="0.0804%" height="15" fill="rgb(215,131,46)" fg:x="346" fg:w="1"/><text x="28.0635%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.8135%" y="453" width="0.0804%" height="15" fill="rgb(218,95,20)" fg:x="346" fg:w="1"/><text x="28.0635%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.8135%" y="437" width="0.0804%" height="15" fill="rgb(208,198,12)" fg:x="346" fg:w="1"/><text x="28.0635%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.8135%" y="421" width="0.0804%" height="15" fill="rgb(239,107,50)" fg:x="346" fg:w="1"/><text x="28.0635%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.8135%" y="549" width="0.1608%" height="15" fill="rgb(240,217,37)" fg:x="346" fg:w="2"/><text x="28.0635%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.8135%" y="533" width="0.1608%" height="15" fill="rgb(242,197,49)" fg:x="346" fg:w="2"/><text x="28.0635%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.8135%" y="517" width="0.1608%" height="15" fill="rgb(219,171,17)" fg:x="346" fg:w="2"/><text x="28.0635%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8939%" y="501" width="0.0804%" height="15" fill="rgb(209,81,40)" fg:x="347" fg:w="1"/><text x="28.1439%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8939%" y="485" width="0.0804%" height="15" fill="rgb(237,156,30)" fg:x="347" fg:w="1"/><text x="28.1439%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.8939%" y="469" width="0.0804%" height="15" fill="rgb(212,127,16)" fg:x="347" fg:w="1"/><text x="28.1439%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.8939%" y="453" width="0.0804%" height="15" fill="rgb(226,66,32)" fg:x="347" fg:w="1"/><text x="28.1439%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.8939%" y="437" width="0.0804%" height="15" fill="rgb(245,22,46)" fg:x="347" fg:w="1"/><text x="28.1439%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.8939%" y="421" width="0.0804%" height="15" fill="rgb(210,112,21)" fg:x="347" fg:w="1"/><text x="28.1439%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.8939%" y="405" width="0.0804%" height="15" fill="rgb(207,118,39)" fg:x="347" fg:w="1"/><text x="28.1439%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.8939%" y="389" width="0.0804%" height="15" fill="rgb(205,206,35)" fg:x="347" fg:w="1"/><text x="28.1439%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.8939%" y="373" width="0.0804%" height="15" fill="rgb(222,120,2)" fg:x="347" fg:w="1"/><text x="28.1439%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.8939%" y="357" width="0.0804%" height="15" fill="rgb(205,38,18)" fg:x="347" fg:w="1"/><text x="28.1439%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.8939%" y="341" width="0.0804%" height="15" fill="rgb(226,61,2)" fg:x="347" fg:w="1"/><text x="28.1439%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.8939%" y="325" width="0.0804%" height="15" fill="rgb(242,161,23)" fg:x="347" fg:w="1"/><text x="28.1439%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="27.7331%" y="565" width="0.3215%" height="15" fill="rgb(213,13,52)" fg:x="345" fg:w="4"/><text x="27.9831%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.9743%" y="549" width="0.0804%" height="15" fill="rgb(246,209,47)" fg:x="348" fg:w="1"/><text x="28.2243%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.9743%" y="533" width="0.0804%" height="15" fill="rgb(214,41,3)" fg:x="348" fg:w="1"/><text x="28.2243%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.9743%" y="517" width="0.0804%" height="15" fill="rgb(236,119,38)" fg:x="348" fg:w="1"/><text x="28.2243%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.9743%" y="501" width="0.0804%" height="15" fill="rgb(218,50,11)" fg:x="348" fg:w="1"/><text x="28.2243%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.9743%" y="485" width="0.0804%" height="15" fill="rgb(228,38,11)" fg:x="348" fg:w="1"/><text x="28.2243%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.9743%" y="469" width="0.0804%" height="15" fill="rgb(212,13,9)" fg:x="348" fg:w="1"/><text x="28.2243%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.9743%" y="453" width="0.0804%" height="15" fill="rgb(208,211,9)" fg:x="348" fg:w="1"/><text x="28.2243%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.9743%" y="437" width="0.0804%" height="15" fill="rgb(239,39,32)" fg:x="348" fg:w="1"/><text x="28.2243%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.9743%" y="421" width="0.0804%" height="15" fill="rgb(254,179,26)" fg:x="348" fg:w="1"/><text x="28.2243%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.9743%" y="405" width="0.0804%" height="15" fill="rgb(249,165,28)" fg:x="348" fg:w="1"/><text x="28.2243%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.9743%" y="389" width="0.0804%" height="15" fill="rgb(225,59,50)" fg:x="348" fg:w="1"/><text x="28.2243%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.9743%" y="373" width="0.0804%" height="15" fill="rgb(209,122,5)" fg:x="348" fg:w="1"/><text x="28.2243%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="27.7331%" y="613" width="0.4019%" height="15" fill="rgb(214,65,34)" fg:x="345" fg:w="5"/><text x="27.9831%" y="623.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="27.7331%" y="597" width="0.4019%" height="15" fill="rgb(249,183,32)" fg:x="345" fg:w="5"/><text x="27.9831%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="27.7331%" y="581" width="0.4019%" height="15" fill="rgb(218,122,24)" fg:x="345" fg:w="5"/><text x="27.9831%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.0547%" y="565" width="0.0804%" height="15" fill="rgb(224,109,18)" fg:x="349" fg:w="1"/><text x="28.3047%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.0547%" y="549" width="0.0804%" height="15" fill="rgb(210,68,50)" fg:x="349" fg:w="1"/><text x="28.3047%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.0547%" y="533" width="0.0804%" height="15" fill="rgb(212,184,34)" fg:x="349" fg:w="1"/><text x="28.3047%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.0547%" y="517" width="0.0804%" height="15" fill="rgb(238,105,48)" fg:x="349" fg:w="1"/><text x="28.3047%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.0547%" y="501" width="0.0804%" height="15" fill="rgb(222,134,54)" fg:x="349" fg:w="1"/><text x="28.3047%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.1350%" y="533" width="0.0804%" height="15" fill="rgb(246,24,43)" fg:x="350" fg:w="1"/><text x="28.3850%" y="543.50"></text></g><g><title>plugins_core::build::Build::occupying (24 samples, 1.93%)</title><rect x="26.3666%" y="693" width="1.9293%" height="15" fill="rgb(227,169,22)" fg:x="328" fg:w="24"/><text x="26.6166%" y="703.50">p..</text></g><g><title>plugins_core::tools::set_occupying (19 samples, 1.53%)</title><rect x="26.7685%" y="677" width="1.5273%" height="15" fill="rgb(253,152,4)" fg:x="333" fg:w="19"/><text x="27.0185%" y="687.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (7 samples, 0.56%)</title><rect x="27.7331%" y="661" width="0.5627%" height="15" fill="rgb(219,158,36)" fg:x="345" fg:w="7"/><text x="27.9831%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="27.7331%" y="645" width="0.5627%" height="15" fill="rgb(251,128,40)" fg:x="345" fg:w="7"/><text x="27.9831%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="27.7331%" y="629" width="0.5627%" height="15" fill="rgb(254,101,39)" fg:x="345" fg:w="7"/><text x="27.9831%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="28.1350%" y="613" width="0.1608%" height="15" fill="rgb(221,168,40)" fg:x="350" fg:w="2"/><text x="28.3850%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="28.1350%" y="597" width="0.1608%" height="15" fill="rgb(221,14,27)" fg:x="350" fg:w="2"/><text x="28.3850%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.1350%" y="581" width="0.1608%" height="15" fill="rgb(207,36,43)" fg:x="350" fg:w="2"/><text x="28.3850%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="28.1350%" y="565" width="0.1608%" height="15" fill="rgb(240,172,53)" fg:x="350" fg:w="2"/><text x="28.3850%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.1350%" y="549" width="0.1608%" height="15" fill="rgb(241,138,43)" fg:x="350" fg:w="2"/><text x="28.3850%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.2154%" y="533" width="0.0804%" height="15" fill="rgb(227,78,19)" fg:x="351" fg:w="1"/><text x="28.4654%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.2154%" y="517" width="0.0804%" height="15" fill="rgb(215,127,44)" fg:x="351" fg:w="1"/><text x="28.4654%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.2154%" y="501" width="0.0804%" height="15" fill="rgb(227,13,10)" fg:x="351" fg:w="1"/><text x="28.4654%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.2154%" y="485" width="0.0804%" height="15" fill="rgb(249,177,6)" fg:x="351" fg:w="1"/><text x="28.4654%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.2154%" y="469" width="0.0804%" height="15" fill="rgb(215,154,26)" fg:x="351" fg:w="1"/><text x="28.4654%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.2154%" y="453" width="0.0804%" height="15" fill="rgb(250,168,20)" fg:x="351" fg:w="1"/><text x="28.4654%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2958%" y="581" width="0.0804%" height="15" fill="rgb(222,53,38)" fg:x="352" fg:w="1"/><text x="28.5458%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2958%" y="565" width="0.0804%" height="15" fill="rgb(245,154,5)" fg:x="352" fg:w="1"/><text x="28.5458%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2958%" y="549" width="0.0804%" height="15" fill="rgb(214,89,50)" fg:x="352" fg:w="1"/><text x="28.5458%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.2958%" y="533" width="0.0804%" height="15" fill="rgb(232,73,14)" fg:x="352" fg:w="1"/><text x="28.5458%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.2958%" y="629" width="0.1608%" height="15" fill="rgb(230,101,20)" fg:x="352" fg:w="2"/><text x="28.5458%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="28.2958%" y="613" width="0.1608%" height="15" fill="rgb(208,56,28)" fg:x="352" fg:w="2"/><text x="28.5458%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.2958%" y="597" width="0.1608%" height="15" fill="rgb(247,205,22)" fg:x="352" fg:w="2"/><text x="28.5458%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.3762%" y="581" width="0.0804%" height="15" fill="rgb(252,109,51)" fg:x="353" fg:w="1"/><text x="28.6262%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3762%" y="565" width="0.0804%" height="15" fill="rgb(220,40,24)" fg:x="353" fg:w="1"/><text x="28.6262%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.3762%" y="549" width="0.0804%" height="15" fill="rgb(251,108,7)" fg:x="353" fg:w="1"/><text x="28.6262%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.4566%" y="581" width="0.0804%" height="15" fill="rgb(238,102,51)" fg:x="354" fg:w="1"/><text x="28.7066%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.4566%" y="565" width="0.0804%" height="15" fill="rgb(219,149,34)" fg:x="354" fg:w="1"/><text x="28.7066%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.4566%" y="549" width="0.0804%" height="15" fill="rgb(239,70,0)" fg:x="354" fg:w="1"/><text x="28.7066%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.4566%" y="533" width="0.0804%" height="15" fill="rgb(246,214,23)" fg:x="354" fg:w="1"/><text x="28.7066%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="28.4566%" y="613" width="0.1608%" height="15" fill="rgb(239,221,51)" fg:x="354" fg:w="2"/><text x="28.7066%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.4566%" y="597" width="0.1608%" height="15" fill="rgb(254,62,14)" fg:x="354" fg:w="2"/><text x="28.7066%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.5370%" y="581" width="0.0804%" height="15" fill="rgb(253,57,33)" fg:x="355" fg:w="1"/><text x="28.7870%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5370%" y="565" width="0.0804%" height="15" fill="rgb(229,34,6)" fg:x="355" fg:w="1"/><text x="28.7870%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.5370%" y="549" width="0.0804%" height="15" fill="rgb(235,191,23)" fg:x="355" fg:w="1"/><text x="28.7870%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5370%" y="533" width="0.0804%" height="15" fill="rgb(217,207,27)" fg:x="355" fg:w="1"/><text x="28.7870%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.5370%" y="517" width="0.0804%" height="15" fill="rgb(232,41,44)" fg:x="355" fg:w="1"/><text x="28.7870%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.5370%" y="501" width="0.0804%" height="15" fill="rgb(221,188,19)" fg:x="355" fg:w="1"/><text x="28.7870%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="28.2958%" y="677" width="0.4019%" height="15" fill="rgb(245,180,45)" fg:x="352" fg:w="5"/><text x="28.5458%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="28.2958%" y="661" width="0.4019%" height="15" fill="rgb(250,220,42)" fg:x="352" fg:w="5"/><text x="28.5458%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="28.2958%" y="645" width="0.4019%" height="15" fill="rgb(234,16,34)" fg:x="352" fg:w="5"/><text x="28.5458%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="28.4566%" y="629" width="0.2412%" height="15" fill="rgb(233,217,23)" fg:x="354" fg:w="3"/><text x="28.7066%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="28.6174%" y="613" width="0.0804%" height="15" fill="rgb(209,22,46)" fg:x="356" fg:w="1"/><text x="28.8674%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.6174%" y="597" width="0.0804%" height="15" fill="rgb(213,101,18)" fg:x="356" fg:w="1"/><text x="28.8674%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6174%" y="581" width="0.0804%" height="15" fill="rgb(215,179,52)" fg:x="356" fg:w="1"/><text x="28.8674%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.6174%" y="565" width="0.0804%" height="15" fill="rgb(223,50,25)" fg:x="356" fg:w="1"/><text x="28.8674%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6174%" y="549" width="0.0804%" height="15" fill="rgb(224,51,44)" fg:x="356" fg:w="1"/><text x="28.8674%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.6174%" y="533" width="0.0804%" height="15" fill="rgb(224,13,54)" fg:x="356" fg:w="1"/><text x="28.8674%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.6977%" y="645" width="0.0804%" height="15" fill="rgb(219,58,47)" fg:x="357" fg:w="1"/><text x="28.9477%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.6977%" y="629" width="0.0804%" height="15" fill="rgb(246,124,34)" fg:x="357" fg:w="1"/><text x="28.9477%" y="639.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (156 samples, 12.54%)</title><rect x="16.3987%" y="709" width="12.5402%" height="15" fill="rgb(245,109,25)" fg:x="204" fg:w="156"/><text x="16.6487%" y="719.50">plugins_core::build..</text></g><g><title>plugins_core::build::Build::with_username (8 samples, 0.64%)</title><rect x="28.2958%" y="693" width="0.6431%" height="15" fill="rgb(235,48,23)" fg:x="352" fg:w="8"/><text x="28.5458%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (3 samples, 0.24%)</title><rect x="28.6977%" y="677" width="0.2412%" height="15" fill="rgb(229,203,36)" fg:x="357" fg:w="3"/><text x="28.9477%" y="687.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="28.6977%" y="661" width="0.2412%" height="15" fill="rgb(234,180,9)" fg:x="357" fg:w="3"/><text x="28.9477%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="28.7781%" y="645" width="0.1608%" height="15" fill="rgb(228,98,45)" fg:x="358" fg:w="2"/><text x="29.0281%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8585%" y="629" width="0.0804%" height="15" fill="rgb(240,24,36)" fg:x="359" fg:w="1"/><text x="29.1085%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8585%" y="613" width="0.0804%" height="15" fill="rgb(227,154,19)" fg:x="359" fg:w="1"/><text x="29.1085%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8585%" y="597" width="0.0804%" height="15" fill="rgb(231,2,48)" fg:x="359" fg:w="1"/><text x="29.1085%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.8585%" y="581" width="0.0804%" height="15" fill="rgb(219,216,0)" fg:x="359" fg:w="1"/><text x="29.1085%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.8585%" y="565" width="0.0804%" height="15" fill="rgb(251,88,0)" fg:x="359" fg:w="1"/><text x="29.1085%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.8585%" y="549" width="0.0804%" height="15" fill="rgb(242,45,45)" fg:x="359" fg:w="1"/><text x="29.1085%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.8585%" y="533" width="0.0804%" height="15" fill="rgb(218,149,45)" fg:x="359" fg:w="1"/><text x="29.1085%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.8585%" y="517" width="0.0804%" height="15" fill="rgb(247,194,10)" fg:x="359" fg:w="1"/><text x="29.1085%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.8585%" y="501" width="0.0804%" height="15" fill="rgb(234,33,37)" fg:x="359" fg:w="1"/><text x="29.1085%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.8585%" y="485" width="0.0804%" height="15" fill="rgb(218,61,13)" fg:x="359" fg:w="1"/><text x="29.1085%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.8585%" y="469" width="0.0804%" height="15" fill="rgb(210,80,52)" fg:x="359" fg:w="1"/><text x="29.1085%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.8585%" y="453" width="0.0804%" height="15" fill="rgb(218,203,27)" fg:x="359" fg:w="1"/><text x="29.1085%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.8585%" y="437" width="0.0804%" height="15" fill="rgb(209,126,33)" fg:x="359" fg:w="1"/><text x="29.1085%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="28.9389%" y="709" width="0.0804%" height="15" fill="rgb(234,173,41)" fg:x="360" fg:w="1"/><text x="29.1889%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.9389%" y="693" width="0.0804%" height="15" fill="rgb(228,166,9)" fg:x="360" fg:w="1"/><text x="29.1889%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="29.0193%" y="709" width="0.0804%" height="15" fill="rgb(208,124,43)" fg:x="361" fg:w="1"/><text x="29.2693%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.0193%" y="693" width="0.0804%" height="15" fill="rgb(212,154,38)" fg:x="361" fg:w="1"/><text x="29.2693%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.0193%" y="677" width="0.0804%" height="15" fill="rgb(246,179,35)" fg:x="361" fg:w="1"/><text x="29.2693%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.0193%" y="661" width="0.0804%" height="15" fill="rgb(251,3,50)" fg:x="361" fg:w="1"/><text x="29.2693%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="29.1801%" y="629" width="0.2412%" height="15" fill="rgb(219,96,8)" fg:x="363" fg:w="3"/><text x="29.4301%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="29.1801%" y="613" width="0.2412%" height="15" fill="rgb(251,216,33)" fg:x="363" fg:w="3"/><text x="29.4301%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="29.1801%" y="597" width="0.2412%" height="15" fill="rgb(243,145,29)" fg:x="363" fg:w="3"/><text x="29.4301%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="29.1801%" y="581" width="0.2412%" height="15" fill="rgb(210,75,20)" fg:x="363" fg:w="3"/><text x="29.4301%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.1801%" y="565" width="0.2412%" height="15" fill="rgb(235,56,8)" fg:x="363" fg:w="3"/><text x="29.4301%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="29.1801%" y="549" width="0.2412%" height="15" fill="rgb(226,175,49)" fg:x="363" fg:w="3"/><text x="29.4301%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.1801%" y="533" width="0.2412%" height="15" fill="rgb(242,204,23)" fg:x="363" fg:w="3"/><text x="29.4301%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="29.2605%" y="517" width="0.1608%" height="15" fill="rgb(225,104,24)" fg:x="364" fg:w="2"/><text x="29.5105%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.2605%" y="501" width="0.1608%" height="15" fill="rgb(253,34,1)" fg:x="364" fg:w="2"/><text x="29.5105%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="29.2605%" y="485" width="0.1608%" height="15" fill="rgb(233,199,23)" fg:x="364" fg:w="2"/><text x="29.5105%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.2605%" y="469" width="0.1608%" height="15" fill="rgb(247,7,51)" fg:x="364" fg:w="2"/><text x="29.5105%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4212%" y="581" width="0.0804%" height="15" fill="rgb(214,146,12)" fg:x="366" fg:w="1"/><text x="29.6712%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4212%" y="565" width="0.0804%" height="15" fill="rgb(234,181,43)" fg:x="366" fg:w="1"/><text x="29.6712%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="29.4212%" y="613" width="0.1608%" height="15" fill="rgb(239,148,6)" fg:x="366" fg:w="2"/><text x="29.6712%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.4212%" y="597" width="0.1608%" height="15" fill="rgb(206,151,17)" fg:x="366" fg:w="2"/><text x="29.6712%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.5016%" y="581" width="0.0804%" height="15" fill="rgb(213,215,10)" fg:x="367" fg:w="1"/><text x="29.7516%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5016%" y="565" width="0.0804%" height="15" fill="rgb(215,220,44)" fg:x="367" fg:w="1"/><text x="29.7516%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.5016%" y="549" width="0.0804%" height="15" fill="rgb(245,205,37)" fg:x="367" fg:w="1"/><text x="29.7516%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5016%" y="533" width="0.0804%" height="15" fill="rgb(245,130,43)" fg:x="367" fg:w="1"/><text x="29.7516%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.5016%" y="517" width="0.0804%" height="15" fill="rgb(231,227,38)" fg:x="367" fg:w="1"/><text x="29.7516%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5016%" y="501" width="0.0804%" height="15" fill="rgb(233,185,4)" fg:x="367" fg:w="1"/><text x="29.7516%" y="511.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="29.5016%" y="485" width="0.0804%" height="15" fill="rgb(224,154,43)" fg:x="367" fg:w="1"/><text x="29.7516%" y="495.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="29.1801%" y="645" width="0.4823%" height="15" fill="rgb(235,156,15)" fg:x="363" fg:w="6"/><text x="29.4301%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="29.4212%" y="629" width="0.2412%" height="15" fill="rgb(211,55,43)" fg:x="366" fg:w="3"/><text x="29.6712%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="29.5820%" y="613" width="0.0804%" height="15" fill="rgb(247,149,40)" fg:x="368" fg:w="1"/><text x="29.8320%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.5820%" y="597" width="0.0804%" height="15" fill="rgb(232,171,16)" fg:x="368" fg:w="1"/><text x="29.8320%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.5820%" y="581" width="0.0804%" height="15" fill="rgb(215,117,49)" fg:x="368" fg:w="1"/><text x="29.8320%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="29.1801%" y="677" width="0.5627%" height="15" fill="rgb(246,194,11)" fg:x="363" fg:w="7"/><text x="29.4301%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="29.1801%" y="661" width="0.5627%" height="15" fill="rgb(242,101,44)" fg:x="363" fg:w="7"/><text x="29.4301%" y="671.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="29.6624%" y="645" width="0.0804%" height="15" fill="rgb(226,174,6)" fg:x="369" fg:w="1"/><text x="29.9124%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.6624%" y="629" width="0.0804%" height="15" fill="rgb(213,150,20)" fg:x="369" fg:w="1"/><text x="29.9124%" y="639.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (2 samples, 0.16%)</title><rect x="29.8232%" y="661" width="0.1608%" height="15" fill="rgb(222,124,42)" fg:x="371" fg:w="2"/><text x="30.0732%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="29.8232%" y="645" width="0.1608%" height="15" fill="rgb(250,19,47)" fg:x="371" fg:w="2"/><text x="30.0732%" y="655.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="29.8232%" y="629" width="0.1608%" height="15" fill="rgb(241,217,19)" fg:x="371" fg:w="2"/><text x="30.0732%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.9035%" y="613" width="0.0804%" height="15" fill="rgb(207,210,34)" fg:x="372" fg:w="1"/><text x="30.1535%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.9035%" y="597" width="0.0804%" height="15" fill="rgb(244,45,4)" fg:x="372" fg:w="1"/><text x="30.1535%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.9035%" y="581" width="0.0804%" height="15" fill="rgb(252,134,50)" fg:x="372" fg:w="1"/><text x="30.1535%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.9035%" y="565" width="0.0804%" height="15" fill="rgb(238,74,2)" fg:x="372" fg:w="1"/><text x="30.1535%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.9035%" y="549" width="0.0804%" height="15" fill="rgb(226,58,46)" fg:x="372" fg:w="1"/><text x="30.1535%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="29.9035%" y="533" width="0.0804%" height="15" fill="rgb(232,83,35)" fg:x="372" fg:w="1"/><text x="30.1535%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="29.9035%" y="517" width="0.0804%" height="15" fill="rgb(212,148,47)" fg:x="372" fg:w="1"/><text x="30.1535%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="29.9035%" y="501" width="0.0804%" height="15" fill="rgb(235,29,1)" fg:x="372" fg:w="1"/><text x="30.1535%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="29.9035%" y="485" width="0.0804%" height="15" fill="rgb(247,55,37)" fg:x="372" fg:w="1"/><text x="30.1535%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="29.9035%" y="469" width="0.0804%" height="15" fill="rgb(222,48,3)" fg:x="372" fg:w="1"/><text x="30.1535%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="29.7428%" y="677" width="0.3215%" height="15" fill="rgb(234,21,33)" fg:x="370" fg:w="4"/><text x="29.9928%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="29.9839%" y="661" width="0.0804%" height="15" fill="rgb(247,178,53)" fg:x="373" fg:w="1"/><text x="30.2339%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="29.9839%" y="645" width="0.0804%" height="15" fill="rgb(225,75,7)" fg:x="373" fg:w="1"/><text x="30.2339%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.9839%" y="629" width="0.0804%" height="15" fill="rgb(219,199,7)" fg:x="373" fg:w="1"/><text x="30.2339%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.9839%" y="613" width="0.0804%" height="15" fill="rgb(209,93,42)" fg:x="373" fg:w="1"/><text x="30.2339%" y="623.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (289 samples, 23.23%)</title><rect x="6.9132%" y="725" width="23.2315%" height="15" fill="rgb(240,175,17)" fg:x="86" fg:w="289"/><text x="7.1632%" y="735.50">&lt;tests::HoldingKeyInVessel as tests::..</text></g><g><title>plugins_core::build::BuildSurroundings::make (13 samples, 1.05%)</title><rect x="29.0997%" y="709" width="1.0450%" height="15" fill="rgb(232,106,7)" fg:x="362" fg:w="13"/><text x="29.3497%" y="719.50"></text></g><g><title>plugins_core::build::QuickThing::make (13 samples, 1.05%)</title><rect x="29.0997%" y="693" width="1.0450%" height="15" fill="rgb(242,106,43)" fg:x="362" fg:w="13"/><text x="29.3497%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="30.0643%" y="677" width="0.0804%" height="15" fill="rgb(242,61,37)" fg:x="374" fg:w="1"/><text x="30.3143%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="30.0643%" y="661" width="0.0804%" height="15" fill="rgb(205,72,10)" fg:x="374" fg:w="1"/><text x="30.3143%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="30.0643%" y="645" width="0.0804%" height="15" fill="rgb(214,184,36)" fg:x="374" fg:w="1"/><text x="30.3143%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.0643%" y="629" width="0.0804%" height="15" fill="rgb(206,107,18)" fg:x="374" fg:w="1"/><text x="30.3143%" y="639.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0643%" y="613" width="0.0804%" height="15" fill="rgb(210,75,5)" fg:x="374" fg:w="1"/><text x="30.3143%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.0643%" y="597" width="0.0804%" height="15" fill="rgb(205,3,19)" fg:x="374" fg:w="1"/><text x="30.3143%" y="607.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="30.0643%" y="581" width="0.0804%" height="15" fill="rgb(207,181,42)" fg:x="374" fg:w="1"/><text x="30.3143%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.0643%" y="565" width="0.0804%" height="15" fill="rgb(229,179,43)" fg:x="374" fg:w="1"/><text x="30.3143%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="30.0643%" y="549" width="0.0804%" height="15" fill="rgb(246,95,30)" fg:x="374" fg:w="1"/><text x="30.3143%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="30.0643%" y="533" width="0.0804%" height="15" fill="rgb(234,144,45)" fg:x="374" fg:w="1"/><text x="30.3143%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="30.0643%" y="517" width="0.0804%" height="15" fill="rgb(250,54,25)" fg:x="374" fg:w="1"/><text x="30.3143%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0643%" y="501" width="0.0804%" height="15" fill="rgb(215,195,40)" fg:x="374" fg:w="1"/><text x="30.3143%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1447%" y="709" width="0.0804%" height="15" fill="rgb(233,188,42)" fg:x="375" fg:w="1"/><text x="30.3947%" y="719.50"></text></g><g><title>engine::session::Session::flush_futures (1 samples, 0.08%)</title><rect x="30.2251%" y="709" width="0.0804%" height="15" fill="rgb(247,227,35)" fg:x="376" fg:w="1"/><text x="30.4751%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3859%" y="677" width="0.0804%" height="15" fill="rgb(249,124,27)" fg:x="378" fg:w="1"/><text x="30.6359%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.4662%" y="677" width="0.0804%" height="15" fill="rgb(219,207,25)" fg:x="379" fg:w="1"/><text x="30.7162%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.4662%" y="661" width="0.0804%" height="15" fill="rgb(241,216,47)" fg:x="379" fg:w="1"/><text x="30.7162%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.4662%" y="645" width="0.0804%" height="15" fill="rgb(233,82,50)" fg:x="379" fg:w="1"/><text x="30.7162%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="30.3859%" y="693" width="0.2412%" height="15" fill="rgb(232,63,2)" fg:x="378" fg:w="3"/><text x="30.6359%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="30.5466%" y="677" width="0.0804%" height="15" fill="rgb(236,184,28)" fg:x="380" fg:w="1"/><text x="30.7966%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.5466%" y="661" width="0.0804%" height="15" fill="rgb(254,63,27)" fg:x="380" fg:w="1"/><text x="30.7966%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.6270%" y="597" width="0.0804%" height="15" fill="rgb(253,106,28)" fg:x="381" fg:w="1"/><text x="30.8770%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.6270%" y="581" width="0.0804%" height="15" fill="rgb(225,141,39)" fg:x="381" fg:w="1"/><text x="30.8770%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.6270%" y="565" width="0.0804%" height="15" fill="rgb(222,157,20)" fg:x="381" fg:w="1"/><text x="30.8770%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.6270%" y="549" width="0.0804%" height="15" fill="rgb(210,190,9)" fg:x="381" fg:w="1"/><text x="30.8770%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.6270%" y="533" width="0.0804%" height="15" fill="rgb(242,167,7)" fg:x="381" fg:w="1"/><text x="30.8770%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.6270%" y="517" width="0.0804%" height="15" fill="rgb(227,82,41)" fg:x="381" fg:w="1"/><text x="30.8770%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6270%" y="677" width="0.1608%" height="15" fill="rgb(222,131,13)" fg:x="381" fg:w="2"/><text x="30.8770%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6270%" y="661" width="0.1608%" height="15" fill="rgb(221,98,26)" fg:x="381" fg:w="2"/><text x="30.8770%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="30.6270%" y="645" width="0.1608%" height="15" fill="rgb(251,63,52)" fg:x="381" fg:w="2"/><text x="30.8770%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="30.6270%" y="629" width="0.1608%" height="15" fill="rgb(246,25,43)" fg:x="381" fg:w="2"/><text x="30.8770%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="30.6270%" y="613" width="0.1608%" height="15" fill="rgb(247,167,15)" fg:x="381" fg:w="2"/><text x="30.8770%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="30.7074%" y="597" width="0.0804%" height="15" fill="rgb(240,104,42)" fg:x="382" fg:w="1"/><text x="30.9574%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.7074%" y="581" width="0.0804%" height="15" fill="rgb(224,54,6)" fg:x="382" fg:w="1"/><text x="30.9574%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="30.6270%" y="693" width="0.2412%" height="15" fill="rgb(244,108,35)" fg:x="381" fg:w="3"/><text x="30.8770%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7878%" y="677" width="0.0804%" height="15" fill="rgb(216,154,2)" fg:x="383" fg:w="1"/><text x="31.0378%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.8682%" y="693" width="0.0804%" height="15" fill="rgb(222,8,47)" fg:x="384" fg:w="1"/><text x="31.1182%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="30.8682%" y="677" width="0.0804%" height="15" fill="rgb(252,93,1)" fg:x="384" fg:w="1"/><text x="31.1182%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="30.8682%" y="661" width="0.0804%" height="15" fill="rgb(223,226,51)" fg:x="384" fg:w="1"/><text x="31.1182%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="31.0289%" y="645" width="0.0804%" height="15" fill="rgb(206,147,9)" fg:x="386" fg:w="1"/><text x="31.2789%" y="655.50"></text></g><g><title>engine::identifiers::model::get_gid (3 samples, 0.24%)</title><rect x="30.9486%" y="693" width="0.2412%" height="15" fill="rgb(248,180,41)" fg:x="385" fg:w="3"/><text x="31.1986%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="30.9486%" y="677" width="0.2412%" height="15" fill="rgb(209,47,50)" fg:x="385" fg:w="3"/><text x="31.1986%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="30.9486%" y="661" width="0.2412%" height="15" fill="rgb(243,65,31)" fg:x="385" fg:w="3"/><text x="31.1986%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.1093%" y="645" width="0.0804%" height="15" fill="rgb(228,128,1)" fg:x="387" fg:w="1"/><text x="31.3593%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.1093%" y="629" width="0.0804%" height="15" fill="rgb(231,192,16)" fg:x="387" fg:w="1"/><text x="31.3593%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1897%" y="661" width="0.0804%" height="15" fill="rgb(224,26,40)" fg:x="388" fg:w="1"/><text x="31.4397%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1897%" y="645" width="0.0804%" height="15" fill="rgb(214,192,17)" fg:x="388" fg:w="1"/><text x="31.4397%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.1897%" y="629" width="0.0804%" height="15" fill="rgb(225,147,18)" fg:x="388" fg:w="1"/><text x="31.4397%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.1897%" y="613" width="0.0804%" height="15" fill="rgb(205,35,11)" fg:x="388" fg:w="1"/><text x="31.4397%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.1897%" y="597" width="0.0804%" height="15" fill="rgb(242,40,42)" fg:x="388" fg:w="1"/><text x="31.4397%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="31.1897%" y="581" width="0.0804%" height="15" fill="rgb(250,170,13)" fg:x="388" fg:w="1"/><text x="31.4397%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.1897%" y="565" width="0.0804%" height="15" fill="rgb(240,161,28)" fg:x="388" fg:w="1"/><text x="31.4397%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="31.2701%" y="645" width="0.1608%" height="15" fill="rgb(245,179,12)" fg:x="389" fg:w="2"/><text x="31.5201%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="31.2701%" y="629" width="0.1608%" height="15" fill="rgb(250,92,32)" fg:x="389" fg:w="2"/><text x="31.5201%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="31.2701%" y="613" width="0.1608%" height="15" fill="rgb(233,10,40)" fg:x="389" fg:w="2"/><text x="31.5201%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="31.2701%" y="597" width="0.1608%" height="15" fill="rgb(217,98,1)" fg:x="389" fg:w="2"/><text x="31.5201%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="31.2701%" y="581" width="0.1608%" height="15" fill="rgb(238,202,7)" fg:x="389" fg:w="2"/><text x="31.5201%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="31.2701%" y="565" width="0.1608%" height="15" fill="rgb(222,91,3)" fg:x="389" fg:w="2"/><text x="31.5201%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="31.2701%" y="549" width="0.1608%" height="15" fill="rgb(211,170,49)" fg:x="389" fg:w="2"/><text x="31.5201%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="31.2701%" y="533" width="0.1608%" height="15" fill="rgb(253,139,18)" fg:x="389" fg:w="2"/><text x="31.5201%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="31.5113%" y="629" width="0.1608%" height="15" fill="rgb(222,4,43)" fg:x="392" fg:w="2"/><text x="31.7613%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="31.6720%" y="629" width="0.4019%" height="15" fill="rgb(207,205,12)" fg:x="394" fg:w="5"/><text x="31.9220%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="31.7524%" y="613" width="0.3215%" height="15" fill="rgb(216,159,46)" fg:x="395" fg:w="4"/><text x="32.0024%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="31.8328%" y="597" width="0.2412%" height="15" fill="rgb(236,115,1)" fg:x="396" fg:w="3"/><text x="32.0828%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="31.8328%" y="581" width="0.2412%" height="15" fill="rgb(251,35,33)" fg:x="396" fg:w="3"/><text x="32.0828%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.9936%" y="565" width="0.0804%" height="15" fill="rgb(248,62,51)" fg:x="398" fg:w="1"/><text x="32.2436%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.9936%" y="549" width="0.0804%" height="15" fill="rgb(254,180,19)" fg:x="398" fg:w="1"/><text x="32.2436%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.9936%" y="533" width="0.0804%" height="15" fill="rgb(217,100,32)" fg:x="398" fg:w="1"/><text x="32.2436%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="32.0740%" y="613" width="0.1608%" height="15" fill="rgb(224,71,22)" fg:x="399" fg:w="2"/><text x="32.3240%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="32.0740%" y="597" width="0.1608%" height="15" fill="rgb(251,185,33)" fg:x="399" fg:w="2"/><text x="32.3240%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="32.1543%" y="581" width="0.0804%" height="15" fill="rgb(209,75,48)" fg:x="400" fg:w="1"/><text x="32.4043%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.1543%" y="565" width="0.0804%" height="15" fill="rgb(253,190,16)" fg:x="400" fg:w="1"/><text x="32.4043%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="32.2347%" y="613" width="0.0804%" height="15" fill="rgb(226,140,1)" fg:x="401" fg:w="1"/><text x="32.4847%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="32.3151%" y="597" width="0.0804%" height="15" fill="rgb(206,75,30)" fg:x="402" fg:w="1"/><text x="32.5651%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.3151%" y="581" width="0.0804%" height="15" fill="rgb(231,208,37)" fg:x="402" fg:w="1"/><text x="32.5651%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.3151%" y="565" width="0.0804%" height="15" fill="rgb(238,136,40)" fg:x="402" fg:w="1"/><text x="32.5651%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="32.3955%" y="581" width="0.0804%" height="15" fill="rgb(247,137,17)" fg:x="403" fg:w="1"/><text x="32.6455%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="32.4759%" y="565" width="0.1608%" height="15" fill="rgb(240,60,40)" fg:x="404" fg:w="2"/><text x="32.7259%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.5563%" y="549" width="0.0804%" height="15" fill="rgb(236,68,50)" fg:x="405" fg:w="1"/><text x="32.8063%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="32.6367%" y="565" width="0.0804%" height="15" fill="rgb(230,42,12)" fg:x="406" fg:w="1"/><text x="32.8867%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="32.6367%" y="549" width="0.0804%" height="15" fill="rgb(219,16,16)" fg:x="406" fg:w="1"/><text x="32.8867%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.6367%" y="533" width="0.0804%" height="15" fill="rgb(220,38,35)" fg:x="406" fg:w="1"/><text x="32.8867%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.6367%" y="517" width="0.0804%" height="15" fill="rgb(228,33,1)" fg:x="406" fg:w="1"/><text x="32.8867%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.6367%" y="501" width="0.0804%" height="15" fill="rgb(241,46,31)" fg:x="406" fg:w="1"/><text x="32.8867%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="32.4759%" y="581" width="0.4019%" height="15" fill="rgb(232,58,20)" fg:x="404" fg:w="5"/><text x="32.7259%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="32.7170%" y="565" width="0.1608%" height="15" fill="rgb(206,228,53)" fg:x="407" fg:w="2"/><text x="32.9670%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.7974%" y="549" width="0.0804%" height="15" fill="rgb(206,88,33)" fg:x="408" fg:w="1"/><text x="33.0474%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.8778%" y="549" width="0.0804%" height="15" fill="rgb(238,69,7)" fg:x="409" fg:w="1"/><text x="33.1278%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="32.3955%" y="597" width="0.6431%" height="15" fill="rgb(250,21,46)" fg:x="403" fg:w="8"/><text x="32.6455%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="32.8778%" y="581" width="0.1608%" height="15" fill="rgb(215,212,21)" fg:x="409" fg:w="2"/><text x="33.1278%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="32.8778%" y="565" width="0.1608%" height="15" fill="rgb(211,35,12)" fg:x="409" fg:w="2"/><text x="33.1278%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="32.9582%" y="549" width="0.0804%" height="15" fill="rgb(231,184,16)" fg:x="410" fg:w="1"/><text x="33.2082%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="32.3151%" y="613" width="0.8039%" height="15" fill="rgb(242,140,15)" fg:x="402" fg:w="10"/><text x="32.5651%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.0386%" y="597" width="0.0804%" height="15" fill="rgb(220,37,14)" fg:x="411" fg:w="1"/><text x="33.2886%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="32.0740%" y="629" width="1.1254%" height="15" fill="rgb(223,146,22)" fg:x="399" fg:w="14"/><text x="32.3240%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.1190%" y="613" width="0.0804%" height="15" fill="rgb(216,132,15)" fg:x="412" fg:w="1"/><text x="33.3690%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="33.1190%" y="597" width="0.0804%" height="15" fill="rgb(248,83,5)" fg:x="412" fg:w="1"/><text x="33.3690%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.1190%" y="581" width="0.0804%" height="15" fill="rgb(231,206,48)" fg:x="412" fg:w="1"/><text x="33.3690%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (30 samples, 2.41%)</title><rect x="31.2701%" y="661" width="2.4116%" height="15" fill="rgb(253,185,37)" fg:x="389" fg:w="30"/><text x="31.5201%" y="671.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.25%)</title><rect x="31.4309%" y="645" width="2.2508%" height="15" fill="rgb(208,21,44)" fg:x="391" fg:w="28"/><text x="31.6809%" y="655.50">s..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="33.1994%" y="629" width="0.4823%" height="15" fill="rgb(236,125,4)" fg:x="413" fg:w="6"/><text x="33.4494%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="33.2797%" y="613" width="0.4019%" height="15" fill="rgb(226,134,25)" fg:x="414" fg:w="5"/><text x="33.5297%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="33.2797%" y="597" width="0.4019%" height="15" fill="rgb(250,201,12)" fg:x="414" fg:w="5"/><text x="33.5297%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="33.4405%" y="581" width="0.2412%" height="15" fill="rgb(225,92,18)" fg:x="416" fg:w="3"/><text x="33.6905%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="33.4405%" y="565" width="0.2412%" height="15" fill="rgb(227,35,22)" fg:x="416" fg:w="3"/><text x="33.6905%" y="575.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="33.4405%" y="549" width="0.2412%" height="15" fill="rgb(214,180,52)" fg:x="416" fg:w="3"/><text x="33.6905%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.6817%" y="629" width="0.1608%" height="15" fill="rgb(233,55,38)" fg:x="419" fg:w="2"/><text x="33.9317%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.0032%" y="613" width="0.0804%" height="15" fill="rgb(249,171,43)" fg:x="423" fg:w="1"/><text x="34.2532%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.0836%" y="613" width="0.0804%" height="15" fill="rgb(239,87,2)" fg:x="424" fg:w="1"/><text x="34.3336%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.0836%" y="597" width="0.0804%" height="15" fill="rgb(248,141,5)" fg:x="424" fg:w="1"/><text x="34.3336%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="34.2444%" y="581" width="0.0804%" height="15" fill="rgb(238,33,42)" fg:x="426" fg:w="1"/><text x="34.4944%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.2444%" y="565" width="0.0804%" height="15" fill="rgb(231,57,19)" fg:x="426" fg:w="1"/><text x="34.4944%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.2444%" y="549" width="0.0804%" height="15" fill="rgb(214,78,53)" fg:x="426" fg:w="1"/><text x="34.4944%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="33.6817%" y="661" width="0.8842%" height="15" fill="rgb(206,132,29)" fg:x="419" fg:w="11"/><text x="33.9317%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="33.6817%" y="645" width="0.8842%" height="15" fill="rgb(248,174,31)" fg:x="419" fg:w="11"/><text x="33.9317%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="33.8424%" y="629" width="0.7235%" height="15" fill="rgb(221,87,13)" fg:x="421" fg:w="9"/><text x="34.0924%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="34.1640%" y="613" width="0.4019%" height="15" fill="rgb(223,197,17)" fg:x="425" fg:w="5"/><text x="34.4140%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="34.1640%" y="597" width="0.4019%" height="15" fill="rgb(220,144,50)" fg:x="425" fg:w="5"/><text x="34.4140%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="34.3248%" y="581" width="0.2412%" height="15" fill="rgb(244,201,11)" fg:x="427" fg:w="3"/><text x="34.5748%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="34.3248%" y="565" width="0.2412%" height="15" fill="rgb(249,81,34)" fg:x="427" fg:w="3"/><text x="34.5748%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="34.3248%" y="549" width="0.2412%" height="15" fill="rgb(205,161,12)" fg:x="427" fg:w="3"/><text x="34.5748%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.4855%" y="533" width="0.0804%" height="15" fill="rgb(252,139,50)" fg:x="429" fg:w="1"/><text x="34.7355%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="34.5659%" y="661" width="0.0804%" height="15" fill="rgb(205,169,14)" fg:x="430" fg:w="1"/><text x="34.8159%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.6463%" y="629" width="0.0804%" height="15" fill="rgb(248,198,33)" fg:x="431" fg:w="1"/><text x="34.8963%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="34.8071%" y="581" width="0.4019%" height="15" fill="rgb(236,23,21)" fg:x="433" fg:w="5"/><text x="35.0571%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="34.9678%" y="565" width="0.2412%" height="15" fill="rgb(231,13,38)" fg:x="435" fg:w="3"/><text x="35.2178%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="35.3698%" y="565" width="0.2412%" height="15" fill="rgb(239,139,21)" fg:x="440" fg:w="3"/><text x="35.6198%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.6109%" y="565" width="0.0804%" height="15" fill="rgb(222,164,45)" fg:x="443" fg:w="1"/><text x="35.8609%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.6913%" y="549" width="0.0804%" height="15" fill="rgb(230,52,27)" fg:x="444" fg:w="1"/><text x="35.9413%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.7717%" y="533" width="0.0804%" height="15" fill="rgb(227,143,42)" fg:x="445" fg:w="1"/><text x="36.0217%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="35.9325%" y="517" width="0.1608%" height="15" fill="rgb(249,127,1)" fg:x="447" fg:w="2"/><text x="36.1825%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.45%)</title><rect x="34.7267%" y="629" width="1.4469%" height="15" fill="rgb(243,107,26)" fg:x="432" fg:w="18"/><text x="34.9767%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.45%)</title><rect x="34.7267%" y="613" width="1.4469%" height="15" fill="rgb(225,7,45)" fg:x="432" fg:w="18"/><text x="34.9767%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.45%)</title><rect x="34.7267%" y="597" width="1.4469%" height="15" fill="rgb(241,88,38)" fg:x="432" fg:w="18"/><text x="34.9767%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="35.2090%" y="581" width="0.9646%" height="15" fill="rgb(226,121,9)" fg:x="438" fg:w="12"/><text x="35.4590%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="35.6913%" y="565" width="0.4823%" height="15" fill="rgb(253,60,29)" fg:x="444" fg:w="6"/><text x="35.9413%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="35.7717%" y="549" width="0.4019%" height="15" fill="rgb(244,181,39)" fg:x="445" fg:w="5"/><text x="36.0217%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="35.8521%" y="533" width="0.3215%" height="15" fill="rgb(252,203,31)" fg:x="446" fg:w="4"/><text x="36.1021%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.0932%" y="517" width="0.0804%" height="15" fill="rgb(224,120,8)" fg:x="449" fg:w="1"/><text x="36.3432%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="36.3344%" y="565" width="0.0804%" height="15" fill="rgb(205,171,54)" fg:x="452" fg:w="1"/><text x="36.5844%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="36.3344%" y="549" width="0.0804%" height="15" fill="rgb(235,89,11)" fg:x="452" fg:w="1"/><text x="36.5844%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="36.4148%" y="549" width="0.1608%" height="15" fill="rgb(212,180,28)" fg:x="453" fg:w="2"/><text x="36.6648%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="36.4148%" y="533" width="0.1608%" height="15" fill="rgb(247,84,49)" fg:x="453" fg:w="2"/><text x="36.6648%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="36.4952%" y="517" width="0.0804%" height="15" fill="rgb(236,187,52)" fg:x="454" fg:w="1"/><text x="36.7452%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (25 samples, 2.01%)</title><rect x="34.6463%" y="645" width="2.0096%" height="15" fill="rgb(227,24,15)" fg:x="431" fg:w="25"/><text x="34.8963%" y="655.50">&lt;..</text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="36.1736%" y="629" width="0.4823%" height="15" fill="rgb(227,211,13)" fg:x="450" fg:w="6"/><text x="36.4236%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="36.1736%" y="613" width="0.4823%" height="15" fill="rgb(245,52,14)" fg:x="450" fg:w="6"/><text x="36.4236%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="36.2540%" y="597" width="0.4019%" height="15" fill="rgb(225,185,13)" fg:x="451" fg:w="5"/><text x="36.5040%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="36.3344%" y="581" width="0.3215%" height="15" fill="rgb(217,160,29)" fg:x="452" fg:w="4"/><text x="36.5844%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="36.4148%" y="565" width="0.2412%" height="15" fill="rgb(216,115,53)" fg:x="453" fg:w="3"/><text x="36.6648%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.5756%" y="549" width="0.0804%" height="15" fill="rgb(236,99,5)" fg:x="455" fg:w="1"/><text x="36.8256%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (1 samples, 0.08%)</title><rect x="36.9775%" y="613" width="0.0804%" height="15" fill="rgb(222,60,38)" fg:x="460" fg:w="1"/><text x="37.2275%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="37.0579%" y="613" width="0.4823%" height="15" fill="rgb(212,82,22)" fg:x="461" fg:w="6"/><text x="37.3079%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.4598%" y="597" width="0.0804%" height="15" fill="rgb(214,48,28)" fg:x="466" fg:w="1"/><text x="37.7098%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.4598%" y="581" width="0.0804%" height="15" fill="rgb(245,196,50)" fg:x="466" fg:w="1"/><text x="37.7098%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="37.5402%" y="613" width="0.0804%" height="15" fill="rgb(225,159,46)" fg:x="467" fg:w="1"/><text x="37.7902%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="37.6206%" y="613" width="0.2412%" height="15" fill="rgb(207,195,48)" fg:x="468" fg:w="3"/><text x="37.8706%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="37.6206%" y="597" width="0.2412%" height="15" fill="rgb(240,73,3)" fg:x="468" fg:w="3"/><text x="37.8706%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7814%" y="581" width="0.0804%" height="15" fill="rgb(245,57,23)" fg:x="470" fg:w="1"/><text x="38.0314%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.0225%" y="565" width="0.0804%" height="15" fill="rgb(240,75,18)" fg:x="473" fg:w="1"/><text x="38.2725%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="38.2637%" y="533" width="0.0804%" height="15" fill="rgb(238,168,12)" fg:x="476" fg:w="1"/><text x="38.5137%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.2637%" y="517" width="0.0804%" height="15" fill="rgb(226,20,40)" fg:x="476" fg:w="1"/><text x="38.5137%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.2637%" y="501" width="0.0804%" height="15" fill="rgb(224,130,35)" fg:x="476" fg:w="1"/><text x="38.5137%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2637%" y="485" width="0.0804%" height="15" fill="rgb(225,63,41)" fg:x="476" fg:w="1"/><text x="38.5137%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="38.1029%" y="565" width="0.3215%" height="15" fill="rgb(219,3,3)" fg:x="474" fg:w="4"/><text x="38.3529%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="38.1029%" y="549" width="0.3215%" height="15" fill="rgb(218,157,4)" fg:x="474" fg:w="4"/><text x="38.3529%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3441%" y="533" width="0.0804%" height="15" fill="rgb(232,76,36)" fg:x="477" fg:w="1"/><text x="38.5941%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.5852%" y="533" width="0.0804%" height="15" fill="rgb(247,36,0)" fg:x="480" fg:w="1"/><text x="38.8352%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.5852%" y="517" width="0.0804%" height="15" fill="rgb(205,2,34)" fg:x="480" fg:w="1"/><text x="38.8352%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.9871%" y="501" width="0.0804%" height="15" fill="rgb(239,136,13)" fg:x="485" fg:w="1"/><text x="39.2371%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.3087%" y="469" width="0.0804%" height="15" fill="rgb(253,122,12)" fg:x="489" fg:w="1"/><text x="39.5587%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.3087%" y="453" width="0.0804%" height="15" fill="rgb(222,174,7)" fg:x="489" fg:w="1"/><text x="39.5587%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="39.4695%" y="453" width="0.0804%" height="15" fill="rgb(208,191,42)" fg:x="491" fg:w="1"/><text x="39.7195%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="39.2283%" y="485" width="0.6431%" height="15" fill="rgb(237,212,15)" fg:x="488" fg:w="8"/><text x="39.4783%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="39.3891%" y="469" width="0.4823%" height="15" fill="rgb(215,65,20)" fg:x="490" fg:w="6"/><text x="39.6391%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="39.5498%" y="453" width="0.3215%" height="15" fill="rgb(232,103,11)" fg:x="492" fg:w="4"/><text x="39.7998%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.7106%" y="437" width="0.1608%" height="15" fill="rgb(235,148,18)" fg:x="494" fg:w="2"/><text x="39.9606%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.7106%" y="421" width="0.1608%" height="15" fill="rgb(240,173,7)" fg:x="494" fg:w="2"/><text x="39.9606%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.7106%" y="405" width="0.1608%" height="15" fill="rgb(228,182,25)" fg:x="494" fg:w="2"/><text x="39.9606%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.05%)</title><rect x="38.9068%" y="517" width="1.0450%" height="15" fill="rgb(247,3,52)" fg:x="484" fg:w="13"/><text x="39.1568%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="39.0675%" y="501" width="0.8842%" height="15" fill="rgb(226,155,8)" fg:x="486" fg:w="11"/><text x="39.3175%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="39.8714%" y="485" width="0.0804%" height="15" fill="rgb(243,195,38)" fg:x="496" fg:w="1"/><text x="40.1214%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="39.8714%" y="469" width="0.0804%" height="15" fill="rgb(254,181,33)" fg:x="496" fg:w="1"/><text x="40.1214%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9518%" y="517" width="0.0804%" height="15" fill="rgb(232,98,23)" fg:x="497" fg:w="1"/><text x="40.2018%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (28 samples, 2.25%)</title><rect x="37.9421%" y="581" width="2.2508%" height="15" fill="rgb(205,23,10)" fg:x="472" fg:w="28"/><text x="38.1921%" y="591.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 1.77%)</title><rect x="38.4244%" y="565" width="1.7685%" height="15" fill="rgb(212,124,38)" fg:x="478" fg:w="22"/><text x="38.6744%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.61%)</title><rect x="38.5852%" y="549" width="1.6077%" height="15" fill="rgb(228,207,2)" fg:x="480" fg:w="20"/><text x="38.8352%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.53%)</title><rect x="38.6656%" y="533" width="1.5273%" height="15" fill="rgb(215,120,22)" fg:x="481" fg:w="19"/><text x="38.9156%" y="543.50"></text></g><g><title>__rdl_alloc (2 samples, 0.16%)</title><rect x="40.0322%" y="517" width="0.1608%" height="15" fill="rgb(251,172,33)" fg:x="498" fg:w="2"/><text x="40.2822%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.16%)</title><rect x="40.0322%" y="501" width="0.1608%" height="15" fill="rgb(250,83,2)" fg:x="498" fg:w="2"/><text x="40.2822%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (31 samples, 2.49%)</title><rect x="37.8617%" y="597" width="2.4920%" height="15" fill="rgb(210,132,53)" fg:x="471" fg:w="31"/><text x="38.1117%" y="607.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="40.1929%" y="581" width="0.1608%" height="15" fill="rgb(221,208,36)" fg:x="500" fg:w="2"/><text x="40.4429%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (32 samples, 2.57%)</title><rect x="37.8617%" y="613" width="2.5723%" height="15" fill="rgb(205,192,46)" fg:x="471" fg:w="32"/><text x="38.1117%" y="623.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.3537%" y="597" width="0.0804%" height="15" fill="rgb(223,163,14)" fg:x="502" fg:w="1"/><text x="40.6037%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (49 samples, 3.94%)</title><rect x="36.6559%" y="645" width="3.9389%" height="15" fill="rgb(218,41,28)" fg:x="456" fg:w="49"/><text x="36.9059%" y="655.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (49 samples, 3.94%)</title><rect x="36.6559%" y="629" width="3.9389%" height="15" fill="rgb(235,104,10)" fg:x="456" fg:w="49"/><text x="36.9059%" y="639.50">&lt;ser..</text></g><g><title>std::alloc::default_alloc_error_hook (2 samples, 0.16%)</title><rect x="40.4341%" y="613" width="0.1608%" height="15" fill="rgb(246,17,4)" fg:x="503" fg:w="2"/><text x="40.6841%" y="623.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.16%)</title><rect x="40.4341%" y="597" width="0.1608%" height="15" fill="rgb(240,7,16)" fg:x="503" fg:w="2"/><text x="40.6841%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.3183%" y="469" width="0.0804%" height="15" fill="rgb(213,160,23)" fg:x="514" fg:w="1"/><text x="41.5683%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="41.3183%" y="453" width="0.0804%" height="15" fill="rgb(251,179,49)" fg:x="514" fg:w="1"/><text x="41.5683%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="41.3183%" y="501" width="0.2412%" height="15" fill="rgb(247,198,10)" fg:x="514" fg:w="3"/><text x="41.5683%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="41.3183%" y="485" width="0.2412%" height="15" fill="rgb(220,65,29)" fg:x="514" fg:w="3"/><text x="41.5683%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.3987%" y="469" width="0.1608%" height="15" fill="rgb(237,171,28)" fg:x="515" fg:w="2"/><text x="41.6487%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4791%" y="453" width="0.0804%" height="15" fill="rgb(228,44,26)" fg:x="516" fg:w="1"/><text x="41.7291%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.4791%" y="437" width="0.0804%" height="15" fill="rgb(216,210,27)" fg:x="516" fg:w="1"/><text x="41.7291%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="41.6399%" y="405" width="0.1608%" height="15" fill="rgb(252,10,17)" fg:x="518" fg:w="2"/><text x="41.8899%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.7203%" y="389" width="0.0804%" height="15" fill="rgb(214,172,30)" fg:x="519" fg:w="1"/><text x="41.9703%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.7203%" y="373" width="0.0804%" height="15" fill="rgb(253,130,48)" fg:x="519" fg:w="1"/><text x="41.9703%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.7203%" y="357" width="0.0804%" height="15" fill="rgb(226,99,43)" fg:x="519" fg:w="1"/><text x="41.9703%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="41.6399%" y="421" width="0.2412%" height="15" fill="rgb(239,111,26)" fg:x="518" fg:w="3"/><text x="41.8899%" y="431.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="41.8006%" y="405" width="0.0804%" height="15" fill="rgb(240,27,53)" fg:x="520" fg:w="1"/><text x="42.0506%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.8810%" y="421" width="0.0804%" height="15" fill="rgb(254,163,12)" fg:x="521" fg:w="1"/><text x="42.1310%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="41.8810%" y="405" width="0.0804%" height="15" fill="rgb(225,51,48)" fg:x="521" fg:w="1"/><text x="42.1310%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.9614%" y="389" width="0.1608%" height="15" fill="rgb(205,19,32)" fg:x="522" fg:w="2"/><text x="42.2114%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="41.5595%" y="485" width="0.6431%" height="15" fill="rgb(218,119,26)" fg:x="517" fg:w="8"/><text x="41.8095%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="41.5595%" y="469" width="0.6431%" height="15" fill="rgb(231,173,33)" fg:x="517" fg:w="8"/><text x="41.8095%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="41.5595%" y="453" width="0.6431%" height="15" fill="rgb(241,100,29)" fg:x="517" fg:w="8"/><text x="41.8095%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="41.6399%" y="437" width="0.5627%" height="15" fill="rgb(250,194,34)" fg:x="518" fg:w="7"/><text x="41.8899%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.9614%" y="421" width="0.2412%" height="15" fill="rgb(215,23,50)" fg:x="522" fg:w="3"/><text x="42.2114%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.9614%" y="405" width="0.2412%" height="15" fill="rgb(206,49,37)" fg:x="522" fg:w="3"/><text x="42.2114%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.1222%" y="389" width="0.0804%" height="15" fill="rgb(247,39,21)" fg:x="524" fg:w="1"/><text x="42.3722%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.13%)</title><rect x="41.2379%" y="517" width="1.1254%" height="15" fill="rgb(209,220,15)" fg:x="513" fg:w="14"/><text x="41.4879%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="41.5595%" y="501" width="0.8039%" height="15" fill="rgb(206,41,33)" fg:x="517" fg:w="10"/><text x="41.8095%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="42.2026%" y="485" width="0.1608%" height="15" fill="rgb(221,225,45)" fg:x="525" fg:w="2"/><text x="42.4526%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="42.2830%" y="469" width="0.0804%" height="15" fill="rgb(216,27,18)" fg:x="526" fg:w="1"/><text x="42.5330%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.3633%" y="517" width="0.0804%" height="15" fill="rgb(250,193,34)" fg:x="527" fg:w="1"/><text x="42.6133%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.61%)</title><rect x="40.9164%" y="549" width="1.6077%" height="15" fill="rgb(227,215,20)" fg:x="509" fg:w="20"/><text x="41.1664%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.45%)</title><rect x="41.0772%" y="533" width="1.4469%" height="15" fill="rgb(242,211,27)" fg:x="511" fg:w="18"/><text x="41.3272%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4437%" y="517" width="0.0804%" height="15" fill="rgb(229,190,30)" fg:x="528" fg:w="1"/><text x="42.6937%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4437%" y="501" width="0.0804%" height="15" fill="rgb(253,31,29)" fg:x="528" fg:w="1"/><text x="42.6937%" y="511.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="42.4437%" y="485" width="0.0804%" height="15" fill="rgb(229,177,52)" fg:x="528" fg:w="1"/><text x="42.6937%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.4437%" y="469" width="0.0804%" height="15" fill="rgb(226,88,8)" fg:x="528" fg:w="1"/><text x="42.6937%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (24 samples, 1.93%)</title><rect x="40.7556%" y="581" width="1.9293%" height="15" fill="rgb(214,55,27)" fg:x="507" fg:w="24"/><text x="41.0056%" y="591.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24 samples, 1.93%)</title><rect x="40.7556%" y="565" width="1.9293%" height="15" fill="rgb(233,202,5)" fg:x="507" fg:w="24"/><text x="41.0056%" y="575.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="42.5241%" y="549" width="0.1608%" height="15" fill="rgb(251,49,30)" fg:x="529" fg:w="2"/><text x="42.7741%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="42.6849%" y="581" width="0.1608%" height="15" fill="rgb(235,18,52)" fg:x="531" fg:w="2"/><text x="42.9349%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="42.6849%" y="565" width="0.1608%" height="15" fill="rgb(250,111,51)" fg:x="531" fg:w="2"/><text x="42.9349%" y="575.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (147 samples, 11.82%)</title><rect x="31.1897%" y="693" width="11.8167%" height="15" fill="rgb(218,13,25)" fg:x="388" fg:w="147"/><text x="31.4397%" y="703.50">engine::internal::..</text></g><g><title>engine::session::SavesEntities::check_for_changes (147 samples, 11.82%)</title><rect x="31.1897%" y="677" width="11.8167%" height="15" fill="rgb(248,96,7)" fg:x="388" fg:w="147"/><text x="31.4397%" y="687.50">engine::session::S..</text></g><g><title>kernel::model::any_entity_changes (104 samples, 8.36%)</title><rect x="34.6463%" y="661" width="8.3601%" height="15" fill="rgb(217,31,15)" fg:x="431" fg:w="104"/><text x="34.8963%" y="671.50">kernel::mode..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (30 samples, 2.41%)</title><rect x="40.5949%" y="645" width="2.4116%" height="15" fill="rgb(228,59,49)" fg:x="505" fg:w="30"/><text x="40.8449%" y="655.50">se..</text></g><g><title>serde_json::de::from_trait (30 samples, 2.41%)</title><rect x="40.5949%" y="629" width="2.4116%" height="15" fill="rgb(210,152,38)" fg:x="505" fg:w="30"/><text x="40.8449%" y="639.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (30 samples, 2.41%)</title><rect x="40.5949%" y="613" width="2.4116%" height="15" fill="rgb(206,71,11)" fg:x="505" fg:w="30"/><text x="40.8449%" y="623.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (30 samples, 2.41%)</title><rect x="40.5949%" y="597" width="2.4116%" height="15" fill="rgb(244,199,5)" fg:x="505" fg:w="30"/><text x="40.8449%" y="607.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.8457%" y="581" width="0.1608%" height="15" fill="rgb(253,49,1)" fg:x="533" fg:w="2"/><text x="43.0957%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9260%" y="565" width="0.0804%" height="15" fill="rgb(225,206,40)" fg:x="534" fg:w="1"/><text x="43.1760%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="43.0064%" y="661" width="0.0804%" height="15" fill="rgb(243,116,47)" fg:x="535" fg:w="1"/><text x="43.2564%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="43.0064%" y="645" width="0.0804%" height="15" fill="rgb(219,225,16)" fg:x="535" fg:w="1"/><text x="43.2564%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.0064%" y="629" width="0.0804%" height="15" fill="rgb(233,29,47)" fg:x="535" fg:w="1"/><text x="43.2564%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="43.0064%" y="613" width="0.0804%" height="15" fill="rgb(250,179,18)" fg:x="535" fg:w="1"/><text x="43.2564%" y="623.50"></text></g><g><title>engine::session::Session::save_entity_changes (162 samples, 13.02%)</title><rect x="30.3055%" y="709" width="13.0225%" height="15" fill="rgb(215,176,6)" fg:x="377" fg:w="162"/><text x="30.5555%" y="719.50">engine::session::Ses..</text></g><g><title>engine::session::Session::world (4 samples, 0.32%)</title><rect x="43.0064%" y="693" width="0.3215%" height="15" fill="rgb(214,117,39)" fg:x="535" fg:w="4"/><text x="43.2564%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="43.0064%" y="677" width="0.3215%" height="15" fill="rgb(247,183,36)" fg:x="535" fg:w="4"/><text x="43.2564%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="43.0868%" y="661" width="0.2412%" height="15" fill="rgb(237,200,3)" fg:x="536" fg:w="3"/><text x="43.3368%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="43.0868%" y="645" width="0.2412%" height="15" fill="rgb(212,220,24)" fg:x="536" fg:w="3"/><text x="43.3368%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="43.0868%" y="629" width="0.2412%" height="15" fill="rgb(245,216,20)" fg:x="536" fg:w="3"/><text x="43.3368%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="43.0868%" y="613" width="0.2412%" height="15" fill="rgb(219,124,7)" fg:x="536" fg:w="3"/><text x="43.3368%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="43.0868%" y="597" width="0.2412%" height="15" fill="rgb(227,167,8)" fg:x="536" fg:w="3"/><text x="43.3368%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="43.0868%" y="581" width="0.2412%" height="15" fill="rgb(241,37,2)" fg:x="536" fg:w="3"/><text x="43.3368%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="43.0868%" y="565" width="0.2412%" height="15" fill="rgb(238,134,33)" fg:x="536" fg:w="3"/><text x="43.3368%" y="575.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="43.0868%" y="549" width="0.2412%" height="15" fill="rgb(248,48,27)" fg:x="536" fg:w="3"/><text x="43.3368%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.2476%" y="533" width="0.0804%" height="15" fill="rgb(212,14,16)" fg:x="538" fg:w="1"/><text x="43.4976%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="43.2476%" y="517" width="0.0804%" height="15" fill="rgb(217,205,37)" fg:x="538" fg:w="1"/><text x="43.4976%" y="527.50"></text></g><g><title>engine::session::Session::close (165 samples, 13.26%)</title><rect x="30.1447%" y="725" width="13.2637%" height="15" fill="rgb(233,185,47)" fg:x="375" fg:w="165"/><text x="30.3947%" y="735.50">engine::session::Ses..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="43.3280%" y="709" width="0.0804%" height="15" fill="rgb(244,88,8)" fg:x="539" fg:w="1"/><text x="43.5780%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="43.4887%" y="677" width="0.0804%" height="15" fill="rgb(213,0,20)" fg:x="541" fg:w="1"/><text x="43.7387%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="43.4887%" y="661" width="0.0804%" height="15" fill="rgb(238,159,36)" fg:x="541" fg:w="1"/><text x="43.7387%" y="671.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="43.6495%" y="629" width="0.0804%" height="15" fill="rgb(253,173,17)" fg:x="543" fg:w="1"/><text x="43.8995%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="43.7299%" y="613" width="0.0804%" height="15" fill="rgb(221,23,28)" fg:x="544" fg:w="1"/><text x="43.9799%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="44.1318%" y="565" width="0.2412%" height="15" fill="rgb(218,113,15)" fg:x="549" fg:w="3"/><text x="44.3818%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.3730%" y="565" width="0.0804%" height="15" fill="rgb(233,58,3)" fg:x="552" fg:w="1"/><text x="44.6230%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.3730%" y="549" width="0.0804%" height="15" fill="rgb(250,46,35)" fg:x="552" fg:w="1"/><text x="44.6230%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.3730%" y="533" width="0.0804%" height="15" fill="rgb(210,169,11)" fg:x="552" fg:w="1"/><text x="44.6230%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.3730%" y="517" width="0.0804%" height="15" fill="rgb(246,88,19)" fg:x="552" fg:w="1"/><text x="44.6230%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.4534%" y="549" width="0.0804%" height="15" fill="rgb(206,81,49)" fg:x="553" fg:w="1"/><text x="44.7034%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.5338%" y="549" width="0.1608%" height="15" fill="rgb(232,144,18)" fg:x="554" fg:w="2"/><text x="44.7838%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.6141%" y="533" width="0.0804%" height="15" fill="rgb(235,2,27)" fg:x="555" fg:w="1"/><text x="44.8641%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.8553%" y="517" width="0.0804%" height="15" fill="rgb(239,157,39)" fg:x="558" fg:w="1"/><text x="45.1053%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.9357%" y="517" width="0.0804%" height="15" fill="rgb(220,11,17)" fg:x="559" fg:w="1"/><text x="45.1857%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.13%)</title><rect x="43.9711%" y="581" width="1.1254%" height="15" fill="rgb(243,94,50)" fg:x="547" fg:w="14"/><text x="44.2211%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="44.4534%" y="565" width="0.6431%" height="15" fill="rgb(218,22,0)" fg:x="553" fg:w="8"/><text x="44.7034%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="44.6945%" y="549" width="0.4019%" height="15" fill="rgb(249,70,21)" fg:x="556" fg:w="5"/><text x="44.9445%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="44.7749%" y="533" width="0.3215%" height="15" fill="rgb(245,111,46)" fg:x="557" fg:w="4"/><text x="45.0249%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.0161%" y="517" width="0.0804%" height="15" fill="rgb(244,183,12)" fg:x="560" fg:w="1"/><text x="45.2661%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.0161%" y="501" width="0.0804%" height="15" fill="rgb(207,117,0)" fg:x="560" fg:w="1"/><text x="45.2661%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="45.0965%" y="581" width="0.0804%" height="15" fill="rgb(206,20,43)" fg:x="561" fg:w="1"/><text x="45.3465%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="45.0965%" y="565" width="0.0804%" height="15" fill="rgb(221,104,11)" fg:x="561" fg:w="1"/><text x="45.3465%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="45.0965%" y="549" width="0.0804%" height="15" fill="rgb(254,36,50)" fg:x="561" fg:w="1"/><text x="45.3465%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0965%" y="533" width="0.0804%" height="15" fill="rgb(252,17,15)" fg:x="561" fg:w="1"/><text x="45.3465%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="45.7395%" y="469" width="0.2412%" height="15" fill="rgb(219,129,43)" fg:x="569" fg:w="3"/><text x="45.9895%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.8199%" y="453" width="0.1608%" height="15" fill="rgb(205,34,45)" fg:x="570" fg:w="2"/><text x="46.0699%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="45.8199%" y="437" width="0.1608%" height="15" fill="rgb(251,201,32)" fg:x="570" fg:w="2"/><text x="46.0699%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="45.8199%" y="421" width="0.1608%" height="15" fill="rgb(205,56,0)" fg:x="570" fg:w="2"/><text x="46.0699%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="45.8199%" y="405" width="0.1608%" height="15" fill="rgb(211,193,27)" fg:x="570" fg:w="2"/><text x="46.0699%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="45.8199%" y="389" width="0.1608%" height="15" fill="rgb(231,100,42)" fg:x="570" fg:w="2"/><text x="46.0699%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="45.8199%" y="373" width="0.1608%" height="15" fill="rgb(245,85,27)" fg:x="570" fg:w="2"/><text x="46.0699%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="45.6592%" y="485" width="0.4019%" height="15" fill="rgb(241,76,24)" fg:x="568" fg:w="5"/><text x="45.9092%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.9807%" y="469" width="0.0804%" height="15" fill="rgb(249,157,15)" fg:x="572" fg:w="1"/><text x="46.2307%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="46.0611%" y="405" width="0.1608%" height="15" fill="rgb(222,218,25)" fg:x="573" fg:w="2"/><text x="46.3111%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="46.0611%" y="389" width="0.1608%" height="15" fill="rgb(252,156,52)" fg:x="573" fg:w="2"/><text x="46.3111%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="46.0611%" y="373" width="0.1608%" height="15" fill="rgb(211,185,7)" fg:x="573" fg:w="2"/><text x="46.3111%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="46.0611%" y="357" width="0.1608%" height="15" fill="rgb(234,108,24)" fg:x="573" fg:w="2"/><text x="46.3111%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="46.0611%" y="341" width="0.1608%" height="15" fill="rgb(227,218,2)" fg:x="573" fg:w="2"/><text x="46.3111%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="46.0611%" y="325" width="0.1608%" height="15" fill="rgb(224,0,36)" fg:x="573" fg:w="2"/><text x="46.3111%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.0611%" y="309" width="0.1608%" height="15" fill="rgb(233,201,10)" fg:x="573" fg:w="2"/><text x="46.3111%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="45.6592%" y="501" width="0.6431%" height="15" fill="rgb(252,209,14)" fg:x="568" fg:w="8"/><text x="45.9092%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="46.0611%" y="485" width="0.2412%" height="15" fill="rgb(205,93,49)" fg:x="573" fg:w="3"/><text x="46.3111%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="46.0611%" y="469" width="0.2412%" height="15" fill="rgb(234,116,45)" fg:x="573" fg:w="3"/><text x="46.3111%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="46.0611%" y="453" width="0.2412%" height="15" fill="rgb(248,89,35)" fg:x="573" fg:w="3"/><text x="46.3111%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="46.0611%" y="437" width="0.2412%" height="15" fill="rgb(233,167,45)" fg:x="573" fg:w="3"/><text x="46.3111%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="46.0611%" y="421" width="0.2412%" height="15" fill="rgb(248,228,14)" fg:x="573" fg:w="3"/><text x="46.3111%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="46.2219%" y="405" width="0.0804%" height="15" fill="rgb(246,91,14)" fg:x="575" fg:w="1"/><text x="46.4719%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="46.2219%" y="389" width="0.0804%" height="15" fill="rgb(227,142,5)" fg:x="575" fg:w="1"/><text x="46.4719%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.72%)</title><rect x="45.6592%" y="517" width="0.7235%" height="15" fill="rgb(221,63,33)" fg:x="568" fg:w="9"/><text x="45.9092%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.3023%" y="501" width="0.0804%" height="15" fill="rgb(233,49,0)" fg:x="576" fg:w="1"/><text x="46.5523%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 1.05%)</title><rect x="45.4984%" y="533" width="1.0450%" height="15" fill="rgb(251,115,38)" fg:x="566" fg:w="13"/><text x="45.7484%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.3826%" y="517" width="0.1608%" height="15" fill="rgb(231,214,32)" fg:x="577" fg:w="2"/><text x="46.6326%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.4630%" y="501" width="0.0804%" height="15" fill="rgb(248,73,46)" fg:x="578" fg:w="1"/><text x="46.7130%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.4630%" y="485" width="0.0804%" height="15" fill="rgb(237,156,4)" fg:x="578" fg:w="1"/><text x="46.7130%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.4630%" y="469" width="0.0804%" height="15" fill="rgb(227,132,2)" fg:x="578" fg:w="1"/><text x="46.7130%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.4630%" y="453" width="0.0804%" height="15" fill="rgb(248,161,9)" fg:x="578" fg:w="1"/><text x="46.7130%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="46.4630%" y="437" width="0.0804%" height="15" fill="rgb(238,77,38)" fg:x="578" fg:w="1"/><text x="46.7130%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="46.4630%" y="421" width="0.0804%" height="15" fill="rgb(222,166,40)" fg:x="578" fg:w="1"/><text x="46.7130%" y="431.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (18 samples, 1.45%)</title><rect x="45.1768%" y="581" width="1.4469%" height="15" fill="rgb(214,168,45)" fg:x="562" fg:w="18"/><text x="45.4268%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::modified (17 samples, 1.37%)</title><rect x="45.2572%" y="565" width="1.3666%" height="15" fill="rgb(226,64,37)" fg:x="563" fg:w="17"/><text x="45.5072%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (16 samples, 1.29%)</title><rect x="45.3376%" y="549" width="1.2862%" height="15" fill="rgb(232,210,43)" fg:x="564" fg:w="16"/><text x="45.5876%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5434%" y="533" width="0.0804%" height="15" fill="rgb(214,76,33)" fg:x="579" fg:w="1"/><text x="46.7934%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.6238%" y="565" width="0.0804%" height="15" fill="rgb(210,78,5)" fg:x="580" fg:w="1"/><text x="46.8738%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.6238%" y="549" width="0.0804%" height="15" fill="rgb(211,107,37)" fg:x="580" fg:w="1"/><text x="46.8738%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.6238%" y="533" width="0.0804%" height="15" fill="rgb(249,67,16)" fg:x="580" fg:w="1"/><text x="46.8738%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.6238%" y="517" width="0.0804%" height="15" fill="rgb(222,114,31)" fg:x="580" fg:w="1"/><text x="46.8738%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.6238%" y="501" width="0.0804%" height="15" fill="rgb(242,118,19)" fg:x="580" fg:w="1"/><text x="46.8738%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.6238%" y="485" width="0.0804%" height="15" fill="rgb(223,115,1)" fg:x="580" fg:w="1"/><text x="46.8738%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.6238%" y="469" width="0.0804%" height="15" fill="rgb(241,182,54)" fg:x="580" fg:w="1"/><text x="46.8738%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.6238%" y="453" width="0.0804%" height="15" fill="rgb(244,166,36)" fg:x="580" fg:w="1"/><text x="46.8738%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.6238%" y="437" width="0.0804%" height="15" fill="rgb(241,52,43)" fg:x="580" fg:w="1"/><text x="46.8738%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.6238%" y="421" width="0.0804%" height="15" fill="rgb(236,82,9)" fg:x="580" fg:w="1"/><text x="46.8738%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.6238%" y="405" width="0.0804%" height="15" fill="rgb(241,119,0)" fg:x="580" fg:w="1"/><text x="46.8738%" y="415.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="46.6238%" y="389" width="0.0804%" height="15" fill="rgb(221,19,22)" fg:x="580" fg:w="1"/><text x="46.8738%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (2 samples, 0.16%)</title><rect x="46.7846%" y="549" width="0.1608%" height="15" fill="rgb(254,144,35)" fg:x="582" fg:w="2"/><text x="47.0346%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="46.7846%" y="533" width="0.1608%" height="15" fill="rgb(246,132,30)" fg:x="582" fg:w="2"/><text x="47.0346%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="46.7846%" y="517" width="0.1608%" height="15" fill="rgb(234,69,28)" fg:x="582" fg:w="2"/><text x="47.0346%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="46.7846%" y="501" width="0.1608%" height="15" fill="rgb(219,106,47)" fg:x="582" fg:w="2"/><text x="47.0346%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="46.7846%" y="485" width="0.1608%" height="15" fill="rgb(218,79,24)" fg:x="582" fg:w="2"/><text x="47.0346%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="46.7846%" y="469" width="0.1608%" height="15" fill="rgb(225,26,21)" fg:x="582" fg:w="2"/><text x="47.0346%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="46.7846%" y="453" width="0.1608%" height="15" fill="rgb(217,68,49)" fg:x="582" fg:w="2"/><text x="47.0346%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="46.7846%" y="437" width="0.1608%" height="15" fill="rgb(220,204,28)" fg:x="582" fg:w="2"/><text x="47.0346%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="46.7846%" y="421" width="0.1608%" height="15" fill="rgb(237,208,43)" fg:x="582" fg:w="2"/><text x="47.0346%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="46.7846%" y="405" width="0.1608%" height="15" fill="rgb(213,97,42)" fg:x="582" fg:w="2"/><text x="47.0346%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.8650%" y="389" width="0.0804%" height="15" fill="rgb(238,96,52)" fg:x="583" fg:w="1"/><text x="47.1150%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.8650%" y="373" width="0.0804%" height="15" fill="rgb(228,14,13)" fg:x="583" fg:w="1"/><text x="47.1150%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.8650%" y="357" width="0.0804%" height="15" fill="rgb(219,123,13)" fg:x="583" fg:w="1"/><text x="47.1150%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="46.8650%" y="341" width="0.0804%" height="15" fill="rgb(216,144,17)" fg:x="583" fg:w="1"/><text x="47.1150%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="46.8650%" y="325" width="0.0804%" height="15" fill="rgb(230,228,29)" fg:x="583" fg:w="1"/><text x="47.1150%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="46.8650%" y="309" width="0.0804%" height="15" fill="rgb(233,18,5)" fg:x="583" fg:w="1"/><text x="47.1150%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="46.8650%" y="293" width="0.0804%" height="15" fill="rgb(233,197,12)" fg:x="583" fg:w="1"/><text x="47.1150%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="46.8650%" y="277" width="0.0804%" height="15" fill="rgb(234,140,29)" fg:x="583" fg:w="1"/><text x="47.1150%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="46.8650%" y="261" width="0.0804%" height="15" fill="rgb(233,113,19)" fg:x="583" fg:w="1"/><text x="47.1150%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.8650%" y="245" width="0.0804%" height="15" fill="rgb(246,209,13)" fg:x="583" fg:w="1"/><text x="47.1150%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="46.8650%" y="229" width="0.0804%" height="15" fill="rgb(242,79,54)" fg:x="583" fg:w="1"/><text x="47.1150%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.8650%" y="213" width="0.0804%" height="15" fill="rgb(219,73,16)" fg:x="583" fg:w="1"/><text x="47.1150%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="46.8650%" y="197" width="0.0804%" height="15" fill="rgb(224,52,10)" fg:x="583" fg:w="1"/><text x="47.1150%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="46.8650%" y="181" width="0.0804%" height="15" fill="rgb(237,179,5)" fg:x="583" fg:w="1"/><text x="47.1150%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="46.8650%" y="165" width="0.0804%" height="15" fill="rgb(231,20,6)" fg:x="583" fg:w="1"/><text x="47.1150%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="46.8650%" y="149" width="0.0804%" height="15" fill="rgb(253,171,45)" fg:x="583" fg:w="1"/><text x="47.1150%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="46.9453%" y="437" width="0.0804%" height="15" fill="rgb(230,75,49)" fg:x="584" fg:w="1"/><text x="47.1953%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="46.9453%" y="421" width="0.0804%" height="15" fill="rgb(216,83,46)" fg:x="584" fg:w="1"/><text x="47.1953%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.9453%" y="405" width="0.0804%" height="15" fill="rgb(236,56,9)" fg:x="584" fg:w="1"/><text x="47.1953%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.9453%" y="389" width="0.0804%" height="15" fill="rgb(215,28,34)" fg:x="584" fg:w="1"/><text x="47.1953%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9453%" y="373" width="0.0804%" height="15" fill="rgb(230,222,20)" fg:x="584" fg:w="1"/><text x="47.1953%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.9453%" y="357" width="0.0804%" height="15" fill="rgb(235,209,51)" fg:x="584" fg:w="1"/><text x="47.1953%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9453%" y="341" width="0.0804%" height="15" fill="rgb(235,167,1)" fg:x="584" fg:w="1"/><text x="47.1953%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="46.9453%" y="325" width="0.0804%" height="15" fill="rgb(248,220,0)" fg:x="584" fg:w="1"/><text x="47.1953%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9453%" y="309" width="0.0804%" height="15" fill="rgb(239,0,18)" fg:x="584" fg:w="1"/><text x="47.1953%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.9453%" y="293" width="0.0804%" height="15" fill="rgb(229,179,11)" fg:x="584" fg:w="1"/><text x="47.1953%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9453%" y="277" width="0.0804%" height="15" fill="rgb(226,116,53)" fg:x="584" fg:w="1"/><text x="47.1953%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.9453%" y="261" width="0.0804%" height="15" fill="rgb(218,1,49)" fg:x="584" fg:w="1"/><text x="47.1953%" y="271.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="46.9453%" y="469" width="0.1608%" height="15" fill="rgb(208,184,47)" fg:x="584" fg:w="2"/><text x="47.1953%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="46.9453%" y="453" width="0.1608%" height="15" fill="rgb(238,174,3)" fg:x="584" fg:w="2"/><text x="47.1953%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="47.0257%" y="437" width="0.0804%" height="15" fill="rgb(247,188,6)" fg:x="585" fg:w="1"/><text x="47.2757%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="47.0257%" y="421" width="0.0804%" height="15" fill="rgb(211,165,46)" fg:x="585" fg:w="1"/><text x="47.2757%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.0257%" y="405" width="0.0804%" height="15" fill="rgb(222,190,10)" fg:x="585" fg:w="1"/><text x="47.2757%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="47.0257%" y="389" width="0.0804%" height="15" fill="rgb(206,185,3)" fg:x="585" fg:w="1"/><text x="47.2757%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.1061%" y="421" width="0.0804%" height="15" fill="rgb(244,125,37)" fg:x="586" fg:w="1"/><text x="47.3561%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.1061%" y="405" width="0.0804%" height="15" fill="rgb(211,43,7)" fg:x="586" fg:w="1"/><text x="47.3561%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.1061%" y="389" width="0.0804%" height="15" fill="rgb(250,41,42)" fg:x="586" fg:w="1"/><text x="47.3561%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.1061%" y="373" width="0.0804%" height="15" fill="rgb(254,54,42)" fg:x="586" fg:w="1"/><text x="47.3561%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.1865%" y="357" width="0.0804%" height="15" fill="rgb(213,71,43)" fg:x="587" fg:w="1"/><text x="47.4365%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.1865%" y="341" width="0.0804%" height="15" fill="rgb(249,3,44)" fg:x="587" fg:w="1"/><text x="47.4365%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="47.1061%" y="469" width="0.2412%" height="15" fill="rgb(229,80,41)" fg:x="586" fg:w="3"/><text x="47.3561%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="47.1061%" y="453" width="0.2412%" height="15" fill="rgb(231,25,28)" fg:x="586" fg:w="3"/><text x="47.3561%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="47.1061%" y="437" width="0.2412%" height="15" fill="rgb(208,79,48)" fg:x="586" fg:w="3"/><text x="47.3561%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="47.1865%" y="421" width="0.1608%" height="15" fill="rgb(207,196,38)" fg:x="587" fg:w="2"/><text x="47.4365%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.1865%" y="405" width="0.1608%" height="15" fill="rgb(228,105,49)" fg:x="587" fg:w="2"/><text x="47.4365%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="47.1865%" y="389" width="0.1608%" height="15" fill="rgb(237,99,15)" fg:x="587" fg:w="2"/><text x="47.4365%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.1865%" y="373" width="0.1608%" height="15" fill="rgb(224,207,46)" fg:x="587" fg:w="2"/><text x="47.4365%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="47.2669%" y="357" width="0.0804%" height="15" fill="rgb(249,117,50)" fg:x="588" fg:w="1"/><text x="47.5169%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.2669%" y="341" width="0.0804%" height="15" fill="rgb(248,17,13)" fg:x="588" fg:w="1"/><text x="47.5169%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="47.2669%" y="325" width="0.0804%" height="15" fill="rgb(228,187,36)" fg:x="588" fg:w="1"/><text x="47.5169%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.2669%" y="309" width="0.0804%" height="15" fill="rgb(234,132,20)" fg:x="588" fg:w="1"/><text x="47.5169%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.2669%" y="293" width="0.0804%" height="15" fill="rgb(209,170,46)" fg:x="588" fg:w="1"/><text x="47.5169%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.3473%" y="405" width="0.1608%" height="15" fill="rgb(237,23,19)" fg:x="589" fg:w="2"/><text x="47.5973%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="47.3473%" y="389" width="0.1608%" height="15" fill="rgb(227,21,26)" fg:x="589" fg:w="2"/><text x="47.5973%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.5080%" y="405" width="0.0804%" height="15" fill="rgb(222,220,48)" fg:x="591" fg:w="1"/><text x="47.7580%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.6688%" y="341" width="0.0804%" height="15" fill="rgb(214,9,16)" fg:x="593" fg:w="1"/><text x="47.9188%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.6688%" y="325" width="0.0804%" height="15" fill="rgb(209,73,30)" fg:x="593" fg:w="1"/><text x="47.9188%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.6688%" y="309" width="0.0804%" height="15" fill="rgb(207,20,33)" fg:x="593" fg:w="1"/><text x="47.9188%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.8296%" y="277" width="0.0804%" height="15" fill="rgb(219,153,12)" fg:x="595" fg:w="1"/><text x="48.0796%" y="287.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="47.3473%" y="453" width="0.6431%" height="15" fill="rgb(235,97,25)" fg:x="589" fg:w="8"/><text x="47.5973%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="47.3473%" y="437" width="0.6431%" height="15" fill="rgb(244,30,34)" fg:x="589" fg:w="8"/><text x="47.5973%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="47.3473%" y="421" width="0.6431%" height="15" fill="rgb(214,106,45)" fg:x="589" fg:w="8"/><text x="47.5973%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="47.5884%" y="405" width="0.4019%" height="15" fill="rgb(226,41,9)" fg:x="592" fg:w="5"/><text x="47.8384%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="47.5884%" y="389" width="0.4019%" height="15" fill="rgb(253,139,29)" fg:x="592" fg:w="5"/><text x="47.8384%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="47.5884%" y="373" width="0.4019%" height="15" fill="rgb(213,205,39)" fg:x="592" fg:w="5"/><text x="47.8384%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="47.5884%" y="357" width="0.4019%" height="15" fill="rgb(209,27,10)" fg:x="592" fg:w="5"/><text x="47.8384%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="47.7492%" y="341" width="0.2412%" height="15" fill="rgb(249,142,16)" fg:x="594" fg:w="3"/><text x="47.9992%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="47.8296%" y="325" width="0.1608%" height="15" fill="rgb(242,65,12)" fg:x="595" fg:w="2"/><text x="48.0796%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="47.8296%" y="309" width="0.1608%" height="15" fill="rgb(232,48,10)" fg:x="595" fg:w="2"/><text x="48.0796%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.8296%" y="293" width="0.1608%" height="15" fill="rgb(253,67,19)" fg:x="595" fg:w="2"/><text x="48.0796%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.9100%" y="277" width="0.0804%" height="15" fill="rgb(227,93,29)" fg:x="596" fg:w="1"/><text x="48.1600%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.0707%" y="421" width="0.0804%" height="15" fill="rgb(226,189,53)" fg:x="598" fg:w="1"/><text x="48.3207%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.1511%" y="341" width="0.0804%" height="15" fill="rgb(223,224,1)" fg:x="599" fg:w="1"/><text x="48.4011%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.1511%" y="325" width="0.0804%" height="15" fill="rgb(221,84,32)" fg:x="599" fg:w="1"/><text x="48.4011%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="48.1511%" y="309" width="0.0804%" height="15" fill="rgb(214,189,28)" fg:x="599" fg:w="1"/><text x="48.4011%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1511%" y="293" width="0.0804%" height="15" fill="rgb(234,7,52)" fg:x="599" fg:w="1"/><text x="48.4011%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="48.1511%" y="373" width="0.1608%" height="15" fill="rgb(249,73,31)" fg:x="599" fg:w="2"/><text x="48.4011%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.1511%" y="357" width="0.1608%" height="15" fill="rgb(253,153,41)" fg:x="599" fg:w="2"/><text x="48.4011%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="48.2315%" y="341" width="0.0804%" height="15" fill="rgb(249,52,34)" fg:x="600" fg:w="1"/><text x="48.4815%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.2315%" y="325" width="0.0804%" height="15" fill="rgb(236,177,47)" fg:x="600" fg:w="1"/><text x="48.4815%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.2315%" y="309" width="0.0804%" height="15" fill="rgb(252,185,45)" fg:x="600" fg:w="1"/><text x="48.4815%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.2315%" y="293" width="0.0804%" height="15" fill="rgb(251,15,30)" fg:x="600" fg:w="1"/><text x="48.4815%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="48.2315%" y="277" width="0.0804%" height="15" fill="rgb(233,31,4)" fg:x="600" fg:w="1"/><text x="48.4815%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.2315%" y="261" width="0.0804%" height="15" fill="rgb(254,44,24)" fg:x="600" fg:w="1"/><text x="48.4815%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.2315%" y="245" width="0.0804%" height="15" fill="rgb(218,54,1)" fg:x="600" fg:w="1"/><text x="48.4815%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.3119%" y="341" width="0.0804%" height="15" fill="rgb(243,209,39)" fg:x="601" fg:w="1"/><text x="48.5619%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.3119%" y="325" width="0.0804%" height="15" fill="rgb(206,75,33)" fg:x="601" fg:w="1"/><text x="48.5619%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.3119%" y="309" width="0.0804%" height="15" fill="rgb(223,108,18)" fg:x="601" fg:w="1"/><text x="48.5619%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="48.1511%" y="421" width="0.3215%" height="15" fill="rgb(244,89,31)" fg:x="599" fg:w="4"/><text x="48.4011%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="48.1511%" y="405" width="0.3215%" height="15" fill="rgb(222,167,27)" fg:x="599" fg:w="4"/><text x="48.4011%" y="415.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="48.1511%" y="389" width="0.3215%" height="15" fill="rgb(247,41,16)" fg:x="599" fg:w="4"/><text x="48.4011%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.3119%" y="373" width="0.1608%" height="15" fill="rgb(233,168,40)" fg:x="601" fg:w="2"/><text x="48.5619%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.3119%" y="357" width="0.1608%" height="15" fill="rgb(205,211,8)" fg:x="601" fg:w="2"/><text x="48.5619%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="48.3923%" y="341" width="0.0804%" height="15" fill="rgb(238,105,11)" fg:x="602" fg:w="1"/><text x="48.6423%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.3923%" y="325" width="0.0804%" height="15" fill="rgb(223,142,52)" fg:x="602" fg:w="1"/><text x="48.6423%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.3923%" y="309" width="0.0804%" height="15" fill="rgb(238,51,33)" fg:x="602" fg:w="1"/><text x="48.6423%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="48.3923%" y="293" width="0.0804%" height="15" fill="rgb(231,188,43)" fg:x="602" fg:w="1"/><text x="48.6423%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.3923%" y="277" width="0.0804%" height="15" fill="rgb(216,92,17)" fg:x="602" fg:w="1"/><text x="48.6423%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.3923%" y="261" width="0.0804%" height="15" fill="rgb(228,2,40)" fg:x="602" fg:w="1"/><text x="48.6423%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="48.3923%" y="245" width="0.0804%" height="15" fill="rgb(226,73,15)" fg:x="602" fg:w="1"/><text x="48.6423%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.3923%" y="229" width="0.0804%" height="15" fill="rgb(227,66,46)" fg:x="602" fg:w="1"/><text x="48.6423%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.3923%" y="213" width="0.0804%" height="15" fill="rgb(209,71,6)" fg:x="602" fg:w="1"/><text x="48.6423%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="48.3923%" y="197" width="0.0804%" height="15" fill="rgb(246,100,25)" fg:x="602" fg:w="1"/><text x="48.6423%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.3923%" y="181" width="0.0804%" height="15" fill="rgb(248,185,27)" fg:x="602" fg:w="1"/><text x="48.6423%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.3923%" y="165" width="0.0804%" height="15" fill="rgb(225,118,47)" fg:x="602" fg:w="1"/><text x="48.6423%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="48.3923%" y="149" width="0.0804%" height="15" fill="rgb(220,185,44)" fg:x="602" fg:w="1"/><text x="48.6423%" y="159.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="48.3923%" y="133" width="0.0804%" height="15" fill="rgb(227,95,24)" fg:x="602" fg:w="1"/><text x="48.6423%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="48.4727%" y="389" width="0.0804%" height="15" fill="rgb(252,84,24)" fg:x="603" fg:w="1"/><text x="48.7227%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.4727%" y="373" width="0.0804%" height="15" fill="rgb(240,34,44)" fg:x="603" fg:w="1"/><text x="48.7227%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (21 samples, 1.69%)</title><rect x="46.9453%" y="517" width="1.6881%" height="15" fill="rgb(209,72,54)" fg:x="584" fg:w="21"/><text x="47.1953%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.69%)</title><rect x="46.9453%" y="501" width="1.6881%" height="15" fill="rgb(226,19,45)" fg:x="584" fg:w="21"/><text x="47.1953%" y="511.50"></text></g><g><title>engine::internal::Entities::add_persisted (21 samples, 1.69%)</title><rect x="46.9453%" y="485" width="1.6881%" height="15" fill="rgb(246,7,45)" fg:x="584" fg:w="21"/><text x="47.1953%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::from_str (16 samples, 1.29%)</title><rect x="47.3473%" y="469" width="1.2862%" height="15" fill="rgb(225,45,2)" fg:x="589" fg:w="16"/><text x="47.5973%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="47.9904%" y="453" width="0.6431%" height="15" fill="rgb(221,80,29)" fg:x="597" fg:w="8"/><text x="48.2404%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="47.9904%" y="437" width="0.6431%" height="15" fill="rgb(228,11,19)" fg:x="597" fg:w="8"/><text x="48.2404%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.4727%" y="421" width="0.1608%" height="15" fill="rgb(243,17,21)" fg:x="603" fg:w="2"/><text x="48.7227%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.4727%" y="405" width="0.1608%" height="15" fill="rgb(243,88,8)" fg:x="603" fg:w="2"/><text x="48.7227%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.5531%" y="389" width="0.0804%" height="15" fill="rgb(214,17,9)" fg:x="604" fg:w="1"/><text x="48.8031%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="48.6334%" y="517" width="0.1608%" height="15" fill="rgb(232,169,15)" fg:x="605" fg:w="2"/><text x="48.8834%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.7138%" y="501" width="0.0804%" height="15" fill="rgb(232,86,53)" fg:x="606" fg:w="1"/><text x="48.9638%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7942%" y="517" width="0.0804%" height="15" fill="rgb(222,100,4)" fg:x="607" fg:w="1"/><text x="49.0442%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.8746%" y="485" width="0.0804%" height="15" fill="rgb(253,151,38)" fg:x="608" fg:w="1"/><text x="49.1246%" y="495.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (29 samples, 2.33%)</title><rect x="46.7042%" y="565" width="2.3312%" height="15" fill="rgb(238,215,29)" fg:x="581" fg:w="29"/><text x="46.9542%" y="575.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (26 samples, 2.09%)</title><rect x="46.9453%" y="549" width="2.0900%" height="15" fill="rgb(205,128,53)" fg:x="584" fg:w="26"/><text x="47.1953%" y="559.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (26 samples, 2.09%)</title><rect x="46.9453%" y="533" width="2.0900%" height="15" fill="rgb(248,183,14)" fg:x="584" fg:w="26"/><text x="47.1953%" y="543.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.8746%" y="517" width="0.1608%" height="15" fill="rgb(244,172,35)" fg:x="608" fg:w="2"/><text x="49.1246%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.8746%" y="501" width="0.1608%" height="15" fill="rgb(234,93,19)" fg:x="608" fg:w="2"/><text x="49.1246%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.9550%" y="485" width="0.0804%" height="15" fill="rgb(227,109,7)" fg:x="609" fg:w="1"/><text x="49.2050%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.9550%" y="469" width="0.0804%" height="15" fill="rgb(233,136,54)" fg:x="609" fg:w="1"/><text x="49.2050%" y="479.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (31 samples, 2.49%)</title><rect x="46.6238%" y="581" width="2.4920%" height="15" fill="rgb(233,19,40)" fg:x="580" fg:w="31"/><text x="46.8738%" y="591.50">en..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="49.0354%" y="565" width="0.0804%" height="15" fill="rgb(247,41,18)" fg:x="610" fg:w="1"/><text x="49.2854%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="49.0354%" y="549" width="0.0804%" height="15" fill="rgb(220,34,34)" fg:x="610" fg:w="1"/><text x="49.2854%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="49.0354%" y="533" width="0.0804%" height="15" fill="rgb(222,135,32)" fg:x="610" fg:w="1"/><text x="49.2854%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="49.0354%" y="517" width="0.0804%" height="15" fill="rgb(214,80,19)" fg:x="610" fg:w="1"/><text x="49.2854%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0354%" y="501" width="0.0804%" height="15" fill="rgb(234,54,46)" fg:x="610" fg:w="1"/><text x="49.2854%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0354%" y="485" width="0.0804%" height="15" fill="rgb(251,48,23)" fg:x="610" fg:w="1"/><text x="49.2854%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0354%" y="469" width="0.0804%" height="15" fill="rgb(254,109,52)" fg:x="610" fg:w="1"/><text x="49.2854%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.0354%" y="453" width="0.0804%" height="15" fill="rgb(240,186,19)" fg:x="610" fg:w="1"/><text x="49.2854%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.0354%" y="437" width="0.0804%" height="15" fill="rgb(246,187,17)" fg:x="610" fg:w="1"/><text x="49.2854%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.0354%" y="421" width="0.0804%" height="15" fill="rgb(212,21,5)" fg:x="610" fg:w="1"/><text x="49.2854%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.0354%" y="405" width="0.0804%" height="15" fill="rgb(225,185,18)" fg:x="610" fg:w="1"/><text x="49.2854%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.0354%" y="389" width="0.0804%" height="15" fill="rgb(245,114,17)" fg:x="610" fg:w="1"/><text x="49.2854%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="49.7588%" y="437" width="0.0804%" height="15" fill="rgb(223,164,24)" fg:x="619" fg:w="1"/><text x="50.0088%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="49.6785%" y="453" width="0.2412%" height="15" fill="rgb(211,228,3)" fg:x="618" fg:w="3"/><text x="49.9285%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.8392%" y="437" width="0.0804%" height="15" fill="rgb(223,16,38)" fg:x="620" fg:w="1"/><text x="50.0892%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="49.5981%" y="469" width="0.4019%" height="15" fill="rgb(207,31,54)" fg:x="617" fg:w="5"/><text x="49.8481%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.9196%" y="453" width="0.0804%" height="15" fill="rgb(220,39,11)" fg:x="621" fg:w="1"/><text x="50.1696%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="49.4373%" y="485" width="0.8039%" height="15" fill="rgb(235,185,0)" fg:x="615" fg:w="10"/><text x="49.6873%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="50.0000%" y="469" width="0.2412%" height="15" fill="rgb(249,39,18)" fg:x="622" fg:w="3"/><text x="50.2500%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.2412%" y="485" width="0.0804%" height="15" fill="rgb(240,110,33)" fg:x="625" fg:w="1"/><text x="50.4912%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.3215%" y="469" width="0.0804%" height="15" fill="rgb(210,92,42)" fg:x="626" fg:w="1"/><text x="50.5715%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.05%)</title><rect x="49.4373%" y="501" width="1.0450%" height="15" fill="rgb(218,215,28)" fg:x="615" fg:w="13"/><text x="49.6873%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="50.3215%" y="485" width="0.1608%" height="15" fill="rgb(238,215,36)" fg:x="626" fg:w="2"/><text x="50.5715%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="50.4019%" y="469" width="0.0804%" height="15" fill="rgb(220,31,10)" fg:x="627" fg:w="1"/><text x="50.6519%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.53%)</title><rect x="49.3569%" y="517" width="1.5273%" height="15" fill="rgb(212,93,14)" fg:x="614" fg:w="19"/><text x="49.6069%" y="527.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="50.4823%" y="501" width="0.4019%" height="15" fill="rgb(254,207,2)" fg:x="628" fg:w="5"/><text x="50.7323%" y="511.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="50.8842%" y="517" width="0.3215%" height="15" fill="rgb(205,57,44)" fg:x="633" fg:w="4"/><text x="51.1342%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (26 samples, 2.09%)</title><rect x="49.1961%" y="549" width="2.0900%" height="15" fill="rgb(226,151,19)" fg:x="612" fg:w="26"/><text x="49.4461%" y="559.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.01%)</title><rect x="49.2765%" y="533" width="2.0096%" height="15" fill="rgb(230,72,30)" fg:x="613" fg:w="25"/><text x="49.5265%" y="543.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="51.2058%" y="517" width="0.0804%" height="15" fill="rgb(244,0,8)" fg:x="637" fg:w="1"/><text x="51.4558%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2862%" y="453" width="0.0804%" height="15" fill="rgb(230,192,6)" fg:x="638" fg:w="1"/><text x="51.5362%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2862%" y="437" width="0.0804%" height="15" fill="rgb(233,207,13)" fg:x="638" fg:w="1"/><text x="51.5362%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.2862%" y="421" width="0.0804%" height="15" fill="rgb(206,227,7)" fg:x="638" fg:w="1"/><text x="51.5362%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.2862%" y="405" width="0.0804%" height="15" fill="rgb(213,217,25)" fg:x="638" fg:w="1"/><text x="51.5362%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.2862%" y="389" width="0.0804%" height="15" fill="rgb(249,75,4)" fg:x="638" fg:w="1"/><text x="51.5362%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.2862%" y="373" width="0.0804%" height="15" fill="rgb(225,114,18)" fg:x="638" fg:w="1"/><text x="51.5362%" y="383.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="51.2862%" y="357" width="0.0804%" height="15" fill="rgb(211,162,40)" fg:x="638" fg:w="1"/><text x="51.5362%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="51.2862%" y="341" width="0.0804%" height="15" fill="rgb(206,49,29)" fg:x="638" fg:w="1"/><text x="51.5362%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.2862%" y="533" width="0.1608%" height="15" fill="rgb(244,8,6)" fg:x="638" fg:w="2"/><text x="51.5362%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.2862%" y="517" width="0.1608%" height="15" fill="rgb(231,194,28)" fg:x="638" fg:w="2"/><text x="51.5362%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.2862%" y="501" width="0.1608%" height="15" fill="rgb(210,69,5)" fg:x="638" fg:w="2"/><text x="51.5362%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.2862%" y="485" width="0.1608%" height="15" fill="rgb(216,186,12)" fg:x="638" fg:w="2"/><text x="51.5362%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.2862%" y="469" width="0.1608%" height="15" fill="rgb(238,61,15)" fg:x="638" fg:w="2"/><text x="51.5362%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="51.3666%" y="453" width="0.0804%" height="15" fill="rgb(226,104,1)" fg:x="639" fg:w="1"/><text x="51.6166%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.3666%" y="437" width="0.0804%" height="15" fill="rgb(229,128,15)" fg:x="639" fg:w="1"/><text x="51.6166%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.6077%" y="517" width="0.1608%" height="15" fill="rgb(247,110,15)" fg:x="642" fg:w="2"/><text x="51.8577%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.6077%" y="501" width="0.1608%" height="15" fill="rgb(210,74,48)" fg:x="642" fg:w="2"/><text x="51.8577%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.6077%" y="485" width="0.1608%" height="15" fill="rgb(246,121,10)" fg:x="642" fg:w="2"/><text x="51.8577%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.6077%" y="469" width="0.1608%" height="15" fill="rgb(214,156,37)" fg:x="642" fg:w="2"/><text x="51.8577%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.6077%" y="453" width="0.1608%" height="15" fill="rgb(214,210,34)" fg:x="642" fg:w="2"/><text x="51.8577%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.6077%" y="437" width="0.1608%" height="15" fill="rgb(237,93,35)" fg:x="642" fg:w="2"/><text x="51.8577%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.6077%" y="421" width="0.1608%" height="15" fill="rgb(206,36,8)" fg:x="642" fg:w="2"/><text x="51.8577%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="51.6077%" y="405" width="0.1608%" height="15" fill="rgb(208,151,12)" fg:x="642" fg:w="2"/><text x="51.8577%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.6881%" y="389" width="0.0804%" height="15" fill="rgb(225,133,52)" fg:x="643" fg:w="1"/><text x="51.9381%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.6881%" y="373" width="0.0804%" height="15" fill="rgb(231,71,53)" fg:x="643" fg:w="1"/><text x="51.9381%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.6881%" y="357" width="0.0804%" height="15" fill="rgb(243,76,21)" fg:x="643" fg:w="1"/><text x="51.9381%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.6881%" y="341" width="0.0804%" height="15" fill="rgb(252,144,3)" fg:x="643" fg:w="1"/><text x="51.9381%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="51.8489%" y="501" width="0.0804%" height="15" fill="rgb(231,199,10)" fg:x="645" fg:w="1"/><text x="52.0989%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.8489%" y="485" width="0.0804%" height="15" fill="rgb(215,18,11)" fg:x="645" fg:w="1"/><text x="52.0989%" y="495.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="51.9293%" y="501" width="0.4823%" height="15" fill="rgb(241,65,24)" fg:x="646" fg:w="6"/><text x="52.1793%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.16%)</title><rect x="52.4116%" y="501" width="0.1608%" height="15" fill="rgb(251,192,38)" fg:x="652" fg:w="2"/><text x="52.6616%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="52.4116%" y="485" width="0.1608%" height="15" fill="rgb(205,9,35)" fg:x="652" fg:w="2"/><text x="52.6616%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="51.7685%" y="517" width="0.8842%" height="15" fill="rgb(229,225,49)" fg:x="644" fg:w="11"/><text x="52.0185%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="52.5723%" y="501" width="0.0804%" height="15" fill="rgb(207,125,39)" fg:x="654" fg:w="1"/><text x="52.8223%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="52.5723%" y="485" width="0.0804%" height="15" fill="rgb(222,78,19)" fg:x="654" fg:w="1"/><text x="52.8223%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.5723%" y="469" width="0.0804%" height="15" fill="rgb(248,207,20)" fg:x="654" fg:w="1"/><text x="52.8223%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.5723%" y="453" width="0.0804%" height="15" fill="rgb(205,103,49)" fg:x="654" fg:w="1"/><text x="52.8223%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.5723%" y="437" width="0.0804%" height="15" fill="rgb(216,42,28)" fg:x="654" fg:w="1"/><text x="52.8223%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="52.5723%" y="421" width="0.0804%" height="15" fill="rgb(213,205,53)" fg:x="654" fg:w="1"/><text x="52.8223%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="52.6527%" y="517" width="0.0804%" height="15" fill="rgb(239,140,53)" fg:x="655" fg:w="1"/><text x="52.9027%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="52.7331%" y="517" width="0.2412%" height="15" fill="rgb(248,95,9)" fg:x="656" fg:w="3"/><text x="52.9831%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="52.7331%" y="501" width="0.2412%" height="15" fill="rgb(254,58,47)" fg:x="656" fg:w="3"/><text x="52.9831%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="52.8939%" y="485" width="0.0804%" height="15" fill="rgb(234,227,14)" fg:x="658" fg:w="1"/><text x="53.1439%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.8939%" y="469" width="0.0804%" height="15" fill="rgb(205,192,45)" fg:x="658" fg:w="1"/><text x="53.1439%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.1350%" y="469" width="0.0804%" height="15" fill="rgb(253,187,31)" fg:x="661" fg:w="1"/><text x="53.3850%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="53.2958%" y="437" width="0.4823%" height="15" fill="rgb(222,6,32)" fg:x="663" fg:w="6"/><text x="53.5458%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (5 samples, 0.40%)</title><rect x="53.3762%" y="421" width="0.4019%" height="15" fill="rgb(249,190,19)" fg:x="664" fg:w="5"/><text x="53.6262%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="53.4566%" y="405" width="0.3215%" height="15" fill="rgb(251,28,20)" fg:x="665" fg:w="4"/><text x="53.7066%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="53.5370%" y="389" width="0.2412%" height="15" fill="rgb(210,223,40)" fg:x="666" fg:w="3"/><text x="53.7870%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="53.5370%" y="373" width="0.2412%" height="15" fill="rgb(216,137,22)" fg:x="666" fg:w="3"/><text x="53.7870%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="53.5370%" y="357" width="0.2412%" height="15" fill="rgb(247,39,34)" fg:x="666" fg:w="3"/><text x="53.7870%" y="367.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="53.5370%" y="341" width="0.2412%" height="15" fill="rgb(239,43,50)" fg:x="666" fg:w="3"/><text x="53.7870%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="53.6174%" y="325" width="0.1608%" height="15" fill="rgb(241,212,9)" fg:x="667" fg:w="2"/><text x="53.8674%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="53.6174%" y="309" width="0.1608%" height="15" fill="rgb(205,8,2)" fg:x="667" fg:w="2"/><text x="53.8674%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="53.6977%" y="293" width="0.0804%" height="15" fill="rgb(217,173,54)" fg:x="668" fg:w="1"/><text x="53.9477%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.6977%" y="277" width="0.0804%" height="15" fill="rgb(208,149,52)" fg:x="668" fg:w="1"/><text x="53.9477%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.6977%" y="261" width="0.0804%" height="15" fill="rgb(239,99,40)" fg:x="668" fg:w="1"/><text x="53.9477%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.6977%" y="245" width="0.0804%" height="15" fill="rgb(233,214,26)" fg:x="668" fg:w="1"/><text x="53.9477%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="53.6977%" y="229" width="0.0804%" height="15" fill="rgb(231,225,37)" fg:x="668" fg:w="1"/><text x="53.9477%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="53.6977%" y="213" width="0.0804%" height="15" fill="rgb(252,55,35)" fg:x="668" fg:w="1"/><text x="53.9477%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="53.6977%" y="197" width="0.0804%" height="15" fill="rgb(239,43,18)" fg:x="668" fg:w="1"/><text x="53.9477%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="53.6977%" y="181" width="0.0804%" height="15" fill="rgb(251,125,49)" fg:x="668" fg:w="1"/><text x="53.9477%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.6977%" y="165" width="0.0804%" height="15" fill="rgb(212,83,54)" fg:x="668" fg:w="1"/><text x="53.9477%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.6977%" y="149" width="0.0804%" height="15" fill="rgb(250,75,6)" fg:x="668" fg:w="1"/><text x="53.9477%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.6977%" y="133" width="0.0804%" height="15" fill="rgb(252,36,40)" fg:x="668" fg:w="1"/><text x="53.9477%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="53.6977%" y="117" width="0.0804%" height="15" fill="rgb(230,91,51)" fg:x="668" fg:w="1"/><text x="53.9477%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.6977%" y="101" width="0.0804%" height="15" fill="rgb(212,92,28)" fg:x="668" fg:w="1"/><text x="53.9477%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6977%" y="85" width="0.0804%" height="15" fill="rgb(227,13,22)" fg:x="668" fg:w="1"/><text x="53.9477%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7781%" y="421" width="0.0804%" height="15" fill="rgb(239,204,32)" fg:x="669" fg:w="1"/><text x="54.0281%" y="431.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="53.8585%" y="357" width="0.0804%" height="15" fill="rgb(228,49,41)" fg:x="670" fg:w="1"/><text x="54.1085%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="53.9389%" y="325" width="0.0804%" height="15" fill="rgb(206,95,6)" fg:x="671" fg:w="1"/><text x="54.1889%" y="335.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="53.9389%" y="309" width="0.0804%" height="15" fill="rgb(251,20,14)" fg:x="671" fg:w="1"/><text x="54.1889%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="53.9389%" y="293" width="0.0804%" height="15" fill="rgb(214,99,28)" fg:x="671" fg:w="1"/><text x="54.1889%" y="303.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="53.9389%" y="277" width="0.0804%" height="15" fill="rgb(239,122,54)" fg:x="671" fg:w="1"/><text x="54.1889%" y="287.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="53.9389%" y="261" width="0.0804%" height="15" fill="rgb(218,217,46)" fg:x="671" fg:w="1"/><text x="54.1889%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.9389%" y="245" width="0.0804%" height="15" fill="rgb(249,106,28)" fg:x="671" fg:w="1"/><text x="54.1889%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.9389%" y="229" width="0.0804%" height="15" fill="rgb(250,158,18)" fg:x="671" fg:w="1"/><text x="54.1889%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.9389%" y="213" width="0.0804%" height="15" fill="rgb(226,137,29)" fg:x="671" fg:w="1"/><text x="54.1889%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.9389%" y="197" width="0.0804%" height="15" fill="rgb(210,188,1)" fg:x="671" fg:w="1"/><text x="54.1889%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="54.0193%" y="325" width="0.2412%" height="15" fill="rgb(227,84,42)" fg:x="672" fg:w="3"/><text x="54.2693%" y="335.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="54.0193%" y="309" width="0.2412%" height="15" fill="rgb(222,147,48)" fg:x="672" fg:w="3"/><text x="54.2693%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="54.0193%" y="293" width="0.2412%" height="15" fill="rgb(241,150,43)" fg:x="672" fg:w="3"/><text x="54.2693%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="54.0997%" y="277" width="0.1608%" height="15" fill="rgb(206,139,52)" fg:x="673" fg:w="2"/><text x="54.3497%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.0997%" y="261" width="0.1608%" height="15" fill="rgb(230,63,14)" fg:x="673" fg:w="2"/><text x="54.3497%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="54.0997%" y="245" width="0.1608%" height="15" fill="rgb(247,8,20)" fg:x="673" fg:w="2"/><text x="54.3497%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.0997%" y="229" width="0.1608%" height="15" fill="rgb(213,115,4)" fg:x="673" fg:w="2"/><text x="54.3497%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="54.0997%" y="213" width="0.1608%" height="15" fill="rgb(241,79,49)" fg:x="673" fg:w="2"/><text x="54.3497%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.0997%" y="197" width="0.1608%" height="15" fill="rgb(222,42,35)" fg:x="673" fg:w="2"/><text x="54.3497%" y="207.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.1801%" y="181" width="0.0804%" height="15" fill="rgb(247,59,23)" fg:x="674" fg:w="1"/><text x="54.4301%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2605%" y="261" width="0.0804%" height="15" fill="rgb(247,93,18)" fg:x="675" fg:w="1"/><text x="54.5105%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2605%" y="245" width="0.0804%" height="15" fill="rgb(249,107,47)" fg:x="675" fg:w="1"/><text x="54.5105%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.3408%" y="229" width="0.0804%" height="15" fill="rgb(219,27,1)" fg:x="676" fg:w="1"/><text x="54.5908%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.3408%" y="213" width="0.0804%" height="15" fill="rgb(217,82,32)" fg:x="676" fg:w="1"/><text x="54.5908%" y="223.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="54.2605%" y="309" width="0.3215%" height="15" fill="rgb(250,129,47)" fg:x="675" fg:w="4"/><text x="54.5105%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="54.2605%" y="293" width="0.3215%" height="15" fill="rgb(253,88,35)" fg:x="675" fg:w="4"/><text x="54.5105%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="54.2605%" y="277" width="0.3215%" height="15" fill="rgb(245,221,14)" fg:x="675" fg:w="4"/><text x="54.5105%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="54.3408%" y="261" width="0.2412%" height="15" fill="rgb(217,119,54)" fg:x="676" fg:w="3"/><text x="54.5908%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.3408%" y="245" width="0.2412%" height="15" fill="rgb(247,128,31)" fg:x="676" fg:w="3"/><text x="54.5908%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="54.4212%" y="229" width="0.1608%" height="15" fill="rgb(211,99,22)" fg:x="677" fg:w="2"/><text x="54.6712%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.4212%" y="213" width="0.1608%" height="15" fill="rgb(212,20,17)" fg:x="677" fg:w="2"/><text x="54.6712%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="54.4212%" y="197" width="0.1608%" height="15" fill="rgb(209,159,29)" fg:x="677" fg:w="2"/><text x="54.6712%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.4212%" y="181" width="0.1608%" height="15" fill="rgb(222,177,53)" fg:x="677" fg:w="2"/><text x="54.6712%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="54.4212%" y="165" width="0.1608%" height="15" fill="rgb(234,46,43)" fg:x="677" fg:w="2"/><text x="54.6712%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.4212%" y="149" width="0.1608%" height="15" fill="rgb(208,108,14)" fg:x="677" fg:w="2"/><text x="54.6712%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="54.4212%" y="133" width="0.1608%" height="15" fill="rgb(226,78,53)" fg:x="677" fg:w="2"/><text x="54.6712%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.4212%" y="117" width="0.1608%" height="15" fill="rgb(230,20,41)" fg:x="677" fg:w="2"/><text x="54.6712%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.5016%" y="101" width="0.0804%" height="15" fill="rgb(213,195,35)" fg:x="678" fg:w="1"/><text x="54.7516%" y="111.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.5016%" y="85" width="0.0804%" height="15" fill="rgb(242,62,36)" fg:x="678" fg:w="1"/><text x="54.7516%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="54.5820%" y="229" width="0.1608%" height="15" fill="rgb(222,210,37)" fg:x="679" fg:w="2"/><text x="54.8320%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.5820%" y="213" width="0.1608%" height="15" fill="rgb(232,107,19)" fg:x="679" fg:w="2"/><text x="54.8320%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="54.5820%" y="197" width="0.1608%" height="15" fill="rgb(235,85,17)" fg:x="679" fg:w="2"/><text x="54.8320%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.5820%" y="181" width="0.1608%" height="15" fill="rgb(219,195,31)" fg:x="679" fg:w="2"/><text x="54.8320%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="54.5820%" y="165" width="0.1608%" height="15" fill="rgb(231,183,30)" fg:x="679" fg:w="2"/><text x="54.8320%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.5820%" y="149" width="0.1608%" height="15" fill="rgb(212,0,11)" fg:x="679" fg:w="2"/><text x="54.8320%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.6624%" y="133" width="0.0804%" height="15" fill="rgb(249,53,54)" fg:x="680" fg:w="1"/><text x="54.9124%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.6624%" y="117" width="0.0804%" height="15" fill="rgb(211,118,13)" fg:x="680" fg:w="1"/><text x="54.9124%" y="127.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="54.6624%" y="101" width="0.0804%" height="15" fill="rgb(237,42,9)" fg:x="680" fg:w="1"/><text x="54.9124%" y="111.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.96%)</title><rect x="53.8585%" y="373" width="0.9646%" height="15" fill="rgb(227,68,32)" fg:x="670" fg:w="12"/><text x="54.1085%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.88%)</title><rect x="53.9389%" y="357" width="0.8842%" height="15" fill="rgb(238,10,7)" fg:x="671" fg:w="11"/><text x="54.1889%" y="367.50"></text></g><g><title>engine::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="53.9389%" y="341" width="0.8842%" height="15" fill="rgb(224,42,12)" fg:x="671" fg:w="11"/><text x="54.1889%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_str (7 samples, 0.56%)</title><rect x="54.2605%" y="325" width="0.5627%" height="15" fill="rgb(252,190,5)" fg:x="675" fg:w="7"/><text x="54.5105%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.5820%" y="309" width="0.2412%" height="15" fill="rgb(220,214,39)" fg:x="679" fg:w="3"/><text x="54.8320%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.5820%" y="293" width="0.2412%" height="15" fill="rgb(247,98,4)" fg:x="679" fg:w="3"/><text x="54.8320%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="54.5820%" y="277" width="0.2412%" height="15" fill="rgb(211,60,12)" fg:x="679" fg:w="3"/><text x="54.8320%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.5820%" y="261" width="0.2412%" height="15" fill="rgb(224,42,10)" fg:x="679" fg:w="3"/><text x="54.8320%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="54.5820%" y="245" width="0.2412%" height="15" fill="rgb(217,167,4)" fg:x="679" fg:w="3"/><text x="54.8320%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.7428%" y="229" width="0.0804%" height="15" fill="rgb(253,18,17)" fg:x="681" fg:w="1"/><text x="54.9928%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.7428%" y="213" width="0.0804%" height="15" fill="rgb(249,186,44)" fg:x="681" fg:w="1"/><text x="54.9928%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.7428%" y="197" width="0.0804%" height="15" fill="rgb(254,124,54)" fg:x="681" fg:w="1"/><text x="54.9928%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.7428%" y="181" width="0.0804%" height="15" fill="rgb(220,124,39)" fg:x="681" fg:w="1"/><text x="54.9928%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.7428%" y="165" width="0.0804%" height="15" fill="rgb(225,96,46)" fg:x="681" fg:w="1"/><text x="54.9928%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.7428%" y="149" width="0.0804%" height="15" fill="rgb(221,106,12)" fg:x="681" fg:w="1"/><text x="54.9928%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.8232%" y="309" width="0.0804%" height="15" fill="rgb(227,133,23)" fg:x="682" fg:w="1"/><text x="55.0732%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (22 samples, 1.77%)</title><rect x="53.2154%" y="453" width="1.7685%" height="15" fill="rgb(216,44,52)" fg:x="662" fg:w="22"/><text x="53.4654%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (15 samples, 1.21%)</title><rect x="53.7781%" y="437" width="1.2058%" height="15" fill="rgb(239,149,7)" fg:x="669" fg:w="15"/><text x="54.0281%" y="447.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (14 samples, 1.13%)</title><rect x="53.8585%" y="421" width="1.1254%" height="15" fill="rgb(211,157,31)" fg:x="670" fg:w="14"/><text x="54.1085%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (14 samples, 1.13%)</title><rect x="53.8585%" y="405" width="1.1254%" height="15" fill="rgb(206,215,22)" fg:x="670" fg:w="14"/><text x="54.1085%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.13%)</title><rect x="53.8585%" y="389" width="1.1254%" height="15" fill="rgb(208,113,15)" fg:x="670" fg:w="14"/><text x="54.1085%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.8232%" y="373" width="0.1608%" height="15" fill="rgb(207,189,15)" fg:x="682" fg:w="2"/><text x="55.0732%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.8232%" y="357" width="0.1608%" height="15" fill="rgb(231,115,4)" fg:x="682" fg:w="2"/><text x="55.0732%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.8232%" y="341" width="0.1608%" height="15" fill="rgb(253,117,2)" fg:x="682" fg:w="2"/><text x="55.0732%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.8232%" y="325" width="0.1608%" height="15" fill="rgb(248,48,24)" fg:x="682" fg:w="2"/><text x="55.0732%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.9035%" y="309" width="0.0804%" height="15" fill="rgb(241,28,46)" fg:x="683" fg:w="1"/><text x="55.1535%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.9035%" y="293" width="0.0804%" height="15" fill="rgb(216,165,52)" fg:x="683" fg:w="1"/><text x="55.1535%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="54.9839%" y="421" width="0.3215%" height="15" fill="rgb(220,222,34)" fg:x="684" fg:w="4"/><text x="55.2339%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="54.9839%" y="405" width="0.3215%" height="15" fill="rgb(247,222,49)" fg:x="684" fg:w="4"/><text x="55.2339%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="54.9839%" y="389" width="0.3215%" height="15" fill="rgb(240,10,31)" fg:x="684" fg:w="4"/><text x="55.2339%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="54.9839%" y="373" width="0.3215%" height="15" fill="rgb(221,199,35)" fg:x="684" fg:w="4"/><text x="55.2339%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="55.0643%" y="357" width="0.2412%" height="15" fill="rgb(230,223,11)" fg:x="685" fg:w="3"/><text x="55.3143%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="55.0643%" y="341" width="0.2412%" height="15" fill="rgb(218,82,45)" fg:x="685" fg:w="3"/><text x="55.3143%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="55.0643%" y="325" width="0.2412%" height="15" fill="rgb(233,213,33)" fg:x="685" fg:w="3"/><text x="55.3143%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="55.0643%" y="309" width="0.2412%" height="15" fill="rgb(210,143,52)" fg:x="685" fg:w="3"/><text x="55.3143%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="55.0643%" y="293" width="0.2412%" height="15" fill="rgb(206,95,4)" fg:x="685" fg:w="3"/><text x="55.3143%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="55.0643%" y="277" width="0.2412%" height="15" fill="rgb(246,164,46)" fg:x="685" fg:w="3"/><text x="55.3143%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="55.0643%" y="261" width="0.2412%" height="15" fill="rgb(213,210,47)" fg:x="685" fg:w="3"/><text x="55.3143%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="55.0643%" y="245" width="0.2412%" height="15" fill="rgb(210,12,38)" fg:x="685" fg:w="3"/><text x="55.3143%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="55.0643%" y="229" width="0.2412%" height="15" fill="rgb(252,192,54)" fg:x="685" fg:w="3"/><text x="55.3143%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="55.0643%" y="213" width="0.2412%" height="15" fill="rgb(242,92,6)" fg:x="685" fg:w="3"/><text x="55.3143%" y="223.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="55.0643%" y="197" width="0.2412%" height="15" fill="rgb(253,154,15)" fg:x="685" fg:w="3"/><text x="55.3143%" y="207.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="55.0643%" y="181" width="0.2412%" height="15" fill="rgb(209,20,43)" fg:x="685" fg:w="3"/><text x="55.3143%" y="191.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="55.3055%" y="357" width="0.0804%" height="15" fill="rgb(232,28,49)" fg:x="688" fg:w="1"/><text x="55.5555%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3055%" y="341" width="0.0804%" height="15" fill="rgb(248,131,53)" fg:x="688" fg:w="1"/><text x="55.5555%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3055%" y="325" width="0.0804%" height="15" fill="rgb(214,16,30)" fg:x="688" fg:w="1"/><text x="55.5555%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.3055%" y="309" width="0.0804%" height="15" fill="rgb(245,16,0)" fg:x="688" fg:w="1"/><text x="55.5555%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.3055%" y="293" width="0.0804%" height="15" fill="rgb(245,17,35)" fg:x="688" fg:w="1"/><text x="55.5555%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.3055%" y="277" width="0.0804%" height="15" fill="rgb(249,27,53)" fg:x="688" fg:w="1"/><text x="55.5555%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.3055%" y="261" width="0.0804%" height="15" fill="rgb(214,73,24)" fg:x="688" fg:w="1"/><text x="55.5555%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.3055%" y="245" width="0.0804%" height="15" fill="rgb(223,84,37)" fg:x="688" fg:w="1"/><text x="55.5555%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.3055%" y="229" width="0.0804%" height="15" fill="rgb(210,109,28)" fg:x="688" fg:w="1"/><text x="55.5555%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.3055%" y="213" width="0.0804%" height="15" fill="rgb(208,186,6)" fg:x="688" fg:w="1"/><text x="55.5555%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.3055%" y="197" width="0.0804%" height="15" fill="rgb(235,201,30)" fg:x="688" fg:w="1"/><text x="55.5555%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.3055%" y="181" width="0.0804%" height="15" fill="rgb(216,198,48)" fg:x="688" fg:w="1"/><text x="55.5555%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3055%" y="165" width="0.0804%" height="15" fill="rgb(254,186,25)" fg:x="688" fg:w="1"/><text x="55.5555%" y="175.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="55.3055%" y="405" width="0.1608%" height="15" fill="rgb(227,87,5)" fg:x="688" fg:w="2"/><text x="55.5555%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="55.3055%" y="389" width="0.1608%" height="15" fill="rgb(236,205,25)" fg:x="688" fg:w="2"/><text x="55.5555%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="55.3055%" y="373" width="0.1608%" height="15" fill="rgb(229,99,32)" fg:x="688" fg:w="2"/><text x="55.5555%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="55.3859%" y="357" width="0.0804%" height="15" fill="rgb(231,177,31)" fg:x="689" fg:w="1"/><text x="55.6359%" y="367.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="55.3859%" y="341" width="0.0804%" height="15" fill="rgb(246,15,2)" fg:x="689" fg:w="1"/><text x="55.6359%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="55.3055%" y="421" width="0.2412%" height="15" fill="rgb(207,39,15)" fg:x="688" fg:w="3"/><text x="55.5555%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="55.4662%" y="405" width="0.0804%" height="15" fill="rgb(207,44,9)" fg:x="690" fg:w="1"/><text x="55.7162%" y="415.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (33 samples, 2.65%)</title><rect x="53.2154%" y="469" width="2.6527%" height="15" fill="rgb(225,224,33)" fg:x="662" fg:w="33"/><text x="53.4654%" y="479.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.88%)</title><rect x="54.9839%" y="453" width="0.8842%" height="15" fill="rgb(252,151,3)" fg:x="684" fg:w="11"/><text x="55.2339%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="54.9839%" y="437" width="0.8842%" height="15" fill="rgb(211,140,13)" fg:x="684" fg:w="11"/><text x="55.2339%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="55.5466%" y="421" width="0.3215%" height="15" fill="rgb(239,225,17)" fg:x="691" fg:w="4"/><text x="55.7966%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.5466%" y="405" width="0.3215%" height="15" fill="rgb(223,170,52)" fg:x="691" fg:w="4"/><text x="55.7966%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="55.6270%" y="389" width="0.2412%" height="15" fill="rgb(212,64,21)" fg:x="692" fg:w="3"/><text x="55.8770%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="55.6270%" y="373" width="0.2412%" height="15" fill="rgb(236,126,48)" fg:x="692" fg:w="3"/><text x="55.8770%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="55.6270%" y="357" width="0.2412%" height="15" fill="rgb(209,135,11)" fg:x="692" fg:w="3"/><text x="55.8770%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="55.6270%" y="341" width="0.2412%" height="15" fill="rgb(228,126,40)" fg:x="692" fg:w="3"/><text x="55.8770%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.6270%" y="325" width="0.2412%" height="15" fill="rgb(205,196,36)" fg:x="692" fg:w="3"/><text x="55.8770%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.8682%" y="421" width="0.0804%" height="15" fill="rgb(243,160,33)" fg:x="695" fg:w="1"/><text x="56.1182%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.8682%" y="405" width="0.0804%" height="15" fill="rgb(210,84,20)" fg:x="695" fg:w="1"/><text x="56.1182%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.8682%" y="389" width="0.0804%" height="15" fill="rgb(228,213,30)" fg:x="695" fg:w="1"/><text x="56.1182%" y="399.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="56.0289%" y="357" width="0.0804%" height="15" fill="rgb(252,33,45)" fg:x="697" fg:w="1"/><text x="56.2789%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.0289%" y="341" width="0.0804%" height="15" fill="rgb(254,227,20)" fg:x="697" fg:w="1"/><text x="56.2789%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.0289%" y="325" width="0.0804%" height="15" fill="rgb(228,192,2)" fg:x="697" fg:w="1"/><text x="56.2789%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.0289%" y="309" width="0.0804%" height="15" fill="rgb(233,32,8)" fg:x="697" fg:w="1"/><text x="56.2789%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.0289%" y="293" width="0.0804%" height="15" fill="rgb(220,146,47)" fg:x="697" fg:w="1"/><text x="56.2789%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.0289%" y="277" width="0.0804%" height="15" fill="rgb(246,194,1)" fg:x="697" fg:w="1"/><text x="56.2789%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.0289%" y="261" width="0.0804%" height="15" fill="rgb(218,203,9)" fg:x="697" fg:w="1"/><text x="56.2789%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.0289%" y="245" width="0.0804%" height="15" fill="rgb(237,97,14)" fg:x="697" fg:w="1"/><text x="56.2789%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.0289%" y="229" width="0.0804%" height="15" fill="rgb(239,76,15)" fg:x="697" fg:w="1"/><text x="56.2789%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.0289%" y="213" width="0.0804%" height="15" fill="rgb(222,53,45)" fg:x="697" fg:w="1"/><text x="56.2789%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.0289%" y="197" width="0.0804%" height="15" fill="rgb(237,88,5)" fg:x="697" fg:w="1"/><text x="56.2789%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.0289%" y="181" width="0.0804%" height="15" fill="rgb(218,223,35)" fg:x="697" fg:w="1"/><text x="56.2789%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.0289%" y="165" width="0.0804%" height="15" fill="rgb(243,229,38)" fg:x="697" fg:w="1"/><text x="56.2789%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.1093%" y="277" width="0.0804%" height="15" fill="rgb(240,75,41)" fg:x="698" fg:w="1"/><text x="56.3593%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.2701%" y="213" width="0.0804%" height="15" fill="rgb(209,110,37)" fg:x="700" fg:w="1"/><text x="56.5201%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.2701%" y="197" width="0.0804%" height="15" fill="rgb(221,130,46)" fg:x="700" fg:w="1"/><text x="56.5201%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.3505%" y="149" width="0.0804%" height="15" fill="rgb(237,160,20)" fg:x="701" fg:w="1"/><text x="56.6005%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="56.1093%" y="293" width="0.4823%" height="15" fill="rgb(234,126,24)" fg:x="698" fg:w="6"/><text x="56.3593%" y="303.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="56.1897%" y="277" width="0.4019%" height="15" fill="rgb(207,177,9)" fg:x="699" fg:w="5"/><text x="56.4397%" y="287.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="56.1897%" y="261" width="0.4019%" height="15" fill="rgb(231,191,33)" fg:x="699" fg:w="5"/><text x="56.4397%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (5 samples, 0.40%)</title><rect x="56.1897%" y="245" width="0.4019%" height="15" fill="rgb(207,42,1)" fg:x="699" fg:w="5"/><text x="56.4397%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="56.1897%" y="229" width="0.4019%" height="15" fill="rgb(218,34,50)" fg:x="699" fg:w="5"/><text x="56.4397%" y="239.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="56.3505%" y="213" width="0.2412%" height="15" fill="rgb(254,126,39)" fg:x="701" fg:w="3"/><text x="56.6005%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.3505%" y="197" width="0.2412%" height="15" fill="rgb(251,17,26)" fg:x="701" fg:w="3"/><text x="56.6005%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="56.3505%" y="181" width="0.2412%" height="15" fill="rgb(252,215,34)" fg:x="701" fg:w="3"/><text x="56.6005%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.3505%" y="165" width="0.2412%" height="15" fill="rgb(217,120,44)" fg:x="701" fg:w="3"/><text x="56.6005%" y="175.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="56.4309%" y="149" width="0.1608%" height="15" fill="rgb(211,31,11)" fg:x="702" fg:w="2"/><text x="56.6809%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.4309%" y="133" width="0.1608%" height="15" fill="rgb(222,69,51)" fg:x="702" fg:w="2"/><text x="56.6809%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.4309%" y="117" width="0.1608%" height="15" fill="rgb(215,229,42)" fg:x="702" fg:w="2"/><text x="56.6809%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.4309%" y="101" width="0.1608%" height="15" fill="rgb(212,102,15)" fg:x="702" fg:w="2"/><text x="56.6809%" y="111.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.5113%" y="85" width="0.0804%" height="15" fill="rgb(205,179,41)" fg:x="703" fg:w="1"/><text x="56.7613%" y="95.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.5113%" y="69" width="0.0804%" height="15" fill="rgb(219,148,46)" fg:x="703" fg:w="1"/><text x="56.7613%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="56.5916%" y="277" width="0.0804%" height="15" fill="rgb(243,40,19)" fg:x="704" fg:w="1"/><text x="56.8416%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.5916%" y="261" width="0.0804%" height="15" fill="rgb(208,206,34)" fg:x="704" fg:w="1"/><text x="56.8416%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.6720%" y="277" width="0.0804%" height="15" fill="rgb(244,184,38)" fg:x="705" fg:w="1"/><text x="56.9220%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="56.7524%" y="277" width="0.0804%" height="15" fill="rgb(244,151,47)" fg:x="706" fg:w="1"/><text x="57.0024%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.7524%" y="261" width="0.0804%" height="15" fill="rgb(236,134,42)" fg:x="706" fg:w="1"/><text x="57.0024%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="56.7524%" y="245" width="0.0804%" height="15" fill="rgb(233,93,22)" fg:x="706" fg:w="1"/><text x="57.0024%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.8328%" y="181" width="0.0804%" height="15" fill="rgb(211,202,10)" fg:x="707" fg:w="1"/><text x="57.0828%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.8328%" y="165" width="0.0804%" height="15" fill="rgb(240,63,8)" fg:x="707" fg:w="1"/><text x="57.0828%" y="175.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (11 samples, 0.88%)</title><rect x="56.1093%" y="325" width="0.8842%" height="15" fill="rgb(214,9,4)" fg:x="698" fg:w="11"/><text x="56.3593%" y="335.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (11 samples, 0.88%)</title><rect x="56.1093%" y="309" width="0.8842%" height="15" fill="rgb(243,66,45)" fg:x="698" fg:w="11"/><text x="56.3593%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="56.5916%" y="293" width="0.4019%" height="15" fill="rgb(220,50,42)" fg:x="704" fg:w="5"/><text x="56.8416%" y="303.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="56.8328%" y="277" width="0.1608%" height="15" fill="rgb(220,134,27)" fg:x="707" fg:w="2"/><text x="57.0828%" y="287.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="56.8328%" y="261" width="0.1608%" height="15" fill="rgb(246,151,50)" fg:x="707" fg:w="2"/><text x="57.0828%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="56.8328%" y="245" width="0.1608%" height="15" fill="rgb(238,216,27)" fg:x="707" fg:w="2"/><text x="57.0828%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.8328%" y="229" width="0.1608%" height="15" fill="rgb(250,92,11)" fg:x="707" fg:w="2"/><text x="57.0828%" y="239.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="56.8328%" y="213" width="0.1608%" height="15" fill="rgb(248,183,6)" fg:x="707" fg:w="2"/><text x="57.0828%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.8328%" y="197" width="0.1608%" height="15" fill="rgb(211,204,50)" fg:x="707" fg:w="2"/><text x="57.0828%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="56.9132%" y="181" width="0.0804%" height="15" fill="rgb(252,55,47)" fg:x="708" fg:w="1"/><text x="57.1632%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.9132%" y="165" width="0.0804%" height="15" fill="rgb(240,198,32)" fg:x="708" fg:w="1"/><text x="57.1632%" y="175.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.9132%" y="149" width="0.0804%" height="15" fill="rgb(224,203,19)" fg:x="708" fg:w="1"/><text x="57.1632%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.9132%" y="133" width="0.0804%" height="15" fill="rgb(205,27,16)" fg:x="708" fg:w="1"/><text x="57.1632%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.9132%" y="117" width="0.0804%" height="15" fill="rgb(224,226,17)" fg:x="708" fg:w="1"/><text x="57.1632%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.9132%" y="101" width="0.0804%" height="15" fill="rgb(205,216,54)" fg:x="708" fg:w="1"/><text x="57.1632%" y="111.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="56.9132%" y="85" width="0.0804%" height="15" fill="rgb(248,168,46)" fg:x="708" fg:w="1"/><text x="57.1632%" y="95.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.9132%" y="69" width="0.0804%" height="15" fill="rgb(226,111,45)" fg:x="708" fg:w="1"/><text x="57.1632%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="57.1543%" y="261" width="0.4823%" height="15" fill="rgb(231,15,9)" fg:x="711" fg:w="6"/><text x="57.4043%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="57.1543%" y="245" width="0.4823%" height="15" fill="rgb(243,168,3)" fg:x="711" fg:w="6"/><text x="57.4043%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="57.3151%" y="229" width="0.3215%" height="15" fill="rgb(221,220,54)" fg:x="713" fg:w="4"/><text x="57.5651%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.4759%" y="213" width="0.1608%" height="15" fill="rgb(232,174,38)" fg:x="715" fg:w="2"/><text x="57.7259%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.4759%" y="197" width="0.1608%" height="15" fill="rgb(205,14,38)" fg:x="715" fg:w="2"/><text x="57.7259%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.4759%" y="181" width="0.1608%" height="15" fill="rgb(234,89,19)" fg:x="715" fg:w="2"/><text x="57.7259%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.4759%" y="165" width="0.1608%" height="15" fill="rgb(216,68,51)" fg:x="715" fg:w="2"/><text x="57.7259%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.4759%" y="149" width="0.1608%" height="15" fill="rgb(213,49,2)" fg:x="715" fg:w="2"/><text x="57.7259%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.4759%" y="133" width="0.1608%" height="15" fill="rgb(242,146,30)" fg:x="715" fg:w="2"/><text x="57.7259%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.4759%" y="117" width="0.1608%" height="15" fill="rgb(224,188,11)" fg:x="715" fg:w="2"/><text x="57.7259%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.4759%" y="101" width="0.1608%" height="15" fill="rgb(213,159,11)" fg:x="715" fg:w="2"/><text x="57.7259%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="57.4759%" y="85" width="0.1608%" height="15" fill="rgb(229,13,31)" fg:x="715" fg:w="2"/><text x="57.7259%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="57.4759%" y="69" width="0.1608%" height="15" fill="rgb(209,103,11)" fg:x="715" fg:w="2"/><text x="57.7259%" y="79.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="57.4759%" y="53" width="0.1608%" height="15" fill="rgb(206,3,4)" fg:x="715" fg:w="2"/><text x="57.7259%" y="63.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.4759%" y="37" width="0.1608%" height="15" fill="rgb(252,10,49)" fg:x="715" fg:w="2"/><text x="57.7259%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="57.0740%" y="277" width="0.6431%" height="15" fill="rgb(217,160,32)" fg:x="710" fg:w="8"/><text x="57.3240%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.6367%" y="261" width="0.0804%" height="15" fill="rgb(249,196,0)" fg:x="717" fg:w="1"/><text x="57.8867%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.6367%" y="245" width="0.0804%" height="15" fill="rgb(213,17,48)" fg:x="717" fg:w="1"/><text x="57.8867%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.6367%" y="229" width="0.0804%" height="15" fill="rgb(206,42,46)" fg:x="717" fg:w="1"/><text x="57.8867%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.6367%" y="213" width="0.0804%" height="15" fill="rgb(212,105,24)" fg:x="717" fg:w="1"/><text x="57.8867%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.6367%" y="197" width="0.0804%" height="15" fill="rgb(243,216,30)" fg:x="717" fg:w="1"/><text x="57.8867%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.6367%" y="181" width="0.0804%" height="15" fill="rgb(207,121,3)" fg:x="717" fg:w="1"/><text x="57.8867%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.6367%" y="165" width="0.0804%" height="15" fill="rgb(249,78,0)" fg:x="717" fg:w="1"/><text x="57.8867%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.6367%" y="149" width="0.0804%" height="15" fill="rgb(244,151,32)" fg:x="717" fg:w="1"/><text x="57.8867%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.6367%" y="133" width="0.0804%" height="15" fill="rgb(228,63,25)" fg:x="717" fg:w="1"/><text x="57.8867%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.6367%" y="117" width="0.0804%" height="15" fill="rgb(231,158,23)" fg:x="717" fg:w="1"/><text x="57.8867%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.6367%" y="101" width="0.0804%" height="15" fill="rgb(248,107,23)" fg:x="717" fg:w="1"/><text x="57.8867%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.6367%" y="85" width="0.0804%" height="15" fill="rgb(215,168,21)" fg:x="717" fg:w="1"/><text x="57.8867%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (11 samples, 0.88%)</title><rect x="56.9936%" y="325" width="0.8842%" height="15" fill="rgb(227,83,22)" fg:x="709" fg:w="11"/><text x="57.2436%" y="335.50"></text></g><g><title>kernel::model::props::load_props (11 samples, 0.88%)</title><rect x="56.9936%" y="309" width="0.8842%" height="15" fill="rgb(217,118,43)" fg:x="709" fg:w="11"/><text x="57.2436%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="57.0740%" y="293" width="0.8039%" height="15" fill="rgb(229,220,41)" fg:x="710" fg:w="10"/><text x="57.3240%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="57.7170%" y="277" width="0.1608%" height="15" fill="rgb(254,146,46)" fg:x="718" fg:w="2"/><text x="57.9670%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.7170%" y="261" width="0.1608%" height="15" fill="rgb(233,208,31)" fg:x="718" fg:w="2"/><text x="57.9670%" y="271.50"></text></g><g><title>engine::internal::EntityMap::add_entity (13 samples, 1.05%)</title><rect x="57.8778%" y="325" width="1.0450%" height="15" fill="rgb(222,162,7)" fg:x="720" fg:w="13"/><text x="58.1278%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 1.05%)</title><rect x="57.8778%" y="309" width="1.0450%" height="15" fill="rgb(230,117,45)" fg:x="720" fg:w="13"/><text x="58.1278%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 1.05%)</title><rect x="57.8778%" y="293" width="1.0450%" height="15" fill="rgb(239,163,6)" fg:x="720" fg:w="13"/><text x="58.1278%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 1.05%)</title><rect x="57.8778%" y="277" width="1.0450%" height="15" fill="rgb(246,130,17)" fg:x="720" fg:w="13"/><text x="58.1278%" y="287.50"></text></g><g><title>__libc_malloc (12 samples, 0.96%)</title><rect x="57.9582%" y="261" width="0.9646%" height="15" fill="rgb(216,84,5)" fg:x="721" fg:w="12"/><text x="58.2082%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.9228%" y="261" width="0.0804%" height="15" fill="rgb(230,200,21)" fg:x="733" fg:w="1"/><text x="59.1728%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0032%" y="261" width="0.0804%" height="15" fill="rgb(224,2,8)" fg:x="734" fg:w="1"/><text x="59.2532%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.1640%" y="213" width="0.0804%" height="15" fill="rgb(238,178,10)" fg:x="736" fg:w="1"/><text x="59.4140%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="59.0836%" y="229" width="0.2412%" height="15" fill="rgb(242,153,24)" fg:x="735" fg:w="3"/><text x="59.3336%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2444%" y="213" width="0.0804%" height="15" fill="rgb(242,32,48)" fg:x="737" fg:w="1"/><text x="59.4944%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="59.4051%" y="165" width="0.1608%" height="15" fill="rgb(227,36,0)" fg:x="739" fg:w="2"/><text x="59.6551%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.4051%" y="149" width="0.1608%" height="15" fill="rgb(251,33,35)" fg:x="739" fg:w="2"/><text x="59.6551%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.5659%" y="165" width="0.0804%" height="15" fill="rgb(232,168,51)" fg:x="741" fg:w="1"/><text x="59.8159%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.6463%" y="133" width="0.0804%" height="15" fill="rgb(228,56,10)" fg:x="742" fg:w="1"/><text x="59.8963%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.6463%" y="117" width="0.0804%" height="15" fill="rgb(231,10,26)" fg:x="742" fg:w="1"/><text x="59.8963%" y="127.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="58.9228%" y="309" width="0.8842%" height="15" fill="rgb(226,202,12)" fg:x="733" fg:w="11"/><text x="59.1728%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="58.9228%" y="293" width="0.8842%" height="15" fill="rgb(251,49,21)" fg:x="733" fg:w="11"/><text x="59.1728%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="58.9228%" y="277" width="0.8842%" height="15" fill="rgb(206,228,28)" fg:x="733" fg:w="11"/><text x="59.1728%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="59.0836%" y="261" width="0.7235%" height="15" fill="rgb(205,198,31)" fg:x="735" fg:w="9"/><text x="59.3336%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="59.0836%" y="245" width="0.7235%" height="15" fill="rgb(213,69,1)" fg:x="735" fg:w="9"/><text x="59.3336%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="59.3248%" y="229" width="0.4823%" height="15" fill="rgb(209,177,9)" fg:x="738" fg:w="6"/><text x="59.5748%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="59.3248%" y="213" width="0.4823%" height="15" fill="rgb(227,119,30)" fg:x="738" fg:w="6"/><text x="59.5748%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="59.3248%" y="197" width="0.4823%" height="15" fill="rgb(234,106,41)" fg:x="738" fg:w="6"/><text x="59.5748%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="59.3248%" y="181" width="0.4823%" height="15" fill="rgb(244,103,47)" fg:x="738" fg:w="6"/><text x="59.5748%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.6463%" y="165" width="0.1608%" height="15" fill="rgb(212,211,25)" fg:x="742" fg:w="2"/><text x="59.8963%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.6463%" y="149" width="0.1608%" height="15" fill="rgb(208,63,53)" fg:x="742" fg:w="2"/><text x="59.8963%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="59.7267%" y="133" width="0.0804%" height="15" fill="rgb(213,176,21)" fg:x="743" fg:w="1"/><text x="59.9767%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.7267%" y="117" width="0.0804%" height="15" fill="rgb(243,124,12)" fg:x="743" fg:w="1"/><text x="59.9767%" y="127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.9678%" y="245" width="0.0804%" height="15" fill="rgb(239,2,35)" fg:x="746" fg:w="1"/><text x="60.2178%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.9678%" y="229" width="0.0804%" height="15" fill="rgb(253,169,22)" fg:x="746" fg:w="1"/><text x="60.2178%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.2090%" y="133" width="0.0804%" height="15" fill="rgb(254,51,12)" fg:x="749" fg:w="1"/><text x="60.4590%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.2090%" y="117" width="0.0804%" height="15" fill="rgb(244,17,47)" fg:x="749" fg:w="1"/><text x="60.4590%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.2090%" y="101" width="0.0804%" height="15" fill="rgb(251,45,46)" fg:x="749" fg:w="1"/><text x="60.4590%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.2090%" y="85" width="0.0804%" height="15" fill="rgb(223,87,43)" fg:x="749" fg:w="1"/><text x="60.4590%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="60.2090%" y="69" width="0.0804%" height="15" fill="rgb(230,132,31)" fg:x="749" fg:w="1"/><text x="60.4590%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.2090%" y="53" width="0.0804%" height="15" fill="rgb(206,99,1)" fg:x="749" fg:w="1"/><text x="60.4590%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.2090%" y="165" width="0.1608%" height="15" fill="rgb(227,110,25)" fg:x="749" fg:w="2"/><text x="60.4590%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.2090%" y="149" width="0.1608%" height="15" fill="rgb(217,182,7)" fg:x="749" fg:w="2"/><text x="60.4590%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="60.2894%" y="133" width="0.0804%" height="15" fill="rgb(250,176,4)" fg:x="750" fg:w="1"/><text x="60.5394%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.2894%" y="117" width="0.0804%" height="15" fill="rgb(244,98,30)" fg:x="750" fg:w="1"/><text x="60.5394%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.2894%" y="101" width="0.0804%" height="15" fill="rgb(228,150,42)" fg:x="750" fg:w="1"/><text x="60.5394%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="60.2894%" y="85" width="0.0804%" height="15" fill="rgb(231,91,46)" fg:x="750" fg:w="1"/><text x="60.5394%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="60.0482%" y="229" width="0.4823%" height="15" fill="rgb(252,161,32)" fg:x="747" fg:w="6"/><text x="60.2982%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.1286%" y="213" width="0.4019%" height="15" fill="rgb(236,69,41)" fg:x="748" fg:w="5"/><text x="60.3786%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="60.1286%" y="197" width="0.4019%" height="15" fill="rgb(212,160,3)" fg:x="748" fg:w="5"/><text x="60.3786%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.1286%" y="181" width="0.4019%" height="15" fill="rgb(216,5,50)" fg:x="748" fg:w="5"/><text x="60.3786%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="60.3698%" y="165" width="0.1608%" height="15" fill="rgb(241,138,25)" fg:x="751" fg:w="2"/><text x="60.6198%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.5305%" y="229" width="0.0804%" height="15" fill="rgb(239,42,18)" fg:x="753" fg:w="1"/><text x="60.7805%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.5305%" y="213" width="0.0804%" height="15" fill="rgb(239,40,7)" fg:x="753" fg:w="1"/><text x="60.7805%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.5305%" y="197" width="0.0804%" height="15" fill="rgb(239,11,31)" fg:x="753" fg:w="1"/><text x="60.7805%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.5305%" y="181" width="0.0804%" height="15" fill="rgb(224,77,40)" fg:x="753" fg:w="1"/><text x="60.7805%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.5305%" y="165" width="0.0804%" height="15" fill="rgb(226,15,5)" fg:x="753" fg:w="1"/><text x="60.7805%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.6913%" y="149" width="0.0804%" height="15" fill="rgb(254,188,5)" fg:x="755" fg:w="1"/><text x="60.9413%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.96%)</title><rect x="59.8875%" y="277" width="0.9646%" height="15" fill="rgb(241,148,52)" fg:x="745" fg:w="12"/><text x="60.1375%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="59.8875%" y="261" width="0.9646%" height="15" fill="rgb(251,48,36)" fg:x="745" fg:w="12"/><text x="60.1375%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.80%)</title><rect x="60.0482%" y="245" width="0.8039%" height="15" fill="rgb(243,83,13)" fg:x="747" fg:w="10"/><text x="60.2982%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.6109%" y="229" width="0.2412%" height="15" fill="rgb(210,105,0)" fg:x="754" fg:w="3"/><text x="60.8609%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.6109%" y="213" width="0.2412%" height="15" fill="rgb(239,60,36)" fg:x="754" fg:w="3"/><text x="60.8609%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="60.6109%" y="197" width="0.2412%" height="15" fill="rgb(210,20,0)" fg:x="754" fg:w="3"/><text x="60.8609%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.6913%" y="181" width="0.1608%" height="15" fill="rgb(244,26,53)" fg:x="755" fg:w="2"/><text x="60.9413%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.6913%" y="165" width="0.1608%" height="15" fill="rgb(240,100,49)" fg:x="755" fg:w="2"/><text x="60.9413%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.7717%" y="149" width="0.0804%" height="15" fill="rgb(250,46,45)" fg:x="756" fg:w="1"/><text x="61.0217%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.7717%" y="133" width="0.0804%" height="15" fill="rgb(220,181,29)" fg:x="756" fg:w="1"/><text x="61.0217%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.7717%" y="117" width="0.0804%" height="15" fill="rgb(213,137,33)" fg:x="756" fg:w="1"/><text x="61.0217%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.7717%" y="101" width="0.0804%" height="15" fill="rgb(213,27,48)" fg:x="756" fg:w="1"/><text x="61.0217%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.7717%" y="85" width="0.0804%" height="15" fill="rgb(245,180,39)" fg:x="756" fg:w="1"/><text x="61.0217%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.7717%" y="69" width="0.0804%" height="15" fill="rgb(212,158,42)" fg:x="756" fg:w="1"/><text x="61.0217%" y="79.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.7717%" y="53" width="0.0804%" height="15" fill="rgb(228,193,18)" fg:x="756" fg:w="1"/><text x="61.0217%" y="63.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.8521%" y="277" width="0.0804%" height="15" fill="rgb(245,172,29)" fg:x="757" fg:w="1"/><text x="61.1021%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8521%" y="261" width="0.0804%" height="15" fill="rgb(207,98,24)" fg:x="757" fg:w="1"/><text x="61.1021%" y="271.50"></text></g><g><title>engine::internal::Entities::add_persisted (61 samples, 4.90%)</title><rect x="56.1093%" y="341" width="4.9035%" height="15" fill="rgb(249,92,26)" fg:x="698" fg:w="61"/><text x="56.3593%" y="351.50">engine..</text></g><g><title>kernel::model::entity::Entity::from_str (26 samples, 2.09%)</title><rect x="58.9228%" y="325" width="2.0900%" height="15" fill="rgb(217,176,26)" fg:x="733" fg:w="26"/><text x="59.1728%" y="335.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.21%)</title><rect x="59.8071%" y="309" width="1.2058%" height="15" fill="rgb(221,8,39)" fg:x="744" fg:w="15"/><text x="60.0571%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.21%)</title><rect x="59.8071%" y="293" width="1.2058%" height="15" fill="rgb(208,90,18)" fg:x="744" fg:w="15"/><text x="60.0571%" y="303.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="60.9325%" y="277" width="0.0804%" height="15" fill="rgb(207,202,30)" fg:x="758" fg:w="1"/><text x="61.1825%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0932%" y="325" width="0.0804%" height="15" fill="rgb(231,124,22)" fg:x="760" fg:w="1"/><text x="61.3432%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (66 samples, 5.31%)</title><rect x="55.9486%" y="421" width="5.3055%" height="15" fill="rgb(206,15,5)" fg:x="696" fg:w="66"/><text x="56.1986%" y="431.50">&lt;plugi..</text></g><g><title>core::iter::adapters::try_process (66 samples, 5.31%)</title><rect x="55.9486%" y="405" width="5.3055%" height="15" fill="rgb(239,16,52)" fg:x="696" fg:w="66"/><text x="56.1986%" y="415.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (66 samples, 5.31%)</title><rect x="55.9486%" y="389" width="5.3055%" height="15" fill="rgb(245,213,29)" fg:x="696" fg:w="66"/><text x="56.1986%" y="399.50">&lt;alloc..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (65 samples, 5.23%)</title><rect x="56.0289%" y="373" width="5.2251%" height="15" fill="rgb(213,203,36)" fg:x="697" fg:w="65"/><text x="56.2789%" y="383.50">&lt;engin..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (64 samples, 5.14%)</title><rect x="56.1093%" y="357" width="5.1447%" height="15" fill="rgb(209,55,18)" fg:x="698" fg:w="64"/><text x="56.3593%" y="367.50">&lt;engin..</text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="61.0129%" y="341" width="0.2412%" height="15" fill="rgb(207,133,49)" fg:x="759" fg:w="3"/><text x="61.2629%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.1736%" y="325" width="0.0804%" height="15" fill="rgb(240,33,46)" fg:x="761" fg:w="1"/><text x="61.4236%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="61.1736%" y="309" width="0.0804%" height="15" fill="rgb(212,35,2)" fg:x="761" fg:w="1"/><text x="61.4236%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.2540%" y="421" width="0.1608%" height="15" fill="rgb(231,119,28)" fg:x="762" fg:w="2"/><text x="61.5040%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.5756%" y="389" width="0.0804%" height="15" fill="rgb(252,178,7)" fg:x="766" fg:w="1"/><text x="61.8256%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.5756%" y="373" width="0.0804%" height="15" fill="rgb(251,91,4)" fg:x="766" fg:w="1"/><text x="61.8256%" y="383.50"></text></g><g><title>plugins_core::tools::get_contained_keys (74 samples, 5.95%)</title><rect x="55.8682%" y="469" width="5.9486%" height="15" fill="rgb(233,122,19)" fg:x="695" fg:w="74"/><text x="56.1182%" y="479.50">plugins_..</text></g><g><title>kernel::model::entry::Entry::scope (74 samples, 5.95%)</title><rect x="55.8682%" y="453" width="5.9486%" height="15" fill="rgb(231,208,46)" fg:x="695" fg:w="74"/><text x="56.1182%" y="463.50">kernel::..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (74 samples, 5.95%)</title><rect x="55.8682%" y="437" width="5.9486%" height="15" fill="rgb(243,15,41)" fg:x="695" fg:w="74"/><text x="56.1182%" y="447.50">kernel::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="61.4148%" y="421" width="0.4019%" height="15" fill="rgb(210,32,43)" fg:x="764" fg:w="5"/><text x="61.6648%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="61.4148%" y="405" width="0.4019%" height="15" fill="rgb(222,177,15)" fg:x="764" fg:w="5"/><text x="61.6648%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="61.6559%" y="389" width="0.1608%" height="15" fill="rgb(244,121,34)" fg:x="767" fg:w="2"/><text x="61.9059%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="61.6559%" y="373" width="0.1608%" height="15" fill="rgb(234,138,4)" fg:x="767" fg:w="2"/><text x="61.9059%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.7363%" y="357" width="0.0804%" height="15" fill="rgb(240,97,48)" fg:x="768" fg:w="1"/><text x="61.9863%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.7363%" y="341" width="0.0804%" height="15" fill="rgb(237,65,54)" fg:x="768" fg:w="1"/><text x="61.9863%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.7363%" y="325" width="0.0804%" height="15" fill="rgb(214,25,24)" fg:x="768" fg:w="1"/><text x="61.9863%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.7363%" y="309" width="0.0804%" height="15" fill="rgb(213,5,3)" fg:x="768" fg:w="1"/><text x="61.9863%" y="319.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="61.8971%" y="421" width="0.0804%" height="15" fill="rgb(219,81,29)" fg:x="770" fg:w="1"/><text x="62.1471%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.8971%" y="405" width="0.0804%" height="15" fill="rgb(220,43,48)" fg:x="770" fg:w="1"/><text x="62.1471%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="61.8971%" y="389" width="0.0804%" height="15" fill="rgb(239,157,2)" fg:x="770" fg:w="1"/><text x="62.1471%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (113 samples, 9.08%)</title><rect x="52.9743%" y="501" width="9.0836%" height="15" fill="rgb(213,104,43)" fg:x="659" fg:w="113"/><text x="53.2243%" y="511.50">&lt;alloc::vec::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (112 samples, 9.00%)</title><rect x="53.0547%" y="485" width="9.0032%" height="15" fill="rgb(237,84,9)" fg:x="660" fg:w="112"/><text x="53.3047%" y="495.50">&lt;core::iter::..</text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.24%)</title><rect x="61.8167%" y="469" width="0.2412%" height="15" fill="rgb(252,6,33)" fg:x="769" fg:w="3"/><text x="62.0667%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="61.8167%" y="453" width="0.2412%" height="15" fill="rgb(251,172,22)" fg:x="769" fg:w="3"/><text x="62.0667%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="61.8971%" y="437" width="0.1608%" height="15" fill="rgb(244,91,53)" fg:x="770" fg:w="2"/><text x="62.1471%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.9775%" y="421" width="0.0804%" height="15" fill="rgb(219,29,30)" fg:x="771" fg:w="1"/><text x="62.2275%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9775%" y="405" width="0.0804%" height="15" fill="rgb(213,3,15)" fg:x="771" fg:w="1"/><text x="62.2275%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.9775%" y="389" width="0.0804%" height="15" fill="rgb(208,25,28)" fg:x="771" fg:w="1"/><text x="62.2275%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.9775%" y="373" width="0.0804%" height="15" fill="rgb(252,144,25)" fg:x="771" fg:w="1"/><text x="62.2275%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="62.2186%" y="453" width="0.4019%" height="15" fill="rgb(226,220,25)" fg:x="774" fg:w="5"/><text x="62.4686%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="62.2990%" y="437" width="0.3215%" height="15" fill="rgb(212,131,28)" fg:x="775" fg:w="4"/><text x="62.5490%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="62.2990%" y="421" width="0.3215%" height="15" fill="rgb(219,143,52)" fg:x="775" fg:w="4"/><text x="62.5490%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="62.2990%" y="405" width="0.3215%" height="15" fill="rgb(215,56,7)" fg:x="775" fg:w="4"/><text x="62.5490%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="62.2990%" y="389" width="0.3215%" height="15" fill="rgb(239,59,51)" fg:x="775" fg:w="4"/><text x="62.5490%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="62.2990%" y="373" width="0.3215%" height="15" fill="rgb(209,215,4)" fg:x="775" fg:w="4"/><text x="62.5490%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="62.2990%" y="357" width="0.3215%" height="15" fill="rgb(221,118,39)" fg:x="775" fg:w="4"/><text x="62.5490%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="62.2990%" y="341" width="0.3215%" height="15" fill="rgb(236,6,44)" fg:x="775" fg:w="4"/><text x="62.5490%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="62.2990%" y="325" width="0.3215%" height="15" fill="rgb(216,122,9)" fg:x="775" fg:w="4"/><text x="62.5490%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="62.2990%" y="309" width="0.3215%" height="15" fill="rgb(244,134,42)" fg:x="775" fg:w="4"/><text x="62.5490%" y="319.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="62.2990%" y="293" width="0.3215%" height="15" fill="rgb(209,189,35)" fg:x="775" fg:w="4"/><text x="62.5490%" y="303.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="62.2990%" y="277" width="0.3215%" height="15" fill="rgb(250,47,36)" fg:x="775" fg:w="4"/><text x="62.5490%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="62.6206%" y="437" width="0.0804%" height="15" fill="rgb(252,112,4)" fg:x="779" fg:w="1"/><text x="62.8706%" y="447.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="62.6206%" y="421" width="0.0804%" height="15" fill="rgb(221,79,51)" fg:x="779" fg:w="1"/><text x="62.8706%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6206%" y="405" width="0.0804%" height="15" fill="rgb(232,65,53)" fg:x="779" fg:w="1"/><text x="62.8706%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6206%" y="389" width="0.0804%" height="15" fill="rgb(211,37,7)" fg:x="779" fg:w="1"/><text x="62.8706%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6206%" y="373" width="0.0804%" height="15" fill="rgb(234,221,18)" fg:x="779" fg:w="1"/><text x="62.8706%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.6206%" y="357" width="0.0804%" height="15" fill="rgb(220,158,26)" fg:x="779" fg:w="1"/><text x="62.8706%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.6206%" y="341" width="0.0804%" height="15" fill="rgb(220,70,6)" fg:x="779" fg:w="1"/><text x="62.8706%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.6206%" y="325" width="0.0804%" height="15" fill="rgb(250,39,48)" fg:x="779" fg:w="1"/><text x="62.8706%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.6206%" y="309" width="0.0804%" height="15" fill="rgb(206,40,27)" fg:x="779" fg:w="1"/><text x="62.8706%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.6206%" y="293" width="0.0804%" height="15" fill="rgb(247,80,36)" fg:x="779" fg:w="1"/><text x="62.8706%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.6206%" y="277" width="0.0804%" height="15" fill="rgb(222,9,20)" fg:x="779" fg:w="1"/><text x="62.8706%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.6206%" y="261" width="0.0804%" height="15" fill="rgb(217,26,45)" fg:x="779" fg:w="1"/><text x="62.8706%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.6206%" y="245" width="0.0804%" height="15" fill="rgb(221,67,14)" fg:x="779" fg:w="1"/><text x="62.8706%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.6206%" y="229" width="0.0804%" height="15" fill="rgb(248,100,24)" fg:x="779" fg:w="1"/><text x="62.8706%" y="239.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="62.6206%" y="213" width="0.0804%" height="15" fill="rgb(230,187,16)" fg:x="779" fg:w="1"/><text x="62.8706%" y="223.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.6206%" y="197" width="0.0804%" height="15" fill="rgb(205,108,13)" fg:x="779" fg:w="1"/><text x="62.8706%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7010%" y="421" width="0.0804%" height="15" fill="rgb(235,71,51)" fg:x="780" fg:w="1"/><text x="62.9510%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7010%" y="405" width="0.0804%" height="15" fill="rgb(251,172,48)" fg:x="780" fg:w="1"/><text x="62.9510%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.7010%" y="389" width="0.0804%" height="15" fill="rgb(240,96,49)" fg:x="780" fg:w="1"/><text x="62.9510%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.7010%" y="373" width="0.0804%" height="15" fill="rgb(235,46,36)" fg:x="780" fg:w="1"/><text x="62.9510%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.7010%" y="357" width="0.0804%" height="15" fill="rgb(244,3,49)" fg:x="780" fg:w="1"/><text x="62.9510%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.7010%" y="341" width="0.0804%" height="15" fill="rgb(206,78,54)" fg:x="780" fg:w="1"/><text x="62.9510%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.7010%" y="325" width="0.0804%" height="15" fill="rgb(208,85,42)" fg:x="780" fg:w="1"/><text x="62.9510%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.7010%" y="309" width="0.0804%" height="15" fill="rgb(219,196,21)" fg:x="780" fg:w="1"/><text x="62.9510%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.7010%" y="293" width="0.0804%" height="15" fill="rgb(238,19,9)" fg:x="780" fg:w="1"/><text x="62.9510%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.7010%" y="277" width="0.0804%" height="15" fill="rgb(206,86,13)" fg:x="780" fg:w="1"/><text x="62.9510%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.7010%" y="261" width="0.0804%" height="15" fill="rgb(214,123,40)" fg:x="780" fg:w="1"/><text x="62.9510%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="62.6206%" y="453" width="0.2412%" height="15" fill="rgb(243,53,5)" fg:x="779" fg:w="3"/><text x="62.8706%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="62.7010%" y="437" width="0.1608%" height="15" fill="rgb(254,186,31)" fg:x="780" fg:w="2"/><text x="62.9510%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="62.7814%" y="421" width="0.0804%" height="15" fill="rgb(221,216,25)" fg:x="781" fg:w="1"/><text x="63.0314%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.7814%" y="405" width="0.0804%" height="15" fill="rgb(248,107,42)" fg:x="781" fg:w="1"/><text x="63.0314%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.7814%" y="389" width="0.0804%" height="15" fill="rgb(221,85,43)" fg:x="781" fg:w="1"/><text x="63.0314%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.7814%" y="373" width="0.0804%" height="15" fill="rgb(225,34,24)" fg:x="781" fg:w="1"/><text x="63.0314%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="62.7814%" y="357" width="0.0804%" height="15" fill="rgb(211,119,1)" fg:x="781" fg:w="1"/><text x="63.0314%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7814%" y="341" width="0.0804%" height="15" fill="rgb(254,216,46)" fg:x="781" fg:w="1"/><text x="63.0314%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.0225%" y="389" width="0.0804%" height="15" fill="rgb(238,11,38)" fg:x="784" fg:w="1"/><text x="63.2725%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.0225%" y="373" width="0.0804%" height="15" fill="rgb(233,50,15)" fg:x="784" fg:w="1"/><text x="63.2725%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="64.4695%" y="101" width="0.0804%" height="15" fill="rgb(217,181,29)" fg:x="802" fg:w="1"/><text x="64.7195%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="64.3087%" y="117" width="0.3215%" height="15" fill="rgb(214,56,3)" fg:x="800" fg:w="4"/><text x="64.5587%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5498%" y="101" width="0.0804%" height="15" fill="rgb(230,69,45)" fg:x="803" fg:w="1"/><text x="64.7998%" y="111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5498%" y="85" width="0.0804%" height="15" fill="rgb(224,201,50)" fg:x="803" fg:w="1"/><text x="64.7998%" y="95.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.72%)</title><rect x="64.1479%" y="149" width="0.7235%" height="15" fill="rgb(217,228,18)" fg:x="798" fg:w="9"/><text x="64.3979%" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="64.2283%" y="133" width="0.6431%" height="15" fill="rgb(239,33,44)" fg:x="799" fg:w="8"/><text x="64.4783%" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="64.6302%" y="117" width="0.2412%" height="15" fill="rgb(248,210,23)" fg:x="804" fg:w="3"/><text x="64.8802%" y="127.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="64.6302%" y="101" width="0.2412%" height="15" fill="rgb(253,135,8)" fg:x="804" fg:w="3"/><text x="64.8802%" y="111.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="64.8714%" y="149" width="0.1608%" height="15" fill="rgb(217,98,21)" fg:x="807" fg:w="2"/><text x="65.1214%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.9518%" y="133" width="0.0804%" height="15" fill="rgb(253,130,21)" fg:x="808" fg:w="1"/><text x="65.2018%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.21%)</title><rect x="63.9871%" y="165" width="1.2058%" height="15" fill="rgb(207,81,54)" fg:x="796" fg:w="15"/><text x="64.2371%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.0322%" y="149" width="0.1608%" height="15" fill="rgb(232,48,33)" fg:x="809" fg:w="2"/><text x="65.2822%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.1125%" y="133" width="0.0804%" height="15" fill="rgb(211,9,35)" fg:x="810" fg:w="1"/><text x="65.3625%" y="143.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (18 samples, 1.45%)</title><rect x="63.9068%" y="197" width="1.4469%" height="15" fill="rgb(205,152,21)" fg:x="795" fg:w="18"/><text x="64.1568%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.37%)</title><rect x="63.9871%" y="181" width="1.3666%" height="15" fill="rgb(249,21,27)" fg:x="796" fg:w="17"/><text x="64.2371%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="65.1929%" y="165" width="0.1608%" height="15" fill="rgb(252,29,24)" fg:x="811" fg:w="2"/><text x="65.4429%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.1929%" y="149" width="0.1608%" height="15" fill="rgb(230,130,50)" fg:x="811" fg:w="2"/><text x="65.4429%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (20 samples, 1.61%)</title><rect x="63.8264%" y="245" width="1.6077%" height="15" fill="rgb(239,144,14)" fg:x="794" fg:w="20"/><text x="64.0764%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (20 samples, 1.61%)</title><rect x="63.8264%" y="229" width="1.6077%" height="15" fill="rgb(227,111,50)" fg:x="794" fg:w="20"/><text x="64.0764%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 1.61%)</title><rect x="63.8264%" y="213" width="1.6077%" height="15" fill="rgb(254,84,20)" fg:x="794" fg:w="20"/><text x="64.0764%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.3537%" y="197" width="0.0804%" height="15" fill="rgb(232,90,48)" fg:x="813" fg:w="1"/><text x="65.6037%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 2.01%)</title><rect x="63.6656%" y="261" width="2.0096%" height="15" fill="rgb(253,63,47)" fg:x="792" fg:w="25"/><text x="63.9156%" y="271.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="65.4341%" y="245" width="0.2412%" height="15" fill="rgb(251,146,35)" fg:x="814" fg:w="3"/><text x="65.6841%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="65.5145%" y="229" width="0.1608%" height="15" fill="rgb(229,192,35)" fg:x="815" fg:w="2"/><text x="65.7645%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 2.09%)</title><rect x="63.6656%" y="277" width="2.0900%" height="15" fill="rgb(225,68,9)" fg:x="792" fg:w="26"/><text x="63.9156%" y="287.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="65.6752%" y="261" width="0.0804%" height="15" fill="rgb(214,97,34)" fg:x="817" fg:w="1"/><text x="65.9252%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6752%" y="245" width="0.0804%" height="15" fill="rgb(253,31,26)" fg:x="817" fg:w="1"/><text x="65.9252%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="65.7556%" y="197" width="0.0804%" height="15" fill="rgb(225,151,47)" fg:x="818" fg:w="1"/><text x="66.0056%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.25%)</title><rect x="63.6656%" y="293" width="2.2508%" height="15" fill="rgb(206,185,9)" fg:x="792" fg:w="28"/><text x="63.9156%" y="303.50">&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="65.7556%" y="277" width="0.1608%" height="15" fill="rgb(249,65,17)" fg:x="818" fg:w="2"/><text x="66.0056%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="65.7556%" y="261" width="0.1608%" height="15" fill="rgb(220,110,10)" fg:x="818" fg:w="2"/><text x="66.0056%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="65.7556%" y="245" width="0.1608%" height="15" fill="rgb(222,198,49)" fg:x="818" fg:w="2"/><text x="66.0056%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="65.7556%" y="229" width="0.1608%" height="15" fill="rgb(239,81,13)" fg:x="818" fg:w="2"/><text x="66.0056%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="65.7556%" y="213" width="0.1608%" height="15" fill="rgb(216,128,11)" fg:x="818" fg:w="2"/><text x="66.0056%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.8360%" y="197" width="0.0804%" height="15" fill="rgb(247,156,8)" fg:x="819" fg:w="1"/><text x="66.0860%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8360%" y="181" width="0.0804%" height="15" fill="rgb(219,173,1)" fg:x="819" fg:w="1"/><text x="66.0860%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.9164%" y="293" width="0.1608%" height="15" fill="rgb(227,42,24)" fg:x="820" fg:w="2"/><text x="66.1664%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.9164%" y="277" width="0.1608%" height="15" fill="rgb(253,219,50)" fg:x="820" fg:w="2"/><text x="66.1664%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 2.49%)</title><rect x="63.6656%" y="309" width="2.4920%" height="15" fill="rgb(215,191,54)" fg:x="792" fg:w="31"/><text x="63.9156%" y="319.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.0772%" y="293" width="0.0804%" height="15" fill="rgb(238,83,12)" fg:x="822" fg:w="1"/><text x="66.3272%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.0772%" y="277" width="0.0804%" height="15" fill="rgb(205,124,9)" fg:x="822" fg:w="1"/><text x="66.3272%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (36 samples, 2.89%)</title><rect x="63.4244%" y="341" width="2.8939%" height="15" fill="rgb(253,174,7)" fg:x="789" fg:w="36"/><text x="63.6744%" y="351.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (33 samples, 2.65%)</title><rect x="63.6656%" y="325" width="2.6527%" height="15" fill="rgb(206,134,49)" fg:x="792" fg:w="33"/><text x="63.9156%" y="335.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="66.1576%" y="309" width="0.1608%" height="15" fill="rgb(221,89,20)" fg:x="823" fg:w="2"/><text x="66.4076%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.1576%" y="293" width="0.1608%" height="15" fill="rgb(240,205,13)" fg:x="823" fg:w="2"/><text x="66.4076%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.3183%" y="341" width="0.0804%" height="15" fill="rgb(237,174,32)" fg:x="825" fg:w="1"/><text x="66.5683%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="66.6399%" y="325" width="0.1608%" height="15" fill="rgb(226,12,15)" fg:x="829" fg:w="2"/><text x="66.8899%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 3.62%)</title><rect x="63.2637%" y="357" width="3.6174%" height="15" fill="rgb(245,160,52)" fg:x="787" fg:w="45"/><text x="63.5137%" y="367.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="66.3987%" y="341" width="0.4823%" height="15" fill="rgb(253,80,21)" fg:x="826" fg:w="6"/><text x="66.6487%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.8006%" y="325" width="0.0804%" height="15" fill="rgb(231,225,22)" fg:x="831" fg:w="1"/><text x="67.0506%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (50 samples, 4.02%)</title><rect x="63.1029%" y="389" width="4.0193%" height="15" fill="rgb(253,185,12)" fg:x="785" fg:w="50"/><text x="63.3529%" y="399.50">&lt;rpc..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (48 samples, 3.86%)</title><rect x="63.2637%" y="373" width="3.8585%" height="15" fill="rgb(234,197,21)" fg:x="787" fg:w="48"/><text x="63.5137%" y="383.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="66.8810%" y="357" width="0.2412%" height="15" fill="rgb(210,47,30)" fg:x="832" fg:w="3"/><text x="67.1310%" y="367.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="66.8810%" y="341" width="0.2412%" height="15" fill="rgb(246,139,27)" fg:x="832" fg:w="3"/><text x="67.1310%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.1222%" y="389" width="0.0804%" height="15" fill="rgb(226,130,16)" fg:x="835" fg:w="1"/><text x="67.3722%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55 samples, 4.42%)</title><rect x="62.9421%" y="405" width="4.4212%" height="15" fill="rgb(237,208,20)" fg:x="783" fg:w="55"/><text x="63.1921%" y="415.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.2026%" y="389" width="0.1608%" height="15" fill="rgb(245,186,28)" fg:x="836" fg:w="2"/><text x="67.4526%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.2830%" y="373" width="0.0804%" height="15" fill="rgb(238,105,39)" fg:x="837" fg:w="1"/><text x="67.5330%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (57 samples, 4.58%)</title><rect x="62.9421%" y="437" width="4.5820%" height="15" fill="rgb(253,228,11)" fg:x="783" fg:w="57"/><text x="63.1921%" y="447.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (57 samples, 4.58%)</title><rect x="62.9421%" y="421" width="4.5820%" height="15" fill="rgb(224,136,38)" fg:x="783" fg:w="57"/><text x="63.1921%" y="431.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="67.3633%" y="405" width="0.1608%" height="15" fill="rgb(211,3,25)" fg:x="838" fg:w="2"/><text x="67.6133%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4437%" y="389" width="0.0804%" height="15" fill="rgb(238,66,34)" fg:x="839" fg:w="1"/><text x="67.6937%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9260%" y="389" width="0.0804%" height="15" fill="rgb(223,188,11)" fg:x="845" fg:w="1"/><text x="68.1760%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="68.0064%" y="389" width="0.2412%" height="15" fill="rgb(221,10,35)" fg:x="846" fg:w="3"/><text x="68.2564%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.1672%" y="373" width="0.0804%" height="15" fill="rgb(223,18,44)" fg:x="848" fg:w="1"/><text x="68.4172%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="68.1672%" y="357" width="0.0804%" height="15" fill="rgb(220,97,41)" fg:x="848" fg:w="1"/><text x="68.4172%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.2476%" y="373" width="0.0804%" height="15" fill="rgb(206,95,45)" fg:x="849" fg:w="1"/><text x="68.4976%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="68.2476%" y="389" width="0.1608%" height="15" fill="rgb(209,96,13)" fg:x="849" fg:w="2"/><text x="68.4976%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="68.3280%" y="373" width="0.0804%" height="15" fill="rgb(237,39,34)" fg:x="850" fg:w="1"/><text x="68.5780%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="68.4084%" y="389" width="0.1608%" height="15" fill="rgb(213,49,47)" fg:x="851" fg:w="2"/><text x="68.6584%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.4887%" y="373" width="0.0804%" height="15" fill="rgb(205,107,27)" fg:x="852" fg:w="1"/><text x="68.7387%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.4887%" y="357" width="0.0804%" height="15" fill="rgb(212,142,9)" fg:x="852" fg:w="1"/><text x="68.7387%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="68.5691%" y="373" width="0.0804%" height="15" fill="rgb(226,182,0)" fg:x="853" fg:w="1"/><text x="68.8191%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="68.5691%" y="389" width="0.3215%" height="15" fill="rgb(231,3,53)" fg:x="853" fg:w="4"/><text x="68.8191%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="68.6495%" y="373" width="0.2412%" height="15" fill="rgb(246,111,28)" fg:x="854" fg:w="3"/><text x="68.8995%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="68.6495%" y="357" width="0.2412%" height="15" fill="rgb(254,183,7)" fg:x="854" fg:w="3"/><text x="68.8995%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="69.0514%" y="357" width="0.1608%" height="15" fill="rgb(247,177,28)" fg:x="859" fg:w="2"/><text x="69.3014%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.2926%" y="309" width="0.0804%" height="15" fill="rgb(244,43,1)" fg:x="862" fg:w="1"/><text x="69.5426%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="69.2122%" y="341" width="0.2412%" height="15" fill="rgb(207,2,35)" fg:x="861" fg:w="3"/><text x="69.4622%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.2926%" y="325" width="0.1608%" height="15" fill="rgb(213,83,22)" fg:x="862" fg:w="2"/><text x="69.5426%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.3730%" y="309" width="0.0804%" height="15" fill="rgb(246,212,13)" fg:x="863" fg:w="1"/><text x="69.6230%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="69.4534%" y="309" width="0.1608%" height="15" fill="rgb(213,127,46)" fg:x="864" fg:w="2"/><text x="69.7034%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5338%" y="293" width="0.0804%" height="15" fill="rgb(219,215,39)" fg:x="865" fg:w="1"/><text x="69.7838%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5338%" y="277" width="0.0804%" height="15" fill="rgb(227,99,17)" fg:x="865" fg:w="1"/><text x="69.7838%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5338%" y="261" width="0.0804%" height="15" fill="rgb(208,155,18)" fg:x="865" fg:w="1"/><text x="69.7838%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="69.4534%" y="341" width="0.2412%" height="15" fill="rgb(223,204,38)" fg:x="864" fg:w="3"/><text x="69.7034%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="69.4534%" y="325" width="0.2412%" height="15" fill="rgb(212,114,21)" fg:x="864" fg:w="3"/><text x="69.7034%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6141%" y="309" width="0.0804%" height="15" fill="rgb(250,74,13)" fg:x="866" fg:w="1"/><text x="69.8641%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.9357%" y="309" width="0.1608%" height="15" fill="rgb(234,7,1)" fg:x="870" fg:w="2"/><text x="70.1857%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.9357%" y="293" width="0.1608%" height="15" fill="rgb(207,138,31)" fg:x="870" fg:w="2"/><text x="70.1857%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.9357%" y="277" width="0.1608%" height="15" fill="rgb(215,186,42)" fg:x="870" fg:w="2"/><text x="70.1857%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="70.0965%" y="309" width="0.0804%" height="15" fill="rgb(229,205,49)" fg:x="872" fg:w="1"/><text x="70.3465%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="70.0965%" y="293" width="0.0804%" height="15" fill="rgb(216,156,32)" fg:x="872" fg:w="1"/><text x="70.3465%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.1768%" y="277" width="0.0804%" height="15" fill="rgb(238,7,21)" fg:x="873" fg:w="1"/><text x="70.4268%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.1768%" y="261" width="0.0804%" height="15" fill="rgb(249,190,22)" fg:x="873" fg:w="1"/><text x="70.4268%" y="271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="70.1768%" y="245" width="0.0804%" height="15" fill="rgb(253,51,31)" fg:x="873" fg:w="1"/><text x="70.4268%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="70.4180%" y="245" width="0.1608%" height="15" fill="rgb(237,90,54)" fg:x="876" fg:w="2"/><text x="70.6680%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.4984%" y="229" width="0.0804%" height="15" fill="rgb(250,214,33)" fg:x="877" fg:w="1"/><text x="70.7484%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="70.4180%" y="261" width="0.4823%" height="15" fill="rgb(237,10,49)" fg:x="876" fg:w="6"/><text x="70.6680%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="70.5788%" y="245" width="0.3215%" height="15" fill="rgb(241,56,36)" fg:x="878" fg:w="4"/><text x="70.8288%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="70.7395%" y="229" width="0.1608%" height="15" fill="rgb(227,164,12)" fg:x="880" fg:w="2"/><text x="70.9895%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="70.7395%" y="213" width="0.1608%" height="15" fill="rgb(249,149,35)" fg:x="880" fg:w="2"/><text x="70.9895%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8199%" y="197" width="0.0804%" height="15" fill="rgb(238,227,50)" fg:x="881" fg:w="1"/><text x="71.0699%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8199%" y="181" width="0.0804%" height="15" fill="rgb(235,102,45)" fg:x="881" fg:w="1"/><text x="71.0699%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.21%)</title><rect x="69.7749%" y="325" width="1.2058%" height="15" fill="rgb(211,10,38)" fg:x="868" fg:w="15"/><text x="70.0249%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="70.1768%" y="309" width="0.8039%" height="15" fill="rgb(219,77,48)" fg:x="873" fg:w="10"/><text x="70.4268%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="70.1768%" y="293" width="0.8039%" height="15" fill="rgb(246,6,15)" fg:x="873" fg:w="10"/><text x="70.4268%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="70.2572%" y="277" width="0.7235%" height="15" fill="rgb(207,220,2)" fg:x="874" fg:w="9"/><text x="70.5072%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9003%" y="261" width="0.0804%" height="15" fill="rgb(242,48,14)" fg:x="882" fg:w="1"/><text x="71.1503%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (26 samples, 2.09%)</title><rect x="69.2122%" y="357" width="2.0900%" height="15" fill="rgb(218,19,27)" fg:x="861" fg:w="26"/><text x="69.4622%" y="367.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.61%)</title><rect x="69.6945%" y="341" width="1.6077%" height="15" fill="rgb(228,0,35)" fg:x="867" fg:w="20"/><text x="69.9445%" y="351.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="70.9807%" y="325" width="0.3215%" height="15" fill="rgb(244,142,54)" fg:x="883" fg:w="4"/><text x="71.2307%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (33 samples, 2.65%)</title><rect x="68.9711%" y="373" width="2.6527%" height="15" fill="rgb(243,217,40)" fg:x="858" fg:w="33"/><text x="69.2211%" y="383.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="71.3023%" y="357" width="0.3215%" height="15" fill="rgb(207,114,16)" fg:x="887" fg:w="4"/><text x="71.5523%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5434%" y="341" width="0.0804%" height="15" fill="rgb(224,33,25)" fg:x="890" fg:w="1"/><text x="71.7934%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.6238%" y="373" width="0.1608%" height="15" fill="rgb(230,93,54)" fg:x="891" fg:w="2"/><text x="71.8738%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7846%" y="341" width="0.0804%" height="15" fill="rgb(224,56,24)" fg:x="893" fg:w="1"/><text x="72.0346%" y="351.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (113 samples, 9.08%)</title><rect x="62.8617%" y="453" width="9.0836%" height="15" fill="rgb(235,189,50)" fg:x="782" fg:w="113"/><text x="63.1117%" y="463.50">&lt;rpc_proto::J..</text></g><g><title>kernel::model::EntityPtr::to_json_value (55 samples, 4.42%)</title><rect x="67.5241%" y="437" width="4.4212%" height="15" fill="rgb(242,173,8)" fg:x="840" fg:w="55"/><text x="67.7741%" y="447.50">kerne..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (54 samples, 4.34%)</title><rect x="67.6045%" y="421" width="4.3408%" height="15" fill="rgb(209,206,10)" fg:x="841" fg:w="54"/><text x="67.8545%" y="431.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (54 samples, 4.34%)</title><rect x="67.6045%" y="405" width="4.3408%" height="15" fill="rgb(213,182,44)" fg:x="841" fg:w="54"/><text x="67.8545%" y="415.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 3.05%)</title><rect x="68.8907%" y="389" width="3.0547%" height="15" fill="rgb(243,51,15)" fg:x="857" fg:w="38"/><text x="69.1407%" y="399.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.7846%" y="373" width="0.1608%" height="15" fill="rgb(241,13,14)" fg:x="893" fg:w="2"/><text x="72.0346%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.7846%" y="357" width="0.1608%" height="15" fill="rgb(239,147,24)" fg:x="893" fg:w="2"/><text x="72.0346%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="71.8650%" y="341" width="0.0804%" height="15" fill="rgb(223,129,16)" fg:x="894" fg:w="1"/><text x="72.1150%" y="351.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (256 samples, 20.58%)</title><rect x="51.4469%" y="533" width="20.5788%" height="15" fill="rgb(209,169,13)" fg:x="640" fg:w="256"/><text x="51.6969%" y="543.50">&lt;plugins_rpc::sessions::SessionS..</text></g><g><title>core::iter::adapters::try_process (237 samples, 19.05%)</title><rect x="52.9743%" y="517" width="19.0514%" height="15" fill="rgb(235,159,41)" fg:x="659" fg:w="237"/><text x="53.2243%" y="527.50">core::iter::adapters::try_proc..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (124 samples, 9.97%)</title><rect x="62.0579%" y="501" width="9.9678%" height="15" fill="rgb(223,219,48)" fg:x="772" fg:w="124"/><text x="62.3079%" y="511.50">alloc::vec::in..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (124 samples, 9.97%)</title><rect x="62.0579%" y="485" width="9.9678%" height="15" fill="rgb(236,80,13)" fg:x="772" fg:w="124"/><text x="62.3079%" y="495.50">&lt;core::iter::a..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (123 samples, 9.89%)</title><rect x="62.1383%" y="469" width="9.8875%" height="15" fill="rgb(213,5,6)" fg:x="773" fg:w="123"/><text x="62.3883%" y="479.50">plugins_rpc::s..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9453%" y="453" width="0.0804%" height="15" fill="rgb(205,59,21)" fg:x="895" fg:w="1"/><text x="72.1953%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0257%" y="533" width="0.0804%" height="15" fill="rgb(247,137,35)" fg:x="896" fg:w="1"/><text x="72.2757%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1061%" y="533" width="0.0804%" height="15" fill="rgb(242,208,28)" fg:x="897" fg:w="1"/><text x="72.3561%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="72.1865%" y="533" width="0.0804%" height="15" fill="rgb(245,62,25)" fg:x="898" fg:w="1"/><text x="72.4365%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.1865%" y="517" width="0.0804%" height="15" fill="rgb(233,99,54)" fg:x="898" fg:w="1"/><text x="72.4365%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.1865%" y="501" width="0.0804%" height="15" fill="rgb(213,10,37)" fg:x="898" fg:w="1"/><text x="72.4365%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2669%" y="485" width="0.0804%" height="15" fill="rgb(235,143,30)" fg:x="899" fg:w="1"/><text x="72.5169%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (290 samples, 23.31%)</title><rect x="49.1158%" y="581" width="23.3119%" height="15" fill="rgb(250,146,33)" fg:x="611" fg:w="290"/><text x="49.3658%" y="591.50">kernel::plugins::SessionPlugins::have..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (290 samples, 23.31%)</title><rect x="49.1158%" y="565" width="23.3119%" height="15" fill="rgb(226,198,42)" fg:x="611" fg:w="290"/><text x="49.3658%" y="575.50">&lt;plugins_dynlib::DynamicPlugin as ker..</text></g><g><title>plugins_rpc::querying::have_surroundings (263 samples, 21.14%)</title><rect x="51.2862%" y="549" width="21.1415%" height="15" fill="rgb(222,55,6)" fg:x="638" fg:w="263"/><text x="51.5362%" y="559.50">plugins_rpc::querying::have_surro..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="72.2669%" y="533" width="0.1608%" height="15" fill="rgb(213,224,31)" fg:x="899" fg:w="2"/><text x="72.5169%" y="543.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::into (2 samples, 0.16%)</title><rect x="72.2669%" y="517" width="0.1608%" height="15" fill="rgb(226,103,35)" fg:x="899" fg:w="2"/><text x="72.5169%" y="527.50"></text></g><g><title>kernel::model::base::&lt;impl core::convert::From&lt;kernel::model::base::EntityKey&gt; for alloc::string::String&gt;::from (2 samples, 0.16%)</title><rect x="72.2669%" y="501" width="0.1608%" height="15" fill="rgb(205,66,45)" fg:x="899" fg:w="2"/><text x="72.5169%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="72.3473%" y="485" width="0.0804%" height="15" fill="rgb(226,51,42)" fg:x="900" fg:w="1"/><text x="72.5973%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.3473%" y="469" width="0.0804%" height="15" fill="rgb(206,69,1)" fg:x="900" fg:w="1"/><text x="72.5973%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.3473%" y="453" width="0.0804%" height="15" fill="rgb(213,228,47)" fg:x="900" fg:w="1"/><text x="72.5973%" y="463.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (359 samples, 28.86%)</title><rect x="43.8103%" y="597" width="28.8585%" height="15" fill="rgb(224,204,18)" fg:x="545" fg:w="359"/><text x="44.0603%" y="607.50">&lt;engine::perform::StandardPerformer as kernel:..</text></g><g><title>kernel::plugins::mw::apply_middleware (3 samples, 0.24%)</title><rect x="72.4277%" y="581" width="0.2412%" height="15" fill="rgb(253,187,47)" fg:x="901" fg:w="3"/><text x="72.6777%" y="591.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="72.4277%" y="565" width="0.2412%" height="15" fill="rgb(232,61,2)" fg:x="901" fg:w="3"/><text x="72.6777%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="72.4277%" y="549" width="0.2412%" height="15" fill="rgb(213,132,35)" fg:x="901" fg:w="3"/><text x="72.6777%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="72.4277%" y="533" width="0.2412%" height="15" fill="rgb(247,33,21)" fg:x="901" fg:w="3"/><text x="72.6777%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="72.4277%" y="517" width="0.2412%" height="15" fill="rgb(233,71,46)" fg:x="901" fg:w="3"/><text x="72.6777%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="72.4277%" y="501" width="0.2412%" height="15" fill="rgb(222,173,43)" fg:x="901" fg:w="3"/><text x="72.6777%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="72.4277%" y="485" width="0.2412%" height="15" fill="rgb(249,218,47)" fg:x="901" fg:w="3"/><text x="72.6777%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="72.4277%" y="469" width="0.2412%" height="15" fill="rgb(254,185,48)" fg:x="901" fg:w="3"/><text x="72.6777%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="72.5080%" y="453" width="0.1608%" height="15" fill="rgb(252,165,50)" fg:x="902" fg:w="2"/><text x="72.7580%" y="463.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="72.5884%" y="437" width="0.0804%" height="15" fill="rgb(206,219,6)" fg:x="903" fg:w="1"/><text x="72.8384%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5884%" y="421" width="0.0804%" height="15" fill="rgb(212,212,45)" fg:x="903" fg:w="1"/><text x="72.8384%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5884%" y="405" width="0.0804%" height="15" fill="rgb(221,31,9)" fg:x="903" fg:w="1"/><text x="72.8384%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5884%" y="389" width="0.0804%" height="15" fill="rgb(234,198,39)" fg:x="903" fg:w="1"/><text x="72.8384%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.5884%" y="373" width="0.0804%" height="15" fill="rgb(252,145,46)" fg:x="903" fg:w="1"/><text x="72.8384%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.5884%" y="357" width="0.0804%" height="15" fill="rgb(237,149,0)" fg:x="903" fg:w="1"/><text x="72.8384%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.5884%" y="341" width="0.0804%" height="15" fill="rgb(229,65,5)" fg:x="903" fg:w="1"/><text x="72.8384%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.5884%" y="325" width="0.0804%" height="15" fill="rgb(235,60,36)" fg:x="903" fg:w="1"/><text x="72.8384%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.5884%" y="309" width="0.0804%" height="15" fill="rgb(222,47,18)" fg:x="903" fg:w="1"/><text x="72.8384%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.5884%" y="293" width="0.0804%" height="15" fill="rgb(235,114,22)" fg:x="903" fg:w="1"/><text x="72.8384%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.5884%" y="277" width="0.0804%" height="15" fill="rgb(209,167,11)" fg:x="903" fg:w="1"/><text x="72.8384%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.5884%" y="261" width="0.0804%" height="15" fill="rgb(251,73,18)" fg:x="903" fg:w="1"/><text x="72.8384%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.5884%" y="245" width="0.0804%" height="15" fill="rgb(217,60,17)" fg:x="903" fg:w="1"/><text x="72.8384%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.7492%" y="501" width="0.0804%" height="15" fill="rgb(224,36,37)" fg:x="905" fg:w="1"/><text x="72.9992%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.7492%" y="485" width="0.0804%" height="15" fill="rgb(211,21,32)" fg:x="905" fg:w="1"/><text x="72.9992%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.7492%" y="469" width="0.0804%" height="15" fill="rgb(231,55,48)" fg:x="905" fg:w="1"/><text x="72.9992%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.7492%" y="453" width="0.0804%" height="15" fill="rgb(227,42,18)" fg:x="905" fg:w="1"/><text x="72.9992%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.7492%" y="437" width="0.0804%" height="15" fill="rgb(217,2,27)" fg:x="905" fg:w="1"/><text x="72.9992%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.7492%" y="421" width="0.0804%" height="15" fill="rgb(251,138,23)" fg:x="905" fg:w="1"/><text x="72.9992%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.7492%" y="405" width="0.0804%" height="15" fill="rgb(226,184,11)" fg:x="905" fg:w="1"/><text x="72.9992%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.7492%" y="389" width="0.0804%" height="15" fill="rgb(242,142,12)" fg:x="905" fg:w="1"/><text x="72.9992%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.7492%" y="373" width="0.0804%" height="15" fill="rgb(234,187,18)" fg:x="905" fg:w="1"/><text x="72.9992%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.7492%" y="357" width="0.0804%" height="15" fill="rgb(237,44,42)" fg:x="905" fg:w="1"/><text x="72.9992%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.7492%" y="341" width="0.0804%" height="15" fill="rgb(211,90,23)" fg:x="905" fg:w="1"/><text x="72.9992%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.7492%" y="325" width="0.0804%" height="15" fill="rgb(207,81,18)" fg:x="905" fg:w="1"/><text x="72.9992%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.7492%" y="309" width="0.0804%" height="15" fill="rgb(222,107,28)" fg:x="905" fg:w="1"/><text x="72.9992%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.7492%" y="293" width="0.0804%" height="15" fill="rgb(237,83,52)" fg:x="905" fg:w="1"/><text x="72.9992%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.8296%" y="485" width="0.0804%" height="15" fill="rgb(208,67,11)" fg:x="906" fg:w="1"/><text x="73.0796%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.9100%" y="485" width="0.0804%" height="15" fill="rgb(249,157,49)" fg:x="907" fg:w="1"/><text x="73.1600%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="72.7492%" y="533" width="0.4019%" height="15" fill="rgb(243,200,1)" fg:x="905" fg:w="5"/><text x="72.9992%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="72.7492%" y="517" width="0.4019%" height="15" fill="rgb(225,162,37)" fg:x="905" fg:w="5"/><text x="72.9992%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="72.8296%" y="501" width="0.3215%" height="15" fill="rgb(242,92,13)" fg:x="906" fg:w="4"/><text x="73.0796%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="72.9904%" y="485" width="0.1608%" height="15" fill="rgb(220,43,36)" fg:x="908" fg:w="2"/><text x="73.2404%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.9904%" y="469" width="0.1608%" height="15" fill="rgb(213,165,48)" fg:x="908" fg:w="2"/><text x="73.2404%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="72.9904%" y="453" width="0.1608%" height="15" fill="rgb(227,200,9)" fg:x="908" fg:w="2"/><text x="73.2404%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.9904%" y="437" width="0.1608%" height="15" fill="rgb(221,222,28)" fg:x="908" fg:w="2"/><text x="73.2404%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.0707%" y="421" width="0.0804%" height="15" fill="rgb(223,142,26)" fg:x="909" fg:w="1"/><text x="73.3207%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.0707%" y="405" width="0.0804%" height="15" fill="rgb(243,46,9)" fg:x="909" fg:w="1"/><text x="73.3207%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.0707%" y="389" width="0.0804%" height="15" fill="rgb(250,56,11)" fg:x="909" fg:w="1"/><text x="73.3207%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.0707%" y="373" width="0.0804%" height="15" fill="rgb(229,113,5)" fg:x="909" fg:w="1"/><text x="73.3207%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.2315%" y="389" width="0.0804%" height="15" fill="rgb(244,108,28)" fg:x="911" fg:w="1"/><text x="73.4815%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="73.1511%" y="533" width="0.2412%" height="15" fill="rgb(242,119,50)" fg:x="910" fg:w="3"/><text x="73.4011%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="73.1511%" y="517" width="0.2412%" height="15" fill="rgb(224,164,23)" fg:x="910" fg:w="3"/><text x="73.4011%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="73.1511%" y="501" width="0.2412%" height="15" fill="rgb(214,227,44)" fg:x="910" fg:w="3"/><text x="73.4011%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="73.2315%" y="485" width="0.1608%" height="15" fill="rgb(238,202,4)" fg:x="911" fg:w="2"/><text x="73.4815%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.2315%" y="469" width="0.1608%" height="15" fill="rgb(213,190,30)" fg:x="911" fg:w="2"/><text x="73.4815%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="73.2315%" y="453" width="0.1608%" height="15" fill="rgb(239,15,2)" fg:x="911" fg:w="2"/><text x="73.4815%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.2315%" y="437" width="0.1608%" height="15" fill="rgb(249,229,4)" fg:x="911" fg:w="2"/><text x="73.4815%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="73.2315%" y="421" width="0.1608%" height="15" fill="rgb(239,75,44)" fg:x="911" fg:w="2"/><text x="73.4815%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.2315%" y="405" width="0.1608%" height="15" fill="rgb(251,206,23)" fg:x="911" fg:w="2"/><text x="73.4815%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.3119%" y="389" width="0.0804%" height="15" fill="rgb(215,208,0)" fg:x="912" fg:w="1"/><text x="73.5619%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3119%" y="373" width="0.0804%" height="15" fill="rgb(230,75,50)" fg:x="912" fg:w="1"/><text x="73.5619%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.3923%" y="469" width="0.0804%" height="15" fill="rgb(246,180,39)" fg:x="913" fg:w="1"/><text x="73.6423%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.4727%" y="469" width="0.0804%" height="15" fill="rgb(249,175,24)" fg:x="914" fg:w="1"/><text x="73.7227%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.5531%" y="437" width="0.0804%" height="15" fill="rgb(247,176,22)" fg:x="915" fg:w="1"/><text x="73.8031%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.5531%" y="421" width="0.0804%" height="15" fill="rgb(241,100,24)" fg:x="915" fg:w="1"/><text x="73.8031%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.6334%" y="405" width="0.0804%" height="15" fill="rgb(233,4,35)" fg:x="916" fg:w="1"/><text x="73.8834%" y="415.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="73.3923%" y="517" width="0.5627%" height="15" fill="rgb(211,164,46)" fg:x="913" fg:w="7"/><text x="73.6423%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="73.3923%" y="501" width="0.5627%" height="15" fill="rgb(242,99,53)" fg:x="913" fg:w="7"/><text x="73.6423%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="73.3923%" y="485" width="0.5627%" height="15" fill="rgb(243,45,33)" fg:x="913" fg:w="7"/><text x="73.6423%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="73.5531%" y="469" width="0.4019%" height="15" fill="rgb(217,55,21)" fg:x="915" fg:w="5"/><text x="73.8031%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="73.5531%" y="453" width="0.4019%" height="15" fill="rgb(245,145,46)" fg:x="915" fg:w="5"/><text x="73.8031%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="73.6334%" y="437" width="0.3215%" height="15" fill="rgb(215,112,45)" fg:x="916" fg:w="4"/><text x="73.8834%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="73.6334%" y="421" width="0.3215%" height="15" fill="rgb(228,104,16)" fg:x="916" fg:w="4"/><text x="73.8834%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="73.7138%" y="405" width="0.2412%" height="15" fill="rgb(239,186,38)" fg:x="917" fg:w="3"/><text x="73.9638%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="73.7138%" y="389" width="0.2412%" height="15" fill="rgb(228,38,35)" fg:x="917" fg:w="3"/><text x="73.9638%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.7942%" y="373" width="0.1608%" height="15" fill="rgb(251,42,40)" fg:x="918" fg:w="2"/><text x="74.0442%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.8746%" y="357" width="0.0804%" height="15" fill="rgb(210,51,19)" fg:x="919" fg:w="1"/><text x="74.1246%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1158%" y="485" width="0.0804%" height="15" fill="rgb(236,94,42)" fg:x="922" fg:w="1"/><text x="74.3658%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.1961%" y="453" width="0.0804%" height="15" fill="rgb(239,167,16)" fg:x="923" fg:w="1"/><text x="74.4461%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.2765%" y="373" width="0.0804%" height="15" fill="rgb(252,175,31)" fg:x="924" fg:w="1"/><text x="74.5265%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="74.1961%" y="485" width="0.2412%" height="15" fill="rgb(206,166,30)" fg:x="923" fg:w="3"/><text x="74.4461%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1961%" y="469" width="0.2412%" height="15" fill="rgb(206,209,37)" fg:x="923" fg:w="3"/><text x="74.4461%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.2765%" y="453" width="0.1608%" height="15" fill="rgb(226,91,4)" fg:x="924" fg:w="2"/><text x="74.5265%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="74.2765%" y="437" width="0.1608%" height="15" fill="rgb(222,167,0)" fg:x="924" fg:w="2"/><text x="74.5265%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="74.2765%" y="421" width="0.1608%" height="15" fill="rgb(211,70,14)" fg:x="924" fg:w="2"/><text x="74.5265%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="74.2765%" y="405" width="0.1608%" height="15" fill="rgb(214,84,42)" fg:x="924" fg:w="2"/><text x="74.5265%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="74.2765%" y="389" width="0.1608%" height="15" fill="rgb(235,157,37)" fg:x="924" fg:w="2"/><text x="74.5265%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.3569%" y="373" width="0.0804%" height="15" fill="rgb(225,13,6)" fg:x="925" fg:w="1"/><text x="74.6069%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.3569%" y="357" width="0.0804%" height="15" fill="rgb(205,202,1)" fg:x="925" fg:w="1"/><text x="74.6069%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.3569%" y="341" width="0.0804%" height="15" fill="rgb(232,195,26)" fg:x="925" fg:w="1"/><text x="74.6069%" y="351.50"></text></g><g><title>engine::internal::Entities::add_persisted (22 samples, 1.77%)</title><rect x="72.7492%" y="549" width="1.7685%" height="15" fill="rgb(208,102,26)" fg:x="905" fg:w="22"/><text x="72.9992%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::from_str (14 samples, 1.13%)</title><rect x="73.3923%" y="533" width="1.1254%" height="15" fill="rgb(215,41,39)" fg:x="913" fg:w="14"/><text x="73.6423%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="73.9550%" y="517" width="0.5627%" height="15" fill="rgb(247,139,11)" fg:x="920" fg:w="7"/><text x="74.2050%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="73.9550%" y="501" width="0.5627%" height="15" fill="rgb(243,99,6)" fg:x="920" fg:w="7"/><text x="74.2050%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.4373%" y="485" width="0.0804%" height="15" fill="rgb(230,168,48)" fg:x="926" fg:w="1"/><text x="74.6873%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4373%" y="469" width="0.0804%" height="15" fill="rgb(238,227,13)" fg:x="926" fg:w="1"/><text x="74.6873%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (23 samples, 1.85%)</title><rect x="72.7492%" y="581" width="1.8489%" height="15" fill="rgb(209,109,13)" fg:x="905" fg:w="23"/><text x="72.9992%" y="591.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (23 samples, 1.85%)</title><rect x="72.7492%" y="565" width="1.8489%" height="15" fill="rgb(228,195,1)" fg:x="905" fg:w="23"/><text x="72.9992%" y="575.50">&lt;..</text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="74.5177%" y="549" width="0.0804%" height="15" fill="rgb(230,218,0)" fg:x="927" fg:w="1"/><text x="74.7677%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.5177%" y="533" width="0.0804%" height="15" fill="rgb(206,1,45)" fg:x="927" fg:w="1"/><text x="74.7677%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (2 samples, 0.16%)</title><rect x="74.5981%" y="581" width="0.1608%" height="15" fill="rgb(209,124,26)" fg:x="928" fg:w="2"/><text x="74.8481%" y="591.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="74.5981%" y="565" width="0.1608%" height="15" fill="rgb(220,59,8)" fg:x="928" fg:w="2"/><text x="74.8481%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="74.5981%" y="549" width="0.1608%" height="15" fill="rgb(251,41,37)" fg:x="928" fg:w="2"/><text x="74.8481%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.5981%" y="533" width="0.1608%" height="15" fill="rgb(239,152,21)" fg:x="928" fg:w="2"/><text x="74.8481%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6785%" y="517" width="0.0804%" height="15" fill="rgb(226,32,1)" fg:x="929" fg:w="1"/><text x="74.9285%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.6785%" y="501" width="0.0804%" height="15" fill="rgb(230,154,36)" fg:x="929" fg:w="1"/><text x="74.9285%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.6785%" y="485" width="0.0804%" height="15" fill="rgb(208,228,43)" fg:x="929" fg:w="1"/><text x="74.9285%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.6785%" y="469" width="0.0804%" height="15" fill="rgb(214,203,3)" fg:x="929" fg:w="1"/><text x="74.9285%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="74.7588%" y="549" width="0.1608%" height="15" fill="rgb(207,149,29)" fg:x="930" fg:w="2"/><text x="75.0088%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8392%" y="533" width="0.0804%" height="15" fill="rgb(250,105,7)" fg:x="931" fg:w="1"/><text x="75.0892%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8392%" y="517" width="0.0804%" height="15" fill="rgb(232,222,16)" fg:x="931" fg:w="1"/><text x="75.0892%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.8392%" y="501" width="0.0804%" height="15" fill="rgb(209,32,24)" fg:x="931" fg:w="1"/><text x="75.0892%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.8392%" y="485" width="0.0804%" height="15" fill="rgb(225,13,6)" fg:x="931" fg:w="1"/><text x="75.0892%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.8392%" y="469" width="0.0804%" height="15" fill="rgb(245,226,26)" fg:x="931" fg:w="1"/><text x="75.0892%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8392%" y="453" width="0.0804%" height="15" fill="rgb(229,178,27)" fg:x="931" fg:w="1"/><text x="75.0892%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8392%" y="437" width="0.0804%" height="15" fill="rgb(205,227,28)" fg:x="931" fg:w="1"/><text x="75.0892%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.8392%" y="421" width="0.0804%" height="15" fill="rgb(210,191,45)" fg:x="931" fg:w="1"/><text x="75.0892%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.8392%" y="405" width="0.0804%" height="15" fill="rgb(206,124,16)" fg:x="931" fg:w="1"/><text x="75.0892%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.8392%" y="389" width="0.0804%" height="15" fill="rgb(210,162,0)" fg:x="931" fg:w="1"/><text x="75.0892%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.8392%" y="373" width="0.0804%" height="15" fill="rgb(211,54,38)" fg:x="931" fg:w="1"/><text x="75.0892%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.8392%" y="357" width="0.0804%" height="15" fill="rgb(248,192,3)" fg:x="931" fg:w="1"/><text x="75.0892%" y="367.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (388 samples, 31.19%)</title><rect x="43.8103%" y="613" width="31.1897%" height="15" fill="rgb(233,187,18)" fg:x="545" fg:w="388"/><text x="44.0603%" y="623.50">&lt;engine::perform::StandardPerformer as kernel::act..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (29 samples, 2.33%)</title><rect x="72.6688%" y="597" width="2.3312%" height="15" fill="rgb(237,208,14)" fg:x="904" fg:w="29"/><text x="72.9188%" y="607.50">e..</text></g><g><title>engine::session::Session::world (3 samples, 0.24%)</title><rect x="74.7588%" y="581" width="0.2412%" height="15" fill="rgb(212,77,1)" fg:x="930" fg:w="3"/><text x="75.0088%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="74.7588%" y="565" width="0.2412%" height="15" fill="rgb(210,163,22)" fg:x="930" fg:w="3"/><text x="75.0088%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="74.9196%" y="549" width="0.0804%" height="15" fill="rgb(250,58,28)" fg:x="932" fg:w="1"/><text x="75.1696%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.9196%" y="533" width="0.0804%" height="15" fill="rgb(254,28,41)" fg:x="932" fg:w="1"/><text x="75.1696%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.9196%" y="517" width="0.0804%" height="15" fill="rgb(237,162,36)" fg:x="932" fg:w="1"/><text x="75.1696%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.9196%" y="501" width="0.0804%" height="15" fill="rgb(232,56,6)" fg:x="932" fg:w="1"/><text x="75.1696%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.9196%" y="485" width="0.0804%" height="15" fill="rgb(216,127,42)" fg:x="932" fg:w="1"/><text x="75.1696%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="74.9196%" y="469" width="0.0804%" height="15" fill="rgb(241,69,15)" fg:x="932" fg:w="1"/><text x="75.1696%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.9196%" y="453" width="0.0804%" height="15" fill="rgb(227,180,19)" fg:x="932" fg:w="1"/><text x="75.1696%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.9196%" y="437" width="0.0804%" height="15" fill="rgb(231,188,29)" fg:x="932" fg:w="1"/><text x="75.1696%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.9196%" y="421" width="0.0804%" height="15" fill="rgb(224,176,27)" fg:x="932" fg:w="1"/><text x="75.1696%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.9196%" y="405" width="0.0804%" height="15" fill="rgb(249,214,19)" fg:x="932" fg:w="1"/><text x="75.1696%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="74.9196%" y="389" width="0.0804%" height="15" fill="rgb(240,0,4)" fg:x="932" fg:w="1"/><text x="75.1696%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="74.9196%" y="373" width="0.0804%" height="15" fill="rgb(233,28,41)" fg:x="932" fg:w="1"/><text x="75.1696%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="74.9196%" y="357" width="0.0804%" height="15" fill="rgb(220,90,51)" fg:x="932" fg:w="1"/><text x="75.1696%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="74.9196%" y="341" width="0.0804%" height="15" fill="rgb(250,52,22)" fg:x="932" fg:w="1"/><text x="75.1696%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="74.9196%" y="325" width="0.0804%" height="15" fill="rgb(231,152,36)" fg:x="932" fg:w="1"/><text x="75.1696%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="74.9196%" y="309" width="0.0804%" height="15" fill="rgb(250,218,4)" fg:x="932" fg:w="1"/><text x="75.1696%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.9196%" y="293" width="0.0804%" height="15" fill="rgb(210,38,21)" fg:x="932" fg:w="1"/><text x="75.1696%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="74.9196%" y="277" width="0.0804%" height="15" fill="rgb(230,75,13)" fg:x="932" fg:w="1"/><text x="75.1696%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.9196%" y="261" width="0.0804%" height="15" fill="rgb(250,68,53)" fg:x="932" fg:w="1"/><text x="75.1696%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9196%" y="245" width="0.0804%" height="15" fill="rgb(250,210,16)" fg:x="932" fg:w="1"/><text x="75.1696%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (391 samples, 31.43%)</title><rect x="43.7299%" y="629" width="31.4309%" height="15" fill="rgb(240,132,5)" fg:x="544" fg:w="391"/><text x="43.9799%" y="639.50">&lt;plugins_core::carrying::CarryingPlugin as kernel::..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="75.0000%" y="613" width="0.1608%" height="15" fill="rgb(222,148,48)" fg:x="933" fg:w="2"/><text x="75.2500%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="75.0000%" y="597" width="0.1608%" height="15" fill="rgb(247,181,24)" fg:x="933" fg:w="2"/><text x="75.2500%" y="607.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.16%)</title><rect x="75.0000%" y="581" width="0.1608%" height="15" fill="rgb(239,5,31)" fg:x="933" fg:w="2"/><text x="75.2500%" y="591.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="75.0804%" y="565" width="0.0804%" height="15" fill="rgb(241,152,38)" fg:x="934" fg:w="1"/><text x="75.3304%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (394 samples, 31.67%)</title><rect x="43.5691%" y="645" width="31.6720%" height="15" fill="rgb(246,200,37)" fg:x="542" fg:w="394"/><text x="43.8191%" y="655.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter:..</text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="75.1608%" y="629" width="0.0804%" height="15" fill="rgb(243,210,26)" fg:x="935" fg:w="1"/><text x="75.4108%" y="639.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="75.1608%" y="613" width="0.0804%" height="15" fill="rgb(222,22,22)" fg:x="935" fg:w="1"/><text x="75.4108%" y="623.50"></text></g><g><title>&lt;kernel::model::base::DomainError as core::convert::From&lt;anyhow::Error&gt;&gt;::from (1 samples, 0.08%)</title><rect x="75.1608%" y="597" width="0.0804%" height="15" fill="rgb(208,129,28)" fg:x="935" fg:w="1"/><text x="75.4108%" y="607.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (396 samples, 31.83%)</title><rect x="43.4887%" y="693" width="31.8328%" height="15" fill="rgb(254,169,28)" fg:x="541" fg:w="396"/><text x="43.7387%" y="703.50">&lt;kernel::plugins::SessionPlugins as kernel::plugins..</text></g><g><title>core::iter::adapters::try_process (395 samples, 31.75%)</title><rect x="43.5691%" y="677" width="31.7524%" height="15" fill="rgb(225,45,17)" fg:x="542" fg:w="395"/><text x="43.8191%" y="687.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (395 samples, 31.75%)</title><rect x="43.5691%" y="661" width="31.7524%" height="15" fill="rgb(232,199,2)" fg:x="542" fg:w="395"/><text x="43.8191%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.2412%" y="645" width="0.0804%" height="15" fill="rgb(235,33,40)" fg:x="936" fg:w="1"/><text x="75.4912%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.2412%" y="629" width="0.0804%" height="15" fill="rgb(237,89,50)" fg:x="936" fg:w="1"/><text x="75.4912%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.2412%" y="613" width="0.0804%" height="15" fill="rgb(238,126,5)" fg:x="936" fg:w="1"/><text x="75.4912%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.3215%" y="581" width="0.0804%" height="15" fill="rgb(247,214,42)" fg:x="937" fg:w="1"/><text x="75.5715%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.3215%" y="565" width="0.0804%" height="15" fill="rgb(238,60,45)" fg:x="937" fg:w="1"/><text x="75.5715%" y="575.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="75.3215%" y="549" width="0.0804%" height="15" fill="rgb(225,69,44)" fg:x="937" fg:w="1"/><text x="75.5715%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.3215%" y="533" width="0.0804%" height="15" fill="rgb(241,13,44)" fg:x="937" fg:w="1"/><text x="75.5715%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="75.3215%" y="517" width="0.0804%" height="15" fill="rgb(227,121,22)" fg:x="937" fg:w="1"/><text x="75.5715%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.08%)</title><rect x="75.3215%" y="501" width="0.0804%" height="15" fill="rgb(231,160,23)" fg:x="937" fg:w="1"/><text x="75.5715%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="75.3215%" y="693" width="0.1608%" height="15" fill="rgb(250,179,43)" fg:x="937" fg:w="2"/><text x="75.5715%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="75.3215%" y="677" width="0.1608%" height="15" fill="rgb(233,54,46)" fg:x="937" fg:w="2"/><text x="75.5715%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="75.3215%" y="661" width="0.1608%" height="15" fill="rgb(247,120,42)" fg:x="937" fg:w="2"/><text x="75.5715%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="75.3215%" y="645" width="0.1608%" height="15" fill="rgb(221,219,12)" fg:x="937" fg:w="2"/><text x="75.5715%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="75.3215%" y="629" width="0.1608%" height="15" fill="rgb(211,126,8)" fg:x="937" fg:w="2"/><text x="75.5715%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="75.3215%" y="613" width="0.1608%" height="15" fill="rgb(218,154,33)" fg:x="937" fg:w="2"/><text x="75.5715%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="75.3215%" y="597" width="0.1608%" height="15" fill="rgb(212,199,16)" fg:x="937" fg:w="2"/><text x="75.5715%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.08%)</title><rect x="75.4019%" y="581" width="0.0804%" height="15" fill="rgb(236,215,46)" fg:x="938" fg:w="1"/><text x="75.6519%" y="591.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="75.4823%" y="677" width="0.0804%" height="15" fill="rgb(232,32,22)" fg:x="939" fg:w="1"/><text x="75.7323%" y="687.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="75.4823%" y="661" width="0.0804%" height="15" fill="rgb(234,79,15)" fg:x="939" fg:w="1"/><text x="75.7323%" y="671.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="75.4823%" y="645" width="0.0804%" height="15" fill="rgb(235,187,47)" fg:x="939" fg:w="1"/><text x="75.7323%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="75.4823%" y="629" width="0.0804%" height="15" fill="rgb(244,69,37)" fg:x="939" fg:w="1"/><text x="75.7323%" y="639.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="75.4823%" y="613" width="0.0804%" height="15" fill="rgb(249,140,25)" fg:x="939" fg:w="1"/><text x="75.7323%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.08%)</title><rect x="75.4823%" y="597" width="0.0804%" height="15" fill="rgb(213,69,8)" fg:x="939" fg:w="1"/><text x="75.7323%" y="607.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.08%)</title><rect x="75.4823%" y="581" width="0.0804%" height="15" fill="rgb(220,136,2)" fg:x="939" fg:w="1"/><text x="75.7323%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.08%)</title><rect x="75.4823%" y="565" width="0.0804%" height="15" fill="rgb(237,50,36)" fg:x="939" fg:w="1"/><text x="75.7323%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (1 samples, 0.08%)</title><rect x="75.4823%" y="549" width="0.0804%" height="15" fill="rgb(226,18,11)" fg:x="939" fg:w="1"/><text x="75.7323%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1 samples, 0.08%)</title><rect x="75.4823%" y="533" width="0.0804%" height="15" fill="rgb(243,156,2)" fg:x="939" fg:w="1"/><text x="75.7323%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (941 samples, 75.64%)</title><rect x="0.0000%" y="773" width="75.6431%" height="15" fill="rgb(218,8,34)" fg:x="0" fg:w="941"/><text x="0.2500%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (941 samples, 75.64%)</title><rect x="0.0000%" y="757" width="75.6431%" height="15" fill="rgb(250,94,35)" fg:x="0" fg:w="941"/><text x="0.2500%" y="767.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (941 samples, 75.64%)</title><rect x="0.0000%" y="741" width="75.6431%" height="15" fill="rgb(229,127,21)" fg:x="0" fg:w="941"/><text x="0.2500%" y="751.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (401 samples, 32.23%)</title><rect x="43.4084%" y="725" width="32.2347%" height="15" fill="rgb(234,49,5)" fg:x="540" fg:w="401"/><text x="43.6584%" y="735.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (401 samples, 32.23%)</title><rect x="43.4084%" y="709" width="32.2347%" height="15" fill="rgb(248,12,16)" fg:x="540" fg:w="401"/><text x="43.6584%" y="719.50">engine::perform::StandardPerformer::evaluate_and_per..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.16%)</title><rect x="75.4823%" y="693" width="0.1608%" height="15" fill="rgb(208,220,31)" fg:x="939" fg:w="2"/><text x="75.7323%" y="703.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="75.5627%" y="677" width="0.0804%" height="15" fill="rgb(243,184,0)" fg:x="940" fg:w="1"/><text x="75.8127%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="75.5627%" y="661" width="0.0804%" height="15" fill="rgb(217,38,21)" fg:x="940" fg:w="1"/><text x="75.8127%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="75.5627%" y="645" width="0.0804%" height="15" fill="rgb(239,120,45)" fg:x="940" fg:w="1"/><text x="75.8127%" y="655.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="75.5627%" y="629" width="0.0804%" height="15" fill="rgb(235,33,2)" fg:x="940" fg:w="1"/><text x="75.8127%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.7235%" y="597" width="0.0804%" height="15" fill="rgb(249,161,5)" fg:x="942" fg:w="1"/><text x="75.9735%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.8039%" y="597" width="0.0804%" height="15" fill="rgb(250,165,48)" fg:x="943" fg:w="1"/><text x="76.0539%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.8039%" y="581" width="0.0804%" height="15" fill="rgb(221,23,45)" fg:x="943" fg:w="1"/><text x="76.0539%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="75.8842%" y="549" width="0.1608%" height="15" fill="rgb(217,108,46)" fg:x="944" fg:w="2"/><text x="76.1342%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="75.8842%" y="581" width="0.2412%" height="15" fill="rgb(254,26,35)" fg:x="944" fg:w="3"/><text x="76.1342%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="75.8842%" y="565" width="0.2412%" height="15" fill="rgb(218,223,28)" fg:x="944" fg:w="3"/><text x="76.1342%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.0450%" y="549" width="0.0804%" height="15" fill="rgb(242,27,47)" fg:x="946" fg:w="1"/><text x="76.2950%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.0450%" y="533" width="0.0804%" height="15" fill="rgb(218,39,35)" fg:x="946" fg:w="1"/><text x="76.2950%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="76.1254%" y="581" width="0.1608%" height="15" fill="rgb(232,127,16)" fg:x="947" fg:w="2"/><text x="76.3754%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="75.6431%" y="725" width="0.7235%" height="15" fill="rgb(231,219,51)" fg:x="941" fg:w="9"/><text x="75.8931%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (8 samples, 0.64%)</title><rect x="75.7235%" y="709" width="0.6431%" height="15" fill="rgb(217,220,46)" fg:x="942" fg:w="8"/><text x="75.9735%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="75.7235%" y="693" width="0.6431%" height="15" fill="rgb(230,75,1)" fg:x="942" fg:w="8"/><text x="75.9735%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (8 samples, 0.64%)</title><rect x="75.7235%" y="677" width="0.6431%" height="15" fill="rgb(218,2,8)" fg:x="942" fg:w="8"/><text x="75.9735%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="75.7235%" y="661" width="0.6431%" height="15" fill="rgb(206,111,30)" fg:x="942" fg:w="8"/><text x="75.9735%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="75.7235%" y="645" width="0.6431%" height="15" fill="rgb(209,135,6)" fg:x="942" fg:w="8"/><text x="75.9735%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (8 samples, 0.64%)</title><rect x="75.7235%" y="629" width="0.6431%" height="15" fill="rgb(205,169,10)" fg:x="942" fg:w="8"/><text x="75.9735%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="75.7235%" y="613" width="0.6431%" height="15" fill="rgb(212,204,38)" fg:x="942" fg:w="8"/><text x="75.9735%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="75.8842%" y="597" width="0.4823%" height="15" fill="rgb(205,199,14)" fg:x="944" fg:w="6"/><text x="76.1342%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.2862%" y="581" width="0.0804%" height="15" fill="rgb(212,4,6)" fg:x="949" fg:w="1"/><text x="76.5362%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.2862%" y="565" width="0.0804%" height="15" fill="rgb(250,15,10)" fg:x="949" fg:w="1"/><text x="76.5362%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.2862%" y="549" width="0.0804%" height="15" fill="rgb(212,49,51)" fg:x="949" fg:w="1"/><text x="76.5362%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.2862%" y="533" width="0.0804%" height="15" fill="rgb(235,21,9)" fg:x="949" fg:w="1"/><text x="76.5362%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="76.3666%" y="645" width="0.0804%" height="15" fill="rgb(251,31,32)" fg:x="950" fg:w="1"/><text x="76.6166%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="76.3666%" y="629" width="0.0804%" height="15" fill="rgb(246,23,9)" fg:x="950" fg:w="1"/><text x="76.6166%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.3666%" y="613" width="0.0804%" height="15" fill="rgb(225,216,14)" fg:x="950" fg:w="1"/><text x="76.6166%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.3666%" y="597" width="0.0804%" height="15" fill="rgb(215,200,26)" fg:x="950" fg:w="1"/><text x="76.6166%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.3666%" y="581" width="0.0804%" height="15" fill="rgb(237,130,47)" fg:x="950" fg:w="1"/><text x="76.6166%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.3666%" y="565" width="0.0804%" height="15" fill="rgb(247,74,14)" fg:x="950" fg:w="1"/><text x="76.6166%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3666%" y="549" width="0.0804%" height="15" fill="rgb(254,97,46)" fg:x="950" fg:w="1"/><text x="76.6166%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.3666%" y="533" width="0.0804%" height="15" fill="rgb(234,191,1)" fg:x="950" fg:w="1"/><text x="76.6166%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3666%" y="517" width="0.0804%" height="15" fill="rgb(215,165,14)" fg:x="950" fg:w="1"/><text x="76.6166%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.3666%" y="501" width="0.0804%" height="15" fill="rgb(230,182,6)" fg:x="950" fg:w="1"/><text x="76.6166%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3666%" y="485" width="0.0804%" height="15" fill="rgb(210,127,39)" fg:x="950" fg:w="1"/><text x="76.6166%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.3666%" y="469" width="0.0804%" height="15" fill="rgb(223,212,51)" fg:x="950" fg:w="1"/><text x="76.6166%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3666%" y="453" width="0.0804%" height="15" fill="rgb(226,176,43)" fg:x="950" fg:w="1"/><text x="76.6166%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.3666%" y="437" width="0.0804%" height="15" fill="rgb(222,155,4)" fg:x="950" fg:w="1"/><text x="76.6166%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3666%" y="421" width="0.0804%" height="15" fill="rgb(215,149,7)" fg:x="950" fg:w="1"/><text x="76.6166%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.3666%" y="405" width="0.0804%" height="15" fill="rgb(252,199,23)" fg:x="950" fg:w="1"/><text x="76.6166%" y="415.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="76.4469%" y="629" width="0.1608%" height="15" fill="rgb(245,52,29)" fg:x="951" fg:w="2"/><text x="76.6969%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.4469%" y="613" width="0.1608%" height="15" fill="rgb(221,228,19)" fg:x="951" fg:w="2"/><text x="76.6969%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.4469%" y="597" width="0.1608%" height="15" fill="rgb(253,101,6)" fg:x="951" fg:w="2"/><text x="76.6969%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.5273%" y="581" width="0.0804%" height="15" fill="rgb(211,130,8)" fg:x="952" fg:w="1"/><text x="76.7773%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="76.5273%" y="565" width="0.0804%" height="15" fill="rgb(238,37,53)" fg:x="952" fg:w="1"/><text x="76.7773%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="76.3666%" y="693" width="0.3215%" height="15" fill="rgb(235,145,5)" fg:x="950" fg:w="4"/><text x="76.6166%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.32%)</title><rect x="76.3666%" y="677" width="0.3215%" height="15" fill="rgb(244,12,43)" fg:x="950" fg:w="4"/><text x="76.6166%" y="687.50"></text></g><g><title>engine::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="76.3666%" y="661" width="0.3215%" height="15" fill="rgb(246,195,24)" fg:x="950" fg:w="4"/><text x="76.6166%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::from_str (3 samples, 0.24%)</title><rect x="76.4469%" y="645" width="0.2412%" height="15" fill="rgb(235,163,6)" fg:x="951" fg:w="3"/><text x="76.6969%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.6077%" y="629" width="0.0804%" height="15" fill="rgb(236,218,17)" fg:x="953" fg:w="1"/><text x="76.8577%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.6077%" y="613" width="0.0804%" height="15" fill="rgb(235,12,38)" fg:x="953" fg:w="1"/><text x="76.8577%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.6077%" y="597" width="0.0804%" height="15" fill="rgb(225,195,33)" fg:x="953" fg:w="1"/><text x="76.8577%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.6077%" y="581" width="0.0804%" height="15" fill="rgb(238,54,35)" fg:x="953" fg:w="1"/><text x="76.8577%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.6077%" y="565" width="0.0804%" height="15" fill="rgb(238,33,7)" fg:x="953" fg:w="1"/><text x="76.8577%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.6077%" y="549" width="0.0804%" height="15" fill="rgb(245,5,14)" fg:x="953" fg:w="1"/><text x="76.8577%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.6077%" y="533" width="0.0804%" height="15" fill="rgb(251,95,31)" fg:x="953" fg:w="1"/><text x="76.8577%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.6077%" y="517" width="0.0804%" height="15" fill="rgb(222,15,46)" fg:x="953" fg:w="1"/><text x="76.8577%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6077%" y="501" width="0.0804%" height="15" fill="rgb(226,182,24)" fg:x="953" fg:w="1"/><text x="76.8577%" y="511.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="76.6881%" y="693" width="0.0804%" height="15" fill="rgb(229,105,41)" fg:x="954" fg:w="1"/><text x="76.9381%" y="703.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="76.6881%" y="677" width="0.0804%" height="15" fill="rgb(216,99,53)" fg:x="954" fg:w="1"/><text x="76.9381%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="76.6881%" y="661" width="0.0804%" height="15" fill="rgb(253,26,20)" fg:x="954" fg:w="1"/><text x="76.9381%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.6881%" y="645" width="0.0804%" height="15" fill="rgb(249,155,28)" fg:x="954" fg:w="1"/><text x="76.9381%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.6881%" y="629" width="0.0804%" height="15" fill="rgb(241,221,2)" fg:x="954" fg:w="1"/><text x="76.9381%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.6881%" y="613" width="0.0804%" height="15" fill="rgb(219,124,6)" fg:x="954" fg:w="1"/><text x="76.9381%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.48%)</title><rect x="76.7685%" y="693" width="0.4823%" height="15" fill="rgb(233,37,6)" fg:x="955" fg:w="6"/><text x="77.0185%" y="703.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="76.7685%" y="677" width="0.4823%" height="15" fill="rgb(238,20,14)" fg:x="955" fg:w="6"/><text x="77.0185%" y="687.50"></text></g><g><title>libloading::os::unix::Library::open (6 samples, 0.48%)</title><rect x="76.7685%" y="661" width="0.4823%" height="15" fill="rgb(232,106,27)" fg:x="955" fg:w="6"/><text x="77.0185%" y="671.50"></text></g><g><title>dlopen (6 samples, 0.48%)</title><rect x="76.7685%" y="645" width="0.4823%" height="15" fill="rgb(246,157,24)" fg:x="955" fg:w="6"/><text x="77.0185%" y="655.50"></text></g><g><title>_dl_catch_error (6 samples, 0.48%)</title><rect x="76.7685%" y="629" width="0.4823%" height="15" fill="rgb(214,153,10)" fg:x="955" fg:w="6"/><text x="77.0185%" y="639.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="76.7685%" y="613" width="0.4823%" height="15" fill="rgb(212,94,6)" fg:x="955" fg:w="6"/><text x="77.0185%" y="623.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="76.7685%" y="597" width="0.4823%" height="15" fill="rgb(254,25,27)" fg:x="955" fg:w="6"/><text x="77.0185%" y="607.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="76.7685%" y="581" width="0.4823%" height="15" fill="rgb(250,43,52)" fg:x="955" fg:w="6"/><text x="77.0185%" y="591.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (12 samples, 0.96%)</title><rect x="76.3666%" y="725" width="0.9646%" height="15" fill="rgb(221,226,40)" fg:x="950" fg:w="12"/><text x="76.6166%" y="735.50"></text></g><g><title>engine::session::Session::new (12 samples, 0.96%)</title><rect x="76.3666%" y="709" width="0.9646%" height="15" fill="rgb(235,162,34)" fg:x="950" fg:w="12"/><text x="76.6166%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="77.2508%" y="693" width="0.0804%" height="15" fill="rgb(239,24,26)" fg:x="961" fg:w="1"/><text x="77.5008%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.2508%" y="677" width="0.0804%" height="15" fill="rgb(244,226,11)" fg:x="961" fg:w="1"/><text x="77.5008%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="77.3312%" y="709" width="0.0804%" height="15" fill="rgb(225,23,10)" fg:x="962" fg:w="1"/><text x="77.5812%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3312%" y="693" width="0.0804%" height="15" fill="rgb(249,125,6)" fg:x="962" fg:w="1"/><text x="77.5812%" y="703.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="77.4116%" y="677" width="0.0804%" height="15" fill="rgb(246,212,12)" fg:x="963" fg:w="1"/><text x="77.6616%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="77.4116%" y="661" width="0.0804%" height="15" fill="rgb(230,43,32)" fg:x="963" fg:w="1"/><text x="77.6616%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.4116%" y="645" width="0.0804%" height="15" fill="rgb(210,95,23)" fg:x="963" fg:w="1"/><text x="77.6616%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.4116%" y="629" width="0.0804%" height="15" fill="rgb(229,103,33)" fg:x="963" fg:w="1"/><text x="77.6616%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.4116%" y="613" width="0.0804%" height="15" fill="rgb(222,104,27)" fg:x="963" fg:w="1"/><text x="77.6616%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="77.4920%" y="629" width="0.1608%" height="15" fill="rgb(239,221,23)" fg:x="964" fg:w="2"/><text x="77.7420%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.5723%" y="613" width="0.0804%" height="15" fill="rgb(222,98,21)" fg:x="965" fg:w="1"/><text x="77.8223%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.5723%" y="597" width="0.0804%" height="15" fill="rgb(231,101,20)" fg:x="965" fg:w="1"/><text x="77.8223%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.5723%" y="581" width="0.0804%" height="15" fill="rgb(215,150,22)" fg:x="965" fg:w="1"/><text x="77.8223%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5723%" y="565" width="0.0804%" height="15" fill="rgb(248,3,34)" fg:x="965" fg:w="1"/><text x="77.8223%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.5723%" y="549" width="0.0804%" height="15" fill="rgb(220,141,21)" fg:x="965" fg:w="1"/><text x="77.8223%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.5723%" y="533" width="0.0804%" height="15" fill="rgb(223,41,48)" fg:x="965" fg:w="1"/><text x="77.8223%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.5723%" y="517" width="0.0804%" height="15" fill="rgb(247,12,5)" fg:x="965" fg:w="1"/><text x="77.8223%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.6527%" y="613" width="0.0804%" height="15" fill="rgb(206,173,10)" fg:x="966" fg:w="1"/><text x="77.9027%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.6527%" y="597" width="0.0804%" height="15" fill="rgb(233,214,37)" fg:x="966" fg:w="1"/><text x="77.9027%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.6527%" y="581" width="0.0804%" height="15" fill="rgb(238,86,43)" fg:x="966" fg:w="1"/><text x="77.9027%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="77.7331%" y="613" width="0.2412%" height="15" fill="rgb(212,182,8)" fg:x="967" fg:w="3"/><text x="77.9831%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.8939%" y="597" width="0.0804%" height="15" fill="rgb(240,91,47)" fg:x="969" fg:w="1"/><text x="78.1439%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.8939%" y="581" width="0.0804%" height="15" fill="rgb(209,138,26)" fg:x="969" fg:w="1"/><text x="78.1439%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.9743%" y="597" width="0.0804%" height="15" fill="rgb(231,163,20)" fg:x="970" fg:w="1"/><text x="78.2243%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="77.9743%" y="581" width="0.0804%" height="15" fill="rgb(214,91,54)" fg:x="970" fg:w="1"/><text x="78.2243%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="77.9743%" y="565" width="0.0804%" height="15" fill="rgb(230,32,17)" fg:x="970" fg:w="1"/><text x="78.2243%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.9743%" y="549" width="0.0804%" height="15" fill="rgb(231,34,34)" fg:x="970" fg:w="1"/><text x="78.2243%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.0547%" y="549" width="0.0804%" height="15" fill="rgb(224,228,27)" fg:x="971" fg:w="1"/><text x="78.3047%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="77.9743%" y="613" width="0.2412%" height="15" fill="rgb(219,35,40)" fg:x="970" fg:w="3"/><text x="78.2243%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="78.0547%" y="597" width="0.1608%" height="15" fill="rgb(234,42,8)" fg:x="971" fg:w="2"/><text x="78.3047%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="78.0547%" y="581" width="0.1608%" height="15" fill="rgb(226,75,22)" fg:x="971" fg:w="2"/><text x="78.3047%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="78.0547%" y="565" width="0.1608%" height="15" fill="rgb(242,203,28)" fg:x="971" fg:w="2"/><text x="78.3047%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.1350%" y="549" width="0.0804%" height="15" fill="rgb(221,3,9)" fg:x="972" fg:w="1"/><text x="78.3850%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.1350%" y="533" width="0.0804%" height="15" fill="rgb(214,34,31)" fg:x="972" fg:w="1"/><text x="78.3850%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.1350%" y="517" width="0.0804%" height="15" fill="rgb(252,119,15)" fg:x="972" fg:w="1"/><text x="78.3850%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.80%)</title><rect x="77.4920%" y="645" width="0.8039%" height="15" fill="rgb(244,224,31)" fg:x="964" fg:w="10"/><text x="77.7420%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="77.6527%" y="629" width="0.6431%" height="15" fill="rgb(215,8,51)" fg:x="966" fg:w="8"/><text x="77.9027%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.2154%" y="613" width="0.0804%" height="15" fill="rgb(207,24,1)" fg:x="973" fg:w="1"/><text x="78.4654%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.2958%" y="613" width="0.0804%" height="15" fill="rgb(245,90,0)" fg:x="974" fg:w="1"/><text x="78.5458%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2958%" y="597" width="0.0804%" height="15" fill="rgb(246,43,48)" fg:x="974" fg:w="1"/><text x="78.5458%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.2958%" y="645" width="0.1608%" height="15" fill="rgb(252,218,10)" fg:x="974" fg:w="2"/><text x="78.5458%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="78.2958%" y="629" width="0.1608%" height="15" fill="rgb(231,24,35)" fg:x="974" fg:w="2"/><text x="78.5458%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.3762%" y="613" width="0.0804%" height="15" fill="rgb(225,66,19)" fg:x="975" fg:w="1"/><text x="78.6262%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3762%" y="597" width="0.0804%" height="15" fill="rgb(214,96,51)" fg:x="975" fg:w="1"/><text x="78.6262%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.4566%" y="597" width="0.0804%" height="15" fill="rgb(251,151,47)" fg:x="976" fg:w="1"/><text x="78.7066%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="78.5370%" y="597" width="0.0804%" height="15" fill="rgb(236,79,14)" fg:x="977" fg:w="1"/><text x="78.7870%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.5370%" y="581" width="0.0804%" height="15" fill="rgb(210,205,11)" fg:x="977" fg:w="1"/><text x="78.7870%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.5370%" y="565" width="0.0804%" height="15" fill="rgb(233,142,53)" fg:x="977" fg:w="1"/><text x="78.7870%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.5370%" y="549" width="0.0804%" height="15" fill="rgb(212,116,48)" fg:x="977" fg:w="1"/><text x="78.7870%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.5370%" y="533" width="0.0804%" height="15" fill="rgb(234,55,33)" fg:x="977" fg:w="1"/><text x="78.7870%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.6977%" y="533" width="0.0804%" height="15" fill="rgb(253,92,27)" fg:x="979" fg:w="1"/><text x="78.9477%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="78.6977%" y="581" width="0.2412%" height="15" fill="rgb(220,7,35)" fg:x="979" fg:w="3"/><text x="78.9477%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="78.6977%" y="565" width="0.2412%" height="15" fill="rgb(246,124,6)" fg:x="979" fg:w="3"/><text x="78.9477%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="78.6977%" y="549" width="0.2412%" height="15" fill="rgb(212,111,51)" fg:x="979" fg:w="3"/><text x="78.9477%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="78.7781%" y="533" width="0.1608%" height="15" fill="rgb(253,116,7)" fg:x="980" fg:w="2"/><text x="79.0281%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.8585%" y="517" width="0.0804%" height="15" fill="rgb(213,145,18)" fg:x="981" fg:w="1"/><text x="79.1085%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.8585%" y="501" width="0.0804%" height="15" fill="rgb(219,149,7)" fg:x="981" fg:w="1"/><text x="79.1085%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.8585%" y="485" width="0.0804%" height="15" fill="rgb(225,156,20)" fg:x="981" fg:w="1"/><text x="79.1085%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.8585%" y="469" width="0.0804%" height="15" fill="rgb(211,98,19)" fg:x="981" fg:w="1"/><text x="79.1085%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.8585%" y="453" width="0.0804%" height="15" fill="rgb(231,192,31)" fg:x="981" fg:w="1"/><text x="79.1085%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.8585%" y="437" width="0.0804%" height="15" fill="rgb(249,95,19)" fg:x="981" fg:w="1"/><text x="79.1085%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.8585%" y="421" width="0.0804%" height="15" fill="rgb(247,101,36)" fg:x="981" fg:w="1"/><text x="79.1085%" y="431.50"></text></g><g><title>engine::session::Session::flush (20 samples, 1.61%)</title><rect x="77.4116%" y="709" width="1.6077%" height="15" fill="rgb(221,45,43)" fg:x="963" fg:w="20"/><text x="77.6616%" y="719.50"></text></g><g><title>engine::session::Session::save_entity_changes (20 samples, 1.61%)</title><rect x="77.4116%" y="693" width="1.6077%" height="15" fill="rgb(220,42,1)" fg:x="963" fg:w="20"/><text x="77.6616%" y="703.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (19 samples, 1.53%)</title><rect x="77.4920%" y="677" width="1.5273%" height="15" fill="rgb(236,19,24)" fg:x="964" fg:w="19"/><text x="77.7420%" y="687.50"></text></g><g><title>engine::session::SavesEntities::check_for_changes (19 samples, 1.53%)</title><rect x="77.4920%" y="661" width="1.5273%" height="15" fill="rgb(225,192,6)" fg:x="964" fg:w="19"/><text x="77.7420%" y="671.50"></text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="78.4566%" y="645" width="0.5627%" height="15" fill="rgb(242,30,19)" fg:x="976" fg:w="7"/><text x="78.7066%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="78.4566%" y="629" width="0.5627%" height="15" fill="rgb(240,36,6)" fg:x="976" fg:w="7"/><text x="78.7066%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="78.4566%" y="613" width="0.5627%" height="15" fill="rgb(246,40,28)" fg:x="976" fg:w="7"/><text x="78.7066%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="78.6174%" y="597" width="0.4019%" height="15" fill="rgb(225,155,33)" fg:x="978" fg:w="5"/><text x="78.8674%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.9389%" y="581" width="0.0804%" height="15" fill="rgb(240,65,18)" fg:x="982" fg:w="1"/><text x="79.1889%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="79.0193%" y="693" width="0.0804%" height="15" fill="rgb(217,0,48)" fg:x="983" fg:w="1"/><text x="79.2693%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="79.0193%" y="677" width="0.0804%" height="15" fill="rgb(217,80,15)" fg:x="983" fg:w="1"/><text x="79.2693%" y="687.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="79.0193%" y="661" width="0.0804%" height="15" fill="rgb(253,43,51)" fg:x="983" fg:w="1"/><text x="79.2693%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="79.0193%" y="645" width="0.0804%" height="15" fill="rgb(246,60,4)" fg:x="983" fg:w="1"/><text x="79.2693%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.0193%" y="629" width="0.0804%" height="15" fill="rgb(230,40,54)" fg:x="983" fg:w="1"/><text x="79.2693%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.0193%" y="613" width="0.0804%" height="15" fill="rgb(208,20,44)" fg:x="983" fg:w="1"/><text x="79.2693%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0997%" y="565" width="0.0804%" height="15" fill="rgb(230,22,22)" fg:x="984" fg:w="1"/><text x="79.3497%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0997%" y="549" width="0.0804%" height="15" fill="rgb(207,57,4)" fg:x="984" fg:w="1"/><text x="79.3497%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="79.0997%" y="677" width="0.1608%" height="15" fill="rgb(242,130,33)" fg:x="984" fg:w="2"/><text x="79.3497%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="79.0997%" y="661" width="0.1608%" height="15" fill="rgb(218,66,43)" fg:x="984" fg:w="2"/><text x="79.3497%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="79.0997%" y="645" width="0.1608%" height="15" fill="rgb(236,105,16)" fg:x="984" fg:w="2"/><text x="79.3497%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="79.0997%" y="629" width="0.1608%" height="15" fill="rgb(230,46,15)" fg:x="984" fg:w="2"/><text x="79.3497%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.0997%" y="613" width="0.1608%" height="15" fill="rgb(251,172,40)" fg:x="984" fg:w="2"/><text x="79.3497%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="79.0997%" y="597" width="0.1608%" height="15" fill="rgb(225,217,32)" fg:x="984" fg:w="2"/><text x="79.3497%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="79.0997%" y="581" width="0.1608%" height="15" fill="rgb(243,10,29)" fg:x="984" fg:w="2"/><text x="79.3497%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.1801%" y="565" width="0.0804%" height="15" fill="rgb(207,102,10)" fg:x="985" fg:w="1"/><text x="79.4301%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.1801%" y="549" width="0.0804%" height="15" fill="rgb(241,125,5)" fg:x="985" fg:w="1"/><text x="79.4301%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.1801%" y="533" width="0.0804%" height="15" fill="rgb(230,125,29)" fg:x="985" fg:w="1"/><text x="79.4301%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.1801%" y="517" width="0.0804%" height="15" fill="rgb(223,65,44)" fg:x="985" fg:w="1"/><text x="79.4301%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.1801%" y="501" width="0.0804%" height="15" fill="rgb(224,188,28)" fg:x="985" fg:w="1"/><text x="79.4301%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="79.1801%" y="485" width="0.0804%" height="15" fill="rgb(254,197,27)" fg:x="985" fg:w="1"/><text x="79.4301%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="79.1801%" y="469" width="0.0804%" height="15" fill="rgb(220,200,25)" fg:x="985" fg:w="1"/><text x="79.4301%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="79.2605%" y="661" width="0.0804%" height="15" fill="rgb(239,225,54)" fg:x="986" fg:w="1"/><text x="79.5105%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="79.2605%" y="645" width="0.0804%" height="15" fill="rgb(211,59,40)" fg:x="986" fg:w="1"/><text x="79.5105%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="79.2605%" y="677" width="0.2412%" height="15" fill="rgb(213,176,46)" fg:x="986" fg:w="3"/><text x="79.5105%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="79.3408%" y="661" width="0.1608%" height="15" fill="rgb(226,99,4)" fg:x="987" fg:w="2"/><text x="79.5908%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="79.3408%" y="645" width="0.1608%" height="15" fill="rgb(239,203,43)" fg:x="987" fg:w="2"/><text x="79.5908%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="79.3408%" y="629" width="0.1608%" height="15" fill="rgb(246,1,45)" fg:x="987" fg:w="2"/><text x="79.5908%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="79.3408%" y="613" width="0.1608%" height="15" fill="rgb(231,42,52)" fg:x="987" fg:w="2"/><text x="79.5908%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.3408%" y="597" width="0.1608%" height="15" fill="rgb(240,13,50)" fg:x="987" fg:w="2"/><text x="79.5908%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.4212%" y="581" width="0.0804%" height="15" fill="rgb(225,81,14)" fg:x="988" fg:w="1"/><text x="79.6712%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="79.0193%" y="709" width="0.5627%" height="15" fill="rgb(216,182,23)" fg:x="983" fg:w="7"/><text x="79.2693%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="79.0997%" y="693" width="0.4823%" height="15" fill="rgb(233,137,19)" fg:x="984" fg:w="6"/><text x="79.3497%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="79.5016%" y="677" width="0.0804%" height="15" fill="rgb(242,61,46)" fg:x="989" fg:w="1"/><text x="79.7516%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="79.5016%" y="661" width="0.0804%" height="15" fill="rgb(221,168,51)" fg:x="989" fg:w="1"/><text x="79.7516%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.5016%" y="645" width="0.0804%" height="15" fill="rgb(238,48,15)" fg:x="989" fg:w="1"/><text x="79.7516%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.6624%" y="645" width="0.0804%" height="15" fill="rgb(216,13,16)" fg:x="991" fg:w="1"/><text x="79.9124%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.6624%" y="629" width="0.0804%" height="15" fill="rgb(223,185,34)" fg:x="991" fg:w="1"/><text x="79.9124%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.6624%" y="613" width="0.0804%" height="15" fill="rgb(228,94,42)" fg:x="991" fg:w="1"/><text x="79.9124%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.6624%" y="597" width="0.0804%" height="15" fill="rgb(218,166,43)" fg:x="991" fg:w="1"/><text x="79.9124%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.6624%" y="581" width="0.0804%" height="15" fill="rgb(232,30,50)" fg:x="991" fg:w="1"/><text x="79.9124%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6624%" y="565" width="0.0804%" height="15" fill="rgb(245,206,45)" fg:x="991" fg:w="1"/><text x="79.9124%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6624%" y="549" width="0.0804%" height="15" fill="rgb(220,56,22)" fg:x="991" fg:w="1"/><text x="79.9124%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.6624%" y="533" width="0.0804%" height="15" fill="rgb(239,129,38)" fg:x="991" fg:w="1"/><text x="79.9124%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.6624%" y="517" width="0.0804%" height="15" fill="rgb(207,68,41)" fg:x="991" fg:w="1"/><text x="79.9124%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.6624%" y="501" width="0.0804%" height="15" fill="rgb(221,21,7)" fg:x="991" fg:w="1"/><text x="79.9124%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.6624%" y="485" width="0.0804%" height="15" fill="rgb(240,33,25)" fg:x="991" fg:w="1"/><text x="79.9124%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6624%" y="469" width="0.0804%" height="15" fill="rgb(242,119,10)" fg:x="991" fg:w="1"/><text x="79.9124%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="79.5820%" y="709" width="0.2412%" height="15" fill="rgb(214,149,40)" fg:x="990" fg:w="3"/><text x="79.8320%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="79.5820%" y="693" width="0.2412%" height="15" fill="rgb(228,25,36)" fg:x="990" fg:w="3"/><text x="79.8320%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="79.5820%" y="677" width="0.2412%" height="15" fill="rgb(222,59,15)" fg:x="990" fg:w="3"/><text x="79.8320%" y="687.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="79.5820%" y="661" width="0.2412%" height="15" fill="rgb(218,170,0)" fg:x="990" fg:w="3"/><text x="79.8320%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.7428%" y="645" width="0.0804%" height="15" fill="rgb(232,173,23)" fg:x="992" fg:w="1"/><text x="79.9928%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.7428%" y="629" width="0.0804%" height="15" fill="rgb(218,116,1)" fg:x="992" fg:w="1"/><text x="79.9928%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.7428%" y="613" width="0.0804%" height="15" fill="rgb(207,34,4)" fg:x="992" fg:w="1"/><text x="79.9928%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7428%" y="597" width="0.0804%" height="15" fill="rgb(229,54,52)" fg:x="992" fg:w="1"/><text x="79.9928%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7428%" y="581" width="0.0804%" height="15" fill="rgb(211,86,23)" fg:x="992" fg:w="1"/><text x="79.9928%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7428%" y="565" width="0.0804%" height="15" fill="rgb(254,153,34)" fg:x="992" fg:w="1"/><text x="79.9928%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7428%" y="549" width="0.0804%" height="15" fill="rgb(219,220,14)" fg:x="992" fg:w="1"/><text x="79.9928%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.7428%" y="533" width="0.0804%" height="15" fill="rgb(247,8,26)" fg:x="992" fg:w="1"/><text x="79.9928%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="79.8232%" y="709" width="0.0804%" height="15" fill="rgb(213,129,42)" fg:x="993" fg:w="1"/><text x="80.0732%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="79.8232%" y="693" width="0.0804%" height="15" fill="rgb(225,95,41)" fg:x="993" fg:w="1"/><text x="80.0732%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="79.8232%" y="677" width="0.0804%" height="15" fill="rgb(215,134,24)" fg:x="993" fg:w="1"/><text x="80.0732%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.8232%" y="661" width="0.0804%" height="15" fill="rgb(235,23,54)" fg:x="993" fg:w="1"/><text x="80.0732%" y="671.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8232%" y="645" width="0.0804%" height="15" fill="rgb(229,96,31)" fg:x="993" fg:w="1"/><text x="80.0732%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.8232%" y="629" width="0.0804%" height="15" fill="rgb(206,111,12)" fg:x="993" fg:w="1"/><text x="80.0732%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.8232%" y="613" width="0.0804%" height="15" fill="rgb(222,177,8)" fg:x="993" fg:w="1"/><text x="80.0732%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="79.9035%" y="677" width="0.0804%" height="15" fill="rgb(251,36,52)" fg:x="994" fg:w="1"/><text x="80.1535%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="79.9035%" y="661" width="0.0804%" height="15" fill="rgb(216,182,29)" fg:x="994" fg:w="1"/><text x="80.1535%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="79.9035%" y="645" width="0.0804%" height="15" fill="rgb(241,145,50)" fg:x="994" fg:w="1"/><text x="80.1535%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="79.9035%" y="693" width="0.1608%" height="15" fill="rgb(231,71,35)" fg:x="994" fg:w="2"/><text x="80.1535%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="79.9839%" y="677" width="0.0804%" height="15" fill="rgb(218,22,17)" fg:x="995" fg:w="1"/><text x="80.2339%" y="687.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="79.9839%" y="661" width="0.0804%" height="15" fill="rgb(225,227,6)" fg:x="995" fg:w="1"/><text x="80.2339%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.9839%" y="645" width="0.0804%" height="15" fill="rgb(224,204,17)" fg:x="995" fg:w="1"/><text x="80.2339%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.9839%" y="629" width="0.0804%" height="15" fill="rgb(227,61,28)" fg:x="995" fg:w="1"/><text x="80.2339%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.9839%" y="613" width="0.0804%" height="15" fill="rgb(242,148,23)" fg:x="995" fg:w="1"/><text x="80.2339%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.9839%" y="597" width="0.0804%" height="15" fill="rgb(237,105,33)" fg:x="995" fg:w="1"/><text x="80.2339%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.9839%" y="581" width="0.0804%" height="15" fill="rgb(238,218,40)" fg:x="995" fg:w="1"/><text x="80.2339%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.9839%" y="565" width="0.0804%" height="15" fill="rgb(209,126,11)" fg:x="995" fg:w="1"/><text x="80.2339%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="80.1447%" y="437" width="0.0804%" height="15" fill="rgb(245,90,11)" fg:x="997" fg:w="1"/><text x="80.3947%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.1447%" y="421" width="0.0804%" height="15" fill="rgb(211,195,10)" fg:x="997" fg:w="1"/><text x="80.3947%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="80.0643%" y="645" width="0.2412%" height="15" fill="rgb(231,45,45)" fg:x="996" fg:w="3"/><text x="80.3143%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="80.1447%" y="629" width="0.1608%" height="15" fill="rgb(246,100,43)" fg:x="997" fg:w="2"/><text x="80.3947%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="80.1447%" y="613" width="0.1608%" height="15" fill="rgb(241,193,8)" fg:x="997" fg:w="2"/><text x="80.3947%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="80.1447%" y="597" width="0.1608%" height="15" fill="rgb(208,76,19)" fg:x="997" fg:w="2"/><text x="80.3947%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.1447%" y="581" width="0.1608%" height="15" fill="rgb(223,69,40)" fg:x="997" fg:w="2"/><text x="80.3947%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.1447%" y="565" width="0.1608%" height="15" fill="rgb(207,120,39)" fg:x="997" fg:w="2"/><text x="80.3947%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.1447%" y="549" width="0.1608%" height="15" fill="rgb(212,209,28)" fg:x="997" fg:w="2"/><text x="80.3947%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.1447%" y="533" width="0.1608%" height="15" fill="rgb(246,82,29)" fg:x="997" fg:w="2"/><text x="80.3947%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.1447%" y="517" width="0.1608%" height="15" fill="rgb(239,6,40)" fg:x="997" fg:w="2"/><text x="80.3947%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.1447%" y="501" width="0.1608%" height="15" fill="rgb(228,181,35)" fg:x="997" fg:w="2"/><text x="80.3947%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.1447%" y="485" width="0.1608%" height="15" fill="rgb(238,151,2)" fg:x="997" fg:w="2"/><text x="80.3947%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="80.1447%" y="469" width="0.1608%" height="15" fill="rgb(236,94,18)" fg:x="997" fg:w="2"/><text x="80.3947%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.1447%" y="453" width="0.1608%" height="15" fill="rgb(208,38,14)" fg:x="997" fg:w="2"/><text x="80.3947%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.2251%" y="437" width="0.0804%" height="15" fill="rgb(234,215,27)" fg:x="998" fg:w="1"/><text x="80.4751%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="80.2251%" y="421" width="0.0804%" height="15" fill="rgb(254,211,53)" fg:x="998" fg:w="1"/><text x="80.4751%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="80.2251%" y="405" width="0.0804%" height="15" fill="rgb(216,175,11)" fg:x="998" fg:w="1"/><text x="80.4751%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.3055%" y="565" width="0.1608%" height="15" fill="rgb(246,179,26)" fg:x="999" fg:w="2"/><text x="80.5555%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.3055%" y="549" width="0.1608%" height="15" fill="rgb(249,19,52)" fg:x="999" fg:w="2"/><text x="80.5555%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.3055%" y="533" width="0.1608%" height="15" fill="rgb(230,42,52)" fg:x="999" fg:w="2"/><text x="80.5555%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.3055%" y="517" width="0.1608%" height="15" fill="rgb(221,171,0)" fg:x="999" fg:w="2"/><text x="80.5555%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.3055%" y="501" width="0.1608%" height="15" fill="rgb(222,177,40)" fg:x="999" fg:w="2"/><text x="80.5555%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.3055%" y="485" width="0.1608%" height="15" fill="rgb(247,34,16)" fg:x="999" fg:w="2"/><text x="80.5555%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="80.3055%" y="469" width="0.1608%" height="15" fill="rgb(213,217,37)" fg:x="999" fg:w="2"/><text x="80.5555%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.3859%" y="453" width="0.0804%" height="15" fill="rgb(231,189,24)" fg:x="1000" fg:w="1"/><text x="80.6359%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="80.3859%" y="437" width="0.0804%" height="15" fill="rgb(214,22,9)" fg:x="1000" fg:w="1"/><text x="80.6359%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="80.3055%" y="629" width="0.2412%" height="15" fill="rgb(212,70,22)" fg:x="999" fg:w="3"/><text x="80.5555%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="80.3055%" y="613" width="0.2412%" height="15" fill="rgb(249,64,51)" fg:x="999" fg:w="3"/><text x="80.5555%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="80.3055%" y="597" width="0.2412%" height="15" fill="rgb(249,148,20)" fg:x="999" fg:w="3"/><text x="80.5555%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="80.3055%" y="581" width="0.2412%" height="15" fill="rgb(246,46,48)" fg:x="999" fg:w="3"/><text x="80.5555%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="80.4662%" y="565" width="0.0804%" height="15" fill="rgb(217,34,48)" fg:x="1001" fg:w="1"/><text x="80.7162%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="80.4662%" y="549" width="0.0804%" height="15" fill="rgb(222,45,26)" fg:x="1001" fg:w="1"/><text x="80.7162%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.4662%" y="533" width="0.0804%" height="15" fill="rgb(230,201,36)" fg:x="1001" fg:w="1"/><text x="80.7162%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.4662%" y="517" width="0.0804%" height="15" fill="rgb(217,30,43)" fg:x="1001" fg:w="1"/><text x="80.7162%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.4662%" y="501" width="0.0804%" height="15" fill="rgb(230,197,40)" fg:x="1001" fg:w="1"/><text x="80.7162%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.4662%" y="485" width="0.0804%" height="15" fill="rgb(239,181,18)" fg:x="1001" fg:w="1"/><text x="80.7162%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="80.0643%" y="693" width="0.5627%" height="15" fill="rgb(222,60,39)" fg:x="996" fg:w="7"/><text x="80.3143%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="80.0643%" y="677" width="0.5627%" height="15" fill="rgb(210,60,22)" fg:x="996" fg:w="7"/><text x="80.3143%" y="687.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="80.0643%" y="661" width="0.5627%" height="15" fill="rgb(239,213,48)" fg:x="996" fg:w="7"/><text x="80.3143%" y="671.50"></text></g><g><title>plugins_core::build::Build::leads_to (4 samples, 0.32%)</title><rect x="80.3055%" y="645" width="0.3215%" height="15" fill="rgb(253,214,23)" fg:x="999" fg:w="4"/><text x="80.5555%" y="655.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="80.5466%" y="629" width="0.0804%" height="15" fill="rgb(211,98,45)" fg:x="1002" fg:w="1"/><text x="80.7966%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="80.5466%" y="613" width="0.0804%" height="15" fill="rgb(239,130,44)" fg:x="1002" fg:w="1"/><text x="80.7966%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="80.5466%" y="597" width="0.0804%" height="15" fill="rgb(222,181,35)" fg:x="1002" fg:w="1"/><text x="80.7966%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="80.6270%" y="693" width="0.0804%" height="15" fill="rgb(219,219,49)" fg:x="1003" fg:w="1"/><text x="80.8770%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.7878%" y="597" width="0.0804%" height="15" fill="rgb(227,161,51)" fg:x="1005" fg:w="1"/><text x="81.0378%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7878%" y="581" width="0.0804%" height="15" fill="rgb(239,112,27)" fg:x="1005" fg:w="1"/><text x="81.0378%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7878%" y="565" width="0.0804%" height="15" fill="rgb(248,122,18)" fg:x="1005" fg:w="1"/><text x="81.0378%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7878%" y="549" width="0.0804%" height="15" fill="rgb(245,130,23)" fg:x="1005" fg:w="1"/><text x="81.0378%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.8682%" y="581" width="0.0804%" height="15" fill="rgb(211,225,28)" fg:x="1006" fg:w="1"/><text x="81.1182%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8682%" y="565" width="0.0804%" height="15" fill="rgb(242,105,44)" fg:x="1006" fg:w="1"/><text x="81.1182%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.8682%" y="597" width="0.2412%" height="15" fill="rgb(216,183,46)" fg:x="1006" fg:w="3"/><text x="81.1182%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.9486%" y="581" width="0.1608%" height="15" fill="rgb(227,112,9)" fg:x="1007" fg:w="2"/><text x="81.1986%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.9486%" y="565" width="0.1608%" height="15" fill="rgb(244,21,0)" fg:x="1007" fg:w="2"/><text x="81.1986%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0289%" y="549" width="0.0804%" height="15" fill="rgb(236,185,14)" fg:x="1008" fg:w="1"/><text x="81.2789%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0289%" y="533" width="0.0804%" height="15" fill="rgb(236,170,30)" fg:x="1008" fg:w="1"/><text x="81.2789%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.0289%" y="517" width="0.0804%" height="15" fill="rgb(209,198,51)" fg:x="1008" fg:w="1"/><text x="81.2789%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0289%" y="501" width="0.0804%" height="15" fill="rgb(205,171,26)" fg:x="1008" fg:w="1"/><text x="81.2789%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.40%)</title><rect x="80.7878%" y="629" width="0.4019%" height="15" fill="rgb(246,41,49)" fg:x="1005" fg:w="5"/><text x="81.0378%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="80.7878%" y="613" width="0.4019%" height="15" fill="rgb(240,229,12)" fg:x="1005" fg:w="5"/><text x="81.0378%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.1093%" y="597" width="0.0804%" height="15" fill="rgb(212,8,54)" fg:x="1009" fg:w="1"/><text x="81.3593%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.1093%" y="581" width="0.0804%" height="15" fill="rgb(230,114,13)" fg:x="1009" fg:w="1"/><text x="81.3593%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.1093%" y="565" width="0.0804%" height="15" fill="rgb(229,130,28)" fg:x="1009" fg:w="1"/><text x="81.3593%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.1093%" y="549" width="0.0804%" height="15" fill="rgb(206,139,15)" fg:x="1009" fg:w="1"/><text x="81.3593%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.1093%" y="533" width="0.0804%" height="15" fill="rgb(241,188,35)" fg:x="1009" fg:w="1"/><text x="81.3593%" y="543.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="81.1093%" y="517" width="0.0804%" height="15" fill="rgb(208,224,26)" fg:x="1009" fg:w="1"/><text x="81.3593%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="81.1093%" y="501" width="0.0804%" height="15" fill="rgb(251,131,28)" fg:x="1009" fg:w="1"/><text x="81.3593%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.1897%" y="565" width="0.0804%" height="15" fill="rgb(208,153,1)" fg:x="1010" fg:w="1"/><text x="81.4397%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.2701%" y="549" width="0.0804%" height="15" fill="rgb(234,33,36)" fg:x="1011" fg:w="1"/><text x="81.5201%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.1897%" y="629" width="0.2412%" height="15" fill="rgb(246,42,29)" fg:x="1010" fg:w="3"/><text x="81.4397%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="81.1897%" y="613" width="0.2412%" height="15" fill="rgb(251,114,16)" fg:x="1010" fg:w="3"/><text x="81.4397%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.1897%" y="597" width="0.2412%" height="15" fill="rgb(233,13,38)" fg:x="1010" fg:w="3"/><text x="81.4397%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.1897%" y="581" width="0.2412%" height="15" fill="rgb(247,120,19)" fg:x="1010" fg:w="3"/><text x="81.4397%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.2701%" y="565" width="0.1608%" height="15" fill="rgb(205,11,16)" fg:x="1011" fg:w="2"/><text x="81.5201%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3505%" y="549" width="0.0804%" height="15" fill="rgb(228,185,19)" fg:x="1012" fg:w="1"/><text x="81.6005%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3505%" y="533" width="0.0804%" height="15" fill="rgb(239,88,52)" fg:x="1012" fg:w="1"/><text x="81.6005%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="81.4309%" y="581" width="0.0804%" height="15" fill="rgb(219,23,1)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7524%" y="533" width="0.0804%" height="15" fill="rgb(253,177,16)" fg:x="1017" fg:w="1"/><text x="82.0024%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7524%" y="517" width="0.0804%" height="15" fill="rgb(225,150,40)" fg:x="1017" fg:w="1"/><text x="82.0024%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7524%" y="501" width="0.0804%" height="15" fill="rgb(208,108,30)" fg:x="1017" fg:w="1"/><text x="82.0024%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="81.8328%" y="517" width="0.0804%" height="15" fill="rgb(214,122,4)" fg:x="1018" fg:w="1"/><text x="82.0828%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.9132%" y="501" width="0.1608%" height="15" fill="rgb(229,74,37)" fg:x="1019" fg:w="2"/><text x="82.1632%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9936%" y="485" width="0.0804%" height="15" fill="rgb(233,61,41)" fg:x="1020" fg:w="1"/><text x="82.2436%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9936%" y="469" width="0.0804%" height="15" fill="rgb(238,191,5)" fg:x="1020" fg:w="1"/><text x="82.2436%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0740%" y="469" width="0.0804%" height="15" fill="rgb(233,78,24)" fg:x="1021" fg:w="1"/><text x="82.3240%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0740%" y="453" width="0.0804%" height="15" fill="rgb(211,142,8)" fg:x="1021" fg:w="1"/><text x="82.3240%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="81.9132%" y="517" width="0.3215%" height="15" fill="rgb(253,38,53)" fg:x="1019" fg:w="4"/><text x="82.1632%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.0740%" y="501" width="0.1608%" height="15" fill="rgb(234,63,51)" fg:x="1021" fg:w="2"/><text x="82.3240%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.0740%" y="485" width="0.1608%" height="15" fill="rgb(205,23,31)" fg:x="1021" fg:w="2"/><text x="82.3240%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1543%" y="469" width="0.0804%" height="15" fill="rgb(210,184,50)" fg:x="1022" fg:w="1"/><text x="82.4043%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.1543%" y="453" width="0.0804%" height="15" fill="rgb(222,112,26)" fg:x="1022" fg:w="1"/><text x="82.4043%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1543%" y="437" width="0.0804%" height="15" fill="rgb(250,98,18)" fg:x="1022" fg:w="1"/><text x="82.4043%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.1543%" y="421" width="0.0804%" height="15" fill="rgb(250,34,12)" fg:x="1022" fg:w="1"/><text x="82.4043%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1543%" y="405" width="0.0804%" height="15" fill="rgb(236,141,30)" fg:x="1022" fg:w="1"/><text x="82.4043%" y="415.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (20 samples, 1.61%)</title><rect x="80.7074%" y="661" width="1.6077%" height="15" fill="rgb(246,134,38)" fg:x="1004" fg:w="20"/><text x="80.9574%" y="671.50"></text></g><g><title>engine::session::SavesEntities::check_for_changes (20 samples, 1.61%)</title><rect x="80.7074%" y="645" width="1.6077%" height="15" fill="rgb(240,114,4)" fg:x="1004" fg:w="20"/><text x="80.9574%" y="655.50"></text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.88%)</title><rect x="81.4309%" y="629" width="0.8842%" height="15" fill="rgb(243,113,39)" fg:x="1013" fg:w="11"/><text x="81.6809%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="81.4309%" y="613" width="0.8842%" height="15" fill="rgb(239,215,4)" fg:x="1013" fg:w="11"/><text x="81.6809%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="81.4309%" y="597" width="0.8842%" height="15" fill="rgb(236,229,45)" fg:x="1013" fg:w="11"/><text x="81.6809%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="81.5113%" y="581" width="0.8039%" height="15" fill="rgb(242,2,6)" fg:x="1014" fg:w="10"/><text x="81.7613%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="81.6720%" y="565" width="0.6431%" height="15" fill="rgb(239,108,21)" fg:x="1016" fg:w="8"/><text x="81.9220%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="81.7524%" y="549" width="0.5627%" height="15" fill="rgb(215,168,34)" fg:x="1017" fg:w="7"/><text x="82.0024%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="81.8328%" y="533" width="0.4823%" height="15" fill="rgb(238,31,17)" fg:x="1018" fg:w="6"/><text x="82.0828%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2347%" y="517" width="0.0804%" height="15" fill="rgb(220,133,11)" fg:x="1023" fg:w="1"/><text x="82.4847%" y="527.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="82.3151%" y="661" width="0.0804%" height="15" fill="rgb(212,158,23)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="82.3151%" y="645" width="0.0804%" height="15" fill="rgb(223,172,7)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="82.3151%" y="629" width="0.0804%" height="15" fill="rgb(244,3,52)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="639.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="82.3151%" y="613" width="0.0804%" height="15" fill="rgb(207,69,27)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="623.50"></text></g><g><title>engine::session::Session::flush (22 samples, 1.77%)</title><rect x="80.7074%" y="693" width="1.7685%" height="15" fill="rgb(213,136,45)" fg:x="1004" fg:w="22"/><text x="80.9574%" y="703.50"></text></g><g><title>engine::session::Session::save_entity_changes (22 samples, 1.77%)</title><rect x="80.7074%" y="677" width="1.7685%" height="15" fill="rgb(218,79,17)" fg:x="1004" fg:w="22"/><text x="80.9574%" y="687.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="82.3955%" y="661" width="0.0804%" height="15" fill="rgb(216,106,36)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="671.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="82.3955%" y="645" width="0.0804%" height="15" fill="rgb(251,27,45)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="655.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="82.3955%" y="629" width="0.0804%" height="15" fill="rgb(232,21,34)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="639.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="82.3955%" y="613" width="0.0804%" height="15" fill="rgb(249,191,16)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="623.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="82.3955%" y="597" width="0.0804%" height="15" fill="rgb(224,88,20)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="82.3955%" y="581" width="0.0804%" height="15" fill="rgb(237,93,27)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="591.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="82.3955%" y="565" width="0.0804%" height="15" fill="rgb(226,198,48)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="82.4759%" y="693" width="0.0804%" height="15" fill="rgb(207,162,53)" fg:x="1026" fg:w="1"/><text x="82.7259%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="82.4759%" y="677" width="0.0804%" height="15" fill="rgb(207,169,9)" fg:x="1026" fg:w="1"/><text x="82.7259%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5563%" y="533" width="0.0804%" height="15" fill="rgb(224,166,46)" fg:x="1027" fg:w="1"/><text x="82.8063%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5563%" y="517" width="0.0804%" height="15" fill="rgb(233,26,6)" fg:x="1027" fg:w="1"/><text x="82.8063%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5563%" y="501" width="0.0804%" height="15" fill="rgb(218,106,45)" fg:x="1027" fg:w="1"/><text x="82.8063%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.5563%" y="485" width="0.0804%" height="15" fill="rgb(240,217,4)" fg:x="1027" fg:w="1"/><text x="82.8063%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.5563%" y="469" width="0.0804%" height="15" fill="rgb(246,171,10)" fg:x="1027" fg:w="1"/><text x="82.8063%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.5563%" y="453" width="0.0804%" height="15" fill="rgb(223,197,30)" fg:x="1027" fg:w="1"/><text x="82.8063%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="82.5563%" y="437" width="0.0804%" height="15" fill="rgb(207,92,16)" fg:x="1027" fg:w="1"/><text x="82.8063%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="82.5563%" y="421" width="0.0804%" height="15" fill="rgb(211,6,44)" fg:x="1027" fg:w="1"/><text x="82.8063%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.5563%" y="581" width="0.1608%" height="15" fill="rgb(219,139,2)" fg:x="1027" fg:w="2"/><text x="82.8063%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.5563%" y="565" width="0.1608%" height="15" fill="rgb(224,103,21)" fg:x="1027" fg:w="2"/><text x="82.8063%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.5563%" y="549" width="0.1608%" height="15" fill="rgb(254,110,48)" fg:x="1027" fg:w="2"/><text x="82.8063%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6367%" y="533" width="0.0804%" height="15" fill="rgb(212,88,19)" fg:x="1028" fg:w="1"/><text x="82.8867%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="82.5563%" y="629" width="0.2412%" height="15" fill="rgb(248,103,6)" fg:x="1027" fg:w="3"/><text x="82.8063%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="82.5563%" y="613" width="0.2412%" height="15" fill="rgb(214,53,46)" fg:x="1027" fg:w="3"/><text x="82.8063%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.5563%" y="597" width="0.2412%" height="15" fill="rgb(236,190,24)" fg:x="1027" fg:w="3"/><text x="82.8063%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.7170%" y="581" width="0.0804%" height="15" fill="rgb(254,58,28)" fg:x="1029" fg:w="1"/><text x="82.9670%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7170%" y="565" width="0.0804%" height="15" fill="rgb(243,63,27)" fg:x="1029" fg:w="1"/><text x="82.9670%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.7170%" y="549" width="0.0804%" height="15" fill="rgb(206,81,20)" fg:x="1029" fg:w="1"/><text x="82.9670%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="82.5563%" y="645" width="0.3215%" height="15" fill="rgb(252,69,51)" fg:x="1027" fg:w="4"/><text x="82.8063%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.7974%" y="629" width="0.0804%" height="15" fill="rgb(222,213,4)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.7974%" y="613" width="0.0804%" height="15" fill="rgb(226,198,12)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.7974%" y="597" width="0.0804%" height="15" fill="rgb(248,115,11)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7974%" y="581" width="0.0804%" height="15" fill="rgb(221,148,54)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7974%" y="565" width="0.0804%" height="15" fill="rgb(214,209,51)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7974%" y="549" width="0.0804%" height="15" fill="rgb(249,116,53)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7974%" y="533" width="0.0804%" height="15" fill="rgb(248,170,1)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.7974%" y="517" width="0.0804%" height="15" fill="rgb(244,105,10)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.7974%" y="501" width="0.0804%" height="15" fill="rgb(229,100,5)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.7974%" y="485" width="0.0804%" height="15" fill="rgb(233,221,39)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7974%" y="469" width="0.0804%" height="15" fill="rgb(233,88,21)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7974%" y="453" width="0.0804%" height="15" fill="rgb(206,13,0)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.7974%" y="437" width="0.0804%" height="15" fill="rgb(242,15,35)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.7974%" y="421" width="0.0804%" height="15" fill="rgb(247,142,41)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.7974%" y="405" width="0.0804%" height="15" fill="rgb(245,51,29)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.7974%" y="389" width="0.0804%" height="15" fill="rgb(228,209,43)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7974%" y="373" width="0.0804%" height="15" fill="rgb(233,185,9)" fg:x="1030" fg:w="1"/><text x="83.0474%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="82.5563%" y="677" width="0.8842%" height="15" fill="rgb(226,93,0)" fg:x="1027" fg:w="11"/><text x="82.8063%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (11 samples, 0.88%)</title><rect x="82.5563%" y="661" width="0.8842%" height="15" fill="rgb(245,194,43)" fg:x="1027" fg:w="11"/><text x="82.8063%" y="671.50"></text></g><g><title>engine::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="82.8778%" y="645" width="0.5627%" height="15" fill="rgb(211,145,34)" fg:x="1031" fg:w="7"/><text x="83.1278%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="82.8778%" y="629" width="0.5627%" height="15" fill="rgb(231,228,28)" fg:x="1031" fg:w="7"/><text x="83.1278%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.56%)</title><rect x="82.8778%" y="613" width="0.5627%" height="15" fill="rgb(236,149,4)" fg:x="1031" fg:w="7"/><text x="83.1278%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="82.8778%" y="597" width="0.5627%" height="15" fill="rgb(234,114,38)" fg:x="1031" fg:w="7"/><text x="83.1278%" y="607.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="82.8778%" y="581" width="0.5627%" height="15" fill="rgb(246,132,51)" fg:x="1031" fg:w="7"/><text x="83.1278%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.4405%" y="661" width="0.0804%" height="15" fill="rgb(251,137,22)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="83.4405%" y="645" width="0.0804%" height="15" fill="rgb(243,59,52)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.4405%" y="629" width="0.0804%" height="15" fill="rgb(239,56,28)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.4405%" y="613" width="0.0804%" height="15" fill="rgb(218,168,27)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.4405%" y="597" width="0.0804%" height="15" fill="rgb(232,165,11)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.4405%" y="581" width="0.0804%" height="15" fill="rgb(253,55,41)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.4405%" y="565" width="0.0804%" height="15" fill="rgb(233,206,24)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.4405%" y="549" width="0.0804%" height="15" fill="rgb(220,199,8)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.4405%" y="533" width="0.0804%" height="15" fill="rgb(254,65,26)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.4405%" y="517" width="0.0804%" height="15" fill="rgb(253,102,23)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4405%" y="501" width="0.0804%" height="15" fill="rgb(231,103,35)" fg:x="1038" fg:w="1"/><text x="83.6905%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="83.5209%" y="661" width="0.0804%" height="15" fill="rgb(238,26,10)" fg:x="1039" fg:w="1"/><text x="83.7709%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5209%" y="645" width="0.0804%" height="15" fill="rgb(234,191,34)" fg:x="1039" fg:w="1"/><text x="83.7709%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5209%" y="629" width="0.0804%" height="15" fill="rgb(206,210,9)" fg:x="1039" fg:w="1"/><text x="83.7709%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5209%" y="613" width="0.0804%" height="15" fill="rgb(219,155,3)" fg:x="1039" fg:w="1"/><text x="83.7709%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.5209%" y="597" width="0.0804%" height="15" fill="rgb(221,62,52)" fg:x="1039" fg:w="1"/><text x="83.7709%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.5209%" y="581" width="0.0804%" height="15" fill="rgb(215,197,36)" fg:x="1039" fg:w="1"/><text x="83.7709%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.5209%" y="565" width="0.0804%" height="15" fill="rgb(226,222,6)" fg:x="1039" fg:w="1"/><text x="83.7709%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="83.5209%" y="549" width="0.0804%" height="15" fill="rgb(215,58,28)" fg:x="1039" fg:w="1"/><text x="83.7709%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="83.5209%" y="533" width="0.0804%" height="15" fill="rgb(212,148,2)" fg:x="1039" fg:w="1"/><text x="83.7709%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6013%" y="645" width="0.0804%" height="15" fill="rgb(208,21,42)" fg:x="1040" fg:w="1"/><text x="83.8513%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="83.6013%" y="661" width="0.1608%" height="15" fill="rgb(209,107,26)" fg:x="1040" fg:w="2"/><text x="83.8513%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6817%" y="645" width="0.0804%" height="15" fill="rgb(254,60,47)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.6817%" y="629" width="0.0804%" height="15" fill="rgb(207,226,45)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6817%" y="613" width="0.0804%" height="15" fill="rgb(223,124,22)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.6817%" y="597" width="0.0804%" height="15" fill="rgb(240,162,13)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6817%" y="581" width="0.0804%" height="15" fill="rgb(244,199,31)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6817%" y="565" width="0.0804%" height="15" fill="rgb(207,92,16)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.6817%" y="549" width="0.0804%" height="15" fill="rgb(215,31,19)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (16 samples, 1.29%)</title><rect x="82.5563%" y="693" width="1.2862%" height="15" fill="rgb(245,118,14)" fg:x="1027" fg:w="16"/><text x="82.8063%" y="703.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="83.4405%" y="677" width="0.4019%" height="15" fill="rgb(248,12,46)" fg:x="1038" fg:w="5"/><text x="83.6905%" y="687.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="83.7621%" y="661" width="0.0804%" height="15" fill="rgb(209,119,0)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.7621%" y="645" width="0.0804%" height="15" fill="rgb(254,51,44)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="83.7621%" y="629" width="0.0804%" height="15" fill="rgb(253,182,35)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.7621%" y="613" width="0.0804%" height="15" fill="rgb(205,198,39)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.7621%" y="597" width="0.0804%" height="15" fill="rgb(251,175,48)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="83.8424%" y="661" width="0.0804%" height="15" fill="rgb(239,38,17)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="83.8424%" y="645" width="0.0804%" height="15" fill="rgb(212,101,8)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.8424%" y="629" width="0.0804%" height="15" fill="rgb(228,35,17)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.8424%" y="613" width="0.0804%" height="15" fill="rgb(214,95,8)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.8424%" y="597" width="0.0804%" height="15" fill="rgb(210,176,35)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.8424%" y="581" width="0.0804%" height="15" fill="rgb(226,4,3)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.8424%" y="565" width="0.0804%" height="15" fill="rgb(232,133,14)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.8424%" y="549" width="0.0804%" height="15" fill="rgb(250,191,8)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.8424%" y="533" width="0.0804%" height="15" fill="rgb(213,12,45)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.8424%" y="517" width="0.0804%" height="15" fill="rgb(233,78,26)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.8424%" y="501" width="0.0804%" height="15" fill="rgb(245,222,11)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.8424%" y="485" width="0.0804%" height="15" fill="rgb(216,174,12)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.8424%" y="469" width="0.0804%" height="15" fill="rgb(213,15,9)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8424%" y="453" width="0.0804%" height="15" fill="rgb(238,103,32)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9228%" y="613" width="0.0804%" height="15" fill="rgb(245,85,15)" fg:x="1044" fg:w="1"/><text x="84.1728%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.0032%" y="485" width="0.0804%" height="15" fill="rgb(254,204,5)" fg:x="1045" fg:w="1"/><text x="84.2532%" y="495.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="83.9228%" y="645" width="0.2412%" height="15" fill="rgb(231,178,15)" fg:x="1044" fg:w="3"/><text x="84.1728%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="83.9228%" y="629" width="0.2412%" height="15" fill="rgb(248,151,3)" fg:x="1044" fg:w="3"/><text x="84.1728%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.0032%" y="613" width="0.1608%" height="15" fill="rgb(250,139,13)" fg:x="1045" fg:w="2"/><text x="84.2532%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.0032%" y="597" width="0.1608%" height="15" fill="rgb(243,107,53)" fg:x="1045" fg:w="2"/><text x="84.2532%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="84.0032%" y="581" width="0.1608%" height="15" fill="rgb(232,81,15)" fg:x="1045" fg:w="2"/><text x="84.2532%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.0032%" y="565" width="0.1608%" height="15" fill="rgb(225,187,48)" fg:x="1045" fg:w="2"/><text x="84.2532%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="84.0032%" y="549" width="0.1608%" height="15" fill="rgb(205,116,12)" fg:x="1045" fg:w="2"/><text x="84.2532%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.0032%" y="533" width="0.1608%" height="15" fill="rgb(220,222,31)" fg:x="1045" fg:w="2"/><text x="84.2532%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="84.0032%" y="517" width="0.1608%" height="15" fill="rgb(233,187,49)" fg:x="1045" fg:w="2"/><text x="84.2532%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.0032%" y="501" width="0.1608%" height="15" fill="rgb(211,168,53)" fg:x="1045" fg:w="2"/><text x="84.2532%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.0836%" y="485" width="0.0804%" height="15" fill="rgb(206,160,16)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0836%" y="469" width="0.0804%" height="15" fill="rgb(254,164,13)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0836%" y="453" width="0.0804%" height="15" fill="rgb(229,45,30)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="83.8424%" y="693" width="0.4019%" height="15" fill="rgb(237,32,10)" fg:x="1043" fg:w="5"/><text x="84.0924%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="83.8424%" y="677" width="0.4019%" height="15" fill="rgb(251,20,47)" fg:x="1043" fg:w="5"/><text x="84.0924%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="83.9228%" y="661" width="0.3215%" height="15" fill="rgb(251,116,12)" fg:x="1044" fg:w="4"/><text x="84.1728%" y="671.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="84.1640%" y="645" width="0.0804%" height="15" fill="rgb(214,227,27)" fg:x="1047" fg:w="1"/><text x="84.4140%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="84.2444%" y="677" width="0.0804%" height="15" fill="rgb(248,10,53)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="84.2444%" y="661" width="0.0804%" height="15" fill="rgb(221,176,25)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="84.2444%" y="645" width="0.0804%" height="15" fill="rgb(205,70,46)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.2444%" y="629" width="0.0804%" height="15" fill="rgb(217,45,38)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.2444%" y="613" width="0.0804%" height="15" fill="rgb(243,6,54)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.2444%" y="597" width="0.0804%" height="15" fill="rgb(242,76,23)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2444%" y="581" width="0.0804%" height="15" fill="rgb(239,166,0)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2444%" y="565" width="0.0804%" height="15" fill="rgb(238,174,32)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="84.2444%" y="549" width="0.0804%" height="15" fill="rgb(238,124,44)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2444%" y="533" width="0.0804%" height="15" fill="rgb(206,185,9)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.2444%" y="517" width="0.0804%" height="15" fill="rgb(215,157,17)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2444%" y="501" width="0.0804%" height="15" fill="rgb(251,17,29)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2444%" y="485" width="0.0804%" height="15" fill="rgb(227,113,27)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="84.3248%" y="661" width="0.0804%" height="15" fill="rgb(217,226,24)" fg:x="1049" fg:w="1"/><text x="84.5748%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="84.3248%" y="645" width="0.0804%" height="15" fill="rgb(251,99,38)" fg:x="1049" fg:w="1"/><text x="84.5748%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.3248%" y="629" width="0.0804%" height="15" fill="rgb(231,147,19)" fg:x="1049" fg:w="1"/><text x="84.5748%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4051%" y="565" width="0.0804%" height="15" fill="rgb(230,86,8)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4051%" y="549" width="0.0804%" height="15" fill="rgb(237,159,39)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4051%" y="533" width="0.0804%" height="15" fill="rgb(247,179,47)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4051%" y="517" width="0.0804%" height="15" fill="rgb(253,152,26)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4051%" y="501" width="0.0804%" height="15" fill="rgb(222,211,15)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4051%" y="485" width="0.0804%" height="15" fill="rgb(236,193,6)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.4051%" y="469" width="0.0804%" height="15" fill="rgb(226,206,10)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.4051%" y="453" width="0.0804%" height="15" fill="rgb(213,125,22)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.4051%" y="437" width="0.0804%" height="15" fill="rgb(221,66,28)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4051%" y="421" width="0.0804%" height="15" fill="rgb(222,84,53)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4051%" y="405" width="0.0804%" height="15" fill="rgb(243,50,15)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.4051%" y="389" width="0.0804%" height="15" fill="rgb(208,184,23)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.4051%" y="373" width="0.0804%" height="15" fill="rgb(221,83,2)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.4051%" y="357" width="0.0804%" height="15" fill="rgb(236,53,24)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.4051%" y="341" width="0.0804%" height="15" fill="rgb(244,171,29)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4051%" y="325" width="0.0804%" height="15" fill="rgb(205,19,11)" fg:x="1050" fg:w="1"/><text x="84.6551%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.4051%" y="629" width="0.1608%" height="15" fill="rgb(207,108,29)" fg:x="1050" fg:w="2"/><text x="84.6551%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.4051%" y="613" width="0.1608%" height="15" fill="rgb(236,215,43)" fg:x="1050" fg:w="2"/><text x="84.6551%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.4051%" y="597" width="0.1608%" height="15" fill="rgb(213,58,35)" fg:x="1050" fg:w="2"/><text x="84.6551%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4051%" y="581" width="0.1608%" height="15" fill="rgb(220,211,46)" fg:x="1050" fg:w="2"/><text x="84.6551%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4855%" y="565" width="0.0804%" height="15" fill="rgb(212,134,16)" fg:x="1051" fg:w="1"/><text x="84.7355%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="84.5659%" y="613" width="0.0804%" height="15" fill="rgb(232,90,44)" fg:x="1052" fg:w="1"/><text x="84.8159%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="84.4051%" y="661" width="0.3215%" height="15" fill="rgb(212,18,36)" fg:x="1050" fg:w="4"/><text x="84.6551%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="84.4051%" y="645" width="0.3215%" height="15" fill="rgb(206,112,24)" fg:x="1050" fg:w="4"/><text x="84.6551%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.5659%" y="629" width="0.1608%" height="15" fill="rgb(238,223,40)" fg:x="1052" fg:w="2"/><text x="84.8159%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.6463%" y="613" width="0.0804%" height="15" fill="rgb(226,169,20)" fg:x="1053" fg:w="1"/><text x="84.8963%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.6463%" y="597" width="0.0804%" height="15" fill="rgb(241,64,52)" fg:x="1053" fg:w="1"/><text x="84.8963%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6463%" y="581" width="0.0804%" height="15" fill="rgb(228,120,25)" fg:x="1053" fg:w="1"/><text x="84.8963%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6463%" y="565" width="0.0804%" height="15" fill="rgb(234,108,19)" fg:x="1053" fg:w="1"/><text x="84.8963%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6463%" y="549" width="0.0804%" height="15" fill="rgb(236,133,29)" fg:x="1053" fg:w="1"/><text x="84.8963%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7267%" y="645" width="0.0804%" height="15" fill="rgb(246,174,53)" fg:x="1054" fg:w="1"/><text x="84.9767%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.7267%" y="629" width="0.0804%" height="15" fill="rgb(210,105,35)" fg:x="1054" fg:w="1"/><text x="84.9767%" y="639.50"></text></g><g><title>plugins_core::build::Build::occupying (8 samples, 0.64%)</title><rect x="84.2444%" y="693" width="0.6431%" height="15" fill="rgb(225,27,26)" fg:x="1048" fg:w="8"/><text x="84.4944%" y="703.50"></text></g><g><title>plugins_core::tools::set_occupying (7 samples, 0.56%)</title><rect x="84.3248%" y="677" width="0.5627%" height="15" fill="rgb(233,2,39)" fg:x="1049" fg:w="7"/><text x="84.5748%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="84.7267%" y="661" width="0.1608%" height="15" fill="rgb(219,164,26)" fg:x="1054" fg:w="2"/><text x="84.9767%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8071%" y="645" width="0.0804%" height="15" fill="rgb(236,211,5)" fg:x="1055" fg:w="1"/><text x="85.0571%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.8071%" y="629" width="0.0804%" height="15" fill="rgb(244,227,23)" fg:x="1055" fg:w="1"/><text x="85.0571%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8071%" y="613" width="0.0804%" height="15" fill="rgb(230,184,8)" fg:x="1055" fg:w="1"/><text x="85.0571%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.8875%" y="629" width="0.0804%" height="15" fill="rgb(217,125,48)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.8875%" y="613" width="0.0804%" height="15" fill="rgb(223,192,47)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.8875%" y="597" width="0.0804%" height="15" fill="rgb(226,119,10)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.8875%" y="581" width="0.0804%" height="15" fill="rgb(221,49,29)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8875%" y="565" width="0.0804%" height="15" fill="rgb(217,205,19)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.8875%" y="549" width="0.0804%" height="15" fill="rgb(242,104,7)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8875%" y="533" width="0.0804%" height="15" fill="rgb(209,154,48)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.8875%" y="517" width="0.0804%" height="15" fill="rgb(219,213,46)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8875%" y="501" width="0.0804%" height="15" fill="rgb(229,105,38)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="511.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="84.8875%" y="645" width="0.1608%" height="15" fill="rgb(205,151,5)" fg:x="1056" fg:w="2"/><text x="85.1375%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.9678%" y="629" width="0.0804%" height="15" fill="rgb(248,115,40)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.9678%" y="613" width="0.0804%" height="15" fill="rgb(206,179,2)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.9678%" y="597" width="0.0804%" height="15" fill="rgb(230,103,24)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9678%" y="581" width="0.0804%" height="15" fill="rgb(218,152,4)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9678%" y="565" width="0.0804%" height="15" fill="rgb(236,161,54)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="84.9678%" y="549" width="0.0804%" height="15" fill="rgb(226,65,17)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9678%" y="533" width="0.0804%" height="15" fill="rgb(221,134,44)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9678%" y="517" width="0.0804%" height="15" fill="rgb(251,129,4)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9678%" y="501" width="0.0804%" height="15" fill="rgb(244,32,34)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9678%" y="485" width="0.0804%" height="15" fill="rgb(251,224,37)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="84.8875%" y="677" width="0.2412%" height="15" fill="rgb(248,117,31)" fg:x="1056" fg:w="3"/><text x="85.1375%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="84.8875%" y="661" width="0.2412%" height="15" fill="rgb(222,208,37)" fg:x="1056" fg:w="3"/><text x="85.1375%" y="671.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="85.0482%" y="645" width="0.0804%" height="15" fill="rgb(234,211,25)" fg:x="1058" fg:w="1"/><text x="85.2982%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0482%" y="629" width="0.0804%" height="15" fill="rgb(211,72,6)" fg:x="1058" fg:w="1"/><text x="85.2982%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.0482%" y="613" width="0.0804%" height="15" fill="rgb(249,198,38)" fg:x="1058" fg:w="1"/><text x="85.2982%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.1286%" y="629" width="0.0804%" height="15" fill="rgb(221,86,51)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.1286%" y="613" width="0.0804%" height="15" fill="rgb(226,178,43)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (67 samples, 5.39%)</title><rect x="79.9035%" y="709" width="5.3859%" height="15" fill="rgb(215,145,7)" fg:x="994" fg:w="67"/><text x="80.1535%" y="719.50">plugins..</text></g><g><title>plugins_core::build::Build::with_username (5 samples, 0.40%)</title><rect x="84.8875%" y="693" width="0.4019%" height="15" fill="rgb(250,202,36)" fg:x="1056" fg:w="5"/><text x="85.1375%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="85.1286%" y="677" width="0.1608%" height="15" fill="rgb(215,86,13)" fg:x="1059" fg:w="2"/><text x="85.3786%" y="687.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="85.1286%" y="661" width="0.1608%" height="15" fill="rgb(221,134,12)" fg:x="1059" fg:w="2"/><text x="85.3786%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.1286%" y="645" width="0.1608%" height="15" fill="rgb(213,82,10)" fg:x="1059" fg:w="2"/><text x="85.3786%" y="655.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2090%" y="629" width="0.0804%" height="15" fill="rgb(214,142,0)" fg:x="1060" fg:w="1"/><text x="85.4590%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2090%" y="613" width="0.0804%" height="15" fill="rgb(205,145,9)" fg:x="1060" fg:w="1"/><text x="85.4590%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.2090%" y="597" width="0.0804%" height="15" fill="rgb(244,214,8)" fg:x="1060" fg:w="1"/><text x="85.4590%" y="607.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (101 samples, 8.12%)</title><rect x="77.3312%" y="725" width="8.1190%" height="15" fill="rgb(224,72,51)" fg:x="962" fg:w="101"/><text x="77.5812%" y="735.50">&lt;tests::Hol..</text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="85.2894%" y="709" width="0.1608%" height="15" fill="rgb(233,137,37)" fg:x="1061" fg:w="2"/><text x="85.5394%" y="719.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="85.2894%" y="693" width="0.1608%" height="15" fill="rgb(208,71,28)" fg:x="1061" fg:w="2"/><text x="85.5394%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="85.2894%" y="677" width="0.1608%" height="15" fill="rgb(226,31,7)" fg:x="1061" fg:w="2"/><text x="85.5394%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="85.3698%" y="661" width="0.0804%" height="15" fill="rgb(229,62,18)" fg:x="1062" fg:w="1"/><text x="85.6198%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.3698%" y="645" width="0.0804%" height="15" fill="rgb(226,74,28)" fg:x="1062" fg:w="1"/><text x="85.6198%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.3698%" y="629" width="0.0804%" height="15" fill="rgb(214,170,18)" fg:x="1062" fg:w="1"/><text x="85.6198%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3698%" y="613" width="0.0804%" height="15" fill="rgb(227,229,35)" fg:x="1062" fg:w="1"/><text x="85.6198%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3698%" y="597" width="0.0804%" height="15" fill="rgb(225,181,39)" fg:x="1062" fg:w="1"/><text x="85.6198%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="85.3698%" y="581" width="0.0804%" height="15" fill="rgb(253,124,44)" fg:x="1062" fg:w="1"/><text x="85.6198%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.4502%" y="725" width="0.0804%" height="15" fill="rgb(220,75,18)" fg:x="1063" fg:w="1"/><text x="85.7002%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="85.5305%" y="725" width="0.0804%" height="15" fill="rgb(239,175,43)" fg:x="1064" fg:w="1"/><text x="85.7805%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="85.5305%" y="709" width="0.0804%" height="15" fill="rgb(228,112,50)" fg:x="1064" fg:w="1"/><text x="85.7805%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryEntityStorageFactory&gt; (1 samples, 0.08%)</title><rect x="85.5305%" y="693" width="0.0804%" height="15" fill="rgb(232,105,36)" fg:x="1064" fg:w="1"/><text x="85.7805%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="85.6109%" y="693" width="0.0804%" height="15" fill="rgb(227,137,47)" fg:x="1065" fg:w="1"/><text x="85.8609%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6109%" y="677" width="0.0804%" height="15" fill="rgb(217,51,9)" fg:x="1065" fg:w="1"/><text x="85.8609%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.6109%" y="661" width="0.0804%" height="15" fill="rgb(245,117,0)" fg:x="1065" fg:w="1"/><text x="85.8609%" y="671.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="85.6913%" y="693" width="0.0804%" height="15" fill="rgb(252,52,30)" fg:x="1066" fg:w="1"/><text x="85.9413%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="85.6913%" y="677" width="0.0804%" height="15" fill="rgb(227,85,33)" fg:x="1066" fg:w="1"/><text x="85.9413%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.6913%" y="661" width="0.0804%" height="15" fill="rgb(220,157,20)" fg:x="1066" fg:w="1"/><text x="85.9413%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6913%" y="645" width="0.0804%" height="15" fill="rgb(254,14,34)" fg:x="1066" fg:w="1"/><text x="85.9413%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6913%" y="629" width="0.0804%" height="15" fill="rgb(216,103,41)" fg:x="1066" fg:w="1"/><text x="85.9413%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="85.7717%" y="645" width="0.0804%" height="15" fill="rgb(245,221,9)" fg:x="1067" fg:w="1"/><text x="86.0217%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.7717%" y="629" width="0.0804%" height="15" fill="rgb(254,136,47)" fg:x="1067" fg:w="1"/><text x="86.0217%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.7717%" y="613" width="0.0804%" height="15" fill="rgb(235,71,46)" fg:x="1067" fg:w="1"/><text x="86.0217%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.7717%" y="597" width="0.0804%" height="15" fill="rgb(242,154,29)" fg:x="1067" fg:w="1"/><text x="86.0217%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.7717%" y="581" width="0.0804%" height="15" fill="rgb(210,65,31)" fg:x="1067" fg:w="1"/><text x="86.0217%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.8521%" y="629" width="0.0804%" height="15" fill="rgb(244,9,50)" fg:x="1068" fg:w="1"/><text x="86.1021%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.9325%" y="613" width="0.0804%" height="15" fill="rgb(215,141,38)" fg:x="1069" fg:w="1"/><text x="86.1825%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.9325%" y="597" width="0.0804%" height="15" fill="rgb(241,129,6)" fg:x="1069" fg:w="1"/><text x="86.1825%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.9325%" y="581" width="0.0804%" height="15" fill="rgb(253,169,4)" fg:x="1069" fg:w="1"/><text x="86.1825%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.0129%" y="613" width="0.1608%" height="15" fill="rgb(237,82,36)" fg:x="1070" fg:w="2"/><text x="86.2629%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.0129%" y="597" width="0.1608%" height="15" fill="rgb(209,171,11)" fg:x="1070" fg:w="2"/><text x="86.2629%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.0932%" y="581" width="0.0804%" height="15" fill="rgb(242,19,22)" fg:x="1071" fg:w="1"/><text x="86.3432%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.2540%" y="597" width="0.0804%" height="15" fill="rgb(251,122,24)" fg:x="1073" fg:w="1"/><text x="86.5040%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.3344%" y="565" width="0.1608%" height="15" fill="rgb(226,166,42)" fg:x="1074" fg:w="2"/><text x="86.5844%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.3344%" y="549" width="0.1608%" height="15" fill="rgb(244,101,48)" fg:x="1074" fg:w="2"/><text x="86.5844%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.4148%" y="533" width="0.0804%" height="15" fill="rgb(227,125,1)" fg:x="1075" fg:w="1"/><text x="86.6648%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.4148%" y="517" width="0.0804%" height="15" fill="rgb(206,79,43)" fg:x="1075" fg:w="1"/><text x="86.6648%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="85.8521%" y="645" width="0.7235%" height="15" fill="rgb(241,109,41)" fg:x="1068" fg:w="9"/><text x="86.1021%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="85.9325%" y="629" width="0.6431%" height="15" fill="rgb(219,73,4)" fg:x="1069" fg:w="8"/><text x="86.1825%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="86.1736%" y="613" width="0.4019%" height="15" fill="rgb(239,25,41)" fg:x="1072" fg:w="5"/><text x="86.4236%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="86.3344%" y="597" width="0.2412%" height="15" fill="rgb(208,88,46)" fg:x="1074" fg:w="3"/><text x="86.5844%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="86.3344%" y="581" width="0.2412%" height="15" fill="rgb(239,184,9)" fg:x="1074" fg:w="3"/><text x="86.5844%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4952%" y="565" width="0.0804%" height="15" fill="rgb(223,114,13)" fg:x="1076" fg:w="1"/><text x="86.7452%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4952%" y="549" width="0.0804%" height="15" fill="rgb(214,28,42)" fg:x="1076" fg:w="1"/><text x="86.7452%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="85.7717%" y="661" width="0.8842%" height="15" fill="rgb(252,32,44)" fg:x="1067" fg:w="11"/><text x="86.0217%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.5756%" y="645" width="0.0804%" height="15" fill="rgb(231,159,4)" fg:x="1077" fg:w="1"/><text x="86.8256%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.5756%" y="629" width="0.0804%" height="15" fill="rgb(210,35,26)" fg:x="1077" fg:w="1"/><text x="86.8256%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.5756%" y="613" width="0.0804%" height="15" fill="rgb(208,190,37)" fg:x="1077" fg:w="1"/><text x="86.8256%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7363%" y="613" width="0.0804%" height="15" fill="rgb(226,148,22)" fg:x="1079" fg:w="1"/><text x="86.9863%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8167%" y="581" width="0.0804%" height="15" fill="rgb(242,153,24)" fg:x="1080" fg:w="1"/><text x="87.0667%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="86.6559%" y="661" width="0.3215%" height="15" fill="rgb(213,133,7)" fg:x="1078" fg:w="4"/><text x="86.9059%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="86.6559%" y="645" width="0.3215%" height="15" fill="rgb(248,206,18)" fg:x="1078" fg:w="4"/><text x="86.9059%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="86.6559%" y="629" width="0.3215%" height="15" fill="rgb(233,157,4)" fg:x="1078" fg:w="4"/><text x="86.9059%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.8167%" y="613" width="0.1608%" height="15" fill="rgb(249,179,32)" fg:x="1080" fg:w="2"/><text x="87.0667%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.8167%" y="597" width="0.1608%" height="15" fill="rgb(248,69,35)" fg:x="1080" fg:w="2"/><text x="87.0667%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8971%" y="581" width="0.0804%" height="15" fill="rgb(249,158,38)" fg:x="1081" fg:w="1"/><text x="87.1471%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8971%" y="565" width="0.0804%" height="15" fill="rgb(223,18,43)" fg:x="1081" fg:w="1"/><text x="87.1471%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8971%" y="549" width="0.0804%" height="15" fill="rgb(238,42,45)" fg:x="1081" fg:w="1"/><text x="87.1471%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8971%" y="533" width="0.0804%" height="15" fill="rgb(219,65,47)" fg:x="1081" fg:w="1"/><text x="87.1471%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.0579%" y="597" width="0.1608%" height="15" fill="rgb(248,153,12)" fg:x="1083" fg:w="2"/><text x="87.3079%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2990%" y="581" width="0.0804%" height="15" fill="rgb(240,118,4)" fg:x="1086" fg:w="1"/><text x="87.5490%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5402%" y="501" width="0.0804%" height="15" fill="rgb(250,96,34)" fg:x="1089" fg:w="1"/><text x="87.7902%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="87.0579%" y="629" width="0.6431%" height="15" fill="rgb(221,15,4)" fg:x="1083" fg:w="8"/><text x="87.3079%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="87.0579%" y="613" width="0.6431%" height="15" fill="rgb(217,149,33)" fg:x="1083" fg:w="8"/><text x="87.3079%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="87.2186%" y="597" width="0.4823%" height="15" fill="rgb(213,58,29)" fg:x="1085" fg:w="6"/><text x="87.4686%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="87.3794%" y="581" width="0.3215%" height="15" fill="rgb(236,218,9)" fg:x="1087" fg:w="4"/><text x="87.6294%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.4598%" y="565" width="0.2412%" height="15" fill="rgb(248,40,19)" fg:x="1088" fg:w="3"/><text x="87.7098%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.5402%" y="549" width="0.1608%" height="15" fill="rgb(212,17,6)" fg:x="1089" fg:w="2"/><text x="87.7902%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.5402%" y="533" width="0.1608%" height="15" fill="rgb(206,212,20)" fg:x="1089" fg:w="2"/><text x="87.7902%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.5402%" y="517" width="0.1608%" height="15" fill="rgb(229,80,37)" fg:x="1089" fg:w="2"/><text x="87.7902%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.6206%" y="501" width="0.0804%" height="15" fill="rgb(253,8,37)" fg:x="1090" fg:w="1"/><text x="87.8706%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6206%" y="485" width="0.0804%" height="15" fill="rgb(215,16,43)" fg:x="1090" fg:w="1"/><text x="87.8706%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (11 samples, 0.88%)</title><rect x="86.9775%" y="645" width="0.8842%" height="15" fill="rgb(236,219,16)" fg:x="1082" fg:w="11"/><text x="87.2275%" y="655.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="87.7010%" y="629" width="0.1608%" height="15" fill="rgb(251,0,3)" fg:x="1091" fg:w="2"/><text x="87.9510%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="87.7814%" y="613" width="0.0804%" height="15" fill="rgb(207,133,37)" fg:x="1092" fg:w="1"/><text x="88.0314%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="87.7814%" y="597" width="0.0804%" height="15" fill="rgb(250,143,20)" fg:x="1092" fg:w="1"/><text x="88.0314%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.8617%" y="613" width="0.0804%" height="15" fill="rgb(242,19,50)" fg:x="1093" fg:w="1"/><text x="88.1117%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="88.0225%" y="565" width="0.1608%" height="15" fill="rgb(206,124,43)" fg:x="1095" fg:w="2"/><text x="88.2725%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.0225%" y="549" width="0.1608%" height="15" fill="rgb(229,4,38)" fg:x="1095" fg:w="2"/><text x="88.2725%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1029%" y="533" width="0.0804%" height="15" fill="rgb(247,220,45)" fg:x="1096" fg:w="1"/><text x="88.3529%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3441%" y="533" width="0.0804%" height="15" fill="rgb(247,195,0)" fg:x="1099" fg:w="1"/><text x="88.5941%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.5048%" y="485" width="0.0804%" height="15" fill="rgb(252,12,19)" fg:x="1101" fg:w="1"/><text x="88.7548%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.5048%" y="469" width="0.0804%" height="15" fill="rgb(222,49,50)" fg:x="1101" fg:w="1"/><text x="88.7548%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.5048%" y="453" width="0.0804%" height="15" fill="rgb(209,157,28)" fg:x="1101" fg:w="1"/><text x="88.7548%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="88.0225%" y="597" width="0.6431%" height="15" fill="rgb(238,174,24)" fg:x="1095" fg:w="8"/><text x="88.2725%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="88.0225%" y="581" width="0.6431%" height="15" fill="rgb(224,17,28)" fg:x="1095" fg:w="8"/><text x="88.2725%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="88.1833%" y="565" width="0.4823%" height="15" fill="rgb(249,7,29)" fg:x="1097" fg:w="6"/><text x="88.4333%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="88.3441%" y="549" width="0.3215%" height="15" fill="rgb(243,178,4)" fg:x="1099" fg:w="4"/><text x="88.5941%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="88.4244%" y="533" width="0.2412%" height="15" fill="rgb(246,138,35)" fg:x="1100" fg:w="3"/><text x="88.6744%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.5048%" y="517" width="0.1608%" height="15" fill="rgb(251,85,18)" fg:x="1101" fg:w="2"/><text x="88.7548%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.5048%" y="501" width="0.1608%" height="15" fill="rgb(254,55,9)" fg:x="1101" fg:w="2"/><text x="88.7548%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5852%" y="485" width="0.0804%" height="15" fill="rgb(248,4,50)" fg:x="1102" fg:w="1"/><text x="88.8352%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="87.8617%" y="645" width="0.8842%" height="15" fill="rgb(215,208,14)" fg:x="1093" fg:w="11"/><text x="88.1117%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="87.8617%" y="629" width="0.8842%" height="15" fill="rgb(218,37,18)" fg:x="1093" fg:w="11"/><text x="88.1117%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="87.9421%" y="613" width="0.8039%" height="15" fill="rgb(206,104,13)" fg:x="1094" fg:w="10"/><text x="88.1921%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6656%" y="597" width="0.0804%" height="15" fill="rgb(248,94,22)" fg:x="1103" fg:w="1"/><text x="88.9156%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6656%" y="581" width="0.0804%" height="15" fill="rgb(235,42,46)" fg:x="1103" fg:w="1"/><text x="88.9156%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6656%" y="565" width="0.0804%" height="15" fill="rgb(220,228,48)" fg:x="1103" fg:w="1"/><text x="88.9156%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.8264%" y="421" width="0.0804%" height="15" fill="rgb(216,58,12)" fg:x="1105" fg:w="1"/><text x="89.0764%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.8264%" y="405" width="0.0804%" height="15" fill="rgb(223,97,52)" fg:x="1105" fg:w="1"/><text x="89.0764%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.8264%" y="389" width="0.0804%" height="15" fill="rgb(208,159,17)" fg:x="1105" fg:w="1"/><text x="89.0764%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="88.8264%" y="453" width="0.2412%" height="15" fill="rgb(215,172,9)" fg:x="1105" fg:w="3"/><text x="89.0764%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="88.8264%" y="437" width="0.2412%" height="15" fill="rgb(252,175,30)" fg:x="1105" fg:w="3"/><text x="89.0764%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="88.9068%" y="421" width="0.1608%" height="15" fill="rgb(209,159,10)" fg:x="1106" fg:w="2"/><text x="89.1568%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.9068%" y="405" width="0.1608%" height="15" fill="rgb(229,73,51)" fg:x="1106" fg:w="2"/><text x="89.1568%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="88.8264%" y="485" width="0.3215%" height="15" fill="rgb(208,212,43)" fg:x="1105" fg:w="4"/><text x="89.0764%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="88.8264%" y="469" width="0.3215%" height="15" fill="rgb(254,123,53)" fg:x="1105" fg:w="4"/><text x="89.0764%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0675%" y="453" width="0.0804%" height="15" fill="rgb(254,128,49)" fg:x="1108" fg:w="1"/><text x="89.3175%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0675%" y="437" width="0.0804%" height="15" fill="rgb(246,16,16)" fg:x="1108" fg:w="1"/><text x="89.3175%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.0675%" y="421" width="0.0804%" height="15" fill="rgb(209,200,1)" fg:x="1108" fg:w="1"/><text x="89.3175%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="88.7460%" y="549" width="0.4823%" height="15" fill="rgb(235,9,3)" fg:x="1104" fg:w="6"/><text x="88.9960%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="88.7460%" y="533" width="0.4823%" height="15" fill="rgb(233,121,54)" fg:x="1104" fg:w="6"/><text x="88.9960%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="88.7460%" y="517" width="0.4823%" height="15" fill="rgb(236,80,25)" fg:x="1104" fg:w="6"/><text x="88.9960%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="88.8264%" y="501" width="0.4019%" height="15" fill="rgb(220,44,24)" fg:x="1105" fg:w="5"/><text x="89.0764%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.1479%" y="485" width="0.0804%" height="15" fill="rgb(236,225,16)" fg:x="1109" fg:w="1"/><text x="89.3979%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.1479%" y="469" width="0.0804%" height="15" fill="rgb(237,140,0)" fg:x="1109" fg:w="1"/><text x="89.3979%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1479%" y="453" width="0.0804%" height="15" fill="rgb(243,225,53)" fg:x="1109" fg:w="1"/><text x="89.3979%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.2283%" y="549" width="0.0804%" height="15" fill="rgb(240,140,30)" fg:x="1110" fg:w="1"/><text x="89.4783%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.2283%" y="533" width="0.0804%" height="15" fill="rgb(217,51,16)" fg:x="1110" fg:w="1"/><text x="89.4783%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="88.7460%" y="581" width="0.6431%" height="15" fill="rgb(245,75,50)" fg:x="1104" fg:w="8"/><text x="88.9960%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="88.7460%" y="565" width="0.6431%" height="15" fill="rgb(208,174,22)" fg:x="1104" fg:w="8"/><text x="88.9960%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3087%" y="549" width="0.0804%" height="15" fill="rgb(219,98,50)" fg:x="1111" fg:w="1"/><text x="89.5587%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3087%" y="533" width="0.0804%" height="15" fill="rgb(243,138,3)" fg:x="1111" fg:w="1"/><text x="89.5587%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3087%" y="517" width="0.0804%" height="15" fill="rgb(243,132,26)" fg:x="1111" fg:w="1"/><text x="89.5587%" y="527.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (46 samples, 3.70%)</title><rect x="85.7717%" y="693" width="3.6977%" height="15" fill="rgb(250,201,8)" fg:x="1067" fg:w="46"/><text x="86.0217%" y="703.50">engi..</text></g><g><title>engine::session::SavesEntities::check_for_changes (46 samples, 3.70%)</title><rect x="85.7717%" y="677" width="3.6977%" height="15" fill="rgb(213,91,26)" fg:x="1067" fg:w="46"/><text x="86.0217%" y="687.50">engi..</text></g><g><title>kernel::model::any_entity_changes (31 samples, 2.49%)</title><rect x="86.9775%" y="661" width="2.4920%" height="15" fill="rgb(229,117,1)" fg:x="1082" fg:w="31"/><text x="87.2275%" y="671.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="88.7460%" y="645" width="0.7235%" height="15" fill="rgb(229,24,6)" fg:x="1104" fg:w="9"/><text x="88.9960%" y="655.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="88.7460%" y="629" width="0.7235%" height="15" fill="rgb(206,69,11)" fg:x="1104" fg:w="9"/><text x="88.9960%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="88.7460%" y="613" width="0.7235%" height="15" fill="rgb(234,111,34)" fg:x="1104" fg:w="9"/><text x="88.9960%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="88.7460%" y="597" width="0.7235%" height="15" fill="rgb(213,187,51)" fg:x="1104" fg:w="9"/><text x="88.9960%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.3891%" y="581" width="0.0804%" height="15" fill="rgb(207,45,11)" fg:x="1112" fg:w="1"/><text x="89.6391%" y="591.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="89.4695%" y="693" width="0.0804%" height="15" fill="rgb(225,151,47)" fg:x="1113" fg:w="1"/><text x="89.7195%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="89.4695%" y="677" width="0.0804%" height="15" fill="rgb(211,226,5)" fg:x="1113" fg:w="1"/><text x="89.7195%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="89.4695%" y="661" width="0.0804%" height="15" fill="rgb(214,83,52)" fg:x="1113" fg:w="1"/><text x="89.7195%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="89.4695%" y="645" width="0.0804%" height="15" fill="rgb(229,49,53)" fg:x="1113" fg:w="1"/><text x="89.7195%" y="655.50"></text></g><g><title>engine::session::Session::close (50 samples, 4.02%)</title><rect x="85.6109%" y="725" width="4.0193%" height="15" fill="rgb(246,8,28)" fg:x="1065" fg:w="50"/><text x="85.8609%" y="735.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (50 samples, 4.02%)</title><rect x="85.6109%" y="709" width="4.0193%" height="15" fill="rgb(207,28,41)" fg:x="1065" fg:w="50"/><text x="85.8609%" y="719.50">engi..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="89.5498%" y="693" width="0.0804%" height="15" fill="rgb(254,22,25)" fg:x="1114" fg:w="1"/><text x="89.7998%" y="703.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="89.5498%" y="677" width="0.0804%" height="15" fill="rgb(209,120,42)" fg:x="1114" fg:w="1"/><text x="89.7998%" y="687.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="89.5498%" y="661" width="0.0804%" height="15" fill="rgb(216,194,18)" fg:x="1114" fg:w="1"/><text x="89.7998%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="89.5498%" y="645" width="0.0804%" height="15" fill="rgb(213,70,17)" fg:x="1114" fg:w="1"/><text x="89.7998%" y="655.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="89.5498%" y="629" width="0.0804%" height="15" fill="rgb(228,66,19)" fg:x="1114" fg:w="1"/><text x="89.7998%" y="639.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="89.5498%" y="613" width="0.0804%" height="15" fill="rgb(236,221,54)" fg:x="1114" fg:w="1"/><text x="89.7998%" y="623.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="89.5498%" y="597" width="0.0804%" height="15" fill="rgb(207,175,15)" fg:x="1114" fg:w="1"/><text x="89.7998%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.6302%" y="677" width="0.0804%" height="15" fill="rgb(234,76,8)" fg:x="1115" fg:w="1"/><text x="89.8802%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.6302%" y="661" width="0.0804%" height="15" fill="rgb(243,106,0)" fg:x="1115" fg:w="1"/><text x="89.8802%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.6302%" y="645" width="0.0804%" height="15" fill="rgb(208,48,19)" fg:x="1115" fg:w="1"/><text x="89.8802%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.7106%" y="565" width="0.1608%" height="15" fill="rgb(251,50,29)" fg:x="1116" fg:w="2"/><text x="89.9606%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.8714%" y="565" width="0.0804%" height="15" fill="rgb(222,31,49)" fg:x="1118" fg:w="1"/><text x="90.1214%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8714%" y="549" width="0.0804%" height="15" fill="rgb(232,33,18)" fg:x="1118" fg:w="1"/><text x="90.1214%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.9518%" y="565" width="0.0804%" height="15" fill="rgb(209,1,44)" fg:x="1119" fg:w="1"/><text x="90.2018%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.9518%" y="549" width="0.0804%" height="15" fill="rgb(211,7,1)" fg:x="1119" fg:w="1"/><text x="90.2018%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.9518%" y="533" width="0.0804%" height="15" fill="rgb(224,111,27)" fg:x="1119" fg:w="1"/><text x="90.2018%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.9518%" y="517" width="0.0804%" height="15" fill="rgb(252,195,39)" fg:x="1119" fg:w="1"/><text x="90.2018%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.9518%" y="501" width="0.0804%" height="15" fill="rgb(237,198,5)" fg:x="1119" fg:w="1"/><text x="90.2018%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.9518%" y="485" width="0.0804%" height="15" fill="rgb(232,148,1)" fg:x="1119" fg:w="1"/><text x="90.2018%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.9518%" y="469" width="0.0804%" height="15" fill="rgb(249,41,3)" fg:x="1119" fg:w="1"/><text x="90.2018%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="89.7106%" y="581" width="0.4019%" height="15" fill="rgb(215,14,33)" fg:x="1116" fg:w="5"/><text x="89.9606%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.0322%" y="565" width="0.0804%" height="15" fill="rgb(209,146,24)" fg:x="1120" fg:w="1"/><text x="90.2822%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.0322%" y="549" width="0.0804%" height="15" fill="rgb(219,51,47)" fg:x="1120" fg:w="1"/><text x="90.2822%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0322%" y="533" width="0.0804%" height="15" fill="rgb(234,217,40)" fg:x="1120" fg:w="1"/><text x="90.2822%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.2733%" y="485" width="0.1608%" height="15" fill="rgb(228,34,26)" fg:x="1123" fg:w="2"/><text x="90.5233%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3537%" y="469" width="0.0804%" height="15" fill="rgb(224,50,29)" fg:x="1124" fg:w="1"/><text x="90.6037%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="90.2733%" y="501" width="0.2412%" height="15" fill="rgb(205,79,51)" fg:x="1123" fg:w="3"/><text x="90.5233%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4341%" y="485" width="0.0804%" height="15" fill="rgb(218,136,28)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4341%" y="469" width="0.0804%" height="15" fill="rgb(220,150,10)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.4341%" y="453" width="0.0804%" height="15" fill="rgb(242,158,47)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.4341%" y="437" width="0.0804%" height="15" fill="rgb(209,68,0)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.4341%" y="421" width="0.0804%" height="15" fill="rgb(208,13,41)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4341%" y="405" width="0.0804%" height="15" fill="rgb(226,201,7)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4341%" y="389" width="0.0804%" height="15" fill="rgb(236,103,26)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.4341%" y="373" width="0.0804%" height="15" fill="rgb(243,162,8)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.4341%" y="357" width="0.0804%" height="15" fill="rgb(237,225,11)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.4341%" y="341" width="0.0804%" height="15" fill="rgb(247,186,32)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.4341%" y="325" width="0.0804%" height="15" fill="rgb(215,26,28)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="335.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (6 samples, 0.48%)</title><rect x="90.1125%" y="581" width="0.4823%" height="15" fill="rgb(208,121,6)" fg:x="1121" fg:w="6"/><text x="90.3625%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::modified (6 samples, 0.48%)</title><rect x="90.1125%" y="565" width="0.4823%" height="15" fill="rgb(225,91,3)" fg:x="1121" fg:w="6"/><text x="90.3625%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="90.1125%" y="549" width="0.4823%" height="15" fill="rgb(246,119,36)" fg:x="1121" fg:w="6"/><text x="90.3625%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="90.1125%" y="533" width="0.4823%" height="15" fill="rgb(254,173,2)" fg:x="1121" fg:w="6"/><text x="90.3625%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="90.2733%" y="517" width="0.3215%" height="15" fill="rgb(209,87,54)" fg:x="1123" fg:w="4"/><text x="90.5233%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5145%" y="501" width="0.0804%" height="15" fill="rgb(223,216,20)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5145%" y="485" width="0.0804%" height="15" fill="rgb(220,31,8)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.5145%" y="469" width="0.0804%" height="15" fill="rgb(220,185,15)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.5145%" y="453" width="0.0804%" height="15" fill="rgb(247,190,50)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.5145%" y="437" width="0.0804%" height="15" fill="rgb(239,173,47)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.5145%" y="421" width="0.0804%" height="15" fill="rgb(218,190,42)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.5145%" y="405" width="0.0804%" height="15" fill="rgb(251,207,16)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.5145%" y="389" width="0.0804%" height="15" fill="rgb(222,199,47)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.5145%" y="373" width="0.0804%" height="15" fill="rgb(245,190,7)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.5145%" y="357" width="0.0804%" height="15" fill="rgb(239,85,38)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.5145%" y="341" width="0.0804%" height="15" fill="rgb(229,69,51)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5145%" y="325" width="0.0804%" height="15" fill="rgb(231,104,51)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="335.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="90.5949%" y="485" width="0.0804%" height="15" fill="rgb(235,49,4)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6752%" y="389" width="0.0804%" height="15" fill="rgb(246,166,20)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6752%" y="373" width="0.0804%" height="15" fill="rgb(230,119,37)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6752%" y="357" width="0.0804%" height="15" fill="rgb(234,77,34)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6752%" y="341" width="0.0804%" height="15" fill="rgb(211,222,33)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6752%" y="325" width="0.0804%" height="15" fill="rgb(226,45,42)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6752%" y="309" width="0.0804%" height="15" fill="rgb(215,174,28)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.6752%" y="293" width="0.0804%" height="15" fill="rgb(254,173,49)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.6752%" y="277" width="0.0804%" height="15" fill="rgb(229,191,6)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.6752%" y="261" width="0.0804%" height="15" fill="rgb(212,145,22)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.6752%" y="245" width="0.0804%" height="15" fill="rgb(226,6,51)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.6752%" y="229" width="0.0804%" height="15" fill="rgb(227,128,8)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.6752%" y="213" width="0.0804%" height="15" fill="rgb(205,24,10)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.6752%" y="197" width="0.0804%" height="15" fill="rgb(217,147,27)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.6752%" y="181" width="0.0804%" height="15" fill="rgb(250,82,42)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.6752%" y="165" width="0.0804%" height="15" fill="rgb(248,93,17)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="175.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="90.6752%" y="149" width="0.0804%" height="15" fill="rgb(254,212,40)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="159.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="90.6752%" y="133" width="0.0804%" height="15" fill="rgb(229,209,2)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="143.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="90.6752%" y="469" width="0.1608%" height="15" fill="rgb(211,50,43)" fg:x="1128" fg:w="2"/><text x="90.9252%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="90.6752%" y="453" width="0.1608%" height="15" fill="rgb(245,196,29)" fg:x="1128" fg:w="2"/><text x="90.9252%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.6752%" y="437" width="0.1608%" height="15" fill="rgb(216,132,13)" fg:x="1128" fg:w="2"/><text x="90.9252%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="90.6752%" y="421" width="0.1608%" height="15" fill="rgb(251,108,21)" fg:x="1128" fg:w="2"/><text x="90.9252%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.6752%" y="405" width="0.1608%" height="15" fill="rgb(229,174,54)" fg:x="1128" fg:w="2"/><text x="90.9252%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7556%" y="389" width="0.0804%" height="15" fill="rgb(211,175,47)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7556%" y="373" width="0.0804%" height="15" fill="rgb(234,5,37)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7556%" y="357" width="0.0804%" height="15" fill="rgb(244,150,43)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7556%" y="341" width="0.0804%" height="15" fill="rgb(242,172,38)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.7556%" y="325" width="0.0804%" height="15" fill="rgb(205,27,8)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7556%" y="309" width="0.0804%" height="15" fill="rgb(217,57,3)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7556%" y="293" width="0.0804%" height="15" fill="rgb(242,21,38)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7556%" y="277" width="0.0804%" height="15" fill="rgb(209,64,43)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.7556%" y="261" width="0.0804%" height="15" fill="rgb(222,2,46)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.8360%" y="469" width="0.0804%" height="15" fill="rgb(218,19,44)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.8360%" y="453" width="0.0804%" height="15" fill="rgb(240,203,42)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.8360%" y="437" width="0.0804%" height="15" fill="rgb(229,23,45)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8360%" y="421" width="0.0804%" height="15" fill="rgb(205,228,51)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8360%" y="405" width="0.0804%" height="15" fill="rgb(239,36,20)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8360%" y="389" width="0.0804%" height="15" fill="rgb(248,172,27)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8360%" y="373" width="0.0804%" height="15" fill="rgb(244,55,32)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.9164%" y="373" width="0.0804%" height="15" fill="rgb(215,97,16)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9164%" y="357" width="0.0804%" height="15" fill="rgb(224,80,29)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="367.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="90.9164%" y="453" width="0.1608%" height="15" fill="rgb(216,93,47)" fg:x="1131" fg:w="2"/><text x="91.1664%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.9164%" y="437" width="0.1608%" height="15" fill="rgb(238,159,10)" fg:x="1131" fg:w="2"/><text x="91.1664%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.9164%" y="421" width="0.1608%" height="15" fill="rgb(223,98,29)" fg:x="1131" fg:w="2"/><text x="91.1664%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.9164%" y="405" width="0.1608%" height="15" fill="rgb(210,176,23)" fg:x="1131" fg:w="2"/><text x="91.1664%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.9164%" y="389" width="0.1608%" height="15" fill="rgb(242,162,27)" fg:x="1131" fg:w="2"/><text x="91.1664%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.9968%" y="373" width="0.0804%" height="15" fill="rgb(245,109,32)" fg:x="1132" fg:w="1"/><text x="91.2468%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.9968%" y="357" width="0.0804%" height="15" fill="rgb(248,87,8)" fg:x="1132" fg:w="1"/><text x="91.2468%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.9968%" y="341" width="0.0804%" height="15" fill="rgb(250,160,50)" fg:x="1132" fg:w="1"/><text x="91.2468%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.0772%" y="373" width="0.0804%" height="15" fill="rgb(246,165,25)" fg:x="1133" fg:w="1"/><text x="91.3272%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.0772%" y="357" width="0.0804%" height="15" fill="rgb(249,219,3)" fg:x="1133" fg:w="1"/><text x="91.3272%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="91.0772%" y="341" width="0.0804%" height="15" fill="rgb(226,66,5)" fg:x="1133" fg:w="1"/><text x="91.3272%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.0772%" y="325" width="0.0804%" height="15" fill="rgb(250,220,43)" fg:x="1133" fg:w="1"/><text x="91.3272%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="91.0772%" y="309" width="0.0804%" height="15" fill="rgb(225,111,31)" fg:x="1133" fg:w="1"/><text x="91.3272%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.0772%" y="293" width="0.0804%" height="15" fill="rgb(248,106,18)" fg:x="1133" fg:w="1"/><text x="91.3272%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0772%" y="277" width="0.0804%" height="15" fill="rgb(220,226,45)" fg:x="1133" fg:w="1"/><text x="91.3272%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="91.1576%" y="373" width="0.0804%" height="15" fill="rgb(208,58,53)" fg:x="1134" fg:w="1"/><text x="91.4076%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.1576%" y="357" width="0.0804%" height="15" fill="rgb(209,133,1)" fg:x="1134" fg:w="1"/><text x="91.4076%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="91.1576%" y="341" width="0.0804%" height="15" fill="rgb(228,216,27)" fg:x="1134" fg:w="1"/><text x="91.4076%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.72%)</title><rect x="90.5949%" y="517" width="0.7235%" height="15" fill="rgb(238,155,2)" fg:x="1127" fg:w="9"/><text x="90.8449%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="90.5949%" y="501" width="0.7235%" height="15" fill="rgb(244,99,37)" fg:x="1127" fg:w="9"/><text x="90.8449%" y="511.50"></text></g><g><title>engine::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="90.6752%" y="485" width="0.6431%" height="15" fill="rgb(254,32,3)" fg:x="1128" fg:w="8"/><text x="90.9252%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::from_str (5 samples, 0.40%)</title><rect x="90.9164%" y="469" width="0.4019%" height="15" fill="rgb(234,46,50)" fg:x="1131" fg:w="5"/><text x="91.1664%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="91.0772%" y="453" width="0.2412%" height="15" fill="rgb(232,118,51)" fg:x="1133" fg:w="3"/><text x="91.3272%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.0772%" y="437" width="0.2412%" height="15" fill="rgb(207,24,32)" fg:x="1133" fg:w="3"/><text x="91.3272%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="91.0772%" y="421" width="0.2412%" height="15" fill="rgb(208,107,43)" fg:x="1133" fg:w="3"/><text x="91.3272%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.0772%" y="405" width="0.2412%" height="15" fill="rgb(231,28,9)" fg:x="1133" fg:w="3"/><text x="91.3272%" y="415.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="91.0772%" y="389" width="0.2412%" height="15" fill="rgb(241,204,15)" fg:x="1133" fg:w="3"/><text x="91.3272%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2379%" y="373" width="0.0804%" height="15" fill="rgb(214,54,15)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.2379%" y="357" width="0.0804%" height="15" fill="rgb(230,12,28)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.2379%" y="341" width="0.0804%" height="15" fill="rgb(221,171,5)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2379%" y="325" width="0.0804%" height="15" fill="rgb(207,72,25)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.2379%" y="309" width="0.0804%" height="15" fill="rgb(249,79,37)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.2379%" y="293" width="0.0804%" height="15" fill="rgb(209,98,49)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2379%" y="277" width="0.0804%" height="15" fill="rgb(221,62,13)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.2379%" y="261" width="0.0804%" height="15" fill="rgb(223,39,6)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.2379%" y="245" width="0.0804%" height="15" fill="rgb(246,163,20)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2379%" y="229" width="0.0804%" height="15" fill="rgb(211,111,29)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.2379%" y="213" width="0.0804%" height="15" fill="rgb(243,118,5)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.2379%" y="197" width="0.0804%" height="15" fill="rgb(240,144,52)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2379%" y="181" width="0.0804%" height="15" fill="rgb(244,158,36)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.2379%" y="165" width="0.0804%" height="15" fill="rgb(241,109,37)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="175.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.3183%" y="517" width="0.0804%" height="15" fill="rgb(213,95,32)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.3183%" y="501" width="0.0804%" height="15" fill="rgb(252,193,9)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.3183%" y="485" width="0.0804%" height="15" fill="rgb(225,213,21)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.3183%" y="469" width="0.0804%" height="15" fill="rgb(220,172,46)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.3183%" y="453" width="0.0804%" height="15" fill="rgb(235,75,41)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.3183%" y="437" width="0.0804%" height="15" fill="rgb(213,86,9)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.3183%" y="421" width="0.0804%" height="15" fill="rgb(238,127,51)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.3183%" y="405" width="0.0804%" height="15" fill="rgb(215,2,54)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.3183%" y="389" width="0.0804%" height="15" fill="rgb(245,80,6)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.3183%" y="373" width="0.0804%" height="15" fill="rgb(233,106,42)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.3183%" y="357" width="0.0804%" height="15" fill="rgb(244,86,38)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.3183%" y="341" width="0.0804%" height="15" fill="rgb(242,167,7)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.3183%" y="325" width="0.0804%" height="15" fill="rgb(218,216,3)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.3183%" y="309" width="0.0804%" height="15" fill="rgb(206,136,36)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.3183%" y="293" width="0.0804%" height="15" fill="rgb(206,206,15)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="303.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (11 samples, 0.88%)</title><rect x="90.5949%" y="581" width="0.8842%" height="15" fill="rgb(207,163,34)" fg:x="1127" fg:w="11"/><text x="90.8449%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (11 samples, 0.88%)</title><rect x="90.5949%" y="565" width="0.8842%" height="15" fill="rgb(240,127,22)" fg:x="1127" fg:w="11"/><text x="90.8449%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.88%)</title><rect x="90.5949%" y="549" width="0.8842%" height="15" fill="rgb(227,49,5)" fg:x="1127" fg:w="11"/><text x="90.8449%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="90.5949%" y="533" width="0.8842%" height="15" fill="rgb(231,8,6)" fg:x="1127" fg:w="11"/><text x="90.8449%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.3987%" y="517" width="0.0804%" height="15" fill="rgb(223,21,24)" fg:x="1137" fg:w="1"/><text x="91.6487%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.3987%" y="501" width="0.0804%" height="15" fill="rgb(244,44,52)" fg:x="1137" fg:w="1"/><text x="91.6487%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.3987%" y="485" width="0.0804%" height="15" fill="rgb(207,73,28)" fg:x="1137" fg:w="1"/><text x="91.6487%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.3987%" y="469" width="0.0804%" height="15" fill="rgb(234,215,10)" fg:x="1137" fg:w="1"/><text x="91.6487%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.3987%" y="453" width="0.0804%" height="15" fill="rgb(236,85,3)" fg:x="1137" fg:w="1"/><text x="91.6487%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.8006%" y="469" width="0.0804%" height="15" fill="rgb(236,102,39)" fg:x="1142" fg:w="1"/><text x="92.0506%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.8006%" y="453" width="0.0804%" height="15" fill="rgb(243,50,8)" fg:x="1142" fg:w="1"/><text x="92.0506%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="91.8006%" y="485" width="0.1608%" height="15" fill="rgb(207,111,4)" fg:x="1142" fg:w="2"/><text x="92.0506%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.8810%" y="469" width="0.0804%" height="15" fill="rgb(230,52,42)" fg:x="1143" fg:w="1"/><text x="92.1310%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.9614%" y="485" width="0.0804%" height="15" fill="rgb(252,178,50)" fg:x="1144" fg:w="1"/><text x="92.2114%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="91.5595%" y="517" width="0.5627%" height="15" fill="rgb(234,46,35)" fg:x="1139" fg:w="7"/><text x="91.8095%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="91.7203%" y="501" width="0.4019%" height="15" fill="rgb(228,69,37)" fg:x="1141" fg:w="5"/><text x="91.9703%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="92.0418%" y="485" width="0.0804%" height="15" fill="rgb(221,21,11)" fg:x="1145" fg:w="1"/><text x="92.2918%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.0418%" y="469" width="0.0804%" height="15" fill="rgb(223,56,9)" fg:x="1145" fg:w="1"/><text x="92.2918%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.0418%" y="453" width="0.0804%" height="15" fill="rgb(234,30,19)" fg:x="1145" fg:w="1"/><text x="92.2918%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (13 samples, 1.05%)</title><rect x="91.4791%" y="549" width="1.0450%" height="15" fill="rgb(211,64,54)" fg:x="1138" fg:w="13"/><text x="91.7291%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.05%)</title><rect x="91.4791%" y="533" width="1.0450%" height="15" fill="rgb(250,189,5)" fg:x="1138" fg:w="13"/><text x="91.7291%" y="543.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="92.1222%" y="517" width="0.4019%" height="15" fill="rgb(214,180,13)" fg:x="1146" fg:w="5"/><text x="92.3722%" y="527.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="92.5241%" y="501" width="0.2412%" height="15" fill="rgb(238,40,40)" fg:x="1151" fg:w="3"/><text x="92.7741%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="92.5241%" y="517" width="0.3215%" height="15" fill="rgb(214,101,38)" fg:x="1151" fg:w="4"/><text x="92.7741%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="92.7653%" y="501" width="0.0804%" height="15" fill="rgb(242,65,53)" fg:x="1154" fg:w="1"/><text x="93.0153%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.8457%" y="517" width="0.0804%" height="15" fill="rgb(230,22,45)" fg:x="1155" fg:w="1"/><text x="93.0957%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="92.8457%" y="501" width="0.0804%" height="15" fill="rgb(223,77,1)" fg:x="1155" fg:w="1"/><text x="93.0957%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="92.8457%" y="485" width="0.0804%" height="15" fill="rgb(227,33,37)" fg:x="1155" fg:w="1"/><text x="93.0957%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="92.8457%" y="469" width="0.0804%" height="15" fill="rgb(224,148,39)" fg:x="1155" fg:w="1"/><text x="93.0957%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8457%" y="453" width="0.0804%" height="15" fill="rgb(232,212,39)" fg:x="1155" fg:w="1"/><text x="93.0957%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.9260%" y="437" width="0.0804%" height="15" fill="rgb(251,172,7)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="92.9260%" y="421" width="0.0804%" height="15" fill="rgb(219,39,9)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="92.9260%" y="405" width="0.0804%" height="15" fill="rgb(228,118,14)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="92.9260%" y="389" width="0.0804%" height="15" fill="rgb(207,140,10)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="92.9260%" y="373" width="0.0804%" height="15" fill="rgb(227,111,53)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.9260%" y="357" width="0.0804%" height="15" fill="rgb(216,165,16)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.9260%" y="341" width="0.0804%" height="15" fill="rgb(226,111,18)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.9260%" y="325" width="0.0804%" height="15" fill="rgb(251,27,17)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="92.9260%" y="309" width="0.0804%" height="15" fill="rgb(254,69,9)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.9260%" y="293" width="0.0804%" height="15" fill="rgb(234,140,37)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0064%" y="421" width="0.0804%" height="15" fill="rgb(220,93,8)" fg:x="1157" fg:w="1"/><text x="93.2564%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0868%" y="405" width="0.0804%" height="15" fill="rgb(236,113,3)" fg:x="1158" fg:w="1"/><text x="93.3368%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="93.1672%" y="325" width="0.0804%" height="15" fill="rgb(234,108,23)" fg:x="1159" fg:w="1"/><text x="93.4172%" y="335.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="93.1672%" y="309" width="0.0804%" height="15" fill="rgb(205,114,34)" fg:x="1159" fg:w="1"/><text x="93.4172%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.1672%" y="293" width="0.0804%" height="15" fill="rgb(236,200,45)" fg:x="1159" fg:w="1"/><text x="93.4172%" y="303.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="93.1672%" y="277" width="0.0804%" height="15" fill="rgb(227,194,29)" fg:x="1159" fg:w="1"/><text x="93.4172%" y="287.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="93.2476%" y="309" width="0.0804%" height="15" fill="rgb(250,76,42)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.2476%" y="293" width="0.0804%" height="15" fill="rgb(208,128,8)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.2476%" y="277" width="0.0804%" height="15" fill="rgb(229,209,35)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.2476%" y="261" width="0.0804%" height="15" fill="rgb(215,39,53)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.2476%" y="245" width="0.0804%" height="15" fill="rgb(219,123,41)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3280%" y="245" width="0.0804%" height="15" fill="rgb(212,158,18)" fg:x="1161" fg:w="1"/><text x="93.5780%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="93.3280%" y="277" width="0.1608%" height="15" fill="rgb(234,196,53)" fg:x="1161" fg:w="2"/><text x="93.5780%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.3280%" y="261" width="0.1608%" height="15" fill="rgb(210,139,12)" fg:x="1161" fg:w="2"/><text x="93.5780%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.4084%" y="245" width="0.0804%" height="15" fill="rgb(220,116,54)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4084%" y="229" width="0.0804%" height="15" fill="rgb(247,103,28)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4084%" y="213" width="0.0804%" height="15" fill="rgb(253,156,45)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4084%" y="197" width="0.0804%" height="15" fill="rgb(237,157,52)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4084%" y="181" width="0.0804%" height="15" fill="rgb(253,112,16)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4084%" y="165" width="0.0804%" height="15" fill="rgb(234,70,18)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4084%" y="149" width="0.0804%" height="15" fill="rgb(247,138,19)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.4084%" y="133" width="0.0804%" height="15" fill="rgb(207,171,1)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4084%" y="117" width="0.0804%" height="15" fill="rgb(239,213,3)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4084%" y="101" width="0.0804%" height="15" fill="rgb(226,112,4)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.4084%" y="85" width="0.0804%" height="15" fill="rgb(252,170,12)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4084%" y="69" width="0.0804%" height="15" fill="rgb(241,106,13)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="79.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="93.1672%" y="373" width="0.4019%" height="15" fill="rgb(225,73,23)" fg:x="1159" fg:w="5"/><text x="93.4172%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="93.1672%" y="357" width="0.4019%" height="15" fill="rgb(251,227,29)" fg:x="1159" fg:w="5"/><text x="93.4172%" y="367.50"></text></g><g><title>engine::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="93.1672%" y="341" width="0.4019%" height="15" fill="rgb(237,144,13)" fg:x="1159" fg:w="5"/><text x="93.4172%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_str (4 samples, 0.32%)</title><rect x="93.2476%" y="325" width="0.3215%" height="15" fill="rgb(232,106,46)" fg:x="1160" fg:w="4"/><text x="93.4976%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.3280%" y="309" width="0.2412%" height="15" fill="rgb(245,154,53)" fg:x="1161" fg:w="3"/><text x="93.5780%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.3280%" y="293" width="0.2412%" height="15" fill="rgb(212,119,47)" fg:x="1161" fg:w="3"/><text x="93.5780%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4887%" y="277" width="0.0804%" height="15" fill="rgb(253,135,25)" fg:x="1163" fg:w="1"/><text x="93.7387%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4887%" y="261" width="0.0804%" height="15" fill="rgb(253,208,39)" fg:x="1163" fg:w="1"/><text x="93.7387%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.4887%" y="245" width="0.0804%" height="15" fill="rgb(226,64,12)" fg:x="1163" fg:w="1"/><text x="93.7387%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.72%)</title><rect x="92.9260%" y="453" width="0.7235%" height="15" fill="rgb(214,162,37)" fg:x="1156" fg:w="9"/><text x="93.1760%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="93.0064%" y="437" width="0.6431%" height="15" fill="rgb(250,104,5)" fg:x="1157" fg:w="8"/><text x="93.2564%" y="447.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (7 samples, 0.56%)</title><rect x="93.0868%" y="421" width="0.5627%" height="15" fill="rgb(220,202,50)" fg:x="1158" fg:w="7"/><text x="93.3368%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (6 samples, 0.48%)</title><rect x="93.1672%" y="405" width="0.4823%" height="15" fill="rgb(248,67,38)" fg:x="1159" fg:w="6"/><text x="93.4172%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="93.1672%" y="389" width="0.4823%" height="15" fill="rgb(242,94,35)" fg:x="1159" fg:w="6"/><text x="93.4172%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5691%" y="373" width="0.0804%" height="15" fill="rgb(209,78,37)" fg:x="1164" fg:w="1"/><text x="93.8191%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5691%" y="357" width="0.0804%" height="15" fill="rgb(230,126,47)" fg:x="1164" fg:w="1"/><text x="93.8191%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5691%" y="341" width="0.0804%" height="15" fill="rgb(222,110,35)" fg:x="1164" fg:w="1"/><text x="93.8191%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5691%" y="325" width="0.0804%" height="15" fill="rgb(233,154,20)" fg:x="1164" fg:w="1"/><text x="93.8191%" y="335.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (11 samples, 0.88%)</title><rect x="92.9260%" y="469" width="0.8842%" height="15" fill="rgb(223,53,50)" fg:x="1156" fg:w="11"/><text x="93.1760%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="93.6495%" y="453" width="0.1608%" height="15" fill="rgb(251,27,26)" fg:x="1165" fg:w="2"/><text x="93.8995%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.6495%" y="437" width="0.1608%" height="15" fill="rgb(223,189,16)" fg:x="1165" fg:w="2"/><text x="93.8995%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.6495%" y="421" width="0.1608%" height="15" fill="rgb(207,5,54)" fg:x="1165" fg:w="2"/><text x="93.8995%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.6495%" y="405" width="0.1608%" height="15" fill="rgb(254,124,50)" fg:x="1165" fg:w="2"/><text x="93.8995%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.7299%" y="389" width="0.0804%" height="15" fill="rgb(253,193,24)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.7299%" y="373" width="0.0804%" height="15" fill="rgb(235,170,24)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.7299%" y="357" width="0.0804%" height="15" fill="rgb(222,212,52)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7299%" y="341" width="0.0804%" height="15" fill="rgb(223,17,45)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7299%" y="325" width="0.0804%" height="15" fill="rgb(227,103,26)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="93.8103%" y="453" width="0.1608%" height="15" fill="rgb(251,151,25)" fg:x="1167" fg:w="2"/><text x="94.0603%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0514%" y="421" width="0.0804%" height="15" fill="rgb(248,144,29)" fg:x="1170" fg:w="1"/><text x="94.3014%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="94.1318%" y="277" width="0.0804%" height="15" fill="rgb(245,97,16)" fg:x="1171" fg:w="1"/><text x="94.3818%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.1318%" y="261" width="0.0804%" height="15" fill="rgb(220,200,29)" fg:x="1171" fg:w="1"/><text x="94.3818%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.2122%" y="149" width="0.0804%" height="15" fill="rgb(206,38,29)" fg:x="1172" fg:w="1"/><text x="94.4622%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.2122%" y="133" width="0.0804%" height="15" fill="rgb(245,19,52)" fg:x="1172" fg:w="1"/><text x="94.4622%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.2926%" y="149" width="0.0804%" height="15" fill="rgb(205,67,43)" fg:x="1173" fg:w="1"/><text x="94.5426%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.2926%" y="133" width="0.0804%" height="15" fill="rgb(217,128,23)" fg:x="1173" fg:w="1"/><text x="94.5426%" y="143.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="94.1318%" y="325" width="0.3215%" height="15" fill="rgb(210,109,28)" fg:x="1171" fg:w="4"/><text x="94.3818%" y="335.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="94.1318%" y="309" width="0.3215%" height="15" fill="rgb(233,181,7)" fg:x="1171" fg:w="4"/><text x="94.3818%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="94.1318%" y="293" width="0.3215%" height="15" fill="rgb(244,11,22)" fg:x="1171" fg:w="4"/><text x="94.3818%" y="303.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="94.2122%" y="277" width="0.2412%" height="15" fill="rgb(205,124,54)" fg:x="1172" fg:w="3"/><text x="94.4622%" y="287.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="94.2122%" y="261" width="0.2412%" height="15" fill="rgb(218,21,27)" fg:x="1172" fg:w="3"/><text x="94.4622%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.2122%" y="245" width="0.2412%" height="15" fill="rgb(224,153,33)" fg:x="1172" fg:w="3"/><text x="94.4622%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.2122%" y="229" width="0.2412%" height="15" fill="rgb(240,219,28)" fg:x="1172" fg:w="3"/><text x="94.4622%" y="239.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.2122%" y="213" width="0.2412%" height="15" fill="rgb(214,80,29)" fg:x="1172" fg:w="3"/><text x="94.4622%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.2122%" y="197" width="0.2412%" height="15" fill="rgb(247,148,44)" fg:x="1172" fg:w="3"/><text x="94.4622%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="94.2122%" y="181" width="0.2412%" height="15" fill="rgb(243,110,30)" fg:x="1172" fg:w="3"/><text x="94.4622%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.2122%" y="165" width="0.2412%" height="15" fill="rgb(243,173,41)" fg:x="1172" fg:w="3"/><text x="94.4622%" y="175.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.3730%" y="149" width="0.0804%" height="15" fill="rgb(225,160,47)" fg:x="1174" fg:w="1"/><text x="94.6230%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3730%" y="133" width="0.0804%" height="15" fill="rgb(215,44,21)" fg:x="1174" fg:w="1"/><text x="94.6230%" y="143.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="94.3730%" y="117" width="0.0804%" height="15" fill="rgb(248,90,3)" fg:x="1174" fg:w="1"/><text x="94.6230%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.4534%" y="325" width="0.0804%" height="15" fill="rgb(220,196,49)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.4534%" y="309" width="0.0804%" height="15" fill="rgb(217,138,14)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.4534%" y="293" width="0.0804%" height="15" fill="rgb(219,111,20)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.4534%" y="277" width="0.0804%" height="15" fill="rgb(218,114,4)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4534%" y="261" width="0.0804%" height="15" fill="rgb(238,133,3)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.4534%" y="245" width="0.0804%" height="15" fill="rgb(224,95,0)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4534%" y="229" width="0.0804%" height="15" fill="rgb(220,169,35)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.4534%" y="213" width="0.0804%" height="15" fill="rgb(242,116,47)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4534%" y="197" width="0.0804%" height="15" fill="rgb(251,42,20)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="207.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.4534%" y="181" width="0.0804%" height="15" fill="rgb(234,7,34)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4534%" y="165" width="0.0804%" height="15" fill="rgb(243,208,13)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4534%" y="149" width="0.0804%" height="15" fill="rgb(227,33,28)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4534%" y="133" width="0.0804%" height="15" fill="rgb(250,47,37)" fg:x="1175" fg:w="1"/><text x="94.7034%" y="143.50"></text></g><g><title>engine::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="94.5338%" y="325" width="0.3215%" height="15" fill="rgb(235,111,52)" fg:x="1176" fg:w="4"/><text x="94.7838%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="94.5338%" y="309" width="0.3215%" height="15" fill="rgb(223,64,28)" fg:x="1176" fg:w="4"/><text x="94.7838%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="94.5338%" y="293" width="0.3215%" height="15" fill="rgb(236,67,22)" fg:x="1176" fg:w="4"/><text x="94.7838%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="94.5338%" y="277" width="0.3215%" height="15" fill="rgb(243,79,24)" fg:x="1176" fg:w="4"/><text x="94.7838%" y="287.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="94.5338%" y="261" width="0.3215%" height="15" fill="rgb(241,225,22)" fg:x="1176" fg:w="4"/><text x="94.7838%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="94.8553%" y="229" width="0.2412%" height="15" fill="rgb(228,214,26)" fg:x="1180" fg:w="3"/><text x="95.1053%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="94.8553%" y="213" width="0.2412%" height="15" fill="rgb(219,84,52)" fg:x="1180" fg:w="3"/><text x="95.1053%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0965%" y="229" width="0.0804%" height="15" fill="rgb(220,12,22)" fg:x="1183" fg:w="1"/><text x="95.3465%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0965%" y="213" width="0.0804%" height="15" fill="rgb(219,9,49)" fg:x="1183" fg:w="1"/><text x="95.3465%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="95.2572%" y="101" width="0.1608%" height="15" fill="rgb(237,40,43)" fg:x="1185" fg:w="2"/><text x="95.5072%" y="111.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.2572%" y="85" width="0.1608%" height="15" fill="rgb(212,189,32)" fg:x="1185" fg:w="2"/><text x="95.5072%" y="95.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="94.8553%" y="309" width="0.6431%" height="15" fill="rgb(247,48,9)" fg:x="1180" fg:w="8"/><text x="95.1053%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="94.8553%" y="293" width="0.6431%" height="15" fill="rgb(247,112,3)" fg:x="1180" fg:w="8"/><text x="95.1053%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="94.8553%" y="277" width="0.6431%" height="15" fill="rgb(243,110,18)" fg:x="1180" fg:w="8"/><text x="95.1053%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="94.8553%" y="261" width="0.6431%" height="15" fill="rgb(233,223,44)" fg:x="1180" fg:w="8"/><text x="95.1053%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="94.8553%" y="245" width="0.6431%" height="15" fill="rgb(245,160,20)" fg:x="1180" fg:w="8"/><text x="95.1053%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.1768%" y="229" width="0.3215%" height="15" fill="rgb(225,37,1)" fg:x="1184" fg:w="4"/><text x="95.4268%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.1768%" y="213" width="0.3215%" height="15" fill="rgb(253,227,39)" fg:x="1184" fg:w="4"/><text x="95.4268%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.1768%" y="197" width="0.3215%" height="15" fill="rgb(240,179,26)" fg:x="1184" fg:w="4"/><text x="95.4268%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.1768%" y="181" width="0.3215%" height="15" fill="rgb(237,212,23)" fg:x="1184" fg:w="4"/><text x="95.4268%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.1768%" y="165" width="0.3215%" height="15" fill="rgb(221,38,11)" fg:x="1184" fg:w="4"/><text x="95.4268%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.2572%" y="149" width="0.2412%" height="15" fill="rgb(215,85,6)" fg:x="1185" fg:w="3"/><text x="95.5072%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="95.2572%" y="133" width="0.2412%" height="15" fill="rgb(239,64,14)" fg:x="1185" fg:w="3"/><text x="95.5072%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.2572%" y="117" width="0.2412%" height="15" fill="rgb(215,150,32)" fg:x="1185" fg:w="3"/><text x="95.5072%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4180%" y="101" width="0.0804%" height="15" fill="rgb(238,15,13)" fg:x="1187" fg:w="1"/><text x="95.6680%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4180%" y="85" width="0.0804%" height="15" fill="rgb(251,87,8)" fg:x="1187" fg:w="1"/><text x="95.6680%" y="95.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.4180%" y="69" width="0.0804%" height="15" fill="rgb(206,86,1)" fg:x="1187" fg:w="1"/><text x="95.6680%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.5788%" y="197" width="0.0804%" height="15" fill="rgb(208,151,45)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.5788%" y="181" width="0.0804%" height="15" fill="rgb(231,181,24)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5788%" y="165" width="0.0804%" height="15" fill="rgb(240,106,29)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5788%" y="149" width="0.0804%" height="15" fill="rgb(227,166,11)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.5788%" y="229" width="0.1608%" height="15" fill="rgb(254,14,34)" fg:x="1189" fg:w="2"/><text x="95.8288%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.5788%" y="213" width="0.1608%" height="15" fill="rgb(223,222,6)" fg:x="1189" fg:w="2"/><text x="95.8288%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="95.6592%" y="197" width="0.0804%" height="15" fill="rgb(245,69,24)" fg:x="1190" fg:w="1"/><text x="95.9092%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6592%" y="181" width="0.0804%" height="15" fill="rgb(213,193,7)" fg:x="1190" fg:w="1"/><text x="95.9092%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.7395%" y="197" width="0.0804%" height="15" fill="rgb(237,92,51)" fg:x="1191" fg:w="1"/><text x="95.9895%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.7395%" y="181" width="0.0804%" height="15" fill="rgb(225,194,6)" fg:x="1191" fg:w="1"/><text x="95.9895%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="95.4984%" y="277" width="0.4019%" height="15" fill="rgb(205,159,49)" fg:x="1188" fg:w="5"/><text x="95.7484%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="95.4984%" y="261" width="0.4019%" height="15" fill="rgb(219,69,2)" fg:x="1188" fg:w="5"/><text x="95.7484%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.5788%" y="245" width="0.3215%" height="15" fill="rgb(215,107,24)" fg:x="1189" fg:w="4"/><text x="95.8288%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.7395%" y="229" width="0.1608%" height="15" fill="rgb(249,208,29)" fg:x="1191" fg:w="2"/><text x="95.9895%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.7395%" y="213" width="0.1608%" height="15" fill="rgb(213,147,10)" fg:x="1191" fg:w="2"/><text x="95.9895%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="95.8199%" y="197" width="0.0804%" height="15" fill="rgb(254,140,42)" fg:x="1192" fg:w="1"/><text x="96.0699%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.8199%" y="181" width="0.0804%" height="15" fill="rgb(249,9,15)" fg:x="1192" fg:w="1"/><text x="96.0699%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.8199%" y="165" width="0.0804%" height="15" fill="rgb(210,19,33)" fg:x="1192" fg:w="1"/><text x="96.0699%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="95.8199%" y="149" width="0.0804%" height="15" fill="rgb(241,121,22)" fg:x="1192" fg:w="1"/><text x="96.0699%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.8199%" y="133" width="0.0804%" height="15" fill="rgb(244,69,52)" fg:x="1192" fg:w="1"/><text x="96.0699%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.8199%" y="117" width="0.0804%" height="15" fill="rgb(244,191,54)" fg:x="1192" fg:w="1"/><text x="96.0699%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.8199%" y="101" width="0.0804%" height="15" fill="rgb(250,3,53)" fg:x="1192" fg:w="1"/><text x="96.0699%" y="111.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (23 samples, 1.85%)</title><rect x="94.1318%" y="421" width="1.8489%" height="15" fill="rgb(205,77,3)" fg:x="1171" fg:w="23"/><text x="94.3818%" y="431.50">&lt;..</text></g><g><title>core::iter::adapters::try_process (23 samples, 1.85%)</title><rect x="94.1318%" y="405" width="1.8489%" height="15" fill="rgb(207,155,3)" fg:x="1171" fg:w="23"/><text x="94.3818%" y="415.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 1.85%)</title><rect x="94.1318%" y="389" width="1.8489%" height="15" fill="rgb(224,79,2)" fg:x="1171" fg:w="23"/><text x="94.3818%" y="399.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (23 samples, 1.85%)</title><rect x="94.1318%" y="373" width="1.8489%" height="15" fill="rgb(243,172,5)" fg:x="1171" fg:w="23"/><text x="94.3818%" y="383.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (23 samples, 1.85%)</title><rect x="94.1318%" y="357" width="1.8489%" height="15" fill="rgb(217,23,43)" fg:x="1171" fg:w="23"/><text x="94.3818%" y="367.50">&lt;..</text></g><g><title>engine::internal::Entities::add_persisted (23 samples, 1.85%)</title><rect x="94.1318%" y="341" width="1.8489%" height="15" fill="rgb(223,109,20)" fg:x="1171" fg:w="23"/><text x="94.3818%" y="351.50">e..</text></g><g><title>kernel::model::entity::Entity::from_str (14 samples, 1.13%)</title><rect x="94.8553%" y="325" width="1.1254%" height="15" fill="rgb(232,159,21)" fg:x="1180" fg:w="14"/><text x="95.1053%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="95.4984%" y="309" width="0.4823%" height="15" fill="rgb(219,58,2)" fg:x="1188" fg:w="6"/><text x="95.7484%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="95.4984%" y="293" width="0.4823%" height="15" fill="rgb(241,56,8)" fg:x="1188" fg:w="6"/><text x="95.7484%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.9003%" y="277" width="0.0804%" height="15" fill="rgb(249,10,27)" fg:x="1193" fg:w="1"/><text x="96.1503%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9003%" y="261" width="0.0804%" height="15" fill="rgb(248,177,5)" fg:x="1193" fg:w="1"/><text x="96.1503%" y="271.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="95.9003%" y="245" width="0.0804%" height="15" fill="rgb(239,12,30)" fg:x="1193" fg:w="1"/><text x="96.1503%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="95.9807%" y="389" width="0.0804%" height="15" fill="rgb(229,164,25)" fg:x="1194" fg:w="1"/><text x="96.2307%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.0611%" y="357" width="0.0804%" height="15" fill="rgb(231,217,50)" fg:x="1195" fg:w="1"/><text x="96.3111%" y="367.50"></text></g><g><title>plugins_core::tools::get_contained_keys (30 samples, 2.41%)</title><rect x="93.8103%" y="469" width="2.4116%" height="15" fill="rgb(247,99,32)" fg:x="1167" fg:w="30"/><text x="94.0603%" y="479.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (28 samples, 2.25%)</title><rect x="93.9711%" y="453" width="2.2508%" height="15" fill="rgb(240,74,50)" fg:x="1169" fg:w="28"/><text x="94.2211%" y="463.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (28 samples, 2.25%)</title><rect x="93.9711%" y="437" width="2.2508%" height="15" fill="rgb(218,54,8)" fg:x="1169" fg:w="28"/><text x="94.2211%" y="447.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.9807%" y="421" width="0.2412%" height="15" fill="rgb(227,132,20)" fg:x="1194" fg:w="3"/><text x="96.2307%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.9807%" y="405" width="0.2412%" height="15" fill="rgb(232,134,12)" fg:x="1194" fg:w="3"/><text x="96.2307%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="96.0611%" y="389" width="0.1608%" height="15" fill="rgb(250,129,18)" fg:x="1195" fg:w="2"/><text x="96.3111%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="96.0611%" y="373" width="0.1608%" height="15" fill="rgb(232,129,47)" fg:x="1195" fg:w="2"/><text x="96.3111%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.1415%" y="357" width="0.0804%" height="15" fill="rgb(230,31,40)" fg:x="1196" fg:w="1"/><text x="96.3915%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1415%" y="341" width="0.0804%" height="15" fill="rgb(232,126,10)" fg:x="1196" fg:w="1"/><text x="96.3915%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2219%" y="453" width="0.0804%" height="15" fill="rgb(205,46,31)" fg:x="1197" fg:w="1"/><text x="96.4719%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (44 samples, 3.54%)</title><rect x="92.9260%" y="501" width="3.5370%" height="15" fill="rgb(232,37,37)" fg:x="1156" fg:w="44"/><text x="93.1760%" y="511.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (44 samples, 3.54%)</title><rect x="92.9260%" y="485" width="3.5370%" height="15" fill="rgb(240,91,16)" fg:x="1156" fg:w="44"/><text x="93.1760%" y="495.50">&lt;co..</text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.24%)</title><rect x="96.2219%" y="469" width="0.2412%" height="15" fill="rgb(224,160,9)" fg:x="1197" fg:w="3"/><text x="96.4719%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="96.3023%" y="453" width="0.1608%" height="15" fill="rgb(215,116,14)" fg:x="1198" fg:w="2"/><text x="96.5523%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.3023%" y="437" width="0.1608%" height="15" fill="rgb(235,46,36)" fg:x="1198" fg:w="2"/><text x="96.5523%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3023%" y="421" width="0.1608%" height="15" fill="rgb(238,39,28)" fg:x="1198" fg:w="2"/><text x="96.5523%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3023%" y="405" width="0.1608%" height="15" fill="rgb(242,125,29)" fg:x="1198" fg:w="2"/><text x="96.5523%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.3826%" y="389" width="0.0804%" height="15" fill="rgb(238,211,30)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.3826%" y="373" width="0.0804%" height="15" fill="rgb(227,201,28)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.3826%" y="357" width="0.0804%" height="15" fill="rgb(238,77,29)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.3826%" y="341" width="0.0804%" height="15" fill="rgb(213,221,40)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3826%" y="325" width="0.0804%" height="15" fill="rgb(226,220,44)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="96.8650%" y="245" width="0.1608%" height="15" fill="rgb(228,90,23)" fg:x="1205" fg:w="2"/><text x="97.1150%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="96.8650%" y="229" width="0.1608%" height="15" fill="rgb(235,72,29)" fg:x="1205" fg:w="2"/><text x="97.1150%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="96.8650%" y="213" width="0.1608%" height="15" fill="rgb(248,117,39)" fg:x="1205" fg:w="2"/><text x="97.1150%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="96.8650%" y="197" width="0.1608%" height="15" fill="rgb(225,43,28)" fg:x="1205" fg:w="2"/><text x="97.1150%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="96.8650%" y="181" width="0.1608%" height="15" fill="rgb(240,93,4)" fg:x="1205" fg:w="2"/><text x="97.1150%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="96.8650%" y="165" width="0.1608%" height="15" fill="rgb(234,178,27)" fg:x="1205" fg:w="2"/><text x="97.1150%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9453%" y="149" width="0.0804%" height="15" fill="rgb(254,88,22)" fg:x="1206" fg:w="1"/><text x="97.1953%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9453%" y="133" width="0.0804%" height="15" fill="rgb(240,206,50)" fg:x="1206" fg:w="1"/><text x="97.1953%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.0257%" y="245" width="0.0804%" height="15" fill="rgb(249,103,8)" fg:x="1207" fg:w="1"/><text x="97.2757%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="96.8650%" y="277" width="0.3215%" height="15" fill="rgb(241,178,36)" fg:x="1205" fg:w="4"/><text x="97.1150%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="96.8650%" y="261" width="0.3215%" height="15" fill="rgb(246,110,15)" fg:x="1205" fg:w="4"/><text x="97.1150%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1061%" y="245" width="0.0804%" height="15" fill="rgb(207,14,43)" fg:x="1208" fg:w="1"/><text x="97.3561%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.40%)</title><rect x="96.8650%" y="293" width="0.4019%" height="15" fill="rgb(253,219,19)" fg:x="1205" fg:w="5"/><text x="97.1150%" y="303.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.1865%" y="277" width="0.0804%" height="15" fill="rgb(216,126,5)" fg:x="1209" fg:w="1"/><text x="97.4365%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1865%" y="261" width="0.0804%" height="15" fill="rgb(218,78,42)" fg:x="1209" fg:w="1"/><text x="97.4365%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.2669%" y="277" width="0.0804%" height="15" fill="rgb(215,154,40)" fg:x="1210" fg:w="1"/><text x="97.5169%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.56%)</title><rect x="96.8650%" y="309" width="0.5627%" height="15" fill="rgb(235,129,32)" fg:x="1205" fg:w="7"/><text x="97.1150%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.2669%" y="293" width="0.1608%" height="15" fill="rgb(218,51,8)" fg:x="1210" fg:w="2"/><text x="97.5169%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.3473%" y="277" width="0.0804%" height="15" fill="rgb(245,48,4)" fg:x="1211" fg:w="1"/><text x="97.5973%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.72%)</title><rect x="96.8650%" y="341" width="0.7235%" height="15" fill="rgb(250,175,12)" fg:x="1205" fg:w="9"/><text x="97.1150%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="96.8650%" y="325" width="0.7235%" height="15" fill="rgb(237,95,40)" fg:x="1205" fg:w="9"/><text x="97.1150%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="97.4277%" y="309" width="0.1608%" height="15" fill="rgb(244,120,0)" fg:x="1212" fg:w="2"/><text x="97.6777%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.4277%" y="293" width="0.1608%" height="15" fill="rgb(241,19,42)" fg:x="1212" fg:w="2"/><text x="97.6777%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.5884%" y="341" width="0.0804%" height="15" fill="rgb(217,174,48)" fg:x="1214" fg:w="1"/><text x="97.8384%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.5884%" y="325" width="0.0804%" height="15" fill="rgb(239,36,38)" fg:x="1214" fg:w="1"/><text x="97.8384%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.05%)</title><rect x="96.7846%" y="357" width="1.0450%" height="15" fill="rgb(220,63,49)" fg:x="1204" fg:w="13"/><text x="97.0346%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.6688%" y="341" width="0.1608%" height="15" fill="rgb(240,101,13)" fg:x="1215" fg:w="2"/><text x="97.9188%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7492%" y="325" width="0.0804%" height="15" fill="rgb(209,184,51)" fg:x="1216" fg:w="1"/><text x="97.9992%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (16 samples, 1.29%)</title><rect x="96.7042%" y="389" width="1.2862%" height="15" fill="rgb(206,136,39)" fg:x="1203" fg:w="16"/><text x="96.9542%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15 samples, 1.21%)</title><rect x="96.7846%" y="373" width="1.2058%" height="15" fill="rgb(254,47,45)" fg:x="1204" fg:w="15"/><text x="97.0346%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="97.8296%" y="357" width="0.1608%" height="15" fill="rgb(252,103,20)" fg:x="1217" fg:w="2"/><text x="98.0796%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.8296%" y="341" width="0.1608%" height="15" fill="rgb(230,69,12)" fg:x="1217" fg:w="2"/><text x="98.0796%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="97.9904%" y="389" width="0.1608%" height="15" fill="rgb(219,2,28)" fg:x="1219" fg:w="2"/><text x="98.2404%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0707%" y="373" width="0.0804%" height="15" fill="rgb(210,9,12)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (20 samples, 1.61%)</title><rect x="96.6238%" y="437" width="1.6077%" height="15" fill="rgb(235,99,33)" fg:x="1202" fg:w="20"/><text x="96.8738%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (20 samples, 1.61%)</title><rect x="96.6238%" y="421" width="1.6077%" height="15" fill="rgb(230,11,38)" fg:x="1202" fg:w="20"/><text x="96.8738%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 1.61%)</title><rect x="96.6238%" y="405" width="1.6077%" height="15" fill="rgb(217,129,0)" fg:x="1202" fg:w="20"/><text x="96.8738%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.1511%" y="389" width="0.0804%" height="15" fill="rgb(222,198,4)" fg:x="1221" fg:w="1"/><text x="98.4011%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.2315%" y="389" width="0.1608%" height="15" fill="rgb(246,170,27)" fg:x="1222" fg:w="2"/><text x="98.4815%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.3923%" y="389" width="0.1608%" height="15" fill="rgb(229,17,28)" fg:x="1224" fg:w="2"/><text x="98.6423%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.3923%" y="373" width="0.1608%" height="15" fill="rgb(233,198,48)" fg:x="1224" fg:w="2"/><text x="98.6423%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="98.3923%" y="357" width="0.1608%" height="15" fill="rgb(238,103,23)" fg:x="1224" fg:w="2"/><text x="98.6423%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="98.5531%" y="389" width="0.0804%" height="15" fill="rgb(206,91,41)" fg:x="1226" fg:w="1"/><text x="98.8031%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.5531%" y="373" width="0.0804%" height="15" fill="rgb(227,34,25)" fg:x="1226" fg:w="1"/><text x="98.8031%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6334%" y="341" width="0.0804%" height="15" fill="rgb(210,110,44)" fg:x="1227" fg:w="1"/><text x="98.8834%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6334%" y="325" width="0.0804%" height="15" fill="rgb(216,189,8)" fg:x="1227" fg:w="1"/><text x="98.8834%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6334%" y="309" width="0.0804%" height="15" fill="rgb(234,9,46)" fg:x="1227" fg:w="1"/><text x="98.8834%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="98.7138%" y="293" width="0.0804%" height="15" fill="rgb(251,200,5)" fg:x="1228" fg:w="1"/><text x="98.9638%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="98.7138%" y="277" width="0.0804%" height="15" fill="rgb(238,165,37)" fg:x="1228" fg:w="1"/><text x="98.9638%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="98.7138%" y="261" width="0.0804%" height="15" fill="rgb(232,77,38)" fg:x="1228" fg:w="1"/><text x="98.9638%" y="271.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="98.7138%" y="245" width="0.0804%" height="15" fill="rgb(253,179,33)" fg:x="1228" fg:w="1"/><text x="98.9638%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="98.7138%" y="325" width="0.1608%" height="15" fill="rgb(240,13,35)" fg:x="1228" fg:w="2"/><text x="98.9638%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="98.7138%" y="309" width="0.1608%" height="15" fill="rgb(242,150,49)" fg:x="1228" fg:w="2"/><text x="98.9638%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7942%" y="293" width="0.0804%" height="15" fill="rgb(237,176,28)" fg:x="1229" fg:w="1"/><text x="99.0442%" y="303.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (29 samples, 2.33%)</title><rect x="96.6238%" y="453" width="2.3312%" height="15" fill="rgb(214,176,33)" fg:x="1202" fg:w="29"/><text x="96.8738%" y="463.50">&lt;..</text></g><g><title>kernel::model::EntityPtr::to_json_value (9 samples, 0.72%)</title><rect x="98.2315%" y="437" width="0.7235%" height="15" fill="rgb(214,25,12)" fg:x="1222" fg:w="9"/><text x="98.4815%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="98.2315%" y="421" width="0.7235%" height="15" fill="rgb(238,190,20)" fg:x="1222" fg:w="9"/><text x="98.4815%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="98.2315%" y="405" width="0.7235%" height="15" fill="rgb(208,11,19)" fg:x="1222" fg:w="9"/><text x="98.4815%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="98.6334%" y="389" width="0.3215%" height="15" fill="rgb(239,90,4)" fg:x="1227" fg:w="4"/><text x="98.8834%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="98.6334%" y="373" width="0.3215%" height="15" fill="rgb(248,110,3)" fg:x="1227" fg:w="4"/><text x="98.8834%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="98.6334%" y="357" width="0.3215%" height="15" fill="rgb(210,41,30)" fg:x="1227" fg:w="4"/><text x="98.8834%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="98.7138%" y="341" width="0.2412%" height="15" fill="rgb(239,36,8)" fg:x="1228" fg:w="3"/><text x="98.9638%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8746%" y="325" width="0.0804%" height="15" fill="rgb(237,201,47)" fg:x="1230" fg:w="1"/><text x="99.1246%" y="335.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (94 samples, 7.56%)</title><rect x="91.4791%" y="581" width="7.5563%" height="15" fill="rgb(224,140,29)" fg:x="1138" fg:w="94"/><text x="91.7291%" y="591.50">kernel::pl..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (94 samples, 7.56%)</title><rect x="91.4791%" y="565" width="7.5563%" height="15" fill="rgb(231,209,17)" fg:x="1138" fg:w="94"/><text x="91.7291%" y="575.50">&lt;plugins_d..</text></g><g><title>plugins_rpc::querying::have_surroundings (81 samples, 6.51%)</title><rect x="92.5241%" y="549" width="6.5113%" height="15" fill="rgb(249,196,1)" fg:x="1151" fg:w="81"/><text x="92.7741%" y="559.50">plugins_r..</text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (81 samples, 6.51%)</title><rect x="92.5241%" y="533" width="6.5113%" height="15" fill="rgb(223,207,51)" fg:x="1151" fg:w="81"/><text x="92.7741%" y="543.50">&lt;plugins_..</text></g><g><title>core::iter::adapters::try_process (76 samples, 6.11%)</title><rect x="92.9260%" y="517" width="6.1093%" height="15" fill="rgb(210,14,40)" fg:x="1156" fg:w="76"/><text x="93.1760%" y="527.50">core::it..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (32 samples, 2.57%)</title><rect x="96.4630%" y="501" width="2.5723%" height="15" fill="rgb(250,20,52)" fg:x="1200" fg:w="32"/><text x="96.7130%" y="511.50">al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 2.57%)</title><rect x="96.4630%" y="485" width="2.5723%" height="15" fill="rgb(241,46,11)" fg:x="1200" fg:w="32"/><text x="96.7130%" y="495.50">&lt;c..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (31 samples, 2.49%)</title><rect x="96.5434%" y="469" width="2.4920%" height="15" fill="rgb(219,105,5)" fg:x="1201" fg:w="31"/><text x="96.7934%" y="479.50">pl..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="98.9550%" y="453" width="0.0804%" height="15" fill="rgb(252,77,35)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="463.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="98.9550%" y="437" width="0.0804%" height="15" fill="rgb(243,119,2)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9550%" y="421" width="0.0804%" height="15" fill="rgb(206,82,28)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="431.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (117 samples, 9.41%)</title><rect x="89.7106%" y="597" width="9.4051%" height="15" fill="rgb(227,120,12)" fg:x="1116" fg:w="117"/><text x="89.9606%" y="607.50">&lt;engine::perf..</text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="99.0354%" y="581" width="0.0804%" height="15" fill="rgb(229,134,41)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="591.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="99.0354%" y="565" width="0.0804%" height="15" fill="rgb(239,96,32)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="99.0354%" y="549" width="0.0804%" height="15" fill="rgb(225,46,27)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="99.0354%" y="533" width="0.0804%" height="15" fill="rgb(215,168,2)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="99.0354%" y="517" width="0.0804%" height="15" fill="rgb(207,170,52)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="99.0354%" y="501" width="0.0804%" height="15" fill="rgb(237,198,36)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="99.0354%" y="485" width="0.0804%" height="15" fill="rgb(213,27,14)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="99.0354%" y="469" width="0.0804%" height="15" fill="rgb(218,77,5)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="99.0354%" y="453" width="0.0804%" height="15" fill="rgb(230,219,39)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="463.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="99.0354%" y="437" width="0.0804%" height="15" fill="rgb(245,177,7)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.0354%" y="421" width="0.0804%" height="15" fill="rgb(246,44,46)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.1961%" y="533" width="0.0804%" height="15" fill="rgb(207,173,15)" fg:x="1234" fg:w="1"/><text x="99.4461%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.1961%" y="517" width="0.0804%" height="15" fill="rgb(245,170,50)" fg:x="1234" fg:w="1"/><text x="99.4461%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.1961%" y="501" width="0.0804%" height="15" fill="rgb(233,156,21)" fg:x="1234" fg:w="1"/><text x="99.4461%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1961%" y="485" width="0.0804%" height="15" fill="rgb(253,146,27)" fg:x="1234" fg:w="1"/><text x="99.4461%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1961%" y="469" width="0.0804%" height="15" fill="rgb(247,66,29)" fg:x="1234" fg:w="1"/><text x="99.4461%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2765%" y="469" width="0.0804%" height="15" fill="rgb(218,207,26)" fg:x="1235" fg:w="1"/><text x="99.5265%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2765%" y="453" width="0.0804%" height="15" fill="rgb(234,93,26)" fg:x="1235" fg:w="1"/><text x="99.5265%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3569%" y="373" width="0.0804%" height="15" fill="rgb(214,75,48)" fg:x="1236" fg:w="1"/><text x="99.6069%" y="383.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="99.2765%" y="517" width="0.2412%" height="15" fill="rgb(229,119,22)" fg:x="1235" fg:w="3"/><text x="99.5265%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.2765%" y="501" width="0.2412%" height="15" fill="rgb(226,153,19)" fg:x="1235" fg:w="3"/><text x="99.5265%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.2765%" y="485" width="0.2412%" height="15" fill="rgb(220,204,36)" fg:x="1235" fg:w="3"/><text x="99.5265%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.3569%" y="469" width="0.1608%" height="15" fill="rgb(253,181,43)" fg:x="1236" fg:w="2"/><text x="99.6069%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3569%" y="453" width="0.1608%" height="15" fill="rgb(211,41,51)" fg:x="1236" fg:w="2"/><text x="99.6069%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.3569%" y="437" width="0.1608%" height="15" fill="rgb(207,215,0)" fg:x="1236" fg:w="2"/><text x="99.6069%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3569%" y="421" width="0.1608%" height="15" fill="rgb(212,153,10)" fg:x="1236" fg:w="2"/><text x="99.6069%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.3569%" y="405" width="0.1608%" height="15" fill="rgb(251,171,36)" fg:x="1236" fg:w="2"/><text x="99.6069%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3569%" y="389" width="0.1608%" height="15" fill="rgb(225,219,41)" fg:x="1236" fg:w="2"/><text x="99.6069%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4373%" y="373" width="0.0804%" height="15" fill="rgb(208,200,1)" fg:x="1237" fg:w="1"/><text x="99.6873%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4373%" y="357" width="0.0804%" height="15" fill="rgb(206,75,47)" fg:x="1237" fg:w="1"/><text x="99.6873%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4373%" y="341" width="0.0804%" height="15" fill="rgb(248,3,16)" fg:x="1237" fg:w="1"/><text x="99.6873%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4373%" y="325" width="0.0804%" height="15" fill="rgb(242,157,36)" fg:x="1237" fg:w="1"/><text x="99.6873%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4373%" y="309" width="0.0804%" height="15" fill="rgb(215,175,11)" fg:x="1237" fg:w="1"/><text x="99.6873%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4373%" y="293" width="0.0804%" height="15" fill="rgb(252,222,22)" fg:x="1237" fg:w="1"/><text x="99.6873%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="99.4373%" y="277" width="0.0804%" height="15" fill="rgb(250,121,35)" fg:x="1237" fg:w="1"/><text x="99.6873%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5177%" y="485" width="0.0804%" height="15" fill="rgb(233,120,49)" fg:x="1238" fg:w="1"/><text x="99.7677%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.5981%" y="485" width="0.0804%" height="15" fill="rgb(205,201,14)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5981%" y="469" width="0.0804%" height="15" fill="rgb(219,58,45)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5981%" y="453" width="0.0804%" height="15" fill="rgb(251,65,12)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5981%" y="437" width="0.0804%" height="15" fill="rgb(224,47,31)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5981%" y="421" width="0.0804%" height="15" fill="rgb(233,74,26)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5981%" y="405" width="0.0804%" height="15" fill="rgb(231,211,31)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5981%" y="389" width="0.0804%" height="15" fill="rgb(239,167,5)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5981%" y="373" width="0.0804%" height="15" fill="rgb(241,85,0)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5981%" y="357" width="0.0804%" height="15" fill="rgb(229,130,21)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5981%" y="341" width="0.0804%" height="15" fill="rgb(254,84,49)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5981%" y="325" width="0.0804%" height="15" fill="rgb(235,85,21)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5981%" y="309" width="0.0804%" height="15" fill="rgb(246,128,52)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5981%" y="293" width="0.0804%" height="15" fill="rgb(243,114,49)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5981%" y="277" width="0.0804%" height="15" fill="rgb(240,224,22)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (125 samples, 10.05%)</title><rect x="89.7106%" y="629" width="10.0482%" height="15" fill="rgb(247,201,52)" fg:x="1116" fg:w="125"/><text x="89.9606%" y="639.50">&lt;plugins_core::..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (125 samples, 10.05%)</title><rect x="89.7106%" y="613" width="10.0482%" height="15" fill="rgb(231,70,45)" fg:x="1116" fg:w="125"/><text x="89.9606%" y="623.50">&lt;engine::perfor..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (8 samples, 0.64%)</title><rect x="99.1158%" y="597" width="0.6431%" height="15" fill="rgb(217,215,20)" fg:x="1233" fg:w="8"/><text x="99.3658%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.56%)</title><rect x="99.1961%" y="581" width="0.5627%" height="15" fill="rgb(226,170,30)" fg:x="1234" fg:w="7"/><text x="99.4461%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="99.1961%" y="565" width="0.5627%" height="15" fill="rgb(220,190,43)" fg:x="1234" fg:w="7"/><text x="99.4461%" y="575.50"></text></g><g><title>engine::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="99.1961%" y="549" width="0.5627%" height="15" fill="rgb(218,20,18)" fg:x="1234" fg:w="7"/><text x="99.4461%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::from_str (6 samples, 0.48%)</title><rect x="99.2765%" y="533" width="0.4823%" height="15" fill="rgb(245,37,26)" fg:x="1235" fg:w="6"/><text x="99.5265%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.5177%" y="517" width="0.2412%" height="15" fill="rgb(241,127,29)" fg:x="1238" fg:w="3"/><text x="99.7677%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.5177%" y="501" width="0.2412%" height="15" fill="rgb(241,33,26)" fg:x="1238" fg:w="3"/><text x="99.7677%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6785%" y="485" width="0.0804%" height="15" fill="rgb(220,106,21)" fg:x="1240" fg:w="1"/><text x="99.9285%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6785%" y="469" width="0.0804%" height="15" fill="rgb(225,125,35)" fg:x="1240" fg:w="1"/><text x="99.9285%" y="479.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (128 samples, 10.29%)</title><rect x="89.6302%" y="693" width="10.2894%" height="15" fill="rgb(248,80,22)" fg:x="1115" fg:w="128"/><text x="89.8802%" y="703.50">&lt;kernel::plugin..</text></g><g><title>core::iter::adapters::try_process (127 samples, 10.21%)</title><rect x="89.7106%" y="677" width="10.2090%" height="15" fill="rgb(231,117,39)" fg:x="1116" fg:w="127"/><text x="89.9606%" y="687.50">core::iter::ada..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (127 samples, 10.21%)</title><rect x="89.7106%" y="661" width="10.2090%" height="15" fill="rgb(239,183,16)" fg:x="1116" fg:w="127"/><text x="89.9606%" y="671.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (127 samples, 10.21%)</title><rect x="89.7106%" y="645" width="10.2090%" height="15" fill="rgb(221,61,19)" fg:x="1116" fg:w="127"/><text x="89.9606%" y="655.50">&lt;core::iter::ad..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (2 samples, 0.16%)</title><rect x="99.7588%" y="629" width="0.1608%" height="15" fill="rgb(239,196,44)" fg:x="1241" fg:w="2"/><text x="100.0088%" y="639.50"></text></g><g><title>all (1,244 samples, 100%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(206,113,19)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="1087.50"></text></g><g><title>simple-92bfa6d4 (1,244 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(245,114,12)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="1071.50">simple-92bfa6d4</text></g><g><title>_start (1,244 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(247,89,39)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="1055.50">_start</text></g><g><title>__libc_start_main (1,244 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(213,85,14)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="1039.50">__libc_start_main</text></g><g><title>main (1,244 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(249,206,33)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="1023.50">main</text></g><g><title>std::rt::lang_start_internal (1,244 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(235,167,47)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="1007.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,244 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(217,177,16)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,244 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(250,228,29)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,244 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(216,195,42)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="959.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,244 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(232,192,32)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,244 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(211,8,47)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,244 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(251,201,9)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,244 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(206,185,47)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,244 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(245,54,32)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="879.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,244 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(208,1,8)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="863.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,244 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(228,57,24)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="847.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,244 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(251,24,8)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="831.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,244 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(236,196,50)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="815.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,244 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(246,222,29)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="799.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (303 samples, 24.36%)</title><rect x="75.6431%" y="773" width="24.3569%" height="15" fill="rgb(211,34,40)" fg:x="941" fg:w="303"/><text x="75.8931%" y="783.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (303 samples, 24.36%)</title><rect x="75.6431%" y="757" width="24.3569%" height="15" fill="rgb(210,66,51)" fg:x="941" fg:w="303"/><text x="75.8931%" y="767.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (303 samples, 24.36%)</title><rect x="75.6431%" y="741" width="24.3569%" height="15" fill="rgb(250,56,43)" fg:x="941" fg:w="303"/><text x="75.8931%" y="751.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (129 samples, 10.37%)</title><rect x="89.6302%" y="725" width="10.3698%" height="15" fill="rgb(240,111,50)" fg:x="1115" fg:w="129"/><text x="89.8802%" y="735.50">engine::session..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (129 samples, 10.37%)</title><rect x="89.6302%" y="709" width="10.3698%" height="15" fill="rgb(209,117,13)" fg:x="1115" fg:w="129"/><text x="89.8802%" y="719.50">engine::perform..</text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.9196%" y="693" width="0.0804%" height="15" fill="rgb(232,164,45)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.9196%" y="677" width="0.0804%" height="15" fill="rgb(205,69,32)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9196%" y="661" width="0.0804%" height="15" fill="rgb(240,147,45)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.9196%" y="645" width="0.0804%" height="15" fill="rgb(221,94,48)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.9196%" y="629" width="0.0804%" height="15" fill="rgb(249,209,17)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="99.9196%" y="613" width="0.0804%" height="15" fill="rgb(228,57,28)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="99.9196%" y="597" width="0.0804%" height="15" fill="rgb(250,133,26)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.9196%" y="581" width="0.0804%" height="15" fill="rgb(254,15,16)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9196%" y="565" width="0.0804%" height="15" fill="rgb(209,147,42)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="575.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="99.9196%" y="549" width="0.0804%" height="15" fill="rgb(208,5,29)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.9196%" y="533" width="0.0804%" height="15" fill="rgb(250,73,31)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="99.9196%" y="517" width="0.0804%" height="15" fill="rgb(238,45,10)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="527.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="99.9196%" y="501" width="0.0804%" height="15" fill="rgb(214,104,5)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="511.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.08%)</title><rect x="99.9196%" y="485" width="0.0804%" height="15" fill="rgb(242,217,19)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="495.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.08%)</title><rect x="99.9196%" y="469" width="0.0804%" height="15" fill="rgb(246,113,27)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="99.9196%" y="453" width="0.0804%" height="15" fill="rgb(221,34,27)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="99.9196%" y="437" width="0.0804%" height="15" fill="rgb(246,109,6)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="99.9196%" y="421" width="0.0804%" height="15" fill="rgb(217,12,25)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="99.9196%" y="405" width="0.0804%" height="15" fill="rgb(250,195,5)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="99.9196%" y="389" width="0.0804%" height="15" fill="rgb(244,140,45)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="99.9196%" y="373" width="0.0804%" height="15" fill="rgb(230,64,14)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="383.50"></text></g></svg></svg>