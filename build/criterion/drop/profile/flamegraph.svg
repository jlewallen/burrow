<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="1246"><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.2408%" y="501" width="0.1605%" height="15" fill="rgb(206,49,37)" fg:x="3" fg:w="2"/><text x="0.4908%" y="511.50"></text></g><g><title>__libc_free (6 samples, 0.48%)</title><rect x="0.4013%" y="485" width="0.4815%" height="15" fill="rgb(247,39,21)" fg:x="5" fg:w="6"/><text x="0.6513%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8828%" y="469" width="0.1605%" height="15" fill="rgb(209,220,15)" fg:x="11" fg:w="2"/><text x="1.1328%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="0.1605%" y="533" width="0.9631%" height="15" fill="rgb(206,41,33)" fg:x="2" fg:w="12"/><text x="0.4105%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.88%)</title><rect x="0.2408%" y="517" width="0.8828%" height="15" fill="rgb(221,225,45)" fg:x="3" fg:w="11"/><text x="0.4908%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (9 samples, 0.72%)</title><rect x="0.4013%" y="501" width="0.7223%" height="15" fill="rgb(216,27,18)" fg:x="5" fg:w="9"/><text x="0.6513%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.24%)</title><rect x="0.8828%" y="485" width="0.2408%" height="15" fill="rgb(250,193,34)" fg:x="11" fg:w="3"/><text x="1.1328%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::plugins::ArgumentType&gt; (1 samples, 0.08%)</title><rect x="1.0433%" y="469" width="0.0803%" height="15" fill="rgb(227,215,20)" fg:x="13" fg:w="1"/><text x="1.2933%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::plugins::ArgumentType&gt; (1 samples, 0.08%)</title><rect x="1.0433%" y="453" width="0.0803%" height="15" fill="rgb(242,211,27)" fg:x="13" fg:w="1"/><text x="1.2933%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 1.04%)</title><rect x="0.1605%" y="549" width="1.0433%" height="15" fill="rgb(229,190,30)" fg:x="2" fg:w="13"/><text x="0.4105%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1236%" y="533" width="0.0803%" height="15" fill="rgb(253,31,29)" fg:x="14" fg:w="1"/><text x="1.3736%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8459%" y="469" width="0.0803%" height="15" fill="rgb(229,177,52)" fg:x="23" fg:w="1"/><text x="2.0959%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.0867%" y="437" width="0.1605%" height="15" fill="rgb(226,88,8)" fg:x="26" fg:w="2"/><text x="2.3367%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.48%)</title><rect x="2.2472%" y="437" width="0.4815%" height="15" fill="rgb(214,55,27)" fg:x="28" fg:w="6"/><text x="2.4972%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.4880%" y="421" width="0.2408%" height="15" fill="rgb(233,202,5)" fg:x="31" fg:w="3"/><text x="2.7380%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="2.7287%" y="421" width="0.1605%" height="15" fill="rgb(251,49,30)" fg:x="34" fg:w="2"/><text x="2.9787%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="2.7287%" y="405" width="0.1605%" height="15" fill="rgb(235,18,52)" fg:x="34" fg:w="2"/><text x="2.9787%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.7287%" y="389" width="0.1605%" height="15" fill="rgb(250,111,51)" fg:x="34" fg:w="2"/><text x="2.9787%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8892%" y="421" width="0.0803%" height="15" fill="rgb(218,13,25)" fg:x="36" fg:w="1"/><text x="3.1392%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.9695%" y="421" width="0.0803%" height="15" fill="rgb(248,96,7)" fg:x="37" fg:w="1"/><text x="3.2195%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.9695%" y="405" width="0.0803%" height="15" fill="rgb(217,31,15)" fg:x="37" fg:w="1"/><text x="3.2195%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.0498%" y="405" width="0.0803%" height="15" fill="rgb(228,59,49)" fg:x="38" fg:w="1"/><text x="3.2998%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.77%)</title><rect x="1.5249%" y="485" width="1.7657%" height="15" fill="rgb(210,152,38)" fg:x="19" fg:w="22"/><text x="1.7749%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (17 samples, 1.36%)</title><rect x="1.9262%" y="469" width="1.3644%" height="15" fill="rgb(206,71,11)" fg:x="24" fg:w="17"/><text x="2.1762%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.28%)</title><rect x="2.0064%" y="453" width="1.2841%" height="15" fill="rgb(244,199,5)" fg:x="25" fg:w="16"/><text x="2.2564%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="2.7287%" y="437" width="0.5618%" height="15" fill="rgb(253,49,1)" fg:x="34" fg:w="7"/><text x="2.9787%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="3.0498%" y="421" width="0.2408%" height="15" fill="rgb(225,206,40)" fg:x="38" fg:w="3"/><text x="3.2998%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.1300%" y="405" width="0.1605%" height="15" fill="rgb(243,116,47)" fg:x="39" fg:w="2"/><text x="3.3800%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.1300%" y="389" width="0.1605%" height="15" fill="rgb(219,225,16)" fg:x="39" fg:w="2"/><text x="3.3800%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="3.2905%" y="485" width="0.2408%" height="15" fill="rgb(233,29,47)" fg:x="41" fg:w="3"/><text x="3.5405%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.5313%" y="469" width="0.1605%" height="15" fill="rgb(250,179,18)" fg:x="44" fg:w="2"/><text x="3.7813%" y="479.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="3.7721%" y="453" width="0.4013%" height="15" fill="rgb(215,176,6)" fg:x="47" fg:w="5"/><text x="4.0221%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="4.1734%" y="453" width="0.4013%" height="15" fill="rgb(214,117,39)" fg:x="52" fg:w="5"/><text x="4.4234%" y="463.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="4.2536%" y="437" width="0.3210%" height="15" fill="rgb(247,183,36)" fg:x="53" fg:w="4"/><text x="4.5036%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.6549%" y="437" width="0.0803%" height="15" fill="rgb(237,200,3)" fg:x="58" fg:w="1"/><text x="4.9049%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.7352%" y="437" width="0.0803%" height="15" fill="rgb(212,220,24)" fg:x="59" fg:w="1"/><text x="4.9852%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.7352%" y="421" width="0.0803%" height="15" fill="rgb(245,216,20)" fg:x="59" fg:w="1"/><text x="4.9852%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.8154%" y="389" width="0.0803%" height="15" fill="rgb(219,124,7)" fg:x="60" fg:w="1"/><text x="5.0654%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="4.8154%" y="421" width="0.1605%" height="15" fill="rgb(227,167,8)" fg:x="60" fg:w="2"/><text x="5.0654%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="4.8154%" y="405" width="0.1605%" height="15" fill="rgb(241,37,2)" fg:x="60" fg:w="2"/><text x="5.0654%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.8957%" y="389" width="0.0803%" height="15" fill="rgb(238,134,33)" fg:x="61" fg:w="1"/><text x="5.1457%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.8957%" y="373" width="0.0803%" height="15" fill="rgb(248,48,27)" fg:x="61" fg:w="1"/><text x="5.1457%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.9759%" y="421" width="0.0803%" height="15" fill="rgb(212,14,16)" fg:x="62" fg:w="1"/><text x="5.2259%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.0562%" y="421" width="0.0803%" height="15" fill="rgb(217,205,37)" fg:x="63" fg:w="1"/><text x="5.3062%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.0562%" y="405" width="0.0803%" height="15" fill="rgb(233,185,47)" fg:x="63" fg:w="1"/><text x="5.3062%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 3.85%)</title><rect x="1.4446%" y="501" width="3.8523%" height="15" fill="rgb(244,88,8)" fg:x="18" fg:w="48"/><text x="1.6946%" y="511.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (22 samples, 1.77%)</title><rect x="3.5313%" y="485" width="1.7657%" height="15" fill="rgb(213,0,20)" fg:x="44" fg:w="22"/><text x="3.7813%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.61%)</title><rect x="3.6918%" y="469" width="1.6051%" height="15" fill="rgb(238,159,36)" fg:x="46" fg:w="20"/><text x="3.9418%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="4.5746%" y="453" width="0.7223%" height="15" fill="rgb(253,173,17)" fg:x="57" fg:w="9"/><text x="4.8246%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="4.8154%" y="437" width="0.4815%" height="15" fill="rgb(221,23,28)" fg:x="60" fg:w="6"/><text x="5.0654%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="5.1364%" y="421" width="0.1605%" height="15" fill="rgb(218,113,15)" fg:x="64" fg:w="2"/><text x="5.3864%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="5.1364%" y="405" width="0.1605%" height="15" fill="rgb(233,58,3)" fg:x="64" fg:w="2"/><text x="5.3864%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 3.93%)</title><rect x="1.4446%" y="533" width="3.9326%" height="15" fill="rgb(250,46,35)" fg:x="18" fg:w="49"/><text x="1.6946%" y="543.50">&lt;has..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (49 samples, 3.93%)</title><rect x="1.4446%" y="517" width="3.9326%" height="15" fill="rgb(210,169,11)" fg:x="18" fg:w="49"/><text x="1.6946%" y="527.50">core..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.2970%" y="501" width="0.0803%" height="15" fill="rgb(246,88,19)" fg:x="66" fg:w="1"/><text x="5.5470%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (53 samples, 4.25%)</title><rect x="1.2039%" y="549" width="4.2536%" height="15" fill="rgb(206,81,49)" fg:x="15" fg:w="53"/><text x="1.4539%" y="559.50">core:..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.3772%" y="533" width="0.0803%" height="15" fill="rgb(232,144,18)" fg:x="67" fg:w="1"/><text x="5.6272%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 5.54%)</title><rect x="0.0000%" y="565" width="5.5377%" height="15" fill="rgb(235,2,27)" fg:x="0" fg:w="69"/><text x="0.2500%" y="575.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="5.4575%" y="549" width="0.0803%" height="15" fill="rgb(239,157,39)" fg:x="68" fg:w="1"/><text x="5.7075%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="5.5377%" y="517" width="0.1605%" height="15" fill="rgb(220,11,17)" fg:x="69" fg:w="2"/><text x="5.7877%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.7785%" y="501" width="0.0803%" height="15" fill="rgb(243,94,50)" fg:x="72" fg:w="1"/><text x="6.0285%" y="511.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="6.3403%" y="437" width="0.0803%" height="15" fill="rgb(218,22,0)" fg:x="79" fg:w="1"/><text x="6.5903%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="6.3403%" y="421" width="0.0803%" height="15" fill="rgb(249,70,21)" fg:x="79" fg:w="1"/><text x="6.5903%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.3403%" y="405" width="0.0803%" height="15" fill="rgb(245,111,46)" fg:x="79" fg:w="1"/><text x="6.5903%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.3403%" y="389" width="0.0803%" height="15" fill="rgb(244,183,12)" fg:x="79" fg:w="1"/><text x="6.5903%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.3403%" y="373" width="0.0803%" height="15" fill="rgb(207,117,0)" fg:x="79" fg:w="1"/><text x="6.5903%" y="383.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (5 samples, 0.40%)</title><rect x="6.4205%" y="437" width="0.4013%" height="15" fill="rgb(206,20,43)" fg:x="80" fg:w="5"/><text x="6.6705%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.40%)</title><rect x="6.4205%" y="421" width="0.4013%" height="15" fill="rgb(221,104,11)" fg:x="80" fg:w="5"/><text x="6.6705%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="6.4205%" y="405" width="0.4013%" height="15" fill="rgb(254,36,50)" fg:x="80" fg:w="5"/><text x="6.6705%" y="415.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="6.5008%" y="389" width="0.3210%" height="15" fill="rgb(252,17,15)" fg:x="81" fg:w="4"/><text x="6.7508%" y="399.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (7 samples, 0.56%)</title><rect x="6.3403%" y="469" width="0.5618%" height="15" fill="rgb(219,129,43)" fg:x="79" fg:w="7"/><text x="6.5903%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (7 samples, 0.56%)</title><rect x="6.3403%" y="453" width="0.5618%" height="15" fill="rgb(205,34,45)" fg:x="79" fg:w="7"/><text x="6.5903%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="6.8218%" y="437" width="0.0803%" height="15" fill="rgb(251,201,32)" fg:x="85" fg:w="1"/><text x="7.0718%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.8218%" y="421" width="0.0803%" height="15" fill="rgb(205,56,0)" fg:x="85" fg:w="1"/><text x="7.0718%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="7.1429%" y="437" width="0.0803%" height="15" fill="rgb(211,193,27)" fg:x="89" fg:w="1"/><text x="7.3929%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="7.1429%" y="421" width="0.0803%" height="15" fill="rgb(231,100,42)" fg:x="89" fg:w="1"/><text x="7.3929%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="7.1429%" y="405" width="0.0803%" height="15" fill="rgb(245,85,27)" fg:x="89" fg:w="1"/><text x="7.3929%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.1429%" y="389" width="0.0803%" height="15" fill="rgb(241,76,24)" fg:x="89" fg:w="1"/><text x="7.3929%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.1429%" y="373" width="0.0803%" height="15" fill="rgb(249,157,15)" fg:x="89" fg:w="1"/><text x="7.3929%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="7.2231%" y="437" width="0.1605%" height="15" fill="rgb(222,218,25)" fg:x="90" fg:w="2"/><text x="7.4731%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="7.2231%" y="421" width="0.1605%" height="15" fill="rgb(252,156,52)" fg:x="90" fg:w="2"/><text x="7.4731%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="7.2231%" y="405" width="0.1605%" height="15" fill="rgb(211,185,7)" fg:x="90" fg:w="2"/><text x="7.4731%" y="415.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="7.3836%" y="437" width="0.0803%" height="15" fill="rgb(234,108,24)" fg:x="92" fg:w="1"/><text x="7.6336%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.3836%" y="421" width="0.0803%" height="15" fill="rgb(227,218,2)" fg:x="92" fg:w="1"/><text x="7.6336%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::new (2 samples, 0.16%)</title><rect x="7.4639%" y="437" width="0.1605%" height="15" fill="rgb(224,0,36)" fg:x="93" fg:w="2"/><text x="7.7139%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="7.4639%" y="421" width="0.1605%" height="15" fill="rgb(233,201,10)" fg:x="93" fg:w="2"/><text x="7.7139%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (11 samples, 0.88%)</title><rect x="6.9021%" y="469" width="0.8828%" height="15" fill="rgb(252,209,14)" fg:x="86" fg:w="11"/><text x="7.1521%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (11 samples, 0.88%)</title><rect x="6.9021%" y="453" width="0.8828%" height="15" fill="rgb(205,93,49)" fg:x="86" fg:w="11"/><text x="7.1521%" y="463.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="7.6244%" y="437" width="0.1605%" height="15" fill="rgb(234,116,45)" fg:x="95" fg:w="2"/><text x="7.8744%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="7.6244%" y="421" width="0.1605%" height="15" fill="rgb(248,89,35)" fg:x="95" fg:w="2"/><text x="7.8744%" y="431.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="7.7849%" y="469" width="0.0803%" height="15" fill="rgb(233,167,45)" fg:x="97" fg:w="1"/><text x="8.0349%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="7.7849%" y="453" width="0.0803%" height="15" fill="rgb(248,228,14)" fg:x="97" fg:w="1"/><text x="8.0349%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="7.7849%" y="437" width="0.0803%" height="15" fill="rgb(246,91,14)" fg:x="97" fg:w="1"/><text x="8.0349%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="7.8652%" y="437" width="0.0803%" height="15" fill="rgb(227,142,5)" fg:x="98" fg:w="1"/><text x="8.1152%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.8652%" y="421" width="0.0803%" height="15" fill="rgb(221,63,33)" fg:x="98" fg:w="1"/><text x="8.1152%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.8652%" y="405" width="0.0803%" height="15" fill="rgb(233,49,0)" fg:x="98" fg:w="1"/><text x="8.1152%" y="415.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="7.8652%" y="469" width="0.1605%" height="15" fill="rgb(251,115,38)" fg:x="98" fg:w="2"/><text x="8.1152%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="7.8652%" y="453" width="0.1605%" height="15" fill="rgb(231,214,32)" fg:x="98" fg:w="2"/><text x="8.1152%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="7.9454%" y="437" width="0.0803%" height="15" fill="rgb(248,73,46)" fg:x="99" fg:w="1"/><text x="8.1954%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.9454%" y="421" width="0.0803%" height="15" fill="rgb(237,156,4)" fg:x="99" fg:w="1"/><text x="8.1954%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::actions::RemoveRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="8.1059%" y="437" width="0.0803%" height="15" fill="rgb(227,132,2)" fg:x="101" fg:w="1"/><text x="8.3559%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.1862%" y="437" width="0.0803%" height="15" fill="rgb(248,161,9)" fg:x="102" fg:w="1"/><text x="8.4362%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.1862%" y="421" width="0.0803%" height="15" fill="rgb(238,77,38)" fg:x="102" fg:w="1"/><text x="8.4362%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.1862%" y="405" width="0.0803%" height="15" fill="rgb(222,166,40)" fg:x="102" fg:w="1"/><text x="8.4362%" y="415.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.40%)</title><rect x="8.0257%" y="469" width="0.4013%" height="15" fill="rgb(214,168,45)" fg:x="100" fg:w="5"/><text x="8.2757%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.32%)</title><rect x="8.1059%" y="453" width="0.3210%" height="15" fill="rgb(226,64,37)" fg:x="101" fg:w="4"/><text x="8.3559%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::new (2 samples, 0.16%)</title><rect x="8.2665%" y="437" width="0.1605%" height="15" fill="rgb(232,210,43)" fg:x="103" fg:w="2"/><text x="8.5165%" y="447.50"></text></g><g><title>&lt;plugins_rune::actions::RuneAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="8.4270%" y="437" width="0.1605%" height="15" fill="rgb(214,76,33)" fg:x="105" fg:w="2"/><text x="8.6770%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="8.4270%" y="421" width="0.1605%" height="15" fill="rgb(210,78,5)" fg:x="105" fg:w="2"/><text x="8.6770%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.5072%" y="405" width="0.0803%" height="15" fill="rgb(211,107,37)" fg:x="106" fg:w="1"/><text x="8.7572%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.5072%" y="389" width="0.0803%" height="15" fill="rgb(249,67,16)" fg:x="106" fg:w="1"/><text x="8.7572%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.5072%" y="373" width="0.0803%" height="15" fill="rgb(222,114,31)" fg:x="106" fg:w="1"/><text x="8.7572%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.5875%" y="437" width="0.0803%" height="15" fill="rgb(242,118,19)" fg:x="107" fg:w="1"/><text x="8.8375%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.5875%" y="421" width="0.0803%" height="15" fill="rgb(223,115,1)" fg:x="107" fg:w="1"/><text x="8.8375%" y="431.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (4 samples, 0.32%)</title><rect x="8.4270%" y="469" width="0.3210%" height="15" fill="rgb(241,182,54)" fg:x="105" fg:w="4"/><text x="8.6770%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.32%)</title><rect x="8.4270%" y="453" width="0.3210%" height="15" fill="rgb(244,166,36)" fg:x="105" fg:w="4"/><text x="8.6770%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="8.6677%" y="437" width="0.0803%" height="15" fill="rgb(241,52,43)" fg:x="108" fg:w="1"/><text x="8.9177%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.6677%" y="421" width="0.0803%" height="15" fill="rgb(236,82,9)" fg:x="108" fg:w="1"/><text x="8.9177%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.6677%" y="405" width="0.0803%" height="15" fill="rgb(241,119,0)" fg:x="108" fg:w="1"/><text x="8.9177%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="8.7480%" y="469" width="0.0803%" height="15" fill="rgb(221,19,22)" fg:x="109" fg:w="1"/><text x="8.9980%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="8.8283%" y="469" width="0.0803%" height="15" fill="rgb(254,144,35)" fg:x="110" fg:w="1"/><text x="9.0783%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8283%" y="453" width="0.0803%" height="15" fill="rgb(246,132,30)" fg:x="110" fg:w="1"/><text x="9.0783%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (38 samples, 3.05%)</title><rect x="5.9390%" y="485" width="3.0498%" height="15" fill="rgb(234,69,28)" fg:x="74" fg:w="38"/><text x="6.1890%" y="495.50">&lt;ha..</text></g><g><title>kernel::plugins::Plugin::schema (1 samples, 0.08%)</title><rect x="8.9085%" y="469" width="0.0803%" height="15" fill="rgb(219,106,47)" fg:x="111" fg:w="1"/><text x="9.1585%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="8.9888%" y="469" width="0.0803%" height="15" fill="rgb(218,79,24)" fg:x="112" fg:w="1"/><text x="9.2388%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="8.9888%" y="453" width="0.0803%" height="15" fill="rgb(225,26,21)" fg:x="112" fg:w="1"/><text x="9.2388%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.9888%" y="437" width="0.0803%" height="15" fill="rgb(217,68,49)" fg:x="112" fg:w="1"/><text x="9.2388%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.9888%" y="421" width="0.0803%" height="15" fill="rgb(220,204,28)" fg:x="112" fg:w="1"/><text x="9.2388%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.9888%" y="405" width="0.0803%" height="15" fill="rgb(237,208,43)" fg:x="112" fg:w="1"/><text x="9.2388%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="8.9888%" y="389" width="0.0803%" height="15" fill="rgb(213,97,42)" fg:x="112" fg:w="1"/><text x="9.2388%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="8.9888%" y="373" width="0.0803%" height="15" fill="rgb(238,96,52)" fg:x="112" fg:w="1"/><text x="9.2388%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="8.9888%" y="357" width="0.0803%" height="15" fill="rgb(228,14,13)" fg:x="112" fg:w="1"/><text x="9.2388%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="8.9888%" y="341" width="0.0803%" height="15" fill="rgb(219,123,13)" fg:x="112" fg:w="1"/><text x="9.2388%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="8.9888%" y="325" width="0.0803%" height="15" fill="rgb(216,144,17)" fg:x="112" fg:w="1"/><text x="9.2388%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="8.9888%" y="309" width="0.0803%" height="15" fill="rgb(230,228,29)" fg:x="112" fg:w="1"/><text x="9.2388%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.9888%" y="293" width="0.0803%" height="15" fill="rgb(233,18,5)" fg:x="112" fg:w="1"/><text x="9.2388%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="8.9888%" y="277" width="0.0803%" height="15" fill="rgb(233,197,12)" fg:x="112" fg:w="1"/><text x="9.2388%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.9888%" y="261" width="0.0803%" height="15" fill="rgb(234,140,29)" fg:x="112" fg:w="1"/><text x="9.2388%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="8.9888%" y="245" width="0.0803%" height="15" fill="rgb(233,113,19)" fg:x="112" fg:w="1"/><text x="9.2388%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="8.9888%" y="229" width="0.0803%" height="15" fill="rgb(246,209,13)" fg:x="112" fg:w="1"/><text x="9.2388%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="8.9888%" y="213" width="0.0803%" height="15" fill="rgb(242,79,54)" fg:x="112" fg:w="1"/><text x="9.2388%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.9888%" y="197" width="0.0803%" height="15" fill="rgb(219,73,16)" fg:x="112" fg:w="1"/><text x="9.2388%" y="207.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="9.0690%" y="469" width="0.0803%" height="15" fill="rgb(224,52,10)" fg:x="113" fg:w="1"/><text x="9.3190%" y="479.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="9.0690%" y="453" width="0.0803%" height="15" fill="rgb(237,179,5)" fg:x="113" fg:w="1"/><text x="9.3190%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="9.0690%" y="437" width="0.0803%" height="15" fill="rgb(231,20,6)" fg:x="113" fg:w="1"/><text x="9.3190%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="9.0690%" y="421" width="0.0803%" height="15" fill="rgb(253,171,45)" fg:x="113" fg:w="1"/><text x="9.3190%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="9.0690%" y="405" width="0.0803%" height="15" fill="rgb(230,75,49)" fg:x="113" fg:w="1"/><text x="9.3190%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="9.0690%" y="389" width="0.0803%" height="15" fill="rgb(216,83,46)" fg:x="113" fg:w="1"/><text x="9.3190%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="9.1493%" y="421" width="0.0803%" height="15" fill="rgb(236,56,9)" fg:x="114" fg:w="1"/><text x="9.3993%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.56%)</title><rect x="8.9888%" y="485" width="0.5618%" height="15" fill="rgb(215,28,34)" fg:x="112" fg:w="7"/><text x="9.2388%" y="495.50"></text></g><g><title>std::sys::unix::fs::stat (5 samples, 0.40%)</title><rect x="9.1493%" y="469" width="0.4013%" height="15" fill="rgb(230,222,20)" fg:x="114" fg:w="5"/><text x="9.3993%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (5 samples, 0.40%)</title><rect x="9.1493%" y="453" width="0.4013%" height="15" fill="rgb(235,209,51)" fg:x="114" fg:w="5"/><text x="9.3993%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (5 samples, 0.40%)</title><rect x="9.1493%" y="437" width="0.4013%" height="15" fill="rgb(235,167,1)" fg:x="114" fg:w="5"/><text x="9.3993%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (4 samples, 0.32%)</title><rect x="9.2295%" y="421" width="0.3210%" height="15" fill="rgb(248,220,0)" fg:x="115" fg:w="4"/><text x="9.4795%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx (4 samples, 0.32%)</title><rect x="9.2295%" y="405" width="0.3210%" height="15" fill="rgb(239,0,18)" fg:x="115" fg:w="4"/><text x="9.4795%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (4 samples, 0.32%)</title><rect x="9.2295%" y="389" width="0.3210%" height="15" fill="rgb(229,179,11)" fg:x="115" fg:w="4"/><text x="9.4795%" y="399.50"></text></g><g><title>statx (4 samples, 0.32%)</title><rect x="9.2295%" y="373" width="0.3210%" height="15" fill="rgb(226,116,53)" fg:x="115" fg:w="4"/><text x="9.4795%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.7111%" y="437" width="0.0803%" height="15" fill="rgb(218,1,49)" fg:x="121" fg:w="1"/><text x="9.9611%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.7111%" y="421" width="0.0803%" height="15" fill="rgb(208,184,47)" fg:x="121" fg:w="1"/><text x="9.9611%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.7111%" y="405" width="0.0803%" height="15" fill="rgb(238,174,3)" fg:x="121" fg:w="1"/><text x="9.9611%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.7111%" y="389" width="0.0803%" height="15" fill="rgb(247,188,6)" fg:x="121" fg:w="1"/><text x="9.9611%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.7111%" y="373" width="0.0803%" height="15" fill="rgb(211,165,46)" fg:x="121" fg:w="1"/><text x="9.9611%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.7111%" y="357" width="0.0803%" height="15" fill="rgb(222,190,10)" fg:x="121" fg:w="1"/><text x="9.9611%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.7111%" y="341" width="0.0803%" height="15" fill="rgb(206,185,3)" fg:x="121" fg:w="1"/><text x="9.9611%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="9.7111%" y="325" width="0.0803%" height="15" fill="rgb(244,125,37)" fg:x="121" fg:w="1"/><text x="9.9611%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="9.7111%" y="309" width="0.0803%" height="15" fill="rgb(211,43,7)" fg:x="121" fg:w="1"/><text x="9.9611%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="9.7111%" y="293" width="0.0803%" height="15" fill="rgb(250,41,42)" fg:x="121" fg:w="1"/><text x="9.9611%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="9.7111%" y="277" width="0.0803%" height="15" fill="rgb(254,54,42)" fg:x="121" fg:w="1"/><text x="9.9611%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.7111%" y="261" width="0.0803%" height="15" fill="rgb(213,71,43)" fg:x="121" fg:w="1"/><text x="9.9611%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="10.0321%" y="421" width="0.4013%" height="15" fill="rgb(249,3,44)" fg:x="125" fg:w="5"/><text x="10.2821%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="10.1124%" y="405" width="0.3210%" height="15" fill="rgb(229,80,41)" fg:x="126" fg:w="4"/><text x="10.3624%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="10.1124%" y="389" width="0.3210%" height="15" fill="rgb(231,25,28)" fg:x="126" fg:w="4"/><text x="10.3624%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="10.1124%" y="373" width="0.3210%" height="15" fill="rgb(208,79,48)" fg:x="126" fg:w="4"/><text x="10.3624%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="10.1124%" y="357" width="0.3210%" height="15" fill="rgb(207,196,38)" fg:x="126" fg:w="4"/><text x="10.3624%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="10.1124%" y="341" width="0.3210%" height="15" fill="rgb(228,105,49)" fg:x="126" fg:w="4"/><text x="10.3624%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="10.1124%" y="325" width="0.3210%" height="15" fill="rgb(237,99,15)" fg:x="126" fg:w="4"/><text x="10.3624%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="10.1124%" y="309" width="0.3210%" height="15" fill="rgb(224,207,46)" fg:x="126" fg:w="4"/><text x="10.3624%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="10.1124%" y="293" width="0.3210%" height="15" fill="rgb(249,117,50)" fg:x="126" fg:w="4"/><text x="10.3624%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="10.1124%" y="277" width="0.3210%" height="15" fill="rgb(248,17,13)" fg:x="126" fg:w="4"/><text x="10.3624%" y="287.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="10.1124%" y="261" width="0.3210%" height="15" fill="rgb(228,187,36)" fg:x="126" fg:w="4"/><text x="10.3624%" y="271.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="10.1124%" y="245" width="0.3210%" height="15" fill="rgb(234,132,20)" fg:x="126" fg:w="4"/><text x="10.3624%" y="255.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (11 samples, 0.88%)</title><rect x="9.6308%" y="469" width="0.8828%" height="15" fill="rgb(209,170,46)" fg:x="120" fg:w="11"/><text x="9.8808%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.88%)</title><rect x="9.6308%" y="453" width="0.8828%" height="15" fill="rgb(237,23,19)" fg:x="120" fg:w="11"/><text x="9.8808%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.72%)</title><rect x="9.7913%" y="437" width="0.7223%" height="15" fill="rgb(227,21,26)" fg:x="122" fg:w="9"/><text x="10.0413%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.4334%" y="421" width="0.0803%" height="15" fill="rgb(222,220,48)" fg:x="130" fg:w="1"/><text x="10.6834%" y="431.50"></text></g><g><title>glob::is_dir (6 samples, 0.48%)</title><rect x="10.5136%" y="421" width="0.4815%" height="15" fill="rgb(214,9,16)" fg:x="131" fg:w="6"/><text x="10.7636%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat (6 samples, 0.48%)</title><rect x="10.5136%" y="405" width="0.4815%" height="15" fill="rgb(209,73,30)" fg:x="131" fg:w="6"/><text x="10.7636%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (6 samples, 0.48%)</title><rect x="10.5136%" y="389" width="0.4815%" height="15" fill="rgb(207,20,33)" fg:x="131" fg:w="6"/><text x="10.7636%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (6 samples, 0.48%)</title><rect x="10.5136%" y="373" width="0.4815%" height="15" fill="rgb(219,153,12)" fg:x="131" fg:w="6"/><text x="10.7636%" y="383.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (6 samples, 0.48%)</title><rect x="10.5136%" y="357" width="0.4815%" height="15" fill="rgb(235,97,25)" fg:x="131" fg:w="6"/><text x="10.7636%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx (6 samples, 0.48%)</title><rect x="10.5136%" y="341" width="0.4815%" height="15" fill="rgb(244,30,34)" fg:x="131" fg:w="6"/><text x="10.7636%" y="351.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (6 samples, 0.48%)</title><rect x="10.5136%" y="325" width="0.4815%" height="15" fill="rgb(214,106,45)" fg:x="131" fg:w="6"/><text x="10.7636%" y="335.50"></text></g><g><title>statx (6 samples, 0.48%)</title><rect x="10.5136%" y="309" width="0.4815%" height="15" fill="rgb(226,41,9)" fg:x="131" fg:w="6"/><text x="10.7636%" y="319.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.08%)</title><rect x="10.9952%" y="341" width="0.0803%" height="15" fill="rgb(253,139,29)" fg:x="137" fg:w="1"/><text x="11.2452%" y="351.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.08%)</title><rect x="10.9952%" y="325" width="0.0803%" height="15" fill="rgb(213,205,39)" fg:x="137" fg:w="1"/><text x="11.2452%" y="335.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.08%)</title><rect x="10.9952%" y="309" width="0.0803%" height="15" fill="rgb(209,27,10)" fg:x="137" fg:w="1"/><text x="11.2452%" y="319.50"></text></g><g><title>__errno_location (1 samples, 0.08%)</title><rect x="10.9952%" y="293" width="0.0803%" height="15" fill="rgb(249,142,16)" fg:x="137" fg:w="1"/><text x="11.2452%" y="303.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.72%)</title><rect x="10.5136%" y="453" width="0.7223%" height="15" fill="rgb(242,65,12)" fg:x="131" fg:w="9"/><text x="10.7636%" y="463.50"></text></g><g><title>glob::fill_todo (9 samples, 0.72%)</title><rect x="10.5136%" y="437" width="0.7223%" height="15" fill="rgb(232,48,10)" fg:x="131" fg:w="9"/><text x="10.7636%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.24%)</title><rect x="10.9952%" y="421" width="0.2408%" height="15" fill="rgb(253,67,19)" fg:x="137" fg:w="3"/><text x="11.2452%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.24%)</title><rect x="10.9952%" y="405" width="0.2408%" height="15" fill="rgb(227,93,29)" fg:x="137" fg:w="3"/><text x="11.2452%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="10.9952%" y="389" width="0.2408%" height="15" fill="rgb(226,189,53)" fg:x="137" fg:w="3"/><text x="11.2452%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.24%)</title><rect x="10.9952%" y="373" width="0.2408%" height="15" fill="rgb(223,224,1)" fg:x="137" fg:w="3"/><text x="11.2452%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.24%)</title><rect x="10.9952%" y="357" width="0.2408%" height="15" fill="rgb(221,84,32)" fg:x="137" fg:w="3"/><text x="11.2452%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.16%)</title><rect x="11.0754%" y="341" width="0.1605%" height="15" fill="rgb(214,189,28)" fg:x="138" fg:w="2"/><text x="11.3254%" y="351.50"></text></g><g><title>statx (2 samples, 0.16%)</title><rect x="11.0754%" y="325" width="0.1605%" height="15" fill="rgb(234,7,52)" fg:x="138" fg:w="2"/><text x="11.3254%" y="335.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="11.2360%" y="421" width="0.0803%" height="15" fill="rgb(249,73,31)" fg:x="140" fg:w="1"/><text x="11.4860%" y="431.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="11.3162%" y="421" width="0.2408%" height="15" fill="rgb(253,153,41)" fg:x="141" fg:w="3"/><text x="11.5662%" y="431.50"></text></g><g><title>std::path::PathBuf::_push (3 samples, 0.24%)</title><rect x="11.3162%" y="405" width="0.2408%" height="15" fill="rgb(249,52,34)" fg:x="141" fg:w="3"/><text x="11.5662%" y="415.50"></text></g><g><title>std::ffi::os_str::OsString::push (3 samples, 0.24%)</title><rect x="11.3162%" y="389" width="0.2408%" height="15" fill="rgb(236,177,47)" fg:x="141" fg:w="3"/><text x="11.5662%" y="399.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (3 samples, 0.24%)</title><rect x="11.3162%" y="373" width="0.2408%" height="15" fill="rgb(252,185,45)" fg:x="141" fg:w="3"/><text x="11.5662%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.24%)</title><rect x="11.3162%" y="357" width="0.2408%" height="15" fill="rgb(251,15,30)" fg:x="141" fg:w="3"/><text x="11.5662%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.24%)</title><rect x="11.3162%" y="341" width="0.2408%" height="15" fill="rgb(233,31,4)" fg:x="141" fg:w="3"/><text x="11.5662%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.24%)</title><rect x="11.3162%" y="325" width="0.2408%" height="15" fill="rgb(254,44,24)" fg:x="141" fg:w="3"/><text x="11.5662%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.24%)</title><rect x="11.3162%" y="309" width="0.2408%" height="15" fill="rgb(218,54,1)" fg:x="141" fg:w="3"/><text x="11.5662%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.24%)</title><rect x="11.3162%" y="293" width="0.2408%" height="15" fill="rgb(243,209,39)" fg:x="141" fg:w="3"/><text x="11.5662%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="11.3162%" y="277" width="0.2408%" height="15" fill="rgb(206,75,33)" fg:x="141" fg:w="3"/><text x="11.5662%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.24%)</title><rect x="11.3162%" y="261" width="0.2408%" height="15" fill="rgb(223,108,18)" fg:x="141" fg:w="3"/><text x="11.5662%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="11.3162%" y="245" width="0.2408%" height="15" fill="rgb(244,89,31)" fg:x="141" fg:w="3"/><text x="11.5662%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="11.3965%" y="229" width="0.1605%" height="15" fill="rgb(222,167,27)" fg:x="142" fg:w="2"/><text x="11.6465%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6372%" y="373" width="0.0803%" height="15" fill="rgb(247,41,16)" fg:x="145" fg:w="1"/><text x="11.8872%" y="383.50"></text></g><g><title>glob::Pattern::new (3 samples, 0.24%)</title><rect x="11.5570%" y="421" width="0.2408%" height="15" fill="rgb(233,168,40)" fg:x="144" fg:w="3"/><text x="11.8070%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="11.6372%" y="405" width="0.1605%" height="15" fill="rgb(205,211,8)" fg:x="145" fg:w="2"/><text x="11.8872%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="11.6372%" y="389" width="0.1605%" height="15" fill="rgb(238,105,11)" fg:x="145" fg:w="2"/><text x="11.8872%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="11.7175%" y="373" width="0.0803%" height="15" fill="rgb(223,142,52)" fg:x="146" fg:w="1"/><text x="11.9675%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="11.7175%" y="357" width="0.0803%" height="15" fill="rgb(238,51,33)" fg:x="146" fg:w="1"/><text x="11.9675%" y="367.50"></text></g><g><title>std::path::Path::components (1 samples, 0.08%)</title><rect x="11.7978%" y="421" width="0.0803%" height="15" fill="rgb(231,188,43)" fg:x="147" fg:w="1"/><text x="12.0478%" y="431.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (30 samples, 2.41%)</title><rect x="9.5506%" y="485" width="2.4077%" height="15" fill="rgb(216,92,17)" fg:x="119" fg:w="30"/><text x="9.8006%" y="495.50">&lt;p..</text></g><g><title>plugins_rune::sources::load_directory_sources (18 samples, 1.44%)</title><rect x="10.5136%" y="469" width="1.4446%" height="15" fill="rgb(228,2,40)" fg:x="131" fg:w="18"/><text x="10.7636%" y="479.50"></text></g><g><title>glob::glob (9 samples, 0.72%)</title><rect x="11.2360%" y="453" width="0.7223%" height="15" fill="rgb(226,73,15)" fg:x="140" fg:w="9"/><text x="11.4860%" y="463.50"></text></g><g><title>glob::glob_with (9 samples, 0.72%)</title><rect x="11.2360%" y="437" width="0.7223%" height="15" fill="rgb(227,66,46)" fg:x="140" fg:w="9"/><text x="11.4860%" y="447.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.08%)</title><rect x="11.8780%" y="421" width="0.0803%" height="15" fill="rgb(209,71,6)" fg:x="148" fg:w="1"/><text x="12.1280%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.8780%" y="405" width="0.0803%" height="15" fill="rgb(246,100,25)" fg:x="148" fg:w="1"/><text x="12.1280%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.8780%" y="389" width="0.0803%" height="15" fill="rgb(248,185,27)" fg:x="148" fg:w="1"/><text x="12.1280%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.8780%" y="373" width="0.0803%" height="15" fill="rgb(225,118,47)" fg:x="148" fg:w="1"/><text x="12.1280%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.8780%" y="357" width="0.0803%" height="15" fill="rgb(220,185,44)" fg:x="148" fg:w="1"/><text x="12.1280%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.8780%" y="341" width="0.0803%" height="15" fill="rgb(227,95,24)" fg:x="148" fg:w="1"/><text x="12.1280%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.8780%" y="325" width="0.0803%" height="15" fill="rgb(252,84,24)" fg:x="148" fg:w="1"/><text x="12.1280%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.8780%" y="309" width="0.0803%" height="15" fill="rgb(240,34,44)" fg:x="148" fg:w="1"/><text x="12.1280%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.8780%" y="293" width="0.0803%" height="15" fill="rgb(209,72,54)" fg:x="148" fg:w="1"/><text x="12.1280%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.8780%" y="277" width="0.0803%" height="15" fill="rgb(226,19,45)" fg:x="148" fg:w="1"/><text x="12.1280%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.8780%" y="261" width="0.0803%" height="15" fill="rgb(246,7,45)" fg:x="148" fg:w="1"/><text x="12.1280%" y="271.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="11.8780%" y="245" width="0.0803%" height="15" fill="rgb(225,45,2)" fg:x="148" fg:w="1"/><text x="12.1280%" y="255.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="11.9583%" y="469" width="0.4013%" height="15" fill="rgb(221,80,29)" fg:x="149" fg:w="5"/><text x="12.2083%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (7 samples, 0.56%)</title><rect x="11.9583%" y="485" width="0.5618%" height="15" fill="rgb(228,11,19)" fg:x="149" fg:w="7"/><text x="12.2083%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (2 samples, 0.16%)</title><rect x="12.3596%" y="469" width="0.1605%" height="15" fill="rgb(243,17,21)" fg:x="154" fg:w="2"/><text x="12.6096%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="12.3596%" y="453" width="0.1605%" height="15" fill="rgb(243,88,8)" fg:x="154" fg:w="2"/><text x="12.6096%" y="463.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (89 samples, 7.14%)</title><rect x="5.8587%" y="501" width="7.1429%" height="15" fill="rgb(214,17,9)" fg:x="73" fg:w="89"/><text x="6.1087%" y="511.50">kernel::pl..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (6 samples, 0.48%)</title><rect x="12.5201%" y="485" width="0.4815%" height="15" fill="rgb(232,169,15)" fg:x="156" fg:w="6"/><text x="12.7701%" y="495.50"></text></g><g><title>clock_gettime (6 samples, 0.48%)</title><rect x="12.5201%" y="469" width="0.4815%" height="15" fill="rgb(232,86,53)" fg:x="156" fg:w="6"/><text x="12.7701%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (2 samples, 0.16%)</title><rect x="13.0819%" y="469" width="0.1605%" height="15" fill="rgb(222,100,4)" fg:x="163" fg:w="2"/><text x="13.3319%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="13.0819%" y="453" width="0.1605%" height="15" fill="rgb(253,151,38)" fg:x="163" fg:w="2"/><text x="13.3319%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.2424%" y="469" width="0.0803%" height="15" fill="rgb(238,215,29)" fg:x="165" fg:w="1"/><text x="13.4924%" y="479.50"></text></g><g><title>engine::session::Session::initialize (96 samples, 7.70%)</title><rect x="5.6982%" y="517" width="7.7047%" height="15" fill="rgb(205,128,53)" fg:x="71" fg:w="96"/><text x="5.9482%" y="527.50">engine::ses..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (5 samples, 0.40%)</title><rect x="13.0016%" y="501" width="0.4013%" height="15" fill="rgb(248,183,14)" fg:x="162" fg:w="5"/><text x="13.2516%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="13.0016%" y="485" width="0.4013%" height="15" fill="rgb(244,172,35)" fg:x="162" fg:w="5"/><text x="13.2516%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.3226%" y="469" width="0.0803%" height="15" fill="rgb(234,93,19)" fg:x="166" fg:w="1"/><text x="13.5726%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.3226%" y="453" width="0.0803%" height="15" fill="rgb(227,109,7)" fg:x="166" fg:w="1"/><text x="13.5726%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.3226%" y="437" width="0.0803%" height="15" fill="rgb(233,136,54)" fg:x="166" fg:w="1"/><text x="13.5726%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="13.4029%" y="485" width="0.0803%" height="15" fill="rgb(233,19,40)" fg:x="167" fg:w="1"/><text x="13.6529%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="13.4029%" y="469" width="0.0803%" height="15" fill="rgb(247,41,18)" fg:x="167" fg:w="1"/><text x="13.6529%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (100 samples, 8.03%)</title><rect x="5.5377%" y="565" width="8.0257%" height="15" fill="rgb(220,34,34)" fg:x="69" fg:w="100"/><text x="5.7877%" y="575.50">&lt;engine::do..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (100 samples, 8.03%)</title><rect x="5.5377%" y="549" width="8.0257%" height="15" fill="rgb(222,135,32)" fg:x="69" fg:w="100"/><text x="5.7877%" y="559.50">engine::dom..</text></g><g><title>engine::session::Session::new (100 samples, 8.03%)</title><rect x="5.5377%" y="533" width="8.0257%" height="15" fill="rgb(214,80,19)" fg:x="69" fg:w="100"/><text x="5.7877%" y="543.50">engine::ses..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="13.4029%" y="517" width="0.1605%" height="15" fill="rgb(234,54,46)" fg:x="167" fg:w="2"/><text x="13.6529%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="13.4029%" y="501" width="0.1605%" height="15" fill="rgb(251,48,23)" fg:x="167" fg:w="2"/><text x="13.6529%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.4831%" y="485" width="0.0803%" height="15" fill="rgb(254,109,52)" fg:x="168" fg:w="1"/><text x="13.7331%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.5634%" y="501" width="0.0803%" height="15" fill="rgb(240,186,19)" fg:x="169" fg:w="1"/><text x="13.8134%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6437%" y="485" width="0.0803%" height="15" fill="rgb(246,187,17)" fg:x="170" fg:w="1"/><text x="13.8937%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="13.5634%" y="549" width="0.2408%" height="15" fill="rgb(212,21,5)" fg:x="169" fg:w="3"/><text x="13.8134%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="13.5634%" y="533" width="0.2408%" height="15" fill="rgb(225,185,18)" fg:x="169" fg:w="3"/><text x="13.8134%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="13.5634%" y="517" width="0.2408%" height="15" fill="rgb(245,114,17)" fg:x="169" fg:w="3"/><text x="13.8134%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.6437%" y="501" width="0.1605%" height="15" fill="rgb(223,164,24)" fg:x="170" fg:w="2"/><text x="13.8937%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.7239%" y="485" width="0.0803%" height="15" fill="rgb(211,228,3)" fg:x="171" fg:w="1"/><text x="13.9739%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="13.8042%" y="533" width="0.0803%" height="15" fill="rgb(223,16,38)" fg:x="172" fg:w="1"/><text x="14.0542%" y="543.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="13.8844%" y="533" width="0.0803%" height="15" fill="rgb(207,31,54)" fg:x="173" fg:w="1"/><text x="14.1344%" y="543.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="13.8844%" y="517" width="0.0803%" height="15" fill="rgb(220,39,11)" fg:x="173" fg:w="1"/><text x="14.1344%" y="527.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="13.8844%" y="501" width="0.0803%" height="15" fill="rgb(235,185,0)" fg:x="173" fg:w="1"/><text x="14.1344%" y="511.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="13.8844%" y="485" width="0.0803%" height="15" fill="rgb(249,39,18)" fg:x="173" fg:w="1"/><text x="14.1344%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="13.8844%" y="469" width="0.0803%" height="15" fill="rgb(240,110,33)" fg:x="173" fg:w="1"/><text x="14.1344%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="13.8844%" y="453" width="0.0803%" height="15" fill="rgb(210,92,42)" fg:x="173" fg:w="1"/><text x="14.1344%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="13.8844%" y="437" width="0.0803%" height="15" fill="rgb(218,215,28)" fg:x="173" fg:w="1"/><text x="14.1344%" y="447.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="13.8844%" y="421" width="0.0803%" height="15" fill="rgb(238,215,36)" fg:x="173" fg:w="1"/><text x="14.1344%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="13.9647%" y="501" width="0.0803%" height="15" fill="rgb(220,31,10)" fg:x="174" fg:w="1"/><text x="14.2147%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="13.9647%" y="485" width="0.0803%" height="15" fill="rgb(212,93,14)" fg:x="174" fg:w="1"/><text x="14.2147%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="13.9647%" y="469" width="0.0803%" height="15" fill="rgb(254,207,2)" fg:x="174" fg:w="1"/><text x="14.2147%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9647%" y="453" width="0.0803%" height="15" fill="rgb(205,57,44)" fg:x="174" fg:w="1"/><text x="14.2147%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9647%" y="437" width="0.0803%" height="15" fill="rgb(226,151,19)" fg:x="174" fg:w="1"/><text x="14.2147%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9647%" y="421" width="0.0803%" height="15" fill="rgb(230,72,30)" fg:x="174" fg:w="1"/><text x="14.2147%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9647%" y="405" width="0.0803%" height="15" fill="rgb(244,0,8)" fg:x="174" fg:w="1"/><text x="14.2147%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9647%" y="389" width="0.0803%" height="15" fill="rgb(230,192,6)" fg:x="174" fg:w="1"/><text x="14.2147%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.9647%" y="373" width="0.0803%" height="15" fill="rgb(233,207,13)" fg:x="174" fg:w="1"/><text x="14.2147%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.9647%" y="357" width="0.0803%" height="15" fill="rgb(206,227,7)" fg:x="174" fg:w="1"/><text x="14.2147%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="14.0449%" y="453" width="0.0803%" height="15" fill="rgb(213,217,25)" fg:x="175" fg:w="1"/><text x="14.2949%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.0449%" y="437" width="0.0803%" height="15" fill="rgb(249,75,4)" fg:x="175" fg:w="1"/><text x="14.2949%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.0449%" y="421" width="0.0803%" height="15" fill="rgb(225,114,18)" fg:x="175" fg:w="1"/><text x="14.2949%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.0449%" y="405" width="0.0803%" height="15" fill="rgb(211,162,40)" fg:x="175" fg:w="1"/><text x="14.2949%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.0449%" y="389" width="0.0803%" height="15" fill="rgb(206,49,29)" fg:x="175" fg:w="1"/><text x="14.2949%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="14.4462%" y="373" width="0.1605%" height="15" fill="rgb(244,8,6)" fg:x="180" fg:w="2"/><text x="14.6962%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.5265%" y="357" width="0.0803%" height="15" fill="rgb(231,194,28)" fg:x="181" fg:w="1"/><text x="14.7765%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.5265%" y="341" width="0.0803%" height="15" fill="rgb(210,69,5)" fg:x="181" fg:w="1"/><text x="14.7765%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.5265%" y="325" width="0.0803%" height="15" fill="rgb(216,186,12)" fg:x="181" fg:w="1"/><text x="14.7765%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="14.1252%" y="421" width="0.5618%" height="15" fill="rgb(238,61,15)" fg:x="176" fg:w="7"/><text x="14.3752%" y="431.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="14.2055%" y="405" width="0.4815%" height="15" fill="rgb(226,104,1)" fg:x="177" fg:w="6"/><text x="14.4555%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="14.3660%" y="389" width="0.3210%" height="15" fill="rgb(229,128,15)" fg:x="179" fg:w="4"/><text x="14.6160%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="14.6067%" y="373" width="0.0803%" height="15" fill="rgb(247,110,15)" fg:x="182" fg:w="1"/><text x="14.8567%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="14.1252%" y="437" width="0.6421%" height="15" fill="rgb(210,74,48)" fg:x="176" fg:w="8"/><text x="14.3752%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.6870%" y="421" width="0.0803%" height="15" fill="rgb(246,121,10)" fg:x="183" fg:w="1"/><text x="14.9370%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.6870%" y="405" width="0.0803%" height="15" fill="rgb(214,156,37)" fg:x="183" fg:w="1"/><text x="14.9370%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="14.6870%" y="389" width="0.0803%" height="15" fill="rgb(214,210,34)" fg:x="183" fg:w="1"/><text x="14.9370%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="14.8475%" y="421" width="0.5618%" height="15" fill="rgb(237,93,35)" fg:x="185" fg:w="7"/><text x="15.0975%" y="431.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="15.0080%" y="405" width="0.4013%" height="15" fill="rgb(206,36,8)" fg:x="187" fg:w="5"/><text x="15.2580%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="15.0883%" y="389" width="0.3210%" height="15" fill="rgb(208,151,12)" fg:x="188" fg:w="4"/><text x="15.3383%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="15.1685%" y="373" width="0.2408%" height="15" fill="rgb(225,133,52)" fg:x="189" fg:w="3"/><text x="15.4185%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.4896%" y="405" width="0.0803%" height="15" fill="rgb(231,71,53)" fg:x="193" fg:w="1"/><text x="15.7396%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="15.5698%" y="373" width="0.2408%" height="15" fill="rgb(243,76,21)" fg:x="194" fg:w="3"/><text x="15.8198%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="15.5698%" y="357" width="0.2408%" height="15" fill="rgb(252,144,3)" fg:x="194" fg:w="3"/><text x="15.8198%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.6501%" y="341" width="0.1605%" height="15" fill="rgb(231,199,10)" fg:x="195" fg:w="2"/><text x="15.9001%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.7303%" y="325" width="0.0803%" height="15" fill="rgb(215,18,11)" fg:x="196" fg:w="1"/><text x="15.9803%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="15.5698%" y="405" width="0.3210%" height="15" fill="rgb(241,65,24)" fg:x="194" fg:w="4"/><text x="15.8198%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="15.5698%" y="389" width="0.3210%" height="15" fill="rgb(251,192,38)" fg:x="194" fg:w="4"/><text x="15.8198%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.8106%" y="373" width="0.0803%" height="15" fill="rgb(205,9,35)" fg:x="197" fg:w="1"/><text x="16.0606%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.0514%" y="357" width="0.1605%" height="15" fill="rgb(229,225,49)" fg:x="200" fg:w="2"/><text x="16.3014%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.1316%" y="341" width="0.0803%" height="15" fill="rgb(207,125,39)" fg:x="201" fg:w="1"/><text x="16.3816%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.1316%" y="325" width="0.0803%" height="15" fill="rgb(222,78,19)" fg:x="201" fg:w="1"/><text x="16.3816%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.1316%" y="309" width="0.0803%" height="15" fill="rgb(248,207,20)" fg:x="201" fg:w="1"/><text x="16.3816%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="15.8909%" y="405" width="0.4013%" height="15" fill="rgb(205,103,49)" fg:x="198" fg:w="5"/><text x="16.1409%" y="415.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="15.9711%" y="389" width="0.3210%" height="15" fill="rgb(216,42,28)" fg:x="199" fg:w="4"/><text x="16.2211%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="16.0514%" y="373" width="0.2408%" height="15" fill="rgb(213,205,53)" fg:x="200" fg:w="3"/><text x="16.3014%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="16.2119%" y="357" width="0.0803%" height="15" fill="rgb(239,140,53)" fg:x="202" fg:w="1"/><text x="16.4619%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.3724%" y="389" width="0.1605%" height="15" fill="rgb(248,95,9)" fg:x="204" fg:w="2"/><text x="16.6224%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.3724%" y="373" width="0.1605%" height="15" fill="rgb(254,58,47)" fg:x="204" fg:w="2"/><text x="16.6224%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.6132%" y="325" width="0.0803%" height="15" fill="rgb(234,227,14)" fg:x="207" fg:w="1"/><text x="16.8632%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="16.5329%" y="389" width="0.2408%" height="15" fill="rgb(205,192,45)" fg:x="206" fg:w="3"/><text x="16.7829%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.6132%" y="373" width="0.1605%" height="15" fill="rgb(253,187,31)" fg:x="207" fg:w="2"/><text x="16.8632%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.6132%" y="357" width="0.1605%" height="15" fill="rgb(222,6,32)" fg:x="207" fg:w="2"/><text x="16.8632%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.6132%" y="341" width="0.1605%" height="15" fill="rgb(249,190,19)" fg:x="207" fg:w="2"/><text x="16.8632%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="16.6934%" y="325" width="0.0803%" height="15" fill="rgb(251,28,20)" fg:x="208" fg:w="1"/><text x="16.9434%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="16.2921%" y="405" width="0.7223%" height="15" fill="rgb(210,223,40)" fg:x="203" fg:w="9"/><text x="16.5421%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.7737%" y="389" width="0.2408%" height="15" fill="rgb(216,137,22)" fg:x="209" fg:w="3"/><text x="17.0237%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.9342%" y="373" width="0.0803%" height="15" fill="rgb(247,39,34)" fg:x="211" fg:w="1"/><text x="17.1842%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.85%)</title><rect x="15.4093%" y="421" width="1.8459%" height="15" fill="rgb(239,43,50)" fg:x="192" fg:w="23"/><text x="15.6593%" y="431.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="17.0144%" y="405" width="0.2408%" height="15" fill="rgb(241,212,9)" fg:x="212" fg:w="3"/><text x="17.2644%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.1750%" y="389" width="0.0803%" height="15" fill="rgb(205,8,2)" fg:x="214" fg:w="1"/><text x="17.4250%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.1750%" y="373" width="0.0803%" height="15" fill="rgb(217,173,54)" fg:x="214" fg:w="1"/><text x="17.4250%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (40 samples, 3.21%)</title><rect x="14.1252%" y="453" width="3.2103%" height="15" fill="rgb(208,149,52)" fg:x="176" fg:w="40"/><text x="14.3752%" y="463.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.57%)</title><rect x="14.7673%" y="437" width="2.5682%" height="15" fill="rgb(239,99,40)" fg:x="184" fg:w="32"/><text x="15.0173%" y="447.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.2552%" y="421" width="0.0803%" height="15" fill="rgb(233,214,26)" fg:x="215" fg:w="1"/><text x="17.5052%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.2552%" y="405" width="0.0803%" height="15" fill="rgb(231,225,37)" fg:x="215" fg:w="1"/><text x="17.5052%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.2552%" y="389" width="0.0803%" height="15" fill="rgb(252,55,35)" fg:x="215" fg:w="1"/><text x="17.5052%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.4157%" y="405" width="0.1605%" height="15" fill="rgb(239,43,18)" fg:x="217" fg:w="2"/><text x="17.6657%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.5762%" y="405" width="0.0803%" height="15" fill="rgb(251,125,49)" fg:x="219" fg:w="1"/><text x="17.8262%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8170%" y="373" width="0.0803%" height="15" fill="rgb(212,83,54)" fg:x="222" fg:w="1"/><text x="18.0670%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.8973%" y="373" width="0.0803%" height="15" fill="rgb(250,75,6)" fg:x="223" fg:w="1"/><text x="18.1473%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="17.3355%" y="453" width="0.7223%" height="15" fill="rgb(252,36,40)" fg:x="216" fg:w="9"/><text x="17.5855%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="17.3355%" y="437" width="0.7223%" height="15" fill="rgb(230,91,51)" fg:x="216" fg:w="9"/><text x="17.5855%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="17.3355%" y="421" width="0.7223%" height="15" fill="rgb(212,92,28)" fg:x="216" fg:w="9"/><text x="17.5855%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="17.6565%" y="405" width="0.4013%" height="15" fill="rgb(227,13,22)" fg:x="220" fg:w="5"/><text x="17.9065%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="17.7368%" y="389" width="0.3210%" height="15" fill="rgb(239,204,32)" fg:x="221" fg:w="4"/><text x="17.9868%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9775%" y="373" width="0.0803%" height="15" fill="rgb(228,49,41)" fg:x="224" fg:w="1"/><text x="18.2275%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.9775%" y="357" width="0.0803%" height="15" fill="rgb(206,95,6)" fg:x="224" fg:w="1"/><text x="18.2275%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.2183%" y="421" width="0.0803%" height="15" fill="rgb(251,20,14)" fg:x="227" fg:w="1"/><text x="18.4683%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.2183%" y="405" width="0.0803%" height="15" fill="rgb(214,99,28)" fg:x="227" fg:w="1"/><text x="18.4683%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2986%" y="421" width="0.0803%" height="15" fill="rgb(239,122,54)" fg:x="228" fg:w="1"/><text x="18.5486%" y="431.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="18.3788%" y="421" width="0.1605%" height="15" fill="rgb(218,217,46)" fg:x="229" fg:w="2"/><text x="18.6288%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="18.3788%" y="405" width="0.1605%" height="15" fill="rgb(249,106,28)" fg:x="229" fg:w="2"/><text x="18.6288%" y="415.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.4591%" y="389" width="0.0803%" height="15" fill="rgb(250,158,18)" fg:x="230" fg:w="1"/><text x="18.7091%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="18.4591%" y="373" width="0.0803%" height="15" fill="rgb(226,137,29)" fg:x="230" fg:w="1"/><text x="18.7091%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="18.4591%" y="357" width="0.0803%" height="15" fill="rgb(210,188,1)" fg:x="230" fg:w="1"/><text x="18.7091%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (6 samples, 0.48%)</title><rect x="18.1380%" y="437" width="0.4815%" height="15" fill="rgb(227,84,42)" fg:x="226" fg:w="6"/><text x="18.3880%" y="447.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="18.5393%" y="421" width="0.0803%" height="15" fill="rgb(222,147,48)" fg:x="231" fg:w="1"/><text x="18.7893%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="18.5393%" y="405" width="0.0803%" height="15" fill="rgb(241,150,43)" fg:x="231" fg:w="1"/><text x="18.7893%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.5393%" y="389" width="0.0803%" height="15" fill="rgb(206,139,52)" fg:x="231" fg:w="1"/><text x="18.7893%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5393%" y="373" width="0.0803%" height="15" fill="rgb(230,63,14)" fg:x="231" fg:w="1"/><text x="18.7893%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="18.6196%" y="405" width="0.4815%" height="15" fill="rgb(247,8,20)" fg:x="232" fg:w="6"/><text x="18.8696%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.0209%" y="389" width="0.0803%" height="15" fill="rgb(213,115,4)" fg:x="237" fg:w="1"/><text x="19.2709%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="19.1011%" y="405" width="0.0803%" height="15" fill="rgb(241,79,49)" fg:x="238" fg:w="1"/><text x="19.3511%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.1011%" y="389" width="0.0803%" height="15" fill="rgb(222,42,35)" fg:x="238" fg:w="1"/><text x="19.3511%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.1011%" y="373" width="0.0803%" height="15" fill="rgb(247,59,23)" fg:x="238" fg:w="1"/><text x="19.3511%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="19.1814%" y="405" width="0.1605%" height="15" fill="rgb(247,93,18)" fg:x="239" fg:w="2"/><text x="19.4314%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.2616%" y="389" width="0.0803%" height="15" fill="rgb(249,107,47)" fg:x="240" fg:w="1"/><text x="19.5116%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2616%" y="373" width="0.0803%" height="15" fill="rgb(219,27,1)" fg:x="240" fg:w="1"/><text x="19.5116%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.6629%" y="357" width="0.1605%" height="15" fill="rgb(217,82,32)" fg:x="245" fg:w="2"/><text x="19.9129%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7432%" y="341" width="0.0803%" height="15" fill="rgb(250,129,47)" fg:x="246" fg:w="1"/><text x="19.9932%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9839%" y="309" width="0.0803%" height="15" fill="rgb(253,88,35)" fg:x="249" fg:w="1"/><text x="20.2339%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="19.9037%" y="325" width="0.2408%" height="15" fill="rgb(245,221,14)" fg:x="248" fg:w="3"/><text x="20.1537%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.0642%" y="309" width="0.0803%" height="15" fill="rgb(217,119,54)" fg:x="250" fg:w="1"/><text x="20.3142%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.0642%" y="293" width="0.0803%" height="15" fill="rgb(247,128,31)" fg:x="250" fg:w="1"/><text x="20.3142%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.0642%" y="277" width="0.0803%" height="15" fill="rgb(211,99,22)" fg:x="250" fg:w="1"/><text x="20.3142%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="19.8234%" y="357" width="0.4013%" height="15" fill="rgb(212,20,17)" fg:x="247" fg:w="5"/><text x="20.0734%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="19.8234%" y="341" width="0.4013%" height="15" fill="rgb(209,159,29)" fg:x="247" fg:w="5"/><text x="20.0734%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1445%" y="325" width="0.0803%" height="15" fill="rgb(222,177,53)" fg:x="251" fg:w="1"/><text x="20.3945%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.3050%" y="325" width="0.0803%" height="15" fill="rgb(234,46,43)" fg:x="253" fg:w="1"/><text x="20.5550%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="20.3050%" y="309" width="0.0803%" height="15" fill="rgb(208,108,14)" fg:x="253" fg:w="1"/><text x="20.5550%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.5457%" y="293" width="0.1605%" height="15" fill="rgb(226,78,53)" fg:x="256" fg:w="2"/><text x="20.7957%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6260%" y="277" width="0.0803%" height="15" fill="rgb(230,20,41)" fg:x="257" fg:w="1"/><text x="20.8760%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="20.5457%" y="309" width="0.2408%" height="15" fill="rgb(213,195,35)" fg:x="256" fg:w="3"/><text x="20.7957%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.7063%" y="293" width="0.0803%" height="15" fill="rgb(242,62,36)" fg:x="258" fg:w="1"/><text x="20.9563%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.36%)</title><rect x="19.5024%" y="389" width="1.3644%" height="15" fill="rgb(222,210,37)" fg:x="243" fg:w="17"/><text x="19.7524%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="19.6629%" y="373" width="1.2039%" height="15" fill="rgb(232,107,19)" fg:x="245" fg:w="15"/><text x="19.9129%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="20.2247%" y="357" width="0.6421%" height="15" fill="rgb(235,85,17)" fg:x="252" fg:w="8"/><text x="20.4747%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="20.2247%" y="341" width="0.6421%" height="15" fill="rgb(219,195,31)" fg:x="252" fg:w="8"/><text x="20.4747%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="20.3852%" y="325" width="0.4815%" height="15" fill="rgb(231,183,30)" fg:x="254" fg:w="6"/><text x="20.6352%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7865%" y="309" width="0.0803%" height="15" fill="rgb(212,0,11)" fg:x="259" fg:w="1"/><text x="21.0365%" y="319.50"></text></g><g><title>engine::session::Session::flush (89 samples, 7.14%)</title><rect x="13.8042%" y="549" width="7.1429%" height="15" fill="rgb(249,53,54)" fg:x="172" fg:w="89"/><text x="14.0542%" y="559.50">engine::se..</text></g><g><title>engine::session::state::State::close (87 samples, 6.98%)</title><rect x="13.9647%" y="533" width="6.9823%" height="15" fill="rgb(211,118,13)" fg:x="174" fg:w="87"/><text x="14.2147%" y="543.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (87 samples, 6.98%)</title><rect x="13.9647%" y="517" width="6.9823%" height="15" fill="rgb(237,42,9)" fg:x="174" fg:w="87"/><text x="14.2147%" y="527.50">engine::s..</text></g><g><title>core::iter::adapters::try_process (86 samples, 6.90%)</title><rect x="14.0449%" y="501" width="6.9021%" height="15" fill="rgb(227,68,32)" fg:x="175" fg:w="86"/><text x="14.2949%" y="511.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (86 samples, 6.90%)</title><rect x="14.0449%" y="485" width="6.9021%" height="15" fill="rgb(238,10,7)" fg:x="175" fg:w="86"/><text x="14.2949%" y="495.50">&lt;alloc::v..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (86 samples, 6.90%)</title><rect x="14.0449%" y="469" width="6.9021%" height="15" fill="rgb(224,42,12)" fg:x="175" fg:w="86"/><text x="14.2949%" y="479.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.89%)</title><rect x="18.0578%" y="453" width="2.8892%" height="15" fill="rgb(252,190,5)" fg:x="225" fg:w="36"/><text x="18.3078%" y="463.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (29 samples, 2.33%)</title><rect x="18.6196%" y="437" width="2.3274%" height="15" fill="rgb(220,214,39)" fg:x="232" fg:w="29"/><text x="18.8696%" y="447.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.33%)</title><rect x="18.6196%" y="421" width="2.3274%" height="15" fill="rgb(247,98,4)" fg:x="232" fg:w="29"/><text x="18.8696%" y="431.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.61%)</title><rect x="19.3419%" y="405" width="1.6051%" height="15" fill="rgb(211,60,12)" fg:x="241" fg:w="20"/><text x="19.5919%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.8668%" y="389" width="0.0803%" height="15" fill="rgb(224,42,10)" fg:x="260" fg:w="1"/><text x="21.1168%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="20.9470%" y="517" width="0.0803%" height="15" fill="rgb(217,167,4)" fg:x="261" fg:w="1"/><text x="21.1970%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="21.0273%" y="517" width="0.0803%" height="15" fill="rgb(253,18,17)" fg:x="262" fg:w="1"/><text x="21.2773%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.0273%" y="501" width="0.0803%" height="15" fill="rgb(249,186,44)" fg:x="262" fg:w="1"/><text x="21.2773%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="20.9470%" y="549" width="0.2408%" height="15" fill="rgb(254,124,54)" fg:x="261" fg:w="3"/><text x="21.1970%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.24%)</title><rect x="20.9470%" y="533" width="0.2408%" height="15" fill="rgb(220,124,39)" fg:x="261" fg:w="3"/><text x="21.1970%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="21.1075%" y="517" width="0.0803%" height="15" fill="rgb(225,96,46)" fg:x="263" fg:w="1"/><text x="21.3575%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.1075%" y="501" width="0.0803%" height="15" fill="rgb(221,106,12)" fg:x="263" fg:w="1"/><text x="21.3575%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.2681%" y="501" width="0.0803%" height="15" fill="rgb(227,133,23)" fg:x="265" fg:w="1"/><text x="21.5181%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.5088%" y="405" width="0.1605%" height="15" fill="rgb(216,44,52)" fg:x="268" fg:w="2"/><text x="21.7588%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="21.2681%" y="533" width="0.4815%" height="15" fill="rgb(239,149,7)" fg:x="265" fg:w="6"/><text x="21.5181%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (6 samples, 0.48%)</title><rect x="21.2681%" y="517" width="0.4815%" height="15" fill="rgb(211,157,31)" fg:x="265" fg:w="6"/><text x="21.5181%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="21.3483%" y="501" width="0.4013%" height="15" fill="rgb(206,215,22)" fg:x="266" fg:w="5"/><text x="21.5983%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="21.3483%" y="485" width="0.4013%" height="15" fill="rgb(208,113,15)" fg:x="266" fg:w="5"/><text x="21.5983%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="21.3483%" y="469" width="0.4013%" height="15" fill="rgb(207,189,15)" fg:x="266" fg:w="5"/><text x="21.5983%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="21.3483%" y="453" width="0.4013%" height="15" fill="rgb(231,115,4)" fg:x="266" fg:w="5"/><text x="21.5983%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="21.4286%" y="437" width="0.3210%" height="15" fill="rgb(253,117,2)" fg:x="267" fg:w="4"/><text x="21.6786%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="21.4286%" y="421" width="0.3210%" height="15" fill="rgb(248,48,24)" fg:x="267" fg:w="4"/><text x="21.6786%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.6693%" y="405" width="0.0803%" height="15" fill="rgb(241,28,46)" fg:x="270" fg:w="1"/><text x="21.9193%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.7496%" y="533" width="0.0803%" height="15" fill="rgb(216,165,52)" fg:x="271" fg:w="1"/><text x="21.9996%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.7496%" y="517" width="0.0803%" height="15" fill="rgb(220,222,34)" fg:x="271" fg:w="1"/><text x="21.9996%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.7496%" y="501" width="0.0803%" height="15" fill="rgb(247,222,49)" fg:x="271" fg:w="1"/><text x="21.9996%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.7496%" y="485" width="0.0803%" height="15" fill="rgb(240,10,31)" fg:x="271" fg:w="1"/><text x="21.9996%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.7496%" y="469" width="0.0803%" height="15" fill="rgb(221,199,35)" fg:x="271" fg:w="1"/><text x="21.9996%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.7496%" y="453" width="0.0803%" height="15" fill="rgb(230,223,11)" fg:x="271" fg:w="1"/><text x="21.9996%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.7496%" y="437" width="0.0803%" height="15" fill="rgb(218,82,45)" fg:x="271" fg:w="1"/><text x="21.9996%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.7496%" y="421" width="0.0803%" height="15" fill="rgb(233,213,33)" fg:x="271" fg:w="1"/><text x="21.9996%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.7496%" y="405" width="0.0803%" height="15" fill="rgb(210,143,52)" fg:x="271" fg:w="1"/><text x="21.9996%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.7496%" y="389" width="0.0803%" height="15" fill="rgb(206,95,4)" fg:x="271" fg:w="1"/><text x="21.9996%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.7496%" y="373" width="0.0803%" height="15" fill="rgb(246,164,46)" fg:x="271" fg:w="1"/><text x="21.9996%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7496%" y="357" width="0.0803%" height="15" fill="rgb(213,210,47)" fg:x="271" fg:w="1"/><text x="21.9996%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="21.8299%" y="517" width="0.0803%" height="15" fill="rgb(210,12,38)" fg:x="272" fg:w="1"/><text x="22.0799%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.8299%" y="501" width="0.0803%" height="15" fill="rgb(252,192,54)" fg:x="272" fg:w="1"/><text x="22.0799%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8299%" y="485" width="0.0803%" height="15" fill="rgb(242,92,6)" fg:x="272" fg:w="1"/><text x="22.0799%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.8299%" y="469" width="0.0803%" height="15" fill="rgb(253,154,15)" fg:x="272" fg:w="1"/><text x="22.0799%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8299%" y="453" width="0.0803%" height="15" fill="rgb(209,20,43)" fg:x="272" fg:w="1"/><text x="22.0799%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.8299%" y="437" width="0.0803%" height="15" fill="rgb(232,28,49)" fg:x="272" fg:w="1"/><text x="22.0799%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.8299%" y="421" width="0.0803%" height="15" fill="rgb(248,131,53)" fg:x="272" fg:w="1"/><text x="22.0799%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.9101%" y="485" width="0.2408%" height="15" fill="rgb(214,16,30)" fg:x="273" fg:w="3"/><text x="22.1601%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.9101%" y="469" width="0.2408%" height="15" fill="rgb(245,16,0)" fg:x="273" fg:w="3"/><text x="22.1601%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="21.9101%" y="517" width="0.3210%" height="15" fill="rgb(245,17,35)" fg:x="273" fg:w="4"/><text x="22.1601%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="21.9101%" y="501" width="0.3210%" height="15" fill="rgb(249,27,53)" fg:x="273" fg:w="4"/><text x="22.1601%" y="511.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.1509%" y="485" width="0.0803%" height="15" fill="rgb(214,73,24)" fg:x="276" fg:w="1"/><text x="22.4009%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.1509%" y="469" width="0.0803%" height="15" fill="rgb(223,84,37)" fg:x="276" fg:w="1"/><text x="22.4009%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.1509%" y="453" width="0.0803%" height="15" fill="rgb(210,109,28)" fg:x="276" fg:w="1"/><text x="22.4009%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="22.2311%" y="453" width="0.0803%" height="15" fill="rgb(208,186,6)" fg:x="277" fg:w="1"/><text x="22.4811%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.2311%" y="437" width="0.0803%" height="15" fill="rgb(235,201,30)" fg:x="277" fg:w="1"/><text x="22.4811%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="22.2311%" y="469" width="0.3210%" height="15" fill="rgb(216,198,48)" fg:x="277" fg:w="4"/><text x="22.4811%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="22.3114%" y="453" width="0.2408%" height="15" fill="rgb(254,186,25)" fg:x="278" fg:w="3"/><text x="22.5614%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="22.3114%" y="437" width="0.2408%" height="15" fill="rgb(227,87,5)" fg:x="278" fg:w="3"/><text x="22.5614%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.4719%" y="421" width="0.0803%" height="15" fill="rgb(236,205,25)" fg:x="280" fg:w="1"/><text x="22.7219%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4719%" y="405" width="0.0803%" height="15" fill="rgb(229,99,32)" fg:x="280" fg:w="1"/><text x="22.7219%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="22.4719%" y="389" width="0.0803%" height="15" fill="rgb(231,177,31)" fg:x="280" fg:w="1"/><text x="22.7219%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="22.2311%" y="501" width="0.4013%" height="15" fill="rgb(246,15,2)" fg:x="277" fg:w="5"/><text x="22.4811%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (5 samples, 0.40%)</title><rect x="22.2311%" y="485" width="0.4013%" height="15" fill="rgb(207,39,15)" fg:x="277" fg:w="5"/><text x="22.4811%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.5522%" y="469" width="0.0803%" height="15" fill="rgb(207,44,9)" fg:x="281" fg:w="1"/><text x="22.8022%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5522%" y="453" width="0.0803%" height="15" fill="rgb(225,224,33)" fg:x="281" fg:w="1"/><text x="22.8022%" y="463.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="22.6324%" y="501" width="0.1605%" height="15" fill="rgb(252,151,3)" fg:x="282" fg:w="2"/><text x="22.8824%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7127%" y="485" width="0.0803%" height="15" fill="rgb(211,140,13)" fg:x="283" fg:w="1"/><text x="22.9627%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="22.7127%" y="469" width="0.0803%" height="15" fill="rgb(239,225,17)" fg:x="283" fg:w="1"/><text x="22.9627%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.7127%" y="453" width="0.0803%" height="15" fill="rgb(223,170,52)" fg:x="283" fg:w="1"/><text x="22.9627%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.7127%" y="437" width="0.0803%" height="15" fill="rgb(212,64,21)" fg:x="283" fg:w="1"/><text x="22.9627%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7929%" y="469" width="0.0803%" height="15" fill="rgb(236,126,48)" fg:x="284" fg:w="1"/><text x="23.0429%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.88%)</title><rect x="22.2311%" y="517" width="0.8828%" height="15" fill="rgb(209,135,11)" fg:x="277" fg:w="11"/><text x="22.4811%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="22.7929%" y="501" width="0.3210%" height="15" fill="rgb(228,126,40)" fg:x="284" fg:w="4"/><text x="23.0429%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="22.7929%" y="485" width="0.3210%" height="15" fill="rgb(205,196,36)" fg:x="284" fg:w="4"/><text x="23.0429%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="22.8732%" y="469" width="0.2408%" height="15" fill="rgb(243,160,33)" fg:x="285" fg:w="3"/><text x="23.1232%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="22.8732%" y="453" width="0.2408%" height="15" fill="rgb(210,84,20)" fg:x="285" fg:w="3"/><text x="23.1232%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="22.9535%" y="437" width="0.1605%" height="15" fill="rgb(228,213,30)" fg:x="286" fg:w="2"/><text x="23.2035%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="22.9535%" y="421" width="0.1605%" height="15" fill="rgb(252,33,45)" fg:x="286" fg:w="2"/><text x="23.2035%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="22.9535%" y="405" width="0.1605%" height="15" fill="rgb(254,227,20)" fg:x="286" fg:w="2"/><text x="23.2035%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="22.9535%" y="389" width="0.1605%" height="15" fill="rgb(228,192,2)" fg:x="286" fg:w="2"/><text x="23.2035%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="23.1140%" y="501" width="0.0803%" height="15" fill="rgb(233,32,8)" fg:x="288" fg:w="1"/><text x="23.3640%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="23.1140%" y="485" width="0.0803%" height="15" fill="rgb(220,146,47)" fg:x="288" fg:w="1"/><text x="23.3640%" y="495.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (2 samples, 0.16%)</title><rect x="23.1140%" y="517" width="0.1605%" height="15" fill="rgb(246,194,1)" fg:x="288" fg:w="2"/><text x="23.3640%" y="527.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="23.1942%" y="501" width="0.0803%" height="15" fill="rgb(218,203,9)" fg:x="289" fg:w="1"/><text x="23.4442%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (27 samples, 2.17%)</title><rect x="21.1878%" y="549" width="2.1669%" height="15" fill="rgb(237,97,14)" fg:x="264" fg:w="27"/><text x="21.4378%" y="559.50">p..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.52%)</title><rect x="21.8299%" y="533" width="1.5249%" height="15" fill="rgb(239,76,15)" fg:x="272" fg:w="19"/><text x="22.0799%" y="543.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="23.2745%" y="517" width="0.0803%" height="15" fill="rgb(222,53,45)" fg:x="290" fg:w="1"/><text x="23.5245%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.2745%" y="501" width="0.0803%" height="15" fill="rgb(237,88,5)" fg:x="290" fg:w="1"/><text x="23.5245%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.2745%" y="485" width="0.0803%" height="15" fill="rgb(218,223,35)" fg:x="290" fg:w="1"/><text x="23.5245%" y="495.50"></text></g><g><title>plugins_core::tools::new_entity_from_template_ptr (1 samples, 0.08%)</title><rect x="23.3547%" y="533" width="0.0803%" height="15" fill="rgb(243,229,38)" fg:x="291" fg:w="1"/><text x="23.6047%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="23.5955%" y="469" width="0.0803%" height="15" fill="rgb(240,75,41)" fg:x="294" fg:w="1"/><text x="23.8455%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (5 samples, 0.40%)</title><rect x="23.3547%" y="549" width="0.4013%" height="15" fill="rgb(209,110,37)" fg:x="291" fg:w="5"/><text x="23.6047%" y="559.50"></text></g><g><title>plugins_core::tools::set_quantity (4 samples, 0.32%)</title><rect x="23.4350%" y="533" width="0.3210%" height="15" fill="rgb(221,130,46)" fg:x="292" fg:w="4"/><text x="23.6850%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="23.4350%" y="517" width="0.3210%" height="15" fill="rgb(237,160,20)" fg:x="292" fg:w="4"/><text x="23.6850%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (3 samples, 0.24%)</title><rect x="23.5152%" y="501" width="0.2408%" height="15" fill="rgb(234,126,24)" fg:x="293" fg:w="3"/><text x="23.7652%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="23.5152%" y="485" width="0.2408%" height="15" fill="rgb(207,177,9)" fg:x="293" fg:w="3"/><text x="23.7652%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="23.6758%" y="469" width="0.0803%" height="15" fill="rgb(231,191,33)" fg:x="295" fg:w="1"/><text x="23.9258%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.6758%" y="453" width="0.0803%" height="15" fill="rgb(207,42,1)" fg:x="295" fg:w="1"/><text x="23.9258%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7560%" y="453" width="0.0803%" height="15" fill="rgb(218,34,50)" fg:x="296" fg:w="1"/><text x="24.0060%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7560%" y="437" width="0.0803%" height="15" fill="rgb(254,126,39)" fg:x="296" fg:w="1"/><text x="24.0060%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7560%" y="421" width="0.0803%" height="15" fill="rgb(251,17,26)" fg:x="296" fg:w="1"/><text x="24.0060%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7560%" y="405" width="0.0803%" height="15" fill="rgb(252,215,34)" fg:x="296" fg:w="1"/><text x="24.0060%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7560%" y="389" width="0.0803%" height="15" fill="rgb(217,120,44)" fg:x="296" fg:w="1"/><text x="24.0060%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.7560%" y="373" width="0.0803%" height="15" fill="rgb(211,31,11)" fg:x="296" fg:w="1"/><text x="24.0060%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.7560%" y="357" width="0.0803%" height="15" fill="rgb(222,69,51)" fg:x="296" fg:w="1"/><text x="24.0060%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.7560%" y="341" width="0.0803%" height="15" fill="rgb(215,229,42)" fg:x="296" fg:w="1"/><text x="24.0060%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7560%" y="325" width="0.0803%" height="15" fill="rgb(212,102,15)" fg:x="296" fg:w="1"/><text x="24.0060%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7560%" y="309" width="0.0803%" height="15" fill="rgb(205,179,41)" fg:x="296" fg:w="1"/><text x="24.0060%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.7560%" y="293" width="0.0803%" height="15" fill="rgb(219,148,46)" fg:x="296" fg:w="1"/><text x="24.0060%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.7560%" y="277" width="0.0803%" height="15" fill="rgb(243,40,19)" fg:x="296" fg:w="1"/><text x="24.0060%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.7560%" y="261" width="0.0803%" height="15" fill="rgb(208,206,34)" fg:x="296" fg:w="1"/><text x="24.0060%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.7560%" y="245" width="0.0803%" height="15" fill="rgb(244,184,38)" fg:x="296" fg:w="1"/><text x="24.0060%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7560%" y="229" width="0.0803%" height="15" fill="rgb(244,151,47)" fg:x="296" fg:w="1"/><text x="24.0060%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="23.7560%" y="469" width="0.2408%" height="15" fill="rgb(236,134,42)" fg:x="296" fg:w="3"/><text x="24.0060%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.8363%" y="453" width="0.1605%" height="15" fill="rgb(233,93,22)" fg:x="297" fg:w="2"/><text x="24.0863%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.8363%" y="437" width="0.1605%" height="15" fill="rgb(211,202,10)" fg:x="297" fg:w="2"/><text x="24.0863%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.9165%" y="421" width="0.0803%" height="15" fill="rgb(240,63,8)" fg:x="298" fg:w="1"/><text x="24.1665%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9165%" y="405" width="0.0803%" height="15" fill="rgb(214,9,4)" fg:x="298" fg:w="1"/><text x="24.1665%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.9165%" y="389" width="0.0803%" height="15" fill="rgb(243,66,45)" fg:x="298" fg:w="1"/><text x="24.1665%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9165%" y="373" width="0.0803%" height="15" fill="rgb(220,50,42)" fg:x="298" fg:w="1"/><text x="24.1665%" y="383.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="23.7560%" y="485" width="0.3210%" height="15" fill="rgb(220,134,27)" fg:x="296" fg:w="4"/><text x="24.0060%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9968%" y="469" width="0.0803%" height="15" fill="rgb(246,151,50)" fg:x="299" fg:w="1"/><text x="24.2468%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="24.0770%" y="485" width="0.0803%" height="15" fill="rgb(238,216,27)" fg:x="300" fg:w="1"/><text x="24.3270%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="24.0770%" y="469" width="0.0803%" height="15" fill="rgb(250,92,11)" fg:x="300" fg:w="1"/><text x="24.3270%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="23.7560%" y="517" width="0.4815%" height="15" fill="rgb(248,183,6)" fg:x="296" fg:w="6"/><text x="24.0060%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="23.7560%" y="501" width="0.4815%" height="15" fill="rgb(211,204,50)" fg:x="296" fg:w="6"/><text x="24.0060%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1573%" y="485" width="0.0803%" height="15" fill="rgb(252,55,47)" fg:x="301" fg:w="1"/><text x="24.4073%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1573%" y="469" width="0.0803%" height="15" fill="rgb(240,198,32)" fg:x="301" fg:w="1"/><text x="24.4073%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.1573%" y="453" width="0.0803%" height="15" fill="rgb(224,203,19)" fg:x="301" fg:w="1"/><text x="24.4073%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.1573%" y="437" width="0.0803%" height="15" fill="rgb(205,27,16)" fg:x="301" fg:w="1"/><text x="24.4073%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.1573%" y="421" width="0.0803%" height="15" fill="rgb(224,226,17)" fg:x="301" fg:w="1"/><text x="24.4073%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.1573%" y="405" width="0.0803%" height="15" fill="rgb(205,216,54)" fg:x="301" fg:w="1"/><text x="24.4073%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.1573%" y="389" width="0.0803%" height="15" fill="rgb(248,168,46)" fg:x="301" fg:w="1"/><text x="24.4073%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.1573%" y="373" width="0.0803%" height="15" fill="rgb(226,111,45)" fg:x="301" fg:w="1"/><text x="24.4073%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.1573%" y="357" width="0.0803%" height="15" fill="rgb(231,15,9)" fg:x="301" fg:w="1"/><text x="24.4073%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.1573%" y="341" width="0.0803%" height="15" fill="rgb(243,168,3)" fg:x="301" fg:w="1"/><text x="24.4073%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.1573%" y="325" width="0.0803%" height="15" fill="rgb(221,220,54)" fg:x="301" fg:w="1"/><text x="24.4073%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1573%" y="309" width="0.0803%" height="15" fill="rgb(232,174,38)" fg:x="301" fg:w="1"/><text x="24.4073%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.2376%" y="469" width="0.0803%" height="15" fill="rgb(205,14,38)" fg:x="302" fg:w="1"/><text x="24.4876%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="24.2376%" y="453" width="0.0803%" height="15" fill="rgb(234,89,19)" fg:x="302" fg:w="1"/><text x="24.4876%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="24.3178%" y="453" width="0.0803%" height="15" fill="rgb(216,68,51)" fg:x="303" fg:w="1"/><text x="24.5678%" y="463.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (5 samples, 0.40%)</title><rect x="24.2376%" y="517" width="0.4013%" height="15" fill="rgb(213,49,2)" fg:x="302" fg:w="5"/><text x="24.4876%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (5 samples, 0.40%)</title><rect x="24.2376%" y="501" width="0.4013%" height="15" fill="rgb(242,146,30)" fg:x="302" fg:w="5"/><text x="24.4876%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="24.2376%" y="485" width="0.4013%" height="15" fill="rgb(224,188,11)" fg:x="302" fg:w="5"/><text x="24.4876%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="24.3178%" y="469" width="0.3210%" height="15" fill="rgb(213,159,11)" fg:x="303" fg:w="4"/><text x="24.5678%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="24.3981%" y="453" width="0.2408%" height="15" fill="rgb(229,13,31)" fg:x="304" fg:w="3"/><text x="24.6481%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="24.3981%" y="437" width="0.2408%" height="15" fill="rgb(209,103,11)" fg:x="304" fg:w="3"/><text x="24.6481%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.4783%" y="421" width="0.1605%" height="15" fill="rgb(206,3,4)" fg:x="305" fg:w="2"/><text x="24.7283%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6388%" y="485" width="0.0803%" height="15" fill="rgb(252,10,49)" fg:x="307" fg:w="1"/><text x="24.8888%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6388%" y="469" width="0.0803%" height="15" fill="rgb(217,160,32)" fg:x="307" fg:w="1"/><text x="24.8888%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="24.6388%" y="501" width="0.1605%" height="15" fill="rgb(249,196,0)" fg:x="307" fg:w="2"/><text x="24.8888%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7191%" y="485" width="0.0803%" height="15" fill="rgb(213,17,48)" fg:x="308" fg:w="1"/><text x="24.9691%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7191%" y="469" width="0.0803%" height="15" fill="rgb(206,42,46)" fg:x="308" fg:w="1"/><text x="24.9691%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.8796%" y="437" width="0.0803%" height="15" fill="rgb(212,105,24)" fg:x="310" fg:w="1"/><text x="25.1296%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9599%" y="373" width="0.0803%" height="15" fill="rgb(243,216,30)" fg:x="311" fg:w="1"/><text x="25.2099%" y="383.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="24.8796%" y="469" width="0.2408%" height="15" fill="rgb(207,121,3)" fg:x="310" fg:w="3"/><text x="25.1296%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="24.8796%" y="453" width="0.2408%" height="15" fill="rgb(249,78,0)" fg:x="310" fg:w="3"/><text x="25.1296%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.9599%" y="437" width="0.1605%" height="15" fill="rgb(244,151,32)" fg:x="311" fg:w="2"/><text x="25.2099%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.9599%" y="421" width="0.1605%" height="15" fill="rgb(228,63,25)" fg:x="311" fg:w="2"/><text x="25.2099%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="24.9599%" y="405" width="0.1605%" height="15" fill="rgb(231,158,23)" fg:x="311" fg:w="2"/><text x="25.2099%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.9599%" y="389" width="0.1605%" height="15" fill="rgb(248,107,23)" fg:x="311" fg:w="2"/><text x="25.2099%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.0401%" y="373" width="0.0803%" height="15" fill="rgb(215,168,21)" fg:x="312" fg:w="1"/><text x="25.2901%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.0401%" y="357" width="0.0803%" height="15" fill="rgb(227,83,22)" fg:x="312" fg:w="1"/><text x="25.2901%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1204%" y="437" width="0.0803%" height="15" fill="rgb(217,118,43)" fg:x="313" fg:w="1"/><text x="25.3704%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1204%" y="421" width="0.0803%" height="15" fill="rgb(229,220,41)" fg:x="313" fg:w="1"/><text x="25.3704%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1204%" y="405" width="0.0803%" height="15" fill="rgb(254,146,46)" fg:x="313" fg:w="1"/><text x="25.3704%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.1204%" y="389" width="0.0803%" height="15" fill="rgb(233,208,31)" fg:x="313" fg:w="1"/><text x="25.3704%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.1204%" y="373" width="0.0803%" height="15" fill="rgb(222,162,7)" fg:x="313" fg:w="1"/><text x="25.3704%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.1204%" y="357" width="0.0803%" height="15" fill="rgb(230,117,45)" fg:x="313" fg:w="1"/><text x="25.3704%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.1204%" y="341" width="0.0803%" height="15" fill="rgb(239,163,6)" fg:x="313" fg:w="1"/><text x="25.3704%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.1204%" y="325" width="0.0803%" height="15" fill="rgb(246,130,17)" fg:x="313" fg:w="1"/><text x="25.3704%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.1204%" y="309" width="0.0803%" height="15" fill="rgb(216,84,5)" fg:x="313" fg:w="1"/><text x="25.3704%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.1204%" y="293" width="0.0803%" height="15" fill="rgb(230,200,21)" fg:x="313" fg:w="1"/><text x="25.3704%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.1204%" y="277" width="0.0803%" height="15" fill="rgb(224,2,8)" fg:x="313" fg:w="1"/><text x="25.3704%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.1204%" y="261" width="0.0803%" height="15" fill="rgb(238,178,10)" fg:x="313" fg:w="1"/><text x="25.3704%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.1204%" y="245" width="0.0803%" height="15" fill="rgb(242,153,24)" fg:x="313" fg:w="1"/><text x="25.3704%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.1204%" y="229" width="0.0803%" height="15" fill="rgb(242,32,48)" fg:x="313" fg:w="1"/><text x="25.3704%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1204%" y="213" width="0.0803%" height="15" fill="rgb(227,36,0)" fg:x="313" fg:w="1"/><text x="25.3704%" y="223.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="24.6388%" y="517" width="0.6421%" height="15" fill="rgb(251,33,35)" fg:x="307" fg:w="8"/><text x="24.8888%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="24.7994%" y="501" width="0.4815%" height="15" fill="rgb(232,168,51)" fg:x="309" fg:w="6"/><text x="25.0494%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="24.7994%" y="485" width="0.4815%" height="15" fill="rgb(228,56,10)" fg:x="309" fg:w="6"/><text x="25.0494%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="25.1204%" y="469" width="0.1605%" height="15" fill="rgb(231,10,26)" fg:x="313" fg:w="2"/><text x="25.3704%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="25.1204%" y="453" width="0.1605%" height="15" fill="rgb(226,202,12)" fg:x="313" fg:w="2"/><text x="25.3704%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2006%" y="437" width="0.0803%" height="15" fill="rgb(251,49,21)" fg:x="314" fg:w="1"/><text x="25.4506%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2006%" y="421" width="0.0803%" height="15" fill="rgb(206,228,28)" fg:x="314" fg:w="1"/><text x="25.4506%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.2006%" y="405" width="0.0803%" height="15" fill="rgb(205,198,31)" fg:x="314" fg:w="1"/><text x="25.4506%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2006%" y="389" width="0.0803%" height="15" fill="rgb(213,69,1)" fg:x="314" fg:w="1"/><text x="25.4506%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2006%" y="373" width="0.0803%" height="15" fill="rgb(209,177,9)" fg:x="314" fg:w="1"/><text x="25.4506%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2006%" y="357" width="0.0803%" height="15" fill="rgb(227,119,30)" fg:x="314" fg:w="1"/><text x="25.4506%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="25.2809%" y="485" width="0.0803%" height="15" fill="rgb(234,106,41)" fg:x="315" fg:w="1"/><text x="25.5309%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.6019%" y="421" width="0.0803%" height="15" fill="rgb(244,103,47)" fg:x="319" fg:w="1"/><text x="25.8519%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="25.6019%" y="405" width="0.0803%" height="15" fill="rgb(212,211,25)" fg:x="319" fg:w="1"/><text x="25.8519%" y="415.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (25 samples, 2.01%)</title><rect x="23.7560%" y="549" width="2.0064%" height="15" fill="rgb(208,63,53)" fg:x="296" fg:w="25"/><text x="24.0060%" y="559.50">p..</text></g><g><title>plugins_core::tools::set_container (25 samples, 2.01%)</title><rect x="23.7560%" y="533" width="2.0064%" height="15" fill="rgb(213,176,21)" fg:x="296" fg:w="25"/><text x="24.0060%" y="543.50">p..</text></g><g><title>plugins_core::location::model::Location::set (6 samples, 0.48%)</title><rect x="25.2809%" y="517" width="0.4815%" height="15" fill="rgb(243,124,12)" fg:x="315" fg:w="6"/><text x="25.5309%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (6 samples, 0.48%)</title><rect x="25.2809%" y="501" width="0.4815%" height="15" fill="rgb(239,2,35)" fg:x="315" fg:w="6"/><text x="25.5309%" y="511.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (5 samples, 0.40%)</title><rect x="25.3612%" y="485" width="0.4013%" height="15" fill="rgb(253,169,22)" fg:x="316" fg:w="5"/><text x="25.6112%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="25.3612%" y="469" width="0.4013%" height="15" fill="rgb(254,51,12)" fg:x="316" fg:w="5"/><text x="25.6112%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (4 samples, 0.32%)</title><rect x="25.4414%" y="453" width="0.3210%" height="15" fill="rgb(244,17,47)" fg:x="317" fg:w="4"/><text x="25.6914%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="25.4414%" y="437" width="0.3210%" height="15" fill="rgb(251,45,46)" fg:x="317" fg:w="4"/><text x="25.6914%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.6822%" y="421" width="0.0803%" height="15" fill="rgb(223,87,43)" fg:x="320" fg:w="1"/><text x="25.9322%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="25.7624%" y="533" width="0.0803%" height="15" fill="rgb(230,132,31)" fg:x="321" fg:w="1"/><text x="26.0124%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="25.7624%" y="517" width="0.0803%" height="15" fill="rgb(206,99,1)" fg:x="321" fg:w="1"/><text x="26.0124%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7624%" y="501" width="0.0803%" height="15" fill="rgb(227,110,25)" fg:x="321" fg:w="1"/><text x="26.0124%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="25.8427%" y="517" width="0.0803%" height="15" fill="rgb(217,182,7)" fg:x="322" fg:w="1"/><text x="26.0927%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.8427%" y="501" width="0.0803%" height="15" fill="rgb(250,176,4)" fg:x="322" fg:w="1"/><text x="26.0927%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8427%" y="485" width="0.0803%" height="15" fill="rgb(244,98,30)" fg:x="322" fg:w="1"/><text x="26.0927%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="25.8427%" y="533" width="0.1605%" height="15" fill="rgb(228,150,42)" fg:x="322" fg:w="2"/><text x="26.0927%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.9230%" y="517" width="0.0803%" height="15" fill="rgb(231,91,46)" fg:x="323" fg:w="1"/><text x="26.1730%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.0032%" y="501" width="0.0803%" height="15" fill="rgb(252,161,32)" fg:x="324" fg:w="1"/><text x="26.2532%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0032%" y="485" width="0.0803%" height="15" fill="rgb(236,69,41)" fg:x="324" fg:w="1"/><text x="26.2532%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="26.0032%" y="533" width="0.1605%" height="15" fill="rgb(212,160,3)" fg:x="324" fg:w="2"/><text x="26.2532%" y="543.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="26.0032%" y="517" width="0.1605%" height="15" fill="rgb(216,5,50)" fg:x="324" fg:w="2"/><text x="26.2532%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="26.0835%" y="501" width="0.0803%" height="15" fill="rgb(241,138,25)" fg:x="325" fg:w="1"/><text x="26.3335%" y="511.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="26.0835%" y="485" width="0.0803%" height="15" fill="rgb(239,42,18)" fg:x="325" fg:w="1"/><text x="26.3335%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.0835%" y="469" width="0.0803%" height="15" fill="rgb(239,40,7)" fg:x="325" fg:w="1"/><text x="26.3335%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.0835%" y="453" width="0.0803%" height="15" fill="rgb(239,11,31)" fg:x="325" fg:w="1"/><text x="26.3335%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.2440%" y="421" width="0.0803%" height="15" fill="rgb(224,77,40)" fg:x="327" fg:w="1"/><text x="26.4940%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="26.1637%" y="453" width="0.3210%" height="15" fill="rgb(226,15,5)" fg:x="326" fg:w="4"/><text x="26.4137%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="26.1637%" y="437" width="0.3210%" height="15" fill="rgb(254,188,5)" fg:x="326" fg:w="4"/><text x="26.4137%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.3242%" y="421" width="0.1605%" height="15" fill="rgb(241,148,52)" fg:x="328" fg:w="2"/><text x="26.5742%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.4045%" y="405" width="0.0803%" height="15" fill="rgb(251,48,36)" fg:x="329" fg:w="1"/><text x="26.6545%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.4045%" y="389" width="0.0803%" height="15" fill="rgb(243,83,13)" fg:x="329" fg:w="1"/><text x="26.6545%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.4045%" y="373" width="0.0803%" height="15" fill="rgb(210,105,0)" fg:x="329" fg:w="1"/><text x="26.6545%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.4045%" y="357" width="0.0803%" height="15" fill="rgb(239,60,36)" fg:x="329" fg:w="1"/><text x="26.6545%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.4045%" y="341" width="0.0803%" height="15" fill="rgb(210,20,0)" fg:x="329" fg:w="1"/><text x="26.6545%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.4045%" y="325" width="0.0803%" height="15" fill="rgb(244,26,53)" fg:x="329" fg:w="1"/><text x="26.6545%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.5650%" y="421" width="0.0803%" height="15" fill="rgb(240,100,49)" fg:x="331" fg:w="1"/><text x="26.8150%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.5650%" y="405" width="0.0803%" height="15" fill="rgb(250,46,45)" fg:x="331" fg:w="1"/><text x="26.8150%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5650%" y="389" width="0.0803%" height="15" fill="rgb(220,181,29)" fg:x="331" fg:w="1"/><text x="26.8150%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5650%" y="373" width="0.0803%" height="15" fill="rgb(213,137,33)" fg:x="331" fg:w="1"/><text x="26.8150%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.5650%" y="357" width="0.0803%" height="15" fill="rgb(213,27,48)" fg:x="331" fg:w="1"/><text x="26.8150%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.5650%" y="341" width="0.0803%" height="15" fill="rgb(245,180,39)" fg:x="331" fg:w="1"/><text x="26.8150%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.5650%" y="325" width="0.0803%" height="15" fill="rgb(212,158,42)" fg:x="331" fg:w="1"/><text x="26.8150%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.5650%" y="309" width="0.0803%" height="15" fill="rgb(228,193,18)" fg:x="331" fg:w="1"/><text x="26.8150%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.5650%" y="293" width="0.0803%" height="15" fill="rgb(245,172,29)" fg:x="331" fg:w="1"/><text x="26.8150%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.5650%" y="277" width="0.0803%" height="15" fill="rgb(207,98,24)" fg:x="331" fg:w="1"/><text x="26.8150%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.5650%" y="261" width="0.0803%" height="15" fill="rgb(249,92,26)" fg:x="331" fg:w="1"/><text x="26.8150%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.5650%" y="245" width="0.0803%" height="15" fill="rgb(217,176,26)" fg:x="331" fg:w="1"/><text x="26.8150%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.5650%" y="229" width="0.0803%" height="15" fill="rgb(221,8,39)" fg:x="331" fg:w="1"/><text x="26.8150%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5650%" y="213" width="0.0803%" height="15" fill="rgb(208,90,18)" fg:x="331" fg:w="1"/><text x="26.8150%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6453%" y="421" width="0.0803%" height="15" fill="rgb(207,202,30)" fg:x="332" fg:w="1"/><text x="26.8953%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7255%" y="421" width="0.0803%" height="15" fill="rgb(231,124,22)" fg:x="333" fg:w="1"/><text x="26.9755%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="26.8058%" y="357" width="0.0803%" height="15" fill="rgb(206,15,5)" fg:x="334" fg:w="1"/><text x="27.0558%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.8058%" y="341" width="0.0803%" height="15" fill="rgb(239,16,52)" fg:x="334" fg:w="1"/><text x="27.0558%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.8058%" y="325" width="0.0803%" height="15" fill="rgb(245,213,29)" fg:x="334" fg:w="1"/><text x="27.0558%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.80%)</title><rect x="26.1637%" y="533" width="0.8026%" height="15" fill="rgb(213,203,36)" fg:x="326" fg:w="10"/><text x="26.4137%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="26.1637%" y="517" width="0.8026%" height="15" fill="rgb(209,55,18)" fg:x="326" fg:w="10"/><text x="26.4137%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.80%)</title><rect x="26.1637%" y="501" width="0.8026%" height="15" fill="rgb(207,133,49)" fg:x="326" fg:w="10"/><text x="26.4137%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (10 samples, 0.80%)</title><rect x="26.1637%" y="485" width="0.8026%" height="15" fill="rgb(240,33,46)" fg:x="326" fg:w="10"/><text x="26.4137%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="26.1637%" y="469" width="0.8026%" height="15" fill="rgb(212,35,2)" fg:x="326" fg:w="10"/><text x="26.4137%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="26.4848%" y="453" width="0.4815%" height="15" fill="rgb(231,119,28)" fg:x="330" fg:w="6"/><text x="26.7348%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (6 samples, 0.48%)</title><rect x="26.4848%" y="437" width="0.4815%" height="15" fill="rgb(252,178,7)" fg:x="330" fg:w="6"/><text x="26.7348%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.8058%" y="421" width="0.1605%" height="15" fill="rgb(251,91,4)" fg:x="334" fg:w="2"/><text x="27.0558%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.8058%" y="405" width="0.1605%" height="15" fill="rgb(233,122,19)" fg:x="334" fg:w="2"/><text x="27.0558%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="26.8058%" y="389" width="0.1605%" height="15" fill="rgb(231,208,46)" fg:x="334" fg:w="2"/><text x="27.0558%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.8058%" y="373" width="0.1605%" height="15" fill="rgb(243,15,41)" fg:x="334" fg:w="2"/><text x="27.0558%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.8860%" y="357" width="0.0803%" height="15" fill="rgb(210,32,43)" fg:x="335" fg:w="1"/><text x="27.1360%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8860%" y="341" width="0.0803%" height="15" fill="rgb(222,177,15)" fg:x="335" fg:w="1"/><text x="27.1360%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (2 samples, 0.16%)</title><rect x="26.9663%" y="533" width="0.1605%" height="15" fill="rgb(244,121,34)" fg:x="336" fg:w="2"/><text x="27.2163%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.9663%" y="517" width="0.1605%" height="15" fill="rgb(234,138,4)" fg:x="336" fg:w="2"/><text x="27.2163%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="27.1268%" y="517" width="0.0803%" height="15" fill="rgb(240,97,48)" fg:x="338" fg:w="1"/><text x="27.3768%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.1268%" y="501" width="0.0803%" height="15" fill="rgb(237,65,54)" fg:x="338" fg:w="1"/><text x="27.3768%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="27.2071%" y="437" width="0.0803%" height="15" fill="rgb(214,25,24)" fg:x="339" fg:w="1"/><text x="27.4571%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.2071%" y="421" width="0.0803%" height="15" fill="rgb(213,5,3)" fg:x="339" fg:w="1"/><text x="27.4571%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.2071%" y="405" width="0.0803%" height="15" fill="rgb(219,81,29)" fg:x="339" fg:w="1"/><text x="27.4571%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.2071%" y="389" width="0.0803%" height="15" fill="rgb(220,43,48)" fg:x="339" fg:w="1"/><text x="27.4571%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.2071%" y="373" width="0.0803%" height="15" fill="rgb(239,157,2)" fg:x="339" fg:w="1"/><text x="27.4571%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.2071%" y="357" width="0.0803%" height="15" fill="rgb(213,104,43)" fg:x="339" fg:w="1"/><text x="27.4571%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="27.2071%" y="341" width="0.0803%" height="15" fill="rgb(237,84,9)" fg:x="339" fg:w="1"/><text x="27.4571%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.2071%" y="325" width="0.0803%" height="15" fill="rgb(252,6,33)" fg:x="339" fg:w="1"/><text x="27.4571%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="27.2071%" y="469" width="0.1605%" height="15" fill="rgb(251,172,22)" fg:x="339" fg:w="2"/><text x="27.4571%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="27.2071%" y="453" width="0.1605%" height="15" fill="rgb(244,91,53)" fg:x="339" fg:w="2"/><text x="27.4571%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.2873%" y="437" width="0.0803%" height="15" fill="rgb(219,29,30)" fg:x="340" fg:w="1"/><text x="27.5373%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.3676%" y="437" width="0.0803%" height="15" fill="rgb(213,3,15)" fg:x="341" fg:w="1"/><text x="27.6176%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="27.5281%" y="421" width="0.1605%" height="15" fill="rgb(208,25,28)" fg:x="343" fg:w="2"/><text x="27.7781%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.6083%" y="405" width="0.0803%" height="15" fill="rgb(252,144,25)" fg:x="344" fg:w="1"/><text x="27.8583%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.6083%" y="389" width="0.0803%" height="15" fill="rgb(226,220,25)" fg:x="344" fg:w="1"/><text x="27.8583%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.6083%" y="373" width="0.0803%" height="15" fill="rgb(212,131,28)" fg:x="344" fg:w="1"/><text x="27.8583%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="27.6083%" y="357" width="0.0803%" height="15" fill="rgb(219,143,52)" fg:x="344" fg:w="1"/><text x="27.8583%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="27.7689%" y="389" width="0.2408%" height="15" fill="rgb(215,56,7)" fg:x="346" fg:w="3"/><text x="28.0189%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.7689%" y="373" width="0.2408%" height="15" fill="rgb(239,59,51)" fg:x="346" fg:w="3"/><text x="28.0189%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.8491%" y="357" width="0.1605%" height="15" fill="rgb(209,215,4)" fg:x="347" fg:w="2"/><text x="28.0991%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.9294%" y="341" width="0.0803%" height="15" fill="rgb(221,118,39)" fg:x="348" fg:w="1"/><text x="28.1794%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.9294%" y="325" width="0.0803%" height="15" fill="rgb(236,6,44)" fg:x="348" fg:w="1"/><text x="28.1794%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.9294%" y="309" width="0.0803%" height="15" fill="rgb(216,122,9)" fg:x="348" fg:w="1"/><text x="28.1794%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.9294%" y="293" width="0.0803%" height="15" fill="rgb(244,134,42)" fg:x="348" fg:w="1"/><text x="28.1794%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="27.7689%" y="405" width="0.4013%" height="15" fill="rgb(209,189,35)" fg:x="346" fg:w="5"/><text x="28.0189%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.0096%" y="389" width="0.1605%" height="15" fill="rgb(250,47,36)" fg:x="349" fg:w="2"/><text x="28.2596%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.0899%" y="373" width="0.0803%" height="15" fill="rgb(252,112,4)" fg:x="350" fg:w="1"/><text x="28.3399%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="28.4109%" y="389" width="0.1605%" height="15" fill="rgb(221,79,51)" fg:x="354" fg:w="2"/><text x="28.6609%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.4109%" y="373" width="0.1605%" height="15" fill="rgb(232,65,53)" fg:x="354" fg:w="2"/><text x="28.6609%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.4912%" y="357" width="0.0803%" height="15" fill="rgb(211,37,7)" fg:x="355" fg:w="1"/><text x="28.7412%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="28.5714%" y="389" width="0.4815%" height="15" fill="rgb(234,221,18)" fg:x="356" fg:w="6"/><text x="28.8214%" y="399.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="28.5714%" y="373" width="0.4815%" height="15" fill="rgb(220,158,26)" fg:x="356" fg:w="6"/><text x="28.8214%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="28.6517%" y="357" width="0.4013%" height="15" fill="rgb(220,70,6)" fg:x="357" fg:w="5"/><text x="28.9017%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="28.7319%" y="341" width="0.3210%" height="15" fill="rgb(250,39,48)" fg:x="358" fg:w="4"/><text x="28.9819%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="28.8925%" y="325" width="0.1605%" height="15" fill="rgb(206,40,27)" fg:x="360" fg:w="2"/><text x="29.1425%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="28.8925%" y="309" width="0.1605%" height="15" fill="rgb(247,80,36)" fg:x="360" fg:w="2"/><text x="29.1425%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="28.8925%" y="293" width="0.1605%" height="15" fill="rgb(222,9,20)" fg:x="360" fg:w="2"/><text x="29.1425%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="29.2135%" y="373" width="0.1605%" height="15" fill="rgb(217,26,45)" fg:x="364" fg:w="2"/><text x="29.4635%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.3740%" y="341" width="0.0803%" height="15" fill="rgb(221,67,14)" fg:x="366" fg:w="1"/><text x="29.6240%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.3740%" y="325" width="0.0803%" height="15" fill="rgb(248,100,24)" fg:x="366" fg:w="1"/><text x="29.6240%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.4543%" y="325" width="0.0803%" height="15" fill="rgb(230,187,16)" fg:x="367" fg:w="1"/><text x="29.7043%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="29.4543%" y="341" width="0.1605%" height="15" fill="rgb(205,108,13)" fg:x="367" fg:w="2"/><text x="29.7043%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="29.5345%" y="325" width="0.0803%" height="15" fill="rgb(235,71,51)" fg:x="368" fg:w="1"/><text x="29.7845%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.5345%" y="309" width="0.0803%" height="15" fill="rgb(251,172,48)" fg:x="368" fg:w="1"/><text x="29.7845%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.5345%" y="293" width="0.0803%" height="15" fill="rgb(240,96,49)" fg:x="368" fg:w="1"/><text x="29.7845%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.5345%" y="277" width="0.0803%" height="15" fill="rgb(235,46,36)" fg:x="368" fg:w="1"/><text x="29.7845%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="29.3740%" y="373" width="0.3210%" height="15" fill="rgb(244,3,49)" fg:x="366" fg:w="4"/><text x="29.6240%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="29.3740%" y="357" width="0.3210%" height="15" fill="rgb(206,78,54)" fg:x="366" fg:w="4"/><text x="29.6240%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.6148%" y="341" width="0.0803%" height="15" fill="rgb(208,85,42)" fg:x="369" fg:w="1"/><text x="29.8648%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.6148%" y="325" width="0.0803%" height="15" fill="rgb(219,196,21)" fg:x="369" fg:w="1"/><text x="29.8648%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.6950%" y="373" width="0.0803%" height="15" fill="rgb(238,19,9)" fg:x="370" fg:w="1"/><text x="29.9450%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.6950%" y="357" width="0.0803%" height="15" fill="rgb(206,86,13)" fg:x="370" fg:w="1"/><text x="29.9450%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.6950%" y="341" width="0.0803%" height="15" fill="rgb(214,123,40)" fg:x="370" fg:w="1"/><text x="29.9450%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.6950%" y="325" width="0.0803%" height="15" fill="rgb(243,53,5)" fg:x="370" fg:w="1"/><text x="29.9450%" y="335.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="30.0161%" y="357" width="0.0803%" height="15" fill="rgb(254,186,31)" fg:x="374" fg:w="1"/><text x="30.2661%" y="367.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa_long (1 samples, 0.08%)</title><rect x="30.0963%" y="357" width="0.0803%" height="15" fill="rgb(221,216,25)" fg:x="375" fg:w="1"/><text x="30.3463%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="30.1766%" y="357" width="0.4013%" height="15" fill="rgb(248,107,42)" fg:x="376" fg:w="5"/><text x="30.4266%" y="367.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="30.1766%" y="341" width="0.4013%" height="15" fill="rgb(221,85,43)" fg:x="376" fg:w="5"/><text x="30.4266%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.4173%" y="325" width="0.1605%" height="15" fill="rgb(225,34,24)" fg:x="379" fg:w="2"/><text x="30.6673%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.4173%" y="309" width="0.1605%" height="15" fill="rgb(211,119,1)" fg:x="379" fg:w="2"/><text x="30.6673%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.4976%" y="293" width="0.0803%" height="15" fill="rgb(254,216,46)" fg:x="380" fg:w="1"/><text x="30.7476%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.4976%" y="277" width="0.0803%" height="15" fill="rgb(238,11,38)" fg:x="380" fg:w="1"/><text x="30.7476%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.4976%" y="261" width="0.0803%" height="15" fill="rgb(233,50,15)" fg:x="380" fg:w="1"/><text x="30.7476%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="30.6581%" y="341" width="0.2408%" height="15" fill="rgb(217,181,29)" fg:x="382" fg:w="3"/><text x="30.9081%" y="351.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="30.6581%" y="325" width="0.2408%" height="15" fill="rgb(214,56,3)" fg:x="382" fg:w="3"/><text x="30.9081%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.7384%" y="309" width="0.1605%" height="15" fill="rgb(230,69,45)" fg:x="383" fg:w="2"/><text x="30.9884%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="30.8186%" y="293" width="0.0803%" height="15" fill="rgb(224,201,50)" fg:x="384" fg:w="1"/><text x="31.0686%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="30.8989%" y="341" width="0.0803%" height="15" fill="rgb(217,228,18)" fg:x="385" fg:w="1"/><text x="31.1489%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="30.5778%" y="357" width="0.6421%" height="15" fill="rgb(239,33,44)" fg:x="381" fg:w="8"/><text x="30.8278%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="30.9791%" y="341" width="0.2408%" height="15" fill="rgb(248,210,23)" fg:x="386" fg:w="3"/><text x="31.2291%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="31.0594%" y="325" width="0.1605%" height="15" fill="rgb(253,135,8)" fg:x="387" fg:w="2"/><text x="31.3094%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.1396%" y="309" width="0.0803%" height="15" fill="rgb(217,98,21)" fg:x="388" fg:w="1"/><text x="31.3896%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.4607%" y="325" width="0.0803%" height="15" fill="rgb(253,130,21)" fg:x="392" fg:w="1"/><text x="31.7107%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.85%)</title><rect x="29.7753%" y="373" width="1.8459%" height="15" fill="rgb(207,81,54)" fg:x="371" fg:w="23"/><text x="30.0253%" y="383.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="31.2199%" y="357" width="0.4013%" height="15" fill="rgb(232,48,33)" fg:x="389" fg:w="5"/><text x="31.4699%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="31.3804%" y="341" width="0.2408%" height="15" fill="rgb(211,9,35)" fg:x="391" fg:w="3"/><text x="31.6304%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="31.5409%" y="325" width="0.0803%" height="15" fill="rgb(205,152,21)" fg:x="393" fg:w="1"/><text x="31.7909%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 2.73%)</title><rect x="29.0530%" y="389" width="2.7287%" height="15" fill="rgb(249,21,27)" fg:x="362" fg:w="34"/><text x="29.3030%" y="399.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="31.6212%" y="373" width="0.1605%" height="15" fill="rgb(252,29,24)" fg:x="394" fg:w="2"/><text x="31.8712%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.7014%" y="357" width="0.0803%" height="15" fill="rgb(230,130,50)" fg:x="395" fg:w="1"/><text x="31.9514%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="31.8620%" y="357" width="0.1605%" height="15" fill="rgb(239,144,14)" fg:x="397" fg:w="2"/><text x="32.1120%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="31.8620%" y="341" width="0.1605%" height="15" fill="rgb(227,111,50)" fg:x="397" fg:w="2"/><text x="32.1120%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.9422%" y="325" width="0.0803%" height="15" fill="rgb(254,84,20)" fg:x="398" fg:w="1"/><text x="32.1922%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.9422%" y="309" width="0.0803%" height="15" fill="rgb(232,90,48)" fg:x="398" fg:w="1"/><text x="32.1922%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (56 samples, 4.49%)</title><rect x="27.6886%" y="421" width="4.4944%" height="15" fill="rgb(253,63,47)" fg:x="345" fg:w="56"/><text x="27.9386%" y="431.50">&lt;serd..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (50 samples, 4.01%)</title><rect x="28.1701%" y="405" width="4.0128%" height="15" fill="rgb(251,146,35)" fg:x="351" fg:w="50"/><text x="28.4201%" y="415.50">serd..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="31.7817%" y="389" width="0.4013%" height="15" fill="rgb(229,192,35)" fg:x="396" fg:w="5"/><text x="32.0317%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="31.8620%" y="373" width="0.3210%" height="15" fill="rgb(225,68,9)" fg:x="397" fg:w="4"/><text x="32.1120%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="32.0225%" y="357" width="0.1605%" height="15" fill="rgb(214,97,34)" fg:x="399" fg:w="2"/><text x="32.2725%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (1 samples, 0.08%)</title><rect x="32.1830%" y="421" width="0.0803%" height="15" fill="rgb(253,31,26)" fg:x="401" fg:w="1"/><text x="32.4330%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="32.2632%" y="389" width="0.1605%" height="15" fill="rgb(225,151,47)" fg:x="402" fg:w="2"/><text x="32.5132%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.5040%" y="373" width="0.0803%" height="15" fill="rgb(206,185,9)" fg:x="405" fg:w="1"/><text x="32.7540%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.5843%" y="373" width="0.0803%" height="15" fill="rgb(249,65,17)" fg:x="406" fg:w="1"/><text x="32.8343%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.6645%" y="357" width="0.0803%" height="15" fill="rgb(220,110,10)" fg:x="407" fg:w="1"/><text x="32.9145%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="32.7448%" y="341" width="0.1605%" height="15" fill="rgb(222,198,49)" fg:x="408" fg:w="2"/><text x="32.9948%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="32.9053%" y="341" width="0.1605%" height="15" fill="rgb(239,81,13)" fg:x="410" fg:w="2"/><text x="33.1553%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="32.9053%" y="325" width="0.1605%" height="15" fill="rgb(216,128,11)" fg:x="410" fg:w="2"/><text x="33.1553%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.9856%" y="309" width="0.0803%" height="15" fill="rgb(247,156,8)" fg:x="411" fg:w="1"/><text x="33.2356%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.9856%" y="293" width="0.0803%" height="15" fill="rgb(219,173,1)" fg:x="411" fg:w="1"/><text x="33.2356%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.1461%" y="325" width="0.0803%" height="15" fill="rgb(227,42,24)" fg:x="413" fg:w="1"/><text x="33.3961%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.1461%" y="309" width="0.0803%" height="15" fill="rgb(253,219,50)" fg:x="413" fg:w="1"/><text x="33.3961%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="32.2632%" y="421" width="1.0433%" height="15" fill="rgb(215,191,54)" fg:x="402" fg:w="13"/><text x="32.5132%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="32.2632%" y="405" width="1.0433%" height="15" fill="rgb(238,83,12)" fg:x="402" fg:w="13"/><text x="32.5132%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="32.4238%" y="389" width="0.8828%" height="15" fill="rgb(205,124,9)" fg:x="404" fg:w="11"/><text x="32.6738%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="32.6645%" y="373" width="0.6421%" height="15" fill="rgb(253,174,7)" fg:x="407" fg:w="8"/><text x="32.9145%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="32.7448%" y="357" width="0.5618%" height="15" fill="rgb(206,134,49)" fg:x="408" fg:w="7"/><text x="32.9948%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="33.0658%" y="341" width="0.2408%" height="15" fill="rgb(221,89,20)" fg:x="412" fg:w="3"/><text x="33.3158%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.2263%" y="325" width="0.0803%" height="15" fill="rgb(240,205,13)" fg:x="414" fg:w="1"/><text x="33.4763%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.3066%" y="389" width="0.0803%" height="15" fill="rgb(237,174,32)" fg:x="415" fg:w="1"/><text x="33.5566%" y="399.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="33.3868%" y="389" width="0.0803%" height="15" fill="rgb(226,12,15)" fg:x="416" fg:w="1"/><text x="33.6368%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.3868%" y="373" width="0.0803%" height="15" fill="rgb(245,160,52)" fg:x="416" fg:w="1"/><text x="33.6368%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.3868%" y="357" width="0.0803%" height="15" fill="rgb(253,80,21)" fg:x="416" fg:w="1"/><text x="33.6368%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.4671%" y="389" width="0.0803%" height="15" fill="rgb(231,225,22)" fg:x="417" fg:w="1"/><text x="33.7171%" y="399.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (5 samples, 0.40%)</title><rect x="33.5474%" y="389" width="0.4013%" height="15" fill="rgb(253,185,12)" fg:x="418" fg:w="5"/><text x="33.7974%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="33.6276%" y="373" width="0.3210%" height="15" fill="rgb(234,197,21)" fg:x="419" fg:w="4"/><text x="33.8776%" y="383.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="33.7079%" y="357" width="0.2408%" height="15" fill="rgb(210,47,30)" fg:x="420" fg:w="3"/><text x="33.9579%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.16%)</title><rect x="33.7881%" y="341" width="0.1605%" height="15" fill="rgb(246,139,27)" fg:x="421" fg:w="2"/><text x="34.0381%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="33.8684%" y="325" width="0.0803%" height="15" fill="rgb(226,130,16)" fg:x="422" fg:w="1"/><text x="34.1184%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.8684%" y="309" width="0.0803%" height="15" fill="rgb(237,208,20)" fg:x="422" fg:w="1"/><text x="34.1184%" y="319.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (10 samples, 0.80%)</title><rect x="33.3066%" y="405" width="0.8026%" height="15" fill="rgb(245,186,28)" fg:x="415" fg:w="10"/><text x="33.5566%" y="415.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="33.9486%" y="389" width="0.1605%" height="15" fill="rgb(238,105,39)" fg:x="423" fg:w="2"/><text x="34.1986%" y="399.50"></text></g><g><title>treediff::tools::record::mk (2 samples, 0.16%)</title><rect x="33.9486%" y="373" width="0.1605%" height="15" fill="rgb(253,228,11)" fg:x="423" fg:w="2"/><text x="34.1986%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="34.1894%" y="373" width="0.4013%" height="15" fill="rgb(224,136,38)" fg:x="426" fg:w="5"/><text x="34.4394%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="34.4302%" y="357" width="0.1605%" height="15" fill="rgb(211,3,25)" fg:x="429" fg:w="2"/><text x="34.6802%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="34.6709%" y="341" width="0.0803%" height="15" fill="rgb(238,66,34)" fg:x="432" fg:w="1"/><text x="34.9209%" y="351.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="34.5907%" y="373" width="0.2408%" height="15" fill="rgb(223,188,11)" fg:x="431" fg:w="3"/><text x="34.8407%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.6709%" y="357" width="0.1605%" height="15" fill="rgb(221,10,35)" fg:x="432" fg:w="2"/><text x="34.9209%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.7512%" y="341" width="0.0803%" height="15" fill="rgb(223,18,44)" fg:x="433" fg:w="1"/><text x="35.0012%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="34.8315%" y="373" width="0.0803%" height="15" fill="rgb(220,97,41)" fg:x="434" fg:w="1"/><text x="35.0815%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.8315%" y="357" width="0.0803%" height="15" fill="rgb(206,95,45)" fg:x="434" fg:w="1"/><text x="35.0815%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.8315%" y="341" width="0.0803%" height="15" fill="rgb(209,96,13)" fg:x="434" fg:w="1"/><text x="35.0815%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="34.9117%" y="357" width="0.0803%" height="15" fill="rgb(237,39,34)" fg:x="435" fg:w="1"/><text x="35.1617%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="34.9117%" y="373" width="0.1605%" height="15" fill="rgb(213,49,47)" fg:x="435" fg:w="2"/><text x="35.1617%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.9920%" y="357" width="0.0803%" height="15" fill="rgb(205,107,27)" fg:x="436" fg:w="1"/><text x="35.2420%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9920%" y="341" width="0.0803%" height="15" fill="rgb(212,142,9)" fg:x="436" fg:w="1"/><text x="35.2420%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.3933%" y="325" width="0.0803%" height="15" fill="rgb(226,182,0)" fg:x="441" fg:w="1"/><text x="35.6433%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="35.6340%" y="261" width="0.0803%" height="15" fill="rgb(231,3,53)" fg:x="444" fg:w="1"/><text x="35.8840%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6340%" y="245" width="0.0803%" height="15" fill="rgb(246,111,28)" fg:x="444" fg:w="1"/><text x="35.8840%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="35.6340%" y="229" width="0.0803%" height="15" fill="rgb(254,183,7)" fg:x="444" fg:w="1"/><text x="35.8840%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.6340%" y="213" width="0.0803%" height="15" fill="rgb(247,177,28)" fg:x="444" fg:w="1"/><text x="35.8840%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="35.4735%" y="325" width="0.3210%" height="15" fill="rgb(244,43,1)" fg:x="442" fg:w="4"/><text x="35.7235%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="35.4735%" y="309" width="0.3210%" height="15" fill="rgb(207,2,35)" fg:x="442" fg:w="4"/><text x="35.7235%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="35.4735%" y="293" width="0.3210%" height="15" fill="rgb(213,83,22)" fg:x="442" fg:w="4"/><text x="35.7235%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="35.6340%" y="277" width="0.1605%" height="15" fill="rgb(246,212,13)" fg:x="444" fg:w="2"/><text x="35.8840%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7143%" y="261" width="0.0803%" height="15" fill="rgb(213,127,46)" fg:x="445" fg:w="1"/><text x="35.9643%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.9551%" y="293" width="0.1605%" height="15" fill="rgb(219,215,39)" fg:x="448" fg:w="2"/><text x="36.2051%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.0353%" y="277" width="0.0803%" height="15" fill="rgb(227,99,17)" fg:x="449" fg:w="1"/><text x="36.2853%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="36.3563%" y="277" width="0.1605%" height="15" fill="rgb(208,155,18)" fg:x="453" fg:w="2"/><text x="36.6063%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.3563%" y="261" width="0.1605%" height="15" fill="rgb(223,204,38)" fg:x="453" fg:w="2"/><text x="36.6063%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4366%" y="245" width="0.0803%" height="15" fill="rgb(212,114,21)" fg:x="454" fg:w="1"/><text x="36.6866%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="35.7945%" y="309" width="0.8026%" height="15" fill="rgb(250,74,13)" fg:x="446" fg:w="10"/><text x="36.0445%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="36.1156%" y="293" width="0.4815%" height="15" fill="rgb(234,7,1)" fg:x="450" fg:w="6"/><text x="36.3656%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5169%" y="277" width="0.0803%" height="15" fill="rgb(207,138,31)" fg:x="455" fg:w="1"/><text x="36.7669%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.44%)</title><rect x="35.2327%" y="341" width="1.4446%" height="15" fill="rgb(215,186,42)" fg:x="439" fg:w="18"/><text x="35.4827%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="35.7945%" y="325" width="0.8828%" height="15" fill="rgb(229,205,49)" fg:x="446" fg:w="11"/><text x="36.0445%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5971%" y="309" width="0.0803%" height="15" fill="rgb(216,156,32)" fg:x="456" fg:w="1"/><text x="36.8471%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.69%)</title><rect x="35.2327%" y="357" width="1.6854%" height="15" fill="rgb(238,7,21)" fg:x="439" fg:w="21"/><text x="35.4827%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="36.6774%" y="341" width="0.2408%" height="15" fill="rgb(249,190,22)" fg:x="457" fg:w="3"/><text x="36.9274%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="36.7576%" y="325" width="0.1605%" height="15" fill="rgb(253,51,31)" fg:x="458" fg:w="2"/><text x="37.0076%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.9181%" y="357" width="0.0803%" height="15" fill="rgb(237,90,54)" fg:x="460" fg:w="1"/><text x="37.1681%" y="367.50"></text></g><g><title>engine::session::Session::flush (125 samples, 10.03%)</title><rect x="27.1268%" y="533" width="10.0321%" height="15" fill="rgb(250,214,33)" fg:x="338" fg:w="125"/><text x="27.3768%" y="543.50">engine::session..</text></g><g><title>engine::session::Session::save_changes (124 samples, 9.95%)</title><rect x="27.2071%" y="517" width="9.9518%" height="15" fill="rgb(237,10,49)" fg:x="339" fg:w="124"/><text x="27.4571%" y="527.50">engine::sessio..</text></g><g><title>engine::session::state::State::close (124 samples, 9.95%)</title><rect x="27.2071%" y="501" width="9.9518%" height="15" fill="rgb(241,56,36)" fg:x="339" fg:w="124"/><text x="27.4571%" y="511.50">engine::sessio..</text></g><g><title>engine::session::state::State::flush_entities (124 samples, 9.95%)</title><rect x="27.2071%" y="485" width="9.9518%" height="15" fill="rgb(227,164,12)" fg:x="339" fg:w="124"/><text x="27.4571%" y="495.50">engine::sessio..</text></g><g><title>core::iter::adapters::try_process (122 samples, 9.79%)</title><rect x="27.3676%" y="469" width="9.7913%" height="15" fill="rgb(249,149,35)" fg:x="341" fg:w="122"/><text x="27.6176%" y="479.50">core::iter::ad..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (122 samples, 9.79%)</title><rect x="27.3676%" y="453" width="9.7913%" height="15" fill="rgb(238,227,50)" fg:x="341" fg:w="122"/><text x="27.6176%" y="463.50">&lt;alloc::vec::V..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (121 samples, 9.71%)</title><rect x="27.4478%" y="437" width="9.7111%" height="15" fill="rgb(235,102,45)" fg:x="342" fg:w="121"/><text x="27.6978%" y="447.50">engine::sessio..</text></g><g><title>kernel::model::any_entity_changes (48 samples, 3.85%)</title><rect x="33.3066%" y="421" width="3.8523%" height="15" fill="rgb(211,10,38)" fg:x="415" fg:w="48"/><text x="33.5566%" y="431.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (38 samples, 3.05%)</title><rect x="34.1091%" y="405" width="3.0498%" height="15" fill="rgb(219,77,48)" fg:x="425" fg:w="38"/><text x="34.3591%" y="415.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (37 samples, 2.97%)</title><rect x="34.1894%" y="389" width="2.9695%" height="15" fill="rgb(246,6,15)" fg:x="426" fg:w="37"/><text x="34.4394%" y="399.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (26 samples, 2.09%)</title><rect x="35.0722%" y="373" width="2.0867%" height="15" fill="rgb(207,220,2)" fg:x="437" fg:w="26"/><text x="35.3222%" y="383.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.9984%" y="357" width="0.1605%" height="15" fill="rgb(242,48,14)" fg:x="461" fg:w="2"/><text x="37.2484%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="36.9984%" y="341" width="0.1605%" height="15" fill="rgb(218,19,27)" fg:x="461" fg:w="2"/><text x="37.2484%" y="351.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="37.1589%" y="533" width="0.0803%" height="15" fill="rgb(228,0,35)" fg:x="463" fg:w="1"/><text x="37.4089%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="37.1589%" y="517" width="0.0803%" height="15" fill="rgb(244,142,54)" fg:x="463" fg:w="1"/><text x="37.4089%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.1589%" y="501" width="0.0803%" height="15" fill="rgb(243,217,40)" fg:x="463" fg:w="1"/><text x="37.4089%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.1589%" y="485" width="0.0803%" height="15" fill="rgb(207,114,16)" fg:x="463" fg:w="1"/><text x="37.4089%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="37.1589%" y="469" width="0.0803%" height="15" fill="rgb(224,33,25)" fg:x="463" fg:w="1"/><text x="37.4089%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="37.1589%" y="453" width="0.0803%" height="15" fill="rgb(230,93,54)" fg:x="463" fg:w="1"/><text x="37.4089%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1589%" y="437" width="0.0803%" height="15" fill="rgb(224,56,24)" fg:x="463" fg:w="1"/><text x="37.4089%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="37.3194%" y="501" width="0.1605%" height="15" fill="rgb(235,189,50)" fg:x="465" fg:w="2"/><text x="37.5694%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="37.3194%" y="485" width="0.1605%" height="15" fill="rgb(242,173,8)" fg:x="465" fg:w="2"/><text x="37.5694%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.3997%" y="469" width="0.0803%" height="15" fill="rgb(209,206,10)" fg:x="466" fg:w="1"/><text x="37.6497%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.3997%" y="453" width="0.0803%" height="15" fill="rgb(213,182,44)" fg:x="466" fg:w="1"/><text x="37.6497%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.3997%" y="437" width="0.0803%" height="15" fill="rgb(243,51,15)" fg:x="466" fg:w="1"/><text x="37.6497%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.3997%" y="421" width="0.0803%" height="15" fill="rgb(241,13,14)" fg:x="466" fg:w="1"/><text x="37.6497%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.3997%" y="405" width="0.0803%" height="15" fill="rgb(239,147,24)" fg:x="466" fg:w="1"/><text x="37.6497%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.3997%" y="389" width="0.0803%" height="15" fill="rgb(223,129,16)" fg:x="466" fg:w="1"/><text x="37.6497%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.3997%" y="373" width="0.0803%" height="15" fill="rgb(209,169,13)" fg:x="466" fg:w="1"/><text x="37.6497%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.3997%" y="357" width="0.0803%" height="15" fill="rgb(235,159,41)" fg:x="466" fg:w="1"/><text x="37.6497%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.3997%" y="341" width="0.0803%" height="15" fill="rgb(223,219,48)" fg:x="466" fg:w="1"/><text x="37.6497%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.3997%" y="325" width="0.0803%" height="15" fill="rgb(236,80,13)" fg:x="466" fg:w="1"/><text x="37.6497%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.3997%" y="309" width="0.0803%" height="15" fill="rgb(213,5,6)" fg:x="466" fg:w="1"/><text x="37.6497%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="37.3997%" y="293" width="0.0803%" height="15" fill="rgb(205,59,21)" fg:x="466" fg:w="1"/><text x="37.6497%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="37.3997%" y="277" width="0.0803%" height="15" fill="rgb(247,137,35)" fg:x="466" fg:w="1"/><text x="37.6497%" y="287.50"></text></g><g><title>plugins_core::build::Build::new (6 samples, 0.48%)</title><rect x="37.2392%" y="533" width="0.4815%" height="15" fill="rgb(242,208,28)" fg:x="464" fg:w="6"/><text x="37.4892%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (6 samples, 0.48%)</title><rect x="37.2392%" y="517" width="0.4815%" height="15" fill="rgb(245,62,25)" fg:x="464" fg:w="6"/><text x="37.4892%" y="527.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="37.4799%" y="501" width="0.2408%" height="15" fill="rgb(233,99,54)" fg:x="467" fg:w="3"/><text x="37.7299%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="37.4799%" y="485" width="0.2408%" height="15" fill="rgb(213,10,37)" fg:x="467" fg:w="3"/><text x="37.7299%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="37.5602%" y="469" width="0.1605%" height="15" fill="rgb(235,143,30)" fg:x="468" fg:w="2"/><text x="37.8102%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8812%" y="357" width="0.0803%" height="15" fill="rgb(250,146,33)" fg:x="472" fg:w="1"/><text x="38.1312%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8812%" y="341" width="0.0803%" height="15" fill="rgb(226,198,42)" fg:x="472" fg:w="1"/><text x="38.1312%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.8812%" y="325" width="0.0803%" height="15" fill="rgb(222,55,6)" fg:x="472" fg:w="1"/><text x="38.1312%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.8812%" y="309" width="0.0803%" height="15" fill="rgb(213,224,31)" fg:x="472" fg:w="1"/><text x="38.1312%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.8812%" y="293" width="0.0803%" height="15" fill="rgb(226,103,35)" fg:x="472" fg:w="1"/><text x="38.1312%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.8812%" y="277" width="0.0803%" height="15" fill="rgb(205,66,45)" fg:x="472" fg:w="1"/><text x="38.1312%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8812%" y="261" width="0.0803%" height="15" fill="rgb(226,51,42)" fg:x="472" fg:w="1"/><text x="38.1312%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.8812%" y="453" width="0.1605%" height="15" fill="rgb(206,69,1)" fg:x="472" fg:w="2"/><text x="38.1312%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.8812%" y="437" width="0.1605%" height="15" fill="rgb(213,228,47)" fg:x="472" fg:w="2"/><text x="38.1312%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.8812%" y="421" width="0.1605%" height="15" fill="rgb(224,204,18)" fg:x="472" fg:w="2"/><text x="38.1312%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="37.8812%" y="405" width="0.1605%" height="15" fill="rgb(253,187,47)" fg:x="472" fg:w="2"/><text x="38.1312%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="37.8812%" y="389" width="0.1605%" height="15" fill="rgb(232,61,2)" fg:x="472" fg:w="2"/><text x="38.1312%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="37.8812%" y="373" width="0.1605%" height="15" fill="rgb(213,132,35)" fg:x="472" fg:w="2"/><text x="38.1312%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="37.9615%" y="357" width="0.0803%" height="15" fill="rgb(247,33,21)" fg:x="473" fg:w="1"/><text x="38.2115%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.9615%" y="341" width="0.0803%" height="15" fill="rgb(233,71,46)" fg:x="473" fg:w="1"/><text x="38.2115%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.8812%" y="485" width="0.2408%" height="15" fill="rgb(222,173,43)" fg:x="472" fg:w="3"/><text x="38.1312%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.8812%" y="469" width="0.2408%" height="15" fill="rgb(249,218,47)" fg:x="472" fg:w="3"/><text x="38.1312%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0417%" y="453" width="0.0803%" height="15" fill="rgb(254,185,48)" fg:x="474" fg:w="1"/><text x="38.2917%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0417%" y="437" width="0.0803%" height="15" fill="rgb(252,165,50)" fg:x="474" fg:w="1"/><text x="38.2917%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.0417%" y="421" width="0.0803%" height="15" fill="rgb(206,219,6)" fg:x="474" fg:w="1"/><text x="38.2917%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.0417%" y="405" width="0.0803%" height="15" fill="rgb(212,212,45)" fg:x="474" fg:w="1"/><text x="38.2917%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.0417%" y="389" width="0.0803%" height="15" fill="rgb(221,31,9)" fg:x="474" fg:w="1"/><text x="38.2917%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0417%" y="373" width="0.0803%" height="15" fill="rgb(234,198,39)" fg:x="474" fg:w="1"/><text x="38.2917%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0417%" y="357" width="0.0803%" height="15" fill="rgb(252,145,46)" fg:x="474" fg:w="1"/><text x="38.2917%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.0417%" y="341" width="0.0803%" height="15" fill="rgb(237,149,0)" fg:x="474" fg:w="1"/><text x="38.2917%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.0417%" y="325" width="0.0803%" height="15" fill="rgb(229,65,5)" fg:x="474" fg:w="1"/><text x="38.2917%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.0417%" y="309" width="0.0803%" height="15" fill="rgb(235,60,36)" fg:x="474" fg:w="1"/><text x="38.2917%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.0417%" y="293" width="0.0803%" height="15" fill="rgb(222,47,18)" fg:x="474" fg:w="1"/><text x="38.2917%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1220%" y="485" width="0.0803%" height="15" fill="rgb(235,114,22)" fg:x="475" fg:w="1"/><text x="38.3720%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1220%" y="469" width="0.0803%" height="15" fill="rgb(209,167,11)" fg:x="475" fg:w="1"/><text x="38.3720%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1220%" y="453" width="0.0803%" height="15" fill="rgb(251,73,18)" fg:x="475" fg:w="1"/><text x="38.3720%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.1220%" y="437" width="0.0803%" height="15" fill="rgb(217,60,17)" fg:x="475" fg:w="1"/><text x="38.3720%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.1220%" y="421" width="0.0803%" height="15" fill="rgb(224,36,37)" fg:x="475" fg:w="1"/><text x="38.3720%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.1220%" y="405" width="0.0803%" height="15" fill="rgb(211,21,32)" fg:x="475" fg:w="1"/><text x="38.3720%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.1220%" y="389" width="0.0803%" height="15" fill="rgb(231,55,48)" fg:x="475" fg:w="1"/><text x="38.3720%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.1220%" y="373" width="0.0803%" height="15" fill="rgb(227,42,18)" fg:x="475" fg:w="1"/><text x="38.3720%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.1220%" y="357" width="0.0803%" height="15" fill="rgb(217,2,27)" fg:x="475" fg:w="1"/><text x="38.3720%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.1220%" y="341" width="0.0803%" height="15" fill="rgb(251,138,23)" fg:x="475" fg:w="1"/><text x="38.3720%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.1220%" y="325" width="0.0803%" height="15" fill="rgb(226,184,11)" fg:x="475" fg:w="1"/><text x="38.3720%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.1220%" y="309" width="0.0803%" height="15" fill="rgb(242,142,12)" fg:x="475" fg:w="1"/><text x="38.3720%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.1220%" y="293" width="0.0803%" height="15" fill="rgb(234,187,18)" fg:x="475" fg:w="1"/><text x="38.3720%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.2022%" y="421" width="0.0803%" height="15" fill="rgb(237,44,42)" fg:x="476" fg:w="1"/><text x="38.4522%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (7 samples, 0.56%)</title><rect x="37.8812%" y="501" width="0.5618%" height="15" fill="rgb(211,90,23)" fg:x="472" fg:w="7"/><text x="38.1312%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="38.2022%" y="485" width="0.2408%" height="15" fill="rgb(207,81,18)" fg:x="476" fg:w="3"/><text x="38.4522%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.2022%" y="469" width="0.2408%" height="15" fill="rgb(222,107,28)" fg:x="476" fg:w="3"/><text x="38.4522%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="38.2022%" y="453" width="0.2408%" height="15" fill="rgb(237,83,52)" fg:x="476" fg:w="3"/><text x="38.4522%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.2022%" y="437" width="0.2408%" height="15" fill="rgb(208,67,11)" fg:x="476" fg:w="3"/><text x="38.4522%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.2825%" y="421" width="0.1605%" height="15" fill="rgb(249,157,49)" fg:x="477" fg:w="2"/><text x="38.5325%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.2825%" y="405" width="0.1605%" height="15" fill="rgb(243,200,1)" fg:x="477" fg:w="2"/><text x="38.5325%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.3628%" y="389" width="0.0803%" height="15" fill="rgb(225,162,37)" fg:x="478" fg:w="1"/><text x="38.6128%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="37.8010%" y="517" width="0.7223%" height="15" fill="rgb(242,92,13)" fg:x="471" fg:w="9"/><text x="38.0510%" y="527.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="38.4430%" y="501" width="0.0803%" height="15" fill="rgb(220,43,36)" fg:x="479" fg:w="1"/><text x="38.6930%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.5233%" y="469" width="0.0803%" height="15" fill="rgb(213,165,48)" fg:x="480" fg:w="1"/><text x="38.7733%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.5233%" y="453" width="0.0803%" height="15" fill="rgb(227,200,9)" fg:x="480" fg:w="1"/><text x="38.7733%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.5233%" y="437" width="0.0803%" height="15" fill="rgb(221,222,28)" fg:x="480" fg:w="1"/><text x="38.7733%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.5233%" y="485" width="0.1605%" height="15" fill="rgb(223,142,26)" fg:x="480" fg:w="2"/><text x="38.7733%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6035%" y="469" width="0.0803%" height="15" fill="rgb(243,46,9)" fg:x="481" fg:w="1"/><text x="38.8535%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="38.5233%" y="501" width="0.3210%" height="15" fill="rgb(250,56,11)" fg:x="480" fg:w="4"/><text x="38.7733%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.6838%" y="485" width="0.1605%" height="15" fill="rgb(229,113,5)" fg:x="482" fg:w="2"/><text x="38.9338%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.6838%" y="469" width="0.1605%" height="15" fill="rgb(244,108,28)" fg:x="482" fg:w="2"/><text x="38.9338%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.7640%" y="453" width="0.0803%" height="15" fill="rgb(242,119,50)" fg:x="483" fg:w="1"/><text x="39.0140%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.8443%" y="437" width="0.0803%" height="15" fill="rgb(224,164,23)" fg:x="484" fg:w="1"/><text x="39.0943%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.8443%" y="421" width="0.0803%" height="15" fill="rgb(214,227,44)" fg:x="484" fg:w="1"/><text x="39.0943%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="38.8443%" y="501" width="0.1605%" height="15" fill="rgb(238,202,4)" fg:x="484" fg:w="2"/><text x="39.0943%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="38.8443%" y="485" width="0.1605%" height="15" fill="rgb(213,190,30)" fg:x="484" fg:w="2"/><text x="39.0943%" y="495.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="38.8443%" y="469" width="0.1605%" height="15" fill="rgb(239,15,2)" fg:x="484" fg:w="2"/><text x="39.0943%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="38.8443%" y="453" width="0.1605%" height="15" fill="rgb(249,229,4)" fg:x="484" fg:w="2"/><text x="39.0943%" y="463.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="38.9246%" y="437" width="0.0803%" height="15" fill="rgb(239,75,44)" fg:x="485" fg:w="1"/><text x="39.1746%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.9246%" y="421" width="0.0803%" height="15" fill="rgb(251,206,23)" fg:x="485" fg:w="1"/><text x="39.1746%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="38.9246%" y="405" width="0.0803%" height="15" fill="rgb(215,208,0)" fg:x="485" fg:w="1"/><text x="39.1746%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="38.9246%" y="389" width="0.0803%" height="15" fill="rgb(230,75,50)" fg:x="485" fg:w="1"/><text x="39.1746%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.0048%" y="437" width="0.2408%" height="15" fill="rgb(246,180,39)" fg:x="486" fg:w="3"/><text x="39.2548%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.0048%" y="421" width="0.2408%" height="15" fill="rgb(249,175,24)" fg:x="486" fg:w="3"/><text x="39.2548%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.0851%" y="405" width="0.1605%" height="15" fill="rgb(247,176,22)" fg:x="487" fg:w="2"/><text x="39.3351%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.0851%" y="389" width="0.1605%" height="15" fill="rgb(241,100,24)" fg:x="487" fg:w="2"/><text x="39.3351%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.0851%" y="373" width="0.1605%" height="15" fill="rgb(233,4,35)" fg:x="487" fg:w="2"/><text x="39.3351%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="39.0851%" y="357" width="0.1605%" height="15" fill="rgb(211,164,46)" fg:x="487" fg:w="2"/><text x="39.3351%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="39.0851%" y="341" width="0.1605%" height="15" fill="rgb(242,99,53)" fg:x="487" fg:w="2"/><text x="39.3351%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="39.0851%" y="325" width="0.1605%" height="15" fill="rgb(243,45,33)" fg:x="487" fg:w="2"/><text x="39.3351%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.0851%" y="309" width="0.1605%" height="15" fill="rgb(217,55,21)" fg:x="487" fg:w="2"/><text x="39.3351%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.0851%" y="293" width="0.1605%" height="15" fill="rgb(245,145,46)" fg:x="487" fg:w="2"/><text x="39.3351%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="39.0851%" y="277" width="0.1605%" height="15" fill="rgb(215,112,45)" fg:x="487" fg:w="2"/><text x="39.3351%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="39.0851%" y="261" width="0.1605%" height="15" fill="rgb(228,104,16)" fg:x="487" fg:w="2"/><text x="39.3351%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="39.0851%" y="245" width="0.1605%" height="15" fill="rgb(239,186,38)" fg:x="487" fg:w="2"/><text x="39.3351%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="39.0851%" y="229" width="0.1605%" height="15" fill="rgb(228,38,35)" fg:x="487" fg:w="2"/><text x="39.3351%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.0851%" y="213" width="0.1605%" height="15" fill="rgb(251,42,40)" fg:x="487" fg:w="2"/><text x="39.3351%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.2456%" y="405" width="0.0803%" height="15" fill="rgb(210,51,19)" fg:x="489" fg:w="1"/><text x="39.4956%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.2456%" y="389" width="0.0803%" height="15" fill="rgb(236,94,42)" fg:x="489" fg:w="1"/><text x="39.4956%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.3258%" y="341" width="0.0803%" height="15" fill="rgb(239,167,16)" fg:x="490" fg:w="1"/><text x="39.5758%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (6 samples, 0.48%)</title><rect x="39.0048%" y="453" width="0.4815%" height="15" fill="rgb(252,175,31)" fg:x="486" fg:w="6"/><text x="39.2548%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="39.2456%" y="437" width="0.2408%" height="15" fill="rgb(206,166,30)" fg:x="489" fg:w="3"/><text x="39.4956%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.2456%" y="421" width="0.2408%" height="15" fill="rgb(206,209,37)" fg:x="489" fg:w="3"/><text x="39.4956%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.3258%" y="405" width="0.1605%" height="15" fill="rgb(226,91,4)" fg:x="490" fg:w="2"/><text x="39.5758%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.3258%" y="389" width="0.1605%" height="15" fill="rgb(222,167,0)" fg:x="490" fg:w="2"/><text x="39.5758%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.3258%" y="373" width="0.1605%" height="15" fill="rgb(211,70,14)" fg:x="490" fg:w="2"/><text x="39.5758%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.3258%" y="357" width="0.1605%" height="15" fill="rgb(214,84,42)" fg:x="490" fg:w="2"/><text x="39.5758%" y="367.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="39.4061%" y="341" width="0.0803%" height="15" fill="rgb(235,157,37)" fg:x="491" fg:w="1"/><text x="39.6561%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="39.4864%" y="453" width="0.0803%" height="15" fill="rgb(225,13,6)" fg:x="492" fg:w="1"/><text x="39.7364%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.4864%" y="437" width="0.0803%" height="15" fill="rgb(205,202,1)" fg:x="492" fg:w="1"/><text x="39.7364%" y="447.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="39.5666%" y="453" width="0.0803%" height="15" fill="rgb(232,195,26)" fg:x="493" fg:w="1"/><text x="39.8166%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.5666%" y="437" width="0.0803%" height="15" fill="rgb(208,102,26)" fg:x="493" fg:w="1"/><text x="39.8166%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.5666%" y="421" width="0.0803%" height="15" fill="rgb(215,41,39)" fg:x="493" fg:w="1"/><text x="39.8166%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.72%)</title><rect x="39.0048%" y="485" width="0.7223%" height="15" fill="rgb(247,139,11)" fg:x="486" fg:w="9"/><text x="39.2548%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (9 samples, 0.72%)</title><rect x="39.0048%" y="469" width="0.7223%" height="15" fill="rgb(243,99,6)" fg:x="486" fg:w="9"/><text x="39.2548%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="39.6469%" y="453" width="0.0803%" height="15" fill="rgb(230,168,48)" fg:x="494" fg:w="1"/><text x="39.8969%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="39.6469%" y="437" width="0.0803%" height="15" fill="rgb(238,227,13)" fg:x="494" fg:w="1"/><text x="39.8969%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="39.6469%" y="421" width="0.0803%" height="15" fill="rgb(209,109,13)" fg:x="494" fg:w="1"/><text x="39.8969%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="39.6469%" y="405" width="0.0803%" height="15" fill="rgb(228,195,1)" fg:x="494" fg:w="1"/><text x="39.8969%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="39.7271%" y="485" width="0.0803%" height="15" fill="rgb(230,218,0)" fg:x="495" fg:w="1"/><text x="39.9771%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.7271%" y="469" width="0.0803%" height="15" fill="rgb(206,1,45)" fg:x="495" fg:w="1"/><text x="39.9771%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8074%" y="453" width="0.0803%" height="15" fill="rgb(209,124,26)" fg:x="496" fg:w="1"/><text x="40.0574%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8876%" y="453" width="0.0803%" height="15" fill="rgb(220,59,8)" fg:x="497" fg:w="1"/><text x="40.1376%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8876%" y="437" width="0.0803%" height="15" fill="rgb(251,41,37)" fg:x="497" fg:w="1"/><text x="40.1376%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="39.9679%" y="453" width="0.0803%" height="15" fill="rgb(239,152,21)" fg:x="498" fg:w="1"/><text x="40.2179%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.9679%" y="437" width="0.0803%" height="15" fill="rgb(226,32,1)" fg:x="498" fg:w="1"/><text x="40.2179%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9679%" y="421" width="0.0803%" height="15" fill="rgb(230,154,36)" fg:x="498" fg:w="1"/><text x="40.2179%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9679%" y="405" width="0.0803%" height="15" fill="rgb(208,228,43)" fg:x="498" fg:w="1"/><text x="40.2179%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9679%" y="389" width="0.0803%" height="15" fill="rgb(214,203,3)" fg:x="498" fg:w="1"/><text x="40.2179%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.1284%" y="357" width="0.0803%" height="15" fill="rgb(207,149,29)" fg:x="500" fg:w="1"/><text x="40.3784%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="40.1284%" y="389" width="0.1605%" height="15" fill="rgb(250,105,7)" fg:x="500" fg:w="2"/><text x="40.3784%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="40.1284%" y="373" width="0.1605%" height="15" fill="rgb(232,222,16)" fg:x="500" fg:w="2"/><text x="40.3784%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="40.2087%" y="357" width="0.0803%" height="15" fill="rgb(209,32,24)" fg:x="501" fg:w="1"/><text x="40.4587%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.2087%" y="341" width="0.0803%" height="15" fill="rgb(225,13,6)" fg:x="501" fg:w="1"/><text x="40.4587%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="40.1284%" y="437" width="0.2408%" height="15" fill="rgb(245,226,26)" fg:x="500" fg:w="3"/><text x="40.3784%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="40.1284%" y="421" width="0.2408%" height="15" fill="rgb(229,178,27)" fg:x="500" fg:w="3"/><text x="40.3784%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="40.1284%" y="405" width="0.2408%" height="15" fill="rgb(205,227,28)" fg:x="500" fg:w="3"/><text x="40.3784%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.2889%" y="389" width="0.0803%" height="15" fill="rgb(210,191,45)" fg:x="502" fg:w="1"/><text x="40.5389%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_entity (18 samples, 1.44%)</title><rect x="39.0048%" y="501" width="1.4446%" height="15" fill="rgb(206,124,16)" fg:x="486" fg:w="18"/><text x="39.2548%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="39.8074%" y="485" width="0.6421%" height="15" fill="rgb(210,162,0)" fg:x="496" fg:w="8"/><text x="40.0574%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="39.8074%" y="469" width="0.6421%" height="15" fill="rgb(211,54,38)" fg:x="496" fg:w="8"/><text x="40.0574%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="40.0482%" y="453" width="0.4013%" height="15" fill="rgb(248,192,3)" fg:x="499" fg:w="5"/><text x="40.2982%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3692%" y="437" width="0.0803%" height="15" fill="rgb(233,187,18)" fg:x="503" fg:w="1"/><text x="40.6192%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (25 samples, 2.01%)</title><rect x="38.5233%" y="517" width="2.0064%" height="15" fill="rgb(237,208,14)" fg:x="480" fg:w="25"/><text x="38.7733%" y="527.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="40.4494%" y="501" width="0.0803%" height="15" fill="rgb(212,77,1)" fg:x="504" fg:w="1"/><text x="40.6994%" y="511.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="40.4494%" y="485" width="0.0803%" height="15" fill="rgb(210,163,22)" fg:x="504" fg:w="1"/><text x="40.6994%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="40.4494%" y="469" width="0.0803%" height="15" fill="rgb(250,58,28)" fg:x="504" fg:w="1"/><text x="40.6994%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6100%" y="485" width="0.0803%" height="15" fill="rgb(254,28,41)" fg:x="506" fg:w="1"/><text x="40.8600%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6100%" y="469" width="0.0803%" height="15" fill="rgb(237,162,36)" fg:x="506" fg:w="1"/><text x="40.8600%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6100%" y="453" width="0.0803%" height="15" fill="rgb(232,56,6)" fg:x="506" fg:w="1"/><text x="40.8600%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6100%" y="437" width="0.0803%" height="15" fill="rgb(216,127,42)" fg:x="506" fg:w="1"/><text x="40.8600%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.6100%" y="421" width="0.0803%" height="15" fill="rgb(241,69,15)" fg:x="506" fg:w="1"/><text x="40.8600%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.6100%" y="405" width="0.0803%" height="15" fill="rgb(227,180,19)" fg:x="506" fg:w="1"/><text x="40.8600%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.6100%" y="389" width="0.0803%" height="15" fill="rgb(231,188,29)" fg:x="506" fg:w="1"/><text x="40.8600%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6100%" y="373" width="0.0803%" height="15" fill="rgb(224,176,27)" fg:x="506" fg:w="1"/><text x="40.8600%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6100%" y="357" width="0.0803%" height="15" fill="rgb(249,214,19)" fg:x="506" fg:w="1"/><text x="40.8600%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.6100%" y="341" width="0.0803%" height="15" fill="rgb(240,0,4)" fg:x="506" fg:w="1"/><text x="40.8600%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.6100%" y="325" width="0.0803%" height="15" fill="rgb(233,28,41)" fg:x="506" fg:w="1"/><text x="40.8600%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.6100%" y="309" width="0.0803%" height="15" fill="rgb(220,90,51)" fg:x="506" fg:w="1"/><text x="40.8600%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.6100%" y="293" width="0.0803%" height="15" fill="rgb(250,52,22)" fg:x="506" fg:w="1"/><text x="40.8600%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6100%" y="277" width="0.0803%" height="15" fill="rgb(231,152,36)" fg:x="506" fg:w="1"/><text x="40.8600%" y="287.50"></text></g><g><title>plugins_core::build::Build::save (38 samples, 3.05%)</title><rect x="37.7207%" y="533" width="3.0498%" height="15" fill="rgb(250,218,4)" fg:x="470" fg:w="38"/><text x="37.9707%" y="543.50">plu..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="40.5297%" y="517" width="0.2408%" height="15" fill="rgb(210,38,21)" fg:x="505" fg:w="3"/><text x="40.7797%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.5297%" y="501" width="0.2408%" height="15" fill="rgb(230,75,13)" fg:x="505" fg:w="3"/><text x="40.7797%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6902%" y="485" width="0.0803%" height="15" fill="rgb(250,68,53)" fg:x="507" fg:w="1"/><text x="40.9402%" y="495.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="40.7705%" y="533" width="0.0803%" height="15" fill="rgb(250,210,16)" fg:x="508" fg:w="1"/><text x="41.0205%" y="543.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="40.7705%" y="517" width="0.0803%" height="15" fill="rgb(240,132,5)" fg:x="508" fg:w="1"/><text x="41.0205%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="40.7705%" y="501" width="0.0803%" height="15" fill="rgb(222,148,48)" fg:x="508" fg:w="1"/><text x="41.0205%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="40.7705%" y="485" width="0.0803%" height="15" fill="rgb(247,181,24)" fg:x="508" fg:w="1"/><text x="41.0205%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.7705%" y="469" width="0.0803%" height="15" fill="rgb(239,5,31)" fg:x="508" fg:w="1"/><text x="41.0205%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="40.7705%" y="453" width="0.0803%" height="15" fill="rgb(241,152,38)" fg:x="508" fg:w="1"/><text x="41.0205%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="40.7705%" y="437" width="0.0803%" height="15" fill="rgb(246,200,37)" fg:x="508" fg:w="1"/><text x="41.0205%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="40.8507%" y="469" width="0.0803%" height="15" fill="rgb(243,210,26)" fg:x="509" fg:w="1"/><text x="41.1007%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="40.8507%" y="453" width="0.0803%" height="15" fill="rgb(222,22,22)" fg:x="509" fg:w="1"/><text x="41.1007%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.8507%" y="437" width="0.0803%" height="15" fill="rgb(208,129,28)" fg:x="509" fg:w="1"/><text x="41.1007%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.9310%" y="437" width="0.0803%" height="15" fill="rgb(254,169,28)" fg:x="510" fg:w="1"/><text x="41.1810%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="40.9310%" y="469" width="0.2408%" height="15" fill="rgb(225,45,17)" fg:x="510" fg:w="3"/><text x="41.1810%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="40.9310%" y="453" width="0.2408%" height="15" fill="rgb(232,199,2)" fg:x="510" fg:w="3"/><text x="41.1810%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.0112%" y="437" width="0.1605%" height="15" fill="rgb(235,33,40)" fg:x="511" fg:w="2"/><text x="41.2612%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.0112%" y="421" width="0.1605%" height="15" fill="rgb(237,89,50)" fg:x="511" fg:w="2"/><text x="41.2612%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="41.0112%" y="405" width="0.1605%" height="15" fill="rgb(238,126,5)" fg:x="511" fg:w="2"/><text x="41.2612%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.0112%" y="389" width="0.1605%" height="15" fill="rgb(247,214,42)" fg:x="511" fg:w="2"/><text x="41.2612%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.0112%" y="373" width="0.1605%" height="15" fill="rgb(238,60,45)" fg:x="511" fg:w="2"/><text x="41.2612%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.0915%" y="357" width="0.0803%" height="15" fill="rgb(225,69,44)" fg:x="512" fg:w="1"/><text x="41.3415%" y="367.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.40%)</title><rect x="40.8507%" y="501" width="0.4013%" height="15" fill="rgb(241,13,44)" fg:x="509" fg:w="5"/><text x="41.1007%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="40.8507%" y="485" width="0.4013%" height="15" fill="rgb(227,121,22)" fg:x="509" fg:w="5"/><text x="41.1007%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1717%" y="469" width="0.0803%" height="15" fill="rgb(231,160,23)" fg:x="513" fg:w="1"/><text x="41.4217%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1717%" y="453" width="0.0803%" height="15" fill="rgb(250,179,43)" fg:x="513" fg:w="1"/><text x="41.4217%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.1717%" y="437" width="0.0803%" height="15" fill="rgb(233,54,46)" fg:x="513" fg:w="1"/><text x="41.4217%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.1717%" y="421" width="0.0803%" height="15" fill="rgb(247,120,42)" fg:x="513" fg:w="1"/><text x="41.4217%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.1717%" y="405" width="0.0803%" height="15" fill="rgb(221,219,12)" fg:x="513" fg:w="1"/><text x="41.4217%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1717%" y="389" width="0.0803%" height="15" fill="rgb(211,126,8)" fg:x="513" fg:w="1"/><text x="41.4217%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1717%" y="373" width="0.0803%" height="15" fill="rgb(218,154,33)" fg:x="513" fg:w="1"/><text x="41.4217%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.1717%" y="357" width="0.0803%" height="15" fill="rgb(212,199,16)" fg:x="513" fg:w="1"/><text x="41.4217%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.1717%" y="341" width="0.0803%" height="15" fill="rgb(236,215,46)" fg:x="513" fg:w="1"/><text x="41.4217%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.1717%" y="325" width="0.0803%" height="15" fill="rgb(232,32,22)" fg:x="513" fg:w="1"/><text x="41.4217%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.1717%" y="309" width="0.0803%" height="15" fill="rgb(234,79,15)" fg:x="513" fg:w="1"/><text x="41.4217%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.2520%" y="469" width="0.0803%" height="15" fill="rgb(235,187,47)" fg:x="514" fg:w="1"/><text x="41.5020%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="41.2520%" y="485" width="0.1605%" height="15" fill="rgb(244,69,37)" fg:x="514" fg:w="2"/><text x="41.5020%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.3323%" y="469" width="0.0803%" height="15" fill="rgb(249,140,25)" fg:x="515" fg:w="1"/><text x="41.5823%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="41.3323%" y="453" width="0.0803%" height="15" fill="rgb(213,69,8)" fg:x="515" fg:w="1"/><text x="41.5823%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.3323%" y="437" width="0.0803%" height="15" fill="rgb(220,136,2)" fg:x="515" fg:w="1"/><text x="41.5823%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.4125%" y="405" width="0.0803%" height="15" fill="rgb(237,50,36)" fg:x="516" fg:w="1"/><text x="41.6625%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="41.4125%" y="469" width="0.1605%" height="15" fill="rgb(226,18,11)" fg:x="516" fg:w="2"/><text x="41.6625%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="41.4125%" y="453" width="0.1605%" height="15" fill="rgb(243,156,2)" fg:x="516" fg:w="2"/><text x="41.6625%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="41.4125%" y="437" width="0.1605%" height="15" fill="rgb(218,8,34)" fg:x="516" fg:w="2"/><text x="41.6625%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="41.4125%" y="421" width="0.1605%" height="15" fill="rgb(250,94,35)" fg:x="516" fg:w="2"/><text x="41.6625%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4928%" y="405" width="0.0803%" height="15" fill="rgb(229,127,21)" fg:x="517" fg:w="1"/><text x="41.7428%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4928%" y="389" width="0.0803%" height="15" fill="rgb(234,49,5)" fg:x="517" fg:w="1"/><text x="41.7428%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.4928%" y="373" width="0.0803%" height="15" fill="rgb(248,12,16)" fg:x="517" fg:w="1"/><text x="41.7428%" y="383.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="41.4125%" y="485" width="0.2408%" height="15" fill="rgb(208,220,31)" fg:x="516" fg:w="3"/><text x="41.6625%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5730%" y="469" width="0.0803%" height="15" fill="rgb(243,184,0)" fg:x="518" fg:w="1"/><text x="41.8230%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (11 samples, 0.88%)</title><rect x="40.8507%" y="533" width="0.8828%" height="15" fill="rgb(217,38,21)" fg:x="509" fg:w="11"/><text x="41.1007%" y="543.50"></text></g><g><title>plugins_core::tools::set_occupying (11 samples, 0.88%)</title><rect x="40.8507%" y="517" width="0.8828%" height="15" fill="rgb(239,120,45)" fg:x="509" fg:w="11"/><text x="41.1007%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (6 samples, 0.48%)</title><rect x="41.2520%" y="501" width="0.4815%" height="15" fill="rgb(235,33,2)" fg:x="514" fg:w="6"/><text x="41.5020%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="41.6533%" y="485" width="0.0803%" height="15" fill="rgb(249,161,5)" fg:x="519" fg:w="1"/><text x="41.9033%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.6533%" y="469" width="0.0803%" height="15" fill="rgb(250,165,48)" fg:x="519" fg:w="1"/><text x="41.9033%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="41.8941%" y="469" width="0.0803%" height="15" fill="rgb(221,23,45)" fg:x="522" fg:w="1"/><text x="42.1441%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="41.8941%" y="453" width="0.0803%" height="15" fill="rgb(217,108,46)" fg:x="522" fg:w="1"/><text x="42.1441%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="41.8941%" y="437" width="0.0803%" height="15" fill="rgb(254,26,35)" fg:x="522" fg:w="1"/><text x="42.1441%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.8941%" y="421" width="0.0803%" height="15" fill="rgb(218,223,28)" fg:x="522" fg:w="1"/><text x="42.1441%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="41.7335%" y="517" width="0.3210%" height="15" fill="rgb(242,27,47)" fg:x="520" fg:w="4"/><text x="41.9835%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="41.7335%" y="501" width="0.3210%" height="15" fill="rgb(218,39,35)" fg:x="520" fg:w="4"/><text x="41.9835%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="41.7335%" y="485" width="0.3210%" height="15" fill="rgb(232,127,16)" fg:x="520" fg:w="4"/><text x="41.9835%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.9743%" y="469" width="0.0803%" height="15" fill="rgb(231,219,51)" fg:x="523" fg:w="1"/><text x="42.2243%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9743%" y="453" width="0.0803%" height="15" fill="rgb(217,220,46)" fg:x="523" fg:w="1"/><text x="42.2243%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.9743%" y="437" width="0.0803%" height="15" fill="rgb(230,75,1)" fg:x="523" fg:w="1"/><text x="42.2243%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0546%" y="421" width="0.0803%" height="15" fill="rgb(218,2,8)" fg:x="524" fg:w="1"/><text x="42.3046%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (7 samples, 0.56%)</title><rect x="41.7335%" y="533" width="0.5618%" height="15" fill="rgb(206,111,30)" fg:x="520" fg:w="7"/><text x="41.9835%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="42.0546%" y="517" width="0.2408%" height="15" fill="rgb(209,135,6)" fg:x="524" fg:w="3"/><text x="42.3046%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="42.0546%" y="501" width="0.2408%" height="15" fill="rgb(205,169,10)" fg:x="524" fg:w="3"/><text x="42.3046%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="42.0546%" y="485" width="0.2408%" height="15" fill="rgb(212,204,38)" fg:x="524" fg:w="3"/><text x="42.3046%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (3 samples, 0.24%)</title><rect x="42.0546%" y="469" width="0.2408%" height="15" fill="rgb(205,199,14)" fg:x="524" fg:w="3"/><text x="42.3046%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (3 samples, 0.24%)</title><rect x="42.0546%" y="453" width="0.2408%" height="15" fill="rgb(212,4,6)" fg:x="524" fg:w="3"/><text x="42.3046%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="42.0546%" y="437" width="0.2408%" height="15" fill="rgb(250,15,10)" fg:x="524" fg:w="3"/><text x="42.3046%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="42.1348%" y="421" width="0.1605%" height="15" fill="rgb(212,49,51)" fg:x="525" fg:w="2"/><text x="42.3848%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="42.1348%" y="405" width="0.1605%" height="15" fill="rgb(235,21,9)" fg:x="525" fg:w="2"/><text x="42.3848%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.1348%" y="389" width="0.1605%" height="15" fill="rgb(251,31,32)" fg:x="525" fg:w="2"/><text x="42.3848%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.1348%" y="373" width="0.1605%" height="15" fill="rgb(246,23,9)" fg:x="525" fg:w="2"/><text x="42.3848%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::OpenedScopeRefMut&lt;plugins_core::carrying::model::Containing,kernel::model::entity::Entity&gt;&gt; (2 samples, 0.16%)</title><rect x="42.2953%" y="517" width="0.1605%" height="15" fill="rgb(225,216,14)" fg:x="527" fg:w="2"/><text x="42.5453%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="42.3756%" y="501" width="0.0803%" height="15" fill="rgb(215,200,26)" fg:x="528" fg:w="1"/><text x="42.6256%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3756%" y="485" width="0.0803%" height="15" fill="rgb(237,130,47)" fg:x="528" fg:w="1"/><text x="42.6256%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="42.4559%" y="453" width="0.0803%" height="15" fill="rgb(247,74,14)" fg:x="529" fg:w="1"/><text x="42.7059%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="42.4559%" y="485" width="0.1605%" height="15" fill="rgb(254,97,46)" fg:x="529" fg:w="2"/><text x="42.7059%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="42.4559%" y="469" width="0.1605%" height="15" fill="rgb(234,191,1)" fg:x="529" fg:w="2"/><text x="42.7059%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.5361%" y="453" width="0.0803%" height="15" fill="rgb(215,165,14)" fg:x="530" fg:w="1"/><text x="42.7861%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.5361%" y="437" width="0.0803%" height="15" fill="rgb(230,182,6)" fg:x="530" fg:w="1"/><text x="42.7861%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.5361%" y="421" width="0.0803%" height="15" fill="rgb(210,127,39)" fg:x="530" fg:w="1"/><text x="42.7861%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.6164%" y="453" width="0.0803%" height="15" fill="rgb(223,212,51)" fg:x="531" fg:w="1"/><text x="42.8664%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.6164%" y="437" width="0.0803%" height="15" fill="rgb(226,176,43)" fg:x="531" fg:w="1"/><text x="42.8664%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.6164%" y="421" width="0.0803%" height="15" fill="rgb(222,155,4)" fg:x="531" fg:w="1"/><text x="42.8664%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="42.4559%" y="517" width="0.3210%" height="15" fill="rgb(215,149,7)" fg:x="529" fg:w="4"/><text x="42.7059%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="42.4559%" y="501" width="0.3210%" height="15" fill="rgb(252,199,23)" fg:x="529" fg:w="4"/><text x="42.7059%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="42.6164%" y="485" width="0.1605%" height="15" fill="rgb(245,52,29)" fg:x="531" fg:w="2"/><text x="42.8664%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="42.6164%" y="469" width="0.1605%" height="15" fill="rgb(221,228,19)" fg:x="531" fg:w="2"/><text x="42.8664%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6966%" y="453" width="0.0803%" height="15" fill="rgb(253,101,6)" fg:x="532" fg:w="1"/><text x="42.9466%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.8571%" y="469" width="0.0803%" height="15" fill="rgb(211,130,8)" fg:x="534" fg:w="1"/><text x="43.1071%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9374%" y="421" width="0.0803%" height="15" fill="rgb(238,37,53)" fg:x="535" fg:w="1"/><text x="43.1874%" y="431.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="42.7769%" y="517" width="0.3210%" height="15" fill="rgb(235,145,5)" fg:x="533" fg:w="4"/><text x="43.0269%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="42.7769%" y="501" width="0.3210%" height="15" fill="rgb(244,12,43)" fg:x="533" fg:w="4"/><text x="43.0269%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="42.7769%" y="485" width="0.3210%" height="15" fill="rgb(246,195,24)" fg:x="533" fg:w="4"/><text x="43.0269%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="42.9374%" y="469" width="0.1605%" height="15" fill="rgb(235,163,6)" fg:x="535" fg:w="2"/><text x="43.1874%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="42.9374%" y="453" width="0.1605%" height="15" fill="rgb(236,218,17)" fg:x="535" fg:w="2"/><text x="43.1874%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="42.9374%" y="437" width="0.1605%" height="15" fill="rgb(235,12,38)" fg:x="535" fg:w="2"/><text x="43.1874%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0177%" y="421" width="0.0803%" height="15" fill="rgb(225,195,33)" fg:x="536" fg:w="1"/><text x="43.2677%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="43.0979%" y="501" width="0.0803%" height="15" fill="rgb(238,54,35)" fg:x="537" fg:w="1"/><text x="43.3479%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0979%" y="485" width="0.0803%" height="15" fill="rgb(238,33,7)" fg:x="537" fg:w="1"/><text x="43.3479%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0979%" y="469" width="0.0803%" height="15" fill="rgb(245,5,14)" fg:x="537" fg:w="1"/><text x="43.3479%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0979%" y="453" width="0.0803%" height="15" fill="rgb(251,95,31)" fg:x="537" fg:w="1"/><text x="43.3479%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0979%" y="437" width="0.0803%" height="15" fill="rgb(222,15,46)" fg:x="537" fg:w="1"/><text x="43.3479%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0979%" y="421" width="0.0803%" height="15" fill="rgb(226,182,24)" fg:x="537" fg:w="1"/><text x="43.3479%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1782%" y="437" width="0.0803%" height="15" fill="rgb(229,105,41)" fg:x="538" fg:w="1"/><text x="43.4282%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1782%" y="421" width="0.0803%" height="15" fill="rgb(216,99,53)" fg:x="538" fg:w="1"/><text x="43.4282%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1782%" y="405" width="0.0803%" height="15" fill="rgb(253,26,20)" fg:x="538" fg:w="1"/><text x="43.4282%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.1782%" y="389" width="0.0803%" height="15" fill="rgb(249,155,28)" fg:x="538" fg:w="1"/><text x="43.4282%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.1782%" y="373" width="0.0803%" height="15" fill="rgb(241,221,2)" fg:x="538" fg:w="1"/><text x="43.4282%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.1782%" y="357" width="0.0803%" height="15" fill="rgb(219,124,6)" fg:x="538" fg:w="1"/><text x="43.4282%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.1782%" y="341" width="0.0803%" height="15" fill="rgb(233,37,6)" fg:x="538" fg:w="1"/><text x="43.4282%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.1782%" y="325" width="0.0803%" height="15" fill="rgb(238,20,14)" fg:x="538" fg:w="1"/><text x="43.4282%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2584%" y="437" width="0.0803%" height="15" fill="rgb(232,106,27)" fg:x="539" fg:w="1"/><text x="43.5084%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="43.1782%" y="469" width="0.2408%" height="15" fill="rgb(246,157,24)" fg:x="538" fg:w="3"/><text x="43.4282%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="43.1782%" y="453" width="0.2408%" height="15" fill="rgb(214,153,10)" fg:x="538" fg:w="3"/><text x="43.4282%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.3387%" y="437" width="0.0803%" height="15" fill="rgb(212,94,6)" fg:x="540" fg:w="1"/><text x="43.5887%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3387%" y="421" width="0.0803%" height="15" fill="rgb(254,25,27)" fg:x="540" fg:w="1"/><text x="43.5887%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="43.0979%" y="517" width="0.4013%" height="15" fill="rgb(250,43,52)" fg:x="537" fg:w="5"/><text x="43.3479%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="43.1782%" y="501" width="0.3210%" height="15" fill="rgb(221,226,40)" fg:x="538" fg:w="4"/><text x="43.4282%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="43.1782%" y="485" width="0.3210%" height="15" fill="rgb(235,162,34)" fg:x="538" fg:w="4"/><text x="43.4282%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="43.4189%" y="469" width="0.0803%" height="15" fill="rgb(239,24,26)" fg:x="541" fg:w="1"/><text x="43.6689%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="43.4189%" y="453" width="0.0803%" height="15" fill="rgb(244,226,11)" fg:x="541" fg:w="1"/><text x="43.6689%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.4189%" y="437" width="0.0803%" height="15" fill="rgb(225,23,10)" fg:x="541" fg:w="1"/><text x="43.6689%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4189%" y="421" width="0.0803%" height="15" fill="rgb(249,125,6)" fg:x="541" fg:w="1"/><text x="43.6689%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="43.4189%" y="405" width="0.0803%" height="15" fill="rgb(246,212,12)" fg:x="541" fg:w="1"/><text x="43.6689%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4189%" y="389" width="0.0803%" height="15" fill="rgb(230,43,32)" fg:x="541" fg:w="1"/><text x="43.6689%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.4189%" y="373" width="0.0803%" height="15" fill="rgb(210,95,23)" fg:x="541" fg:w="1"/><text x="43.6689%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4189%" y="357" width="0.0803%" height="15" fill="rgb(229,103,33)" fg:x="541" fg:w="1"/><text x="43.6689%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="43.4992%" y="485" width="0.0803%" height="15" fill="rgb(222,104,27)" fg:x="542" fg:w="1"/><text x="43.7492%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4992%" y="469" width="0.0803%" height="15" fill="rgb(239,221,23)" fg:x="542" fg:w="1"/><text x="43.7492%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="43.4992%" y="453" width="0.0803%" height="15" fill="rgb(222,98,21)" fg:x="542" fg:w="1"/><text x="43.7492%" y="463.50"></text></g><g><title>plugins_core::tools::set_container (17 samples, 1.36%)</title><rect x="42.2953%" y="533" width="1.3644%" height="15" fill="rgb(231,101,20)" fg:x="527" fg:w="17"/><text x="42.5453%" y="543.50"></text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="43.4992%" y="517" width="0.1605%" height="15" fill="rgb(215,150,22)" fg:x="542" fg:w="2"/><text x="43.7492%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="43.4992%" y="501" width="0.1605%" height="15" fill="rgb(248,3,34)" fg:x="542" fg:w="2"/><text x="43.7492%" y="511.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="43.5795%" y="485" width="0.0803%" height="15" fill="rgb(220,141,21)" fg:x="543" fg:w="1"/><text x="43.8295%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.5795%" y="469" width="0.0803%" height="15" fill="rgb(223,41,48)" fg:x="543" fg:w="1"/><text x="43.8295%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="43.5795%" y="453" width="0.0803%" height="15" fill="rgb(247,12,5)" fg:x="543" fg:w="1"/><text x="43.8295%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.5795%" y="437" width="0.0803%" height="15" fill="rgb(206,173,10)" fg:x="543" fg:w="1"/><text x="43.8295%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.5795%" y="421" width="0.0803%" height="15" fill="rgb(233,214,37)" fg:x="543" fg:w="1"/><text x="43.8295%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.5795%" y="405" width="0.0803%" height="15" fill="rgb(238,86,43)" fg:x="543" fg:w="1"/><text x="43.8295%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.5795%" y="389" width="0.0803%" height="15" fill="rgb(212,182,8)" fg:x="543" fg:w="1"/><text x="43.8295%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (224 samples, 17.98%)</title><rect x="25.7624%" y="549" width="17.9775%" height="15" fill="rgb(240,91,47)" fg:x="321" fg:w="224"/><text x="26.0124%" y="559.50">plugins_core::build::BuildSu..</text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="43.6597%" y="533" width="0.0803%" height="15" fill="rgb(209,138,26)" fg:x="544" fg:w="1"/><text x="43.9097%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="43.6597%" y="517" width="0.0803%" height="15" fill="rgb(231,163,20)" fg:x="544" fg:w="1"/><text x="43.9097%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="43.7400%" y="517" width="0.1605%" height="15" fill="rgb(214,91,54)" fg:x="545" fg:w="2"/><text x="43.9900%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="43.7400%" y="501" width="0.1605%" height="15" fill="rgb(230,32,17)" fg:x="545" fg:w="2"/><text x="43.9900%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="43.8202%" y="485" width="0.0803%" height="15" fill="rgb(231,34,34)" fg:x="546" fg:w="1"/><text x="44.0702%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.8202%" y="469" width="0.0803%" height="15" fill="rgb(224,228,27)" fg:x="546" fg:w="1"/><text x="44.0702%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.8202%" y="453" width="0.0803%" height="15" fill="rgb(219,35,40)" fg:x="546" fg:w="1"/><text x="44.0702%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.8202%" y="437" width="0.0803%" height="15" fill="rgb(234,42,8)" fg:x="546" fg:w="1"/><text x="44.0702%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.8202%" y="421" width="0.0803%" height="15" fill="rgb(226,75,22)" fg:x="546" fg:w="1"/><text x="44.0702%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="43.8202%" y="405" width="0.0803%" height="15" fill="rgb(242,203,28)" fg:x="546" fg:w="1"/><text x="44.0702%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="43.8202%" y="389" width="0.0803%" height="15" fill="rgb(221,3,9)" fg:x="546" fg:w="1"/><text x="44.0702%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="43.8202%" y="373" width="0.0803%" height="15" fill="rgb(214,34,31)" fg:x="546" fg:w="1"/><text x="44.0702%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="43.8202%" y="357" width="0.0803%" height="15" fill="rgb(252,119,15)" fg:x="546" fg:w="1"/><text x="44.0702%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.8202%" y="341" width="0.0803%" height="15" fill="rgb(244,224,31)" fg:x="546" fg:w="1"/><text x="44.0702%" y="351.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="43.9005%" y="453" width="0.0803%" height="15" fill="rgb(215,8,51)" fg:x="547" fg:w="1"/><text x="44.1505%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="43.9005%" y="437" width="0.0803%" height="15" fill="rgb(207,24,1)" fg:x="547" fg:w="1"/><text x="44.1505%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.9005%" y="421" width="0.0803%" height="15" fill="rgb(245,90,0)" fg:x="547" fg:w="1"/><text x="44.1505%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.9005%" y="405" width="0.0803%" height="15" fill="rgb(246,43,48)" fg:x="547" fg:w="1"/><text x="44.1505%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.9005%" y="389" width="0.0803%" height="15" fill="rgb(252,218,10)" fg:x="547" fg:w="1"/><text x="44.1505%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.9005%" y="373" width="0.0803%" height="15" fill="rgb(231,24,35)" fg:x="547" fg:w="1"/><text x="44.1505%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.9005%" y="357" width="0.0803%" height="15" fill="rgb(225,66,19)" fg:x="547" fg:w="1"/><text x="44.1505%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.9005%" y="341" width="0.0803%" height="15" fill="rgb(214,96,51)" fg:x="547" fg:w="1"/><text x="44.1505%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.9005%" y="325" width="0.0803%" height="15" fill="rgb(251,151,47)" fg:x="547" fg:w="1"/><text x="44.1505%" y="335.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="43.9005%" y="517" width="0.1605%" height="15" fill="rgb(236,79,14)" fg:x="547" fg:w="2"/><text x="44.1505%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="43.9005%" y="501" width="0.1605%" height="15" fill="rgb(210,205,11)" fg:x="547" fg:w="2"/><text x="44.1505%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="43.9005%" y="485" width="0.1605%" height="15" fill="rgb(233,142,53)" fg:x="547" fg:w="2"/><text x="44.1505%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="43.9005%" y="469" width="0.1605%" height="15" fill="rgb(212,116,48)" fg:x="547" fg:w="2"/><text x="44.1505%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.9807%" y="453" width="0.0803%" height="15" fill="rgb(234,55,33)" fg:x="548" fg:w="1"/><text x="44.2307%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.9807%" y="437" width="0.0803%" height="15" fill="rgb(253,92,27)" fg:x="548" fg:w="1"/><text x="44.2307%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.9807%" y="421" width="0.0803%" height="15" fill="rgb(220,7,35)" fg:x="548" fg:w="1"/><text x="44.2307%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="43.9807%" y="405" width="0.0803%" height="15" fill="rgb(246,124,6)" fg:x="548" fg:w="1"/><text x="44.2307%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="43.9807%" y="389" width="0.0803%" height="15" fill="rgb(212,111,51)" fg:x="548" fg:w="1"/><text x="44.2307%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.9807%" y="373" width="0.0803%" height="15" fill="rgb(253,116,7)" fg:x="548" fg:w="1"/><text x="44.2307%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.9807%" y="357" width="0.0803%" height="15" fill="rgb(213,145,18)" fg:x="548" fg:w="1"/><text x="44.2307%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="43.9807%" y="341" width="0.0803%" height="15" fill="rgb(219,149,7)" fg:x="548" fg:w="1"/><text x="44.2307%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="43.9807%" y="325" width="0.0803%" height="15" fill="rgb(225,156,20)" fg:x="548" fg:w="1"/><text x="44.2307%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="43.9807%" y="309" width="0.0803%" height="15" fill="rgb(211,98,19)" fg:x="548" fg:w="1"/><text x="44.2307%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="43.9807%" y="293" width="0.0803%" height="15" fill="rgb(231,192,31)" fg:x="548" fg:w="1"/><text x="44.2307%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.9807%" y="277" width="0.0803%" height="15" fill="rgb(249,95,19)" fg:x="548" fg:w="1"/><text x="44.2307%" y="287.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (5 samples, 0.40%)</title><rect x="43.7400%" y="549" width="0.4013%" height="15" fill="rgb(247,101,36)" fg:x="545" fg:w="5"/><text x="43.9900%" y="559.50"></text></g><g><title>plugins_core::build::Build::new (5 samples, 0.40%)</title><rect x="43.7400%" y="533" width="0.4013%" height="15" fill="rgb(221,45,43)" fg:x="545" fg:w="5"/><text x="43.9900%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="44.0610%" y="517" width="0.0803%" height="15" fill="rgb(220,42,1)" fg:x="549" fg:w="1"/><text x="44.3110%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="44.1413%" y="549" width="0.0803%" height="15" fill="rgb(236,19,24)" fg:x="550" fg:w="1"/><text x="44.3913%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.1413%" y="533" width="0.0803%" height="15" fill="rgb(225,192,6)" fg:x="550" fg:w="1"/><text x="44.3913%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.1413%" y="517" width="0.0803%" height="15" fill="rgb(242,30,19)" fg:x="550" fg:w="1"/><text x="44.3913%" y="527.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="44.2215%" y="501" width="0.0803%" height="15" fill="rgb(240,36,6)" fg:x="551" fg:w="1"/><text x="44.4715%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.2215%" y="485" width="0.0803%" height="15" fill="rgb(246,40,28)" fg:x="551" fg:w="1"/><text x="44.4715%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.2215%" y="469" width="0.0803%" height="15" fill="rgb(225,155,33)" fg:x="551" fg:w="1"/><text x="44.4715%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.2215%" y="453" width="0.0803%" height="15" fill="rgb(240,65,18)" fg:x="551" fg:w="1"/><text x="44.4715%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.2215%" y="437" width="0.0803%" height="15" fill="rgb(217,0,48)" fg:x="551" fg:w="1"/><text x="44.4715%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="44.2215%" y="517" width="0.1605%" height="15" fill="rgb(217,80,15)" fg:x="551" fg:w="2"/><text x="44.4715%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="44.3018%" y="501" width="0.0803%" height="15" fill="rgb(253,43,51)" fg:x="552" fg:w="1"/><text x="44.5518%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.3018%" y="485" width="0.0803%" height="15" fill="rgb(246,60,4)" fg:x="552" fg:w="1"/><text x="44.5518%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="44.3018%" y="469" width="0.0803%" height="15" fill="rgb(230,40,54)" fg:x="552" fg:w="1"/><text x="44.5518%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="44.3018%" y="453" width="0.0803%" height="15" fill="rgb(208,20,44)" fg:x="552" fg:w="1"/><text x="44.5518%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="44.3018%" y="437" width="0.0803%" height="15" fill="rgb(230,22,22)" fg:x="552" fg:w="1"/><text x="44.5518%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="44.3820%" y="485" width="0.0803%" height="15" fill="rgb(207,57,4)" fg:x="553" fg:w="1"/><text x="44.6320%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="44.3820%" y="501" width="0.1605%" height="15" fill="rgb(242,130,33)" fg:x="553" fg:w="2"/><text x="44.6320%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.4623%" y="485" width="0.0803%" height="15" fill="rgb(218,66,43)" fg:x="554" fg:w="1"/><text x="44.7123%" y="495.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="44.3820%" y="517" width="0.2408%" height="15" fill="rgb(236,105,16)" fg:x="553" fg:w="3"/><text x="44.6320%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="44.5425%" y="501" width="0.0803%" height="15" fill="rgb(230,46,15)" fg:x="555" fg:w="1"/><text x="44.7925%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.8636%" y="469" width="0.0803%" height="15" fill="rgb(251,172,40)" fg:x="559" fg:w="1"/><text x="45.1136%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="44.7833%" y="501" width="0.3210%" height="15" fill="rgb(225,217,32)" fg:x="558" fg:w="4"/><text x="45.0333%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="44.8636%" y="485" width="0.2408%" height="15" fill="rgb(243,10,29)" fg:x="559" fg:w="3"/><text x="45.1136%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.9438%" y="469" width="0.1605%" height="15" fill="rgb(207,102,10)" fg:x="560" fg:w="2"/><text x="45.1938%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.9438%" y="453" width="0.1605%" height="15" fill="rgb(241,125,5)" fg:x="560" fg:w="2"/><text x="45.1938%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="44.9438%" y="437" width="0.1605%" height="15" fill="rgb(230,125,29)" fg:x="560" fg:w="2"/><text x="45.1938%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.9438%" y="421" width="0.1605%" height="15" fill="rgb(223,65,44)" fg:x="560" fg:w="2"/><text x="45.1938%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.9438%" y="405" width="0.1605%" height="15" fill="rgb(224,188,28)" fg:x="560" fg:w="2"/><text x="45.1938%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.9438%" y="389" width="0.1605%" height="15" fill="rgb(254,197,27)" fg:x="560" fg:w="2"/><text x="45.1938%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.0241%" y="373" width="0.0803%" height="15" fill="rgb(220,200,25)" fg:x="561" fg:w="1"/><text x="45.2741%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="45.1846%" y="405" width="0.0803%" height="15" fill="rgb(239,225,54)" fg:x="563" fg:w="1"/><text x="45.4346%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="45.1043%" y="485" width="0.2408%" height="15" fill="rgb(211,59,40)" fg:x="562" fg:w="3"/><text x="45.3543%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="45.1846%" y="469" width="0.1605%" height="15" fill="rgb(213,176,46)" fg:x="563" fg:w="2"/><text x="45.4346%" y="479.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="45.1846%" y="453" width="0.1605%" height="15" fill="rgb(226,99,4)" fg:x="563" fg:w="2"/><text x="45.4346%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="45.1846%" y="437" width="0.1605%" height="15" fill="rgb(239,203,43)" fg:x="563" fg:w="2"/><text x="45.4346%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="45.1846%" y="421" width="0.1605%" height="15" fill="rgb(246,1,45)" fg:x="563" fg:w="2"/><text x="45.4346%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.2648%" y="405" width="0.0803%" height="15" fill="rgb(231,42,52)" fg:x="564" fg:w="1"/><text x="45.5148%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.2648%" y="389" width="0.0803%" height="15" fill="rgb(240,13,50)" fg:x="564" fg:w="1"/><text x="45.5148%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="45.3451%" y="389" width="0.0803%" height="15" fill="rgb(225,81,14)" fg:x="565" fg:w="1"/><text x="45.5951%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="45.3451%" y="469" width="0.1605%" height="15" fill="rgb(216,182,23)" fg:x="565" fg:w="2"/><text x="45.5951%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="45.3451%" y="453" width="0.1605%" height="15" fill="rgb(233,137,19)" fg:x="565" fg:w="2"/><text x="45.5951%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="45.3451%" y="437" width="0.1605%" height="15" fill="rgb(242,61,46)" fg:x="565" fg:w="2"/><text x="45.5951%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="45.3451%" y="421" width="0.1605%" height="15" fill="rgb(221,168,51)" fg:x="565" fg:w="2"/><text x="45.5951%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="45.3451%" y="405" width="0.1605%" height="15" fill="rgb(238,48,15)" fg:x="565" fg:w="2"/><text x="45.5951%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="45.4254%" y="389" width="0.0803%" height="15" fill="rgb(216,13,16)" fg:x="566" fg:w="1"/><text x="45.6754%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.5056%" y="437" width="0.1605%" height="15" fill="rgb(223,185,34)" fg:x="567" fg:w="2"/><text x="45.7556%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.5056%" y="421" width="0.1605%" height="15" fill="rgb(228,94,42)" fg:x="567" fg:w="2"/><text x="45.7556%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="45.5056%" y="405" width="0.1605%" height="15" fill="rgb(218,166,43)" fg:x="567" fg:w="2"/><text x="45.7556%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (19 samples, 1.52%)</title><rect x="44.2215%" y="549" width="1.5249%" height="15" fill="rgb(232,30,50)" fg:x="551" fg:w="19"/><text x="44.4715%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (19 samples, 1.52%)</title><rect x="44.2215%" y="533" width="1.5249%" height="15" fill="rgb(245,206,45)" fg:x="551" fg:w="19"/><text x="44.4715%" y="543.50"></text></g><g><title>plugins_core::build::Build::save (14 samples, 1.12%)</title><rect x="44.6228%" y="517" width="1.1236%" height="15" fill="rgb(220,56,22)" fg:x="556" fg:w="14"/><text x="44.8728%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="45.1043%" y="501" width="0.6421%" height="15" fill="rgb(239,129,38)" fg:x="562" fg:w="8"/><text x="45.3543%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="45.3451%" y="485" width="0.4013%" height="15" fill="rgb(207,68,41)" fg:x="565" fg:w="5"/><text x="45.5951%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="45.5056%" y="469" width="0.2408%" height="15" fill="rgb(221,21,7)" fg:x="567" fg:w="3"/><text x="45.7556%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="45.5056%" y="453" width="0.2408%" height="15" fill="rgb(240,33,25)" fg:x="567" fg:w="3"/><text x="45.7556%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="45.6661%" y="437" width="0.0803%" height="15" fill="rgb(242,119,10)" fg:x="569" fg:w="1"/><text x="45.9161%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="45.6661%" y="421" width="0.0803%" height="15" fill="rgb(214,149,40)" fg:x="569" fg:w="1"/><text x="45.9161%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="45.6661%" y="405" width="0.0803%" height="15" fill="rgb(228,25,36)" fg:x="569" fg:w="1"/><text x="45.9161%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="45.6661%" y="389" width="0.0803%" height="15" fill="rgb(222,59,15)" fg:x="569" fg:w="1"/><text x="45.9161%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="45.6661%" y="373" width="0.0803%" height="15" fill="rgb(218,170,0)" fg:x="569" fg:w="1"/><text x="45.9161%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="45.6661%" y="357" width="0.0803%" height="15" fill="rgb(232,173,23)" fg:x="569" fg:w="1"/><text x="45.9161%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="45.6661%" y="341" width="0.0803%" height="15" fill="rgb(218,116,1)" fg:x="569" fg:w="1"/><text x="45.9161%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.6661%" y="325" width="0.0803%" height="15" fill="rgb(207,34,4)" fg:x="569" fg:w="1"/><text x="45.9161%" y="335.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="45.7464%" y="517" width="0.0803%" height="15" fill="rgb(229,54,52)" fg:x="570" fg:w="1"/><text x="45.9964%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.7464%" y="501" width="0.0803%" height="15" fill="rgb(211,86,23)" fg:x="570" fg:w="1"/><text x="45.9964%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="45.7464%" y="533" width="0.1605%" height="15" fill="rgb(254,153,34)" fg:x="570" fg:w="2"/><text x="45.9964%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="45.8266%" y="517" width="0.0803%" height="15" fill="rgb(219,220,14)" fg:x="571" fg:w="1"/><text x="46.0766%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.8266%" y="501" width="0.0803%" height="15" fill="rgb(247,8,26)" fg:x="571" fg:w="1"/><text x="46.0766%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="45.8266%" y="485" width="0.0803%" height="15" fill="rgb(213,129,42)" fg:x="571" fg:w="1"/><text x="46.0766%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="45.8266%" y="469" width="0.0803%" height="15" fill="rgb(225,95,41)" fg:x="571" fg:w="1"/><text x="46.0766%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="45.8266%" y="453" width="0.0803%" height="15" fill="rgb(215,134,24)" fg:x="571" fg:w="1"/><text x="46.0766%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="45.8266%" y="437" width="0.0803%" height="15" fill="rgb(235,23,54)" fg:x="571" fg:w="1"/><text x="46.0766%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="45.9069%" y="533" width="0.0803%" height="15" fill="rgb(229,96,31)" fg:x="572" fg:w="1"/><text x="46.1569%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="45.9069%" y="517" width="0.0803%" height="15" fill="rgb(206,111,12)" fg:x="572" fg:w="1"/><text x="46.1569%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.9069%" y="501" width="0.0803%" height="15" fill="rgb(222,177,8)" fg:x="572" fg:w="1"/><text x="46.1569%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.9069%" y="485" width="0.0803%" height="15" fill="rgb(251,36,52)" fg:x="572" fg:w="1"/><text x="46.1569%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.9069%" y="469" width="0.0803%" height="15" fill="rgb(216,182,29)" fg:x="572" fg:w="1"/><text x="46.1569%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="46.0674%" y="501" width="0.0803%" height="15" fill="rgb(241,145,50)" fg:x="574" fg:w="1"/><text x="46.3174%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="46.0674%" y="485" width="0.0803%" height="15" fill="rgb(231,71,35)" fg:x="574" fg:w="1"/><text x="46.3174%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="46.0674%" y="469" width="0.0803%" height="15" fill="rgb(218,22,17)" fg:x="574" fg:w="1"/><text x="46.3174%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="46.0674%" y="453" width="0.0803%" height="15" fill="rgb(225,227,6)" fg:x="574" fg:w="1"/><text x="46.3174%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.0674%" y="437" width="0.0803%" height="15" fill="rgb(224,204,17)" fg:x="574" fg:w="1"/><text x="46.3174%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.0674%" y="421" width="0.0803%" height="15" fill="rgb(227,61,28)" fg:x="574" fg:w="1"/><text x="46.3174%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="46.0674%" y="405" width="0.0803%" height="15" fill="rgb(242,148,23)" fg:x="574" fg:w="1"/><text x="46.3174%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="46.0674%" y="389" width="0.0803%" height="15" fill="rgb(237,105,33)" fg:x="574" fg:w="1"/><text x="46.3174%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="46.0674%" y="373" width="0.0803%" height="15" fill="rgb(238,218,40)" fg:x="574" fg:w="1"/><text x="46.3174%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.1477%" y="501" width="0.0803%" height="15" fill="rgb(209,126,11)" fg:x="575" fg:w="1"/><text x="46.3977%" y="511.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (4 samples, 0.32%)</title><rect x="45.9872%" y="517" width="0.3210%" height="15" fill="rgb(245,90,11)" fg:x="573" fg:w="4"/><text x="46.2372%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="46.2279%" y="501" width="0.0803%" height="15" fill="rgb(211,195,10)" fg:x="576" fg:w="1"/><text x="46.4779%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="46.2279%" y="485" width="0.0803%" height="15" fill="rgb(231,45,45)" fg:x="576" fg:w="1"/><text x="46.4779%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.2279%" y="469" width="0.0803%" height="15" fill="rgb(246,100,43)" fg:x="576" fg:w="1"/><text x="46.4779%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2279%" y="453" width="0.0803%" height="15" fill="rgb(241,193,8)" fg:x="576" fg:w="1"/><text x="46.4779%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.2279%" y="437" width="0.0803%" height="15" fill="rgb(208,76,19)" fg:x="576" fg:w="1"/><text x="46.4779%" y="447.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="46.3082%" y="517" width="0.0803%" height="15" fill="rgb(223,69,40)" fg:x="577" fg:w="1"/><text x="46.5582%" y="527.50"></text></g><g><title>plugins_core::build::Build::new_world (6 samples, 0.48%)</title><rect x="45.9872%" y="533" width="0.4815%" height="15" fill="rgb(207,120,39)" fg:x="573" fg:w="6"/><text x="46.2372%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="46.3884%" y="517" width="0.0803%" height="15" fill="rgb(212,209,28)" fg:x="578" fg:w="1"/><text x="46.6384%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.4687%" y="485" width="0.1605%" height="15" fill="rgb(246,82,29)" fg:x="579" fg:w="2"/><text x="46.7187%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.4687%" y="469" width="0.1605%" height="15" fill="rgb(239,6,40)" fg:x="579" fg:w="2"/><text x="46.7187%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.5490%" y="453" width="0.0803%" height="15" fill="rgb(228,181,35)" fg:x="580" fg:w="1"/><text x="46.7990%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="46.4687%" y="501" width="0.2408%" height="15" fill="rgb(238,151,2)" fg:x="579" fg:w="3"/><text x="46.7187%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.6292%" y="485" width="0.0803%" height="15" fill="rgb(236,94,18)" fg:x="581" fg:w="1"/><text x="46.8792%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.6292%" y="469" width="0.0803%" height="15" fill="rgb(208,38,14)" fg:x="581" fg:w="1"/><text x="46.8792%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="46.6292%" y="453" width="0.0803%" height="15" fill="rgb(234,215,27)" fg:x="581" fg:w="1"/><text x="46.8792%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.6292%" y="437" width="0.0803%" height="15" fill="rgb(254,211,53)" fg:x="581" fg:w="1"/><text x="46.8792%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.6292%" y="421" width="0.0803%" height="15" fill="rgb(216,175,11)" fg:x="581" fg:w="1"/><text x="46.8792%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.6292%" y="405" width="0.0803%" height="15" fill="rgb(246,179,26)" fg:x="581" fg:w="1"/><text x="46.8792%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.7095%" y="501" width="0.0803%" height="15" fill="rgb(249,19,52)" fg:x="582" fg:w="1"/><text x="46.9595%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="46.4687%" y="517" width="0.5618%" height="15" fill="rgb(230,42,52)" fg:x="579" fg:w="7"/><text x="46.7187%" y="527.50"></text></g><g><title>kernel::model::props::Props::u64_property (3 samples, 0.24%)</title><rect x="46.7897%" y="501" width="0.2408%" height="15" fill="rgb(221,171,0)" fg:x="583" fg:w="3"/><text x="47.0397%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="46.7897%" y="485" width="0.2408%" height="15" fill="rgb(222,177,40)" fg:x="583" fg:w="3"/><text x="47.0397%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="46.9502%" y="469" width="0.0803%" height="15" fill="rgb(247,34,16)" fg:x="585" fg:w="1"/><text x="47.2002%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="47.1108%" y="501" width="0.1605%" height="15" fill="rgb(213,217,37)" fg:x="587" fg:w="2"/><text x="47.3608%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.1108%" y="485" width="0.1605%" height="15" fill="rgb(231,189,24)" fg:x="587" fg:w="2"/><text x="47.3608%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.1108%" y="469" width="0.1605%" height="15" fill="rgb(214,22,9)" fg:x="587" fg:w="2"/><text x="47.3608%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="47.1108%" y="453" width="0.1605%" height="15" fill="rgb(212,70,22)" fg:x="587" fg:w="2"/><text x="47.3608%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.1108%" y="437" width="0.1605%" height="15" fill="rgb(249,64,51)" fg:x="587" fg:w="2"/><text x="47.3608%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.1910%" y="421" width="0.0803%" height="15" fill="rgb(249,148,20)" fg:x="588" fg:w="1"/><text x="47.4410%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.1910%" y="405" width="0.0803%" height="15" fill="rgb(246,46,48)" fg:x="588" fg:w="1"/><text x="47.4410%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="47.3515%" y="485" width="0.2408%" height="15" fill="rgb(217,34,48)" fg:x="590" fg:w="3"/><text x="47.6015%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.24%)</title><rect x="47.3515%" y="469" width="0.2408%" height="15" fill="rgb(222,45,26)" fg:x="590" fg:w="3"/><text x="47.6015%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="47.4318%" y="453" width="0.1605%" height="15" fill="rgb(230,201,36)" fg:x="591" fg:w="2"/><text x="47.6818%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="47.5120%" y="437" width="0.0803%" height="15" fill="rgb(217,30,43)" fg:x="592" fg:w="1"/><text x="47.7620%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="47.5120%" y="421" width="0.0803%" height="15" fill="rgb(230,197,40)" fg:x="592" fg:w="1"/><text x="47.7620%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.5120%" y="405" width="0.0803%" height="15" fill="rgb(239,181,18)" fg:x="592" fg:w="1"/><text x="47.7620%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="47.0305%" y="517" width="0.6421%" height="15" fill="rgb(222,60,39)" fg:x="586" fg:w="8"/><text x="47.2805%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="47.2713%" y="501" width="0.4013%" height="15" fill="rgb(210,60,22)" fg:x="589" fg:w="5"/><text x="47.5213%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="47.5923%" y="485" width="0.0803%" height="15" fill="rgb(239,213,48)" fg:x="593" fg:w="1"/><text x="47.8423%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.5923%" y="469" width="0.0803%" height="15" fill="rgb(253,214,23)" fg:x="593" fg:w="1"/><text x="47.8423%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (25 samples, 2.01%)</title><rect x="45.7464%" y="549" width="2.0064%" height="15" fill="rgb(211,98,45)" fg:x="570" fg:w="25"/><text x="45.9964%" y="559.50">p..</text></g><g><title>plugins_core::build::Build::save (16 samples, 1.28%)</title><rect x="46.4687%" y="533" width="1.2841%" height="15" fill="rgb(239,130,44)" fg:x="579" fg:w="16"/><text x="46.7187%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.6726%" y="517" width="0.0803%" height="15" fill="rgb(222,181,35)" fg:x="594" fg:w="1"/><text x="47.9226%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (427 samples, 34.27%)</title><rect x="13.5634%" y="565" width="34.2697%" height="15" fill="rgb(219,219,49)" fg:x="169" fg:w="427"/><text x="13.8134%" y="575.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prep..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="47.7528%" y="549" width="0.0803%" height="15" fill="rgb(227,161,51)" fg:x="595" fg:w="1"/><text x="48.0028%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="47.8331%" y="565" width="0.0803%" height="15" fill="rgb(239,112,27)" fg:x="596" fg:w="1"/><text x="48.0831%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="47.8331%" y="549" width="0.0803%" height="15" fill="rgb(248,122,18)" fg:x="596" fg:w="1"/><text x="48.0831%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="47.8331%" y="533" width="0.0803%" height="15" fill="rgb(245,130,23)" fg:x="596" fg:w="1"/><text x="48.0831%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.8331%" y="517" width="0.0803%" height="15" fill="rgb(211,225,28)" fg:x="596" fg:w="1"/><text x="48.0831%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.9936%" y="533" width="0.0803%" height="15" fill="rgb(242,105,44)" fg:x="598" fg:w="1"/><text x="48.2436%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="47.9936%" y="549" width="0.1605%" height="15" fill="rgb(216,183,46)" fg:x="598" fg:w="2"/><text x="48.2436%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.0738%" y="533" width="0.0803%" height="15" fill="rgb(227,112,9)" fg:x="599" fg:w="1"/><text x="48.3238%" y="543.50"></text></g><g><title>engine::session::Session::save_logs (1 samples, 0.08%)</title><rect x="48.1541%" y="549" width="0.0803%" height="15" fill="rgb(244,21,0)" fg:x="600" fg:w="1"/><text x="48.4041%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="48.1541%" y="533" width="0.0803%" height="15" fill="rgb(236,185,14)" fg:x="600" fg:w="1"/><text x="48.4041%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="48.3146%" y="469" width="0.0803%" height="15" fill="rgb(236,170,30)" fg:x="602" fg:w="1"/><text x="48.5646%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="48.3146%" y="453" width="0.0803%" height="15" fill="rgb(209,198,51)" fg:x="602" fg:w="1"/><text x="48.5646%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.3146%" y="437" width="0.0803%" height="15" fill="rgb(205,171,26)" fg:x="602" fg:w="1"/><text x="48.5646%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.3146%" y="421" width="0.0803%" height="15" fill="rgb(246,41,49)" fg:x="602" fg:w="1"/><text x="48.5646%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.3146%" y="405" width="0.0803%" height="15" fill="rgb(240,229,12)" fg:x="602" fg:w="1"/><text x="48.5646%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="48.4751%" y="437" width="0.3210%" height="15" fill="rgb(212,8,54)" fg:x="604" fg:w="4"/><text x="48.7251%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="48.5554%" y="421" width="0.2408%" height="15" fill="rgb(230,114,13)" fg:x="605" fg:w="3"/><text x="48.8054%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="48.6356%" y="405" width="0.1605%" height="15" fill="rgb(229,130,28)" fg:x="606" fg:w="2"/><text x="48.8856%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.7159%" y="389" width="0.0803%" height="15" fill="rgb(206,139,15)" fg:x="607" fg:w="1"/><text x="48.9659%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="48.3949%" y="453" width="0.6421%" height="15" fill="rgb(241,188,35)" fg:x="603" fg:w="8"/><text x="48.6449%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="48.7961%" y="437" width="0.2408%" height="15" fill="rgb(208,224,26)" fg:x="608" fg:w="3"/><text x="49.0461%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="48.7961%" y="421" width="0.2408%" height="15" fill="rgb(251,131,28)" fg:x="608" fg:w="3"/><text x="49.0461%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="48.7961%" y="405" width="0.2408%" height="15" fill="rgb(208,153,1)" fg:x="608" fg:w="3"/><text x="49.0461%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.64%)</title><rect x="49.0369%" y="437" width="0.6421%" height="15" fill="rgb(234,33,36)" fg:x="611" fg:w="8"/><text x="49.2869%" y="447.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="49.0369%" y="421" width="0.6421%" height="15" fill="rgb(246,42,29)" fg:x="611" fg:w="8"/><text x="49.2869%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="49.4382%" y="405" width="0.2408%" height="15" fill="rgb(251,114,16)" fg:x="616" fg:w="3"/><text x="49.6882%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="49.5185%" y="389" width="0.1605%" height="15" fill="rgb(233,13,38)" fg:x="617" fg:w="2"/><text x="49.7685%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.5987%" y="373" width="0.0803%" height="15" fill="rgb(247,120,19)" fg:x="618" fg:w="1"/><text x="49.8487%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.5987%" y="357" width="0.0803%" height="15" fill="rgb(205,11,16)" fg:x="618" fg:w="1"/><text x="49.8487%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.5987%" y="341" width="0.0803%" height="15" fill="rgb(228,185,19)" fg:x="618" fg:w="1"/><text x="49.8487%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.6790%" y="389" width="0.0803%" height="15" fill="rgb(239,88,52)" fg:x="619" fg:w="1"/><text x="49.9290%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="49.7592%" y="389" width="0.0803%" height="15" fill="rgb(219,23,1)" fg:x="620" fg:w="1"/><text x="50.0092%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.7592%" y="373" width="0.0803%" height="15" fill="rgb(253,177,16)" fg:x="620" fg:w="1"/><text x="50.0092%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.7592%" y="357" width="0.0803%" height="15" fill="rgb(225,150,40)" fg:x="620" fg:w="1"/><text x="50.0092%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.7592%" y="341" width="0.0803%" height="15" fill="rgb(208,108,30)" fg:x="620" fg:w="1"/><text x="50.0092%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.7592%" y="325" width="0.0803%" height="15" fill="rgb(214,122,4)" fg:x="620" fg:w="1"/><text x="50.0092%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.7592%" y="309" width="0.0803%" height="15" fill="rgb(229,74,37)" fg:x="620" fg:w="1"/><text x="50.0092%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.7592%" y="293" width="0.0803%" height="15" fill="rgb(233,61,41)" fg:x="620" fg:w="1"/><text x="50.0092%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="49.6790%" y="405" width="0.2408%" height="15" fill="rgb(238,191,5)" fg:x="619" fg:w="3"/><text x="49.9290%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="49.8395%" y="389" width="0.0803%" height="15" fill="rgb(233,78,24)" fg:x="621" fg:w="1"/><text x="50.0895%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="49.8395%" y="373" width="0.0803%" height="15" fill="rgb(211,142,8)" fg:x="621" fg:w="1"/><text x="50.0895%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.8395%" y="357" width="0.0803%" height="15" fill="rgb(253,38,53)" fg:x="621" fg:w="1"/><text x="50.0895%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="49.6790%" y="421" width="0.3210%" height="15" fill="rgb(234,63,51)" fg:x="619" fg:w="4"/><text x="49.9290%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.9197%" y="405" width="0.0803%" height="15" fill="rgb(205,23,31)" fg:x="622" fg:w="1"/><text x="50.1697%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.9197%" y="389" width="0.0803%" height="15" fill="rgb(210,184,50)" fg:x="622" fg:w="1"/><text x="50.1697%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9197%" y="373" width="0.0803%" height="15" fill="rgb(222,112,26)" fg:x="622" fg:w="1"/><text x="50.1697%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="50.0000%" y="421" width="0.3210%" height="15" fill="rgb(250,98,18)" fg:x="623" fg:w="4"/><text x="50.2500%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="50.0803%" y="405" width="0.2408%" height="15" fill="rgb(250,34,12)" fg:x="624" fg:w="3"/><text x="50.3303%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.2408%" y="389" width="0.0803%" height="15" fill="rgb(236,141,30)" fg:x="626" fg:w="1"/><text x="50.4908%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.2408%" y="373" width="0.0803%" height="15" fill="rgb(246,134,38)" fg:x="626" fg:w="1"/><text x="50.4908%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="50.4013%" y="405" width="0.1605%" height="15" fill="rgb(240,114,4)" fg:x="628" fg:w="2"/><text x="50.6513%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="50.4013%" y="389" width="0.1605%" height="15" fill="rgb(243,113,39)" fg:x="628" fg:w="2"/><text x="50.6513%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.4815%" y="373" width="0.0803%" height="15" fill="rgb(239,215,4)" fg:x="629" fg:w="1"/><text x="50.7315%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="50.5618%" y="389" width="0.4815%" height="15" fill="rgb(236,229,45)" fg:x="630" fg:w="6"/><text x="50.8118%" y="399.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="50.6421%" y="373" width="0.4013%" height="15" fill="rgb(242,2,6)" fg:x="631" fg:w="5"/><text x="50.8921%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="50.6421%" y="357" width="0.4013%" height="15" fill="rgb(239,108,21)" fg:x="631" fg:w="5"/><text x="50.8921%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="50.7223%" y="341" width="0.3210%" height="15" fill="rgb(215,168,34)" fg:x="632" fg:w="4"/><text x="50.9723%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="50.9631%" y="325" width="0.0803%" height="15" fill="rgb(238,31,17)" fg:x="635" fg:w="1"/><text x="51.2131%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="50.9631%" y="309" width="0.0803%" height="15" fill="rgb(220,133,11)" fg:x="635" fg:w="1"/><text x="51.2131%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="50.9631%" y="293" width="0.0803%" height="15" fill="rgb(212,158,23)" fg:x="635" fg:w="1"/><text x="51.2131%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="51.0433%" y="373" width="0.0803%" height="15" fill="rgb(223,172,7)" fg:x="636" fg:w="1"/><text x="51.2933%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="51.0433%" y="389" width="0.1605%" height="15" fill="rgb(244,3,52)" fg:x="636" fg:w="2"/><text x="51.2933%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.1236%" y="373" width="0.0803%" height="15" fill="rgb(207,69,27)" fg:x="637" fg:w="1"/><text x="51.3736%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="50.5618%" y="405" width="0.7223%" height="15" fill="rgb(213,136,45)" fg:x="630" fg:w="9"/><text x="50.8118%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.2039%" y="389" width="0.0803%" height="15" fill="rgb(218,79,17)" fg:x="638" fg:w="1"/><text x="51.4539%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.85%)</title><rect x="49.6790%" y="437" width="1.8459%" height="15" fill="rgb(216,106,36)" fg:x="619" fg:w="23"/><text x="49.9290%" y="447.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="50.3210%" y="421" width="1.2039%" height="15" fill="rgb(251,27,45)" fg:x="627" fg:w="15"/><text x="50.5710%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="51.2841%" y="405" width="0.2408%" height="15" fill="rgb(232,21,34)" fg:x="639" fg:w="3"/><text x="51.5341%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="51.2841%" y="389" width="0.2408%" height="15" fill="rgb(249,191,16)" fg:x="639" fg:w="3"/><text x="51.5341%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="51.3644%" y="373" width="0.1605%" height="15" fill="rgb(224,88,20)" fg:x="640" fg:w="2"/><text x="51.6144%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (41 samples, 3.29%)</title><rect x="48.3949%" y="469" width="3.2905%" height="15" fill="rgb(237,93,27)" fg:x="603" fg:w="41"/><text x="48.6449%" y="479.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.65%)</title><rect x="49.0369%" y="453" width="2.6485%" height="15" fill="rgb(226,198,48)" fg:x="611" fg:w="33"/><text x="49.2869%" y="463.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="51.5249%" y="437" width="0.1605%" height="15" fill="rgb(207,162,53)" fg:x="642" fg:w="2"/><text x="51.7749%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="51.6051%" y="421" width="0.0803%" height="15" fill="rgb(207,169,9)" fg:x="643" fg:w="1"/><text x="51.8551%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="51.6051%" y="405" width="0.0803%" height="15" fill="rgb(224,166,46)" fg:x="643" fg:w="1"/><text x="51.8551%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.6854%" y="437" width="0.1605%" height="15" fill="rgb(233,26,6)" fg:x="644" fg:w="2"/><text x="51.9354%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="51.8459%" y="437" width="0.1605%" height="15" fill="rgb(218,106,45)" fg:x="646" fg:w="2"/><text x="52.0959%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.8459%" y="421" width="0.1605%" height="15" fill="rgb(240,217,4)" fg:x="646" fg:w="2"/><text x="52.0959%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="52.0064%" y="405" width="0.2408%" height="15" fill="rgb(246,171,10)" fg:x="648" fg:w="3"/><text x="52.2564%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="52.2472%" y="405" width="0.2408%" height="15" fill="rgb(223,197,30)" fg:x="651" fg:w="3"/><text x="52.4972%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.3274%" y="389" width="0.1605%" height="15" fill="rgb(207,92,16)" fg:x="652" fg:w="2"/><text x="52.5774%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.5682%" y="389" width="0.0803%" height="15" fill="rgb(211,6,44)" fg:x="655" fg:w="1"/><text x="52.8182%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="52.6485%" y="389" width="0.0803%" height="15" fill="rgb(219,139,2)" fg:x="656" fg:w="1"/><text x="52.8985%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.6485%" y="373" width="0.0803%" height="15" fill="rgb(224,103,21)" fg:x="656" fg:w="1"/><text x="52.8985%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.6485%" y="357" width="0.0803%" height="15" fill="rgb(254,110,48)" fg:x="656" fg:w="1"/><text x="52.8985%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.8090%" y="373" width="0.1605%" height="15" fill="rgb(212,88,19)" fg:x="658" fg:w="2"/><text x="53.0590%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="51.6854%" y="469" width="1.3644%" height="15" fill="rgb(248,103,6)" fg:x="644" fg:w="17"/><text x="51.9354%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.36%)</title><rect x="51.6854%" y="453" width="1.3644%" height="15" fill="rgb(214,53,46)" fg:x="644" fg:w="17"/><text x="51.9354%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="52.0064%" y="437" width="1.0433%" height="15" fill="rgb(236,190,24)" fg:x="648" fg:w="13"/><text x="52.2564%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="52.0064%" y="421" width="1.0433%" height="15" fill="rgb(254,58,28)" fg:x="648" fg:w="13"/><text x="52.2564%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="52.4880%" y="405" width="0.5618%" height="15" fill="rgb(243,63,27)" fg:x="654" fg:w="7"/><text x="52.7380%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="52.7287%" y="389" width="0.3210%" height="15" fill="rgb(206,81,20)" fg:x="657" fg:w="4"/><text x="52.9787%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.9695%" y="373" width="0.0803%" height="15" fill="rgb(252,69,51)" fg:x="660" fg:w="1"/><text x="53.2195%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.6116%" y="421" width="0.0803%" height="15" fill="rgb(222,213,4)" fg:x="668" fg:w="1"/><text x="53.8616%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6116%" y="405" width="0.0803%" height="15" fill="rgb(226,198,12)" fg:x="668" fg:w="1"/><text x="53.8616%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.0128%" y="405" width="0.1605%" height="15" fill="rgb(248,115,11)" fg:x="673" fg:w="2"/><text x="54.2628%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.1734%" y="405" width="0.0803%" height="15" fill="rgb(221,148,54)" fg:x="675" fg:w="1"/><text x="54.4234%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="54.2536%" y="405" width="0.2408%" height="15" fill="rgb(214,209,51)" fg:x="676" fg:w="3"/><text x="54.5036%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.3339%" y="389" width="0.1605%" height="15" fill="rgb(249,116,53)" fg:x="677" fg:w="2"/><text x="54.5839%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="54.4944%" y="389" width="0.3210%" height="15" fill="rgb(248,170,1)" fg:x="679" fg:w="4"/><text x="54.7444%" y="399.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="54.4944%" y="373" width="0.3210%" height="15" fill="rgb(244,105,10)" fg:x="679" fg:w="4"/><text x="54.7444%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="54.8154%" y="389" width="0.0803%" height="15" fill="rgb(229,100,5)" fg:x="683" fg:w="1"/><text x="55.0654%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.9759%" y="373" width="0.1605%" height="15" fill="rgb(233,221,39)" fg:x="685" fg:w="2"/><text x="55.2259%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="55.1364%" y="373" width="0.3210%" height="15" fill="rgb(233,88,21)" fg:x="687" fg:w="4"/><text x="55.3864%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.3772%" y="357" width="0.0803%" height="15" fill="rgb(206,13,0)" fg:x="690" fg:w="1"/><text x="55.6272%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.4575%" y="341" width="0.0803%" height="15" fill="rgb(242,15,35)" fg:x="691" fg:w="1"/><text x="55.7075%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="55.4575%" y="373" width="0.1605%" height="15" fill="rgb(247,142,41)" fg:x="691" fg:w="2"/><text x="55.7075%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="55.4575%" y="357" width="0.1605%" height="15" fill="rgb(245,51,29)" fg:x="691" fg:w="2"/><text x="55.7075%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.5377%" y="341" width="0.0803%" height="15" fill="rgb(228,209,43)" fg:x="692" fg:w="1"/><text x="55.7877%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.5377%" y="325" width="0.0803%" height="15" fill="rgb(233,185,9)" fg:x="692" fg:w="1"/><text x="55.7877%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.5377%" y="309" width="0.0803%" height="15" fill="rgb(226,93,0)" fg:x="692" fg:w="1"/><text x="55.7877%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.33%)</title><rect x="53.3708%" y="437" width="2.3274%" height="15" fill="rgb(245,194,43)" fg:x="665" fg:w="29"/><text x="53.6208%" y="447.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (25 samples, 2.01%)</title><rect x="53.6918%" y="421" width="2.0064%" height="15" fill="rgb(211,145,34)" fg:x="669" fg:w="25"/><text x="53.9418%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="54.4944%" y="405" width="1.2039%" height="15" fill="rgb(231,228,28)" fg:x="679" fg:w="15"/><text x="54.7444%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="54.8957%" y="389" width="0.8026%" height="15" fill="rgb(236,149,4)" fg:x="684" fg:w="10"/><text x="55.1457%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.6180%" y="373" width="0.0803%" height="15" fill="rgb(234,114,38)" fg:x="693" fg:w="1"/><text x="55.8680%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.6180%" y="357" width="0.0803%" height="15" fill="rgb(246,132,51)" fg:x="693" fg:w="1"/><text x="55.8680%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="55.6982%" y="437" width="0.0803%" height="15" fill="rgb(251,137,22)" fg:x="694" fg:w="1"/><text x="55.9482%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.6982%" y="421" width="0.0803%" height="15" fill="rgb(243,59,52)" fg:x="694" fg:w="1"/><text x="55.9482%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7785%" y="437" width="0.0803%" height="15" fill="rgb(239,56,28)" fg:x="695" fg:w="1"/><text x="56.0285%" y="447.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="55.8587%" y="437" width="0.1605%" height="15" fill="rgb(218,168,27)" fg:x="696" fg:w="2"/><text x="56.1087%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="55.8587%" y="421" width="0.1605%" height="15" fill="rgb(232,165,11)" fg:x="696" fg:w="2"/><text x="56.1087%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="55.9390%" y="405" width="0.0803%" height="15" fill="rgb(253,55,41)" fg:x="697" fg:w="1"/><text x="56.1890%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="55.9390%" y="389" width="0.0803%" height="15" fill="rgb(233,206,24)" fg:x="697" fg:w="1"/><text x="56.1890%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (39 samples, 3.13%)</title><rect x="53.2905%" y="453" width="3.1300%" height="15" fill="rgb(220,199,8)" fg:x="664" fg:w="39"/><text x="53.5405%" y="463.50">&lt;ke..</text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="56.0193%" y="437" width="0.4013%" height="15" fill="rgb(254,65,26)" fg:x="698" fg:w="5"/><text x="56.2693%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="56.0193%" y="421" width="0.4013%" height="15" fill="rgb(253,102,23)" fg:x="698" fg:w="5"/><text x="56.2693%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="56.1798%" y="405" width="0.2408%" height="15" fill="rgb(231,103,35)" fg:x="700" fg:w="3"/><text x="56.4298%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="56.2600%" y="389" width="0.1605%" height="15" fill="rgb(238,26,10)" fg:x="701" fg:w="2"/><text x="56.5100%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="56.2600%" y="373" width="0.1605%" height="15" fill="rgb(234,191,34)" fg:x="701" fg:w="2"/><text x="56.5100%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="56.5811%" y="421" width="0.3210%" height="15" fill="rgb(206,210,9)" fg:x="705" fg:w="4"/><text x="56.8311%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="56.7416%" y="405" width="0.1605%" height="15" fill="rgb(219,155,3)" fg:x="707" fg:w="2"/><text x="56.9916%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="56.9021%" y="421" width="0.1605%" height="15" fill="rgb(221,62,52)" fg:x="709" fg:w="2"/><text x="57.1521%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="56.9823%" y="405" width="0.0803%" height="15" fill="rgb(215,197,36)" fg:x="710" fg:w="1"/><text x="57.2323%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.9823%" y="389" width="0.0803%" height="15" fill="rgb(226,222,6)" fg:x="710" fg:w="1"/><text x="57.2323%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9823%" y="373" width="0.0803%" height="15" fill="rgb(215,58,28)" fg:x="710" fg:w="1"/><text x="57.2323%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (4 samples, 0.32%)</title><rect x="57.0626%" y="421" width="0.3210%" height="15" fill="rgb(212,148,2)" fg:x="711" fg:w="4"/><text x="57.3126%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="57.2231%" y="405" width="0.1605%" height="15" fill="rgb(208,21,42)" fg:x="713" fg:w="2"/><text x="57.4731%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.2231%" y="389" width="0.1605%" height="15" fill="rgb(209,107,26)" fg:x="713" fg:w="2"/><text x="57.4731%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="57.5441%" y="405" width="0.0803%" height="15" fill="rgb(254,60,47)" fg:x="717" fg:w="1"/><text x="57.7941%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="57.3836%" y="421" width="0.4013%" height="15" fill="rgb(207,226,45)" fg:x="715" fg:w="5"/><text x="57.6336%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="57.6244%" y="405" width="0.1605%" height="15" fill="rgb(223,124,22)" fg:x="718" fg:w="2"/><text x="57.8744%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.7047%" y="389" width="0.0803%" height="15" fill="rgb(240,162,13)" fg:x="719" fg:w="1"/><text x="57.9547%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.8652%" y="357" width="0.1605%" height="15" fill="rgb(244,199,31)" fg:x="721" fg:w="2"/><text x="58.1152%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="57.7849%" y="373" width="0.3210%" height="15" fill="rgb(207,92,16)" fg:x="720" fg:w="4"/><text x="58.0349%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="58.0257%" y="357" width="0.0803%" height="15" fill="rgb(215,31,19)" fg:x="723" fg:w="1"/><text x="58.2757%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="58.1059%" y="357" width="0.0803%" height="15" fill="rgb(245,118,14)" fg:x="724" fg:w="1"/><text x="58.3559%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="58.3467%" y="341" width="0.1605%" height="15" fill="rgb(248,12,46)" fg:x="727" fg:w="2"/><text x="58.5967%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.3467%" y="325" width="0.1605%" height="15" fill="rgb(209,119,0)" fg:x="727" fg:w="2"/><text x="58.5967%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="58.1059%" y="373" width="0.4815%" height="15" fill="rgb(254,51,44)" fg:x="724" fg:w="6"/><text x="58.3559%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="58.1862%" y="357" width="0.4013%" height="15" fill="rgb(253,182,35)" fg:x="725" fg:w="5"/><text x="58.4362%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5072%" y="341" width="0.0803%" height="15" fill="rgb(205,198,39)" fg:x="729" fg:w="1"/><text x="58.7572%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="58.6677%" y="341" width="0.4013%" height="15" fill="rgb(251,175,48)" fg:x="731" fg:w="5"/><text x="58.9177%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.9085%" y="325" width="0.1605%" height="15" fill="rgb(239,38,17)" fg:x="734" fg:w="2"/><text x="59.1585%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="59.1493%" y="325" width="0.0803%" height="15" fill="rgb(212,101,8)" fg:x="737" fg:w="1"/><text x="59.3993%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="59.2295%" y="325" width="0.1605%" height="15" fill="rgb(228,35,17)" fg:x="738" fg:w="2"/><text x="59.4795%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="59.5506%" y="309" width="0.2408%" height="15" fill="rgb(214,95,8)" fg:x="742" fg:w="3"/><text x="59.8006%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7111%" y="293" width="0.0803%" height="15" fill="rgb(210,176,35)" fg:x="744" fg:w="1"/><text x="59.9611%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="59.3900%" y="325" width="0.4815%" height="15" fill="rgb(226,4,3)" fg:x="740" fg:w="6"/><text x="59.6400%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="59.7913%" y="309" width="0.0803%" height="15" fill="rgb(232,133,14)" fg:x="745" fg:w="1"/><text x="60.0413%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7913%" y="293" width="0.0803%" height="15" fill="rgb(250,191,8)" fg:x="745" fg:w="1"/><text x="60.0413%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 2.25%)</title><rect x="57.7849%" y="405" width="2.2472%" height="15" fill="rgb(213,12,45)" fg:x="720" fg:w="28"/><text x="58.0349%" y="415.50">&lt;..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (28 samples, 2.25%)</title><rect x="57.7849%" y="389" width="2.2472%" height="15" fill="rgb(233,78,26)" fg:x="720" fg:w="28"/><text x="58.0349%" y="399.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.44%)</title><rect x="58.5875%" y="373" width="1.4446%" height="15" fill="rgb(245,222,11)" fg:x="730" fg:w="18"/><text x="58.8375%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="58.6677%" y="357" width="1.3644%" height="15" fill="rgb(216,174,12)" fg:x="731" fg:w="17"/><text x="58.9177%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="59.0690%" y="341" width="0.9631%" height="15" fill="rgb(213,15,9)" fg:x="736" fg:w="12"/><text x="59.3190%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.8716%" y="325" width="0.1605%" height="15" fill="rgb(238,103,32)" fg:x="746" fg:w="2"/><text x="60.1216%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.0321%" y="405" width="0.1605%" height="15" fill="rgb(245,85,15)" fg:x="748" fg:w="2"/><text x="60.2821%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (49 samples, 3.93%)</title><rect x="56.4205%" y="453" width="3.9326%" height="15" fill="rgb(254,204,5)" fg:x="703" fg:w="49"/><text x="56.6705%" y="463.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (49 samples, 3.93%)</title><rect x="56.4205%" y="437" width="3.9326%" height="15" fill="rgb(231,178,15)" fg:x="703" fg:w="49"/><text x="56.6705%" y="447.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (32 samples, 2.57%)</title><rect x="57.7849%" y="421" width="2.5682%" height="15" fill="rgb(248,151,3)" fg:x="720" fg:w="32"/><text x="58.0349%" y="431.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.1926%" y="405" width="0.1605%" height="15" fill="rgb(250,139,13)" fg:x="750" fg:w="2"/><text x="60.4426%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.6742%" y="309" width="0.0803%" height="15" fill="rgb(243,107,53)" fg:x="756" fg:w="1"/><text x="60.9242%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.6742%" y="293" width="0.0803%" height="15" fill="rgb(232,81,15)" fg:x="756" fg:w="1"/><text x="60.9242%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.6742%" y="277" width="0.0803%" height="15" fill="rgb(225,187,48)" fg:x="756" fg:w="1"/><text x="60.9242%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.6742%" y="261" width="0.0803%" height="15" fill="rgb(205,116,12)" fg:x="756" fg:w="1"/><text x="60.9242%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.6742%" y="245" width="0.0803%" height="15" fill="rgb(220,222,31)" fg:x="756" fg:w="1"/><text x="60.9242%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.6742%" y="229" width="0.0803%" height="15" fill="rgb(233,187,49)" fg:x="756" fg:w="1"/><text x="60.9242%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.6742%" y="213" width="0.0803%" height="15" fill="rgb(211,168,53)" fg:x="756" fg:w="1"/><text x="60.9242%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.9149%" y="261" width="0.0803%" height="15" fill="rgb(206,160,16)" fg:x="759" fg:w="1"/><text x="61.1649%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.9149%" y="245" width="0.0803%" height="15" fill="rgb(254,164,13)" fg:x="759" fg:w="1"/><text x="61.1649%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.9952%" y="261" width="0.0803%" height="15" fill="rgb(229,45,30)" fg:x="760" fg:w="1"/><text x="61.2452%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9952%" y="245" width="0.0803%" height="15" fill="rgb(237,32,10)" fg:x="760" fg:w="1"/><text x="61.2452%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="60.5939%" y="325" width="0.5618%" height="15" fill="rgb(251,20,47)" fg:x="755" fg:w="7"/><text x="60.8439%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.7544%" y="309" width="0.4013%" height="15" fill="rgb(251,116,12)" fg:x="757" fg:w="5"/><text x="61.0044%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="60.9149%" y="293" width="0.2408%" height="15" fill="rgb(214,227,27)" fg:x="759" fg:w="3"/><text x="61.1649%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.9149%" y="277" width="0.2408%" height="15" fill="rgb(248,10,53)" fg:x="759" fg:w="3"/><text x="61.1649%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0754%" y="261" width="0.0803%" height="15" fill="rgb(221,176,25)" fg:x="761" fg:w="1"/><text x="61.3254%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="60.5939%" y="357" width="0.6421%" height="15" fill="rgb(205,70,46)" fg:x="755" fg:w="8"/><text x="60.8439%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="60.5939%" y="341" width="0.6421%" height="15" fill="rgb(217,45,38)" fg:x="755" fg:w="8"/><text x="60.8439%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1557%" y="325" width="0.0803%" height="15" fill="rgb(243,6,54)" fg:x="762" fg:w="1"/><text x="61.4057%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1557%" y="309" width="0.0803%" height="15" fill="rgb(242,76,23)" fg:x="762" fg:w="1"/><text x="61.4057%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1557%" y="293" width="0.0803%" height="15" fill="rgb(239,166,0)" fg:x="762" fg:w="1"/><text x="61.4057%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="60.4334%" y="389" width="0.9631%" height="15" fill="rgb(238,174,32)" fg:x="753" fg:w="12"/><text x="60.6834%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="60.4334%" y="373" width="0.9631%" height="15" fill="rgb(238,124,44)" fg:x="753" fg:w="12"/><text x="60.6834%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.2360%" y="357" width="0.1605%" height="15" fill="rgb(206,185,9)" fg:x="763" fg:w="2"/><text x="61.4860%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.2360%" y="341" width="0.1605%" height="15" fill="rgb(215,157,17)" fg:x="763" fg:w="2"/><text x="61.4860%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.3965%" y="389" width="0.0803%" height="15" fill="rgb(251,17,29)" fg:x="765" fg:w="1"/><text x="61.6465%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.3965%" y="373" width="0.0803%" height="15" fill="rgb(227,113,27)" fg:x="765" fg:w="1"/><text x="61.6465%" y="383.50"></text></g><g><title>engine::session::state::State::close (167 samples, 13.40%)</title><rect x="48.2343%" y="549" width="13.4029%" height="15" fill="rgb(217,226,24)" fg:x="601" fg:w="167"/><text x="48.4843%" y="559.50">engine::session::sta..</text></g><g><title>engine::session::state::State::flush_entities (167 samples, 13.40%)</title><rect x="48.2343%" y="533" width="13.4029%" height="15" fill="rgb(251,99,38)" fg:x="601" fg:w="167"/><text x="48.4843%" y="543.50">engine::session::sta..</text></g><g><title>core::iter::adapters::try_process (166 samples, 13.32%)</title><rect x="48.3146%" y="517" width="13.3226%" height="15" fill="rgb(231,147,19)" fg:x="602" fg:w="166"/><text x="48.5646%" y="527.50">core::iter::adapters..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (166 samples, 13.32%)</title><rect x="48.3146%" y="501" width="13.3226%" height="15" fill="rgb(230,86,8)" fg:x="602" fg:w="166"/><text x="48.5646%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (166 samples, 13.32%)</title><rect x="48.3146%" y="485" width="13.3226%" height="15" fill="rgb(237,159,39)" fg:x="602" fg:w="166"/><text x="48.5646%" y="495.50">engine::session::sta..</text></g><g><title>kernel::model::any_entity_changes (107 samples, 8.59%)</title><rect x="53.0498%" y="469" width="8.5875%" height="15" fill="rgb(247,179,47)" fg:x="661" fg:w="107"/><text x="53.2998%" y="479.50">kernel::mode..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (16 samples, 1.28%)</title><rect x="60.3531%" y="453" width="1.2841%" height="15" fill="rgb(253,152,26)" fg:x="752" fg:w="16"/><text x="60.6031%" y="463.50"></text></g><g><title>serde_json::de::from_trait (15 samples, 1.20%)</title><rect x="60.4334%" y="437" width="1.2039%" height="15" fill="rgb(222,211,15)" fg:x="753" fg:w="15"/><text x="60.6834%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.20%)</title><rect x="60.4334%" y="421" width="1.2039%" height="15" fill="rgb(236,193,6)" fg:x="753" fg:w="15"/><text x="60.6834%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.20%)</title><rect x="60.4334%" y="405" width="1.2039%" height="15" fill="rgb(226,206,10)" fg:x="753" fg:w="15"/><text x="60.6834%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.4767%" y="389" width="0.1605%" height="15" fill="rgb(213,125,22)" fg:x="766" fg:w="2"/><text x="61.7267%" y="399.50"></text></g><g><title>engine::session::Session::close (173 samples, 13.88%)</title><rect x="47.9133%" y="565" width="13.8844%" height="15" fill="rgb(221,66,28)" fg:x="597" fg:w="173"/><text x="48.1633%" y="575.50">engine::session::Sess..</text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.16%)</title><rect x="61.6372%" y="549" width="0.1605%" height="15" fill="rgb(222,84,53)" fg:x="768" fg:w="2"/><text x="61.8872%" y="559.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="61.8780%" y="533" width="0.0803%" height="15" fill="rgb(243,50,15)" fg:x="771" fg:w="1"/><text x="62.1280%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="61.8780%" y="517" width="0.0803%" height="15" fill="rgb(208,184,23)" fg:x="771" fg:w="1"/><text x="62.1280%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="61.8780%" y="501" width="0.0803%" height="15" fill="rgb(221,83,2)" fg:x="771" fg:w="1"/><text x="62.1280%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="61.8780%" y="485" width="0.0803%" height="15" fill="rgb(236,53,24)" fg:x="771" fg:w="1"/><text x="62.1280%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="61.8780%" y="469" width="0.0803%" height="15" fill="rgb(244,171,29)" fg:x="771" fg:w="1"/><text x="62.1280%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="62.1990%" y="373" width="0.0803%" height="15" fill="rgb(205,19,11)" fg:x="775" fg:w="1"/><text x="62.4490%" y="383.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.08%)</title><rect x="62.1990%" y="357" width="0.0803%" height="15" fill="rgb(207,108,29)" fg:x="775" fg:w="1"/><text x="62.4490%" y="367.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.08%)</title><rect x="62.1990%" y="341" width="0.0803%" height="15" fill="rgb(236,215,43)" fg:x="775" fg:w="1"/><text x="62.4490%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="62.1990%" y="325" width="0.0803%" height="15" fill="rgb(213,58,35)" fg:x="775" fg:w="1"/><text x="62.4490%" y="335.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (1 samples, 0.08%)</title><rect x="62.1990%" y="309" width="0.0803%" height="15" fill="rgb(220,211,46)" fg:x="775" fg:w="1"/><text x="62.4490%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="62.1990%" y="293" width="0.0803%" height="15" fill="rgb(212,134,16)" fg:x="775" fg:w="1"/><text x="62.4490%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.1990%" y="277" width="0.0803%" height="15" fill="rgb(232,90,44)" fg:x="775" fg:w="1"/><text x="62.4490%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.1990%" y="261" width="0.0803%" height="15" fill="rgb(212,18,36)" fg:x="775" fg:w="1"/><text x="62.4490%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.1990%" y="245" width="0.0803%" height="15" fill="rgb(206,112,24)" fg:x="775" fg:w="1"/><text x="62.4490%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.1990%" y="229" width="0.0803%" height="15" fill="rgb(238,223,40)" fg:x="775" fg:w="1"/><text x="62.4490%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.1990%" y="213" width="0.0803%" height="15" fill="rgb(226,169,20)" fg:x="775" fg:w="1"/><text x="62.4490%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.1990%" y="197" width="0.0803%" height="15" fill="rgb(241,64,52)" fg:x="775" fg:w="1"/><text x="62.4490%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.1990%" y="181" width="0.0803%" height="15" fill="rgb(228,120,25)" fg:x="775" fg:w="1"/><text x="62.4490%" y="191.50"></text></g><g><title>core::fmt::Formatter::debug_struct (1 samples, 0.08%)</title><rect x="62.2793%" y="357" width="0.0803%" height="15" fill="rgb(234,108,19)" fg:x="776" fg:w="1"/><text x="62.5293%" y="367.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="62.2793%" y="341" width="0.0803%" height="15" fill="rgb(236,133,29)" fg:x="776" fg:w="1"/><text x="62.5293%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="62.2793%" y="325" width="0.0803%" height="15" fill="rgb(246,174,53)" fg:x="776" fg:w="1"/><text x="62.5293%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.2793%" y="309" width="0.0803%" height="15" fill="rgb(210,105,35)" fg:x="776" fg:w="1"/><text x="62.5293%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.2793%" y="293" width="0.0803%" height="15" fill="rgb(225,27,26)" fg:x="776" fg:w="1"/><text x="62.5293%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.2793%" y="277" width="0.0803%" height="15" fill="rgb(233,2,39)" fg:x="776" fg:w="1"/><text x="62.5293%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.2793%" y="261" width="0.0803%" height="15" fill="rgb(219,164,26)" fg:x="776" fg:w="1"/><text x="62.5293%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.2793%" y="245" width="0.0803%" height="15" fill="rgb(236,211,5)" fg:x="776" fg:w="1"/><text x="62.5293%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.2793%" y="229" width="0.0803%" height="15" fill="rgb(244,227,23)" fg:x="776" fg:w="1"/><text x="62.5293%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.2793%" y="213" width="0.0803%" height="15" fill="rgb(230,184,8)" fg:x="776" fg:w="1"/><text x="62.5293%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.2793%" y="197" width="0.0803%" height="15" fill="rgb(217,125,48)" fg:x="776" fg:w="1"/><text x="62.5293%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.2793%" y="181" width="0.0803%" height="15" fill="rgb(223,192,47)" fg:x="776" fg:w="1"/><text x="62.5293%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.2793%" y="165" width="0.0803%" height="15" fill="rgb(226,119,10)" fg:x="776" fg:w="1"/><text x="62.5293%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.2793%" y="149" width="0.0803%" height="15" fill="rgb(221,49,29)" fg:x="776" fg:w="1"/><text x="62.5293%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="62.2793%" y="133" width="0.0803%" height="15" fill="rgb(217,205,19)" fg:x="776" fg:w="1"/><text x="62.5293%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="62.2793%" y="117" width="0.0803%" height="15" fill="rgb(242,104,7)" fg:x="776" fg:w="1"/><text x="62.5293%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="62.2793%" y="101" width="0.0803%" height="15" fill="rgb(209,154,48)" fg:x="776" fg:w="1"/><text x="62.5293%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="62.2793%" y="85" width="0.0803%" height="15" fill="rgb(219,213,46)" fg:x="776" fg:w="1"/><text x="62.5293%" y="95.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="62.2793%" y="373" width="0.2408%" height="15" fill="rgb(229,105,38)" fg:x="776" fg:w="3"/><text x="62.5293%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.16%)</title><rect x="62.3596%" y="357" width="0.1605%" height="15" fill="rgb(205,151,5)" fg:x="777" fg:w="2"/><text x="62.6096%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.16%)</title><rect x="62.3596%" y="341" width="0.1605%" height="15" fill="rgb(248,115,40)" fg:x="777" fg:w="2"/><text x="62.6096%" y="351.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.16%)</title><rect x="62.3596%" y="325" width="0.1605%" height="15" fill="rgb(206,179,2)" fg:x="777" fg:w="2"/><text x="62.6096%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="62.3596%" y="309" width="0.1605%" height="15" fill="rgb(230,103,24)" fg:x="777" fg:w="2"/><text x="62.6096%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="62.3596%" y="293" width="0.1605%" height="15" fill="rgb(218,152,4)" fg:x="777" fg:w="2"/><text x="62.6096%" y="303.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="62.3596%" y="277" width="0.1605%" height="15" fill="rgb(236,161,54)" fg:x="777" fg:w="2"/><text x="62.6096%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.4398%" y="261" width="0.0803%" height="15" fill="rgb(226,65,17)" fg:x="778" fg:w="1"/><text x="62.6898%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.4398%" y="245" width="0.0803%" height="15" fill="rgb(221,134,44)" fg:x="778" fg:w="1"/><text x="62.6898%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.4398%" y="229" width="0.0803%" height="15" fill="rgb(251,129,4)" fg:x="778" fg:w="1"/><text x="62.6898%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.4398%" y="213" width="0.0803%" height="15" fill="rgb(244,32,34)" fg:x="778" fg:w="1"/><text x="62.6898%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.4398%" y="197" width="0.0803%" height="15" fill="rgb(251,224,37)" fg:x="778" fg:w="1"/><text x="62.6898%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.4398%" y="181" width="0.0803%" height="15" fill="rgb(248,117,31)" fg:x="778" fg:w="1"/><text x="62.6898%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.4398%" y="165" width="0.0803%" height="15" fill="rgb(222,208,37)" fg:x="778" fg:w="1"/><text x="62.6898%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="62.5201%" y="229" width="0.0803%" height="15" fill="rgb(234,211,25)" fg:x="779" fg:w="1"/><text x="62.7701%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="62.5201%" y="213" width="0.0803%" height="15" fill="rgb(211,72,6)" fg:x="779" fg:w="1"/><text x="62.7701%" y="223.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (7 samples, 0.56%)</title><rect x="62.1188%" y="421" width="0.5618%" height="15" fill="rgb(249,198,38)" fg:x="774" fg:w="7"/><text x="62.3688%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (6 samples, 0.48%)</title><rect x="62.1990%" y="405" width="0.4815%" height="15" fill="rgb(221,86,51)" fg:x="775" fg:w="6"/><text x="62.4490%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (6 samples, 0.48%)</title><rect x="62.1990%" y="389" width="0.4815%" height="15" fill="rgb(226,178,43)" fg:x="775" fg:w="6"/><text x="62.4490%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="62.5201%" y="373" width="0.1605%" height="15" fill="rgb(215,145,7)" fg:x="779" fg:w="2"/><text x="62.7701%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="62.5201%" y="357" width="0.1605%" height="15" fill="rgb(250,202,36)" fg:x="779" fg:w="2"/><text x="62.7701%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="62.5201%" y="341" width="0.1605%" height="15" fill="rgb(215,86,13)" fg:x="779" fg:w="2"/><text x="62.7701%" y="351.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="62.5201%" y="325" width="0.1605%" height="15" fill="rgb(221,134,12)" fg:x="779" fg:w="2"/><text x="62.7701%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="62.5201%" y="309" width="0.1605%" height="15" fill="rgb(213,82,10)" fg:x="779" fg:w="2"/><text x="62.7701%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="62.5201%" y="293" width="0.1605%" height="15" fill="rgb(214,142,0)" fg:x="779" fg:w="2"/><text x="62.7701%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="62.5201%" y="277" width="0.1605%" height="15" fill="rgb(205,145,9)" fg:x="779" fg:w="2"/><text x="62.7701%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="62.5201%" y="261" width="0.1605%" height="15" fill="rgb(244,214,8)" fg:x="779" fg:w="2"/><text x="62.7701%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="62.5201%" y="245" width="0.1605%" height="15" fill="rgb(224,72,51)" fg:x="779" fg:w="2"/><text x="62.7701%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.6003%" y="229" width="0.0803%" height="15" fill="rgb(233,137,37)" fg:x="780" fg:w="1"/><text x="62.8503%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.6003%" y="213" width="0.0803%" height="15" fill="rgb(208,71,28)" fg:x="780" fg:w="1"/><text x="62.8503%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="62.6003%" y="197" width="0.0803%" height="15" fill="rgb(226,31,7)" fg:x="780" fg:w="1"/><text x="62.8503%" y="207.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.08%)</title><rect x="62.6806%" y="421" width="0.0803%" height="15" fill="rgb(229,62,18)" fg:x="781" fg:w="1"/><text x="62.9306%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="62.6806%" y="405" width="0.0803%" height="15" fill="rgb(226,74,28)" fg:x="781" fg:w="1"/><text x="62.9306%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (1 samples, 0.08%)</title><rect x="62.6806%" y="389" width="0.0803%" height="15" fill="rgb(214,170,18)" fg:x="781" fg:w="1"/><text x="62.9306%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::is_pretty (1 samples, 0.08%)</title><rect x="62.6806%" y="373" width="0.0803%" height="15" fill="rgb(227,229,35)" fg:x="781" fg:w="1"/><text x="62.9306%" y="383.50"></text></g><g><title>core::fmt::Formatter::alternate (1 samples, 0.08%)</title><rect x="62.6806%" y="357" width="0.0803%" height="15" fill="rgb(225,181,39)" fg:x="781" fg:w="1"/><text x="62.9306%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (10 samples, 0.80%)</title><rect x="62.0385%" y="517" width="0.8026%" height="15" fill="rgb(253,124,44)" fg:x="773" fg:w="10"/><text x="62.2885%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 0.80%)</title><rect x="62.0385%" y="501" width="0.8026%" height="15" fill="rgb(220,75,18)" fg:x="773" fg:w="10"/><text x="62.2885%" y="511.50"></text></g><g><title>core::fmt::write (10 samples, 0.80%)</title><rect x="62.0385%" y="485" width="0.8026%" height="15" fill="rgb(239,175,43)" fg:x="773" fg:w="10"/><text x="62.2885%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (10 samples, 0.80%)</title><rect x="62.0385%" y="469" width="0.8026%" height="15" fill="rgb(228,112,50)" fg:x="773" fg:w="10"/><text x="62.2885%" y="479.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (10 samples, 0.80%)</title><rect x="62.0385%" y="453" width="0.8026%" height="15" fill="rgb(232,105,36)" fg:x="773" fg:w="10"/><text x="62.2885%" y="463.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (9 samples, 0.72%)</title><rect x="62.1188%" y="437" width="0.7223%" height="15" fill="rgb(227,137,47)" fg:x="774" fg:w="9"/><text x="62.3688%" y="447.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="62.7608%" y="421" width="0.0803%" height="15" fill="rgb(217,51,9)" fg:x="782" fg:w="1"/><text x="63.0108%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="62.7608%" y="405" width="0.0803%" height="15" fill="rgb(245,117,0)" fg:x="782" fg:w="1"/><text x="63.0108%" y="415.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="62.8411%" y="517" width="0.0803%" height="15" fill="rgb(252,52,30)" fg:x="783" fg:w="1"/><text x="63.0911%" y="527.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="63.0016%" y="501" width="0.3210%" height="15" fill="rgb(227,85,33)" fg:x="785" fg:w="4"/><text x="63.2516%" y="511.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (4 samples, 0.32%)</title><rect x="63.3226%" y="501" width="0.3210%" height="15" fill="rgb(220,157,20)" fg:x="789" fg:w="4"/><text x="63.5726%" y="511.50"></text></g><g><title>tracing_core::callsite::register_dispatch (4 samples, 0.32%)</title><rect x="63.3226%" y="485" width="0.3210%" height="15" fill="rgb(254,14,34)" fg:x="789" fg:w="4"/><text x="63.5726%" y="495.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (4 samples, 0.32%)</title><rect x="63.3226%" y="469" width="0.3210%" height="15" fill="rgb(216,103,41)" fg:x="789" fg:w="4"/><text x="63.5726%" y="479.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (3 samples, 0.24%)</title><rect x="63.4029%" y="453" width="0.2408%" height="15" fill="rgb(245,221,9)" fg:x="790" fg:w="3"/><text x="63.6529%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.6437%" y="373" width="0.2408%" height="15" fill="rgb(254,136,47)" fg:x="793" fg:w="3"/><text x="63.8937%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.6437%" y="357" width="0.2408%" height="15" fill="rgb(235,71,46)" fg:x="793" fg:w="3"/><text x="63.8937%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.7239%" y="341" width="0.1605%" height="15" fill="rgb(242,154,29)" fg:x="794" fg:w="2"/><text x="63.9739%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.7239%" y="325" width="0.1605%" height="15" fill="rgb(210,65,31)" fg:x="794" fg:w="2"/><text x="63.9739%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="63.7239%" y="309" width="0.1605%" height="15" fill="rgb(244,9,50)" fg:x="794" fg:w="2"/><text x="63.9739%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="63.7239%" y="293" width="0.1605%" height="15" fill="rgb(215,141,38)" fg:x="794" fg:w="2"/><text x="63.9739%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="63.7239%" y="277" width="0.1605%" height="15" fill="rgb(241,129,6)" fg:x="794" fg:w="2"/><text x="63.9739%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.7239%" y="261" width="0.1605%" height="15" fill="rgb(253,169,4)" fg:x="794" fg:w="2"/><text x="63.9739%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.7239%" y="245" width="0.1605%" height="15" fill="rgb(237,82,36)" fg:x="794" fg:w="2"/><text x="63.9739%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="63.7239%" y="229" width="0.1605%" height="15" fill="rgb(209,171,11)" fg:x="794" fg:w="2"/><text x="63.9739%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="63.7239%" y="213" width="0.1605%" height="15" fill="rgb(242,19,22)" fg:x="794" fg:w="2"/><text x="63.9739%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="63.7239%" y="197" width="0.1605%" height="15" fill="rgb(251,122,24)" fg:x="794" fg:w="2"/><text x="63.9739%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="63.7239%" y="181" width="0.1605%" height="15" fill="rgb(226,166,42)" fg:x="794" fg:w="2"/><text x="63.9739%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="63.8844%" y="373" width="0.0803%" height="15" fill="rgb(244,101,48)" fg:x="796" fg:w="1"/><text x="64.1344%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.8844%" y="357" width="0.0803%" height="15" fill="rgb(227,125,1)" fg:x="796" fg:w="1"/><text x="64.1344%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="63.6437%" y="389" width="0.4013%" height="15" fill="rgb(206,79,43)" fg:x="793" fg:w="5"/><text x="63.8937%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.9647%" y="373" width="0.0803%" height="15" fill="rgb(241,109,41)" fg:x="797" fg:w="1"/><text x="64.2147%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9647%" y="357" width="0.0803%" height="15" fill="rgb(219,73,4)" fg:x="797" fg:w="1"/><text x="64.2147%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.9647%" y="341" width="0.0803%" height="15" fill="rgb(239,25,41)" fg:x="797" fg:w="1"/><text x="64.2147%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9647%" y="325" width="0.0803%" height="15" fill="rgb(208,88,46)" fg:x="797" fg:w="1"/><text x="64.2147%" y="335.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="64.0449%" y="341" width="0.0803%" height="15" fill="rgb(239,184,9)" fg:x="798" fg:w="1"/><text x="64.2949%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2857%" y="293" width="0.0803%" height="15" fill="rgb(223,114,13)" fg:x="801" fg:w="1"/><text x="64.5357%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2857%" y="277" width="0.0803%" height="15" fill="rgb(214,28,42)" fg:x="801" fg:w="1"/><text x="64.5357%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2857%" y="261" width="0.0803%" height="15" fill="rgb(252,32,44)" fg:x="801" fg:w="1"/><text x="64.5357%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2857%" y="245" width="0.0803%" height="15" fill="rgb(231,159,4)" fg:x="801" fg:w="1"/><text x="64.5357%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2857%" y="229" width="0.0803%" height="15" fill="rgb(210,35,26)" fg:x="801" fg:w="1"/><text x="64.5357%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.2857%" y="213" width="0.0803%" height="15" fill="rgb(208,190,37)" fg:x="801" fg:w="1"/><text x="64.5357%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.2857%" y="197" width="0.0803%" height="15" fill="rgb(226,148,22)" fg:x="801" fg:w="1"/><text x="64.5357%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.2857%" y="181" width="0.0803%" height="15" fill="rgb(242,153,24)" fg:x="801" fg:w="1"/><text x="64.5357%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2857%" y="165" width="0.0803%" height="15" fill="rgb(213,133,7)" fg:x="801" fg:w="1"/><text x="64.5357%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2857%" y="149" width="0.0803%" height="15" fill="rgb(248,206,18)" fg:x="801" fg:w="1"/><text x="64.5357%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.2857%" y="133" width="0.0803%" height="15" fill="rgb(233,157,4)" fg:x="801" fg:w="1"/><text x="64.5357%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.2857%" y="117" width="0.0803%" height="15" fill="rgb(249,179,32)" fg:x="801" fg:w="1"/><text x="64.5357%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.2857%" y="101" width="0.0803%" height="15" fill="rgb(248,69,35)" fg:x="801" fg:w="1"/><text x="64.5357%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.2857%" y="85" width="0.0803%" height="15" fill="rgb(249,158,38)" fg:x="801" fg:w="1"/><text x="64.5357%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2857%" y="69" width="0.0803%" height="15" fill="rgb(223,18,43)" fg:x="801" fg:w="1"/><text x="64.5357%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="64.1252%" y="325" width="0.3210%" height="15" fill="rgb(238,42,45)" fg:x="799" fg:w="4"/><text x="64.3752%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.2857%" y="309" width="0.1605%" height="15" fill="rgb(219,65,47)" fg:x="801" fg:w="2"/><text x="64.5357%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3660%" y="293" width="0.0803%" height="15" fill="rgb(248,153,12)" fg:x="802" fg:w="1"/><text x="64.6160%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="64.4462%" y="325" width="0.1605%" height="15" fill="rgb(240,118,4)" fg:x="803" fg:w="2"/><text x="64.6962%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.4462%" y="309" width="0.1605%" height="15" fill="rgb(250,96,34)" fg:x="803" fg:w="2"/><text x="64.6962%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.4462%" y="293" width="0.1605%" height="15" fill="rgb(221,15,4)" fg:x="803" fg:w="2"/><text x="64.6962%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="64.4462%" y="277" width="0.1605%" height="15" fill="rgb(217,149,33)" fg:x="803" fg:w="2"/><text x="64.6962%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.5265%" y="261" width="0.0803%" height="15" fill="rgb(213,58,29)" fg:x="804" fg:w="1"/><text x="64.7765%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.5265%" y="245" width="0.0803%" height="15" fill="rgb(236,218,9)" fg:x="804" fg:w="1"/><text x="64.7765%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6870%" y="277" width="0.0803%" height="15" fill="rgb(248,40,19)" fg:x="806" fg:w="1"/><text x="64.9370%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="64.8475%" y="133" width="0.0803%" height="15" fill="rgb(212,17,6)" fg:x="808" fg:w="1"/><text x="65.0975%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.8475%" y="165" width="0.1605%" height="15" fill="rgb(206,212,20)" fg:x="808" fg:w="2"/><text x="65.0975%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.8475%" y="149" width="0.1605%" height="15" fill="rgb(229,80,37)" fg:x="808" fg:w="2"/><text x="65.0975%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9278%" y="133" width="0.0803%" height="15" fill="rgb(253,8,37)" fg:x="809" fg:w="1"/><text x="65.1778%" y="143.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="64.9278%" y="117" width="0.0803%" height="15" fill="rgb(215,16,43)" fg:x="809" fg:w="1"/><text x="65.1778%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="64.8475%" y="197" width="0.2408%" height="15" fill="rgb(236,219,16)" fg:x="808" fg:w="3"/><text x="65.0975%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.8475%" y="181" width="0.2408%" height="15" fill="rgb(251,0,3)" fg:x="808" fg:w="3"/><text x="65.0975%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.0080%" y="165" width="0.0803%" height="15" fill="rgb(207,133,37)" fg:x="810" fg:w="1"/><text x="65.2580%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.0080%" y="149" width="0.0803%" height="15" fill="rgb(250,143,20)" fg:x="810" fg:w="1"/><text x="65.2580%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.0080%" y="133" width="0.0803%" height="15" fill="rgb(242,19,50)" fg:x="810" fg:w="1"/><text x="65.2580%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.0080%" y="117" width="0.0803%" height="15" fill="rgb(206,124,43)" fg:x="810" fg:w="1"/><text x="65.2580%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.0080%" y="101" width="0.0803%" height="15" fill="rgb(229,4,38)" fg:x="810" fg:w="1"/><text x="65.2580%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0080%" y="85" width="0.0803%" height="15" fill="rgb(247,220,45)" fg:x="810" fg:w="1"/><text x="65.2580%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="64.8475%" y="229" width="0.3210%" height="15" fill="rgb(247,195,0)" fg:x="808" fg:w="4"/><text x="65.0975%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="64.8475%" y="213" width="0.3210%" height="15" fill="rgb(252,12,19)" fg:x="808" fg:w="4"/><text x="65.0975%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="65.0883%" y="197" width="0.0803%" height="15" fill="rgb(222,49,50)" fg:x="811" fg:w="1"/><text x="65.3383%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.1685%" y="197" width="0.0803%" height="15" fill="rgb(209,157,28)" fg:x="812" fg:w="1"/><text x="65.4185%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.2488%" y="165" width="0.0803%" height="15" fill="rgb(238,174,24)" fg:x="813" fg:w="1"/><text x="65.4988%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="65.1685%" y="229" width="0.2408%" height="15" fill="rgb(224,17,28)" fg:x="812" fg:w="3"/><text x="65.4185%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="65.1685%" y="213" width="0.2408%" height="15" fill="rgb(249,7,29)" fg:x="812" fg:w="3"/><text x="65.4185%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.2488%" y="197" width="0.1605%" height="15" fill="rgb(243,178,4)" fg:x="813" fg:w="2"/><text x="65.4988%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.2488%" y="181" width="0.1605%" height="15" fill="rgb(246,138,35)" fg:x="813" fg:w="2"/><text x="65.4988%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.3291%" y="165" width="0.0803%" height="15" fill="rgb(251,85,18)" fg:x="814" fg:w="1"/><text x="65.5791%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.3291%" y="149" width="0.0803%" height="15" fill="rgb(254,55,9)" fg:x="814" fg:w="1"/><text x="65.5791%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.3291%" y="133" width="0.0803%" height="15" fill="rgb(248,4,50)" fg:x="814" fg:w="1"/><text x="65.5791%" y="143.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="65.4093%" y="181" width="0.2408%" height="15" fill="rgb(215,208,14)" fg:x="815" fg:w="3"/><text x="65.6593%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="65.4093%" y="165" width="0.2408%" height="15" fill="rgb(218,37,18)" fg:x="815" fg:w="3"/><text x="65.6593%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.4896%" y="149" width="0.1605%" height="15" fill="rgb(206,104,13)" fg:x="816" fg:w="2"/><text x="65.7396%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.4896%" y="133" width="0.1605%" height="15" fill="rgb(248,94,22)" fg:x="816" fg:w="2"/><text x="65.7396%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.5698%" y="117" width="0.0803%" height="15" fill="rgb(235,42,46)" fg:x="817" fg:w="1"/><text x="65.8198%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5698%" y="101" width="0.0803%" height="15" fill="rgb(220,228,48)" fg:x="817" fg:w="1"/><text x="65.8198%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.5698%" y="85" width="0.0803%" height="15" fill="rgb(216,58,12)" fg:x="817" fg:w="1"/><text x="65.8198%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.5698%" y="69" width="0.0803%" height="15" fill="rgb(223,97,52)" fg:x="817" fg:w="1"/><text x="65.8198%" y="79.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5698%" y="53" width="0.0803%" height="15" fill="rgb(208,159,17)" fg:x="817" fg:w="1"/><text x="65.8198%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.5698%" y="37" width="0.0803%" height="15" fill="rgb(215,172,9)" fg:x="817" fg:w="1"/><text x="65.8198%" y="47.50"></text></g><g><title>kernel::model::entity::Entity::from_value (17 samples, 1.36%)</title><rect x="64.6067%" y="325" width="1.3644%" height="15" fill="rgb(252,175,30)" fg:x="805" fg:w="17"/><text x="64.8567%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 1.36%)</title><rect x="64.6067%" y="309" width="1.3644%" height="15" fill="rgb(209,159,10)" fg:x="805" fg:w="17"/><text x="64.8567%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.36%)</title><rect x="64.6067%" y="293" width="1.3644%" height="15" fill="rgb(229,73,51)" fg:x="805" fg:w="17"/><text x="64.8567%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (15 samples, 1.20%)</title><rect x="64.7673%" y="277" width="1.2039%" height="15" fill="rgb(208,212,43)" fg:x="807" fg:w="15"/><text x="65.0173%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.20%)</title><rect x="64.7673%" y="261" width="1.2039%" height="15" fill="rgb(254,123,53)" fg:x="807" fg:w="15"/><text x="65.0173%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (15 samples, 1.20%)</title><rect x="64.7673%" y="245" width="1.2039%" height="15" fill="rgb(254,128,49)" fg:x="807" fg:w="15"/><text x="65.0173%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="65.4093%" y="229" width="0.5618%" height="15" fill="rgb(246,16,16)" fg:x="815" fg:w="7"/><text x="65.6593%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="65.4093%" y="213" width="0.5618%" height="15" fill="rgb(209,200,1)" fg:x="815" fg:w="7"/><text x="65.6593%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (7 samples, 0.56%)</title><rect x="65.4093%" y="197" width="0.5618%" height="15" fill="rgb(235,9,3)" fg:x="815" fg:w="7"/><text x="65.6593%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.6501%" y="181" width="0.3210%" height="15" fill="rgb(233,121,54)" fg:x="818" fg:w="4"/><text x="65.9001%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="65.6501%" y="165" width="0.3210%" height="15" fill="rgb(236,80,25)" fg:x="818" fg:w="4"/><text x="65.9001%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.8909%" y="149" width="0.0803%" height="15" fill="rgb(220,44,24)" fg:x="821" fg:w="1"/><text x="66.1409%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8909%" y="133" width="0.0803%" height="15" fill="rgb(236,225,16)" fg:x="821" fg:w="1"/><text x="66.1409%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.8909%" y="117" width="0.0803%" height="15" fill="rgb(237,140,0)" fg:x="821" fg:w="1"/><text x="66.1409%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.8909%" y="101" width="0.0803%" height="15" fill="rgb(243,225,53)" fg:x="821" fg:w="1"/><text x="66.1409%" y="111.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.8909%" y="85" width="0.0803%" height="15" fill="rgb(240,140,30)" fg:x="821" fg:w="1"/><text x="66.1409%" y="95.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8909%" y="69" width="0.0803%" height="15" fill="rgb(217,51,16)" fg:x="821" fg:w="1"/><text x="66.1409%" y="79.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.2119%" y="85" width="0.0803%" height="15" fill="rgb(245,75,50)" fg:x="825" fg:w="1"/><text x="66.4619%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="66.2119%" y="117" width="0.1605%" height="15" fill="rgb(208,174,22)" fg:x="825" fg:w="2"/><text x="66.4619%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.2119%" y="101" width="0.1605%" height="15" fill="rgb(219,98,50)" fg:x="825" fg:w="2"/><text x="66.4619%" y="111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.2921%" y="85" width="0.0803%" height="15" fill="rgb(243,138,3)" fg:x="826" fg:w="1"/><text x="66.5421%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="66.1316%" y="149" width="0.3210%" height="15" fill="rgb(243,132,26)" fg:x="824" fg:w="4"/><text x="66.3816%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="66.1316%" y="133" width="0.3210%" height="15" fill="rgb(250,201,8)" fg:x="824" fg:w="4"/><text x="66.3816%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.3724%" y="117" width="0.0803%" height="15" fill="rgb(213,91,26)" fg:x="827" fg:w="1"/><text x="66.6224%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.3724%" y="101" width="0.0803%" height="15" fill="rgb(229,117,1)" fg:x="827" fg:w="1"/><text x="66.6224%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="66.1316%" y="181" width="0.4815%" height="15" fill="rgb(229,24,6)" fg:x="824" fg:w="6"/><text x="66.3816%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="66.1316%" y="165" width="0.4815%" height="15" fill="rgb(206,69,11)" fg:x="824" fg:w="6"/><text x="66.3816%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="66.4526%" y="149" width="0.1605%" height="15" fill="rgb(234,111,34)" fg:x="828" fg:w="2"/><text x="66.7026%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5329%" y="133" width="0.0803%" height="15" fill="rgb(213,187,51)" fg:x="829" fg:w="1"/><text x="66.7829%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="65.9711%" y="261" width="0.7223%" height="15" fill="rgb(207,45,11)" fg:x="822" fg:w="9"/><text x="66.2211%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="65.9711%" y="245" width="0.7223%" height="15" fill="rgb(225,151,47)" fg:x="822" fg:w="9"/><text x="66.2211%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="66.1316%" y="229" width="0.5618%" height="15" fill="rgb(211,226,5)" fg:x="824" fg:w="7"/><text x="66.3816%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="66.1316%" y="213" width="0.5618%" height="15" fill="rgb(214,83,52)" fg:x="824" fg:w="7"/><text x="66.3816%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="66.1316%" y="197" width="0.5618%" height="15" fill="rgb(229,49,53)" fg:x="824" fg:w="7"/><text x="66.3816%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.6132%" y="181" width="0.0803%" height="15" fill="rgb(246,8,28)" fg:x="830" fg:w="1"/><text x="66.8632%" y="191.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (40 samples, 3.21%)</title><rect x="63.6437%" y="421" width="3.2103%" height="15" fill="rgb(207,28,41)" fg:x="793" fg:w="40"/><text x="63.8937%" y="431.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (40 samples, 3.21%)</title><rect x="63.6437%" y="405" width="3.2103%" height="15" fill="rgb(254,22,25)" fg:x="793" fg:w="40"/><text x="63.8937%" y="415.50">&lt;pl..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (35 samples, 2.81%)</title><rect x="64.0449%" y="389" width="2.8090%" height="15" fill="rgb(209,120,42)" fg:x="798" fg:w="35"/><text x="64.2949%" y="399.50">&lt;k..</text></g><g><title>kernel::model::EntityPtrResolver::entity (35 samples, 2.81%)</title><rect x="64.0449%" y="373" width="2.8090%" height="15" fill="rgb(216,194,18)" fg:x="798" fg:w="35"/><text x="64.2949%" y="383.50">ke..</text></g><g><title>engine::session::Session::load_entity (35 samples, 2.81%)</title><rect x="64.0449%" y="357" width="2.8090%" height="15" fill="rgb(213,70,17)" fg:x="798" fg:w="35"/><text x="64.2949%" y="367.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (34 samples, 2.73%)</title><rect x="64.1252%" y="341" width="2.7287%" height="15" fill="rgb(228,66,19)" fg:x="799" fg:w="34"/><text x="64.3752%" y="351.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.88%)</title><rect x="65.9711%" y="325" width="0.8828%" height="15" fill="rgb(236,221,54)" fg:x="822" fg:w="11"/><text x="66.2211%" y="335.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="65.9711%" y="309" width="0.8828%" height="15" fill="rgb(207,175,15)" fg:x="822" fg:w="11"/><text x="66.2211%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="65.9711%" y="293" width="0.8828%" height="15" fill="rgb(234,76,8)" fg:x="822" fg:w="11"/><text x="66.2211%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="65.9711%" y="277" width="0.8828%" height="15" fill="rgb(243,106,0)" fg:x="822" fg:w="11"/><text x="66.2211%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.6934%" y="261" width="0.1605%" height="15" fill="rgb(208,48,19)" fg:x="831" fg:w="2"/><text x="66.9434%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.7737%" y="245" width="0.0803%" height="15" fill="rgb(251,50,29)" fg:x="832" fg:w="1"/><text x="67.0237%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="66.7737%" y="229" width="0.0803%" height="15" fill="rgb(222,31,49)" fg:x="832" fg:w="1"/><text x="67.0237%" y="239.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="66.8539%" y="389" width="0.0803%" height="15" fill="rgb(232,33,18)" fg:x="833" fg:w="1"/><text x="67.1039%" y="399.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="66.8539%" y="373" width="0.0803%" height="15" fill="rgb(209,1,44)" fg:x="833" fg:w="1"/><text x="67.1039%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="66.8539%" y="357" width="0.0803%" height="15" fill="rgb(211,7,1)" fg:x="833" fg:w="1"/><text x="67.1039%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="66.8539%" y="341" width="0.0803%" height="15" fill="rgb(224,111,27)" fg:x="833" fg:w="1"/><text x="67.1039%" y="351.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="66.8539%" y="325" width="0.0803%" height="15" fill="rgb(252,195,39)" fg:x="833" fg:w="1"/><text x="67.1039%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="66.8539%" y="309" width="0.0803%" height="15" fill="rgb(237,198,5)" fg:x="833" fg:w="1"/><text x="67.1039%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="66.8539%" y="293" width="0.0803%" height="15" fill="rgb(232,148,1)" fg:x="833" fg:w="1"/><text x="67.1039%" y="303.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="66.8539%" y="277" width="0.0803%" height="15" fill="rgb(249,41,3)" fg:x="833" fg:w="1"/><text x="67.1039%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="66.8539%" y="261" width="0.0803%" height="15" fill="rgb(215,14,33)" fg:x="833" fg:w="1"/><text x="67.1039%" y="271.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="66.8539%" y="245" width="0.0803%" height="15" fill="rgb(209,146,24)" fg:x="833" fg:w="1"/><text x="67.1039%" y="255.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="66.8539%" y="229" width="0.0803%" height="15" fill="rgb(219,51,47)" fg:x="833" fg:w="1"/><text x="67.1039%" y="239.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="66.8539%" y="213" width="0.0803%" height="15" fill="rgb(234,217,40)" fg:x="833" fg:w="1"/><text x="67.1039%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.8539%" y="197" width="0.0803%" height="15" fill="rgb(228,34,26)" fg:x="833" fg:w="1"/><text x="67.1039%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.8539%" y="181" width="0.0803%" height="15" fill="rgb(224,50,29)" fg:x="833" fg:w="1"/><text x="67.1039%" y="191.50"></text></g><g><title>plugins_rune::runner::SharedRunners::after (1 samples, 0.08%)</title><rect x="66.9342%" y="389" width="0.0803%" height="15" fill="rgb(205,79,51)" fg:x="834" fg:w="1"/><text x="67.1842%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0947%" y="373" width="0.0803%" height="15" fill="rgb(218,136,28)" fg:x="836" fg:w="1"/><text x="67.3447%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.1750%" y="325" width="0.1605%" height="15" fill="rgb(220,150,10)" fg:x="837" fg:w="2"/><text x="67.4250%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.2552%" y="309" width="0.0803%" height="15" fill="rgb(242,158,47)" fg:x="838" fg:w="1"/><text x="67.5052%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.2552%" y="293" width="0.0803%" height="15" fill="rgb(209,68,0)" fg:x="838" fg:w="1"/><text x="67.5052%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.2552%" y="277" width="0.0803%" height="15" fill="rgb(208,13,41)" fg:x="838" fg:w="1"/><text x="67.5052%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.2552%" y="261" width="0.0803%" height="15" fill="rgb(226,201,7)" fg:x="838" fg:w="1"/><text x="67.5052%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.2552%" y="245" width="0.0803%" height="15" fill="rgb(236,103,26)" fg:x="838" fg:w="1"/><text x="67.5052%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.2552%" y="229" width="0.0803%" height="15" fill="rgb(243,162,8)" fg:x="838" fg:w="1"/><text x="67.5052%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.2552%" y="213" width="0.0803%" height="15" fill="rgb(237,225,11)" fg:x="838" fg:w="1"/><text x="67.5052%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.2552%" y="197" width="0.0803%" height="15" fill="rgb(247,186,32)" fg:x="838" fg:w="1"/><text x="67.5052%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.2552%" y="181" width="0.0803%" height="15" fill="rgb(215,26,28)" fg:x="838" fg:w="1"/><text x="67.5052%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.2552%" y="165" width="0.0803%" height="15" fill="rgb(208,121,6)" fg:x="838" fg:w="1"/><text x="67.5052%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.2552%" y="149" width="0.0803%" height="15" fill="rgb(225,91,3)" fg:x="838" fg:w="1"/><text x="67.5052%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.2552%" y="133" width="0.0803%" height="15" fill="rgb(246,119,36)" fg:x="838" fg:w="1"/><text x="67.5052%" y="143.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="67.3355%" y="325" width="0.0803%" height="15" fill="rgb(254,173,2)" fg:x="839" fg:w="1"/><text x="67.5855%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="67.3355%" y="309" width="0.0803%" height="15" fill="rgb(209,87,54)" fg:x="839" fg:w="1"/><text x="67.5855%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.6565%" y="213" width="0.0803%" height="15" fill="rgb(223,216,20)" fg:x="843" fg:w="1"/><text x="67.9065%" y="223.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (8 samples, 0.64%)</title><rect x="67.1750%" y="341" width="0.6421%" height="15" fill="rgb(220,31,8)" fg:x="837" fg:w="8"/><text x="67.4250%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="67.4157%" y="325" width="0.4013%" height="15" fill="rgb(220,185,15)" fg:x="840" fg:w="5"/><text x="67.6657%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="67.4157%" y="309" width="0.4013%" height="15" fill="rgb(247,190,50)" fg:x="840" fg:w="5"/><text x="67.6657%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="67.5762%" y="293" width="0.2408%" height="15" fill="rgb(239,173,47)" fg:x="842" fg:w="3"/><text x="67.8262%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="67.5762%" y="277" width="0.2408%" height="15" fill="rgb(218,190,42)" fg:x="842" fg:w="3"/><text x="67.8262%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="67.5762%" y="261" width="0.2408%" height="15" fill="rgb(251,207,16)" fg:x="842" fg:w="3"/><text x="67.8262%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="67.5762%" y="245" width="0.2408%" height="15" fill="rgb(222,199,47)" fg:x="842" fg:w="3"/><text x="67.8262%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.5762%" y="229" width="0.2408%" height="15" fill="rgb(245,190,7)" fg:x="842" fg:w="3"/><text x="67.8262%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="67.7368%" y="213" width="0.0803%" height="15" fill="rgb(239,85,38)" fg:x="844" fg:w="1"/><text x="67.9868%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.8170%" y="341" width="0.0803%" height="15" fill="rgb(229,69,51)" fg:x="845" fg:w="1"/><text x="68.0670%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.8973%" y="277" width="0.1605%" height="15" fill="rgb(231,104,51)" fg:x="846" fg:w="2"/><text x="68.1473%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.8973%" y="261" width="0.1605%" height="15" fill="rgb(235,49,4)" fg:x="846" fg:w="2"/><text x="68.1473%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.8973%" y="245" width="0.1605%" height="15" fill="rgb(246,166,20)" fg:x="846" fg:w="2"/><text x="68.1473%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.9775%" y="229" width="0.0803%" height="15" fill="rgb(230,119,37)" fg:x="847" fg:w="1"/><text x="68.2275%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.9775%" y="213" width="0.0803%" height="15" fill="rgb(234,77,34)" fg:x="847" fg:w="1"/><text x="68.2275%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.9775%" y="197" width="0.0803%" height="15" fill="rgb(211,222,33)" fg:x="847" fg:w="1"/><text x="68.2275%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.9775%" y="181" width="0.0803%" height="15" fill="rgb(226,45,42)" fg:x="847" fg:w="1"/><text x="68.2275%" y="191.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.9775%" y="165" width="0.0803%" height="15" fill="rgb(215,174,28)" fg:x="847" fg:w="1"/><text x="68.2275%" y="175.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.9775%" y="149" width="0.0803%" height="15" fill="rgb(254,173,49)" fg:x="847" fg:w="1"/><text x="68.2275%" y="159.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.9775%" y="133" width="0.0803%" height="15" fill="rgb(229,191,6)" fg:x="847" fg:w="1"/><text x="68.2275%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.9775%" y="117" width="0.0803%" height="15" fill="rgb(212,145,22)" fg:x="847" fg:w="1"/><text x="68.2275%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.9775%" y="101" width="0.0803%" height="15" fill="rgb(226,6,51)" fg:x="847" fg:w="1"/><text x="68.2275%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.9775%" y="85" width="0.0803%" height="15" fill="rgb(227,128,8)" fg:x="847" fg:w="1"/><text x="68.2275%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.9775%" y="69" width="0.0803%" height="15" fill="rgb(205,24,10)" fg:x="847" fg:w="1"/><text x="68.2275%" y="79.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.9775%" y="53" width="0.0803%" height="15" fill="rgb(217,147,27)" fg:x="847" fg:w="1"/><text x="68.2275%" y="63.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.9775%" y="37" width="0.0803%" height="15" fill="rgb(250,82,42)" fg:x="847" fg:w="1"/><text x="68.2275%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="68.0578%" y="277" width="0.0803%" height="15" fill="rgb(248,93,17)" fg:x="848" fg:w="1"/><text x="68.3078%" y="287.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="68.1380%" y="277" width="0.0803%" height="15" fill="rgb(254,212,40)" fg:x="849" fg:w="1"/><text x="68.3880%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.2183%" y="197" width="0.0803%" height="15" fill="rgb(229,209,2)" fg:x="850" fg:w="1"/><text x="68.4683%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.2183%" y="181" width="0.0803%" height="15" fill="rgb(211,50,43)" fg:x="850" fg:w="1"/><text x="68.4683%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.2183%" y="165" width="0.0803%" height="15" fill="rgb(245,196,29)" fg:x="850" fg:w="1"/><text x="68.4683%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.2986%" y="149" width="0.0803%" height="15" fill="rgb(216,132,13)" fg:x="851" fg:w="1"/><text x="68.5486%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.2986%" y="133" width="0.0803%" height="15" fill="rgb(251,108,21)" fg:x="851" fg:w="1"/><text x="68.5486%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.2986%" y="117" width="0.0803%" height="15" fill="rgb(229,174,54)" fg:x="851" fg:w="1"/><text x="68.5486%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.2986%" y="101" width="0.0803%" height="15" fill="rgb(211,175,47)" fg:x="851" fg:w="1"/><text x="68.5486%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.3788%" y="133" width="0.0803%" height="15" fill="rgb(234,5,37)" fg:x="852" fg:w="1"/><text x="68.6288%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.3788%" y="117" width="0.0803%" height="15" fill="rgb(244,150,43)" fg:x="852" fg:w="1"/><text x="68.6288%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="68.2986%" y="181" width="0.2408%" height="15" fill="rgb(242,172,38)" fg:x="851" fg:w="3"/><text x="68.5486%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.2986%" y="165" width="0.2408%" height="15" fill="rgb(205,27,8)" fg:x="851" fg:w="3"/><text x="68.5486%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="68.3788%" y="149" width="0.1605%" height="15" fill="rgb(217,57,3)" fg:x="852" fg:w="2"/><text x="68.6288%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="68.4591%" y="133" width="0.0803%" height="15" fill="rgb(242,21,38)" fg:x="853" fg:w="1"/><text x="68.7091%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4591%" y="117" width="0.0803%" height="15" fill="rgb(209,64,43)" fg:x="853" fg:w="1"/><text x="68.7091%" y="127.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="68.5393%" y="133" width="0.2408%" height="15" fill="rgb(222,2,46)" fg:x="854" fg:w="3"/><text x="68.7893%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="68.5393%" y="181" width="0.3210%" height="15" fill="rgb(218,19,44)" fg:x="854" fg:w="4"/><text x="68.7893%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="68.5393%" y="165" width="0.3210%" height="15" fill="rgb(240,203,42)" fg:x="854" fg:w="4"/><text x="68.7893%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="68.5393%" y="149" width="0.3210%" height="15" fill="rgb(229,23,45)" fg:x="854" fg:w="4"/><text x="68.7893%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="68.7801%" y="133" width="0.0803%" height="15" fill="rgb(205,228,51)" fg:x="857" fg:w="1"/><text x="69.0301%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="68.7801%" y="117" width="0.0803%" height="15" fill="rgb(239,36,20)" fg:x="857" fg:w="1"/><text x="69.0301%" y="127.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="68.8604%" y="133" width="0.0803%" height="15" fill="rgb(248,172,27)" fg:x="858" fg:w="1"/><text x="69.1104%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="68.8604%" y="117" width="0.0803%" height="15" fill="rgb(244,55,32)" fg:x="858" fg:w="1"/><text x="69.1104%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8604%" y="101" width="0.0803%" height="15" fill="rgb(215,97,16)" fg:x="858" fg:w="1"/><text x="69.1104%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.8604%" y="85" width="0.0803%" height="15" fill="rgb(224,80,29)" fg:x="858" fg:w="1"/><text x="69.1104%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.8604%" y="69" width="0.0803%" height="15" fill="rgb(216,93,47)" fg:x="858" fg:w="1"/><text x="69.1104%" y="79.50"></text></g><g><title>kernel::model::entity::Entity::from_value (11 samples, 0.88%)</title><rect x="68.2183%" y="277" width="0.8828%" height="15" fill="rgb(238,159,10)" fg:x="850" fg:w="11"/><text x="68.4683%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="68.2183%" y="261" width="0.8828%" height="15" fill="rgb(223,98,29)" fg:x="850" fg:w="11"/><text x="68.4683%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="68.2183%" y="245" width="0.8828%" height="15" fill="rgb(210,176,23)" fg:x="850" fg:w="11"/><text x="68.4683%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.88%)</title><rect x="68.2183%" y="229" width="0.8828%" height="15" fill="rgb(242,162,27)" fg:x="850" fg:w="11"/><text x="68.4683%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="68.2183%" y="213" width="0.8828%" height="15" fill="rgb(245,109,32)" fg:x="850" fg:w="11"/><text x="68.4683%" y="223.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.80%)</title><rect x="68.2986%" y="197" width="0.8026%" height="15" fill="rgb(248,87,8)" fg:x="851" fg:w="10"/><text x="68.5486%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.8604%" y="181" width="0.2408%" height="15" fill="rgb(250,160,50)" fg:x="858" fg:w="3"/><text x="69.1104%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.8604%" y="165" width="0.2408%" height="15" fill="rgb(246,165,25)" fg:x="858" fg:w="3"/><text x="69.1104%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="68.8604%" y="149" width="0.2408%" height="15" fill="rgb(249,219,3)" fg:x="858" fg:w="3"/><text x="69.1104%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.9406%" y="133" width="0.1605%" height="15" fill="rgb(226,66,5)" fg:x="859" fg:w="2"/><text x="69.1906%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.0209%" y="117" width="0.0803%" height="15" fill="rgb(250,220,43)" fg:x="860" fg:w="1"/><text x="69.2709%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.1011%" y="133" width="0.1605%" height="15" fill="rgb(225,111,31)" fg:x="861" fg:w="2"/><text x="69.3511%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.1011%" y="117" width="0.1605%" height="15" fill="rgb(248,106,18)" fg:x="861" fg:w="2"/><text x="69.3511%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1814%" y="101" width="0.0803%" height="15" fill="rgb(220,226,45)" fg:x="862" fg:w="1"/><text x="69.4314%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1814%" y="85" width="0.0803%" height="15" fill="rgb(208,58,53)" fg:x="862" fg:w="1"/><text x="69.4314%" y="95.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.1814%" y="69" width="0.0803%" height="15" fill="rgb(209,133,1)" fg:x="862" fg:w="1"/><text x="69.4314%" y="79.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.2616%" y="117" width="0.2408%" height="15" fill="rgb(228,216,27)" fg:x="863" fg:w="3"/><text x="69.5116%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.3419%" y="101" width="0.1605%" height="15" fill="rgb(238,155,2)" fg:x="864" fg:w="2"/><text x="69.5919%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.4222%" y="85" width="0.0803%" height="15" fill="rgb(244,99,37)" fg:x="865" fg:w="1"/><text x="69.6722%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4222%" y="69" width="0.0803%" height="15" fill="rgb(254,32,3)" fg:x="865" fg:w="1"/><text x="69.6722%" y="79.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.5024%" y="117" width="0.0803%" height="15" fill="rgb(234,46,50)" fg:x="866" fg:w="1"/><text x="69.7524%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5024%" y="101" width="0.0803%" height="15" fill="rgb(232,118,51)" fg:x="866" fg:w="1"/><text x="69.7524%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="69.2616%" y="133" width="0.4013%" height="15" fill="rgb(207,24,32)" fg:x="863" fg:w="5"/><text x="69.5116%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5827%" y="117" width="0.0803%" height="15" fill="rgb(208,107,43)" fg:x="867" fg:w="1"/><text x="69.8327%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5827%" y="101" width="0.0803%" height="15" fill="rgb(231,28,9)" fg:x="867" fg:w="1"/><text x="69.8327%" y="111.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.5827%" y="85" width="0.0803%" height="15" fill="rgb(241,204,15)" fg:x="867" fg:w="1"/><text x="69.8327%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="69.1011%" y="149" width="0.6421%" height="15" fill="rgb(214,54,15)" fg:x="861" fg:w="8"/><text x="69.3511%" y="159.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="69.6629%" y="133" width="0.0803%" height="15" fill="rgb(230,12,28)" fg:x="868" fg:w="1"/><text x="69.9129%" y="143.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_decimal (1 samples, 0.08%)</title><rect x="69.6629%" y="117" width="0.0803%" height="15" fill="rgb(221,171,5)" fg:x="868" fg:w="1"/><text x="69.9129%" y="127.50"></text></g><g><title>plugins_core::tools::contained_by (33 samples, 2.65%)</title><rect x="67.1750%" y="357" width="2.6485%" height="15" fill="rgb(207,72,25)" fg:x="837" fg:w="33"/><text x="67.4250%" y="367.50">pl..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (24 samples, 1.93%)</title><rect x="67.8973%" y="341" width="1.9262%" height="15" fill="rgb(249,79,37)" fg:x="846" fg:w="24"/><text x="68.1473%" y="351.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (24 samples, 1.93%)</title><rect x="67.8973%" y="325" width="1.9262%" height="15" fill="rgb(209,98,49)" fg:x="846" fg:w="24"/><text x="68.1473%" y="335.50">k..</text></g><g><title>engine::session::Session::load_entity (24 samples, 1.93%)</title><rect x="67.8973%" y="309" width="1.9262%" height="15" fill="rgb(221,62,13)" fg:x="846" fg:w="24"/><text x="68.1473%" y="319.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.93%)</title><rect x="67.8973%" y="293" width="1.9262%" height="15" fill="rgb(223,39,6)" fg:x="846" fg:w="24"/><text x="68.1473%" y="303.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="69.1011%" y="277" width="0.7223%" height="15" fill="rgb(246,163,20)" fg:x="861" fg:w="9"/><text x="69.3511%" y="287.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="69.1011%" y="261" width="0.7223%" height="15" fill="rgb(211,111,29)" fg:x="861" fg:w="9"/><text x="69.3511%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="69.1011%" y="245" width="0.7223%" height="15" fill="rgb(243,118,5)" fg:x="861" fg:w="9"/><text x="69.3511%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="69.1011%" y="229" width="0.7223%" height="15" fill="rgb(240,144,52)" fg:x="861" fg:w="9"/><text x="69.3511%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="69.1011%" y="213" width="0.7223%" height="15" fill="rgb(244,158,36)" fg:x="861" fg:w="9"/><text x="69.3511%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="69.1011%" y="197" width="0.7223%" height="15" fill="rgb(241,109,37)" fg:x="861" fg:w="9"/><text x="69.3511%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="69.1011%" y="181" width="0.7223%" height="15" fill="rgb(213,95,32)" fg:x="861" fg:w="9"/><text x="69.3511%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="69.1011%" y="165" width="0.7223%" height="15" fill="rgb(252,193,9)" fg:x="861" fg:w="9"/><text x="69.3511%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7432%" y="149" width="0.0803%" height="15" fill="rgb(225,213,21)" fg:x="869" fg:w="1"/><text x="69.9932%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7432%" y="133" width="0.0803%" height="15" fill="rgb(220,172,46)" fg:x="869" fg:w="1"/><text x="69.9932%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7432%" y="117" width="0.0803%" height="15" fill="rgb(235,75,41)" fg:x="869" fg:w="1"/><text x="69.9932%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9037%" y="245" width="0.0803%" height="15" fill="rgb(213,86,9)" fg:x="871" fg:w="1"/><text x="70.1537%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9037%" y="229" width="0.0803%" height="15" fill="rgb(238,127,51)" fg:x="871" fg:w="1"/><text x="70.1537%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.9037%" y="213" width="0.0803%" height="15" fill="rgb(215,2,54)" fg:x="871" fg:w="1"/><text x="70.1537%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.9037%" y="197" width="0.0803%" height="15" fill="rgb(245,80,6)" fg:x="871" fg:w="1"/><text x="70.1537%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.9037%" y="181" width="0.0803%" height="15" fill="rgb(233,106,42)" fg:x="871" fg:w="1"/><text x="70.1537%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.9037%" y="165" width="0.0803%" height="15" fill="rgb(244,86,38)" fg:x="871" fg:w="1"/><text x="70.1537%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.9037%" y="149" width="0.0803%" height="15" fill="rgb(242,167,7)" fg:x="871" fg:w="1"/><text x="70.1537%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.9037%" y="133" width="0.0803%" height="15" fill="rgb(218,216,3)" fg:x="871" fg:w="1"/><text x="70.1537%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.9037%" y="117" width="0.0803%" height="15" fill="rgb(206,136,36)" fg:x="871" fg:w="1"/><text x="70.1537%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.9037%" y="101" width="0.0803%" height="15" fill="rgb(206,206,15)" fg:x="871" fg:w="1"/><text x="70.1537%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.9037%" y="85" width="0.0803%" height="15" fill="rgb(207,163,34)" fg:x="871" fg:w="1"/><text x="70.1537%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9037%" y="69" width="0.0803%" height="15" fill="rgb(240,127,22)" fg:x="871" fg:w="1"/><text x="70.1537%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.9037%" y="277" width="0.1605%" height="15" fill="rgb(227,49,5)" fg:x="871" fg:w="2"/><text x="70.1537%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.9037%" y="261" width="0.1605%" height="15" fill="rgb(231,8,6)" fg:x="871" fg:w="2"/><text x="70.1537%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="69.9839%" y="245" width="0.0803%" height="15" fill="rgb(223,21,24)" fg:x="872" fg:w="1"/><text x="70.2339%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="69.9839%" y="229" width="0.0803%" height="15" fill="rgb(244,44,52)" fg:x="872" fg:w="1"/><text x="70.2339%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.9037%" y="325" width="0.2408%" height="15" fill="rgb(207,73,28)" fg:x="871" fg:w="3"/><text x="70.1537%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="69.9037%" y="309" width="0.2408%" height="15" fill="rgb(234,215,10)" fg:x="871" fg:w="3"/><text x="70.1537%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.9037%" y="293" width="0.2408%" height="15" fill="rgb(236,85,3)" fg:x="871" fg:w="3"/><text x="70.1537%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.0642%" y="277" width="0.0803%" height="15" fill="rgb(236,102,39)" fg:x="873" fg:w="1"/><text x="70.3142%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.1445%" y="197" width="0.0803%" height="15" fill="rgb(243,50,8)" fg:x="874" fg:w="1"/><text x="70.3945%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.1445%" y="181" width="0.0803%" height="15" fill="rgb(207,111,4)" fg:x="874" fg:w="1"/><text x="70.3945%" y="191.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.1445%" y="245" width="0.1605%" height="15" fill="rgb(230,52,42)" fg:x="874" fg:w="2"/><text x="70.3945%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.1445%" y="229" width="0.1605%" height="15" fill="rgb(252,178,50)" fg:x="874" fg:w="2"/><text x="70.3945%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.1445%" y="213" width="0.1605%" height="15" fill="rgb(234,46,35)" fg:x="874" fg:w="2"/><text x="70.3945%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.2247%" y="197" width="0.0803%" height="15" fill="rgb(228,69,37)" fg:x="875" fg:w="1"/><text x="70.4747%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2247%" y="181" width="0.0803%" height="15" fill="rgb(221,21,11)" fg:x="875" fg:w="1"/><text x="70.4747%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="70.2247%" y="165" width="0.0803%" height="15" fill="rgb(223,56,9)" fg:x="875" fg:w="1"/><text x="70.4747%" y="175.50"></text></g><g><title>plugins_core::tools::occupied_by (7 samples, 0.56%)</title><rect x="69.8234%" y="357" width="0.5618%" height="15" fill="rgb(234,30,19)" fg:x="870" fg:w="7"/><text x="70.0734%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (7 samples, 0.56%)</title><rect x="69.8234%" y="341" width="0.5618%" height="15" fill="rgb(211,64,54)" fg:x="870" fg:w="7"/><text x="70.0734%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.1445%" y="325" width="0.2408%" height="15" fill="rgb(250,189,5)" fg:x="874" fg:w="3"/><text x="70.3945%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.1445%" y="309" width="0.2408%" height="15" fill="rgb(214,180,13)" fg:x="874" fg:w="3"/><text x="70.3945%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="70.1445%" y="293" width="0.2408%" height="15" fill="rgb(238,40,40)" fg:x="874" fg:w="3"/><text x="70.3945%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="70.1445%" y="277" width="0.2408%" height="15" fill="rgb(214,101,38)" fg:x="874" fg:w="3"/><text x="70.3945%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="70.1445%" y="261" width="0.2408%" height="15" fill="rgb(242,65,53)" fg:x="874" fg:w="3"/><text x="70.3945%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.3050%" y="245" width="0.0803%" height="15" fill="rgb(230,22,45)" fg:x="876" fg:w="1"/><text x="70.5550%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3050%" y="229" width="0.0803%" height="15" fill="rgb(223,77,1)" fg:x="876" fg:w="1"/><text x="70.5550%" y="239.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (41 samples, 3.29%)</title><rect x="67.1750%" y="373" width="3.2905%" height="15" fill="rgb(227,33,37)" fg:x="837" fg:w="41"/><text x="67.4250%" y="383.50">plu..</text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="70.3852%" y="357" width="0.0803%" height="15" fill="rgb(224,148,39)" fg:x="877" fg:w="1"/><text x="70.6352%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="70.3852%" y="341" width="0.0803%" height="15" fill="rgb(232,212,39)" fg:x="877" fg:w="1"/><text x="70.6352%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="70.3852%" y="325" width="0.0803%" height="15" fill="rgb(251,172,7)" fg:x="877" fg:w="1"/><text x="70.6352%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.3852%" y="309" width="0.0803%" height="15" fill="rgb(219,39,9)" fg:x="877" fg:w="1"/><text x="70.6352%" y="319.50"></text></g><g><title>engine::session::Session::captured (107 samples, 8.59%)</title><rect x="61.9583%" y="533" width="8.5875%" height="15" fill="rgb(228,118,14)" fg:x="772" fg:w="107"/><text x="62.2083%" y="543.50">engine::sess..</text></g><g><title>engine::session::logs::capture (95 samples, 7.62%)</title><rect x="62.9213%" y="517" width="7.6244%" height="15" fill="rgb(207,140,10)" fg:x="784" fg:w="95"/><text x="63.1713%" y="527.50">engine::se..</text></g><g><title>tracing_core::dispatcher::with_default (86 samples, 6.90%)</title><rect x="63.6437%" y="501" width="6.9021%" height="15" fill="rgb(227,111,53)" fg:x="793" fg:w="86"/><text x="63.8937%" y="511.50">tracing_c..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (86 samples, 6.90%)</title><rect x="63.6437%" y="485" width="6.9021%" height="15" fill="rgb(216,165,16)" fg:x="793" fg:w="86"/><text x="63.8937%" y="495.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::apply_middleware (86 samples, 6.90%)</title><rect x="63.6437%" y="469" width="6.9021%" height="15" fill="rgb(226,111,18)" fg:x="793" fg:w="86"/><text x="63.8937%" y="479.50">kernel::p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (86 samples, 6.90%)</title><rect x="63.6437%" y="453" width="6.9021%" height="15" fill="rgb(251,27,17)" fg:x="793" fg:w="86"/><text x="63.8937%" y="463.50">kernel::p..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (86 samples, 6.90%)</title><rect x="63.6437%" y="437" width="6.9021%" height="15" fill="rgb(254,69,9)" fg:x="793" fg:w="86"/><text x="63.8937%" y="447.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (46 samples, 3.69%)</title><rect x="66.8539%" y="421" width="3.6918%" height="15" fill="rgb(234,140,37)" fg:x="833" fg:w="46"/><text x="67.1039%" y="431.50">kern..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (46 samples, 3.69%)</title><rect x="66.8539%" y="405" width="3.6918%" height="15" fill="rgb(220,93,8)" fg:x="833" fg:w="46"/><text x="67.1039%" y="415.50">&lt;plu..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (44 samples, 3.53%)</title><rect x="67.0144%" y="389" width="3.5313%" height="15" fill="rgb(236,113,3)" fg:x="835" fg:w="44"/><text x="67.2644%" y="399.50">plu..</text></g><g><title>plugins_rune::sources::load_sources_from_entity (1 samples, 0.08%)</title><rect x="70.4655%" y="373" width="0.0803%" height="15" fill="rgb(234,108,23)" fg:x="878" fg:w="1"/><text x="70.7155%" y="383.50"></text></g><g><title>plugins_rune::sources::get_script (1 samples, 0.08%)</title><rect x="70.4655%" y="357" width="0.0803%" height="15" fill="rgb(205,114,34)" fg:x="878" fg:w="1"/><text x="70.7155%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="70.4655%" y="341" width="0.0803%" height="15" fill="rgb(236,200,45)" fg:x="878" fg:w="1"/><text x="70.7155%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="70.4655%" y="325" width="0.0803%" height="15" fill="rgb(227,194,29)" fg:x="878" fg:w="1"/><text x="70.7155%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.4655%" y="309" width="0.0803%" height="15" fill="rgb(250,76,42)" fg:x="878" fg:w="1"/><text x="70.7155%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.4655%" y="293" width="0.0803%" height="15" fill="rgb(208,128,8)" fg:x="878" fg:w="1"/><text x="70.7155%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.6260%" y="469" width="0.1605%" height="15" fill="rgb(229,209,35)" fg:x="880" fg:w="2"/><text x="70.8760%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.6260%" y="453" width="0.1605%" height="15" fill="rgb(215,39,53)" fg:x="880" fg:w="2"/><text x="70.8760%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7063%" y="437" width="0.0803%" height="15" fill="rgb(219,123,41)" fg:x="881" fg:w="1"/><text x="70.9563%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7063%" y="421" width="0.0803%" height="15" fill="rgb(212,158,18)" fg:x="881" fg:w="1"/><text x="70.9563%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7063%" y="405" width="0.0803%" height="15" fill="rgb(234,196,53)" fg:x="881" fg:w="1"/><text x="70.9563%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7063%" y="389" width="0.0803%" height="15" fill="rgb(210,139,12)" fg:x="881" fg:w="1"/><text x="70.9563%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7063%" y="373" width="0.0803%" height="15" fill="rgb(220,116,54)" fg:x="881" fg:w="1"/><text x="70.9563%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7063%" y="357" width="0.0803%" height="15" fill="rgb(247,103,28)" fg:x="881" fg:w="1"/><text x="70.9563%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.7063%" y="341" width="0.0803%" height="15" fill="rgb(253,156,45)" fg:x="881" fg:w="1"/><text x="70.9563%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.7063%" y="325" width="0.0803%" height="15" fill="rgb(237,157,52)" fg:x="881" fg:w="1"/><text x="70.9563%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="70.5457%" y="485" width="0.3210%" height="15" fill="rgb(253,112,16)" fg:x="879" fg:w="4"/><text x="70.7957%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7865%" y="469" width="0.0803%" height="15" fill="rgb(234,70,18)" fg:x="882" fg:w="1"/><text x="71.0365%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7865%" y="453" width="0.0803%" height="15" fill="rgb(247,138,19)" fg:x="882" fg:w="1"/><text x="71.0365%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7865%" y="437" width="0.0803%" height="15" fill="rgb(207,171,1)" fg:x="882" fg:w="1"/><text x="71.0365%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7865%" y="421" width="0.0803%" height="15" fill="rgb(239,213,3)" fg:x="882" fg:w="1"/><text x="71.0365%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7865%" y="405" width="0.0803%" height="15" fill="rgb(226,112,4)" fg:x="882" fg:w="1"/><text x="71.0365%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7865%" y="389" width="0.0803%" height="15" fill="rgb(252,170,12)" fg:x="882" fg:w="1"/><text x="71.0365%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7865%" y="373" width="0.0803%" height="15" fill="rgb(241,106,13)" fg:x="882" fg:w="1"/><text x="71.0365%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.7865%" y="357" width="0.0803%" height="15" fill="rgb(225,73,23)" fg:x="882" fg:w="1"/><text x="71.0365%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.7865%" y="341" width="0.0803%" height="15" fill="rgb(251,227,29)" fg:x="882" fg:w="1"/><text x="71.0365%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.7865%" y="325" width="0.0803%" height="15" fill="rgb(237,144,13)" fg:x="882" fg:w="1"/><text x="71.0365%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.7865%" y="309" width="0.0803%" height="15" fill="rgb(232,106,46)" fg:x="882" fg:w="1"/><text x="71.0365%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7865%" y="293" width="0.0803%" height="15" fill="rgb(245,154,53)" fg:x="882" fg:w="1"/><text x="71.0365%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.9470%" y="421" width="0.0803%" height="15" fill="rgb(212,119,47)" fg:x="884" fg:w="1"/><text x="71.1970%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.9470%" y="405" width="0.0803%" height="15" fill="rgb(253,135,25)" fg:x="884" fg:w="1"/><text x="71.1970%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.9470%" y="389" width="0.0803%" height="15" fill="rgb(253,208,39)" fg:x="884" fg:w="1"/><text x="71.1970%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9470%" y="373" width="0.0803%" height="15" fill="rgb(226,64,12)" fg:x="884" fg:w="1"/><text x="71.1970%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9470%" y="357" width="0.0803%" height="15" fill="rgb(214,162,37)" fg:x="884" fg:w="1"/><text x="71.1970%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.9470%" y="341" width="0.0803%" height="15" fill="rgb(250,104,5)" fg:x="884" fg:w="1"/><text x="71.1970%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.9470%" y="325" width="0.0803%" height="15" fill="rgb(220,202,50)" fg:x="884" fg:w="1"/><text x="71.1970%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.9470%" y="309" width="0.0803%" height="15" fill="rgb(248,67,38)" fg:x="884" fg:w="1"/><text x="71.1970%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9470%" y="293" width="0.0803%" height="15" fill="rgb(242,94,35)" fg:x="884" fg:w="1"/><text x="71.1970%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9470%" y="277" width="0.0803%" height="15" fill="rgb(209,78,37)" fg:x="884" fg:w="1"/><text x="71.1970%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.9470%" y="261" width="0.0803%" height="15" fill="rgb(230,126,47)" fg:x="884" fg:w="1"/><text x="71.1970%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.9470%" y="245" width="0.0803%" height="15" fill="rgb(222,110,35)" fg:x="884" fg:w="1"/><text x="71.1970%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.9470%" y="229" width="0.0803%" height="15" fill="rgb(233,154,20)" fg:x="884" fg:w="1"/><text x="71.1970%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.9470%" y="213" width="0.0803%" height="15" fill="rgb(223,53,50)" fg:x="884" fg:w="1"/><text x="71.1970%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9470%" y="197" width="0.0803%" height="15" fill="rgb(251,27,26)" fg:x="884" fg:w="1"/><text x="71.1970%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.9470%" y="437" width="0.1605%" height="15" fill="rgb(223,189,16)" fg:x="884" fg:w="2"/><text x="71.1970%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0273%" y="421" width="0.0803%" height="15" fill="rgb(207,5,54)" fg:x="885" fg:w="1"/><text x="71.2773%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.1878%" y="357" width="0.0803%" height="15" fill="rgb(254,124,50)" fg:x="887" fg:w="1"/><text x="71.4378%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.1878%" y="341" width="0.0803%" height="15" fill="rgb(253,193,24)" fg:x="887" fg:w="1"/><text x="71.4378%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.1878%" y="373" width="0.1605%" height="15" fill="rgb(235,170,24)" fg:x="887" fg:w="2"/><text x="71.4378%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2681%" y="357" width="0.0803%" height="15" fill="rgb(222,212,52)" fg:x="888" fg:w="1"/><text x="71.5181%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2681%" y="341" width="0.0803%" height="15" fill="rgb(223,17,45)" fg:x="888" fg:w="1"/><text x="71.5181%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.2681%" y="325" width="0.0803%" height="15" fill="rgb(227,103,26)" fg:x="888" fg:w="1"/><text x="71.5181%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.2681%" y="309" width="0.0803%" height="15" fill="rgb(251,151,25)" fg:x="888" fg:w="1"/><text x="71.5181%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.2681%" y="293" width="0.0803%" height="15" fill="rgb(248,144,29)" fg:x="888" fg:w="1"/><text x="71.5181%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.2681%" y="277" width="0.0803%" height="15" fill="rgb(245,97,16)" fg:x="888" fg:w="1"/><text x="71.5181%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.2681%" y="261" width="0.0803%" height="15" fill="rgb(220,200,29)" fg:x="888" fg:w="1"/><text x="71.5181%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="71.1878%" y="389" width="0.2408%" height="15" fill="rgb(206,38,29)" fg:x="887" fg:w="3"/><text x="71.4378%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3483%" y="373" width="0.0803%" height="15" fill="rgb(245,19,52)" fg:x="889" fg:w="1"/><text x="71.5983%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.3483%" y="357" width="0.0803%" height="15" fill="rgb(205,67,43)" fg:x="889" fg:w="1"/><text x="71.5983%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3483%" y="341" width="0.0803%" height="15" fill="rgb(217,128,23)" fg:x="889" fg:w="1"/><text x="71.5983%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3483%" y="325" width="0.0803%" height="15" fill="rgb(210,109,28)" fg:x="889" fg:w="1"/><text x="71.5983%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.3483%" y="309" width="0.0803%" height="15" fill="rgb(233,181,7)" fg:x="889" fg:w="1"/><text x="71.5983%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.3483%" y="293" width="0.0803%" height="15" fill="rgb(244,11,22)" fg:x="889" fg:w="1"/><text x="71.5983%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.3483%" y="277" width="0.0803%" height="15" fill="rgb(205,124,54)" fg:x="889" fg:w="1"/><text x="71.5983%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.4286%" y="341" width="0.0803%" height="15" fill="rgb(218,21,27)" fg:x="890" fg:w="1"/><text x="71.6786%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.4286%" y="325" width="0.0803%" height="15" fill="rgb(224,153,33)" fg:x="890" fg:w="1"/><text x="71.6786%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4286%" y="309" width="0.0803%" height="15" fill="rgb(240,219,28)" fg:x="890" fg:w="1"/><text x="71.6786%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.5088%" y="341" width="0.0803%" height="15" fill="rgb(214,80,29)" fg:x="891" fg:w="1"/><text x="71.7588%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="71.5088%" y="325" width="0.0803%" height="15" fill="rgb(247,148,44)" fg:x="891" fg:w="1"/><text x="71.7588%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="71.5088%" y="309" width="0.0803%" height="15" fill="rgb(243,110,30)" fg:x="891" fg:w="1"/><text x="71.7588%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.5088%" y="293" width="0.0803%" height="15" fill="rgb(243,173,41)" fg:x="891" fg:w="1"/><text x="71.7588%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5088%" y="277" width="0.0803%" height="15" fill="rgb(225,160,47)" fg:x="891" fg:w="1"/><text x="71.7588%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="71.5088%" y="261" width="0.0803%" height="15" fill="rgb(215,44,21)" fg:x="891" fg:w="1"/><text x="71.7588%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="71.4286%" y="389" width="0.2408%" height="15" fill="rgb(248,90,3)" fg:x="890" fg:w="3"/><text x="71.6786%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="71.4286%" y="373" width="0.2408%" height="15" fill="rgb(220,196,49)" fg:x="890" fg:w="3"/><text x="71.6786%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="71.4286%" y="357" width="0.2408%" height="15" fill="rgb(217,138,14)" fg:x="890" fg:w="3"/><text x="71.6786%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.5891%" y="341" width="0.0803%" height="15" fill="rgb(219,111,20)" fg:x="892" fg:w="1"/><text x="71.8391%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5891%" y="325" width="0.0803%" height="15" fill="rgb(218,114,4)" fg:x="892" fg:w="1"/><text x="71.8391%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.5891%" y="309" width="0.0803%" height="15" fill="rgb(238,133,3)" fg:x="892" fg:w="1"/><text x="71.8391%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="71.6693%" y="357" width="0.2408%" height="15" fill="rgb(224,95,0)" fg:x="893" fg:w="3"/><text x="71.9193%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.6693%" y="341" width="0.2408%" height="15" fill="rgb(220,169,35)" fg:x="893" fg:w="3"/><text x="71.9193%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.8299%" y="325" width="0.0803%" height="15" fill="rgb(242,116,47)" fg:x="895" fg:w="1"/><text x="72.0799%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9101%" y="357" width="0.0803%" height="15" fill="rgb(251,42,20)" fg:x="896" fg:w="1"/><text x="72.1601%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="71.1075%" y="437" width="0.9631%" height="15" fill="rgb(234,7,34)" fg:x="886" fg:w="12"/><text x="71.3575%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.96%)</title><rect x="71.1075%" y="421" width="0.9631%" height="15" fill="rgb(243,208,13)" fg:x="886" fg:w="12"/><text x="71.3575%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (12 samples, 0.96%)</title><rect x="71.1075%" y="405" width="0.9631%" height="15" fill="rgb(227,33,28)" fg:x="886" fg:w="12"/><text x="71.3575%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="71.6693%" y="389" width="0.4013%" height="15" fill="rgb(250,47,37)" fg:x="893" fg:w="5"/><text x="71.9193%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="71.6693%" y="373" width="0.4013%" height="15" fill="rgb(235,111,52)" fg:x="893" fg:w="5"/><text x="71.9193%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9904%" y="357" width="0.0803%" height="15" fill="rgb(223,64,28)" fg:x="897" fg:w="1"/><text x="72.2404%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="71.9904%" y="341" width="0.0803%" height="15" fill="rgb(236,67,22)" fg:x="897" fg:w="1"/><text x="72.2404%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.9904%" y="325" width="0.0803%" height="15" fill="rgb(243,79,24)" fg:x="897" fg:w="1"/><text x="72.2404%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9904%" y="309" width="0.0803%" height="15" fill="rgb(241,225,22)" fg:x="897" fg:w="1"/><text x="72.2404%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="70.8668%" y="485" width="1.2841%" height="15" fill="rgb(228,214,26)" fg:x="883" fg:w="16"/><text x="71.1168%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.28%)</title><rect x="70.8668%" y="469" width="1.2841%" height="15" fill="rgb(219,84,52)" fg:x="883" fg:w="16"/><text x="71.1168%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (16 samples, 1.28%)</title><rect x="70.8668%" y="453" width="1.2841%" height="15" fill="rgb(220,12,22)" fg:x="883" fg:w="16"/><text x="71.1168%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.0706%" y="437" width="0.0803%" height="15" fill="rgb(219,9,49)" fg:x="898" fg:w="1"/><text x="72.3206%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0706%" y="421" width="0.0803%" height="15" fill="rgb(237,40,43)" fg:x="898" fg:w="1"/><text x="72.3206%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.0706%" y="405" width="0.0803%" height="15" fill="rgb(212,189,32)" fg:x="898" fg:w="1"/><text x="72.3206%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.0706%" y="389" width="0.0803%" height="15" fill="rgb(247,48,9)" fg:x="898" fg:w="1"/><text x="72.3206%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.1509%" y="437" width="0.0803%" height="15" fill="rgb(247,112,3)" fg:x="899" fg:w="1"/><text x="72.4009%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (22 samples, 1.77%)</title><rect x="70.5457%" y="517" width="1.7657%" height="15" fill="rgb(243,110,18)" fg:x="879" fg:w="22"/><text x="70.7957%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (22 samples, 1.77%)</title><rect x="70.5457%" y="501" width="1.7657%" height="15" fill="rgb(233,223,44)" fg:x="879" fg:w="22"/><text x="70.7957%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.1509%" y="485" width="0.1605%" height="15" fill="rgb(245,160,20)" fg:x="899" fg:w="2"/><text x="72.4009%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.1509%" y="469" width="0.1605%" height="15" fill="rgb(225,37,1)" fg:x="899" fg:w="2"/><text x="72.4009%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="72.1509%" y="453" width="0.1605%" height="15" fill="rgb(253,227,39)" fg:x="899" fg:w="2"/><text x="72.4009%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.2311%" y="437" width="0.0803%" height="15" fill="rgb(240,179,26)" fg:x="900" fg:w="1"/><text x="72.4811%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.2311%" y="421" width="0.0803%" height="15" fill="rgb(237,212,23)" fg:x="900" fg:w="1"/><text x="72.4811%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.4719%" y="437" width="0.0803%" height="15" fill="rgb(221,38,11)" fg:x="903" fg:w="1"/><text x="72.7219%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.4719%" y="453" width="0.1605%" height="15" fill="rgb(215,85,6)" fg:x="903" fg:w="2"/><text x="72.7219%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5522%" y="437" width="0.0803%" height="15" fill="rgb(239,64,14)" fg:x="904" fg:w="1"/><text x="72.8022%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5522%" y="421" width="0.0803%" height="15" fill="rgb(215,150,32)" fg:x="904" fg:w="1"/><text x="72.8022%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.5522%" y="405" width="0.0803%" height="15" fill="rgb(238,15,13)" fg:x="904" fg:w="1"/><text x="72.8022%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.5522%" y="389" width="0.0803%" height="15" fill="rgb(251,87,8)" fg:x="904" fg:w="1"/><text x="72.8022%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.5522%" y="373" width="0.0803%" height="15" fill="rgb(206,86,1)" fg:x="904" fg:w="1"/><text x="72.8022%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.5522%" y="357" width="0.0803%" height="15" fill="rgb(208,151,45)" fg:x="904" fg:w="1"/><text x="72.8022%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.5522%" y="341" width="0.0803%" height="15" fill="rgb(231,181,24)" fg:x="904" fg:w="1"/><text x="72.8022%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.5522%" y="325" width="0.0803%" height="15" fill="rgb(240,106,29)" fg:x="904" fg:w="1"/><text x="72.8022%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.5522%" y="309" width="0.0803%" height="15" fill="rgb(227,166,11)" fg:x="904" fg:w="1"/><text x="72.8022%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.5522%" y="293" width="0.0803%" height="15" fill="rgb(254,14,34)" fg:x="904" fg:w="1"/><text x="72.8022%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.5522%" y="277" width="0.0803%" height="15" fill="rgb(223,222,6)" fg:x="904" fg:w="1"/><text x="72.8022%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5522%" y="261" width="0.0803%" height="15" fill="rgb(245,69,24)" fg:x="904" fg:w="1"/><text x="72.8022%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="72.3917%" y="469" width="0.3210%" height="15" fill="rgb(213,193,7)" fg:x="902" fg:w="4"/><text x="72.6417%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6324%" y="453" width="0.0803%" height="15" fill="rgb(237,92,51)" fg:x="905" fg:w="1"/><text x="72.8824%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.6324%" y="437" width="0.0803%" height="15" fill="rgb(225,194,6)" fg:x="905" fg:w="1"/><text x="72.8824%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="72.3114%" y="501" width="0.4815%" height="15" fill="rgb(205,159,49)" fg:x="901" fg:w="6"/><text x="72.5614%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="72.3114%" y="485" width="0.4815%" height="15" fill="rgb(219,69,2)" fg:x="901" fg:w="6"/><text x="72.5614%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.7127%" y="469" width="0.0803%" height="15" fill="rgb(215,107,24)" fg:x="906" fg:w="1"/><text x="72.9627%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.7929%" y="485" width="0.0803%" height="15" fill="rgb(249,208,29)" fg:x="907" fg:w="1"/><text x="73.0429%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.7929%" y="469" width="0.0803%" height="15" fill="rgb(213,147,10)" fg:x="907" fg:w="1"/><text x="73.0429%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8732%" y="485" width="0.0803%" height="15" fill="rgb(254,140,42)" fg:x="908" fg:w="1"/><text x="73.1232%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8732%" y="469" width="0.0803%" height="15" fill="rgb(249,9,15)" fg:x="908" fg:w="1"/><text x="73.1232%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="72.9535%" y="485" width="0.0803%" height="15" fill="rgb(210,19,33)" fg:x="909" fg:w="1"/><text x="73.2035%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.9535%" y="469" width="0.0803%" height="15" fill="rgb(241,121,22)" fg:x="909" fg:w="1"/><text x="73.2035%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="72.7929%" y="501" width="0.3210%" height="15" fill="rgb(244,69,52)" fg:x="907" fg:w="4"/><text x="73.0429%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.0337%" y="485" width="0.0803%" height="15" fill="rgb(244,191,54)" fg:x="910" fg:w="1"/><text x="73.2837%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.0337%" y="469" width="0.0803%" height="15" fill="rgb(250,3,53)" fg:x="910" fg:w="1"/><text x="73.2837%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.0337%" y="453" width="0.0803%" height="15" fill="rgb(205,77,3)" fg:x="910" fg:w="1"/><text x="73.2837%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.0337%" y="437" width="0.0803%" height="15" fill="rgb(207,155,3)" fg:x="910" fg:w="1"/><text x="73.2837%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.0337%" y="421" width="0.0803%" height="15" fill="rgb(224,79,2)" fg:x="910" fg:w="1"/><text x="73.2837%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.0337%" y="405" width="0.0803%" height="15" fill="rgb(243,172,5)" fg:x="910" fg:w="1"/><text x="73.2837%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.0337%" y="389" width="0.0803%" height="15" fill="rgb(217,23,43)" fg:x="910" fg:w="1"/><text x="73.2837%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.0337%" y="373" width="0.0803%" height="15" fill="rgb(223,109,20)" fg:x="910" fg:w="1"/><text x="73.2837%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1140%" y="453" width="0.0803%" height="15" fill="rgb(232,159,21)" fg:x="911" fg:w="1"/><text x="73.3640%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.2745%" y="373" width="0.0803%" height="15" fill="rgb(219,58,2)" fg:x="913" fg:w="1"/><text x="73.5245%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.2745%" y="357" width="0.0803%" height="15" fill="rgb(241,56,8)" fg:x="913" fg:w="1"/><text x="73.5245%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.2745%" y="341" width="0.0803%" height="15" fill="rgb(249,10,27)" fg:x="913" fg:w="1"/><text x="73.5245%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.2745%" y="325" width="0.0803%" height="15" fill="rgb(248,177,5)" fg:x="913" fg:w="1"/><text x="73.5245%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.2745%" y="405" width="0.1605%" height="15" fill="rgb(239,12,30)" fg:x="913" fg:w="2"/><text x="73.5245%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.2745%" y="389" width="0.1605%" height="15" fill="rgb(229,164,25)" fg:x="913" fg:w="2"/><text x="73.5245%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="73.3547%" y="373" width="0.0803%" height="15" fill="rgb(231,217,50)" fg:x="914" fg:w="1"/><text x="73.6047%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.3547%" y="357" width="0.0803%" height="15" fill="rgb(247,99,32)" fg:x="914" fg:w="1"/><text x="73.6047%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.3547%" y="341" width="0.0803%" height="15" fill="rgb(240,74,50)" fg:x="914" fg:w="1"/><text x="73.6047%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.3547%" y="325" width="0.0803%" height="15" fill="rgb(218,54,8)" fg:x="914" fg:w="1"/><text x="73.6047%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="73.3547%" y="309" width="0.0803%" height="15" fill="rgb(227,132,20)" fg:x="914" fg:w="1"/><text x="73.6047%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.4350%" y="405" width="0.1605%" height="15" fill="rgb(232,134,12)" fg:x="915" fg:w="2"/><text x="73.6850%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="73.4350%" y="389" width="0.1605%" height="15" fill="rgb(250,129,18)" fg:x="915" fg:w="2"/><text x="73.6850%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.4350%" y="373" width="0.1605%" height="15" fill="rgb(232,129,47)" fg:x="915" fg:w="2"/><text x="73.6850%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.64%)</title><rect x="73.1140%" y="501" width="0.6421%" height="15" fill="rgb(230,31,40)" fg:x="911" fg:w="8"/><text x="73.3640%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="73.1140%" y="485" width="0.6421%" height="15" fill="rgb(232,126,10)" fg:x="911" fg:w="8"/><text x="73.3640%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="73.1140%" y="469" width="0.6421%" height="15" fill="rgb(205,46,31)" fg:x="911" fg:w="8"/><text x="73.3640%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="73.1942%" y="453" width="0.5618%" height="15" fill="rgb(232,37,37)" fg:x="912" fg:w="7"/><text x="73.4442%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="73.1942%" y="437" width="0.5618%" height="15" fill="rgb(240,91,16)" fg:x="912" fg:w="7"/><text x="73.4442%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="73.1942%" y="421" width="0.5618%" height="15" fill="rgb(224,160,9)" fg:x="912" fg:w="7"/><text x="73.4442%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.5955%" y="405" width="0.1605%" height="15" fill="rgb(215,116,14)" fg:x="917" fg:w="2"/><text x="73.8455%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.5955%" y="389" width="0.1605%" height="15" fill="rgb(235,46,36)" fg:x="917" fg:w="2"/><text x="73.8455%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.6758%" y="373" width="0.0803%" height="15" fill="rgb(238,39,28)" fg:x="918" fg:w="1"/><text x="73.9258%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.6758%" y="357" width="0.0803%" height="15" fill="rgb(242,125,29)" fg:x="918" fg:w="1"/><text x="73.9258%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.9165%" y="357" width="0.0803%" height="15" fill="rgb(238,211,30)" fg:x="921" fg:w="1"/><text x="74.1665%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.9165%" y="341" width="0.0803%" height="15" fill="rgb(227,201,28)" fg:x="921" fg:w="1"/><text x="74.1665%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.9968%" y="341" width="0.1605%" height="15" fill="rgb(238,77,29)" fg:x="922" fg:w="2"/><text x="74.2468%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.9968%" y="325" width="0.1605%" height="15" fill="rgb(213,221,40)" fg:x="922" fg:w="2"/><text x="74.2468%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="73.9968%" y="309" width="0.1605%" height="15" fill="rgb(226,220,44)" fg:x="922" fg:w="2"/><text x="74.2468%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="74.0770%" y="293" width="0.0803%" height="15" fill="rgb(228,90,23)" fg:x="923" fg:w="1"/><text x="74.3270%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="73.8363%" y="373" width="0.4013%" height="15" fill="rgb(235,72,29)" fg:x="920" fg:w="5"/><text x="74.0863%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="73.9968%" y="357" width="0.2408%" height="15" fill="rgb(248,117,39)" fg:x="922" fg:w="3"/><text x="74.2468%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.1573%" y="341" width="0.0803%" height="15" fill="rgb(225,43,28)" fg:x="924" fg:w="1"/><text x="74.4073%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.1573%" y="325" width="0.0803%" height="15" fill="rgb(240,93,4)" fg:x="924" fg:w="1"/><text x="74.4073%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.2376%" y="373" width="0.0803%" height="15" fill="rgb(234,178,27)" fg:x="925" fg:w="1"/><text x="74.4876%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="73.8363%" y="389" width="0.5618%" height="15" fill="rgb(254,88,22)" fg:x="920" fg:w="7"/><text x="74.0863%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3178%" y="373" width="0.0803%" height="15" fill="rgb(240,206,50)" fg:x="926" fg:w="1"/><text x="74.5678%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3178%" y="357" width="0.0803%" height="15" fill="rgb(249,103,8)" fg:x="926" fg:w="1"/><text x="74.5678%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3178%" y="341" width="0.0803%" height="15" fill="rgb(241,178,36)" fg:x="926" fg:w="1"/><text x="74.5678%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="73.7560%" y="405" width="0.7223%" height="15" fill="rgb(246,110,15)" fg:x="919" fg:w="9"/><text x="74.0060%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3981%" y="389" width="0.0803%" height="15" fill="rgb(207,14,43)" fg:x="927" fg:w="1"/><text x="74.6481%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="73.7560%" y="437" width="0.8026%" height="15" fill="rgb(253,219,19)" fg:x="919" fg:w="10"/><text x="74.0060%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="73.7560%" y="421" width="0.8026%" height="15" fill="rgb(216,126,5)" fg:x="919" fg:w="10"/><text x="74.0060%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.4783%" y="405" width="0.0803%" height="15" fill="rgb(218,78,42)" fg:x="928" fg:w="1"/><text x="74.7283%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.4783%" y="389" width="0.0803%" height="15" fill="rgb(215,154,40)" fg:x="928" fg:w="1"/><text x="74.7283%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.4783%" y="373" width="0.0803%" height="15" fill="rgb(235,129,32)" fg:x="928" fg:w="1"/><text x="74.7283%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (51 samples, 4.09%)</title><rect x="70.5457%" y="533" width="4.0931%" height="15" fill="rgb(218,51,8)" fg:x="879" fg:w="51"/><text x="70.7957%" y="543.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (29 samples, 2.33%)</title><rect x="72.3114%" y="517" width="2.3274%" height="15" fill="rgb(245,48,4)" fg:x="901" fg:w="29"/><text x="72.5614%" y="527.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.88%)</title><rect x="73.7560%" y="501" width="0.8828%" height="15" fill="rgb(250,175,12)" fg:x="919" fg:w="11"/><text x="74.0060%" y="511.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="73.7560%" y="485" width="0.8828%" height="15" fill="rgb(237,95,40)" fg:x="919" fg:w="11"/><text x="74.0060%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="73.7560%" y="469" width="0.8828%" height="15" fill="rgb(244,120,0)" fg:x="919" fg:w="11"/><text x="74.0060%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="73.7560%" y="453" width="0.8828%" height="15" fill="rgb(241,19,42)" fg:x="919" fg:w="11"/><text x="74.0060%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.5586%" y="437" width="0.0803%" height="15" fill="rgb(217,174,48)" fg:x="929" fg:w="1"/><text x="74.8086%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="74.5586%" y="421" width="0.0803%" height="15" fill="rgb(239,36,38)" fg:x="929" fg:w="1"/><text x="74.8086%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6388%" y="517" width="0.0803%" height="15" fill="rgb(220,63,49)" fg:x="930" fg:w="1"/><text x="74.8888%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7191%" y="501" width="0.0803%" height="15" fill="rgb(240,101,13)" fg:x="931" fg:w="1"/><text x="74.9691%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7191%" y="485" width="0.0803%" height="15" fill="rgb(209,184,51)" fg:x="931" fg:w="1"/><text x="74.9691%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.7994%" y="469" width="0.0803%" height="15" fill="rgb(206,136,39)" fg:x="932" fg:w="1"/><text x="75.0494%" y="479.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="74.6388%" y="533" width="0.3210%" height="15" fill="rgb(254,47,45)" fg:x="930" fg:w="4"/><text x="74.8888%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="74.7191%" y="517" width="0.2408%" height="15" fill="rgb(252,103,20)" fg:x="931" fg:w="3"/><text x="74.9691%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.7994%" y="501" width="0.1605%" height="15" fill="rgb(230,69,12)" fg:x="932" fg:w="2"/><text x="75.0494%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7994%" y="485" width="0.1605%" height="15" fill="rgb(219,2,28)" fg:x="932" fg:w="2"/><text x="75.0494%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.8796%" y="469" width="0.0803%" height="15" fill="rgb(210,9,12)" fg:x="933" fg:w="1"/><text x="75.1296%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8796%" y="453" width="0.0803%" height="15" fill="rgb(235,99,33)" fg:x="933" fg:w="1"/><text x="75.1296%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.8796%" y="437" width="0.0803%" height="15" fill="rgb(230,11,38)" fg:x="933" fg:w="1"/><text x="75.1296%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.8796%" y="421" width="0.0803%" height="15" fill="rgb(217,129,0)" fg:x="933" fg:w="1"/><text x="75.1296%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.8796%" y="405" width="0.0803%" height="15" fill="rgb(222,198,4)" fg:x="933" fg:w="1"/><text x="75.1296%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9599%" y="517" width="0.0803%" height="15" fill="rgb(246,170,27)" fg:x="934" fg:w="1"/><text x="75.2099%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1204%" y="453" width="0.0803%" height="15" fill="rgb(229,17,28)" fg:x="936" fg:w="1"/><text x="75.3704%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1204%" y="437" width="0.0803%" height="15" fill="rgb(233,198,48)" fg:x="936" fg:w="1"/><text x="75.3704%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1204%" y="421" width="0.0803%" height="15" fill="rgb(238,103,23)" fg:x="936" fg:w="1"/><text x="75.3704%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.1204%" y="485" width="0.1605%" height="15" fill="rgb(206,91,41)" fg:x="936" fg:w="2"/><text x="75.3704%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.1204%" y="469" width="0.1605%" height="15" fill="rgb(227,34,25)" fg:x="936" fg:w="2"/><text x="75.3704%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2006%" y="453" width="0.0803%" height="15" fill="rgb(210,110,44)" fg:x="937" fg:w="1"/><text x="75.4506%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.2809%" y="485" width="0.0803%" height="15" fill="rgb(216,189,8)" fg:x="938" fg:w="1"/><text x="75.5309%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.3612%" y="469" width="0.0803%" height="15" fill="rgb(234,9,46)" fg:x="939" fg:w="1"/><text x="75.6112%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="75.3612%" y="485" width="0.1605%" height="15" fill="rgb(251,200,5)" fg:x="939" fg:w="2"/><text x="75.6112%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.4414%" y="469" width="0.0803%" height="15" fill="rgb(238,165,37)" fg:x="940" fg:w="1"/><text x="75.6914%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4414%" y="453" width="0.0803%" height="15" fill="rgb(232,77,38)" fg:x="940" fg:w="1"/><text x="75.6914%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.4414%" y="437" width="0.0803%" height="15" fill="rgb(253,179,33)" fg:x="940" fg:w="1"/><text x="75.6914%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4414%" y="421" width="0.0803%" height="15" fill="rgb(240,13,35)" fg:x="940" fg:w="1"/><text x="75.6914%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.4414%" y="405" width="0.0803%" height="15" fill="rgb(242,150,49)" fg:x="940" fg:w="1"/><text x="75.6914%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="75.5217%" y="485" width="0.0803%" height="15" fill="rgb(237,176,28)" fg:x="941" fg:w="1"/><text x="75.7717%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5217%" y="469" width="0.0803%" height="15" fill="rgb(214,176,33)" fg:x="941" fg:w="1"/><text x="75.7717%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::new_from_entity (1 samples, 0.08%)</title><rect x="75.6019%" y="485" width="0.0803%" height="15" fill="rgb(214,25,12)" fg:x="942" fg:w="1"/><text x="75.8519%" y="495.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.9230%" y="437" width="0.0803%" height="15" fill="rgb(238,190,20)" fg:x="946" fg:w="1"/><text x="76.1730%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9230%" y="421" width="0.0803%" height="15" fill="rgb(208,11,19)" fg:x="946" fg:w="1"/><text x="76.1730%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.9230%" y="405" width="0.0803%" height="15" fill="rgb(239,90,4)" fg:x="946" fg:w="1"/><text x="76.1730%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.9230%" y="389" width="0.0803%" height="15" fill="rgb(248,110,3)" fg:x="946" fg:w="1"/><text x="76.1730%" y="399.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="75.9230%" y="373" width="0.0803%" height="15" fill="rgb(210,41,30)" fg:x="946" fg:w="1"/><text x="76.1730%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.0032%" y="405" width="0.1605%" height="15" fill="rgb(239,36,8)" fg:x="947" fg:w="2"/><text x="76.2532%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.0835%" y="389" width="0.0803%" height="15" fill="rgb(237,201,47)" fg:x="948" fg:w="1"/><text x="76.3335%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.2440%" y="357" width="0.0803%" height="15" fill="rgb(224,140,29)" fg:x="950" fg:w="1"/><text x="76.4940%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.2440%" y="341" width="0.0803%" height="15" fill="rgb(231,209,17)" fg:x="950" fg:w="1"/><text x="76.4940%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="76.1637%" y="389" width="0.3210%" height="15" fill="rgb(249,196,1)" fg:x="949" fg:w="4"/><text x="76.4137%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.1637%" y="373" width="0.3210%" height="15" fill="rgb(223,207,51)" fg:x="949" fg:w="4"/><text x="76.4137%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="76.3242%" y="357" width="0.1605%" height="15" fill="rgb(210,14,40)" fg:x="951" fg:w="2"/><text x="76.5742%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="76.4045%" y="341" width="0.0803%" height="15" fill="rgb(250,20,52)" fg:x="952" fg:w="1"/><text x="76.6545%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="76.4848%" y="357" width="0.1605%" height="15" fill="rgb(241,46,11)" fg:x="953" fg:w="2"/><text x="76.7348%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6453%" y="341" width="0.0803%" height="15" fill="rgb(219,105,5)" fg:x="955" fg:w="1"/><text x="76.8953%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="76.4848%" y="389" width="0.3210%" height="15" fill="rgb(252,77,35)" fg:x="953" fg:w="4"/><text x="76.7348%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="76.4848%" y="373" width="0.3210%" height="15" fill="rgb(243,119,2)" fg:x="953" fg:w="4"/><text x="76.7348%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="76.6453%" y="357" width="0.1605%" height="15" fill="rgb(206,82,28)" fg:x="955" fg:w="2"/><text x="76.8953%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.7255%" y="341" width="0.0803%" height="15" fill="rgb(227,120,12)" fg:x="956" fg:w="1"/><text x="76.9755%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8860%" y="341" width="0.0803%" height="15" fill="rgb(229,134,41)" fg:x="958" fg:w="1"/><text x="77.1360%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="76.8058%" y="357" width="0.2408%" height="15" fill="rgb(239,96,32)" fg:x="957" fg:w="3"/><text x="77.0558%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.9663%" y="341" width="0.0803%" height="15" fill="rgb(225,46,27)" fg:x="959" fg:w="1"/><text x="77.2163%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (14 samples, 1.12%)</title><rect x="76.0032%" y="437" width="1.1236%" height="15" fill="rgb(215,168,2)" fg:x="947" fg:w="14"/><text x="76.2532%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="76.0032%" y="421" width="1.1236%" height="15" fill="rgb(207,170,52)" fg:x="947" fg:w="14"/><text x="76.2532%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.96%)</title><rect x="76.1637%" y="405" width="0.9631%" height="15" fill="rgb(237,198,36)" fg:x="949" fg:w="12"/><text x="76.4137%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="76.8058%" y="389" width="0.3210%" height="15" fill="rgb(213,27,14)" fg:x="957" fg:w="4"/><text x="77.0558%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.8058%" y="373" width="0.3210%" height="15" fill="rgb(218,77,5)" fg:x="957" fg:w="4"/><text x="77.0558%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="77.0465%" y="357" width="0.0803%" height="15" fill="rgb(230,219,39)" fg:x="960" fg:w="1"/><text x="77.2965%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0465%" y="341" width="0.0803%" height="15" fill="rgb(245,177,7)" fg:x="960" fg:w="1"/><text x="77.2965%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.0465%" y="325" width="0.0803%" height="15" fill="rgb(246,44,46)" fg:x="960" fg:w="1"/><text x="77.2965%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::from_value (19 samples, 1.52%)</title><rect x="75.6822%" y="485" width="1.5249%" height="15" fill="rgb(207,173,15)" fg:x="943" fg:w="19"/><text x="75.9322%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (19 samples, 1.52%)</title><rect x="75.6822%" y="469" width="1.5249%" height="15" fill="rgb(245,170,50)" fg:x="943" fg:w="19"/><text x="75.9322%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (19 samples, 1.52%)</title><rect x="75.6822%" y="453" width="1.5249%" height="15" fill="rgb(233,156,21)" fg:x="943" fg:w="19"/><text x="75.9322%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1268%" y="437" width="0.0803%" height="15" fill="rgb(253,146,27)" fg:x="961" fg:w="1"/><text x="77.3768%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1268%" y="421" width="0.0803%" height="15" fill="rgb(247,66,29)" fg:x="961" fg:w="1"/><text x="77.3768%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="77.6083%" y="357" width="0.1605%" height="15" fill="rgb(218,207,26)" fg:x="967" fg:w="2"/><text x="77.8583%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.6083%" y="341" width="0.1605%" height="15" fill="rgb(234,93,26)" fg:x="967" fg:w="2"/><text x="77.8583%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="77.6083%" y="325" width="0.1605%" height="15" fill="rgb(214,75,48)" fg:x="967" fg:w="2"/><text x="77.8583%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.6886%" y="309" width="0.0803%" height="15" fill="rgb(229,119,22)" fg:x="968" fg:w="1"/><text x="77.9386%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.6886%" y="293" width="0.0803%" height="15" fill="rgb(226,153,19)" fg:x="968" fg:w="1"/><text x="77.9386%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="77.3676%" y="389" width="0.4815%" height="15" fill="rgb(220,204,36)" fg:x="964" fg:w="6"/><text x="77.6176%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="77.4478%" y="373" width="0.4013%" height="15" fill="rgb(253,181,43)" fg:x="965" fg:w="5"/><text x="77.6978%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7689%" y="357" width="0.0803%" height="15" fill="rgb(211,41,51)" fg:x="969" fg:w="1"/><text x="78.0189%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.8491%" y="389" width="0.0803%" height="15" fill="rgb(207,215,0)" fg:x="970" fg:w="1"/><text x="78.0991%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="77.8491%" y="373" width="0.0803%" height="15" fill="rgb(212,153,10)" fg:x="970" fg:w="1"/><text x="78.0991%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="77.2071%" y="421" width="0.8026%" height="15" fill="rgb(251,171,36)" fg:x="962" fg:w="10"/><text x="77.4571%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="77.3676%" y="405" width="0.6421%" height="15" fill="rgb(225,219,41)" fg:x="964" fg:w="8"/><text x="77.6176%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.9294%" y="389" width="0.0803%" height="15" fill="rgb(208,200,1)" fg:x="971" fg:w="1"/><text x="78.1794%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.9294%" y="373" width="0.0803%" height="15" fill="rgb(206,75,47)" fg:x="971" fg:w="1"/><text x="78.1794%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="77.9294%" y="357" width="0.0803%" height="15" fill="rgb(248,3,16)" fg:x="971" fg:w="1"/><text x="78.1794%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (974 samples, 78.17%)</title><rect x="0.0000%" y="613" width="78.1701%" height="15" fill="rgb(242,157,36)" fg:x="0" fg:w="974"/><text x="0.2500%" y="623.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (974 samples, 78.17%)</title><rect x="0.0000%" y="597" width="78.1701%" height="15" fill="rgb(215,175,11)" fg:x="0" fg:w="974"/><text x="0.2500%" y="607.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (974 samples, 78.17%)</title><rect x="0.0000%" y="581" width="78.1701%" height="15" fill="rgb(252,222,22)" fg:x="0" fg:w="974"/><text x="0.2500%" y="591.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (204 samples, 16.37%)</title><rect x="61.7978%" y="565" width="16.3724%" height="15" fill="rgb(250,121,35)" fg:x="770" fg:w="204"/><text x="62.0478%" y="575.50">engine::session::Session:..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (204 samples, 16.37%)</title><rect x="61.7978%" y="549" width="16.3724%" height="15" fill="rgb(233,120,49)" fg:x="770" fg:w="204"/><text x="62.0478%" y="559.50">engine::session::Session:..</text></g><g><title>kernel::model::EntityPtrResolver::world (40 samples, 3.21%)</title><rect x="74.9599%" y="533" width="3.2103%" height="15" fill="rgb(205,201,14)" fg:x="934" fg:w="40"/><text x="75.2099%" y="543.50">ker..</text></g><g><title>engine::session::Session::load_entity (39 samples, 3.13%)</title><rect x="75.0401%" y="517" width="3.1300%" height="15" fill="rgb(219,58,45)" fg:x="935" fg:w="39"/><text x="75.2901%" y="527.50">eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (38 samples, 3.05%)</title><rect x="75.1204%" y="501" width="3.0498%" height="15" fill="rgb(251,65,12)" fg:x="936" fg:w="38"/><text x="75.3704%" y="511.50">eng..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.96%)</title><rect x="77.2071%" y="485" width="0.9631%" height="15" fill="rgb(224,47,31)" fg:x="962" fg:w="12"/><text x="77.4571%" y="495.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="77.2071%" y="469" width="0.9631%" height="15" fill="rgb(233,74,26)" fg:x="962" fg:w="12"/><text x="77.4571%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="77.2071%" y="453" width="0.9631%" height="15" fill="rgb(231,211,31)" fg:x="962" fg:w="12"/><text x="77.4571%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="77.2071%" y="437" width="0.9631%" height="15" fill="rgb(239,167,5)" fg:x="962" fg:w="12"/><text x="77.4571%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="78.0096%" y="421" width="0.1605%" height="15" fill="rgb(241,85,0)" fg:x="972" fg:w="2"/><text x="78.2596%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.0899%" y="405" width="0.0803%" height="15" fill="rgb(229,130,21)" fg:x="973" fg:w="1"/><text x="78.3399%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="78.0899%" y="389" width="0.0803%" height="15" fill="rgb(254,84,49)" fg:x="973" fg:w="1"/><text x="78.3399%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.2504%" y="517" width="0.0803%" height="15" fill="rgb(235,85,21)" fg:x="975" fg:w="1"/><text x="78.5004%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="78.1701%" y="549" width="0.2408%" height="15" fill="rgb(246,128,52)" fg:x="974" fg:w="3"/><text x="78.4201%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="78.1701%" y="533" width="0.2408%" height="15" fill="rgb(243,114,49)" fg:x="974" fg:w="3"/><text x="78.4201%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="78.3307%" y="517" width="0.0803%" height="15" fill="rgb(240,224,22)" fg:x="976" fg:w="1"/><text x="78.5807%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.08%)</title><rect x="78.3307%" y="501" width="0.0803%" height="15" fill="rgb(247,201,52)" fg:x="976" fg:w="1"/><text x="78.5807%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="78.3307%" y="485" width="0.0803%" height="15" fill="rgb(231,70,45)" fg:x="976" fg:w="1"/><text x="78.5807%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3307%" y="469" width="0.0803%" height="15" fill="rgb(217,215,20)" fg:x="976" fg:w="1"/><text x="78.5807%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4912%" y="437" width="0.0803%" height="15" fill="rgb(226,170,30)" fg:x="978" fg:w="1"/><text x="78.7412%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.6517%" y="421" width="0.0803%" height="15" fill="rgb(220,190,43)" fg:x="980" fg:w="1"/><text x="78.9017%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.6517%" y="405" width="0.0803%" height="15" fill="rgb(218,20,18)" fg:x="980" fg:w="1"/><text x="78.9017%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6517%" y="389" width="0.0803%" height="15" fill="rgb(245,37,26)" fg:x="980" fg:w="1"/><text x="78.9017%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7319%" y="405" width="0.0803%" height="15" fill="rgb(241,127,29)" fg:x="981" fg:w="1"/><text x="78.9819%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="78.4109%" y="485" width="0.4815%" height="15" fill="rgb(241,33,26)" fg:x="977" fg:w="6"/><text x="78.6609%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (5 samples, 0.40%)</title><rect x="78.4912%" y="469" width="0.4013%" height="15" fill="rgb(220,106,21)" fg:x="978" fg:w="5"/><text x="78.7412%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="78.4912%" y="453" width="0.4013%" height="15" fill="rgb(225,125,35)" fg:x="978" fg:w="5"/><text x="78.7412%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="78.5714%" y="437" width="0.3210%" height="15" fill="rgb(248,80,22)" fg:x="979" fg:w="4"/><text x="78.8214%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.7319%" y="421" width="0.1605%" height="15" fill="rgb(231,117,39)" fg:x="981" fg:w="2"/><text x="78.9819%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.8122%" y="405" width="0.0803%" height="15" fill="rgb(239,183,16)" fg:x="982" fg:w="1"/><text x="79.0622%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8122%" y="389" width="0.0803%" height="15" fill="rgb(221,61,19)" fg:x="982" fg:w="1"/><text x="79.0622%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8925%" y="469" width="0.0803%" height="15" fill="rgb(239,196,44)" fg:x="983" fg:w="1"/><text x="79.1425%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.9727%" y="437" width="0.0803%" height="15" fill="rgb(206,113,19)" fg:x="984" fg:w="1"/><text x="79.2227%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="78.1701%" y="565" width="0.9631%" height="15" fill="rgb(245,114,12)" fg:x="974" fg:w="12"/><text x="78.4201%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (9 samples, 0.72%)</title><rect x="78.4109%" y="549" width="0.7223%" height="15" fill="rgb(247,89,39)" fg:x="977" fg:w="9"/><text x="78.6609%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="78.4109%" y="533" width="0.7223%" height="15" fill="rgb(213,85,14)" fg:x="977" fg:w="9"/><text x="78.6609%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (9 samples, 0.72%)</title><rect x="78.4109%" y="517" width="0.7223%" height="15" fill="rgb(249,206,33)" fg:x="977" fg:w="9"/><text x="78.6609%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="78.4109%" y="501" width="0.7223%" height="15" fill="rgb(235,167,47)" fg:x="977" fg:w="9"/><text x="78.6609%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="78.8925%" y="485" width="0.2408%" height="15" fill="rgb(217,177,16)" fg:x="983" fg:w="3"/><text x="79.1425%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.9727%" y="469" width="0.1605%" height="15" fill="rgb(250,228,29)" fg:x="984" fg:w="2"/><text x="79.2227%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.9727%" y="453" width="0.1605%" height="15" fill="rgb(216,195,42)" fg:x="984" fg:w="2"/><text x="79.2227%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.0530%" y="437" width="0.0803%" height="15" fill="rgb(232,192,32)" fg:x="985" fg:w="1"/><text x="79.3030%" y="447.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="79.2135%" y="469" width="0.0803%" height="15" fill="rgb(211,8,47)" fg:x="987" fg:w="1"/><text x="79.4635%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="79.2135%" y="453" width="0.0803%" height="15" fill="rgb(251,201,9)" fg:x="987" fg:w="1"/><text x="79.4635%" y="463.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="79.2135%" y="437" width="0.0803%" height="15" fill="rgb(206,185,47)" fg:x="987" fg:w="1"/><text x="79.4635%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="79.2135%" y="421" width="0.0803%" height="15" fill="rgb(245,54,32)" fg:x="987" fg:w="1"/><text x="79.4635%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.2135%" y="405" width="0.0803%" height="15" fill="rgb(208,1,8)" fg:x="987" fg:w="1"/><text x="79.4635%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.2135%" y="389" width="0.0803%" height="15" fill="rgb(228,57,24)" fg:x="987" fg:w="1"/><text x="79.4635%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.2135%" y="373" width="0.0803%" height="15" fill="rgb(251,24,8)" fg:x="987" fg:w="1"/><text x="79.4635%" y="383.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="79.2937%" y="469" width="0.0803%" height="15" fill="rgb(236,196,50)" fg:x="988" fg:w="1"/><text x="79.5437%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="79.2937%" y="453" width="0.0803%" height="15" fill="rgb(246,222,29)" fg:x="988" fg:w="1"/><text x="79.5437%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.32%)</title><rect x="79.1332%" y="485" width="0.3210%" height="15" fill="rgb(211,34,40)" fg:x="986" fg:w="4"/><text x="79.3832%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="79.3740%" y="469" width="0.0803%" height="15" fill="rgb(210,66,51)" fg:x="989" fg:w="1"/><text x="79.6240%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="79.3740%" y="453" width="0.0803%" height="15" fill="rgb(250,56,43)" fg:x="989" fg:w="1"/><text x="79.6240%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="79.3740%" y="437" width="0.0803%" height="15" fill="rgb(240,111,50)" fg:x="989" fg:w="1"/><text x="79.6240%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.3740%" y="421" width="0.0803%" height="15" fill="rgb(209,117,13)" fg:x="989" fg:w="1"/><text x="79.6240%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.3740%" y="405" width="0.0803%" height="15" fill="rgb(232,164,45)" fg:x="989" fg:w="1"/><text x="79.6240%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3740%" y="389" width="0.0803%" height="15" fill="rgb(205,69,32)" fg:x="989" fg:w="1"/><text x="79.6240%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.4543%" y="469" width="0.0803%" height="15" fill="rgb(240,147,45)" fg:x="990" fg:w="1"/><text x="79.7043%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.4543%" y="453" width="0.0803%" height="15" fill="rgb(221,94,48)" fg:x="990" fg:w="1"/><text x="79.7043%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.4543%" y="437" width="0.0803%" height="15" fill="rgb(249,209,17)" fg:x="990" fg:w="1"/><text x="79.7043%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.4543%" y="421" width="0.0803%" height="15" fill="rgb(228,57,28)" fg:x="990" fg:w="1"/><text x="79.7043%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.4543%" y="405" width="0.0803%" height="15" fill="rgb(250,133,26)" fg:x="990" fg:w="1"/><text x="79.7043%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.4543%" y="389" width="0.0803%" height="15" fill="rgb(254,15,16)" fg:x="990" fg:w="1"/><text x="79.7043%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="79.4543%" y="373" width="0.0803%" height="15" fill="rgb(209,147,42)" fg:x="990" fg:w="1"/><text x="79.7043%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="79.4543%" y="357" width="0.0803%" height="15" fill="rgb(208,5,29)" fg:x="990" fg:w="1"/><text x="79.7043%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="79.4543%" y="341" width="0.0803%" height="15" fill="rgb(250,73,31)" fg:x="990" fg:w="1"/><text x="79.7043%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="79.4543%" y="325" width="0.0803%" height="15" fill="rgb(238,45,10)" fg:x="990" fg:w="1"/><text x="79.7043%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="79.4543%" y="309" width="0.0803%" height="15" fill="rgb(214,104,5)" fg:x="990" fg:w="1"/><text x="79.7043%" y="319.50"></text></g><g><title>std::ffi::os_str::&lt;impl core::convert::TryFrom&lt;&amp;std::ffi::os_str::OsStr&gt; for &amp;str&gt;::try_from (1 samples, 0.08%)</title><rect x="79.5345%" y="469" width="0.0803%" height="15" fill="rgb(242,217,19)" fg:x="991" fg:w="1"/><text x="79.7845%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.32%)</title><rect x="79.4543%" y="485" width="0.3210%" height="15" fill="rgb(246,113,27)" fg:x="990" fg:w="4"/><text x="79.7043%" y="495.50"></text></g><g><title>std::sys::unix::fs::stat (2 samples, 0.16%)</title><rect x="79.6148%" y="469" width="0.1605%" height="15" fill="rgb(221,34,27)" fg:x="992" fg:w="2"/><text x="79.8648%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.16%)</title><rect x="79.6148%" y="453" width="0.1605%" height="15" fill="rgb(246,109,6)" fg:x="992" fg:w="2"/><text x="79.8648%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="79.6148%" y="437" width="0.1605%" height="15" fill="rgb(217,12,25)" fg:x="992" fg:w="2"/><text x="79.8648%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (2 samples, 0.16%)</title><rect x="79.6148%" y="421" width="0.1605%" height="15" fill="rgb(250,195,5)" fg:x="992" fg:w="2"/><text x="79.8648%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.16%)</title><rect x="79.6148%" y="405" width="0.1605%" height="15" fill="rgb(244,140,45)" fg:x="992" fg:w="2"/><text x="79.8648%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.16%)</title><rect x="79.6148%" y="389" width="0.1605%" height="15" fill="rgb(230,64,14)" fg:x="992" fg:w="2"/><text x="79.8648%" y="399.50"></text></g><g><title>statx (2 samples, 0.16%)</title><rect x="79.6148%" y="373" width="0.1605%" height="15" fill="rgb(206,27,27)" fg:x="992" fg:w="2"/><text x="79.8648%" y="383.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (2 samples, 0.16%)</title><rect x="79.7753%" y="469" width="0.1605%" height="15" fill="rgb(230,14,50)" fg:x="994" fg:w="2"/><text x="80.0253%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="79.7753%" y="453" width="0.1605%" height="15" fill="rgb(237,172,14)" fg:x="994" fg:w="2"/><text x="80.0253%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="79.7753%" y="437" width="0.1605%" height="15" fill="rgb(209,25,21)" fg:x="994" fg:w="2"/><text x="80.0253%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="79.7753%" y="421" width="0.1605%" height="15" fill="rgb(248,148,22)" fg:x="994" fg:w="2"/><text x="80.0253%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="79.7753%" y="405" width="0.1605%" height="15" fill="rgb(234,100,22)" fg:x="994" fg:w="2"/><text x="80.0253%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="79.7753%" y="389" width="0.1605%" height="15" fill="rgb(210,20,30)" fg:x="994" fg:w="2"/><text x="80.0253%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="79.7753%" y="373" width="0.1605%" height="15" fill="rgb(232,58,0)" fg:x="994" fg:w="2"/><text x="80.0253%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="79.7753%" y="357" width="0.1605%" height="15" fill="rgb(221,68,13)" fg:x="994" fg:w="2"/><text x="80.0253%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="79.7753%" y="341" width="0.1605%" height="15" fill="rgb(231,194,11)" fg:x="994" fg:w="2"/><text x="80.0253%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="79.7753%" y="325" width="0.1605%" height="15" fill="rgb(235,51,41)" fg:x="994" fg:w="2"/><text x="80.0253%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="79.7753%" y="309" width="0.1605%" height="15" fill="rgb(240,50,32)" fg:x="994" fg:w="2"/><text x="80.0253%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="79.7753%" y="293" width="0.1605%" height="15" fill="rgb(240,185,36)" fg:x="994" fg:w="2"/><text x="80.0253%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="79.7753%" y="277" width="0.1605%" height="15" fill="rgb(211,168,15)" fg:x="994" fg:w="2"/><text x="80.0253%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="79.7753%" y="261" width="0.1605%" height="15" fill="rgb(221,70,0)" fg:x="994" fg:w="2"/><text x="80.0253%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="79.7753%" y="245" width="0.1605%" height="15" fill="rgb(205,21,33)" fg:x="994" fg:w="2"/><text x="80.0253%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.9358%" y="405" width="0.0803%" height="15" fill="rgb(225,106,10)" fg:x="996" fg:w="1"/><text x="80.1858%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.32%)</title><rect x="79.7753%" y="485" width="0.3210%" height="15" fill="rgb(236,200,50)" fg:x="994" fg:w="4"/><text x="80.0253%" y="495.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (2 samples, 0.16%)</title><rect x="79.9358%" y="469" width="0.1605%" height="15" fill="rgb(249,93,23)" fg:x="996" fg:w="2"/><text x="80.1858%" y="479.50"></text></g><g><title>glob::glob (2 samples, 0.16%)</title><rect x="79.9358%" y="453" width="0.1605%" height="15" fill="rgb(244,115,35)" fg:x="996" fg:w="2"/><text x="80.1858%" y="463.50"></text></g><g><title>glob::glob_with (2 samples, 0.16%)</title><rect x="79.9358%" y="437" width="0.1605%" height="15" fill="rgb(231,129,47)" fg:x="996" fg:w="2"/><text x="80.1858%" y="447.50"></text></g><g><title>glob::Pattern::new (2 samples, 0.16%)</title><rect x="79.9358%" y="421" width="0.1605%" height="15" fill="rgb(225,160,50)" fg:x="996" fg:w="2"/><text x="80.1858%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="80.0161%" y="405" width="0.0803%" height="15" fill="rgb(218,135,23)" fg:x="997" fg:w="1"/><text x="80.2661%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.0161%" y="389" width="0.0803%" height="15" fill="rgb(227,119,14)" fg:x="997" fg:w="1"/><text x="80.2661%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (1 samples, 0.08%)</title><rect x="80.0963%" y="485" width="0.0803%" height="15" fill="rgb(242,138,13)" fg:x="998" fg:w="1"/><text x="80.3463%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0963%" y="469" width="0.0803%" height="15" fill="rgb(215,11,16)" fg:x="998" fg:w="1"/><text x="80.3463%" y="479.50"></text></g><g><title>engine::session::Session::initialize (14 samples, 1.12%)</title><rect x="79.1332%" y="517" width="1.1236%" height="15" fill="rgb(234,170,50)" fg:x="986" fg:w="14"/><text x="79.3832%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (14 samples, 1.12%)</title><rect x="79.1332%" y="501" width="1.1236%" height="15" fill="rgb(233,34,20)" fg:x="986" fg:w="14"/><text x="79.3832%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="80.1766%" y="485" width="0.0803%" height="15" fill="rgb(237,100,45)" fg:x="999" fg:w="1"/><text x="80.4266%" y="495.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="80.1766%" y="469" width="0.0803%" height="15" fill="rgb(231,184,36)" fg:x="999" fg:w="1"/><text x="80.4266%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (15 samples, 1.20%)</title><rect x="79.1332%" y="565" width="1.2039%" height="15" fill="rgb(252,93,2)" fg:x="986" fg:w="15"/><text x="79.3832%" y="575.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (15 samples, 1.20%)</title><rect x="79.1332%" y="549" width="1.2039%" height="15" fill="rgb(248,176,47)" fg:x="986" fg:w="15"/><text x="79.3832%" y="559.50"></text></g><g><title>engine::session::Session::new (15 samples, 1.20%)</title><rect x="79.1332%" y="533" width="1.2039%" height="15" fill="rgb(249,125,23)" fg:x="986" fg:w="15"/><text x="79.3832%" y="543.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="80.2568%" y="517" width="0.0803%" height="15" fill="rgb(239,67,42)" fg:x="1000" fg:w="1"/><text x="80.5068%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.2568%" y="501" width="0.0803%" height="15" fill="rgb(244,162,4)" fg:x="1000" fg:w="1"/><text x="80.5068%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.2568%" y="485" width="0.0803%" height="15" fill="rgb(214,150,38)" fg:x="1000" fg:w="1"/><text x="80.5068%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4173%" y="517" width="0.0803%" height="15" fill="rgb(228,211,28)" fg:x="1002" fg:w="1"/><text x="80.6673%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="80.3371%" y="549" width="0.2408%" height="15" fill="rgb(212,98,48)" fg:x="1001" fg:w="3"/><text x="80.5871%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="80.4173%" y="533" width="0.1605%" height="15" fill="rgb(213,45,13)" fg:x="1002" fg:w="2"/><text x="80.6673%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.4976%" y="517" width="0.0803%" height="15" fill="rgb(218,35,29)" fg:x="1003" fg:w="1"/><text x="80.7476%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.6581%" y="421" width="0.0803%" height="15" fill="rgb(244,13,3)" fg:x="1005" fg:w="1"/><text x="80.9081%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.6581%" y="405" width="0.0803%" height="15" fill="rgb(235,170,19)" fg:x="1005" fg:w="1"/><text x="80.9081%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.6581%" y="389" width="0.0803%" height="15" fill="rgb(233,193,43)" fg:x="1005" fg:w="1"/><text x="80.9081%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="80.6581%" y="437" width="0.1605%" height="15" fill="rgb(228,223,20)" fg:x="1005" fg:w="2"/><text x="80.9081%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7384%" y="421" width="0.0803%" height="15" fill="rgb(208,85,54)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.8186%" y="421" width="0.0803%" height="15" fill="rgb(254,14,45)" fg:x="1007" fg:w="1"/><text x="81.0686%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.8989%" y="405" width="0.0803%" height="15" fill="rgb(247,99,29)" fg:x="1008" fg:w="1"/><text x="81.1489%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8989%" y="389" width="0.0803%" height="15" fill="rgb(225,180,54)" fg:x="1008" fg:w="1"/><text x="81.1489%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.0594%" y="389" width="0.0803%" height="15" fill="rgb(239,88,43)" fg:x="1010" fg:w="1"/><text x="81.3094%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0594%" y="373" width="0.0803%" height="15" fill="rgb(209,47,11)" fg:x="1010" fg:w="1"/><text x="81.3094%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (8 samples, 0.64%)</title><rect x="80.6581%" y="453" width="0.6421%" height="15" fill="rgb(219,179,23)" fg:x="1005" fg:w="8"/><text x="80.9081%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="80.8186%" y="437" width="0.4815%" height="15" fill="rgb(213,183,19)" fg:x="1007" fg:w="6"/><text x="81.0686%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="80.8989%" y="421" width="0.4013%" height="15" fill="rgb(210,11,9)" fg:x="1008" fg:w="5"/><text x="81.1489%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.9791%" y="405" width="0.3210%" height="15" fill="rgb(239,194,16)" fg:x="1009" fg:w="4"/><text x="81.2291%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.1396%" y="389" width="0.1605%" height="15" fill="rgb(246,23,50)" fg:x="1011" fg:w="2"/><text x="81.3896%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.1396%" y="373" width="0.1605%" height="15" fill="rgb(245,10,41)" fg:x="1011" fg:w="2"/><text x="81.3896%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.1396%" y="357" width="0.1605%" height="15" fill="rgb(228,43,24)" fg:x="1011" fg:w="2"/><text x="81.3896%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.2199%" y="341" width="0.0803%" height="15" fill="rgb(220,151,0)" fg:x="1012" fg:w="1"/><text x="81.4699%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3002%" y="405" width="0.0803%" height="15" fill="rgb(232,219,10)" fg:x="1013" fg:w="1"/><text x="81.5502%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.3002%" y="453" width="0.1605%" height="15" fill="rgb(227,217,48)" fg:x="1013" fg:w="2"/><text x="81.5502%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="81.3002%" y="437" width="0.1605%" height="15" fill="rgb(210,66,35)" fg:x="1013" fg:w="2"/><text x="81.5502%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.3002%" y="421" width="0.1605%" height="15" fill="rgb(254,6,7)" fg:x="1013" fg:w="2"/><text x="81.5502%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3804%" y="405" width="0.0803%" height="15" fill="rgb(235,222,42)" fg:x="1014" fg:w="1"/><text x="81.6304%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3804%" y="389" width="0.0803%" height="15" fill="rgb(245,126,5)" fg:x="1014" fg:w="1"/><text x="81.6304%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4607%" y="405" width="0.0803%" height="15" fill="rgb(215,73,17)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.4607%" y="389" width="0.0803%" height="15" fill="rgb(219,198,52)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.5409%" y="357" width="0.0803%" height="15" fill="rgb(217,159,18)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5409%" y="341" width="0.0803%" height="15" fill="rgb(212,177,18)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="351.50"></text></g><g><title>engine::session::Session::flush (15 samples, 1.20%)</title><rect x="80.5778%" y="549" width="1.2039%" height="15" fill="rgb(241,10,11)" fg:x="1004" fg:w="15"/><text x="80.8278%" y="559.50"></text></g><g><title>engine::session::state::State::close (15 samples, 1.20%)</title><rect x="80.5778%" y="533" width="1.2039%" height="15" fill="rgb(232,114,35)" fg:x="1004" fg:w="15"/><text x="80.8278%" y="543.50"></text></g><g><title>engine::session::state::State::flush_entities (15 samples, 1.20%)</title><rect x="80.5778%" y="517" width="1.2039%" height="15" fill="rgb(238,222,8)" fg:x="1004" fg:w="15"/><text x="80.8278%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 1.12%)</title><rect x="80.6581%" y="501" width="1.1236%" height="15" fill="rgb(251,153,44)" fg:x="1005" fg:w="14"/><text x="80.9081%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="80.6581%" y="485" width="1.1236%" height="15" fill="rgb(210,140,51)" fg:x="1005" fg:w="14"/><text x="80.9081%" y="495.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (14 samples, 1.12%)</title><rect x="80.6581%" y="469" width="1.1236%" height="15" fill="rgb(222,63,0)" fg:x="1005" fg:w="14"/><text x="80.9081%" y="479.50"></text></g><g><title>kernel::model::any_entity_changes (4 samples, 0.32%)</title><rect x="81.4607%" y="453" width="0.3210%" height="15" fill="rgb(240,18,40)" fg:x="1015" fg:w="4"/><text x="81.7107%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="81.4607%" y="437" width="0.3210%" height="15" fill="rgb(237,88,16)" fg:x="1015" fg:w="4"/><text x="81.7107%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="81.4607%" y="421" width="0.3210%" height="15" fill="rgb(251,117,13)" fg:x="1015" fg:w="4"/><text x="81.7107%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="81.5409%" y="405" width="0.2408%" height="15" fill="rgb(251,228,8)" fg:x="1016" fg:w="3"/><text x="81.7909%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="81.5409%" y="389" width="0.2408%" height="15" fill="rgb(205,107,49)" fg:x="1016" fg:w="3"/><text x="81.7909%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="81.5409%" y="373" width="0.2408%" height="15" fill="rgb(238,72,41)" fg:x="1016" fg:w="3"/><text x="81.7909%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.6212%" y="357" width="0.1605%" height="15" fill="rgb(248,183,52)" fg:x="1017" fg:w="2"/><text x="81.8712%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.6212%" y="341" width="0.1605%" height="15" fill="rgb(215,58,20)" fg:x="1017" fg:w="2"/><text x="81.8712%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.6212%" y="325" width="0.1605%" height="15" fill="rgb(209,49,13)" fg:x="1017" fg:w="2"/><text x="81.8712%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7014%" y="309" width="0.0803%" height="15" fill="rgb(208,113,17)" fg:x="1018" fg:w="1"/><text x="81.9514%" y="319.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="81.7817%" y="549" width="0.0803%" height="15" fill="rgb(208,14,22)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="81.7817%" y="533" width="0.0803%" height="15" fill="rgb(222,95,2)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7817%" y="517" width="0.0803%" height="15" fill="rgb(253,180,37)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7817%" y="501" width="0.0803%" height="15" fill="rgb(250,81,33)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.7817%" y="485" width="0.0803%" height="15" fill="rgb(251,151,41)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="81.8620%" y="517" width="0.0803%" height="15" fill="rgb(210,135,17)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="81.8620%" y="501" width="0.0803%" height="15" fill="rgb(239,21,29)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8620%" y="485" width="0.0803%" height="15" fill="rgb(231,215,16)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8620%" y="469" width="0.0803%" height="15" fill="rgb(239,151,54)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8620%" y="453" width="0.0803%" height="15" fill="rgb(222,122,38)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="81.9422%" y="469" width="0.0803%" height="15" fill="rgb(243,128,1)" fg:x="1021" fg:w="1"/><text x="82.1922%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.9422%" y="453" width="0.0803%" height="15" fill="rgb(225,74,21)" fg:x="1021" fg:w="1"/><text x="82.1922%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.9422%" y="437" width="0.0803%" height="15" fill="rgb(216,210,10)" fg:x="1021" fg:w="1"/><text x="82.1922%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="81.9422%" y="501" width="0.1605%" height="15" fill="rgb(228,76,19)" fg:x="1021" fg:w="2"/><text x="82.1922%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="81.9422%" y="485" width="0.1605%" height="15" fill="rgb(236,80,34)" fg:x="1021" fg:w="2"/><text x="82.1922%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0225%" y="469" width="0.0803%" height="15" fill="rgb(225,173,23)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1027%" y="469" width="0.0803%" height="15" fill="rgb(253,38,1)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="479.50"></text></g><g><title>plugins_core::build::Build::save (5 samples, 0.40%)</title><rect x="81.8620%" y="549" width="0.4013%" height="15" fill="rgb(206,155,35)" fg:x="1020" fg:w="5"/><text x="82.1120%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="81.8620%" y="533" width="0.4013%" height="15" fill="rgb(254,27,53)" fg:x="1020" fg:w="5"/><text x="82.1120%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="81.9422%" y="517" width="0.3210%" height="15" fill="rgb(225,52,41)" fg:x="1021" fg:w="4"/><text x="82.1922%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="82.1027%" y="501" width="0.1605%" height="15" fill="rgb(244,53,18)" fg:x="1023" fg:w="2"/><text x="82.3527%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="82.1027%" y="485" width="0.1605%" height="15" fill="rgb(254,206,48)" fg:x="1023" fg:w="2"/><text x="82.3527%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.1830%" y="469" width="0.0803%" height="15" fill="rgb(236,182,23)" fg:x="1024" fg:w="1"/><text x="82.4330%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.1830%" y="453" width="0.0803%" height="15" fill="rgb(236,191,37)" fg:x="1024" fg:w="1"/><text x="82.4330%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="82.2632%" y="549" width="0.0803%" height="15" fill="rgb(245,53,8)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="82.2632%" y="533" width="0.0803%" height="15" fill="rgb(245,147,9)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="543.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="82.2632%" y="517" width="0.0803%" height="15" fill="rgb(218,24,48)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="82.2632%" y="501" width="0.0803%" height="15" fill="rgb(254,23,9)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="511.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2632%" y="485" width="0.0803%" height="15" fill="rgb(244,105,9)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.3435%" y="501" width="0.0803%" height="15" fill="rgb(212,142,22)" fg:x="1026" fg:w="1"/><text x="82.5935%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="82.3435%" y="533" width="0.1605%" height="15" fill="rgb(221,114,49)" fg:x="1026" fg:w="2"/><text x="82.5935%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="82.3435%" y="517" width="0.1605%" height="15" fill="rgb(223,210,25)" fg:x="1026" fg:w="2"/><text x="82.5935%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.4238%" y="501" width="0.0803%" height="15" fill="rgb(235,162,44)" fg:x="1027" fg:w="1"/><text x="82.6738%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.4238%" y="485" width="0.0803%" height="15" fill="rgb(237,65,45)" fg:x="1027" fg:w="1"/><text x="82.6738%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.4238%" y="469" width="0.0803%" height="15" fill="rgb(208,79,9)" fg:x="1027" fg:w="1"/><text x="82.6738%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="82.5040%" y="533" width="0.1605%" height="15" fill="rgb(215,228,8)" fg:x="1028" fg:w="2"/><text x="82.7540%" y="543.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="82.5040%" y="517" width="0.1605%" height="15" fill="rgb(205,185,17)" fg:x="1028" fg:w="2"/><text x="82.7540%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5843%" y="501" width="0.0803%" height="15" fill="rgb(213,62,36)" fg:x="1029" fg:w="1"/><text x="82.8343%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="82.6645%" y="533" width="0.2408%" height="15" fill="rgb(209,34,9)" fg:x="1030" fg:w="3"/><text x="82.9145%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="82.7448%" y="517" width="0.1605%" height="15" fill="rgb(246,151,27)" fg:x="1031" fg:w="2"/><text x="82.9948%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="82.8250%" y="501" width="0.0803%" height="15" fill="rgb(218,206,3)" fg:x="1032" fg:w="1"/><text x="83.0750%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="82.8250%" y="485" width="0.0803%" height="15" fill="rgb(242,202,1)" fg:x="1032" fg:w="1"/><text x="83.0750%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="82.8250%" y="469" width="0.0803%" height="15" fill="rgb(227,185,16)" fg:x="1032" fg:w="1"/><text x="83.0750%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.8250%" y="453" width="0.0803%" height="15" fill="rgb(241,1,14)" fg:x="1032" fg:w="1"/><text x="83.0750%" y="463.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="82.8250%" y="437" width="0.0803%" height="15" fill="rgb(212,113,25)" fg:x="1032" fg:w="1"/><text x="83.0750%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="82.9053%" y="517" width="0.0803%" height="15" fill="rgb(247,37,43)" fg:x="1033" fg:w="1"/><text x="83.1553%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.9053%" y="501" width="0.0803%" height="15" fill="rgb(226,54,8)" fg:x="1033" fg:w="1"/><text x="83.1553%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="82.9053%" y="485" width="0.0803%" height="15" fill="rgb(251,205,25)" fg:x="1033" fg:w="1"/><text x="83.1553%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.0658%" y="469" width="0.0803%" height="15" fill="rgb(246,87,35)" fg:x="1035" fg:w="1"/><text x="83.3158%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0658%" y="453" width="0.0803%" height="15" fill="rgb(251,145,46)" fg:x="1035" fg:w="1"/><text x="83.3158%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="83.1461%" y="389" width="0.3210%" height="15" fill="rgb(210,210,33)" fg:x="1036" fg:w="4"/><text x="83.3961%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="83.1461%" y="373" width="0.3210%" height="15" fill="rgb(221,151,11)" fg:x="1036" fg:w="4"/><text x="83.3961%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="83.1461%" y="357" width="0.3210%" height="15" fill="rgb(208,160,28)" fg:x="1036" fg:w="4"/><text x="83.3961%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="83.2263%" y="341" width="0.2408%" height="15" fill="rgb(243,69,29)" fg:x="1037" fg:w="3"/><text x="83.4763%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="83.3066%" y="325" width="0.1605%" height="15" fill="rgb(224,144,4)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="83.3066%" y="309" width="0.1605%" height="15" fill="rgb(211,140,38)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="83.3066%" y="293" width="0.1605%" height="15" fill="rgb(252,189,15)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="83.1461%" y="405" width="0.4013%" height="15" fill="rgb(251,175,23)" fg:x="1036" fg:w="5"/><text x="83.3961%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4671%" y="389" width="0.0803%" height="15" fill="rgb(212,184,11)" fg:x="1040" fg:w="1"/><text x="83.7171%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.4671%" y="373" width="0.0803%" height="15" fill="rgb(217,205,6)" fg:x="1040" fg:w="1"/><text x="83.7171%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="83.4671%" y="357" width="0.0803%" height="15" fill="rgb(235,45,45)" fg:x="1040" fg:w="1"/><text x="83.7171%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.6276%" y="341" width="0.0803%" height="15" fill="rgb(211,157,53)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.6276%" y="325" width="0.0803%" height="15" fill="rgb(212,13,8)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.6276%" y="309" width="0.0803%" height="15" fill="rgb(218,80,36)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.6276%" y="293" width="0.0803%" height="15" fill="rgb(211,123,43)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="83.5474%" y="389" width="0.2408%" height="15" fill="rgb(206,165,2)" fg:x="1041" fg:w="3"/><text x="83.7974%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="83.5474%" y="373" width="0.2408%" height="15" fill="rgb(248,63,35)" fg:x="1041" fg:w="3"/><text x="83.7974%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.6276%" y="357" width="0.1605%" height="15" fill="rgb(219,133,41)" fg:x="1042" fg:w="2"/><text x="83.8776%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="83.7079%" y="341" width="0.0803%" height="15" fill="rgb(206,175,46)" fg:x="1043" fg:w="1"/><text x="83.9579%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.8684%" y="373" width="0.0803%" height="15" fill="rgb(224,41,35)" fg:x="1045" fg:w="1"/><text x="84.1184%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.9486%" y="373" width="0.0803%" height="15" fill="rgb(226,113,24)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9486%" y="357" width="0.0803%" height="15" fill="rgb(219,51,41)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.9486%" y="341" width="0.0803%" height="15" fill="rgb(220,145,47)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.9486%" y="325" width="0.0803%" height="15" fill="rgb(239,121,47)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.9486%" y="309" width="0.0803%" height="15" fill="rgb(207,60,40)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="84.1894%" y="341" width="0.1605%" height="15" fill="rgb(224,229,11)" fg:x="1049" fg:w="2"/><text x="84.4394%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.2697%" y="325" width="0.0803%" height="15" fill="rgb(252,28,32)" fg:x="1050" fg:w="1"/><text x="84.5197%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.2697%" y="309" width="0.0803%" height="15" fill="rgb(207,52,49)" fg:x="1050" fg:w="1"/><text x="84.5197%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.2697%" y="293" width="0.0803%" height="15" fill="rgb(243,51,50)" fg:x="1050" fg:w="1"/><text x="84.5197%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.2697%" y="277" width="0.0803%" height="15" fill="rgb(212,92,21)" fg:x="1050" fg:w="1"/><text x="84.5197%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.2697%" y="261" width="0.0803%" height="15" fill="rgb(230,183,50)" fg:x="1050" fg:w="1"/><text x="84.5197%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.2697%" y="245" width="0.0803%" height="15" fill="rgb(225,48,9)" fg:x="1050" fg:w="1"/><text x="84.5197%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="84.0289%" y="373" width="0.4815%" height="15" fill="rgb(254,44,4)" fg:x="1047" fg:w="6"/><text x="84.2789%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="84.1091%" y="357" width="0.4013%" height="15" fill="rgb(252,128,37)" fg:x="1048" fg:w="5"/><text x="84.3591%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="84.3499%" y="341" width="0.1605%" height="15" fill="rgb(227,178,8)" fg:x="1051" fg:w="2"/><text x="84.5999%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.4302%" y="325" width="0.0803%" height="15" fill="rgb(205,206,32)" fg:x="1052" fg:w="1"/><text x="84.6802%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.4302%" y="309" width="0.0803%" height="15" fill="rgb(220,218,22)" fg:x="1052" fg:w="1"/><text x="84.6802%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.4302%" y="293" width="0.0803%" height="15" fill="rgb(236,41,28)" fg:x="1052" fg:w="1"/><text x="84.6802%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="83.7881%" y="389" width="0.8026%" height="15" fill="rgb(219,37,7)" fg:x="1044" fg:w="10"/><text x="84.0381%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.5104%" y="373" width="0.0803%" height="15" fill="rgb(206,160,15)" fg:x="1053" fg:w="1"/><text x="84.7604%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.5104%" y="357" width="0.0803%" height="15" fill="rgb(208,82,21)" fg:x="1053" fg:w="1"/><text x="84.7604%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.5104%" y="341" width="0.0803%" height="15" fill="rgb(226,130,25)" fg:x="1053" fg:w="1"/><text x="84.7604%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.52%)</title><rect x="83.1461%" y="421" width="1.5249%" height="15" fill="rgb(212,72,24)" fg:x="1036" fg:w="19"/><text x="83.3961%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="83.5474%" y="405" width="1.1236%" height="15" fill="rgb(206,28,16)" fg:x="1041" fg:w="14"/><text x="83.7974%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.5907%" y="389" width="0.0803%" height="15" fill="rgb(249,41,5)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.5907%" y="373" width="0.0803%" height="15" fill="rgb(233,96,48)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.7512%" y="373" width="0.0803%" height="15" fill="rgb(240,198,11)" fg:x="1056" fg:w="1"/><text x="85.0012%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.8315%" y="341" width="0.0803%" height="15" fill="rgb(209,175,35)" fg:x="1057" fg:w="1"/><text x="85.0815%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="84.6709%" y="421" width="0.3210%" height="15" fill="rgb(214,40,51)" fg:x="1055" fg:w="4"/><text x="84.9209%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="84.6709%" y="405" width="0.3210%" height="15" fill="rgb(252,56,4)" fg:x="1055" fg:w="4"/><text x="84.9209%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="84.6709%" y="389" width="0.3210%" height="15" fill="rgb(219,131,5)" fg:x="1055" fg:w="4"/><text x="84.9209%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.8315%" y="373" width="0.1605%" height="15" fill="rgb(223,67,53)" fg:x="1057" fg:w="2"/><text x="85.0815%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.8315%" y="357" width="0.1605%" height="15" fill="rgb(227,154,8)" fg:x="1057" fg:w="2"/><text x="85.0815%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="84.9117%" y="341" width="0.0803%" height="15" fill="rgb(216,174,51)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.9117%" y="325" width="0.0803%" height="15" fill="rgb(239,60,34)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.9117%" y="309" width="0.0803%" height="15" fill="rgb(236,165,48)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.9920%" y="389" width="0.0803%" height="15" fill="rgb(210,37,26)" fg:x="1059" fg:w="1"/><text x="85.2420%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="84.9920%" y="405" width="0.2408%" height="15" fill="rgb(211,3,17)" fg:x="1059" fg:w="3"/><text x="85.2420%" y="415.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="85.0722%" y="389" width="0.1605%" height="15" fill="rgb(234,88,49)" fg:x="1060" fg:w="2"/><text x="85.3222%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="85.0722%" y="373" width="0.1605%" height="15" fill="rgb(233,40,17)" fg:x="1060" fg:w="2"/><text x="85.3222%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="85.0722%" y="357" width="0.1605%" height="15" fill="rgb(235,127,31)" fg:x="1060" fg:w="2"/><text x="85.3222%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3130%" y="373" width="0.0803%" height="15" fill="rgb(248,167,17)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.3933%" y="373" width="0.1605%" height="15" fill="rgb(218,179,8)" fg:x="1064" fg:w="2"/><text x="85.6433%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.4735%" y="357" width="0.0803%" height="15" fill="rgb(216,92,14)" fg:x="1065" fg:w="1"/><text x="85.7235%" y="367.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="85.5538%" y="341" width="0.2408%" height="15" fill="rgb(221,198,46)" fg:x="1066" fg:w="3"/><text x="85.8038%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="85.5538%" y="373" width="0.3210%" height="15" fill="rgb(244,7,25)" fg:x="1066" fg:w="4"/><text x="85.8038%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="85.5538%" y="357" width="0.3210%" height="15" fill="rgb(233,75,6)" fg:x="1066" fg:w="4"/><text x="85.8038%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7945%" y="341" width="0.0803%" height="15" fill="rgb(240,189,41)" fg:x="1069" fg:w="1"/><text x="86.0445%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="86.0353%" y="341" width="0.0803%" height="15" fill="rgb(237,157,21)" fg:x="1072" fg:w="1"/><text x="86.2853%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1958%" y="325" width="0.0803%" height="15" fill="rgb(210,136,49)" fg:x="1074" fg:w="1"/><text x="86.4458%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1958%" y="309" width="0.0803%" height="15" fill="rgb(210,68,29)" fg:x="1074" fg:w="1"/><text x="86.4458%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="86.2761%" y="309" width="0.0803%" height="15" fill="rgb(247,207,20)" fg:x="1075" fg:w="1"/><text x="86.5261%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="86.2761%" y="325" width="0.1605%" height="15" fill="rgb(224,73,48)" fg:x="1075" fg:w="2"/><text x="86.5261%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3563%" y="309" width="0.0803%" height="15" fill="rgb(215,136,47)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.3563%" y="293" width="0.0803%" height="15" fill="rgb(232,222,16)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3563%" y="277" width="0.0803%" height="15" fill="rgb(249,202,47)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3563%" y="261" width="0.0803%" height="15" fill="rgb(236,56,8)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.5169%" y="309" width="0.0803%" height="15" fill="rgb(222,6,3)" fg:x="1078" fg:w="1"/><text x="86.7669%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.6774%" y="293" width="0.0803%" height="15" fill="rgb(254,222,28)" fg:x="1080" fg:w="1"/><text x="86.9274%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.7576%" y="277" width="0.0803%" height="15" fill="rgb(219,57,23)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="86.1156%" y="341" width="0.8026%" height="15" fill="rgb(251,106,48)" fg:x="1073" fg:w="10"/><text x="86.3656%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="86.4366%" y="325" width="0.4815%" height="15" fill="rgb(242,2,23)" fg:x="1077" fg:w="6"/><text x="86.6866%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="86.5971%" y="309" width="0.3210%" height="15" fill="rgb(212,109,31)" fg:x="1079" fg:w="4"/><text x="86.8471%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="86.7576%" y="293" width="0.1605%" height="15" fill="rgb(241,9,22)" fg:x="1081" fg:w="2"/><text x="87.0076%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.8379%" y="277" width="0.0803%" height="15" fill="rgb(209,64,27)" fg:x="1082" fg:w="1"/><text x="87.0879%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.04%)</title><rect x="86.0353%" y="357" width="1.0433%" height="15" fill="rgb(248,13,44)" fg:x="1072" fg:w="13"/><text x="86.2853%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="86.9181%" y="341" width="0.1605%" height="15" fill="rgb(213,86,6)" fg:x="1083" fg:w="2"/><text x="87.1681%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9984%" y="325" width="0.0803%" height="15" fill="rgb(247,11,18)" fg:x="1084" fg:w="1"/><text x="87.2484%" y="335.50"></text></g><g><title>engine::session::Session::flush (56 samples, 4.49%)</title><rect x="82.9053%" y="533" width="4.4944%" height="15" fill="rgb(252,31,11)" fg:x="1033" fg:w="56"/><text x="83.1553%" y="543.50">engin..</text></g><g><title>engine::session::Session::save_changes (55 samples, 4.41%)</title><rect x="82.9856%" y="517" width="4.4141%" height="15" fill="rgb(215,63,51)" fg:x="1034" fg:w="55"/><text x="83.2356%" y="527.50">engin..</text></g><g><title>engine::session::state::State::close (55 samples, 4.41%)</title><rect x="82.9856%" y="501" width="4.4141%" height="15" fill="rgb(222,180,4)" fg:x="1034" fg:w="55"/><text x="83.2356%" y="511.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (54 samples, 4.33%)</title><rect x="83.0658%" y="485" width="4.3339%" height="15" fill="rgb(233,4,23)" fg:x="1035" fg:w="54"/><text x="83.3158%" y="495.50">engin..</text></g><g><title>core::iter::adapters::try_process (53 samples, 4.25%)</title><rect x="83.1461%" y="469" width="4.2536%" height="15" fill="rgb(230,116,22)" fg:x="1036" fg:w="53"/><text x="83.3961%" y="479.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 4.25%)</title><rect x="83.1461%" y="453" width="4.2536%" height="15" fill="rgb(222,20,14)" fg:x="1036" fg:w="53"/><text x="83.3961%" y="463.50">&lt;allo..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (53 samples, 4.25%)</title><rect x="83.1461%" y="437" width="4.2536%" height="15" fill="rgb(210,176,43)" fg:x="1036" fg:w="53"/><text x="83.3961%" y="447.50">engin..</text></g><g><title>kernel::model::any_entity_changes (30 samples, 2.41%)</title><rect x="84.9920%" y="421" width="2.4077%" height="15" fill="rgb(219,67,32)" fg:x="1059" fg:w="30"/><text x="85.2420%" y="431.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (27 samples, 2.17%)</title><rect x="85.2327%" y="405" width="2.1669%" height="15" fill="rgb(228,91,39)" fg:x="1062" fg:w="27"/><text x="85.4827%" y="415.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.17%)</title><rect x="85.2327%" y="389" width="2.1669%" height="15" fill="rgb(254,63,14)" fg:x="1062" fg:w="27"/><text x="85.4827%" y="399.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.52%)</title><rect x="85.8748%" y="373" width="1.5249%" height="15" fill="rgb(216,171,39)" fg:x="1070" fg:w="19"/><text x="86.1248%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="87.0787%" y="357" width="0.3210%" height="15" fill="rgb(248,68,25)" fg:x="1085" fg:w="4"/><text x="87.3287%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="87.1589%" y="341" width="0.2408%" height="15" fill="rgb(239,63,16)" fg:x="1086" fg:w="3"/><text x="87.4089%" y="351.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="87.3997%" y="533" width="0.0803%" height="15" fill="rgb(225,111,43)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="87.3997%" y="517" width="0.0803%" height="15" fill="rgb(246,165,17)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3997%" y="501" width="0.0803%" height="15" fill="rgb(208,124,1)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.3997%" y="485" width="0.0803%" height="15" fill="rgb(234,147,33)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.3997%" y="469" width="0.0803%" height="15" fill="rgb(240,86,30)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3997%" y="453" width="0.0803%" height="15" fill="rgb(237,34,51)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.3997%" y="437" width="0.0803%" height="15" fill="rgb(232,131,41)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.3997%" y="421" width="0.0803%" height="15" fill="rgb(227,129,53)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="431.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="87.4799%" y="517" width="0.0803%" height="15" fill="rgb(230,90,35)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="87.4799%" y="501" width="0.0803%" height="15" fill="rgb(248,88,27)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.4799%" y="485" width="0.0803%" height="15" fill="rgb(223,18,17)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="495.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="87.4799%" y="533" width="0.1605%" height="15" fill="rgb(241,11,10)" fg:x="1090" fg:w="2"/><text x="87.7299%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="87.5602%" y="517" width="0.0803%" height="15" fill="rgb(232,111,52)" fg:x="1091" fg:w="1"/><text x="87.8102%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6404%" y="485" width="0.0803%" height="15" fill="rgb(228,67,8)" fg:x="1092" fg:w="1"/><text x="87.8904%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6404%" y="469" width="0.0803%" height="15" fill="rgb(251,168,31)" fg:x="1092" fg:w="1"/><text x="87.8904%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6404%" y="453" width="0.0803%" height="15" fill="rgb(249,164,11)" fg:x="1092" fg:w="1"/><text x="87.8904%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6404%" y="437" width="0.0803%" height="15" fill="rgb(239,81,9)" fg:x="1092" fg:w="1"/><text x="87.8904%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="87.6404%" y="517" width="0.2408%" height="15" fill="rgb(222,145,38)" fg:x="1092" fg:w="3"/><text x="87.8904%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="87.6404%" y="501" width="0.2408%" height="15" fill="rgb(238,80,54)" fg:x="1092" fg:w="3"/><text x="87.8904%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.7207%" y="485" width="0.1605%" height="15" fill="rgb(237,116,16)" fg:x="1093" fg:w="2"/><text x="87.9707%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.7207%" y="469" width="0.1605%" height="15" fill="rgb(218,135,19)" fg:x="1093" fg:w="2"/><text x="87.9707%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.8010%" y="453" width="0.0803%" height="15" fill="rgb(216,207,44)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.8010%" y="437" width="0.0803%" height="15" fill="rgb(226,152,40)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.8010%" y="421" width="0.0803%" height="15" fill="rgb(219,98,35)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.8010%" y="405" width="0.0803%" height="15" fill="rgb(222,136,46)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="87.8812%" y="501" width="0.0803%" height="15" fill="rgb(222,71,8)" fg:x="1095" fg:w="1"/><text x="88.1312%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.8812%" y="485" width="0.0803%" height="15" fill="rgb(209,89,53)" fg:x="1095" fg:w="1"/><text x="88.1312%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.8812%" y="469" width="0.0803%" height="15" fill="rgb(210,97,51)" fg:x="1095" fg:w="1"/><text x="88.1312%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="87.9615%" y="501" width="0.0803%" height="15" fill="rgb(248,65,21)" fg:x="1096" fg:w="1"/><text x="88.2115%" y="511.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="87.9615%" y="485" width="0.0803%" height="15" fill="rgb(222,5,31)" fg:x="1096" fg:w="1"/><text x="88.2115%" y="495.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.9615%" y="469" width="0.0803%" height="15" fill="rgb(241,16,30)" fg:x="1096" fg:w="1"/><text x="88.2115%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9615%" y="453" width="0.0803%" height="15" fill="rgb(215,86,30)" fg:x="1096" fg:w="1"/><text x="88.2115%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="88.0417%" y="501" width="0.0803%" height="15" fill="rgb(235,26,44)" fg:x="1097" fg:w="1"/><text x="88.2917%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.0417%" y="485" width="0.0803%" height="15" fill="rgb(228,147,14)" fg:x="1097" fg:w="1"/><text x="88.2917%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.0417%" y="469" width="0.0803%" height="15" fill="rgb(253,38,50)" fg:x="1097" fg:w="1"/><text x="88.2917%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.1220%" y="485" width="0.0803%" height="15" fill="rgb(251,151,16)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.1220%" y="469" width="0.0803%" height="15" fill="rgb(224,64,19)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="88.1220%" y="453" width="0.0803%" height="15" fill="rgb(235,214,47)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1220%" y="437" width="0.0803%" height="15" fill="rgb(218,15,19)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1220%" y="421" width="0.0803%" height="15" fill="rgb(247,209,3)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1220%" y="405" width="0.0803%" height="15" fill="rgb(217,29,2)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1220%" y="389" width="0.0803%" height="15" fill="rgb(234,9,9)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1220%" y="373" width="0.0803%" height="15" fill="rgb(207,43,14)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.1220%" y="357" width="0.0803%" height="15" fill="rgb(216,219,36)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.1220%" y="341" width="0.0803%" height="15" fill="rgb(238,12,26)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.1220%" y="325" width="0.0803%" height="15" fill="rgb(226,67,30)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1220%" y="309" width="0.0803%" height="15" fill="rgb(229,154,7)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1220%" y="293" width="0.0803%" height="15" fill="rgb(249,90,18)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.1220%" y="277" width="0.0803%" height="15" fill="rgb(223,53,15)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.1220%" y="261" width="0.0803%" height="15" fill="rgb(253,86,38)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.1220%" y="245" width="0.0803%" height="15" fill="rgb(222,198,9)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.1220%" y="229" width="0.0803%" height="15" fill="rgb(240,146,25)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1220%" y="213" width="0.0803%" height="15" fill="rgb(225,38,10)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2022%" y="453" width="0.0803%" height="15" fill="rgb(246,93,4)" fg:x="1099" fg:w="1"/><text x="88.4522%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2022%" y="437" width="0.0803%" height="15" fill="rgb(222,55,18)" fg:x="1099" fg:w="1"/><text x="88.4522%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2825%" y="453" width="0.0803%" height="15" fill="rgb(233,137,48)" fg:x="1100" fg:w="1"/><text x="88.5325%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.2825%" y="437" width="0.0803%" height="15" fill="rgb(214,8,54)" fg:x="1100" fg:w="1"/><text x="88.5325%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.2825%" y="421" width="0.0803%" height="15" fill="rgb(206,75,4)" fg:x="1100" fg:w="1"/><text x="88.5325%" y="431.50"></text></g><g><title>plugins_core::build::Build::save (10 samples, 0.80%)</title><rect x="87.6404%" y="533" width="0.8026%" height="15" fill="rgb(238,171,14)" fg:x="1092" fg:w="10"/><text x="87.8904%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="87.8812%" y="517" width="0.5618%" height="15" fill="rgb(233,70,41)" fg:x="1095" fg:w="7"/><text x="88.1312%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="88.1220%" y="501" width="0.3210%" height="15" fill="rgb(214,68,36)" fg:x="1098" fg:w="4"/><text x="88.3720%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="88.2022%" y="485" width="0.2408%" height="15" fill="rgb(223,29,5)" fg:x="1099" fg:w="3"/><text x="88.4522%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="88.2022%" y="469" width="0.2408%" height="15" fill="rgb(251,22,40)" fg:x="1099" fg:w="3"/><text x="88.4522%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.3628%" y="453" width="0.0803%" height="15" fill="rgb(210,67,41)" fg:x="1101" fg:w="1"/><text x="88.6128%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="88.3628%" y="437" width="0.0803%" height="15" fill="rgb(225,177,31)" fg:x="1101" fg:w="1"/><text x="88.6128%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.3628%" y="421" width="0.0803%" height="15" fill="rgb(221,229,11)" fg:x="1101" fg:w="1"/><text x="88.6128%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3628%" y="405" width="0.0803%" height="15" fill="rgb(247,172,52)" fg:x="1101" fg:w="1"/><text x="88.6128%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.3628%" y="389" width="0.0803%" height="15" fill="rgb(212,73,19)" fg:x="1101" fg:w="1"/><text x="88.6128%" y="399.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="88.4430%" y="533" width="0.0803%" height="15" fill="rgb(244,7,46)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="543.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="88.4430%" y="517" width="0.0803%" height="15" fill="rgb(230,113,20)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="88.4430%" y="501" width="0.0803%" height="15" fill="rgb(209,97,30)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="88.4430%" y="485" width="0.0803%" height="15" fill="rgb(243,89,12)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.4430%" y="469" width="0.0803%" height="15" fill="rgb(228,32,19)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.4430%" y="453" width="0.0803%" height="15" fill="rgb(248,25,17)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="88.4430%" y="437" width="0.0803%" height="15" fill="rgb(232,161,29)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="88.5233%" y="501" width="0.0803%" height="15" fill="rgb(251,192,11)" fg:x="1103" fg:w="1"/><text x="88.7733%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="88.5233%" y="485" width="0.0803%" height="15" fill="rgb(240,47,32)" fg:x="1103" fg:w="1"/><text x="88.7733%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6035%" y="437" width="0.0803%" height="15" fill="rgb(250,16,45)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6035%" y="421" width="0.0803%" height="15" fill="rgb(227,217,42)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6035%" y="405" width="0.0803%" height="15" fill="rgb(206,82,54)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.6035%" y="389" width="0.0803%" height="15" fill="rgb(243,145,25)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.6035%" y="373" width="0.0803%" height="15" fill="rgb(207,166,24)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.6035%" y="357" width="0.0803%" height="15" fill="rgb(215,191,44)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.6035%" y="341" width="0.0803%" height="15" fill="rgb(234,218,51)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.6035%" y="325" width="0.0803%" height="15" fill="rgb(245,133,21)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.6035%" y="309" width="0.0803%" height="15" fill="rgb(230,136,45)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.6035%" y="293" width="0.0803%" height="15" fill="rgb(247,63,43)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.6035%" y="277" width="0.0803%" height="15" fill="rgb(254,223,31)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.6035%" y="261" width="0.0803%" height="15" fill="rgb(236,185,0)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6838%" y="437" width="0.0803%" height="15" fill="rgb(231,139,46)" fg:x="1105" fg:w="1"/><text x="88.9338%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="88.6035%" y="501" width="0.2408%" height="15" fill="rgb(236,147,31)" fg:x="1104" fg:w="3"/><text x="88.8535%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="88.6035%" y="485" width="0.2408%" height="15" fill="rgb(225,222,22)" fg:x="1104" fg:w="3"/><text x="88.8535%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="88.6035%" y="469" width="0.2408%" height="15" fill="rgb(225,193,14)" fg:x="1104" fg:w="3"/><text x="88.8535%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="88.6035%" y="453" width="0.2408%" height="15" fill="rgb(253,193,46)" fg:x="1104" fg:w="3"/><text x="88.8535%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.7640%" y="437" width="0.0803%" height="15" fill="rgb(218,187,39)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7640%" y="421" width="0.0803%" height="15" fill="rgb(227,162,48)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.7640%" y="405" width="0.0803%" height="15" fill="rgb(222,25,5)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7640%" y="389" width="0.0803%" height="15" fill="rgb(211,205,16)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.7640%" y="373" width="0.0803%" height="15" fill="rgb(244,191,2)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7640%" y="357" width="0.0803%" height="15" fill="rgb(248,159,12)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.7640%" y="341" width="0.0803%" height="15" fill="rgb(235,204,17)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="351.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (5 samples, 0.40%)</title><rect x="88.5233%" y="533" width="0.4013%" height="15" fill="rgb(240,21,27)" fg:x="1103" fg:w="5"/><text x="88.7733%" y="543.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="88.5233%" y="517" width="0.4013%" height="15" fill="rgb(224,170,31)" fg:x="1103" fg:w="5"/><text x="88.7733%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="88.8443%" y="501" width="0.0803%" height="15" fill="rgb(223,145,32)" fg:x="1107" fg:w="1"/><text x="89.0943%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="88.8443%" y="485" width="0.0803%" height="15" fill="rgb(243,100,5)" fg:x="1107" fg:w="1"/><text x="89.0943%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8443%" y="469" width="0.0803%" height="15" fill="rgb(242,131,51)" fg:x="1107" fg:w="1"/><text x="89.0943%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="88.8443%" y="453" width="0.0803%" height="15" fill="rgb(223,156,46)" fg:x="1107" fg:w="1"/><text x="89.0943%" y="463.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="88.9246%" y="517" width="0.0803%" height="15" fill="rgb(215,10,40)" fg:x="1108" fg:w="1"/><text x="89.1746%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9246%" y="501" width="0.0803%" height="15" fill="rgb(233,155,0)" fg:x="1108" fg:w="1"/><text x="89.1746%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9246%" y="485" width="0.0803%" height="15" fill="rgb(247,78,6)" fg:x="1108" fg:w="1"/><text x="89.1746%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="88.9246%" y="469" width="0.0803%" height="15" fill="rgb(237,217,21)" fg:x="1108" fg:w="1"/><text x="89.1746%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="88.9246%" y="453" width="0.0803%" height="15" fill="rgb(212,1,21)" fg:x="1108" fg:w="1"/><text x="89.1746%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (2 samples, 0.16%)</title><rect x="88.9246%" y="533" width="0.1605%" height="15" fill="rgb(213,7,14)" fg:x="1108" fg:w="2"/><text x="89.1746%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="89.0048%" y="517" width="0.0803%" height="15" fill="rgb(225,84,14)" fg:x="1109" fg:w="1"/><text x="89.2548%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="89.0851%" y="517" width="0.0803%" height="15" fill="rgb(239,216,39)" fg:x="1110" fg:w="1"/><text x="89.3351%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="89.0851%" y="501" width="0.0803%" height="15" fill="rgb(253,29,23)" fg:x="1110" fg:w="1"/><text x="89.3351%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.0851%" y="485" width="0.0803%" height="15" fill="rgb(220,167,50)" fg:x="1110" fg:w="1"/><text x="89.3351%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="89.0851%" y="469" width="0.0803%" height="15" fill="rgb(232,141,1)" fg:x="1110" fg:w="1"/><text x="89.3351%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.0851%" y="453" width="0.0803%" height="15" fill="rgb(222,210,1)" fg:x="1110" fg:w="1"/><text x="89.3351%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.1653%" y="469" width="0.0803%" height="15" fill="rgb(219,84,10)" fg:x="1111" fg:w="1"/><text x="89.4153%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1653%" y="453" width="0.0803%" height="15" fill="rgb(245,188,6)" fg:x="1111" fg:w="1"/><text x="89.4153%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.2456%" y="437" width="0.0803%" height="15" fill="rgb(252,139,39)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.2456%" y="421" width="0.0803%" height="15" fill="rgb(218,42,26)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.2456%" y="405" width="0.0803%" height="15" fill="rgb(237,226,51)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.2456%" y="389" width="0.0803%" height="15" fill="rgb(246,15,17)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.2456%" y="373" width="0.0803%" height="15" fill="rgb(228,170,42)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.2456%" y="357" width="0.0803%" height="15" fill="rgb(248,118,53)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.2456%" y="341" width="0.0803%" height="15" fill="rgb(207,30,10)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.2456%" y="325" width="0.0803%" height="15" fill="rgb(217,104,38)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.2456%" y="309" width="0.0803%" height="15" fill="rgb(211,165,26)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.2456%" y="293" width="0.0803%" height="15" fill="rgb(247,38,9)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.2456%" y="277" width="0.0803%" height="15" fill="rgb(218,187,8)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.2456%" y="261" width="0.0803%" height="15" fill="rgb(247,94,28)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.2456%" y="245" width="0.0803%" height="15" fill="rgb(218,173,30)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.2456%" y="229" width="0.0803%" height="15" fill="rgb(245,45,36)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2456%" y="213" width="0.0803%" height="15" fill="rgb(221,172,44)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="223.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="89.1653%" y="517" width="0.2408%" height="15" fill="rgb(222,45,12)" fg:x="1111" fg:w="3"/><text x="89.4153%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="89.1653%" y="501" width="0.2408%" height="15" fill="rgb(250,10,22)" fg:x="1111" fg:w="3"/><text x="89.4153%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="89.1653%" y="485" width="0.2408%" height="15" fill="rgb(239,27,0)" fg:x="1111" fg:w="3"/><text x="89.4153%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="89.2456%" y="469" width="0.1605%" height="15" fill="rgb(223,118,22)" fg:x="1112" fg:w="2"/><text x="89.4956%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="89.2456%" y="453" width="0.1605%" height="15" fill="rgb(251,81,25)" fg:x="1112" fg:w="2"/><text x="89.4956%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.3258%" y="437" width="0.0803%" height="15" fill="rgb(237,225,53)" fg:x="1113" fg:w="1"/><text x="89.5758%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3258%" y="421" width="0.0803%" height="15" fill="rgb(237,186,51)" fg:x="1113" fg:w="1"/><text x="89.5758%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (89 samples, 7.14%)</title><rect x="82.3435%" y="549" width="7.1429%" height="15" fill="rgb(247,209,11)" fg:x="1026" fg:w="89"/><text x="82.5935%" y="559.50">plugins_co..</text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="89.0851%" y="533" width="0.4013%" height="15" fill="rgb(223,109,27)" fg:x="1110" fg:w="5"/><text x="89.3351%" y="543.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="89.4061%" y="517" width="0.0803%" height="15" fill="rgb(246,181,13)" fg:x="1114" fg:w="1"/><text x="89.6561%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="89.4061%" y="501" width="0.0803%" height="15" fill="rgb(234,57,44)" fg:x="1114" fg:w="1"/><text x="89.6561%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="89.4061%" y="485" width="0.0803%" height="15" fill="rgb(211,227,50)" fg:x="1114" fg:w="1"/><text x="89.6561%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4061%" y="469" width="0.0803%" height="15" fill="rgb(254,57,34)" fg:x="1114" fg:w="1"/><text x="89.6561%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="89.4061%" y="453" width="0.0803%" height="15" fill="rgb(227,212,26)" fg:x="1114" fg:w="1"/><text x="89.6561%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.4061%" y="437" width="0.0803%" height="15" fill="rgb(244,169,44)" fg:x="1114" fg:w="1"/><text x="89.6561%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="89.4061%" y="421" width="0.0803%" height="15" fill="rgb(236,135,50)" fg:x="1114" fg:w="1"/><text x="89.6561%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="89.4864%" y="501" width="0.0803%" height="15" fill="rgb(241,89,30)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="89.4864%" y="485" width="0.0803%" height="15" fill="rgb(206,113,34)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.4864%" y="469" width="0.0803%" height="15" fill="rgb(218,104,52)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.4864%" y="453" width="0.0803%" height="15" fill="rgb(223,82,32)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.4864%" y="437" width="0.0803%" height="15" fill="rgb(249,219,30)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.4864%" y="421" width="0.0803%" height="15" fill="rgb(233,141,21)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="89.4864%" y="405" width="0.0803%" height="15" fill="rgb(252,87,44)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="89.4864%" y="389" width="0.0803%" height="15" fill="rgb(229,48,33)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="89.4864%" y="373" width="0.0803%" height="15" fill="rgb(229,23,22)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="89.4864%" y="549" width="0.1605%" height="15" fill="rgb(244,116,16)" fg:x="1115" fg:w="2"/><text x="89.7364%" y="559.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="89.4864%" y="533" width="0.1605%" height="15" fill="rgb(247,45,10)" fg:x="1115" fg:w="2"/><text x="89.7364%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="89.4864%" y="517" width="0.1605%" height="15" fill="rgb(228,60,29)" fg:x="1115" fg:w="2"/><text x="89.7364%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="89.5666%" y="501" width="0.0803%" height="15" fill="rgb(205,129,15)" fg:x="1116" fg:w="1"/><text x="89.8166%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.5666%" y="485" width="0.0803%" height="15" fill="rgb(206,229,4)" fg:x="1116" fg:w="1"/><text x="89.8166%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.5666%" y="469" width="0.0803%" height="15" fill="rgb(249,191,30)" fg:x="1116" fg:w="1"/><text x="89.8166%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="89.5666%" y="453" width="0.0803%" height="15" fill="rgb(250,84,54)" fg:x="1116" fg:w="1"/><text x="89.8166%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.6469%" y="501" width="0.0803%" height="15" fill="rgb(207,25,53)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="89.6469%" y="485" width="0.0803%" height="15" fill="rgb(235,40,8)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.6469%" y="469" width="0.0803%" height="15" fill="rgb(226,169,33)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6469%" y="453" width="0.0803%" height="15" fill="rgb(238,110,8)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.6469%" y="437" width="0.0803%" height="15" fill="rgb(251,206,12)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6469%" y="421" width="0.0803%" height="15" fill="rgb(248,171,18)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.6469%" y="405" width="0.0803%" height="15" fill="rgb(213,65,46)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6469%" y="389" width="0.0803%" height="15" fill="rgb(211,154,15)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.6469%" y="373" width="0.0803%" height="15" fill="rgb(217,75,43)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="89.7271%" y="469" width="0.0803%" height="15" fill="rgb(230,32,33)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="89.7271%" y="453" width="0.0803%" height="15" fill="rgb(221,100,16)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="89.7271%" y="437" width="0.0803%" height="15" fill="rgb(212,129,47)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="89.6469%" y="549" width="0.2408%" height="15" fill="rgb(239,217,47)" fg:x="1117" fg:w="3"/><text x="89.8969%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="89.6469%" y="533" width="0.2408%" height="15" fill="rgb(230,84,24)" fg:x="1117" fg:w="3"/><text x="89.8969%" y="543.50"></text></g><g><title>plugins_core::build::Build::save (3 samples, 0.24%)</title><rect x="89.6469%" y="517" width="0.2408%" height="15" fill="rgb(214,153,51)" fg:x="1117" fg:w="3"/><text x="89.8969%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="89.7271%" y="501" width="0.1605%" height="15" fill="rgb(231,6,35)" fg:x="1118" fg:w="2"/><text x="89.9771%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="89.7271%" y="485" width="0.1605%" height="15" fill="rgb(229,122,30)" fg:x="1118" fg:w="2"/><text x="89.9771%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8074%" y="469" width="0.0803%" height="15" fill="rgb(234,71,10)" fg:x="1119" fg:w="1"/><text x="90.0574%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.8074%" y="453" width="0.0803%" height="15" fill="rgb(215,173,26)" fg:x="1119" fg:w="1"/><text x="90.0574%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="89.8074%" y="437" width="0.0803%" height="15" fill="rgb(248,118,52)" fg:x="1119" fg:w="1"/><text x="90.0574%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8074%" y="421" width="0.0803%" height="15" fill="rgb(237,55,46)" fg:x="1119" fg:w="1"/><text x="90.0574%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="89.8876%" y="517" width="0.1605%" height="15" fill="rgb(243,214,43)" fg:x="1120" fg:w="2"/><text x="90.1376%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.9679%" y="501" width="0.0803%" height="15" fill="rgb(252,123,30)" fg:x="1121" fg:w="1"/><text x="90.2179%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.9679%" y="485" width="0.0803%" height="15" fill="rgb(215,73,39)" fg:x="1121" fg:w="1"/><text x="90.2179%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.24%)</title><rect x="89.8876%" y="533" width="0.2408%" height="15" fill="rgb(251,194,29)" fg:x="1120" fg:w="3"/><text x="90.1376%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="90.0482%" y="517" width="0.0803%" height="15" fill="rgb(224,58,52)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0482%" y="501" width="0.0803%" height="15" fill="rgb(248,106,46)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.0482%" y="485" width="0.0803%" height="15" fill="rgb(223,80,29)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.1284%" y="533" width="0.0803%" height="15" fill="rgb(243,137,9)" fg:x="1123" fg:w="1"/><text x="90.3784%" y="543.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="90.2087%" y="533" width="0.0803%" height="15" fill="rgb(235,121,28)" fg:x="1124" fg:w="1"/><text x="90.4587%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="90.2087%" y="517" width="0.0803%" height="15" fill="rgb(219,121,41)" fg:x="1124" fg:w="1"/><text x="90.4587%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="90.2889%" y="501" width="0.0803%" height="15" fill="rgb(251,60,6)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.2889%" y="485" width="0.0803%" height="15" fill="rgb(208,12,30)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.2889%" y="469" width="0.0803%" height="15" fill="rgb(207,176,36)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.2889%" y="453" width="0.0803%" height="15" fill="rgb(211,188,29)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.2889%" y="437" width="0.0803%" height="15" fill="rgb(220,184,37)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.2889%" y="421" width="0.0803%" height="15" fill="rgb(239,87,37)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.2889%" y="405" width="0.0803%" height="15" fill="rgb(232,113,44)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="90.4494%" y="453" width="0.0803%" height="15" fill="rgb(246,25,39)" fg:x="1127" fg:w="1"/><text x="90.6994%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4494%" y="437" width="0.0803%" height="15" fill="rgb(247,30,13)" fg:x="1127" fg:w="1"/><text x="90.6994%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.4494%" y="421" width="0.0803%" height="15" fill="rgb(230,176,35)" fg:x="1127" fg:w="1"/><text x="90.6994%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5297%" y="421" width="0.0803%" height="15" fill="rgb(222,23,18)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5297%" y="405" width="0.0803%" height="15" fill="rgb(234,86,8)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="90.3692%" y="485" width="0.3210%" height="15" fill="rgb(206,218,47)" fg:x="1126" fg:w="4"/><text x="90.6192%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (4 samples, 0.32%)</title><rect x="90.3692%" y="469" width="0.3210%" height="15" fill="rgb(229,35,31)" fg:x="1126" fg:w="4"/><text x="90.6192%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="90.5297%" y="453" width="0.1605%" height="15" fill="rgb(242,81,7)" fg:x="1128" fg:w="2"/><text x="90.7797%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="90.5297%" y="437" width="0.1605%" height="15" fill="rgb(231,11,35)" fg:x="1128" fg:w="2"/><text x="90.7797%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="90.6100%" y="421" width="0.0803%" height="15" fill="rgb(219,218,17)" fg:x="1129" fg:w="1"/><text x="90.8600%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.6100%" y="405" width="0.0803%" height="15" fill="rgb(221,83,32)" fg:x="1129" fg:w="1"/><text x="90.8600%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.6100%" y="389" width="0.0803%" height="15" fill="rgb(233,49,54)" fg:x="1129" fg:w="1"/><text x="90.8600%" y="399.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (132 samples, 10.59%)</title><rect x="80.3371%" y="565" width="10.5939%" height="15" fill="rgb(206,18,51)" fg:x="1001" fg:w="132"/><text x="80.5871%" y="575.50">&lt;tests::Holding..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (13 samples, 1.04%)</title><rect x="89.8876%" y="549" width="1.0433%" height="15" fill="rgb(249,193,15)" fg:x="1120" fg:w="13"/><text x="90.1376%" y="559.50"></text></g><g><title>plugins_core::build::Build::save (8 samples, 0.64%)</title><rect x="90.2889%" y="533" width="0.6421%" height="15" fill="rgb(245,186,19)" fg:x="1125" fg:w="8"/><text x="90.5389%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="90.2889%" y="517" width="0.6421%" height="15" fill="rgb(230,4,24)" fg:x="1125" fg:w="8"/><text x="90.5389%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="90.3692%" y="501" width="0.5618%" height="15" fill="rgb(234,75,27)" fg:x="1126" fg:w="7"/><text x="90.6192%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="90.6902%" y="485" width="0.2408%" height="15" fill="rgb(244,187,35)" fg:x="1130" fg:w="3"/><text x="90.9402%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="90.6902%" y="469" width="0.2408%" height="15" fill="rgb(241,97,43)" fg:x="1130" fg:w="3"/><text x="90.9402%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="90.7705%" y="453" width="0.1605%" height="15" fill="rgb(236,94,2)" fg:x="1131" fg:w="2"/><text x="91.0205%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="90.7705%" y="437" width="0.1605%" height="15" fill="rgb(231,175,7)" fg:x="1131" fg:w="2"/><text x="91.0205%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.7705%" y="421" width="0.1605%" height="15" fill="rgb(236,89,47)" fg:x="1131" fg:w="2"/><text x="91.0205%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.7705%" y="405" width="0.1605%" height="15" fill="rgb(213,191,37)" fg:x="1131" fg:w="2"/><text x="91.0205%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.7705%" y="389" width="0.1605%" height="15" fill="rgb(252,0,34)" fg:x="1131" fg:w="2"/><text x="91.0205%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.7705%" y="373" width="0.1605%" height="15" fill="rgb(208,145,44)" fg:x="1131" fg:w="2"/><text x="91.0205%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="91.0112%" y="437" width="0.2408%" height="15" fill="rgb(227,95,50)" fg:x="1134" fg:w="3"/><text x="91.2612%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="91.0112%" y="421" width="0.2408%" height="15" fill="rgb(222,136,24)" fg:x="1134" fg:w="3"/><text x="91.2612%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.0915%" y="405" width="0.1605%" height="15" fill="rgb(218,105,10)" fg:x="1135" fg:w="2"/><text x="91.3415%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="91.0915%" y="389" width="0.1605%" height="15" fill="rgb(216,65,28)" fg:x="1135" fg:w="2"/><text x="91.3415%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="91.1717%" y="373" width="0.0803%" height="15" fill="rgb(229,6,28)" fg:x="1136" fg:w="1"/><text x="91.4217%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.1717%" y="357" width="0.0803%" height="15" fill="rgb(222,160,42)" fg:x="1136" fg:w="1"/><text x="91.4217%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="91.1717%" y="341" width="0.0803%" height="15" fill="rgb(235,83,49)" fg:x="1136" fg:w="1"/><text x="91.4217%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="91.0112%" y="453" width="0.3210%" height="15" fill="rgb(236,86,36)" fg:x="1134" fg:w="4"/><text x="91.2612%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.2520%" y="437" width="0.0803%" height="15" fill="rgb(236,19,41)" fg:x="1137" fg:w="1"/><text x="91.5020%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.3323%" y="405" width="0.0803%" height="15" fill="rgb(217,71,31)" fg:x="1138" fg:w="1"/><text x="91.5823%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.3323%" y="389" width="0.0803%" height="15" fill="rgb(236,209,25)" fg:x="1138" fg:w="1"/><text x="91.5823%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.48%)</title><rect x="91.0112%" y="469" width="0.4815%" height="15" fill="rgb(247,104,21)" fg:x="1134" fg:w="6"/><text x="91.2612%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="91.3323%" y="453" width="0.1605%" height="15" fill="rgb(243,80,38)" fg:x="1138" fg:w="2"/><text x="91.5823%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="91.3323%" y="437" width="0.1605%" height="15" fill="rgb(232,109,38)" fg:x="1138" fg:w="2"/><text x="91.5823%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="91.3323%" y="421" width="0.1605%" height="15" fill="rgb(212,177,53)" fg:x="1138" fg:w="2"/><text x="91.5823%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="91.4125%" y="405" width="0.0803%" height="15" fill="rgb(227,30,34)" fg:x="1139" fg:w="1"/><text x="91.6625%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.4125%" y="389" width="0.0803%" height="15" fill="rgb(205,175,25)" fg:x="1139" fg:w="1"/><text x="91.6625%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.4125%" y="373" width="0.0803%" height="15" fill="rgb(249,39,54)" fg:x="1139" fg:w="1"/><text x="91.6625%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.4928%" y="437" width="0.0803%" height="15" fill="rgb(215,54,37)" fg:x="1140" fg:w="1"/><text x="91.7428%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5730%" y="421" width="0.0803%" height="15" fill="rgb(205,60,46)" fg:x="1141" fg:w="1"/><text x="91.8230%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="91.4928%" y="469" width="0.2408%" height="15" fill="rgb(238,89,29)" fg:x="1140" fg:w="3"/><text x="91.7428%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="91.4928%" y="453" width="0.2408%" height="15" fill="rgb(212,48,10)" fg:x="1140" fg:w="3"/><text x="91.7428%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="91.5730%" y="437" width="0.1605%" height="15" fill="rgb(237,186,28)" fg:x="1141" fg:w="2"/><text x="91.8230%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.6533%" y="421" width="0.0803%" height="15" fill="rgb(237,204,4)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.6533%" y="405" width="0.0803%" height="15" fill="rgb(237,15,47)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.7335%" y="437" width="0.0803%" height="15" fill="rgb(244,110,25)" fg:x="1143" fg:w="1"/><text x="91.9835%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.7335%" y="421" width="0.0803%" height="15" fill="rgb(241,12,16)" fg:x="1143" fg:w="1"/><text x="91.9835%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.7335%" y="405" width="0.0803%" height="15" fill="rgb(235,25,9)" fg:x="1143" fg:w="1"/><text x="91.9835%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.7335%" y="389" width="0.0803%" height="15" fill="rgb(245,159,19)" fg:x="1143" fg:w="1"/><text x="91.9835%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="91.7335%" y="373" width="0.0803%" height="15" fill="rgb(236,63,32)" fg:x="1143" fg:w="1"/><text x="91.9835%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.7335%" y="357" width="0.0803%" height="15" fill="rgb(235,32,52)" fg:x="1143" fg:w="1"/><text x="91.9835%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.7335%" y="341" width="0.0803%" height="15" fill="rgb(209,176,21)" fg:x="1143" fg:w="1"/><text x="91.9835%" y="351.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="91.8138%" y="437" width="0.0803%" height="15" fill="rgb(205,90,42)" fg:x="1144" fg:w="1"/><text x="92.0638%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.8138%" y="421" width="0.0803%" height="15" fill="rgb(213,132,16)" fg:x="1144" fg:w="1"/><text x="92.0638%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="91.8138%" y="405" width="0.0803%" height="15" fill="rgb(232,11,22)" fg:x="1144" fg:w="1"/><text x="92.0638%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.8941%" y="437" width="0.0803%" height="15" fill="rgb(248,167,41)" fg:x="1145" fg:w="1"/><text x="92.1441%" y="447.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="91.9743%" y="437" width="0.0803%" height="15" fill="rgb(209,127,6)" fg:x="1146" fg:w="1"/><text x="92.2243%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.9743%" y="421" width="0.0803%" height="15" fill="rgb(246,210,34)" fg:x="1146" fg:w="1"/><text x="92.2243%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.9743%" y="405" width="0.0803%" height="15" fill="rgb(238,165,13)" fg:x="1146" fg:w="1"/><text x="92.2243%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="91.9743%" y="389" width="0.0803%" height="15" fill="rgb(233,98,15)" fg:x="1146" fg:w="1"/><text x="92.2243%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.9743%" y="373" width="0.0803%" height="15" fill="rgb(215,215,51)" fg:x="1146" fg:w="1"/><text x="92.2243%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (6 samples, 0.48%)</title><rect x="91.7335%" y="453" width="0.4815%" height="15" fill="rgb(217,161,25)" fg:x="1143" fg:w="6"/><text x="91.9835%" y="463.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="92.0546%" y="437" width="0.1605%" height="15" fill="rgb(217,167,48)" fg:x="1147" fg:w="2"/><text x="92.3046%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="92.0546%" y="421" width="0.1605%" height="15" fill="rgb(205,163,34)" fg:x="1147" fg:w="2"/><text x="92.3046%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="92.0546%" y="405" width="0.1605%" height="15" fill="rgb(241,197,31)" fg:x="1147" fg:w="2"/><text x="92.3046%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="92.1348%" y="389" width="0.0803%" height="15" fill="rgb(225,123,11)" fg:x="1148" fg:w="1"/><text x="92.3848%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="92.1348%" y="373" width="0.0803%" height="15" fill="rgb(217,4,20)" fg:x="1148" fg:w="1"/><text x="92.3848%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="92.1348%" y="357" width="0.0803%" height="15" fill="rgb(215,55,9)" fg:x="1148" fg:w="1"/><text x="92.3848%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2953%" y="421" width="0.0803%" height="15" fill="rgb(218,165,5)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="92.3756%" y="421" width="0.0803%" height="15" fill="rgb(222,175,15)" fg:x="1151" fg:w="1"/><text x="92.6256%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="92.3756%" y="405" width="0.0803%" height="15" fill="rgb(223,85,34)" fg:x="1151" fg:w="1"/><text x="92.6256%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3756%" y="389" width="0.0803%" height="15" fill="rgb(234,228,29)" fg:x="1151" fg:w="1"/><text x="92.6256%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="92.4559%" y="405" width="0.0803%" height="15" fill="rgb(239,7,28)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="92.4559%" y="421" width="0.1605%" height="15" fill="rgb(252,222,53)" fg:x="1152" fg:w="2"/><text x="92.7059%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="92.5361%" y="405" width="0.0803%" height="15" fill="rgb(232,146,44)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5361%" y="389" width="0.0803%" height="15" fill="rgb(243,223,53)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="92.5361%" y="373" width="0.0803%" height="15" fill="rgb(219,128,25)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.6966%" y="373" width="0.0803%" height="15" fill="rgb(223,56,32)" fg:x="1155" fg:w="1"/><text x="92.9466%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6966%" y="357" width="0.0803%" height="15" fill="rgb(237,41,3)" fg:x="1155" fg:w="1"/><text x="92.9466%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="92.7769%" y="373" width="0.0803%" height="15" fill="rgb(235,138,9)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="92.7769%" y="357" width="0.0803%" height="15" fill="rgb(214,131,10)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="92.7769%" y="341" width="0.0803%" height="15" fill="rgb(229,89,7)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="92.7769%" y="325" width="0.0803%" height="15" fill="rgb(240,24,42)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.7769%" y="309" width="0.0803%" height="15" fill="rgb(243,188,54)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="92.6164%" y="389" width="0.4013%" height="15" fill="rgb(246,92,22)" fg:x="1154" fg:w="5"/><text x="92.8664%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="92.8571%" y="373" width="0.1605%" height="15" fill="rgb(211,176,51)" fg:x="1157" fg:w="2"/><text x="93.1071%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="92.9374%" y="357" width="0.0803%" height="15" fill="rgb(246,207,34)" fg:x="1158" fg:w="1"/><text x="93.1874%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9374%" y="341" width="0.0803%" height="15" fill="rgb(239,95,2)" fg:x="1158" fg:w="1"/><text x="93.1874%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9374%" y="325" width="0.0803%" height="15" fill="rgb(211,124,25)" fg:x="1158" fg:w="1"/><text x="93.1874%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="92.6164%" y="405" width="0.4815%" height="15" fill="rgb(231,221,19)" fg:x="1154" fg:w="6"/><text x="92.8664%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="93.0177%" y="389" width="0.0803%" height="15" fill="rgb(239,183,19)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0177%" y="373" width="0.0803%" height="15" fill="rgb(221,130,29)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="92.2151%" y="453" width="0.9631%" height="15" fill="rgb(206,130,36)" fg:x="1149" fg:w="12"/><text x="92.4651%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="92.2953%" y="437" width="0.8828%" height="15" fill="rgb(215,70,19)" fg:x="1150" fg:w="11"/><text x="92.5453%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="92.6164%" y="421" width="0.5618%" height="15" fill="rgb(244,16,43)" fg:x="1154" fg:w="7"/><text x="92.8664%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0979%" y="405" width="0.0803%" height="15" fill="rgb(222,115,32)" fg:x="1160" fg:w="1"/><text x="93.3479%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.3387%" y="309" width="0.1605%" height="15" fill="rgb(247,48,25)" fg:x="1163" fg:w="2"/><text x="93.5887%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.3387%" y="293" width="0.1605%" height="15" fill="rgb(226,180,51)" fg:x="1163" fg:w="2"/><text x="93.5887%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.4189%" y="277" width="0.0803%" height="15" fill="rgb(217,142,42)" fg:x="1164" fg:w="1"/><text x="93.6689%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="93.1782%" y="389" width="0.4013%" height="15" fill="rgb(220,178,3)" fg:x="1161" fg:w="5"/><text x="93.4282%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="93.1782%" y="373" width="0.4013%" height="15" fill="rgb(217,221,4)" fg:x="1161" fg:w="5"/><text x="93.4282%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="93.1782%" y="357" width="0.4013%" height="15" fill="rgb(237,63,43)" fg:x="1161" fg:w="5"/><text x="93.4282%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="93.1782%" y="341" width="0.4013%" height="15" fill="rgb(220,57,8)" fg:x="1161" fg:w="5"/><text x="93.4282%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="93.1782%" y="325" width="0.4013%" height="15" fill="rgb(254,186,27)" fg:x="1161" fg:w="5"/><text x="93.4282%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4992%" y="309" width="0.0803%" height="15" fill="rgb(251,57,28)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.4992%" y="293" width="0.0803%" height="15" fill="rgb(215,228,0)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="303.50"></text></g><g><title>engine::session::Session::close (34 samples, 2.73%)</title><rect x="90.9310%" y="565" width="2.7287%" height="15" fill="rgb(237,218,39)" fg:x="1133" fg:w="34"/><text x="91.1810%" y="575.50">en..</text></g><g><title>engine::session::state::State::close (34 samples, 2.73%)</title><rect x="90.9310%" y="549" width="2.7287%" height="15" fill="rgb(207,2,54)" fg:x="1133" fg:w="34"/><text x="91.1810%" y="559.50">en..</text></g><g><title>engine::session::state::State::flush_entities (34 samples, 2.73%)</title><rect x="90.9310%" y="533" width="2.7287%" height="15" fill="rgb(232,76,50)" fg:x="1133" fg:w="34"/><text x="91.1810%" y="543.50">en..</text></g><g><title>core::iter::adapters::try_process (33 samples, 2.65%)</title><rect x="91.0112%" y="517" width="2.6485%" height="15" fill="rgb(211,85,31)" fg:x="1134" fg:w="33"/><text x="91.2612%" y="527.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 2.65%)</title><rect x="91.0112%" y="501" width="2.6485%" height="15" fill="rgb(223,210,27)" fg:x="1134" fg:w="33"/><text x="91.2612%" y="511.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (33 samples, 2.65%)</title><rect x="91.0112%" y="485" width="2.6485%" height="15" fill="rgb(254,36,8)" fg:x="1134" fg:w="33"/><text x="91.2612%" y="495.50">en..</text></g><g><title>kernel::model::any_entity_changes (24 samples, 1.93%)</title><rect x="91.7335%" y="469" width="1.9262%" height="15" fill="rgb(213,4,25)" fg:x="1143" fg:w="24"/><text x="91.9835%" y="479.50">k..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="93.1782%" y="453" width="0.4815%" height="15" fill="rgb(224,2,39)" fg:x="1161" fg:w="6"/><text x="93.4282%" y="463.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="93.1782%" y="437" width="0.4815%" height="15" fill="rgb(208,8,39)" fg:x="1161" fg:w="6"/><text x="93.4282%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="93.1782%" y="421" width="0.4815%" height="15" fill="rgb(216,226,3)" fg:x="1161" fg:w="6"/><text x="93.4282%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="93.1782%" y="405" width="0.4815%" height="15" fill="rgb(249,139,31)" fg:x="1161" fg:w="6"/><text x="93.4282%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5795%" y="389" width="0.0803%" height="15" fill="rgb(242,170,35)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5795%" y="373" width="0.0803%" height="15" fill="rgb(238,14,9)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="383.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="93.6597%" y="533" width="0.0803%" height="15" fill="rgb(251,81,46)" fg:x="1167" fg:w="1"/><text x="93.9097%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="93.6597%" y="517" width="0.0803%" height="15" fill="rgb(230,23,4)" fg:x="1167" fg:w="1"/><text x="93.9097%" y="527.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="93.6597%" y="501" width="0.0803%" height="15" fill="rgb(211,85,25)" fg:x="1167" fg:w="1"/><text x="93.9097%" y="511.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="93.6597%" y="485" width="0.0803%" height="15" fill="rgb(252,23,31)" fg:x="1167" fg:w="1"/><text x="93.9097%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="93.6597%" y="469" width="0.0803%" height="15" fill="rgb(234,163,38)" fg:x="1167" fg:w="1"/><text x="93.9097%" y="479.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (1 samples, 0.08%)</title><rect x="93.7400%" y="501" width="0.0803%" height="15" fill="rgb(210,190,50)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8202%" y="453" width="0.0803%" height="15" fill="rgb(228,158,3)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="93.9005%" y="389" width="0.0803%" height="15" fill="rgb(216,130,0)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9005%" y="373" width="0.0803%" height="15" fill="rgb(224,184,10)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9005%" y="357" width="0.0803%" height="15" fill="rgb(214,202,18)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9005%" y="341" width="0.0803%" height="15" fill="rgb(213,229,54)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9005%" y="325" width="0.0803%" height="15" fill="rgb(246,120,0)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="335.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="93.9807%" y="341" width="0.0803%" height="15" fill="rgb(237,6,15)" fg:x="1171" fg:w="1"/><text x="94.2307%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.0610%" y="325" width="0.0803%" height="15" fill="rgb(252,156,15)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.0610%" y="309" width="0.0803%" height="15" fill="rgb(249,78,18)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.0610%" y="293" width="0.0803%" height="15" fill="rgb(230,223,44)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0610%" y="277" width="0.0803%" height="15" fill="rgb(230,222,32)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.1413%" y="309" width="0.0803%" height="15" fill="rgb(247,54,6)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.1413%" y="293" width="0.0803%" height="15" fill="rgb(247,115,45)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="94.1413%" y="325" width="0.1605%" height="15" fill="rgb(213,203,37)" fg:x="1173" fg:w="2"/><text x="94.3913%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.2215%" y="309" width="0.0803%" height="15" fill="rgb(248,188,18)" fg:x="1174" fg:w="1"/><text x="94.4715%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2215%" y="293" width="0.0803%" height="15" fill="rgb(206,80,8)" fg:x="1174" fg:w="1"/><text x="94.4715%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.2215%" y="277" width="0.0803%" height="15" fill="rgb(245,217,31)" fg:x="1174" fg:w="1"/><text x="94.4715%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2215%" y="261" width="0.0803%" height="15" fill="rgb(220,193,15)" fg:x="1174" fg:w="1"/><text x="94.4715%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.2215%" y="245" width="0.0803%" height="15" fill="rgb(226,7,19)" fg:x="1174" fg:w="1"/><text x="94.4715%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2215%" y="229" width="0.0803%" height="15" fill="rgb(222,145,31)" fg:x="1174" fg:w="1"/><text x="94.4715%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.2215%" y="213" width="0.0803%" height="15" fill="rgb(241,193,36)" fg:x="1174" fg:w="1"/><text x="94.4715%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3018%" y="277" width="0.0803%" height="15" fill="rgb(225,123,33)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="287.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.3820%" y="277" width="0.0803%" height="15" fill="rgb(246,136,38)" fg:x="1176" fg:w="1"/><text x="94.6320%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3820%" y="261" width="0.0803%" height="15" fill="rgb(243,56,24)" fg:x="1176" fg:w="1"/><text x="94.6320%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.3820%" y="245" width="0.0803%" height="15" fill="rgb(215,147,2)" fg:x="1176" fg:w="1"/><text x="94.6320%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.3820%" y="229" width="0.0803%" height="15" fill="rgb(209,155,27)" fg:x="1176" fg:w="1"/><text x="94.6320%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.3820%" y="213" width="0.0803%" height="15" fill="rgb(222,177,11)" fg:x="1176" fg:w="1"/><text x="94.6320%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.4623%" y="197" width="0.0803%" height="15" fill="rgb(212,227,15)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="94.6228%" y="53" width="0.1605%" height="15" fill="rgb(214,138,20)" fg:x="1179" fg:w="2"/><text x="94.8728%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="94.7030%" y="37" width="0.0803%" height="15" fill="rgb(221,170,31)" fg:x="1180" fg:w="1"/><text x="94.9530%" y="47.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="94.4623%" y="229" width="0.4013%" height="15" fill="rgb(253,207,5)" fg:x="1177" fg:w="5"/><text x="94.7123%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="94.4623%" y="213" width="0.4013%" height="15" fill="rgb(212,64,37)" fg:x="1177" fg:w="5"/><text x="94.7123%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="94.5425%" y="197" width="0.3210%" height="15" fill="rgb(208,113,51)" fg:x="1178" fg:w="4"/><text x="94.7925%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="94.5425%" y="181" width="0.3210%" height="15" fill="rgb(237,15,5)" fg:x="1178" fg:w="4"/><text x="94.7925%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="94.5425%" y="165" width="0.3210%" height="15" fill="rgb(238,33,18)" fg:x="1178" fg:w="4"/><text x="94.7925%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="94.5425%" y="149" width="0.3210%" height="15" fill="rgb(253,206,50)" fg:x="1178" fg:w="4"/><text x="94.7925%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="94.5425%" y="133" width="0.3210%" height="15" fill="rgb(242,158,43)" fg:x="1178" fg:w="4"/><text x="94.7925%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="94.5425%" y="117" width="0.3210%" height="15" fill="rgb(213,125,27)" fg:x="1178" fg:w="4"/><text x="94.7925%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="94.5425%" y="101" width="0.3210%" height="15" fill="rgb(233,161,31)" fg:x="1178" fg:w="4"/><text x="94.7925%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="94.5425%" y="85" width="0.3210%" height="15" fill="rgb(218,135,6)" fg:x="1178" fg:w="4"/><text x="94.7925%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="94.5425%" y="69" width="0.3210%" height="15" fill="rgb(222,73,53)" fg:x="1178" fg:w="4"/><text x="94.7925%" y="79.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7833%" y="53" width="0.0803%" height="15" fill="rgb(229,66,53)" fg:x="1181" fg:w="1"/><text x="95.0333%" y="63.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.72%)</title><rect x="94.3018%" y="325" width="0.7223%" height="15" fill="rgb(208,128,19)" fg:x="1175" fg:w="9"/><text x="94.5518%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="94.3018%" y="309" width="0.7223%" height="15" fill="rgb(235,70,27)" fg:x="1175" fg:w="9"/><text x="94.5518%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="94.3018%" y="293" width="0.7223%" height="15" fill="rgb(241,130,30)" fg:x="1175" fg:w="9"/><text x="94.5518%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="94.4623%" y="277" width="0.5618%" height="15" fill="rgb(222,57,48)" fg:x="1177" fg:w="7"/><text x="94.7123%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="94.4623%" y="261" width="0.5618%" height="15" fill="rgb(225,204,29)" fg:x="1177" fg:w="7"/><text x="94.7123%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="94.4623%" y="245" width="0.5618%" height="15" fill="rgb(240,196,35)" fg:x="1177" fg:w="7"/><text x="94.7123%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.8636%" y="229" width="0.1605%" height="15" fill="rgb(215,150,16)" fg:x="1182" fg:w="2"/><text x="95.1136%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.8636%" y="213" width="0.1605%" height="15" fill="rgb(209,170,13)" fg:x="1182" fg:w="2"/><text x="95.1136%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.9438%" y="197" width="0.0803%" height="15" fill="rgb(235,75,31)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.9438%" y="181" width="0.0803%" height="15" fill="rgb(252,1,47)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9438%" y="165" width="0.0803%" height="15" fill="rgb(241,2,36)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.0241%" y="181" width="0.0803%" height="15" fill="rgb(236,191,4)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.0241%" y="165" width="0.0803%" height="15" fill="rgb(212,65,35)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.0241%" y="149" width="0.0803%" height="15" fill="rgb(209,49,33)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.0241%" y="133" width="0.0803%" height="15" fill="rgb(208,36,46)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.0241%" y="117" width="0.0803%" height="15" fill="rgb(210,125,2)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.0241%" y="101" width="0.0803%" height="15" fill="rgb(225,62,6)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0241%" y="85" width="0.0803%" height="15" fill="rgb(210,54,27)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="95.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0241%" y="69" width="0.0803%" height="15" fill="rgb(249,189,52)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0241%" y="53" width="0.0803%" height="15" fill="rgb(225,134,40)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="63.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.1043%" y="165" width="0.0803%" height="15" fill="rgb(206,13,37)" fg:x="1185" fg:w="1"/><text x="95.3543%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.0241%" y="197" width="0.2408%" height="15" fill="rgb(232,114,28)" fg:x="1184" fg:w="3"/><text x="95.2741%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.1043%" y="181" width="0.1605%" height="15" fill="rgb(253,215,8)" fg:x="1185" fg:w="2"/><text x="95.3543%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1846%" y="165" width="0.0803%" height="15" fill="rgb(254,64,19)" fg:x="1186" fg:w="1"/><text x="95.4346%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1846%" y="149" width="0.0803%" height="15" fill="rgb(242,18,46)" fg:x="1186" fg:w="1"/><text x="95.4346%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.2648%" y="197" width="0.0803%" height="15" fill="rgb(239,192,30)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2648%" y="181" width="0.0803%" height="15" fill="rgb(232,73,14)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="191.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (19 samples, 1.52%)</title><rect x="93.9005%" y="421" width="1.5249%" height="15" fill="rgb(225,51,9)" fg:x="1170" fg:w="19"/><text x="94.1505%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (19 samples, 1.52%)</title><rect x="93.9005%" y="405" width="1.5249%" height="15" fill="rgb(242,217,54)" fg:x="1170" fg:w="19"/><text x="94.1505%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (18 samples, 1.44%)</title><rect x="93.9807%" y="389" width="1.4446%" height="15" fill="rgb(216,93,3)" fg:x="1171" fg:w="18"/><text x="94.2307%" y="399.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (18 samples, 1.44%)</title><rect x="93.9807%" y="373" width="1.4446%" height="15" fill="rgb(230,119,33)" fg:x="1171" fg:w="18"/><text x="94.2307%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (18 samples, 1.44%)</title><rect x="93.9807%" y="357" width="1.4446%" height="15" fill="rgb(238,170,27)" fg:x="1171" fg:w="18"/><text x="94.2307%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.36%)</title><rect x="94.0610%" y="341" width="1.3644%" height="15" fill="rgb(229,8,2)" fg:x="1172" fg:w="17"/><text x="94.3110%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="95.0241%" y="325" width="0.4013%" height="15" fill="rgb(205,214,42)" fg:x="1184" fg:w="5"/><text x="95.2741%" y="335.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="95.0241%" y="309" width="0.4013%" height="15" fill="rgb(245,113,1)" fg:x="1184" fg:w="5"/><text x="95.2741%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="95.0241%" y="293" width="0.4013%" height="15" fill="rgb(252,50,2)" fg:x="1184" fg:w="5"/><text x="95.2741%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.0241%" y="277" width="0.4013%" height="15" fill="rgb(225,122,24)" fg:x="1184" fg:w="5"/><text x="95.2741%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="95.0241%" y="261" width="0.4013%" height="15" fill="rgb(234,129,31)" fg:x="1184" fg:w="5"/><text x="95.2741%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.0241%" y="245" width="0.4013%" height="15" fill="rgb(219,177,4)" fg:x="1184" fg:w="5"/><text x="95.2741%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="95.0241%" y="229" width="0.4013%" height="15" fill="rgb(225,142,27)" fg:x="1184" fg:w="5"/><text x="95.2741%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.0241%" y="213" width="0.4013%" height="15" fill="rgb(205,107,51)" fg:x="1184" fg:w="5"/><text x="95.2741%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3451%" y="197" width="0.0803%" height="15" fill="rgb(236,223,15)" fg:x="1188" fg:w="1"/><text x="95.5951%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3451%" y="181" width="0.0803%" height="15" fill="rgb(235,133,11)" fg:x="1188" fg:w="1"/><text x="95.5951%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3451%" y="165" width="0.0803%" height="15" fill="rgb(247,172,13)" fg:x="1188" fg:w="1"/><text x="95.5951%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4254%" y="325" width="0.0803%" height="15" fill="rgb(233,191,41)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (2 samples, 0.16%)</title><rect x="95.5056%" y="325" width="0.1605%" height="15" fill="rgb(250,65,16)" fg:x="1190" fg:w="2"/><text x="95.7556%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.5859%" y="309" width="0.0803%" height="15" fill="rgb(206,10,27)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="319.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="95.4254%" y="341" width="0.4013%" height="15" fill="rgb(212,96,22)" fg:x="1189" fg:w="5"/><text x="95.6754%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.6661%" y="325" width="0.1605%" height="15" fill="rgb(206,50,0)" fg:x="1192" fg:w="2"/><text x="95.9161%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.6661%" y="309" width="0.1605%" height="15" fill="rgb(249,105,52)" fg:x="1192" fg:w="2"/><text x="95.9161%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.9872%" y="181" width="0.0803%" height="15" fill="rgb(216,93,51)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9872%" y="165" width="0.0803%" height="15" fill="rgb(217,172,13)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.9872%" y="149" width="0.0803%" height="15" fill="rgb(235,199,38)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9872%" y="133" width="0.0803%" height="15" fill="rgb(221,97,33)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.9872%" y="117" width="0.0803%" height="15" fill="rgb(205,156,50)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="127.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.0674%" y="117" width="0.0803%" height="15" fill="rgb(215,142,19)" fg:x="1197" fg:w="1"/><text x="96.3174%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="96.0674%" y="181" width="0.1605%" height="15" fill="rgb(232,170,7)" fg:x="1197" fg:w="2"/><text x="96.3174%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="96.0674%" y="165" width="0.1605%" height="15" fill="rgb(223,50,17)" fg:x="1197" fg:w="2"/><text x="96.3174%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="96.0674%" y="149" width="0.1605%" height="15" fill="rgb(230,103,46)" fg:x="1197" fg:w="2"/><text x="96.3174%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="96.0674%" y="133" width="0.1605%" height="15" fill="rgb(254,30,34)" fg:x="1197" fg:w="2"/><text x="96.3174%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.1477%" y="117" width="0.0803%" height="15" fill="rgb(235,198,1)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="127.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="95.9069%" y="277" width="0.4013%" height="15" fill="rgb(217,105,47)" fg:x="1195" fg:w="5"/><text x="96.1569%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="95.9069%" y="261" width="0.4013%" height="15" fill="rgb(231,18,12)" fg:x="1195" fg:w="5"/><text x="96.1569%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="95.9069%" y="245" width="0.4013%" height="15" fill="rgb(218,196,1)" fg:x="1195" fg:w="5"/><text x="96.1569%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="95.9872%" y="229" width="0.3210%" height="15" fill="rgb(210,32,3)" fg:x="1196" fg:w="4"/><text x="96.2372%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="95.9872%" y="213" width="0.3210%" height="15" fill="rgb(227,178,30)" fg:x="1196" fg:w="4"/><text x="96.2372%" y="223.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.9872%" y="197" width="0.3210%" height="15" fill="rgb(231,140,27)" fg:x="1196" fg:w="4"/><text x="96.2372%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2279%" y="181" width="0.0803%" height="15" fill="rgb(206,66,35)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.2279%" y="165" width="0.0803%" height="15" fill="rgb(212,34,2)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.2279%" y="149" width="0.0803%" height="15" fill="rgb(207,201,33)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2279%" y="133" width="0.0803%" height="15" fill="rgb(221,135,32)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.2279%" y="117" width="0.0803%" height="15" fill="rgb(206,77,31)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.2279%" y="101" width="0.0803%" height="15" fill="rgb(252,198,50)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2279%" y="85" width="0.0803%" height="15" fill="rgb(206,79,27)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.2279%" y="69" width="0.0803%" height="15" fill="rgb(228,108,9)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="79.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.3082%" y="133" width="0.1605%" height="15" fill="rgb(213,9,39)" fg:x="1200" fg:w="2"/><text x="96.5582%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.3082%" y="117" width="0.1605%" height="15" fill="rgb(252,51,13)" fg:x="1200" fg:w="2"/><text x="96.5582%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.3884%" y="101" width="0.0803%" height="15" fill="rgb(218,202,39)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.3082%" y="181" width="0.2408%" height="15" fill="rgb(214,122,21)" fg:x="1200" fg:w="3"/><text x="96.5582%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.3082%" y="165" width="0.2408%" height="15" fill="rgb(217,205,48)" fg:x="1200" fg:w="3"/><text x="96.5582%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.3082%" y="149" width="0.2408%" height="15" fill="rgb(230,216,13)" fg:x="1200" fg:w="3"/><text x="96.5582%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4687%" y="133" width="0.0803%" height="15" fill="rgb(249,118,4)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="143.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (10 samples, 0.80%)</title><rect x="95.8266%" y="341" width="0.8026%" height="15" fill="rgb(212,207,40)" fg:x="1194" fg:w="10"/><text x="96.0766%" y="351.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (10 samples, 0.80%)</title><rect x="95.8266%" y="325" width="0.8026%" height="15" fill="rgb(217,156,26)" fg:x="1194" fg:w="10"/><text x="96.0766%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (10 samples, 0.80%)</title><rect x="95.8266%" y="309" width="0.8026%" height="15" fill="rgb(226,86,34)" fg:x="1194" fg:w="10"/><text x="96.0766%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.80%)</title><rect x="95.8266%" y="293" width="0.8026%" height="15" fill="rgb(217,111,30)" fg:x="1194" fg:w="10"/><text x="96.0766%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="96.3082%" y="277" width="0.3210%" height="15" fill="rgb(228,64,18)" fg:x="1200" fg:w="4"/><text x="96.5582%" y="287.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="96.3082%" y="261" width="0.3210%" height="15" fill="rgb(254,217,48)" fg:x="1200" fg:w="4"/><text x="96.5582%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.3082%" y="245" width="0.3210%" height="15" fill="rgb(226,156,48)" fg:x="1200" fg:w="4"/><text x="96.5582%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.3082%" y="229" width="0.3210%" height="15" fill="rgb(236,168,20)" fg:x="1200" fg:w="4"/><text x="96.5582%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.3082%" y="213" width="0.3210%" height="15" fill="rgb(239,210,33)" fg:x="1200" fg:w="4"/><text x="96.5582%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.3082%" y="197" width="0.3210%" height="15" fill="rgb(242,85,17)" fg:x="1200" fg:w="4"/><text x="96.5582%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5490%" y="181" width="0.0803%" height="15" fill="rgb(221,196,15)" fg:x="1203" fg:w="1"/><text x="96.7990%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5490%" y="165" width="0.0803%" height="15" fill="rgb(249,76,21)" fg:x="1203" fg:w="1"/><text x="96.7990%" y="175.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="96.5490%" y="149" width="0.0803%" height="15" fill="rgb(243,67,29)" fg:x="1203" fg:w="1"/><text x="96.7990%" y="159.50"></text></g><g><title>plugins_core::tools::contained_by (16 samples, 1.28%)</title><rect x="95.4254%" y="357" width="1.2841%" height="15" fill="rgb(240,159,2)" fg:x="1189" fg:w="16"/><text x="95.6754%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="96.6292%" y="341" width="0.0803%" height="15" fill="rgb(244,64,3)" fg:x="1204" fg:w="1"/><text x="96.8792%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.6292%" y="325" width="0.0803%" height="15" fill="rgb(220,86,40)" fg:x="1204" fg:w="1"/><text x="96.8792%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6292%" y="309" width="0.0803%" height="15" fill="rgb(222,194,51)" fg:x="1204" fg:w="1"/><text x="96.8792%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.7897%" y="293" width="0.0803%" height="15" fill="rgb(207,154,19)" fg:x="1206" fg:w="1"/><text x="97.0397%" y="303.50"></text></g><g><title>engine::session::Session::captured (40 samples, 3.21%)</title><rect x="93.7400%" y="533" width="3.2103%" height="15" fill="rgb(206,178,36)" fg:x="1168" fg:w="40"/><text x="93.9900%" y="543.50">eng..</text></g><g><title>engine::session::logs::capture (40 samples, 3.21%)</title><rect x="93.7400%" y="517" width="3.2103%" height="15" fill="rgb(218,8,24)" fg:x="1168" fg:w="40"/><text x="93.9900%" y="527.50">eng..</text></g><g><title>tracing_core::dispatcher::with_default (39 samples, 3.13%)</title><rect x="93.8202%" y="501" width="3.1300%" height="15" fill="rgb(226,83,41)" fg:x="1169" fg:w="39"/><text x="94.0702%" y="511.50">tra..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (39 samples, 3.13%)</title><rect x="93.8202%" y="485" width="3.1300%" height="15" fill="rgb(224,23,22)" fg:x="1169" fg:w="39"/><text x="94.0702%" y="495.50">&lt;en..</text></g><g><title>kernel::plugins::mw::apply_middleware (39 samples, 3.13%)</title><rect x="93.8202%" y="469" width="3.1300%" height="15" fill="rgb(218,198,45)" fg:x="1169" fg:w="39"/><text x="94.0702%" y="479.50">ker..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (38 samples, 3.05%)</title><rect x="93.9005%" y="453" width="3.0498%" height="15" fill="rgb(249,147,41)" fg:x="1170" fg:w="38"/><text x="94.1505%" y="463.50">ker..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (38 samples, 3.05%)</title><rect x="93.9005%" y="437" width="3.0498%" height="15" fill="rgb(244,224,13)" fg:x="1170" fg:w="38"/><text x="94.1505%" y="447.50">&lt;en..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (19 samples, 1.52%)</title><rect x="95.4254%" y="421" width="1.5249%" height="15" fill="rgb(225,97,27)" fg:x="1189" fg:w="19"/><text x="95.6754%" y="431.50"></text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (19 samples, 1.52%)</title><rect x="95.4254%" y="405" width="1.5249%" height="15" fill="rgb(254,64,0)" fg:x="1189" fg:w="19"/><text x="95.6754%" y="415.50"></text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (19 samples, 1.52%)</title><rect x="95.4254%" y="389" width="1.5249%" height="15" fill="rgb(208,130,43)" fg:x="1189" fg:w="19"/><text x="95.6754%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (19 samples, 1.52%)</title><rect x="95.4254%" y="373" width="1.5249%" height="15" fill="rgb(247,91,25)" fg:x="1189" fg:w="19"/><text x="95.6754%" y="383.50"></text></g><g><title>plugins_core::tools::occupied_by (3 samples, 0.24%)</title><rect x="96.7095%" y="357" width="0.2408%" height="15" fill="rgb(215,218,42)" fg:x="1205" fg:w="3"/><text x="96.9595%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="96.7095%" y="341" width="0.2408%" height="15" fill="rgb(233,9,24)" fg:x="1205" fg:w="3"/><text x="96.9595%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.7095%" y="325" width="0.2408%" height="15" fill="rgb(252,105,38)" fg:x="1205" fg:w="3"/><text x="96.9595%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.7095%" y="309" width="0.2408%" height="15" fill="rgb(225,40,49)" fg:x="1205" fg:w="3"/><text x="96.9595%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.8700%" y="293" width="0.0803%" height="15" fill="rgb(232,196,19)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.8700%" y="277" width="0.0803%" height="15" fill="rgb(207,35,15)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.8700%" y="261" width="0.0803%" height="15" fill="rgb(238,68,36)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8700%" y="245" width="0.0803%" height="15" fill="rgb(205,158,20)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8700%" y="229" width="0.0803%" height="15" fill="rgb(232,32,22)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="239.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="96.9502%" y="517" width="0.0803%" height="15" fill="rgb(210,169,6)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9502%" y="501" width="0.0803%" height="15" fill="rgb(229,28,12)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9502%" y="485" width="0.0803%" height="15" fill="rgb(229,78,10)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.9502%" y="469" width="0.0803%" height="15" fill="rgb(223,139,54)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.9502%" y="453" width="0.0803%" height="15" fill="rgb(207,110,4)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.9502%" y="437" width="0.0803%" height="15" fill="rgb(248,30,41)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9502%" y="421" width="0.0803%" height="15" fill="rgb(235,54,25)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9502%" y="405" width="0.0803%" height="15" fill="rgb(213,107,41)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.9502%" y="389" width="0.0803%" height="15" fill="rgb(237,102,9)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.9502%" y="373" width="0.0803%" height="15" fill="rgb(252,137,49)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.9502%" y="357" width="0.0803%" height="15" fill="rgb(233,202,33)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.9502%" y="341" width="0.0803%" height="15" fill="rgb(223,14,51)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="96.9502%" y="325" width="0.0803%" height="15" fill="rgb(248,70,23)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="96.9502%" y="309" width="0.0803%" height="15" fill="rgb(209,207,47)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.0305%" y="405" width="0.0803%" height="15" fill="rgb(245,124,2)" fg:x="1209" fg:w="1"/><text x="97.2805%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.0305%" y="437" width="0.1605%" height="15" fill="rgb(249,208,11)" fg:x="1209" fg:w="2"/><text x="97.2805%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.0305%" y="421" width="0.1605%" height="15" fill="rgb(247,112,7)" fg:x="1209" fg:w="2"/><text x="97.2805%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1108%" y="405" width="0.0803%" height="15" fill="rgb(209,192,31)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1108%" y="389" width="0.0803%" height="15" fill="rgb(236,55,19)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1108%" y="373" width="0.0803%" height="15" fill="rgb(252,89,41)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.1910%" y="437" width="0.0803%" height="15" fill="rgb(220,172,14)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.1910%" y="421" width="0.0803%" height="15" fill="rgb(252,65,2)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.1910%" y="405" width="0.0803%" height="15" fill="rgb(250,20,8)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.1910%" y="389" width="0.0803%" height="15" fill="rgb(234,149,13)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.1910%" y="373" width="0.0803%" height="15" fill="rgb(223,219,12)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.1910%" y="357" width="0.0803%" height="15" fill="rgb(234,13,49)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1910%" y="341" width="0.0803%" height="15" fill="rgb(214,41,25)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1910%" y="325" width="0.0803%" height="15" fill="rgb(232,198,52)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1910%" y="309" width="0.0803%" height="15" fill="rgb(236,111,46)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1910%" y="293" width="0.0803%" height="15" fill="rgb(253,30,20)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1910%" y="277" width="0.0803%" height="15" fill="rgb(247,141,17)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1910%" y="261" width="0.0803%" height="15" fill="rgb(214,195,21)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.1910%" y="245" width="0.0803%" height="15" fill="rgb(214,98,12)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.1910%" y="229" width="0.0803%" height="15" fill="rgb(239,4,26)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="97.0305%" y="485" width="0.3210%" height="15" fill="rgb(234,210,35)" fg:x="1209" fg:w="4"/><text x="97.2805%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="97.0305%" y="469" width="0.3210%" height="15" fill="rgb(252,178,27)" fg:x="1209" fg:w="4"/><text x="97.2805%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="97.0305%" y="453" width="0.3210%" height="15" fill="rgb(217,50,1)" fg:x="1209" fg:w="4"/><text x="97.2805%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2713%" y="437" width="0.0803%" height="15" fill="rgb(233,137,5)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2713%" y="421" width="0.0803%" height="15" fill="rgb(217,227,25)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="431.50"></text></g><g><title>engine::session::internal::Added::find_refs (5 samples, 0.40%)</title><rect x="97.0305%" y="517" width="0.4013%" height="15" fill="rgb(242,89,38)" fg:x="1209" fg:w="5"/><text x="97.2805%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="97.0305%" y="501" width="0.4013%" height="15" fill="rgb(212,190,30)" fg:x="1209" fg:w="5"/><text x="97.2805%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.3515%" y="485" width="0.0803%" height="15" fill="rgb(222,120,8)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3515%" y="469" width="0.0803%" height="15" fill="rgb(227,181,9)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.3515%" y="453" width="0.0803%" height="15" fill="rgb(222,125,29)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.3515%" y="437" width="0.0803%" height="15" fill="rgb(215,153,31)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.3515%" y="421" width="0.0803%" height="15" fill="rgb(228,77,30)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="97.3515%" y="405" width="0.0803%" height="15" fill="rgb(226,110,9)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.3515%" y="389" width="0.0803%" height="15" fill="rgb(219,111,7)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.3515%" y="373" width="0.0803%" height="15" fill="rgb(229,167,25)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.5923%" y="453" width="0.1605%" height="15" fill="rgb(209,77,43)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.5923%" y="437" width="0.1605%" height="15" fill="rgb(233,70,39)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.5923%" y="421" width="0.1605%" height="15" fill="rgb(207,171,44)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.5923%" y="405" width="0.1605%" height="15" fill="rgb(244,91,6)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="97.5923%" y="389" width="0.1605%" height="15" fill="rgb(234,136,12)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="97.5923%" y="373" width="0.1605%" height="15" fill="rgb(216,210,38)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="97.5923%" y="357" width="0.1605%" height="15" fill="rgb(241,227,7)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="97.5923%" y="341" width="0.1605%" height="15" fill="rgb(241,222,11)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="97.5923%" y="325" width="0.1605%" height="15" fill="rgb(246,86,18)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="97.5923%" y="309" width="0.1605%" height="15" fill="rgb(224,151,49)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="97.5923%" y="293" width="0.1605%" height="15" fill="rgb(235,4,41)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="97.5923%" y="277" width="0.1605%" height="15" fill="rgb(218,30,52)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="97.5923%" y="261" width="0.1605%" height="15" fill="rgb(205,124,51)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6726%" y="245" width="0.0803%" height="15" fill="rgb(237,126,51)" fg:x="1217" fg:w="1"/><text x="97.9226%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="97.4318%" y="501" width="0.4013%" height="15" fill="rgb(225,32,46)" fg:x="1214" fg:w="5"/><text x="97.6818%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="97.4318%" y="485" width="0.4013%" height="15" fill="rgb(251,60,49)" fg:x="1214" fg:w="5"/><text x="97.6818%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="97.5120%" y="469" width="0.3210%" height="15" fill="rgb(234,18,23)" fg:x="1215" fg:w="4"/><text x="97.7620%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7528%" y="453" width="0.0803%" height="15" fill="rgb(234,25,23)" fg:x="1218" fg:w="1"/><text x="98.0028%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="97.8331%" y="501" width="0.0803%" height="15" fill="rgb(210,43,52)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.8331%" y="485" width="0.0803%" height="15" fill="rgb(237,198,21)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.0738%" y="421" width="0.1605%" height="15" fill="rgb(211,20,34)" fg:x="1222" fg:w="2"/><text x="98.3238%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="98.0738%" y="405" width="0.1605%" height="15" fill="rgb(221,155,50)" fg:x="1222" fg:w="2"/><text x="98.3238%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.1541%" y="389" width="0.0803%" height="15" fill="rgb(213,214,53)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.2343%" y="405" width="0.0803%" height="15" fill="rgb(215,229,48)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.2343%" y="389" width="0.0803%" height="15" fill="rgb(243,88,5)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.2343%" y="373" width="0.0803%" height="15" fill="rgb(216,199,8)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="98.0738%" y="453" width="0.3210%" height="15" fill="rgb(241,22,4)" fg:x="1222" fg:w="4"/><text x="98.3238%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.0738%" y="437" width="0.3210%" height="15" fill="rgb(209,190,22)" fg:x="1222" fg:w="4"/><text x="98.3238%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.2343%" y="421" width="0.1605%" height="15" fill="rgb(251,138,45)" fg:x="1224" fg:w="2"/><text x="98.4843%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3146%" y="405" width="0.0803%" height="15" fill="rgb(219,111,22)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3146%" y="389" width="0.0803%" height="15" fill="rgb(253,29,49)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.3146%" y="373" width="0.0803%" height="15" fill="rgb(238,129,49)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3146%" y="357" width="0.0803%" height="15" fill="rgb(240,26,41)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3146%" y="341" width="0.0803%" height="15" fill="rgb(221,47,33)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.3146%" y="325" width="0.0803%" height="15" fill="rgb(216,200,17)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3146%" y="309" width="0.0803%" height="15" fill="rgb(230,151,26)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3146%" y="293" width="0.0803%" height="15" fill="rgb(242,182,16)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.56%)</title><rect x="97.9133%" y="501" width="0.5618%" height="15" fill="rgb(236,35,53)" fg:x="1220" fg:w="7"/><text x="98.1633%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="97.9936%" y="485" width="0.4815%" height="15" fill="rgb(214,180,28)" fg:x="1221" fg:w="6"/><text x="98.2436%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="97.9936%" y="469" width="0.4815%" height="15" fill="rgb(208,173,36)" fg:x="1221" fg:w="6"/><text x="98.2436%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3949%" y="453" width="0.0803%" height="15" fill="rgb(218,39,15)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3949%" y="437" width="0.0803%" height="15" fill="rgb(213,145,15)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="98.3949%" y="421" width="0.0803%" height="15" fill="rgb(242,110,37)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4751%" y="357" width="0.0803%" height="15" fill="rgb(247,146,22)" fg:x="1227" fg:w="1"/><text x="98.7251%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4751%" y="341" width="0.0803%" height="15" fill="rgb(215,191,7)" fg:x="1227" fg:w="1"/><text x="98.7251%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4751%" y="325" width="0.0803%" height="15" fill="rgb(240,158,1)" fg:x="1227" fg:w="1"/><text x="98.7251%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4751%" y="309" width="0.0803%" height="15" fill="rgb(241,78,32)" fg:x="1227" fg:w="1"/><text x="98.7251%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4751%" y="293" width="0.0803%" height="15" fill="rgb(248,83,10)" fg:x="1227" fg:w="1"/><text x="98.7251%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4751%" y="421" width="0.1605%" height="15" fill="rgb(241,52,0)" fg:x="1227" fg:w="2"/><text x="98.7251%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.4751%" y="405" width="0.1605%" height="15" fill="rgb(238,37,13)" fg:x="1227" fg:w="2"/><text x="98.7251%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4751%" y="389" width="0.1605%" height="15" fill="rgb(242,194,17)" fg:x="1227" fg:w="2"/><text x="98.7251%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.4751%" y="373" width="0.1605%" height="15" fill="rgb(236,96,3)" fg:x="1227" fg:w="2"/><text x="98.7251%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5554%" y="357" width="0.0803%" height="15" fill="rgb(235,148,34)" fg:x="1228" fg:w="1"/><text x="98.8054%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.5554%" y="341" width="0.0803%" height="15" fill="rgb(254,12,11)" fg:x="1228" fg:w="1"/><text x="98.8054%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5554%" y="325" width="0.0803%" height="15" fill="rgb(207,31,54)" fg:x="1228" fg:w="1"/><text x="98.8054%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.5554%" y="309" width="0.0803%" height="15" fill="rgb(252,14,28)" fg:x="1228" fg:w="1"/><text x="98.8054%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.4751%" y="437" width="0.2408%" height="15" fill="rgb(252,108,36)" fg:x="1227" fg:w="3"/><text x="98.7251%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6356%" y="421" width="0.0803%" height="15" fill="rgb(214,149,7)" fg:x="1229" fg:w="1"/><text x="98.8856%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.36%)</title><rect x="97.4318%" y="517" width="1.3644%" height="15" fill="rgb(243,94,12)" fg:x="1214" fg:w="17"/><text x="97.6818%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="98.4751%" y="501" width="0.3210%" height="15" fill="rgb(208,36,10)" fg:x="1227" fg:w="4"/><text x="98.7251%" y="511.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="98.4751%" y="485" width="0.3210%" height="15" fill="rgb(233,185,52)" fg:x="1227" fg:w="4"/><text x="98.7251%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="98.4751%" y="469" width="0.3210%" height="15" fill="rgb(234,50,45)" fg:x="1227" fg:w="4"/><text x="98.7251%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.4751%" y="453" width="0.3210%" height="15" fill="rgb(228,92,54)" fg:x="1227" fg:w="4"/><text x="98.7251%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7159%" y="437" width="0.0803%" height="15" fill="rgb(224,85,25)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7159%" y="421" width="0.0803%" height="15" fill="rgb(246,1,45)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (24 samples, 1.93%)</title><rect x="96.9502%" y="533" width="1.9262%" height="15" fill="rgb(240,66,23)" fg:x="1208" fg:w="24"/><text x="97.2002%" y="543.50">e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="98.7961%" y="517" width="0.0803%" height="15" fill="rgb(222,96,27)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.7961%" y="501" width="0.0803%" height="15" fill="rgb(212,136,10)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="511.50"></text></g><g><title>engine::session::internal::&lt;impl core::convert::From&lt;engine::session::internal::Added&gt; for kernel::model::EntityPtr&gt;::from (1 samples, 0.08%)</title><rect x="98.8764%" y="501" width="0.0803%" height="15" fill="rgb(226,192,50)" fg:x="1232" fg:w="1"/><text x="99.1264%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.9567%" y="485" width="0.1605%" height="15" fill="rgb(241,182,31)" fg:x="1233" fg:w="2"/><text x="99.2067%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.9567%" y="469" width="0.1605%" height="15" fill="rgb(219,205,47)" fg:x="1233" fg:w="2"/><text x="99.2067%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.9567%" y="453" width="0.1605%" height="15" fill="rgb(207,96,14)" fg:x="1233" fg:w="2"/><text x="99.2067%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.9567%" y="437" width="0.1605%" height="15" fill="rgb(216,119,9)" fg:x="1233" fg:w="2"/><text x="99.2067%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0369%" y="421" width="0.0803%" height="15" fill="rgb(235,62,36)" fg:x="1234" fg:w="1"/><text x="99.2869%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1172%" y="469" width="0.0803%" height="15" fill="rgb(214,41,27)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1172%" y="453" width="0.0803%" height="15" fill="rgb(214,174,37)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1172%" y="437" width="0.0803%" height="15" fill="rgb(212,11,25)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1172%" y="421" width="0.0803%" height="15" fill="rgb(217,71,35)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1172%" y="405" width="0.0803%" height="15" fill="rgb(234,152,9)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.1172%" y="389" width="0.0803%" height="15" fill="rgb(228,32,51)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.1172%" y="373" width="0.0803%" height="15" fill="rgb(209,14,47)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.1172%" y="357" width="0.0803%" height="15" fill="rgb(218,201,17)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.1172%" y="341" width="0.0803%" height="15" fill="rgb(218,98,15)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.1172%" y="325" width="0.0803%" height="15" fill="rgb(233,202,29)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.1172%" y="309" width="0.0803%" height="15" fill="rgb(207,196,44)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.1172%" y="293" width="0.0803%" height="15" fill="rgb(218,63,34)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.1172%" y="277" width="0.0803%" height="15" fill="rgb(209,10,5)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.1172%" y="261" width="0.0803%" height="15" fill="rgb(224,36,28)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1172%" y="245" width="0.0803%" height="15" fill="rgb(249,178,7)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1974%" y="469" width="0.0803%" height="15" fill="rgb(253,163,10)" fg:x="1236" fg:w="1"/><text x="99.4474%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="99.1172%" y="485" width="0.2408%" height="15" fill="rgb(245,67,46)" fg:x="1235" fg:w="3"/><text x="99.3672%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2777%" y="469" width="0.0803%" height="15" fill="rgb(225,14,18)" fg:x="1237" fg:w="1"/><text x="99.5277%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2777%" y="453" width="0.0803%" height="15" fill="rgb(217,41,54)" fg:x="1237" fg:w="1"/><text x="99.5277%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.2777%" y="437" width="0.0803%" height="15" fill="rgb(222,111,11)" fg:x="1237" fg:w="1"/><text x="99.5277%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2777%" y="421" width="0.0803%" height="15" fill="rgb(211,85,31)" fg:x="1237" fg:w="1"/><text x="99.5277%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2777%" y="405" width="0.0803%" height="15" fill="rgb(223,29,26)" fg:x="1237" fg:w="1"/><text x="99.5277%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3579%" y="437" width="0.0803%" height="15" fill="rgb(236,124,50)" fg:x="1238" fg:w="1"/><text x="99.6079%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3579%" y="421" width="0.0803%" height="15" fill="rgb(219,148,15)" fg:x="1238" fg:w="1"/><text x="99.6079%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.3579%" y="405" width="0.0803%" height="15" fill="rgb(248,159,33)" fg:x="1238" fg:w="1"/><text x="99.6079%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.5185%" y="389" width="0.1605%" height="15" fill="rgb(252,65,8)" fg:x="1240" fg:w="2"/><text x="99.7685%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5987%" y="373" width="0.0803%" height="15" fill="rgb(236,45,7)" fg:x="1241" fg:w="1"/><text x="99.8487%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5987%" y="357" width="0.0803%" height="15" fill="rgb(244,3,48)" fg:x="1241" fg:w="1"/><text x="99.8487%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="99.5987%" y="341" width="0.0803%" height="15" fill="rgb(224,123,53)" fg:x="1241" fg:w="1"/><text x="99.8487%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="99.3579%" y="485" width="0.4013%" height="15" fill="rgb(223,173,15)" fg:x="1238" fg:w="5"/><text x="99.6079%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="99.3579%" y="469" width="0.4013%" height="15" fill="rgb(254,181,5)" fg:x="1238" fg:w="5"/><text x="99.6079%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="99.3579%" y="453" width="0.4013%" height="15" fill="rgb(243,124,33)" fg:x="1238" fg:w="5"/><text x="99.6079%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="99.4382%" y="437" width="0.3210%" height="15" fill="rgb(253,220,11)" fg:x="1239" fg:w="4"/><text x="99.6882%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.4382%" y="421" width="0.3210%" height="15" fill="rgb(217,14,4)" fg:x="1239" fg:w="4"/><text x="99.6882%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.5185%" y="405" width="0.2408%" height="15" fill="rgb(209,196,12)" fg:x="1240" fg:w="3"/><text x="99.7685%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6790%" y="389" width="0.0803%" height="15" fill="rgb(237,108,29)" fg:x="1242" fg:w="1"/><text x="99.9290%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6790%" y="373" width="0.0803%" height="15" fill="rgb(216,173,20)" fg:x="1242" fg:w="1"/><text x="99.9290%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.6790%" y="357" width="0.0803%" height="15" fill="rgb(245,27,6)" fg:x="1242" fg:w="1"/><text x="99.9290%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.7592%" y="389" width="0.1605%" height="15" fill="rgb(210,181,20)" fg:x="1243" fg:w="2"/><text x="100.0092%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8395%" y="373" width="0.0803%" height="15" fill="rgb(235,213,1)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.8395%" y="357" width="0.0803%" height="15" fill="rgb(239,68,43)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8395%" y="341" width="0.0803%" height="15" fill="rgb(254,137,43)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.8395%" y="325" width="0.0803%" height="15" fill="rgb(252,170,38)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8395%" y="309" width="0.0803%" height="15" fill="rgb(234,21,42)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.8395%" y="293" width="0.0803%" height="15" fill="rgb(216,145,40)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="303.50"></text></g><g><title>all (1,246 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(251,73,9)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="927.50"></text></g><g><title>simple-51efa855 (1,246 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(242,54,6)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="911.50">simple-51efa855</text></g><g><title>_start (1,246 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(239,70,7)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="895.50">_start</text></g><g><title>__libc_start_main (1,246 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(216,159,35)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="879.50">__libc_start_main</text></g><g><title>main (1,246 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(224,50,39)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (1,246 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(235,9,35)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,246 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(239,34,21)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,246 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(218,162,43)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,246 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(219,89,33)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="799.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,246 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(226,125,37)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="783.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,246 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(233,149,30)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,246 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(236,8,18)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,246 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(205,176,9)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,246 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(252,103,44)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="719.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,246 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(207,68,53)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="703.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,246 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(218,193,48)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,246 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(234,121,52)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="671.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,246 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(227,218,49)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="655.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,246 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(221,8,7)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="639.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (272 samples, 21.83%)</title><rect x="78.1701%" y="613" width="21.8299%" height="15" fill="rgb(217,151,36)" fg:x="974" fg:w="272"/><text x="78.4201%" y="623.50">&lt;criterion::routine::Function&lt;M,F,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (272 samples, 21.83%)</title><rect x="78.1701%" y="597" width="21.8299%" height="15" fill="rgb(213,71,5)" fg:x="974" fg:w="272"/><text x="78.4201%" y="607.50">criterion::bencher::Bencher&lt;M&gt;::it..</text></g><g><title>tests::evaluate_text_in_new_domain (272 samples, 21.83%)</title><rect x="78.1701%" y="581" width="21.8299%" height="15" fill="rgb(225,145,43)" fg:x="974" fg:w="272"/><text x="78.4201%" y="591.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (79 samples, 6.34%)</title><rect x="93.6597%" y="565" width="6.3403%" height="15" fill="rgb(235,118,19)" fg:x="1167" fg:w="79"/><text x="93.9097%" y="575.50">engine::..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (79 samples, 6.34%)</title><rect x="93.6597%" y="549" width="6.3403%" height="15" fill="rgb(214,102,36)" fg:x="1167" fg:w="79"/><text x="93.9097%" y="559.50">engine::..</text></g><g><title>kernel::model::EntityPtrResolver::world (14 samples, 1.12%)</title><rect x="98.8764%" y="533" width="1.1236%" height="15" fill="rgb(220,56,43)" fg:x="1232" fg:w="14"/><text x="99.1264%" y="543.50"></text></g><g><title>engine::session::Session::load_entity (14 samples, 1.12%)</title><rect x="98.8764%" y="517" width="1.1236%" height="15" fill="rgb(246,136,46)" fg:x="1232" fg:w="14"/><text x="99.1264%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.04%)</title><rect x="98.9567%" y="501" width="1.0433%" height="15" fill="rgb(249,99,12)" fg:x="1233" fg:w="13"/><text x="99.2067%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="99.7592%" y="485" width="0.2408%" height="15" fill="rgb(224,31,42)" fg:x="1243" fg:w="3"/><text x="100.0092%" y="495.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="99.7592%" y="469" width="0.2408%" height="15" fill="rgb(208,96,21)" fg:x="1243" fg:w="3"/><text x="100.0092%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.7592%" y="453" width="0.2408%" height="15" fill="rgb(237,229,7)" fg:x="1243" fg:w="3"/><text x="100.0092%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.7592%" y="437" width="0.2408%" height="15" fill="rgb(210,12,6)" fg:x="1243" fg:w="3"/><text x="100.0092%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.7592%" y="421" width="0.2408%" height="15" fill="rgb(240,9,34)" fg:x="1243" fg:w="3"/><text x="100.0092%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.7592%" y="405" width="0.2408%" height="15" fill="rgb(211,68,37)" fg:x="1243" fg:w="3"/><text x="100.0092%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.9197%" y="389" width="0.0803%" height="15" fill="rgb(249,138,50)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.9197%" y="373" width="0.0803%" height="15" fill="rgb(243,185,40)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="383.50"></text></g></svg></svg>