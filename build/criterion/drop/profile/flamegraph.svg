<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="1237"><g><title>&lt;engine::session::Session as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1617%" y="549" width="0.0808%" height="15" fill="rgb(215,117,49)" fg:x="2" fg:w="1"/><text x="0.4117%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3234%" y="501" width="0.0808%" height="15" fill="rgb(246,194,11)" fg:x="4" fg:w="1"/><text x="0.5734%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4042%" y="485" width="0.0808%" height="15" fill="rgb(242,101,44)" fg:x="5" fg:w="1"/><text x="0.6542%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.32%)</title><rect x="0.2425%" y="549" width="0.3234%" height="15" fill="rgb(226,174,6)" fg:x="3" fg:w="4"/><text x="0.4925%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="0.2425%" y="533" width="0.3234%" height="15" fill="rgb(213,150,20)" fg:x="3" fg:w="4"/><text x="0.4925%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.3234%" y="517" width="0.2425%" height="15" fill="rgb(222,124,42)" fg:x="4" fg:w="3"/><text x="0.5734%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.16%)</title><rect x="0.4042%" y="501" width="0.1617%" height="15" fill="rgb(250,19,47)" fg:x="5" fg:w="2"/><text x="0.6542%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="0.4850%" y="485" width="0.0808%" height="15" fill="rgb(241,217,19)" fg:x="6" fg:w="1"/><text x="0.7350%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6467%" y="517" width="0.0808%" height="15" fill="rgb(207,210,34)" fg:x="8" fg:w="1"/><text x="0.8967%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.9701%" y="469" width="0.1617%" height="15" fill="rgb(244,45,4)" fg:x="12" fg:w="2"/><text x="1.2201%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3743%" y="437" width="0.0808%" height="15" fill="rgb(252,134,50)" fg:x="17" fg:w="1"/><text x="1.6243%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="1.4551%" y="437" width="0.3234%" height="15" fill="rgb(238,74,2)" fg:x="18" fg:w="4"/><text x="1.7051%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6977%" y="421" width="0.0808%" height="15" fill="rgb(226,58,46)" fg:x="21" fg:w="1"/><text x="1.9477%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.8593%" y="421" width="0.2425%" height="15" fill="rgb(232,83,35)" fg:x="23" fg:w="3"/><text x="2.1093%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0210%" y="405" width="0.0808%" height="15" fill="rgb(212,148,47)" fg:x="25" fg:w="1"/><text x="2.2710%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.1827%" y="405" width="0.1617%" height="15" fill="rgb(235,29,1)" fg:x="27" fg:w="2"/><text x="2.4327%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.54%)</title><rect x="0.8892%" y="485" width="1.5360%" height="15" fill="rgb(247,55,37)" fg:x="11" fg:w="19"/><text x="1.1392%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (16 samples, 1.29%)</title><rect x="1.1318%" y="469" width="1.2935%" height="15" fill="rgb(222,48,3)" fg:x="14" fg:w="16"/><text x="1.3818%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.21%)</title><rect x="1.2126%" y="453" width="1.2126%" height="15" fill="rgb(234,21,33)" fg:x="15" fg:w="15"/><text x="1.4626%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="1.7785%" y="437" width="0.6467%" height="15" fill="rgb(247,178,53)" fg:x="22" fg:w="8"/><text x="2.0285%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="2.1019%" y="421" width="0.3234%" height="15" fill="rgb(225,75,7)" fg:x="26" fg:w="4"/><text x="2.3519%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.3444%" y="405" width="0.0808%" height="15" fill="rgb(219,199,7)" fg:x="29" fg:w="1"/><text x="2.5944%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3444%" y="389" width="0.0808%" height="15" fill="rgb(209,93,42)" fg:x="29" fg:w="1"/><text x="2.5944%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.4252%" y="485" width="0.2425%" height="15" fill="rgb(240,175,17)" fg:x="30" fg:w="3"/><text x="2.6752%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8294%" y="469" width="0.0808%" height="15" fill="rgb(232,106,7)" fg:x="35" fg:w="1"/><text x="3.0794%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.9103%" y="469" width="0.0808%" height="15" fill="rgb(242,106,43)" fg:x="36" fg:w="1"/><text x="3.1603%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.1528%" y="453" width="0.0808%" height="15" fill="rgb(242,61,37)" fg:x="39" fg:w="1"/><text x="3.4028%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="3.2336%" y="453" width="0.3234%" height="15" fill="rgb(205,72,10)" fg:x="40" fg:w="4"/><text x="3.4836%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="3.3145%" y="437" width="0.2425%" height="15" fill="rgb(214,184,36)" fg:x="41" fg:w="3"/><text x="3.5645%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6378%" y="437" width="0.0808%" height="15" fill="rgb(206,107,18)" fg:x="45" fg:w="1"/><text x="3.8878%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.7187%" y="437" width="0.1617%" height="15" fill="rgb(210,75,5)" fg:x="46" fg:w="2"/><text x="3.9687%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8804%" y="421" width="0.0808%" height="15" fill="rgb(205,3,19)" fg:x="48" fg:w="1"/><text x="4.1304%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 3.56%)</title><rect x="0.6467%" y="533" width="3.5570%" height="15" fill="rgb(207,181,42)" fg:x="8" fg:w="44"/><text x="0.8967%" y="543.50">&lt;has..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (43 samples, 3.48%)</title><rect x="0.7276%" y="517" width="3.4762%" height="15" fill="rgb(229,179,43)" fg:x="9" fg:w="43"/><text x="0.9776%" y="527.50">cor..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 3.48%)</title><rect x="0.7276%" y="501" width="3.4762%" height="15" fill="rgb(246,95,30)" fg:x="9" fg:w="43"/><text x="0.9776%" y="511.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.54%)</title><rect x="2.6677%" y="485" width="1.5360%" height="15" fill="rgb(234,144,45)" fg:x="33" fg:w="19"/><text x="2.9177%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="2.9911%" y="469" width="1.2126%" height="15" fill="rgb(250,54,25)" fg:x="37" fg:w="15"/><text x="3.2411%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="3.5570%" y="453" width="0.6467%" height="15" fill="rgb(215,195,40)" fg:x="44" fg:w="8"/><text x="3.8070%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="3.8804%" y="437" width="0.3234%" height="15" fill="rgb(233,188,42)" fg:x="48" fg:w="4"/><text x="4.1304%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="3.9612%" y="421" width="0.2425%" height="15" fill="rgb(247,227,35)" fg:x="49" fg:w="3"/><text x="4.2112%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.1229%" y="405" width="0.0808%" height="15" fill="rgb(249,124,27)" fg:x="51" fg:w="1"/><text x="4.3729%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (46 samples, 3.72%)</title><rect x="0.5659%" y="549" width="3.7187%" height="15" fill="rgb(219,207,25)" fg:x="7" fg:w="46"/><text x="0.8159%" y="559.50">core..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.2037%" y="533" width="0.0808%" height="15" fill="rgb(241,216,47)" fg:x="52" fg:w="1"/><text x="4.4537%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 4.28%)</title><rect x="0.0808%" y="565" width="4.2846%" height="15" fill="rgb(233,82,50)" fg:x="1" fg:w="53"/><text x="0.3308%" y="575.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="4.2846%" y="549" width="0.0808%" height="15" fill="rgb(232,63,2)" fg:x="53" fg:w="1"/><text x="4.5346%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="4.3654%" y="517" width="0.0808%" height="15" fill="rgb(236,184,28)" fg:x="54" fg:w="1"/><text x="4.6154%" y="527.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="4.4462%" y="517" width="0.0808%" height="15" fill="rgb(254,63,27)" fg:x="55" fg:w="1"/><text x="4.6962%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.4462%" y="501" width="0.0808%" height="15" fill="rgb(253,106,28)" fg:x="55" fg:w="1"/><text x="4.6962%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="5.0930%" y="469" width="0.0808%" height="15" fill="rgb(225,141,39)" fg:x="63" fg:w="1"/><text x="5.3430%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="5.0930%" y="453" width="0.0808%" height="15" fill="rgb(222,157,20)" fg:x="63" fg:w="1"/><text x="5.3430%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.0930%" y="437" width="0.0808%" height="15" fill="rgb(210,190,9)" fg:x="63" fg:w="1"/><text x="5.3430%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.0930%" y="421" width="0.0808%" height="15" fill="rgb(242,167,7)" fg:x="63" fg:w="1"/><text x="5.3430%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.0930%" y="405" width="0.0808%" height="15" fill="rgb(227,82,41)" fg:x="63" fg:w="1"/><text x="5.3430%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.0930%" y="389" width="0.0808%" height="15" fill="rgb(222,131,13)" fg:x="63" fg:w="1"/><text x="5.3430%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="5.0930%" y="373" width="0.0808%" height="15" fill="rgb(221,98,26)" fg:x="63" fg:w="1"/><text x="5.3430%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="5.0930%" y="357" width="0.0808%" height="15" fill="rgb(251,63,52)" fg:x="63" fg:w="1"/><text x="5.3430%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="5.0930%" y="341" width="0.0808%" height="15" fill="rgb(246,25,43)" fg:x="63" fg:w="1"/><text x="5.3430%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="5.0930%" y="325" width="0.0808%" height="15" fill="rgb(247,167,15)" fg:x="63" fg:w="1"/><text x="5.3430%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="5.0930%" y="309" width="0.0808%" height="15" fill="rgb(240,104,42)" fg:x="63" fg:w="1"/><text x="5.3430%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="5.0930%" y="293" width="0.0808%" height="15" fill="rgb(224,54,6)" fg:x="63" fg:w="1"/><text x="5.3430%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.0930%" y="277" width="0.0808%" height="15" fill="rgb(244,108,35)" fg:x="63" fg:w="1"/><text x="5.3430%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="5.0930%" y="261" width="0.0808%" height="15" fill="rgb(216,154,2)" fg:x="63" fg:w="1"/><text x="5.3430%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.0930%" y="245" width="0.0808%" height="15" fill="rgb(222,8,47)" fg:x="63" fg:w="1"/><text x="5.3430%" y="255.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="5.1738%" y="421" width="0.0808%" height="15" fill="rgb(252,93,1)" fg:x="64" fg:w="1"/><text x="5.4238%" y="431.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="5.1738%" y="405" width="0.0808%" height="15" fill="rgb(223,226,51)" fg:x="64" fg:w="1"/><text x="5.4238%" y="415.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="5.1738%" y="389" width="0.0808%" height="15" fill="rgb(206,147,9)" fg:x="64" fg:w="1"/><text x="5.4238%" y="399.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="5.1738%" y="373" width="0.0808%" height="15" fill="rgb(248,180,41)" fg:x="64" fg:w="1"/><text x="5.4238%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.73%)</title><rect x="4.9313%" y="485" width="0.7276%" height="15" fill="rgb(209,47,50)" fg:x="61" fg:w="9"/><text x="5.1813%" y="495.50"></text></g><g><title>std::sys::unix::fs::stat (6 samples, 0.49%)</title><rect x="5.1738%" y="469" width="0.4850%" height="15" fill="rgb(243,65,31)" fg:x="64" fg:w="6"/><text x="5.4238%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (6 samples, 0.49%)</title><rect x="5.1738%" y="453" width="0.4850%" height="15" fill="rgb(228,128,1)" fg:x="64" fg:w="6"/><text x="5.4238%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (6 samples, 0.49%)</title><rect x="5.1738%" y="437" width="0.4850%" height="15" fill="rgb(231,192,16)" fg:x="64" fg:w="6"/><text x="5.4238%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (5 samples, 0.40%)</title><rect x="5.2546%" y="421" width="0.4042%" height="15" fill="rgb(224,26,40)" fg:x="65" fg:w="5"/><text x="5.5046%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx (5 samples, 0.40%)</title><rect x="5.2546%" y="405" width="0.4042%" height="15" fill="rgb(214,192,17)" fg:x="65" fg:w="5"/><text x="5.5046%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (5 samples, 0.40%)</title><rect x="5.2546%" y="389" width="0.4042%" height="15" fill="rgb(225,147,18)" fg:x="65" fg:w="5"/><text x="5.5046%" y="399.50"></text></g><g><title>statx (5 samples, 0.40%)</title><rect x="5.2546%" y="373" width="0.4042%" height="15" fill="rgb(205,35,11)" fg:x="65" fg:w="5"/><text x="5.5046%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.6589%" y="437" width="0.0808%" height="15" fill="rgb(242,40,42)" fg:x="70" fg:w="1"/><text x="5.9089%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.6589%" y="421" width="0.0808%" height="15" fill="rgb(250,170,13)" fg:x="70" fg:w="1"/><text x="5.9089%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.6589%" y="405" width="0.0808%" height="15" fill="rgb(240,161,28)" fg:x="70" fg:w="1"/><text x="5.9089%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.6589%" y="389" width="0.0808%" height="15" fill="rgb(245,179,12)" fg:x="70" fg:w="1"/><text x="5.9089%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.6589%" y="373" width="0.0808%" height="15" fill="rgb(250,92,32)" fg:x="70" fg:w="1"/><text x="5.9089%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.6589%" y="357" width="0.0808%" height="15" fill="rgb(233,10,40)" fg:x="70" fg:w="1"/><text x="5.9089%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.6589%" y="341" width="0.0808%" height="15" fill="rgb(217,98,1)" fg:x="70" fg:w="1"/><text x="5.9089%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.6589%" y="325" width="0.0808%" height="15" fill="rgb(238,202,7)" fg:x="70" fg:w="1"/><text x="5.9089%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.6589%" y="309" width="0.0808%" height="15" fill="rgb(222,91,3)" fg:x="70" fg:w="1"/><text x="5.9089%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.6589%" y="293" width="0.0808%" height="15" fill="rgb(211,170,49)" fg:x="70" fg:w="1"/><text x="5.9089%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.6589%" y="277" width="0.0808%" height="15" fill="rgb(253,139,18)" fg:x="70" fg:w="1"/><text x="5.9089%" y="287.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (9 samples, 0.73%)</title><rect x="5.6589%" y="469" width="0.7276%" height="15" fill="rgb(222,4,43)" fg:x="70" fg:w="9"/><text x="5.9089%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.73%)</title><rect x="5.6589%" y="453" width="0.7276%" height="15" fill="rgb(207,205,12)" fg:x="70" fg:w="9"/><text x="5.9089%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.65%)</title><rect x="5.7397%" y="437" width="0.6467%" height="15" fill="rgb(216,159,46)" fg:x="71" fg:w="8"/><text x="5.9897%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="5.9822%" y="421" width="0.4042%" height="15" fill="rgb(236,115,1)" fg:x="74" fg:w="5"/><text x="6.2322%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="5.9822%" y="405" width="0.4042%" height="15" fill="rgb(251,35,33)" fg:x="74" fg:w="5"/><text x="6.2322%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.40%)</title><rect x="5.9822%" y="389" width="0.4042%" height="15" fill="rgb(248,62,51)" fg:x="74" fg:w="5"/><text x="6.2322%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.40%)</title><rect x="5.9822%" y="373" width="0.4042%" height="15" fill="rgb(254,180,19)" fg:x="74" fg:w="5"/><text x="6.2322%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.40%)</title><rect x="5.9822%" y="357" width="0.4042%" height="15" fill="rgb(217,100,32)" fg:x="74" fg:w="5"/><text x="6.2322%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="6.0631%" y="341" width="0.3234%" height="15" fill="rgb(224,71,22)" fg:x="75" fg:w="4"/><text x="6.3131%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="6.0631%" y="325" width="0.3234%" height="15" fill="rgb(251,185,33)" fg:x="75" fg:w="4"/><text x="6.3131%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="6.0631%" y="309" width="0.3234%" height="15" fill="rgb(209,75,48)" fg:x="75" fg:w="4"/><text x="6.3131%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="6.0631%" y="293" width="0.3234%" height="15" fill="rgb(253,190,16)" fg:x="75" fg:w="4"/><text x="6.3131%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="6.0631%" y="277" width="0.3234%" height="15" fill="rgb(226,140,1)" fg:x="75" fg:w="4"/><text x="6.3131%" y="287.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="6.0631%" y="261" width="0.3234%" height="15" fill="rgb(206,75,30)" fg:x="75" fg:w="4"/><text x="6.3131%" y="271.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="6.0631%" y="245" width="0.3234%" height="15" fill="rgb(231,208,37)" fg:x="75" fg:w="4"/><text x="6.3131%" y="255.50"></text></g><g><title>glob::is_dir (10 samples, 0.81%)</title><rect x="6.4673%" y="421" width="0.8084%" height="15" fill="rgb(238,136,40)" fg:x="80" fg:w="10"/><text x="6.7173%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat (10 samples, 0.81%)</title><rect x="6.4673%" y="405" width="0.8084%" height="15" fill="rgb(247,137,17)" fg:x="80" fg:w="10"/><text x="6.7173%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (10 samples, 0.81%)</title><rect x="6.4673%" y="389" width="0.8084%" height="15" fill="rgb(240,60,40)" fg:x="80" fg:w="10"/><text x="6.7173%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (10 samples, 0.81%)</title><rect x="6.4673%" y="373" width="0.8084%" height="15" fill="rgb(236,68,50)" fg:x="80" fg:w="10"/><text x="6.7173%" y="383.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (10 samples, 0.81%)</title><rect x="6.4673%" y="357" width="0.8084%" height="15" fill="rgb(230,42,12)" fg:x="80" fg:w="10"/><text x="6.7173%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx (10 samples, 0.81%)</title><rect x="6.4673%" y="341" width="0.8084%" height="15" fill="rgb(219,16,16)" fg:x="80" fg:w="10"/><text x="6.7173%" y="351.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (10 samples, 0.81%)</title><rect x="6.4673%" y="325" width="0.8084%" height="15" fill="rgb(220,38,35)" fg:x="80" fg:w="10"/><text x="6.7173%" y="335.50"></text></g><g><title>statx (10 samples, 0.81%)</title><rect x="6.4673%" y="309" width="0.8084%" height="15" fill="rgb(228,33,1)" fg:x="80" fg:w="10"/><text x="6.7173%" y="319.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="7.2757%" y="373" width="0.0808%" height="15" fill="rgb(241,46,31)" fg:x="90" fg:w="1"/><text x="7.5257%" y="383.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.13%)</title><rect x="6.3864%" y="453" width="1.1318%" height="15" fill="rgb(232,58,20)" fg:x="79" fg:w="14"/><text x="6.6364%" y="463.50"></text></g><g><title>glob::fill_todo (13 samples, 1.05%)</title><rect x="6.4673%" y="437" width="1.0509%" height="15" fill="rgb(206,228,53)" fg:x="80" fg:w="13"/><text x="6.7173%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.24%)</title><rect x="7.2757%" y="421" width="0.2425%" height="15" fill="rgb(206,88,33)" fg:x="90" fg:w="3"/><text x="7.5257%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.24%)</title><rect x="7.2757%" y="405" width="0.2425%" height="15" fill="rgb(238,69,7)" fg:x="90" fg:w="3"/><text x="7.5257%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="7.2757%" y="389" width="0.2425%" height="15" fill="rgb(250,21,46)" fg:x="90" fg:w="3"/><text x="7.5257%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (2 samples, 0.16%)</title><rect x="7.3565%" y="373" width="0.1617%" height="15" fill="rgb(215,212,21)" fg:x="91" fg:w="2"/><text x="7.6065%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.16%)</title><rect x="7.3565%" y="357" width="0.1617%" height="15" fill="rgb(211,35,12)" fg:x="91" fg:w="2"/><text x="7.6065%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.16%)</title><rect x="7.3565%" y="341" width="0.1617%" height="15" fill="rgb(231,184,16)" fg:x="91" fg:w="2"/><text x="7.6065%" y="351.50"></text></g><g><title>statx (2 samples, 0.16%)</title><rect x="7.3565%" y="325" width="0.1617%" height="15" fill="rgb(242,140,15)" fg:x="91" fg:w="2"/><text x="7.6065%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;glob::Paths&gt; (1 samples, 0.08%)</title><rect x="7.5182%" y="453" width="0.0808%" height="15" fill="rgb(220,37,14)" fg:x="93" fg:w="1"/><text x="7.7682%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="7.5182%" y="437" width="0.0808%" height="15" fill="rgb(223,146,22)" fg:x="93" fg:w="1"/><text x="7.7682%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.5182%" y="421" width="0.0808%" height="15" fill="rgb(216,132,15)" fg:x="93" fg:w="1"/><text x="7.7682%" y="431.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.5990%" y="421" width="0.0808%" height="15" fill="rgb(248,83,5)" fg:x="94" fg:w="1"/><text x="7.8490%" y="431.50"></text></g><g><title>std::path::Components::include_cur_dir (1 samples, 0.08%)</title><rect x="7.5990%" y="405" width="0.0808%" height="15" fill="rgb(231,206,48)" fg:x="94" fg:w="1"/><text x="7.8490%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.08%)</title><rect x="7.5990%" y="389" width="0.0808%" height="15" fill="rgb(253,185,37)" fg:x="94" fg:w="1"/><text x="7.8490%" y="399.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.08%)</title><rect x="7.5990%" y="373" width="0.0808%" height="15" fill="rgb(208,21,44)" fg:x="94" fg:w="1"/><text x="7.8490%" y="383.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="7.6799%" y="421" width="0.0808%" height="15" fill="rgb(236,125,4)" fg:x="95" fg:w="1"/><text x="7.9299%" y="431.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.6799%" y="405" width="0.0808%" height="15" fill="rgb(226,134,25)" fg:x="95" fg:w="1"/><text x="7.9299%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.7607%" y="421" width="0.0808%" height="15" fill="rgb(250,201,12)" fg:x="96" fg:w="1"/><text x="8.0107%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="7.8416%" y="421" width="0.0808%" height="15" fill="rgb(225,92,18)" fg:x="97" fg:w="1"/><text x="8.0916%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="8.0032%" y="405" width="0.3234%" height="15" fill="rgb(227,35,22)" fg:x="99" fg:w="4"/><text x="8.2532%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="8.1649%" y="389" width="0.1617%" height="15" fill="rgb(214,180,52)" fg:x="101" fg:w="2"/><text x="8.4149%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.2458%" y="373" width="0.0808%" height="15" fill="rgb(233,55,38)" fg:x="102" fg:w="1"/><text x="8.4958%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.2458%" y="357" width="0.0808%" height="15" fill="rgb(249,171,43)" fg:x="102" fg:w="1"/><text x="8.4958%" y="367.50"></text></g><g><title>glob::Pattern::new (6 samples, 0.49%)</title><rect x="7.9224%" y="421" width="0.4850%" height="15" fill="rgb(239,87,2)" fg:x="98" fg:w="6"/><text x="8.1724%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.3266%" y="405" width="0.0808%" height="15" fill="rgb(248,141,5)" fg:x="103" fg:w="1"/><text x="8.5766%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (35 samples, 2.83%)</title><rect x="5.6589%" y="485" width="2.8294%" height="15" fill="rgb(238,33,42)" fg:x="70" fg:w="35"/><text x="5.9089%" y="495.50">&lt;p..</text></g><g><title>plugins_rune::sources::load_directory_sources (26 samples, 2.10%)</title><rect x="6.3864%" y="469" width="2.1019%" height="15" fill="rgb(231,57,19)" fg:x="79" fg:w="26"/><text x="6.6364%" y="479.50">p..</text></g><g><title>glob::glob (11 samples, 0.89%)</title><rect x="7.5990%" y="453" width="0.8892%" height="15" fill="rgb(214,78,53)" fg:x="94" fg:w="11"/><text x="7.8490%" y="463.50"></text></g><g><title>glob::glob_with (11 samples, 0.89%)</title><rect x="7.5990%" y="437" width="0.8892%" height="15" fill="rgb(206,132,29)" fg:x="94" fg:w="11"/><text x="7.8490%" y="447.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.08%)</title><rect x="8.4074%" y="421" width="0.0808%" height="15" fill="rgb(248,174,31)" fg:x="104" fg:w="1"/><text x="8.6574%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.4074%" y="405" width="0.0808%" height="15" fill="rgb(221,87,13)" fg:x="104" fg:w="1"/><text x="8.6574%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.4074%" y="389" width="0.0808%" height="15" fill="rgb(223,197,17)" fg:x="104" fg:w="1"/><text x="8.6574%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.4074%" y="373" width="0.0808%" height="15" fill="rgb(220,144,50)" fg:x="104" fg:w="1"/><text x="8.6574%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.4074%" y="357" width="0.0808%" height="15" fill="rgb(244,201,11)" fg:x="104" fg:w="1"/><text x="8.6574%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="8.4074%" y="341" width="0.0808%" height="15" fill="rgb(249,81,34)" fg:x="104" fg:w="1"/><text x="8.6574%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="8.4074%" y="325" width="0.0808%" height="15" fill="rgb(205,161,12)" fg:x="104" fg:w="1"/><text x="8.6574%" y="335.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="8.5691%" y="421" width="0.0808%" height="15" fill="rgb(252,139,50)" fg:x="106" fg:w="1"/><text x="8.8191%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="8.5691%" y="405" width="0.0808%" height="15" fill="rgb(205,169,14)" fg:x="106" fg:w="1"/><text x="8.8191%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.5691%" y="389" width="0.0808%" height="15" fill="rgb(248,198,33)" fg:x="106" fg:w="1"/><text x="8.8191%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.5691%" y="373" width="0.0808%" height="15" fill="rgb(236,23,21)" fg:x="106" fg:w="1"/><text x="8.8191%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.5691%" y="357" width="0.0808%" height="15" fill="rgb(231,13,38)" fg:x="106" fg:w="1"/><text x="8.8191%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.6500%" y="421" width="0.0808%" height="15" fill="rgb(239,139,21)" fg:x="107" fg:w="1"/><text x="8.9000%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7308%" y="405" width="0.0808%" height="15" fill="rgb(222,164,45)" fg:x="108" fg:w="1"/><text x="8.9808%" y="415.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="8.7308%" y="421" width="0.1617%" height="15" fill="rgb(230,52,27)" fg:x="108" fg:w="2"/><text x="8.9808%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.8116%" y="405" width="0.0808%" height="15" fill="rgb(227,143,42)" fg:x="109" fg:w="1"/><text x="9.0616%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.8116%" y="389" width="0.0808%" height="15" fill="rgb(249,127,1)" fg:x="109" fg:w="1"/><text x="9.0616%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8116%" y="373" width="0.0808%" height="15" fill="rgb(243,107,26)" fg:x="109" fg:w="1"/><text x="9.0616%" y="383.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="8.8925%" y="421" width="0.0808%" height="15" fill="rgb(225,7,45)" fg:x="110" fg:w="1"/><text x="9.1425%" y="431.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (6 samples, 0.49%)</title><rect x="8.5691%" y="453" width="0.4850%" height="15" fill="rgb(241,88,38)" fg:x="106" fg:w="6"/><text x="8.8191%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (6 samples, 0.49%)</title><rect x="8.5691%" y="437" width="0.4850%" height="15" fill="rgb(226,121,9)" fg:x="106" fg:w="6"/><text x="8.8191%" y="447.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="8.9733%" y="421" width="0.0808%" height="15" fill="rgb(253,60,29)" fg:x="111" fg:w="1"/><text x="9.2233%" y="431.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="9.1350%" y="421" width="0.0808%" height="15" fill="rgb(244,181,39)" fg:x="113" fg:w="1"/><text x="9.3850%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.1350%" y="405" width="0.0808%" height="15" fill="rgb(252,203,31)" fg:x="113" fg:w="1"/><text x="9.3850%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.1350%" y="389" width="0.0808%" height="15" fill="rgb(224,120,8)" fg:x="113" fg:w="1"/><text x="9.3850%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.1350%" y="373" width="0.0808%" height="15" fill="rgb(205,171,54)" fg:x="113" fg:w="1"/><text x="9.3850%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.1350%" y="357" width="0.0808%" height="15" fill="rgb(235,89,11)" fg:x="113" fg:w="1"/><text x="9.3850%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.2158%" y="421" width="0.0808%" height="15" fill="rgb(212,180,28)" fg:x="114" fg:w="1"/><text x="9.4658%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.2967%" y="421" width="0.0808%" height="15" fill="rgb(247,84,49)" fg:x="115" fg:w="1"/><text x="9.5467%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.2967%" y="405" width="0.0808%" height="15" fill="rgb(236,187,52)" fg:x="115" fg:w="1"/><text x="9.5467%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.2967%" y="389" width="0.0808%" height="15" fill="rgb(227,24,15)" fg:x="115" fg:w="1"/><text x="9.5467%" y="399.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.3775%" y="421" width="0.0808%" height="15" fill="rgb(227,211,13)" fg:x="116" fg:w="1"/><text x="9.6275%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.3775%" y="405" width="0.0808%" height="15" fill="rgb(245,52,14)" fg:x="116" fg:w="1"/><text x="9.6275%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (6 samples, 0.49%)</title><rect x="9.0542%" y="453" width="0.4850%" height="15" fill="rgb(225,185,13)" fg:x="112" fg:w="6"/><text x="9.3042%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (6 samples, 0.49%)</title><rect x="9.0542%" y="437" width="0.4850%" height="15" fill="rgb(217,160,29)" fg:x="112" fg:w="6"/><text x="9.3042%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="9.4584%" y="421" width="0.0808%" height="15" fill="rgb(216,115,53)" fg:x="117" fg:w="1"/><text x="9.7084%" y="431.50"></text></g><g><title>&lt;plugins_core::chat::actions::SpeakAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="9.5392%" y="421" width="0.1617%" height="15" fill="rgb(236,99,5)" fg:x="118" fg:w="2"/><text x="9.7892%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.6200%" y="405" width="0.0808%" height="15" fill="rgb(222,60,38)" fg:x="119" fg:w="1"/><text x="9.8700%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.6200%" y="389" width="0.0808%" height="15" fill="rgb(212,82,22)" fg:x="119" fg:w="1"/><text x="9.8700%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.6200%" y="373" width="0.0808%" height="15" fill="rgb(214,48,28)" fg:x="119" fg:w="1"/><text x="9.8700%" y="383.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="9.5392%" y="453" width="0.2425%" height="15" fill="rgb(245,196,50)" fg:x="118" fg:w="3"/><text x="9.7892%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="9.5392%" y="437" width="0.2425%" height="15" fill="rgb(225,159,46)" fg:x="118" fg:w="3"/><text x="9.7892%" y="447.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="9.7009%" y="421" width="0.0808%" height="15" fill="rgb(207,195,48)" fg:x="120" fg:w="1"/><text x="9.9509%" y="431.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="9.7817%" y="453" width="0.1617%" height="15" fill="rgb(240,73,3)" fg:x="121" fg:w="2"/><text x="10.0317%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="9.7817%" y="437" width="0.1617%" height="15" fill="rgb(245,57,23)" fg:x="121" fg:w="2"/><text x="10.0317%" y="447.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="9.7817%" y="421" width="0.1617%" height="15" fill="rgb(240,75,18)" fg:x="121" fg:w="2"/><text x="10.0317%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="9.7817%" y="405" width="0.1617%" height="15" fill="rgb(238,168,12)" fg:x="121" fg:w="2"/><text x="10.0317%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="9.7817%" y="389" width="0.1617%" height="15" fill="rgb(226,20,40)" fg:x="121" fg:w="2"/><text x="10.0317%" y="399.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.7817%" y="373" width="0.1617%" height="15" fill="rgb(224,130,35)" fg:x="121" fg:w="2"/><text x="10.0317%" y="383.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="9.9434%" y="453" width="0.0808%" height="15" fill="rgb(225,63,41)" fg:x="123" fg:w="1"/><text x="10.1934%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="9.9434%" y="437" width="0.0808%" height="15" fill="rgb(219,3,3)" fg:x="123" fg:w="1"/><text x="10.1934%" y="447.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="9.9434%" y="421" width="0.0808%" height="15" fill="rgb(218,157,4)" fg:x="123" fg:w="1"/><text x="10.1934%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::actions::AddRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="10.1051%" y="421" width="0.0808%" height="15" fill="rgb(232,76,36)" fg:x="125" fg:w="1"/><text x="10.3551%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="10.1051%" y="405" width="0.0808%" height="15" fill="rgb(247,36,0)" fg:x="125" fg:w="1"/><text x="10.3551%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.1051%" y="389" width="0.0808%" height="15" fill="rgb(205,2,34)" fg:x="125" fg:w="1"/><text x="10.3551%" y="399.50"></text></g><g><title>&lt;plugins_core::moving::actions::RemoveRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="10.1859%" y="421" width="0.1617%" height="15" fill="rgb(239,136,13)" fg:x="126" fg:w="2"/><text x="10.4359%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="10.1859%" y="405" width="0.1617%" height="15" fill="rgb(253,122,12)" fg:x="126" fg:w="2"/><text x="10.4359%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.2668%" y="389" width="0.0808%" height="15" fill="rgb(222,174,7)" fg:x="127" fg:w="1"/><text x="10.5168%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="10.3476%" y="421" width="0.0808%" height="15" fill="rgb(208,191,42)" fg:x="128" fg:w="1"/><text x="10.5976%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.3476%" y="405" width="0.0808%" height="15" fill="rgb(237,212,15)" fg:x="128" fg:w="1"/><text x="10.5976%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.3476%" y="389" width="0.0808%" height="15" fill="rgb(215,65,20)" fg:x="128" fg:w="1"/><text x="10.5976%" y="399.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (6 samples, 0.49%)</title><rect x="10.0243%" y="453" width="0.4850%" height="15" fill="rgb(232,103,11)" fg:x="124" fg:w="6"/><text x="10.2743%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (6 samples, 0.49%)</title><rect x="10.0243%" y="437" width="0.4850%" height="15" fill="rgb(235,148,18)" fg:x="124" fg:w="6"/><text x="10.2743%" y="447.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="10.4285%" y="421" width="0.0808%" height="15" fill="rgb(240,173,7)" fg:x="129" fg:w="1"/><text x="10.6785%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="10.4285%" y="405" width="0.0808%" height="15" fill="rgb(228,182,25)" fg:x="129" fg:w="1"/><text x="10.6785%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="10.5093%" y="453" width="0.0808%" height="15" fill="rgb(247,3,52)" fg:x="130" fg:w="1"/><text x="10.7593%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="10.5093%" y="437" width="0.0808%" height="15" fill="rgb(226,155,8)" fg:x="130" fg:w="1"/><text x="10.7593%" y="447.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="10.5093%" y="421" width="0.0808%" height="15" fill="rgb(243,195,38)" fg:x="130" fg:w="1"/><text x="10.7593%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="10.5093%" y="405" width="0.0808%" height="15" fill="rgb(254,181,33)" fg:x="130" fg:w="1"/><text x="10.7593%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.5901%" y="453" width="0.1617%" height="15" fill="rgb(232,98,23)" fg:x="131" fg:w="2"/><text x="10.8401%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (31 samples, 2.51%)</title><rect x="8.4883%" y="485" width="2.5061%" height="15" fill="rgb(205,23,10)" fg:x="105" fg:w="31"/><text x="8.7383%" y="495.50">&lt;s..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 2.51%)</title><rect x="8.4883%" y="469" width="2.5061%" height="15" fill="rgb(212,124,38)" fg:x="105" fg:w="31"/><text x="8.7383%" y="479.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="10.7518%" y="453" width="0.2425%" height="15" fill="rgb(228,207,2)" fg:x="133" fg:w="3"/><text x="11.0018%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="10.8327%" y="437" width="0.1617%" height="15" fill="rgb(215,120,22)" fg:x="134" fg:w="2"/><text x="11.0827%" y="447.50"></text></g><g><title>__libc_free (6 samples, 0.49%)</title><rect x="10.9943%" y="469" width="0.4850%" height="15" fill="rgb(251,172,33)" fg:x="136" fg:w="6"/><text x="11.2443%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (7 samples, 0.57%)</title><rect x="10.9943%" y="485" width="0.5659%" height="15" fill="rgb(250,83,2)" fg:x="136" fg:w="7"/><text x="11.2443%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="11.4794%" y="469" width="0.0808%" height="15" fill="rgb(210,132,53)" fg:x="142" fg:w="1"/><text x="11.7294%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (86 samples, 6.95%)</title><rect x="4.6888%" y="501" width="6.9523%" height="15" fill="rgb(221,208,36)" fg:x="58" fg:w="86"/><text x="4.9388%" y="511.50">kernel::p..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="11.5602%" y="485" width="0.0808%" height="15" fill="rgb(205,192,46)" fg:x="143" fg:w="1"/><text x="11.8102%" y="495.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="11.5602%" y="469" width="0.0808%" height="15" fill="rgb(223,163,14)" fg:x="143" fg:w="1"/><text x="11.8102%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="11.8027%" y="469" width="0.0808%" height="15" fill="rgb(218,41,28)" fg:x="146" fg:w="1"/><text x="12.0527%" y="479.50"></text></g><g><title>engine::session::Session::initialize (92 samples, 7.44%)</title><rect x="4.5271%" y="517" width="7.4373%" height="15" fill="rgb(235,104,10)" fg:x="56" fg:w="92"/><text x="4.7771%" y="527.50">engine::se..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="11.6411%" y="501" width="0.3234%" height="15" fill="rgb(246,17,4)" fg:x="144" fg:w="4"/><text x="11.8911%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="11.6411%" y="485" width="0.3234%" height="15" fill="rgb(240,7,16)" fg:x="144" fg:w="4"/><text x="11.8911%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.8836%" y="469" width="0.0808%" height="15" fill="rgb(213,160,23)" fg:x="147" fg:w="1"/><text x="12.1336%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.8836%" y="453" width="0.0808%" height="15" fill="rgb(251,179,49)" fg:x="147" fg:w="1"/><text x="12.1336%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.8836%" y="437" width="0.0808%" height="15" fill="rgb(247,198,10)" fg:x="147" fg:w="1"/><text x="12.1336%" y="447.50"></text></g><g><title>&lt;plugins_rune::RunePluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="12.3686%" y="485" width="0.0808%" height="15" fill="rgb(220,65,29)" fg:x="153" fg:w="1"/><text x="12.6186%" y="495.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (101 samples, 8.16%)</title><rect x="4.3654%" y="565" width="8.1649%" height="15" fill="rgb(237,171,28)" fg:x="54" fg:w="101"/><text x="4.6154%" y="575.50">&lt;engine::do..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (101 samples, 8.16%)</title><rect x="4.3654%" y="549" width="8.1649%" height="15" fill="rgb(228,44,26)" fg:x="54" fg:w="101"/><text x="4.6154%" y="559.50">engine::dom..</text></g><g><title>engine::session::Session::new (101 samples, 8.16%)</title><rect x="4.3654%" y="533" width="8.1649%" height="15" fill="rgb(216,210,27)" fg:x="54" fg:w="101"/><text x="4.6154%" y="543.50">engine::ses..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (7 samples, 0.57%)</title><rect x="11.9644%" y="517" width="0.5659%" height="15" fill="rgb(252,10,17)" fg:x="148" fg:w="7"/><text x="12.2144%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="11.9644%" y="501" width="0.5659%" height="15" fill="rgb(214,172,30)" fg:x="148" fg:w="7"/><text x="12.2144%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.4495%" y="485" width="0.0808%" height="15" fill="rgb(253,130,48)" fg:x="154" fg:w="1"/><text x="12.6995%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.6112%" y="549" width="0.0808%" height="15" fill="rgb(226,99,43)" fg:x="156" fg:w="1"/><text x="12.8612%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.6920%" y="549" width="0.0808%" height="15" fill="rgb(239,111,26)" fg:x="157" fg:w="1"/><text x="12.9420%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="12.7728%" y="549" width="0.0808%" height="15" fill="rgb(240,27,53)" fg:x="158" fg:w="1"/><text x="13.0228%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.7728%" y="533" width="0.0808%" height="15" fill="rgb(254,163,12)" fg:x="158" fg:w="1"/><text x="13.0228%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="12.9345%" y="533" width="0.0808%" height="15" fill="rgb(225,51,48)" fg:x="160" fg:w="1"/><text x="13.1845%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9345%" y="517" width="0.0808%" height="15" fill="rgb(205,19,32)" fg:x="160" fg:w="1"/><text x="13.1845%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9345%" y="501" width="0.0808%" height="15" fill="rgb(218,119,26)" fg:x="160" fg:w="1"/><text x="13.1845%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.9345%" y="485" width="0.0808%" height="15" fill="rgb(231,173,33)" fg:x="160" fg:w="1"/><text x="13.1845%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.9345%" y="469" width="0.0808%" height="15" fill="rgb(241,100,29)" fg:x="160" fg:w="1"/><text x="13.1845%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.9345%" y="453" width="0.0808%" height="15" fill="rgb(250,194,34)" fg:x="160" fg:w="1"/><text x="13.1845%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.9345%" y="437" width="0.0808%" height="15" fill="rgb(215,23,50)" fg:x="160" fg:w="1"/><text x="13.1845%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.9345%" y="421" width="0.0808%" height="15" fill="rgb(206,49,37)" fg:x="160" fg:w="1"/><text x="13.1845%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.9345%" y="405" width="0.0808%" height="15" fill="rgb(247,39,21)" fg:x="160" fg:w="1"/><text x="13.1845%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.9345%" y="389" width="0.0808%" height="15" fill="rgb(209,220,15)" fg:x="160" fg:w="1"/><text x="13.1845%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.9345%" y="373" width="0.0808%" height="15" fill="rgb(206,41,33)" fg:x="160" fg:w="1"/><text x="13.1845%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.9345%" y="357" width="0.0808%" height="15" fill="rgb(221,225,45)" fg:x="160" fg:w="1"/><text x="13.1845%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9345%" y="341" width="0.0808%" height="15" fill="rgb(216,27,18)" fg:x="160" fg:w="1"/><text x="13.1845%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="13.0154%" y="469" width="0.0808%" height="15" fill="rgb(250,193,34)" fg:x="161" fg:w="1"/><text x="13.2654%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.0962%" y="453" width="0.0808%" height="15" fill="rgb(227,215,20)" fg:x="162" fg:w="1"/><text x="13.3462%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="13.0154%" y="501" width="0.2425%" height="15" fill="rgb(242,211,27)" fg:x="161" fg:w="3"/><text x="13.2654%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="13.0154%" y="485" width="0.2425%" height="15" fill="rgb(229,190,30)" fg:x="161" fg:w="3"/><text x="13.2654%" y="495.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="13.0962%" y="469" width="0.1617%" height="15" fill="rgb(253,31,29)" fg:x="162" fg:w="2"/><text x="13.3462%" y="479.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="13.1770%" y="453" width="0.0808%" height="15" fill="rgb(229,177,52)" fg:x="163" fg:w="1"/><text x="13.4270%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="13.4196%" y="405" width="0.1617%" height="15" fill="rgb(226,88,8)" fg:x="166" fg:w="2"/><text x="13.6696%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5004%" y="389" width="0.0808%" height="15" fill="rgb(214,55,27)" fg:x="167" fg:w="1"/><text x="13.7504%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="13.3387%" y="421" width="0.3234%" height="15" fill="rgb(233,202,5)" fg:x="165" fg:w="4"/><text x="13.5887%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.5812%" y="405" width="0.0808%" height="15" fill="rgb(251,49,30)" fg:x="168" fg:w="1"/><text x="13.8312%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5812%" y="389" width="0.0808%" height="15" fill="rgb(235,18,52)" fg:x="168" fg:w="1"/><text x="13.8312%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="13.2579%" y="453" width="0.4850%" height="15" fill="rgb(250,111,51)" fg:x="164" fg:w="6"/><text x="13.5079%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="13.2579%" y="437" width="0.4850%" height="15" fill="rgb(218,13,25)" fg:x="164" fg:w="6"/><text x="13.5079%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6621%" y="421" width="0.0808%" height="15" fill="rgb(248,96,7)" fg:x="169" fg:w="1"/><text x="13.9121%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="13.7429%" y="453" width="0.1617%" height="15" fill="rgb(217,31,15)" fg:x="170" fg:w="2"/><text x="13.9929%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="13.7429%" y="437" width="0.1617%" height="15" fill="rgb(228,59,49)" fg:x="170" fg:w="2"/><text x="13.9929%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="13.7429%" y="421" width="0.1617%" height="15" fill="rgb(210,152,38)" fg:x="170" fg:w="2"/><text x="13.9929%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="13.7429%" y="405" width="0.1617%" height="15" fill="rgb(206,71,11)" fg:x="170" fg:w="2"/><text x="13.9929%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.7429%" y="389" width="0.1617%" height="15" fill="rgb(244,199,5)" fg:x="170" fg:w="2"/><text x="13.9929%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.7429%" y="373" width="0.1617%" height="15" fill="rgb(253,49,1)" fg:x="170" fg:w="2"/><text x="13.9929%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.8238%" y="357" width="0.0808%" height="15" fill="rgb(225,206,40)" fg:x="171" fg:w="1"/><text x="14.0738%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8238%" y="341" width="0.0808%" height="15" fill="rgb(243,116,47)" fg:x="171" fg:w="1"/><text x="14.0738%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="13.9046%" y="421" width="0.3234%" height="15" fill="rgb(219,225,16)" fg:x="172" fg:w="4"/><text x="14.1546%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="13.9046%" y="405" width="0.3234%" height="15" fill="rgb(233,29,47)" fg:x="172" fg:w="4"/><text x="14.1546%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="13.9046%" y="389" width="0.3234%" height="15" fill="rgb(250,179,18)" fg:x="172" fg:w="4"/><text x="14.1546%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="13.9854%" y="373" width="0.2425%" height="15" fill="rgb(215,176,6)" fg:x="173" fg:w="3"/><text x="14.2354%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.1471%" y="357" width="0.0808%" height="15" fill="rgb(214,117,39)" fg:x="175" fg:w="1"/><text x="14.3971%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.1471%" y="341" width="0.0808%" height="15" fill="rgb(247,183,36)" fg:x="175" fg:w="1"/><text x="14.3971%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.1471%" y="325" width="0.0808%" height="15" fill="rgb(237,200,3)" fg:x="175" fg:w="1"/><text x="14.3971%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="13.9046%" y="437" width="0.4042%" height="15" fill="rgb(212,220,24)" fg:x="172" fg:w="5"/><text x="14.1546%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.2280%" y="421" width="0.0808%" height="15" fill="rgb(245,216,20)" fg:x="176" fg:w="1"/><text x="14.4780%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.2280%" y="405" width="0.0808%" height="15" fill="rgb(219,124,7)" fg:x="176" fg:w="1"/><text x="14.4780%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="14.3088%" y="421" width="0.4042%" height="15" fill="rgb(227,167,8)" fg:x="177" fg:w="5"/><text x="14.5588%" y="431.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="14.3088%" y="405" width="0.4042%" height="15" fill="rgb(241,37,2)" fg:x="177" fg:w="5"/><text x="14.5588%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="14.3897%" y="389" width="0.3234%" height="15" fill="rgb(238,134,33)" fg:x="178" fg:w="4"/><text x="14.6397%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="14.5513%" y="373" width="0.1617%" height="15" fill="rgb(248,48,27)" fg:x="180" fg:w="2"/><text x="14.8013%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="14.5513%" y="357" width="0.1617%" height="15" fill="rgb(212,14,16)" fg:x="180" fg:w="2"/><text x="14.8013%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="14.5513%" y="341" width="0.1617%" height="15" fill="rgb(217,205,37)" fg:x="180" fg:w="2"/><text x="14.8013%" y="351.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="14.5513%" y="325" width="0.1617%" height="15" fill="rgb(233,185,47)" fg:x="180" fg:w="2"/><text x="14.8013%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="14.7130%" y="405" width="0.2425%" height="15" fill="rgb(244,88,8)" fg:x="182" fg:w="3"/><text x="14.9630%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.7939%" y="389" width="0.1617%" height="15" fill="rgb(213,0,20)" fg:x="183" fg:w="2"/><text x="15.0439%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.8747%" y="373" width="0.0808%" height="15" fill="rgb(238,159,36)" fg:x="184" fg:w="1"/><text x="15.1247%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.8747%" y="357" width="0.0808%" height="15" fill="rgb(253,173,17)" fg:x="184" fg:w="1"/><text x="15.1247%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.3597%" y="341" width="0.0808%" height="15" fill="rgb(221,23,28)" fg:x="190" fg:w="1"/><text x="15.6097%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.3597%" y="325" width="0.0808%" height="15" fill="rgb(218,113,15)" fg:x="190" fg:w="1"/><text x="15.6097%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.3597%" y="309" width="0.0808%" height="15" fill="rgb(233,58,3)" fg:x="190" fg:w="1"/><text x="15.6097%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.3597%" y="293" width="0.0808%" height="15" fill="rgb(250,46,35)" fg:x="190" fg:w="1"/><text x="15.6097%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="15.0364%" y="389" width="0.4850%" height="15" fill="rgb(210,169,11)" fg:x="186" fg:w="6"/><text x="15.2864%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="15.1981%" y="373" width="0.3234%" height="15" fill="rgb(246,88,19)" fg:x="188" fg:w="4"/><text x="15.4481%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.3597%" y="357" width="0.1617%" height="15" fill="rgb(206,81,49)" fg:x="190" fg:w="2"/><text x="15.6097%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.4406%" y="341" width="0.0808%" height="15" fill="rgb(232,144,18)" fg:x="191" fg:w="1"/><text x="15.6906%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="15.6023%" y="373" width="0.1617%" height="15" fill="rgb(235,2,27)" fg:x="193" fg:w="2"/><text x="15.8523%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.6023%" y="357" width="0.1617%" height="15" fill="rgb(239,157,39)" fg:x="193" fg:w="2"/><text x="15.8523%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.6831%" y="341" width="0.0808%" height="15" fill="rgb(220,11,17)" fg:x="194" fg:w="1"/><text x="15.9331%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="15.5214%" y="389" width="0.3234%" height="15" fill="rgb(243,94,50)" fg:x="192" fg:w="4"/><text x="15.7714%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.7639%" y="373" width="0.0808%" height="15" fill="rgb(218,22,0)" fg:x="195" fg:w="1"/><text x="16.0139%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.7639%" y="357" width="0.0808%" height="15" fill="rgb(249,70,21)" fg:x="195" fg:w="1"/><text x="16.0139%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.7639%" y="341" width="0.0808%" height="15" fill="rgb(245,111,46)" fg:x="195" fg:w="1"/><text x="16.0139%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="14.9555%" y="405" width="0.9701%" height="15" fill="rgb(244,183,12)" fg:x="185" fg:w="12"/><text x="15.2055%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.8448%" y="389" width="0.0808%" height="15" fill="rgb(207,117,0)" fg:x="196" fg:w="1"/><text x="16.0948%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.8448%" y="373" width="0.0808%" height="15" fill="rgb(206,20,43)" fg:x="196" fg:w="1"/><text x="16.0948%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.8448%" y="357" width="0.0808%" height="15" fill="rgb(221,104,11)" fg:x="196" fg:w="1"/><text x="16.0948%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="14.7130%" y="421" width="1.2935%" height="15" fill="rgb(254,36,50)" fg:x="182" fg:w="16"/><text x="14.9630%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.9256%" y="405" width="0.0808%" height="15" fill="rgb(252,17,15)" fg:x="197" fg:w="1"/><text x="16.1756%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.9256%" y="389" width="0.0808%" height="15" fill="rgb(219,129,43)" fg:x="197" fg:w="1"/><text x="16.1756%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.34%)</title><rect x="13.9046%" y="453" width="2.3444%" height="15" fill="rgb(205,34,45)" fg:x="172" fg:w="29"/><text x="14.1546%" y="463.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.94%)</title><rect x="14.3088%" y="437" width="1.9402%" height="15" fill="rgb(251,201,32)" fg:x="177" fg:w="24"/><text x="14.5588%" y="447.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.0065%" y="421" width="0.2425%" height="15" fill="rgb(205,56,0)" fg:x="198" fg:w="3"/><text x="16.2565%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.1681%" y="405" width="0.0808%" height="15" fill="rgb(211,193,27)" fg:x="200" fg:w="1"/><text x="16.4181%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.1681%" y="389" width="0.0808%" height="15" fill="rgb(231,100,42)" fg:x="200" fg:w="1"/><text x="16.4181%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.1681%" y="373" width="0.0808%" height="15" fill="rgb(245,85,27)" fg:x="200" fg:w="1"/><text x="16.4181%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.32%)</title><rect x="16.2490%" y="437" width="0.3234%" height="15" fill="rgb(241,76,24)" fg:x="201" fg:w="4"/><text x="16.4990%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="16.4107%" y="421" width="0.1617%" height="15" fill="rgb(249,157,15)" fg:x="203" fg:w="2"/><text x="16.6607%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="16.4915%" y="405" width="0.0808%" height="15" fill="rgb(222,218,25)" fg:x="204" fg:w="1"/><text x="16.7415%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="16.6532%" y="405" width="0.4042%" height="15" fill="rgb(252,156,52)" fg:x="206" fg:w="5"/><text x="16.9032%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="16.8957%" y="389" width="0.1617%" height="15" fill="rgb(211,185,7)" fg:x="209" fg:w="2"/><text x="17.1457%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="17.0574%" y="405" width="0.0808%" height="15" fill="rgb(234,108,24)" fg:x="211" fg:w="1"/><text x="17.3074%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="17.0574%" y="389" width="0.0808%" height="15" fill="rgb(227,218,2)" fg:x="211" fg:w="1"/><text x="17.3074%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4616%" y="341" width="0.0808%" height="15" fill="rgb(224,0,36)" fg:x="216" fg:w="1"/><text x="17.7116%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.4616%" y="357" width="0.1617%" height="15" fill="rgb(233,201,10)" fg:x="216" fg:w="2"/><text x="17.7116%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="17.5424%" y="341" width="0.0808%" height="15" fill="rgb(252,209,14)" fg:x="217" fg:w="1"/><text x="17.7924%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.7041%" y="309" width="0.0808%" height="15" fill="rgb(205,93,49)" fg:x="219" fg:w="1"/><text x="17.9541%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="17.6233%" y="357" width="0.2425%" height="15" fill="rgb(234,116,45)" fg:x="218" fg:w="3"/><text x="17.8733%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="17.6233%" y="341" width="0.2425%" height="15" fill="rgb(248,89,35)" fg:x="218" fg:w="3"/><text x="17.8733%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="17.7041%" y="325" width="0.1617%" height="15" fill="rgb(233,167,45)" fg:x="219" fg:w="2"/><text x="17.9541%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7850%" y="309" width="0.0808%" height="15" fill="rgb(248,228,14)" fg:x="220" fg:w="1"/><text x="18.0350%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="17.7850%" y="293" width="0.0808%" height="15" fill="rgb(246,91,14)" fg:x="220" fg:w="1"/><text x="18.0350%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7850%" y="277" width="0.0808%" height="15" fill="rgb(227,142,5)" fg:x="220" fg:w="1"/><text x="18.0350%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="17.7850%" y="261" width="0.0808%" height="15" fill="rgb(221,63,33)" fg:x="220" fg:w="1"/><text x="18.0350%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.7850%" y="245" width="0.0808%" height="15" fill="rgb(233,49,0)" fg:x="220" fg:w="1"/><text x="18.0350%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="17.9466%" y="341" width="0.0808%" height="15" fill="rgb(251,115,38)" fg:x="222" fg:w="1"/><text x="18.1966%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0275%" y="325" width="0.0808%" height="15" fill="rgb(231,214,32)" fg:x="223" fg:w="1"/><text x="18.2775%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="18.2700%" y="309" width="0.3234%" height="15" fill="rgb(248,73,46)" fg:x="226" fg:w="4"/><text x="18.5200%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="18.2700%" y="293" width="0.3234%" height="15" fill="rgb(237,156,4)" fg:x="226" fg:w="4"/><text x="18.5200%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.37%)</title><rect x="17.2999%" y="389" width="1.3743%" height="15" fill="rgb(227,132,2)" fg:x="214" fg:w="17"/><text x="17.5499%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.29%)</title><rect x="17.3808%" y="373" width="1.2935%" height="15" fill="rgb(248,161,9)" fg:x="215" fg:w="16"/><text x="17.6308%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="17.8658%" y="357" width="0.8084%" height="15" fill="rgb(238,77,38)" fg:x="221" fg:w="10"/><text x="18.1158%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="18.0275%" y="341" width="0.6467%" height="15" fill="rgb(222,166,40)" fg:x="223" fg:w="8"/><text x="18.2775%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="18.1083%" y="325" width="0.5659%" height="15" fill="rgb(214,168,45)" fg:x="224" fg:w="7"/><text x="18.3583%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5934%" y="309" width="0.0808%" height="15" fill="rgb(226,64,37)" fg:x="230" fg:w="1"/><text x="18.8434%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6742%" y="389" width="0.0808%" height="15" fill="rgb(232,210,43)" fg:x="231" fg:w="1"/><text x="18.9242%" y="399.50"></text></g><g><title>engine::session::Session::flush (74 samples, 5.98%)</title><rect x="12.8537%" y="549" width="5.9822%" height="15" fill="rgb(214,76,33)" fg:x="159" fg:w="74"/><text x="13.1037%" y="559.50">engine::..</text></g><g><title>engine::session::state::State::close (72 samples, 5.82%)</title><rect x="13.0154%" y="533" width="5.8205%" height="15" fill="rgb(210,78,5)" fg:x="161" fg:w="72"/><text x="13.2654%" y="543.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (72 samples, 5.82%)</title><rect x="13.0154%" y="517" width="5.8205%" height="15" fill="rgb(211,107,37)" fg:x="161" fg:w="72"/><text x="13.2654%" y="527.50">engine:..</text></g><g><title>core::iter::adapters::try_process (69 samples, 5.58%)</title><rect x="13.2579%" y="501" width="5.5780%" height="15" fill="rgb(249,67,16)" fg:x="164" fg:w="69"/><text x="13.5079%" y="511.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 5.58%)</title><rect x="13.2579%" y="485" width="5.5780%" height="15" fill="rgb(222,114,31)" fg:x="164" fg:w="69"/><text x="13.5079%" y="495.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (69 samples, 5.58%)</title><rect x="13.2579%" y="469" width="5.5780%" height="15" fill="rgb(242,118,19)" fg:x="164" fg:w="69"/><text x="13.5079%" y="479.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (32 samples, 2.59%)</title><rect x="16.2490%" y="453" width="2.5869%" height="15" fill="rgb(223,115,1)" fg:x="201" fg:w="32"/><text x="16.4990%" y="463.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (28 samples, 2.26%)</title><rect x="16.5724%" y="437" width="2.2635%" height="15" fill="rgb(241,182,54)" fg:x="205" fg:w="28"/><text x="16.8224%" y="447.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.26%)</title><rect x="16.5724%" y="421" width="2.2635%" height="15" fill="rgb(244,166,36)" fg:x="205" fg:w="28"/><text x="16.8224%" y="431.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (21 samples, 1.70%)</title><rect x="17.1382%" y="405" width="1.6977%" height="15" fill="rgb(241,52,43)" fg:x="212" fg:w="21"/><text x="17.3882%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.7551%" y="389" width="0.0808%" height="15" fill="rgb(236,82,9)" fg:x="232" fg:w="1"/><text x="19.0051%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.9167%" y="469" width="0.0808%" height="15" fill="rgb(241,119,0)" fg:x="234" fg:w="1"/><text x="19.1667%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="18.8359%" y="517" width="0.2425%" height="15" fill="rgb(221,19,22)" fg:x="233" fg:w="3"/><text x="19.0859%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.9167%" y="501" width="0.1617%" height="15" fill="rgb(254,144,35)" fg:x="234" fg:w="2"/><text x="19.1667%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.9167%" y="485" width="0.1617%" height="15" fill="rgb(246,132,30)" fg:x="234" fg:w="2"/><text x="19.1667%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.9976%" y="469" width="0.0808%" height="15" fill="rgb(234,69,28)" fg:x="235" fg:w="1"/><text x="19.2476%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9976%" y="453" width="0.0808%" height="15" fill="rgb(219,106,47)" fg:x="235" fg:w="1"/><text x="19.2476%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="19.0784%" y="517" width="0.0808%" height="15" fill="rgb(218,79,24)" fg:x="236" fg:w="1"/><text x="19.3284%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.0784%" y="501" width="0.0808%" height="15" fill="rgb(225,26,21)" fg:x="236" fg:w="1"/><text x="19.3284%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="18.8359%" y="549" width="0.4042%" height="15" fill="rgb(217,68,49)" fg:x="233" fg:w="5"/><text x="19.0859%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (5 samples, 0.40%)</title><rect x="18.8359%" y="533" width="0.4042%" height="15" fill="rgb(220,204,28)" fg:x="233" fg:w="5"/><text x="19.0859%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.1593%" y="517" width="0.0808%" height="15" fill="rgb(237,208,43)" fg:x="237" fg:w="1"/><text x="19.4093%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.1593%" y="501" width="0.0808%" height="15" fill="rgb(213,97,42)" fg:x="237" fg:w="1"/><text x="19.4093%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.1593%" y="485" width="0.0808%" height="15" fill="rgb(238,96,52)" fg:x="237" fg:w="1"/><text x="19.4093%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="19.3209%" y="501" width="0.0808%" height="15" fill="rgb(228,14,13)" fg:x="239" fg:w="1"/><text x="19.5709%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="19.3209%" y="485" width="0.0808%" height="15" fill="rgb(219,123,13)" fg:x="239" fg:w="1"/><text x="19.5709%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="19.3209%" y="517" width="0.1617%" height="15" fill="rgb(216,144,17)" fg:x="239" fg:w="2"/><text x="19.5709%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="19.4018%" y="501" width="0.0808%" height="15" fill="rgb(230,228,29)" fg:x="240" fg:w="1"/><text x="19.6518%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="19.4018%" y="485" width="0.0808%" height="15" fill="rgb(233,18,5)" fg:x="240" fg:w="1"/><text x="19.6518%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.4018%" y="469" width="0.0808%" height="15" fill="rgb(233,197,12)" fg:x="240" fg:w="1"/><text x="19.6518%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4018%" y="453" width="0.0808%" height="15" fill="rgb(234,140,29)" fg:x="240" fg:w="1"/><text x="19.6518%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4018%" y="437" width="0.0808%" height="15" fill="rgb(233,113,19)" fg:x="240" fg:w="1"/><text x="19.6518%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.4018%" y="421" width="0.0808%" height="15" fill="rgb(246,209,13)" fg:x="240" fg:w="1"/><text x="19.6518%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.4826%" y="453" width="0.0808%" height="15" fill="rgb(242,79,54)" fg:x="241" fg:w="1"/><text x="19.7326%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="19.4826%" y="469" width="0.1617%" height="15" fill="rgb(219,73,16)" fg:x="241" fg:w="2"/><text x="19.7326%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.5635%" y="453" width="0.0808%" height="15" fill="rgb(224,52,10)" fg:x="242" fg:w="1"/><text x="19.8135%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.5635%" y="437" width="0.0808%" height="15" fill="rgb(237,179,5)" fg:x="242" fg:w="1"/><text x="19.8135%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.5635%" y="421" width="0.0808%" height="15" fill="rgb(231,20,6)" fg:x="242" fg:w="1"/><text x="19.8135%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.5635%" y="405" width="0.0808%" height="15" fill="rgb(253,171,45)" fg:x="242" fg:w="1"/><text x="19.8135%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.5635%" y="389" width="0.0808%" height="15" fill="rgb(230,75,49)" fg:x="242" fg:w="1"/><text x="19.8135%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.5635%" y="373" width="0.0808%" height="15" fill="rgb(216,83,46)" fg:x="242" fg:w="1"/><text x="19.8135%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.6443%" y="389" width="0.0808%" height="15" fill="rgb(236,56,9)" fg:x="243" fg:w="1"/><text x="19.8943%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="19.4826%" y="501" width="0.3234%" height="15" fill="rgb(215,28,34)" fg:x="241" fg:w="4"/><text x="19.7326%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (4 samples, 0.32%)</title><rect x="19.4826%" y="485" width="0.3234%" height="15" fill="rgb(230,222,20)" fg:x="241" fg:w="4"/><text x="19.7326%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="19.6443%" y="469" width="0.1617%" height="15" fill="rgb(235,209,51)" fg:x="243" fg:w="2"/><text x="19.8943%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.6443%" y="453" width="0.1617%" height="15" fill="rgb(235,167,1)" fg:x="243" fg:w="2"/><text x="19.8943%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="19.6443%" y="437" width="0.1617%" height="15" fill="rgb(248,220,0)" fg:x="243" fg:w="2"/><text x="19.8943%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="19.6443%" y="421" width="0.1617%" height="15" fill="rgb(239,0,18)" fg:x="243" fg:w="2"/><text x="19.8943%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.6443%" y="405" width="0.1617%" height="15" fill="rgb(229,179,11)" fg:x="243" fg:w="2"/><text x="19.8943%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.7251%" y="389" width="0.0808%" height="15" fill="rgb(226,116,53)" fg:x="244" fg:w="1"/><text x="19.9751%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8868%" y="469" width="0.0808%" height="15" fill="rgb(218,1,49)" fg:x="246" fg:w="1"/><text x="20.1368%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9677%" y="469" width="0.0808%" height="15" fill="rgb(208,184,47)" fg:x="247" fg:w="1"/><text x="20.2177%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="20.0485%" y="469" width="0.1617%" height="15" fill="rgb(238,174,3)" fg:x="248" fg:w="2"/><text x="20.2985%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="20.1293%" y="453" width="0.0808%" height="15" fill="rgb(247,188,6)" fg:x="249" fg:w="1"/><text x="20.3793%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.1293%" y="437" width="0.0808%" height="15" fill="rgb(211,165,46)" fg:x="249" fg:w="1"/><text x="20.3793%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1293%" y="421" width="0.0808%" height="15" fill="rgb(222,190,10)" fg:x="249" fg:w="1"/><text x="20.3793%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.1293%" y="405" width="0.0808%" height="15" fill="rgb(206,185,3)" fg:x="249" fg:w="1"/><text x="20.3793%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1293%" y="389" width="0.0808%" height="15" fill="rgb(244,125,37)" fg:x="249" fg:w="1"/><text x="20.3793%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.1293%" y="373" width="0.0808%" height="15" fill="rgb(211,43,7)" fg:x="249" fg:w="1"/><text x="20.3793%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1293%" y="357" width="0.0808%" height="15" fill="rgb(250,41,42)" fg:x="249" fg:w="1"/><text x="20.3793%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1293%" y="341" width="0.0808%" height="15" fill="rgb(254,54,42)" fg:x="249" fg:w="1"/><text x="20.3793%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.97%)</title><rect x="19.4826%" y="517" width="0.9701%" height="15" fill="rgb(213,71,43)" fg:x="241" fg:w="12"/><text x="19.7326%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.65%)</title><rect x="19.8060%" y="501" width="0.6467%" height="15" fill="rgb(249,3,44)" fg:x="245" fg:w="8"/><text x="20.0560%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.57%)</title><rect x="19.8868%" y="485" width="0.5659%" height="15" fill="rgb(229,80,41)" fg:x="246" fg:w="7"/><text x="20.1368%" y="495.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="20.2102%" y="469" width="0.2425%" height="15" fill="rgb(231,25,28)" fg:x="250" fg:w="3"/><text x="20.4602%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.3719%" y="453" width="0.0808%" height="15" fill="rgb(208,79,48)" fg:x="252" fg:w="1"/><text x="20.6219%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.3719%" y="437" width="0.0808%" height="15" fill="rgb(207,196,38)" fg:x="252" fg:w="1"/><text x="20.6219%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.21%)</title><rect x="19.3209%" y="533" width="1.2126%" height="15" fill="rgb(228,105,49)" fg:x="239" fg:w="15"/><text x="19.5709%" y="543.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="20.4527%" y="517" width="0.0808%" height="15" fill="rgb(237,99,15)" fg:x="253" fg:w="1"/><text x="20.7027%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="20.5335%" y="533" width="0.2425%" height="15" fill="rgb(224,207,46)" fg:x="254" fg:w="3"/><text x="20.7835%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6952%" y="517" width="0.0808%" height="15" fill="rgb(249,117,50)" fg:x="256" fg:w="1"/><text x="20.9452%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6952%" y="501" width="0.0808%" height="15" fill="rgb(248,17,13)" fg:x="256" fg:w="1"/><text x="20.9452%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.7761%" y="517" width="0.0808%" height="15" fill="rgb(228,187,36)" fg:x="257" fg:w="1"/><text x="21.0261%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.7761%" y="501" width="0.0808%" height="15" fill="rgb(234,132,20)" fg:x="257" fg:w="1"/><text x="21.0261%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="20.7761%" y="533" width="0.1617%" height="15" fill="rgb(209,170,46)" fg:x="257" fg:w="2"/><text x="21.0261%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.8569%" y="517" width="0.0808%" height="15" fill="rgb(237,23,19)" fg:x="258" fg:w="1"/><text x="21.1069%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8569%" y="501" width="0.0808%" height="15" fill="rgb(227,21,26)" fg:x="258" fg:w="1"/><text x="21.1069%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.8569%" y="485" width="0.0808%" height="15" fill="rgb(222,220,48)" fg:x="258" fg:w="1"/><text x="21.1069%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8569%" y="469" width="0.0808%" height="15" fill="rgb(214,9,16)" fg:x="258" fg:w="1"/><text x="21.1069%" y="479.50"></text></g><g><title>plugins_core::build::Build::save (22 samples, 1.78%)</title><rect x="19.2401%" y="549" width="1.7785%" height="15" fill="rgb(209,73,30)" fg:x="238" fg:w="22"/><text x="19.4901%" y="559.50">p..</text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="20.9378%" y="533" width="0.0808%" height="15" fill="rgb(207,20,33)" fg:x="259" fg:w="1"/><text x="21.1878%" y="543.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (1 samples, 0.08%)</title><rect x="21.0186%" y="549" width="0.0808%" height="15" fill="rgb(219,153,12)" fg:x="260" fg:w="1"/><text x="21.2686%" y="559.50"></text></g><g><title>plugins_core::tools::set_quantity (1 samples, 0.08%)</title><rect x="21.0186%" y="533" width="0.0808%" height="15" fill="rgb(235,97,25)" fg:x="260" fg:w="1"/><text x="21.2686%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="21.0186%" y="517" width="0.0808%" height="15" fill="rgb(244,30,34)" fg:x="260" fg:w="1"/><text x="21.2686%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="21.0186%" y="501" width="0.0808%" height="15" fill="rgb(214,106,45)" fg:x="260" fg:w="1"/><text x="21.2686%" y="511.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="21.0186%" y="485" width="0.0808%" height="15" fill="rgb(226,41,9)" fg:x="260" fg:w="1"/><text x="21.2686%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.1803%" y="421" width="0.0808%" height="15" fill="rgb(253,139,29)" fg:x="262" fg:w="1"/><text x="21.4303%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.1803%" y="405" width="0.0808%" height="15" fill="rgb(213,205,39)" fg:x="262" fg:w="1"/><text x="21.4303%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="21.1803%" y="485" width="0.1617%" height="15" fill="rgb(209,27,10)" fg:x="262" fg:w="2"/><text x="21.4303%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="21.1803%" y="469" width="0.1617%" height="15" fill="rgb(249,142,16)" fg:x="262" fg:w="2"/><text x="21.4303%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.1803%" y="453" width="0.1617%" height="15" fill="rgb(242,65,12)" fg:x="262" fg:w="2"/><text x="21.4303%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.1803%" y="437" width="0.1617%" height="15" fill="rgb(232,48,10)" fg:x="262" fg:w="2"/><text x="21.4303%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.2611%" y="421" width="0.0808%" height="15" fill="rgb(253,67,19)" fg:x="263" fg:w="1"/><text x="21.5111%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.2611%" y="405" width="0.0808%" height="15" fill="rgb(227,93,29)" fg:x="263" fg:w="1"/><text x="21.5111%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="21.2611%" y="389" width="0.0808%" height="15" fill="rgb(226,189,53)" fg:x="263" fg:w="1"/><text x="21.5111%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="21.1803%" y="517" width="0.2425%" height="15" fill="rgb(223,224,1)" fg:x="262" fg:w="3"/><text x="21.4303%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="21.1803%" y="501" width="0.2425%" height="15" fill="rgb(221,84,32)" fg:x="262" fg:w="3"/><text x="21.4303%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="21.3420%" y="485" width="0.0808%" height="15" fill="rgb(214,189,28)" fg:x="264" fg:w="1"/><text x="21.5920%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="21.3420%" y="469" width="0.0808%" height="15" fill="rgb(234,7,52)" fg:x="264" fg:w="1"/><text x="21.5920%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.4228%" y="485" width="0.0808%" height="15" fill="rgb(249,73,31)" fg:x="265" fg:w="1"/><text x="21.6728%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="21.4228%" y="469" width="0.0808%" height="15" fill="rgb(253,153,41)" fg:x="265" fg:w="1"/><text x="21.6728%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="21.4228%" y="501" width="0.1617%" height="15" fill="rgb(249,52,34)" fg:x="265" fg:w="2"/><text x="21.6728%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.5036%" y="485" width="0.0808%" height="15" fill="rgb(236,177,47)" fg:x="266" fg:w="1"/><text x="21.7536%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.5036%" y="469" width="0.0808%" height="15" fill="rgb(252,185,45)" fg:x="266" fg:w="1"/><text x="21.7536%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="21.5036%" y="453" width="0.0808%" height="15" fill="rgb(251,15,30)" fg:x="266" fg:w="1"/><text x="21.7536%" y="463.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="21.4228%" y="517" width="0.2425%" height="15" fill="rgb(233,31,4)" fg:x="265" fg:w="3"/><text x="21.6728%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="21.5845%" y="501" width="0.0808%" height="15" fill="rgb(254,44,24)" fg:x="267" fg:w="1"/><text x="21.8345%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.5845%" y="485" width="0.0808%" height="15" fill="rgb(218,54,1)" fg:x="267" fg:w="1"/><text x="21.8345%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.5845%" y="469" width="0.0808%" height="15" fill="rgb(243,209,39)" fg:x="267" fg:w="1"/><text x="21.8345%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="21.5845%" y="453" width="0.0808%" height="15" fill="rgb(206,75,33)" fg:x="267" fg:w="1"/><text x="21.8345%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.5845%" y="437" width="0.0808%" height="15" fill="rgb(223,108,18)" fg:x="267" fg:w="1"/><text x="21.8345%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8270%" y="485" width="0.0808%" height="15" fill="rgb(244,89,31)" fg:x="270" fg:w="1"/><text x="22.0770%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8270%" y="469" width="0.0808%" height="15" fill="rgb(222,167,27)" fg:x="270" fg:w="1"/><text x="22.0770%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8270%" y="453" width="0.0808%" height="15" fill="rgb(247,41,16)" fg:x="270" fg:w="1"/><text x="22.0770%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.8270%" y="437" width="0.0808%" height="15" fill="rgb(233,168,40)" fg:x="270" fg:w="1"/><text x="22.0770%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.8270%" y="421" width="0.0808%" height="15" fill="rgb(205,211,8)" fg:x="270" fg:w="1"/><text x="22.0770%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.8270%" y="405" width="0.0808%" height="15" fill="rgb(238,105,11)" fg:x="270" fg:w="1"/><text x="22.0770%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8270%" y="389" width="0.0808%" height="15" fill="rgb(223,142,52)" fg:x="270" fg:w="1"/><text x="22.0770%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8270%" y="373" width="0.0808%" height="15" fill="rgb(238,51,33)" fg:x="270" fg:w="1"/><text x="22.0770%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.8270%" y="357" width="0.0808%" height="15" fill="rgb(231,188,43)" fg:x="270" fg:w="1"/><text x="22.0770%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.8270%" y="341" width="0.0808%" height="15" fill="rgb(216,92,17)" fg:x="270" fg:w="1"/><text x="22.0770%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.8270%" y="325" width="0.0808%" height="15" fill="rgb(228,2,40)" fg:x="270" fg:w="1"/><text x="22.0770%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.8270%" y="309" width="0.0808%" height="15" fill="rgb(226,73,15)" fg:x="270" fg:w="1"/><text x="22.0770%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.8270%" y="293" width="0.0808%" height="15" fill="rgb(227,66,46)" fg:x="270" fg:w="1"/><text x="22.0770%" y="303.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="21.7462%" y="501" width="0.2425%" height="15" fill="rgb(209,71,6)" fg:x="269" fg:w="3"/><text x="21.9962%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.9078%" y="485" width="0.0808%" height="15" fill="rgb(246,100,25)" fg:x="271" fg:w="1"/><text x="22.1578%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9078%" y="469" width="0.0808%" height="15" fill="rgb(248,185,27)" fg:x="271" fg:w="1"/><text x="22.1578%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.9078%" y="453" width="0.0808%" height="15" fill="rgb(225,118,47)" fg:x="271" fg:w="1"/><text x="22.1578%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9078%" y="437" width="0.0808%" height="15" fill="rgb(220,185,44)" fg:x="271" fg:w="1"/><text x="22.1578%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="21.9887%" y="501" width="0.1617%" height="15" fill="rgb(227,95,24)" fg:x="272" fg:w="2"/><text x="22.2387%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.0695%" y="485" width="0.0808%" height="15" fill="rgb(252,84,24)" fg:x="273" fg:w="1"/><text x="22.3195%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1504%" y="437" width="0.0808%" height="15" fill="rgb(240,34,44)" fg:x="274" fg:w="1"/><text x="22.4004%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1504%" y="421" width="0.0808%" height="15" fill="rgb(209,72,54)" fg:x="274" fg:w="1"/><text x="22.4004%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1504%" y="405" width="0.0808%" height="15" fill="rgb(226,19,45)" fg:x="274" fg:w="1"/><text x="22.4004%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.1504%" y="389" width="0.0808%" height="15" fill="rgb(246,7,45)" fg:x="274" fg:w="1"/><text x="22.4004%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.1504%" y="373" width="0.0808%" height="15" fill="rgb(225,45,2)" fg:x="274" fg:w="1"/><text x="22.4004%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.1504%" y="357" width="0.0808%" height="15" fill="rgb(221,80,29)" fg:x="274" fg:w="1"/><text x="22.4004%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.1504%" y="341" width="0.0808%" height="15" fill="rgb(228,11,19)" fg:x="274" fg:w="1"/><text x="22.4004%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.1504%" y="325" width="0.0808%" height="15" fill="rgb(243,17,21)" fg:x="274" fg:w="1"/><text x="22.4004%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.1504%" y="309" width="0.0808%" height="15" fill="rgb(243,88,8)" fg:x="274" fg:w="1"/><text x="22.4004%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.1504%" y="293" width="0.0808%" height="15" fill="rgb(214,17,9)" fg:x="274" fg:w="1"/><text x="22.4004%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.1504%" y="277" width="0.0808%" height="15" fill="rgb(232,169,15)" fg:x="274" fg:w="1"/><text x="22.4004%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.1504%" y="261" width="0.0808%" height="15" fill="rgb(232,86,53)" fg:x="274" fg:w="1"/><text x="22.4004%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.1504%" y="245" width="0.0808%" height="15" fill="rgb(222,100,4)" fg:x="274" fg:w="1"/><text x="22.4004%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.1504%" y="229" width="0.0808%" height="15" fill="rgb(253,151,38)" fg:x="274" fg:w="1"/><text x="22.4004%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.1504%" y="213" width="0.0808%" height="15" fill="rgb(238,215,29)" fg:x="274" fg:w="1"/><text x="22.4004%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="22.1504%" y="453" width="0.1617%" height="15" fill="rgb(205,128,53)" fg:x="274" fg:w="2"/><text x="22.4004%" y="463.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="22.2312%" y="437" width="0.0808%" height="15" fill="rgb(248,183,14)" fg:x="275" fg:w="1"/><text x="22.4812%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="22.1504%" y="469" width="0.2425%" height="15" fill="rgb(244,172,35)" fg:x="274" fg:w="3"/><text x="22.4004%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.3120%" y="453" width="0.0808%" height="15" fill="rgb(234,93,19)" fg:x="276" fg:w="1"/><text x="22.5620%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.4737%" y="437" width="0.0808%" height="15" fill="rgb(227,109,7)" fg:x="278" fg:w="1"/><text x="22.7237%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.4737%" y="421" width="0.0808%" height="15" fill="rgb(233,136,54)" fg:x="278" fg:w="1"/><text x="22.7237%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (12 samples, 0.97%)</title><rect x="21.6653%" y="517" width="0.9701%" height="15" fill="rgb(233,19,40)" fg:x="268" fg:w="12"/><text x="21.9153%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.49%)</title><rect x="22.1504%" y="501" width="0.4850%" height="15" fill="rgb(247,41,18)" fg:x="274" fg:w="6"/><text x="22.4004%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.49%)</title><rect x="22.1504%" y="485" width="0.4850%" height="15" fill="rgb(220,34,34)" fg:x="274" fg:w="6"/><text x="22.4004%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="22.3929%" y="469" width="0.2425%" height="15" fill="rgb(222,135,32)" fg:x="277" fg:w="3"/><text x="22.6429%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="22.4737%" y="453" width="0.1617%" height="15" fill="rgb(214,80,19)" fg:x="278" fg:w="2"/><text x="22.7237%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5546%" y="437" width="0.0808%" height="15" fill="rgb(234,54,46)" fg:x="279" fg:w="1"/><text x="22.8046%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5546%" y="421" width="0.0808%" height="15" fill="rgb(251,48,23)" fg:x="279" fg:w="1"/><text x="22.8046%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.5546%" y="405" width="0.0808%" height="15" fill="rgb(254,109,52)" fg:x="279" fg:w="1"/><text x="22.8046%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5546%" y="389" width="0.0808%" height="15" fill="rgb(240,186,19)" fg:x="279" fg:w="1"/><text x="22.8046%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5546%" y="373" width="0.0808%" height="15" fill="rgb(246,187,17)" fg:x="279" fg:w="1"/><text x="22.8046%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5546%" y="357" width="0.0808%" height="15" fill="rgb(212,21,5)" fg:x="279" fg:w="1"/><text x="22.8046%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="22.7971%" y="469" width="0.0808%" height="15" fill="rgb(225,185,18)" fg:x="282" fg:w="1"/><text x="23.0471%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (24 samples, 1.94%)</title><rect x="21.0994%" y="549" width="1.9402%" height="15" fill="rgb(245,114,17)" fg:x="261" fg:w="24"/><text x="21.3494%" y="559.50">p..</text></g><g><title>plugins_core::tools::set_container (24 samples, 1.94%)</title><rect x="21.0994%" y="533" width="1.9402%" height="15" fill="rgb(223,164,24)" fg:x="261" fg:w="24"/><text x="21.3494%" y="543.50">p..</text></g><g><title>plugins_core::location::model::Location::set (5 samples, 0.40%)</title><rect x="22.6354%" y="517" width="0.4042%" height="15" fill="rgb(211,228,3)" fg:x="280" fg:w="5"/><text x="22.8854%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="22.7971%" y="501" width="0.2425%" height="15" fill="rgb(223,16,38)" fg:x="282" fg:w="3"/><text x="23.0471%" y="511.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="22.7971%" y="485" width="0.2425%" height="15" fill="rgb(207,31,54)" fg:x="282" fg:w="3"/><text x="23.0471%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.8779%" y="469" width="0.1617%" height="15" fill="rgb(220,39,11)" fg:x="283" fg:w="2"/><text x="23.1279%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="22.8779%" y="453" width="0.1617%" height="15" fill="rgb(235,185,0)" fg:x="283" fg:w="2"/><text x="23.1279%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.8779%" y="437" width="0.1617%" height="15" fill="rgb(249,39,18)" fg:x="283" fg:w="2"/><text x="23.1279%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.8779%" y="421" width="0.1617%" height="15" fill="rgb(240,110,33)" fg:x="283" fg:w="2"/><text x="23.1279%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.8779%" y="405" width="0.1617%" height="15" fill="rgb(210,92,42)" fg:x="283" fg:w="2"/><text x="23.1279%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="22.8779%" y="389" width="0.1617%" height="15" fill="rgb(218,215,28)" fg:x="283" fg:w="2"/><text x="23.1279%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="23.0396%" y="533" width="0.1617%" height="15" fill="rgb(238,215,36)" fg:x="285" fg:w="2"/><text x="23.2896%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="23.1205%" y="517" width="0.0808%" height="15" fill="rgb(220,31,10)" fg:x="286" fg:w="1"/><text x="23.3705%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.1205%" y="501" width="0.0808%" height="15" fill="rgb(212,93,14)" fg:x="286" fg:w="1"/><text x="23.3705%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.1205%" y="485" width="0.0808%" height="15" fill="rgb(254,207,2)" fg:x="286" fg:w="1"/><text x="23.3705%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="23.2013%" y="533" width="0.1617%" height="15" fill="rgb(205,57,44)" fg:x="287" fg:w="2"/><text x="23.4513%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="23.2013%" y="517" width="0.1617%" height="15" fill="rgb(226,151,19)" fg:x="287" fg:w="2"/><text x="23.4513%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="23.2013%" y="501" width="0.1617%" height="15" fill="rgb(230,72,30)" fg:x="287" fg:w="2"/><text x="23.4513%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.2013%" y="485" width="0.1617%" height="15" fill="rgb(244,0,8)" fg:x="287" fg:w="2"/><text x="23.4513%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.2821%" y="469" width="0.0808%" height="15" fill="rgb(230,192,6)" fg:x="288" fg:w="1"/><text x="23.5321%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.2821%" y="453" width="0.0808%" height="15" fill="rgb(233,207,13)" fg:x="288" fg:w="1"/><text x="23.5321%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="23.3630%" y="533" width="0.1617%" height="15" fill="rgb(206,227,7)" fg:x="289" fg:w="2"/><text x="23.6130%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.4438%" y="517" width="0.0808%" height="15" fill="rgb(213,217,25)" fg:x="290" fg:w="1"/><text x="23.6938%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.4438%" y="501" width="0.0808%" height="15" fill="rgb(249,75,4)" fg:x="290" fg:w="1"/><text x="23.6938%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.4438%" y="485" width="0.0808%" height="15" fill="rgb(225,114,18)" fg:x="290" fg:w="1"/><text x="23.6938%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.4438%" y="469" width="0.0808%" height="15" fill="rgb(211,162,40)" fg:x="290" fg:w="1"/><text x="23.6938%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.4438%" y="453" width="0.0808%" height="15" fill="rgb(206,49,29)" fg:x="290" fg:w="1"/><text x="23.6938%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.4438%" y="437" width="0.0808%" height="15" fill="rgb(244,8,6)" fg:x="290" fg:w="1"/><text x="23.6938%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.4438%" y="421" width="0.0808%" height="15" fill="rgb(231,194,28)" fg:x="290" fg:w="1"/><text x="23.6938%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.4438%" y="405" width="0.0808%" height="15" fill="rgb(210,69,5)" fg:x="290" fg:w="1"/><text x="23.6938%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.4438%" y="389" width="0.0808%" height="15" fill="rgb(216,186,12)" fg:x="290" fg:w="1"/><text x="23.6938%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.4438%" y="373" width="0.0808%" height="15" fill="rgb(238,61,15)" fg:x="290" fg:w="1"/><text x="23.6938%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.4438%" y="357" width="0.0808%" height="15" fill="rgb(226,104,1)" fg:x="290" fg:w="1"/><text x="23.6938%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4438%" y="341" width="0.0808%" height="15" fill="rgb(229,128,15)" fg:x="290" fg:w="1"/><text x="23.6938%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="23.5247%" y="533" width="0.0808%" height="15" fill="rgb(247,110,15)" fg:x="291" fg:w="1"/><text x="23.7747%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="23.5247%" y="517" width="0.0808%" height="15" fill="rgb(210,74,48)" fg:x="291" fg:w="1"/><text x="23.7747%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.5247%" y="501" width="0.0808%" height="15" fill="rgb(246,121,10)" fg:x="291" fg:w="1"/><text x="23.7747%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5247%" y="485" width="0.0808%" height="15" fill="rgb(214,156,37)" fg:x="291" fg:w="1"/><text x="23.7747%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6055%" y="421" width="0.0808%" height="15" fill="rgb(214,210,34)" fg:x="292" fg:w="1"/><text x="23.8555%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="23.6055%" y="437" width="0.1617%" height="15" fill="rgb(237,93,35)" fg:x="292" fg:w="2"/><text x="23.8555%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.6863%" y="421" width="0.0808%" height="15" fill="rgb(206,36,8)" fg:x="293" fg:w="1"/><text x="23.9363%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6863%" y="405" width="0.0808%" height="15" fill="rgb(208,151,12)" fg:x="293" fg:w="1"/><text x="23.9363%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.6863%" y="389" width="0.0808%" height="15" fill="rgb(225,133,52)" fg:x="293" fg:w="1"/><text x="23.9363%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6863%" y="373" width="0.0808%" height="15" fill="rgb(231,71,53)" fg:x="293" fg:w="1"/><text x="23.9363%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.6863%" y="357" width="0.0808%" height="15" fill="rgb(243,76,21)" fg:x="293" fg:w="1"/><text x="23.9363%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6863%" y="341" width="0.0808%" height="15" fill="rgb(252,144,3)" fg:x="293" fg:w="1"/><text x="23.9363%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.6863%" y="325" width="0.0808%" height="15" fill="rgb(231,199,10)" fg:x="293" fg:w="1"/><text x="23.9363%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6863%" y="309" width="0.0808%" height="15" fill="rgb(215,18,11)" fg:x="293" fg:w="1"/><text x="23.9363%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="23.6055%" y="533" width="0.2425%" height="15" fill="rgb(241,65,24)" fg:x="292" fg:w="3"/><text x="23.8555%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="23.6055%" y="517" width="0.2425%" height="15" fill="rgb(251,192,38)" fg:x="292" fg:w="3"/><text x="23.8555%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="23.6055%" y="501" width="0.2425%" height="15" fill="rgb(205,9,35)" fg:x="292" fg:w="3"/><text x="23.8555%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="23.6055%" y="485" width="0.2425%" height="15" fill="rgb(229,225,49)" fg:x="292" fg:w="3"/><text x="23.8555%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="23.6055%" y="469" width="0.2425%" height="15" fill="rgb(207,125,39)" fg:x="292" fg:w="3"/><text x="23.8555%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="23.6055%" y="453" width="0.2425%" height="15" fill="rgb(222,78,19)" fg:x="292" fg:w="3"/><text x="23.8555%" y="463.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="23.7672%" y="437" width="0.0808%" height="15" fill="rgb(248,207,20)" fg:x="294" fg:w="1"/><text x="24.0172%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="23.8480%" y="533" width="0.0808%" height="15" fill="rgb(205,103,49)" fg:x="295" fg:w="1"/><text x="24.0980%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0097%" y="501" width="0.0808%" height="15" fill="rgb(216,42,28)" fg:x="297" fg:w="1"/><text x="24.2597%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0097%" y="485" width="0.0808%" height="15" fill="rgb(213,205,53)" fg:x="297" fg:w="1"/><text x="24.2597%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.0097%" y="469" width="0.0808%" height="15" fill="rgb(239,140,53)" fg:x="297" fg:w="1"/><text x="24.2597%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.0097%" y="453" width="0.0808%" height="15" fill="rgb(248,95,9)" fg:x="297" fg:w="1"/><text x="24.2597%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.0097%" y="437" width="0.0808%" height="15" fill="rgb(254,58,47)" fg:x="297" fg:w="1"/><text x="24.2597%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.0097%" y="421" width="0.0808%" height="15" fill="rgb(234,227,14)" fg:x="297" fg:w="1"/><text x="24.2597%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.0097%" y="405" width="0.0808%" height="15" fill="rgb(205,192,45)" fg:x="297" fg:w="1"/><text x="24.2597%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.0905%" y="501" width="0.2425%" height="15" fill="rgb(253,187,31)" fg:x="298" fg:w="3"/><text x="24.3405%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.2522%" y="485" width="0.0808%" height="15" fill="rgb(222,6,32)" fg:x="300" fg:w="1"/><text x="24.5022%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (6 samples, 0.49%)</title><rect x="23.9289%" y="517" width="0.4850%" height="15" fill="rgb(249,190,19)" fg:x="296" fg:w="6"/><text x="24.1789%" y="527.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="24.3331%" y="501" width="0.0808%" height="15" fill="rgb(251,28,20)" fg:x="301" fg:w="1"/><text x="24.5831%" y="511.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="24.4139%" y="501" width="0.0808%" height="15" fill="rgb(210,223,40)" fg:x="302" fg:w="1"/><text x="24.6639%" y="511.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="24.4139%" y="485" width="0.0808%" height="15" fill="rgb(216,137,22)" fg:x="302" fg:w="1"/><text x="24.6639%" y="495.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="24.4139%" y="469" width="0.0808%" height="15" fill="rgb(247,39,34)" fg:x="302" fg:w="1"/><text x="24.6639%" y="479.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="24.4139%" y="453" width="0.0808%" height="15" fill="rgb(239,43,50)" fg:x="302" fg:w="1"/><text x="24.6639%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="24.4139%" y="437" width="0.0808%" height="15" fill="rgb(241,212,9)" fg:x="302" fg:w="1"/><text x="24.6639%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="24.4139%" y="421" width="0.0808%" height="15" fill="rgb(205,8,2)" fg:x="302" fg:w="1"/><text x="24.6639%" y="431.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="24.4139%" y="405" width="0.0808%" height="15" fill="rgb(217,173,54)" fg:x="302" fg:w="1"/><text x="24.6639%" y="415.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="24.4139%" y="389" width="0.0808%" height="15" fill="rgb(208,149,52)" fg:x="302" fg:w="1"/><text x="24.6639%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="24.4947%" y="421" width="0.1617%" height="15" fill="rgb(239,99,40)" fg:x="303" fg:w="2"/><text x="24.7447%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="24.4947%" y="405" width="0.1617%" height="15" fill="rgb(233,214,26)" fg:x="303" fg:w="2"/><text x="24.7447%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="24.4947%" y="389" width="0.1617%" height="15" fill="rgb(231,225,37)" fg:x="303" fg:w="2"/><text x="24.7447%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="24.4947%" y="373" width="0.1617%" height="15" fill="rgb(252,55,35)" fg:x="303" fg:w="2"/><text x="24.7447%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="24.4947%" y="357" width="0.1617%" height="15" fill="rgb(239,43,18)" fg:x="303" fg:w="2"/><text x="24.7447%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="24.4947%" y="341" width="0.1617%" height="15" fill="rgb(251,125,49)" fg:x="303" fg:w="2"/><text x="24.7447%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="24.4947%" y="325" width="0.1617%" height="15" fill="rgb(212,83,54)" fg:x="303" fg:w="2"/><text x="24.7447%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="24.4947%" y="309" width="0.1617%" height="15" fill="rgb(250,75,6)" fg:x="303" fg:w="2"/><text x="24.7447%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="24.4947%" y="293" width="0.1617%" height="15" fill="rgb(252,36,40)" fg:x="303" fg:w="2"/><text x="24.7447%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="24.4947%" y="277" width="0.1617%" height="15" fill="rgb(230,91,51)" fg:x="303" fg:w="2"/><text x="24.7447%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="24.4947%" y="261" width="0.1617%" height="15" fill="rgb(212,92,28)" fg:x="303" fg:w="2"/><text x="24.7447%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.4947%" y="245" width="0.1617%" height="15" fill="rgb(227,13,22)" fg:x="303" fg:w="2"/><text x="24.7447%" y="255.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="24.4947%" y="437" width="0.2425%" height="15" fill="rgb(239,204,32)" fg:x="303" fg:w="3"/><text x="24.7447%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="24.6564%" y="421" width="0.0808%" height="15" fill="rgb(228,49,41)" fg:x="305" fg:w="1"/><text x="24.9064%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.6564%" y="405" width="0.0808%" height="15" fill="rgb(206,95,6)" fg:x="305" fg:w="1"/><text x="24.9064%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.6564%" y="389" width="0.0808%" height="15" fill="rgb(251,20,14)" fg:x="305" fg:w="1"/><text x="24.9064%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="24.4947%" y="469" width="0.3234%" height="15" fill="rgb(214,99,28)" fg:x="303" fg:w="4"/><text x="24.7447%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="24.4947%" y="453" width="0.3234%" height="15" fill="rgb(239,122,54)" fg:x="303" fg:w="4"/><text x="24.7447%" y="463.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="24.7373%" y="437" width="0.0808%" height="15" fill="rgb(218,217,46)" fg:x="306" fg:w="1"/><text x="24.9873%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="24.8989%" y="357" width="0.2425%" height="15" fill="rgb(249,106,28)" fg:x="308" fg:w="3"/><text x="25.1489%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="24.9798%" y="341" width="0.1617%" height="15" fill="rgb(250,158,18)" fg:x="309" fg:w="2"/><text x="25.2298%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.1415%" y="357" width="0.0808%" height="15" fill="rgb(226,137,29)" fg:x="311" fg:w="1"/><text x="25.3915%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="24.8989%" y="373" width="0.4850%" height="15" fill="rgb(210,188,1)" fg:x="308" fg:w="6"/><text x="25.1489%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="25.2223%" y="357" width="0.1617%" height="15" fill="rgb(227,84,42)" fg:x="312" fg:w="2"/><text x="25.4723%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3032%" y="341" width="0.0808%" height="15" fill="rgb(222,147,48)" fg:x="313" fg:w="1"/><text x="25.5532%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="24.8989%" y="389" width="0.5659%" height="15" fill="rgb(241,150,43)" fg:x="308" fg:w="7"/><text x="25.1489%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3840%" y="373" width="0.0808%" height="15" fill="rgb(206,139,52)" fg:x="314" fg:w="1"/><text x="25.6340%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="24.8989%" y="405" width="0.7276%" height="15" fill="rgb(230,63,14)" fg:x="308" fg:w="9"/><text x="25.1489%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="25.4648%" y="389" width="0.1617%" height="15" fill="rgb(247,8,20)" fg:x="315" fg:w="2"/><text x="25.7148%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="25.6265%" y="405" width="0.2425%" height="15" fill="rgb(213,115,4)" fg:x="317" fg:w="3"/><text x="25.8765%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.05%)</title><rect x="24.8989%" y="421" width="1.0509%" height="15" fill="rgb(241,79,49)" fg:x="308" fg:w="13"/><text x="25.1489%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.8690%" y="405" width="0.0808%" height="15" fill="rgb(222,42,35)" fg:x="320" fg:w="1"/><text x="26.1190%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="26.1924%" y="389" width="0.1617%" height="15" fill="rgb(247,59,23)" fg:x="324" fg:w="2"/><text x="26.4424%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.1924%" y="373" width="0.1617%" height="15" fill="rgb(247,93,18)" fg:x="324" fg:w="2"/><text x="26.4424%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.2732%" y="357" width="0.0808%" height="15" fill="rgb(249,107,47)" fg:x="325" fg:w="1"/><text x="26.5232%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.49%)</title><rect x="26.0307%" y="405" width="0.4850%" height="15" fill="rgb(219,27,1)" fg:x="322" fg:w="6"/><text x="26.2807%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.3541%" y="389" width="0.1617%" height="15" fill="rgb(217,82,32)" fg:x="326" fg:w="2"/><text x="26.6041%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.3541%" y="373" width="0.1617%" height="15" fill="rgb(250,129,47)" fg:x="326" fg:w="2"/><text x="26.6041%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.4349%" y="357" width="0.0808%" height="15" fill="rgb(253,88,35)" fg:x="327" fg:w="1"/><text x="26.6849%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="26.8391%" y="389" width="0.3234%" height="15" fill="rgb(245,221,14)" fg:x="332" fg:w="4"/><text x="27.0891%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="27.4050%" y="341" width="0.0808%" height="15" fill="rgb(217,119,54)" fg:x="339" fg:w="1"/><text x="27.6550%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.4050%" y="325" width="0.0808%" height="15" fill="rgb(247,128,31)" fg:x="339" fg:w="1"/><text x="27.6550%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.4050%" y="309" width="0.0808%" height="15" fill="rgb(211,99,22)" fg:x="339" fg:w="1"/><text x="27.6550%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.4050%" y="293" width="0.0808%" height="15" fill="rgb(212,20,17)" fg:x="339" fg:w="1"/><text x="27.6550%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="27.4050%" y="357" width="0.1617%" height="15" fill="rgb(209,159,29)" fg:x="339" fg:w="2"/><text x="27.6550%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.4859%" y="341" width="0.0808%" height="15" fill="rgb(222,177,53)" fg:x="340" fg:w="1"/><text x="27.7359%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.4859%" y="325" width="0.0808%" height="15" fill="rgb(234,46,43)" fg:x="340" fg:w="1"/><text x="27.7359%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.4859%" y="309" width="0.0808%" height="15" fill="rgb(208,108,14)" fg:x="340" fg:w="1"/><text x="27.7359%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="27.4050%" y="373" width="0.3234%" height="15" fill="rgb(226,78,53)" fg:x="339" fg:w="4"/><text x="27.6550%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.5667%" y="357" width="0.1617%" height="15" fill="rgb(230,20,41)" fg:x="341" fg:w="2"/><text x="27.8167%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.6475%" y="341" width="0.0808%" height="15" fill="rgb(213,195,35)" fg:x="342" fg:w="1"/><text x="27.8975%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.6475%" y="325" width="0.0808%" height="15" fill="rgb(242,62,36)" fg:x="342" fg:w="1"/><text x="27.8975%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="27.7284%" y="373" width="0.2425%" height="15" fill="rgb(222,210,37)" fg:x="343" fg:w="3"/><text x="27.9784%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.8092%" y="357" width="0.1617%" height="15" fill="rgb(232,107,19)" fg:x="344" fg:w="2"/><text x="28.0592%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.8901%" y="341" width="0.0808%" height="15" fill="rgb(235,85,17)" fg:x="345" fg:w="1"/><text x="28.1401%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.8901%" y="325" width="0.0808%" height="15" fill="rgb(219,195,31)" fg:x="345" fg:w="1"/><text x="28.1401%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.9709%" y="357" width="0.0808%" height="15" fill="rgb(231,183,30)" fg:x="346" fg:w="1"/><text x="28.2209%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="28.0517%" y="357" width="0.2425%" height="15" fill="rgb(212,0,11)" fg:x="347" fg:w="3"/><text x="28.3017%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.0517%" y="341" width="0.2425%" height="15" fill="rgb(249,53,54)" fg:x="347" fg:w="3"/><text x="28.3017%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.1326%" y="325" width="0.1617%" height="15" fill="rgb(211,118,13)" fg:x="348" fg:w="2"/><text x="28.3826%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.2134%" y="309" width="0.0808%" height="15" fill="rgb(237,42,9)" fg:x="349" fg:w="1"/><text x="28.4634%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.2134%" y="293" width="0.0808%" height="15" fill="rgb(227,68,32)" fg:x="349" fg:w="1"/><text x="28.4634%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.2134%" y="277" width="0.0808%" height="15" fill="rgb(238,10,7)" fg:x="349" fg:w="1"/><text x="28.4634%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.2134%" y="261" width="0.0808%" height="15" fill="rgb(224,42,12)" fg:x="349" fg:w="1"/><text x="28.4634%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="28.3751%" y="341" width="0.4042%" height="15" fill="rgb(252,190,5)" fg:x="351" fg:w="5"/><text x="28.6251%" y="351.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="28.4559%" y="325" width="0.3234%" height="15" fill="rgb(220,214,39)" fg:x="352" fg:w="4"/><text x="28.7059%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.6176%" y="309" width="0.1617%" height="15" fill="rgb(247,98,4)" fg:x="354" fg:w="2"/><text x="28.8676%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.6985%" y="293" width="0.0808%" height="15" fill="rgb(211,60,12)" fg:x="355" fg:w="1"/><text x="28.9485%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.6985%" y="277" width="0.0808%" height="15" fill="rgb(224,42,10)" fg:x="355" fg:w="1"/><text x="28.9485%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.6985%" y="261" width="0.0808%" height="15" fill="rgb(217,167,4)" fg:x="355" fg:w="1"/><text x="28.9485%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.6985%" y="245" width="0.0808%" height="15" fill="rgb(253,18,17)" fg:x="355" fg:w="1"/><text x="28.9485%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="27.9709%" y="373" width="0.8892%" height="15" fill="rgb(249,186,44)" fg:x="346" fg:w="11"/><text x="28.2209%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="28.2943%" y="357" width="0.5659%" height="15" fill="rgb(254,124,54)" fg:x="350" fg:w="7"/><text x="28.5443%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.7793%" y="341" width="0.0808%" height="15" fill="rgb(220,124,39)" fg:x="356" fg:w="1"/><text x="29.0293%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.7793%" y="325" width="0.0808%" height="15" fill="rgb(225,96,46)" fg:x="356" fg:w="1"/><text x="29.0293%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.86%)</title><rect x="27.1625%" y="389" width="1.8593%" height="15" fill="rgb(221,106,12)" fg:x="336" fg:w="23"/><text x="27.4125%" y="399.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.8601%" y="373" width="0.1617%" height="15" fill="rgb(227,133,23)" fg:x="357" fg:w="2"/><text x="29.1101%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.9410%" y="357" width="0.0808%" height="15" fill="rgb(216,44,52)" fg:x="358" fg:w="1"/><text x="29.1910%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.83%)</title><rect x="26.5158%" y="405" width="2.8294%" height="15" fill="rgb(239,149,7)" fg:x="328" fg:w="35"/><text x="26.7658%" y="415.50">se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="29.0218%" y="389" width="0.3234%" height="15" fill="rgb(211,157,31)" fg:x="359" fg:w="4"/><text x="29.2718%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="29.1027%" y="373" width="0.2425%" height="15" fill="rgb(206,215,22)" fg:x="360" fg:w="3"/><text x="29.3527%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.1835%" y="357" width="0.1617%" height="15" fill="rgb(208,113,15)" fg:x="361" fg:w="2"/><text x="29.4335%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.2643%" y="341" width="0.0808%" height="15" fill="rgb(207,189,15)" fg:x="362" fg:w="1"/><text x="29.5143%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.2643%" y="325" width="0.0808%" height="15" fill="rgb(231,115,4)" fg:x="362" fg:w="1"/><text x="29.5143%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.2643%" y="309" width="0.0808%" height="15" fill="rgb(253,117,2)" fg:x="362" fg:w="1"/><text x="29.5143%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (43 samples, 3.48%)</title><rect x="25.9499%" y="421" width="3.4762%" height="15" fill="rgb(248,48,24)" fg:x="321" fg:w="43"/><text x="26.1999%" y="431.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.3452%" y="405" width="0.0808%" height="15" fill="rgb(241,28,46)" fg:x="363" fg:w="1"/><text x="29.5952%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.3452%" y="389" width="0.0808%" height="15" fill="rgb(216,165,52)" fg:x="363" fg:w="1"/><text x="29.5952%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.3452%" y="373" width="0.0808%" height="15" fill="rgb(220,222,34)" fg:x="363" fg:w="1"/><text x="29.5952%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="29.5069%" y="389" width="0.0808%" height="15" fill="rgb(247,222,49)" fg:x="365" fg:w="1"/><text x="29.7569%" y="399.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (3 samples, 0.24%)</title><rect x="29.5877%" y="389" width="0.2425%" height="15" fill="rgb(240,10,31)" fg:x="366" fg:w="3"/><text x="29.8377%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="29.5877%" y="373" width="0.2425%" height="15" fill="rgb(221,199,35)" fg:x="366" fg:w="3"/><text x="29.8377%" y="383.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="29.5877%" y="357" width="0.2425%" height="15" fill="rgb(230,223,11)" fg:x="366" fg:w="3"/><text x="29.8377%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.16%)</title><rect x="29.6686%" y="341" width="0.1617%" height="15" fill="rgb(218,82,45)" fg:x="367" fg:w="2"/><text x="29.9186%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="29.6686%" y="325" width="0.1617%" height="15" fill="rgb(233,213,33)" fg:x="367" fg:w="2"/><text x="29.9186%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (6 samples, 0.49%)</title><rect x="29.4260%" y="405" width="0.4850%" height="15" fill="rgb(210,143,52)" fg:x="364" fg:w="6"/><text x="29.6760%" y="415.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="29.8302%" y="389" width="0.0808%" height="15" fill="rgb(206,95,4)" fg:x="369" fg:w="1"/><text x="30.0802%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="30.0728%" y="373" width="0.1617%" height="15" fill="rgb(246,164,46)" fg:x="372" fg:w="2"/><text x="30.3228%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="30.2344%" y="373" width="0.4042%" height="15" fill="rgb(213,210,47)" fg:x="374" fg:w="5"/><text x="30.4844%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="30.3961%" y="357" width="0.2425%" height="15" fill="rgb(210,12,38)" fg:x="376" fg:w="3"/><text x="30.6461%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6386%" y="341" width="0.0808%" height="15" fill="rgb(252,192,54)" fg:x="379" fg:w="1"/><text x="30.8886%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6386%" y="325" width="0.0808%" height="15" fill="rgb(242,92,6)" fg:x="379" fg:w="1"/><text x="30.8886%" y="335.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="30.6386%" y="373" width="0.1617%" height="15" fill="rgb(253,154,15)" fg:x="379" fg:w="2"/><text x="30.8886%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.6386%" y="357" width="0.1617%" height="15" fill="rgb(209,20,43)" fg:x="379" fg:w="2"/><text x="30.8886%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.7195%" y="341" width="0.0808%" height="15" fill="rgb(232,28,49)" fg:x="380" fg:w="1"/><text x="30.9695%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="30.8003%" y="373" width="0.1617%" height="15" fill="rgb(248,131,53)" fg:x="381" fg:w="2"/><text x="31.0503%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.8003%" y="357" width="0.1617%" height="15" fill="rgb(214,16,30)" fg:x="381" fg:w="2"/><text x="31.0503%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.8812%" y="341" width="0.0808%" height="15" fill="rgb(245,16,0)" fg:x="382" fg:w="1"/><text x="31.1312%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2045%" y="325" width="0.0808%" height="15" fill="rgb(245,17,35)" fg:x="386" fg:w="1"/><text x="31.4545%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2045%" y="309" width="0.0808%" height="15" fill="rgb(249,27,53)" fg:x="386" fg:w="1"/><text x="31.4545%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="31.2854%" y="309" width="0.0808%" height="15" fill="rgb(214,73,24)" fg:x="387" fg:w="1"/><text x="31.5354%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="31.2854%" y="325" width="0.2425%" height="15" fill="rgb(223,84,37)" fg:x="387" fg:w="3"/><text x="31.5354%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="31.3662%" y="309" width="0.1617%" height="15" fill="rgb(210,109,28)" fg:x="388" fg:w="2"/><text x="31.6162%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="31.4470%" y="293" width="0.0808%" height="15" fill="rgb(208,186,6)" fg:x="389" fg:w="1"/><text x="31.6970%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6087%" y="293" width="0.0808%" height="15" fill="rgb(235,201,30)" fg:x="391" fg:w="1"/><text x="31.8587%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.7704%" y="261" width="0.0808%" height="15" fill="rgb(216,198,48)" fg:x="393" fg:w="1"/><text x="32.0204%" y="271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.7704%" y="245" width="0.0808%" height="15" fill="rgb(254,186,25)" fg:x="393" fg:w="1"/><text x="32.0204%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="31.6087%" y="309" width="0.3234%" height="15" fill="rgb(227,87,5)" fg:x="391" fg:w="4"/><text x="31.8587%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="31.6896%" y="293" width="0.2425%" height="15" fill="rgb(236,205,25)" fg:x="392" fg:w="3"/><text x="31.9396%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="31.6896%" y="277" width="0.2425%" height="15" fill="rgb(229,99,32)" fg:x="392" fg:w="3"/><text x="31.9396%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.8513%" y="261" width="0.0808%" height="15" fill="rgb(231,177,31)" fg:x="394" fg:w="1"/><text x="32.1013%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8513%" y="245" width="0.0808%" height="15" fill="rgb(246,15,2)" fg:x="394" fg:w="1"/><text x="32.1013%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="31.2045%" y="341" width="0.8084%" height="15" fill="rgb(207,39,15)" fg:x="386" fg:w="10"/><text x="31.4545%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="31.5279%" y="325" width="0.4850%" height="15" fill="rgb(207,44,9)" fg:x="390" fg:w="6"/><text x="31.7779%" y="335.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;f64&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="31.9321%" y="309" width="0.0808%" height="15" fill="rgb(225,224,33)" fg:x="395" fg:w="1"/><text x="32.1821%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.89%)</title><rect x="31.2045%" y="357" width="0.8892%" height="15" fill="rgb(252,151,3)" fg:x="386" fg:w="11"/><text x="31.4545%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="32.0129%" y="341" width="0.0808%" height="15" fill="rgb(211,140,13)" fg:x="396" fg:w="1"/><text x="32.2629%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0938%" y="357" width="0.0808%" height="15" fill="rgb(239,225,17)" fg:x="397" fg:w="1"/><text x="32.3438%" y="367.50"></text></g><g><title>engine::session::Session::flush (103 samples, 8.33%)</title><rect x="23.9289%" y="533" width="8.3266%" height="15" fill="rgb(223,170,52)" fg:x="296" fg:w="103"/><text x="24.1789%" y="543.50">engine::sess..</text></g><g><title>engine::session::Session::save_changes (97 samples, 7.84%)</title><rect x="24.4139%" y="517" width="7.8416%" height="15" fill="rgb(212,64,21)" fg:x="302" fg:w="97"/><text x="24.6639%" y="527.50">engine::ses..</text></g><g><title>engine::session::state::State::close (96 samples, 7.76%)</title><rect x="24.4947%" y="501" width="7.7607%" height="15" fill="rgb(236,126,48)" fg:x="303" fg:w="96"/><text x="24.7447%" y="511.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (96 samples, 7.76%)</title><rect x="24.4947%" y="485" width="7.7607%" height="15" fill="rgb(209,135,11)" fg:x="303" fg:w="96"/><text x="24.7447%" y="495.50">engine::ses..</text></g><g><title>core::iter::adapters::try_process (92 samples, 7.44%)</title><rect x="24.8181%" y="469" width="7.4373%" height="15" fill="rgb(228,126,40)" fg:x="307" fg:w="92"/><text x="25.0681%" y="479.50">core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (92 samples, 7.44%)</title><rect x="24.8181%" y="453" width="7.4373%" height="15" fill="rgb(205,196,36)" fg:x="307" fg:w="92"/><text x="25.0681%" y="463.50">&lt;alloc::ve..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (92 samples, 7.44%)</title><rect x="24.8181%" y="437" width="7.4373%" height="15" fill="rgb(243,160,33)" fg:x="307" fg:w="92"/><text x="25.0681%" y="447.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (35 samples, 2.83%)</title><rect x="29.4260%" y="421" width="2.8294%" height="15" fill="rgb(210,84,20)" fg:x="364" fg:w="35"/><text x="29.6760%" y="431.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (29 samples, 2.34%)</title><rect x="29.9111%" y="405" width="2.3444%" height="15" fill="rgb(228,213,30)" fg:x="370" fg:w="29"/><text x="30.1611%" y="415.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.34%)</title><rect x="29.9111%" y="389" width="2.3444%" height="15" fill="rgb(252,33,45)" fg:x="370" fg:w="29"/><text x="30.1611%" y="399.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.29%)</title><rect x="30.9620%" y="373" width="1.2935%" height="15" fill="rgb(254,227,20)" fg:x="383" fg:w="16"/><text x="31.2120%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.1746%" y="357" width="0.0808%" height="15" fill="rgb(228,192,2)" fg:x="398" fg:w="1"/><text x="32.4246%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.1746%" y="341" width="0.0808%" height="15" fill="rgb(233,32,8)" fg:x="398" fg:w="1"/><text x="32.4246%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="32.2555%" y="501" width="0.0808%" height="15" fill="rgb(220,146,47)" fg:x="399" fg:w="1"/><text x="32.5055%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.2555%" y="485" width="0.0808%" height="15" fill="rgb(246,194,1)" fg:x="399" fg:w="1"/><text x="32.5055%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.2555%" y="469" width="0.0808%" height="15" fill="rgb(218,203,9)" fg:x="399" fg:w="1"/><text x="32.5055%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="32.3363%" y="501" width="0.1617%" height="15" fill="rgb(237,97,14)" fg:x="400" fg:w="2"/><text x="32.5863%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="32.4980%" y="501" width="0.0808%" height="15" fill="rgb(239,76,15)" fg:x="402" fg:w="1"/><text x="32.7480%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.4980%" y="485" width="0.0808%" height="15" fill="rgb(222,53,45)" fg:x="402" fg:w="1"/><text x="32.7480%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.4980%" y="469" width="0.0808%" height="15" fill="rgb(237,88,5)" fg:x="402" fg:w="1"/><text x="32.7480%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.4980%" y="453" width="0.0808%" height="15" fill="rgb(218,223,35)" fg:x="402" fg:w="1"/><text x="32.7480%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (6 samples, 0.49%)</title><rect x="32.2555%" y="533" width="0.4850%" height="15" fill="rgb(243,229,38)" fg:x="399" fg:w="6"/><text x="32.5055%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (6 samples, 0.49%)</title><rect x="32.2555%" y="517" width="0.4850%" height="15" fill="rgb(240,75,41)" fg:x="399" fg:w="6"/><text x="32.5055%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="32.5788%" y="501" width="0.1617%" height="15" fill="rgb(209,110,37)" fg:x="403" fg:w="2"/><text x="32.8288%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.5788%" y="485" width="0.1617%" height="15" fill="rgb(221,130,46)" fg:x="403" fg:w="2"/><text x="32.8288%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="32.6597%" y="469" width="0.0808%" height="15" fill="rgb(237,160,20)" fg:x="404" fg:w="1"/><text x="32.9097%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="32.6597%" y="453" width="0.0808%" height="15" fill="rgb(234,126,24)" fg:x="404" fg:w="1"/><text x="32.9097%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.6597%" y="437" width="0.0808%" height="15" fill="rgb(207,177,9)" fg:x="404" fg:w="1"/><text x="32.9097%" y="447.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="32.7405%" y="533" width="0.1617%" height="15" fill="rgb(231,191,33)" fg:x="405" fg:w="2"/><text x="32.9905%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (2 samples, 0.16%)</title><rect x="32.7405%" y="517" width="0.1617%" height="15" fill="rgb(207,42,1)" fg:x="405" fg:w="2"/><text x="32.9905%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="33.0639%" y="485" width="0.3234%" height="15" fill="rgb(218,34,50)" fg:x="409" fg:w="4"/><text x="33.3139%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="33.1447%" y="469" width="0.2425%" height="15" fill="rgb(254,126,39)" fg:x="410" fg:w="3"/><text x="33.3947%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="33.1447%" y="453" width="0.2425%" height="15" fill="rgb(251,17,26)" fg:x="410" fg:w="3"/><text x="33.3947%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3064%" y="437" width="0.0808%" height="15" fill="rgb(252,215,34)" fg:x="412" fg:w="1"/><text x="33.5564%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3064%" y="421" width="0.0808%" height="15" fill="rgb(217,120,44)" fg:x="412" fg:w="1"/><text x="33.5564%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.3064%" y="405" width="0.0808%" height="15" fill="rgb(211,31,11)" fg:x="412" fg:w="1"/><text x="33.5564%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.3064%" y="389" width="0.0808%" height="15" fill="rgb(222,69,51)" fg:x="412" fg:w="1"/><text x="33.5564%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.3064%" y="373" width="0.0808%" height="15" fill="rgb(215,229,42)" fg:x="412" fg:w="1"/><text x="33.5564%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.3064%" y="357" width="0.0808%" height="15" fill="rgb(212,102,15)" fg:x="412" fg:w="1"/><text x="33.5564%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.3064%" y="341" width="0.0808%" height="15" fill="rgb(205,179,41)" fg:x="412" fg:w="1"/><text x="33.5564%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.3064%" y="325" width="0.0808%" height="15" fill="rgb(219,148,46)" fg:x="412" fg:w="1"/><text x="33.5564%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.3064%" y="309" width="0.0808%" height="15" fill="rgb(243,40,19)" fg:x="412" fg:w="1"/><text x="33.5564%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.3064%" y="293" width="0.0808%" height="15" fill="rgb(208,206,34)" fg:x="412" fg:w="1"/><text x="33.5564%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.3064%" y="277" width="0.0808%" height="15" fill="rgb(244,184,38)" fg:x="412" fg:w="1"/><text x="33.5564%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3064%" y="261" width="0.0808%" height="15" fill="rgb(244,151,47)" fg:x="412" fg:w="1"/><text x="33.5564%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="33.0639%" y="501" width="0.4042%" height="15" fill="rgb(236,134,42)" fg:x="409" fg:w="5"/><text x="33.3139%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3872%" y="485" width="0.0808%" height="15" fill="rgb(233,93,22)" fg:x="413" fg:w="1"/><text x="33.6372%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3872%" y="469" width="0.0808%" height="15" fill="rgb(211,202,10)" fg:x="413" fg:w="1"/><text x="33.6372%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.3872%" y="453" width="0.0808%" height="15" fill="rgb(240,63,8)" fg:x="413" fg:w="1"/><text x="33.6372%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3872%" y="437" width="0.0808%" height="15" fill="rgb(214,9,4)" fg:x="413" fg:w="1"/><text x="33.6372%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="33.3872%" y="421" width="0.0808%" height="15" fill="rgb(243,66,45)" fg:x="413" fg:w="1"/><text x="33.6372%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (2 samples, 0.16%)</title><rect x="33.4681%" y="501" width="0.1617%" height="15" fill="rgb(220,50,42)" fg:x="414" fg:w="2"/><text x="33.7181%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="33.4681%" y="485" width="0.1617%" height="15" fill="rgb(220,134,27)" fg:x="414" fg:w="2"/><text x="33.7181%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.5489%" y="469" width="0.0808%" height="15" fill="rgb(246,151,50)" fg:x="415" fg:w="1"/><text x="33.7989%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6297%" y="437" width="0.0808%" height="15" fill="rgb(238,216,27)" fg:x="416" fg:w="1"/><text x="33.8797%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6297%" y="421" width="0.0808%" height="15" fill="rgb(250,92,11)" fg:x="416" fg:w="1"/><text x="33.8797%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6297%" y="405" width="0.0808%" height="15" fill="rgb(248,183,6)" fg:x="416" fg:w="1"/><text x="33.8797%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="33.7106%" y="437" width="0.0808%" height="15" fill="rgb(211,204,50)" fg:x="417" fg:w="1"/><text x="33.9606%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.7106%" y="421" width="0.0808%" height="15" fill="rgb(252,55,47)" fg:x="417" fg:w="1"/><text x="33.9606%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="33.6297%" y="453" width="0.3234%" height="15" fill="rgb(240,198,32)" fg:x="416" fg:w="4"/><text x="33.8797%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.7914%" y="437" width="0.1617%" height="15" fill="rgb(224,203,19)" fg:x="418" fg:w="2"/><text x="34.0414%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.7914%" y="421" width="0.1617%" height="15" fill="rgb(205,27,16)" fg:x="418" fg:w="2"/><text x="34.0414%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="33.9531%" y="453" width="0.0808%" height="15" fill="rgb(224,226,17)" fg:x="420" fg:w="1"/><text x="34.2031%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="33.9531%" y="437" width="0.0808%" height="15" fill="rgb(205,216,54)" fg:x="420" fg:w="1"/><text x="34.2031%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.9531%" y="421" width="0.0808%" height="15" fill="rgb(248,168,46)" fg:x="420" fg:w="1"/><text x="34.2031%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.9531%" y="405" width="0.0808%" height="15" fill="rgb(226,111,45)" fg:x="420" fg:w="1"/><text x="34.2031%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0340%" y="421" width="0.0808%" height="15" fill="rgb(231,15,9)" fg:x="421" fg:w="1"/><text x="34.2840%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.57%)</title><rect x="33.6297%" y="485" width="0.5659%" height="15" fill="rgb(243,168,3)" fg:x="416" fg:w="7"/><text x="33.8797%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (7 samples, 0.57%)</title><rect x="33.6297%" y="469" width="0.5659%" height="15" fill="rgb(221,220,54)" fg:x="416" fg:w="7"/><text x="33.8797%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="34.0340%" y="453" width="0.1617%" height="15" fill="rgb(232,174,38)" fg:x="421" fg:w="2"/><text x="34.2840%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.0340%" y="437" width="0.1617%" height="15" fill="rgb(205,14,38)" fg:x="421" fg:w="2"/><text x="34.2840%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="34.1148%" y="421" width="0.0808%" height="15" fill="rgb(234,89,19)" fg:x="422" fg:w="1"/><text x="34.3648%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="34.1956%" y="485" width="0.0808%" height="15" fill="rgb(216,68,51)" fg:x="423" fg:w="1"/><text x="34.4456%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.4382%" y="453" width="0.1617%" height="15" fill="rgb(213,49,2)" fg:x="426" fg:w="2"/><text x="34.6882%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5998%" y="453" width="0.0808%" height="15" fill="rgb(242,146,30)" fg:x="428" fg:w="1"/><text x="34.8498%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5998%" y="437" width="0.0808%" height="15" fill="rgb(224,188,11)" fg:x="428" fg:w="1"/><text x="34.8498%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="34.6807%" y="437" width="0.1617%" height="15" fill="rgb(213,159,11)" fg:x="429" fg:w="2"/><text x="34.9307%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="34.6807%" y="421" width="0.1617%" height="15" fill="rgb(229,13,31)" fg:x="429" fg:w="2"/><text x="34.9307%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="34.6807%" y="405" width="0.1617%" height="15" fill="rgb(209,103,11)" fg:x="429" fg:w="2"/><text x="34.9307%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="34.6807%" y="389" width="0.1617%" height="15" fill="rgb(206,3,4)" fg:x="429" fg:w="2"/><text x="34.9307%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="34.7615%" y="373" width="0.0808%" height="15" fill="rgb(252,10,49)" fg:x="430" fg:w="1"/><text x="35.0115%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="34.7615%" y="357" width="0.0808%" height="15" fill="rgb(217,160,32)" fg:x="430" fg:w="1"/><text x="35.0115%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="34.7615%" y="341" width="0.0808%" height="15" fill="rgb(249,196,0)" fg:x="430" fg:w="1"/><text x="35.0115%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7615%" y="325" width="0.0808%" height="15" fill="rgb(213,17,48)" fg:x="430" fg:w="1"/><text x="35.0115%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (25 samples, 2.02%)</title><rect x="32.9022%" y="517" width="2.0210%" height="15" fill="rgb(206,42,46)" fg:x="407" fg:w="25"/><text x="33.1522%" y="527.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (16 samples, 1.29%)</title><rect x="33.6297%" y="501" width="1.2935%" height="15" fill="rgb(212,105,24)" fg:x="416" fg:w="16"/><text x="33.8797%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.65%)</title><rect x="34.2765%" y="485" width="0.6467%" height="15" fill="rgb(243,216,30)" fg:x="424" fg:w="8"/><text x="34.5265%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="34.4382%" y="469" width="0.4850%" height="15" fill="rgb(207,121,3)" fg:x="426" fg:w="6"/><text x="34.6882%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="34.6807%" y="453" width="0.2425%" height="15" fill="rgb(249,78,0)" fg:x="429" fg:w="3"/><text x="34.9307%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8424%" y="437" width="0.0808%" height="15" fill="rgb(244,151,32)" fg:x="431" fg:w="1"/><text x="35.0924%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.9232%" y="501" width="0.1617%" height="15" fill="rgb(228,63,25)" fg:x="432" fg:w="2"/><text x="35.1732%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0040%" y="485" width="0.0808%" height="15" fill="rgb(231,158,23)" fg:x="433" fg:w="1"/><text x="35.2540%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="34.9232%" y="517" width="0.2425%" height="15" fill="rgb(248,107,23)" fg:x="432" fg:w="3"/><text x="35.1732%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0849%" y="501" width="0.0808%" height="15" fill="rgb(215,168,21)" fg:x="434" fg:w="1"/><text x="35.3349%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0849%" y="485" width="0.0808%" height="15" fill="rgb(227,83,22)" fg:x="434" fg:w="1"/><text x="35.3349%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.0849%" y="469" width="0.0808%" height="15" fill="rgb(217,118,43)" fg:x="434" fg:w="1"/><text x="35.3349%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.0849%" y="453" width="0.0808%" height="15" fill="rgb(229,220,41)" fg:x="434" fg:w="1"/><text x="35.3349%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.0849%" y="437" width="0.0808%" height="15" fill="rgb(254,146,46)" fg:x="434" fg:w="1"/><text x="35.3349%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.0849%" y="421" width="0.0808%" height="15" fill="rgb(233,208,31)" fg:x="434" fg:w="1"/><text x="35.3349%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.0849%" y="405" width="0.0808%" height="15" fill="rgb(222,162,7)" fg:x="434" fg:w="1"/><text x="35.3349%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.0849%" y="389" width="0.0808%" height="15" fill="rgb(230,117,45)" fg:x="434" fg:w="1"/><text x="35.3349%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.0849%" y="373" width="0.0808%" height="15" fill="rgb(239,163,6)" fg:x="434" fg:w="1"/><text x="35.3349%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.0849%" y="357" width="0.0808%" height="15" fill="rgb(246,130,17)" fg:x="434" fg:w="1"/><text x="35.3349%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.0849%" y="341" width="0.0808%" height="15" fill="rgb(216,84,5)" fg:x="434" fg:w="1"/><text x="35.3349%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0849%" y="325" width="0.0808%" height="15" fill="rgb(230,200,21)" fg:x="434" fg:w="1"/><text x="35.3349%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="35.1657%" y="517" width="0.0808%" height="15" fill="rgb(224,2,8)" fg:x="435" fg:w="1"/><text x="35.4157%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.1657%" y="501" width="0.0808%" height="15" fill="rgb(238,178,10)" fg:x="435" fg:w="1"/><text x="35.4157%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (30 samples, 2.43%)</title><rect x="32.9022%" y="533" width="2.4252%" height="15" fill="rgb(242,153,24)" fg:x="407" fg:w="30"/><text x="33.1522%" y="543.50">pl..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="35.2466%" y="517" width="0.0808%" height="15" fill="rgb(242,32,48)" fg:x="436" fg:w="1"/><text x="35.4966%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="35.3274%" y="501" width="0.0808%" height="15" fill="rgb(227,36,0)" fg:x="437" fg:w="1"/><text x="35.5774%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="35.3274%" y="485" width="0.0808%" height="15" fill="rgb(251,33,35)" fg:x="437" fg:w="1"/><text x="35.5774%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="35.4082%" y="501" width="0.0808%" height="15" fill="rgb(232,168,51)" fg:x="438" fg:w="1"/><text x="35.6582%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="35.4891%" y="469" width="0.1617%" height="15" fill="rgb(228,56,10)" fg:x="439" fg:w="2"/><text x="35.7391%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="35.4891%" y="453" width="0.1617%" height="15" fill="rgb(231,10,26)" fg:x="439" fg:w="2"/><text x="35.7391%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.4891%" y="437" width="0.1617%" height="15" fill="rgb(226,202,12)" fg:x="439" fg:w="2"/><text x="35.7391%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.4891%" y="421" width="0.1617%" height="15" fill="rgb(251,49,21)" fg:x="439" fg:w="2"/><text x="35.7391%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.4891%" y="405" width="0.1617%" height="15" fill="rgb(206,228,28)" fg:x="439" fg:w="2"/><text x="35.7391%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.4891%" y="389" width="0.1617%" height="15" fill="rgb(205,198,31)" fg:x="439" fg:w="2"/><text x="35.7391%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.5699%" y="373" width="0.0808%" height="15" fill="rgb(213,69,1)" fg:x="440" fg:w="1"/><text x="35.8199%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5699%" y="357" width="0.0808%" height="15" fill="rgb(209,177,9)" fg:x="440" fg:w="1"/><text x="35.8199%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.5699%" y="341" width="0.0808%" height="15" fill="rgb(227,119,30)" fg:x="440" fg:w="1"/><text x="35.8199%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6508%" y="437" width="0.0808%" height="15" fill="rgb(234,106,41)" fg:x="441" fg:w="1"/><text x="35.9008%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6508%" y="421" width="0.0808%" height="15" fill="rgb(244,103,47)" fg:x="441" fg:w="1"/><text x="35.9008%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6508%" y="405" width="0.0808%" height="15" fill="rgb(212,211,25)" fg:x="441" fg:w="1"/><text x="35.9008%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6508%" y="389" width="0.0808%" height="15" fill="rgb(208,63,53)" fg:x="441" fg:w="1"/><text x="35.9008%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6508%" y="373" width="0.0808%" height="15" fill="rgb(213,176,21)" fg:x="441" fg:w="1"/><text x="35.9008%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.6508%" y="357" width="0.0808%" height="15" fill="rgb(243,124,12)" fg:x="441" fg:w="1"/><text x="35.9008%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.6508%" y="341" width="0.0808%" height="15" fill="rgb(239,2,35)" fg:x="441" fg:w="1"/><text x="35.9008%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.6508%" y="325" width="0.0808%" height="15" fill="rgb(253,169,22)" fg:x="441" fg:w="1"/><text x="35.9008%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.6508%" y="309" width="0.0808%" height="15" fill="rgb(254,51,12)" fg:x="441" fg:w="1"/><text x="35.9008%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.6508%" y="293" width="0.0808%" height="15" fill="rgb(244,17,47)" fg:x="441" fg:w="1"/><text x="35.9008%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.6508%" y="277" width="0.0808%" height="15" fill="rgb(251,45,46)" fg:x="441" fg:w="1"/><text x="35.9008%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.6508%" y="261" width="0.0808%" height="15" fill="rgb(223,87,43)" fg:x="441" fg:w="1"/><text x="35.9008%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.6508%" y="245" width="0.0808%" height="15" fill="rgb(230,132,31)" fg:x="441" fg:w="1"/><text x="35.9008%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.6508%" y="229" width="0.0808%" height="15" fill="rgb(206,99,1)" fg:x="441" fg:w="1"/><text x="35.9008%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6508%" y="213" width="0.0808%" height="15" fill="rgb(227,110,25)" fg:x="441" fg:w="1"/><text x="35.9008%" y="223.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="35.4891%" y="501" width="0.3234%" height="15" fill="rgb(217,182,7)" fg:x="439" fg:w="4"/><text x="35.7391%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="35.4891%" y="485" width="0.3234%" height="15" fill="rgb(250,176,4)" fg:x="439" fg:w="4"/><text x="35.7391%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="35.6508%" y="469" width="0.1617%" height="15" fill="rgb(244,98,30)" fg:x="441" fg:w="2"/><text x="35.9008%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="35.6508%" y="453" width="0.1617%" height="15" fill="rgb(228,150,42)" fg:x="441" fg:w="2"/><text x="35.9008%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.7316%" y="437" width="0.0808%" height="15" fill="rgb(231,91,46)" fg:x="442" fg:w="1"/><text x="35.9816%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="35.8124%" y="485" width="0.0808%" height="15" fill="rgb(252,161,32)" fg:x="443" fg:w="1"/><text x="36.0624%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="35.8124%" y="469" width="0.0808%" height="15" fill="rgb(236,69,41)" fg:x="443" fg:w="1"/><text x="36.0624%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.8933%" y="405" width="0.0808%" height="15" fill="rgb(212,160,3)" fg:x="444" fg:w="1"/><text x="36.1433%" y="415.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (9 samples, 0.73%)</title><rect x="35.3274%" y="533" width="0.7276%" height="15" fill="rgb(216,5,50)" fg:x="437" fg:w="9"/><text x="35.5774%" y="543.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.73%)</title><rect x="35.3274%" y="517" width="0.7276%" height="15" fill="rgb(241,138,25)" fg:x="437" fg:w="9"/><text x="35.5774%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="35.8124%" y="501" width="0.2425%" height="15" fill="rgb(239,42,18)" fg:x="443" fg:w="3"/><text x="36.0624%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="35.8933%" y="485" width="0.1617%" height="15" fill="rgb(239,40,7)" fg:x="444" fg:w="2"/><text x="36.1433%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.8933%" y="469" width="0.1617%" height="15" fill="rgb(239,11,31)" fg:x="444" fg:w="2"/><text x="36.1433%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="35.8933%" y="453" width="0.1617%" height="15" fill="rgb(224,77,40)" fg:x="444" fg:w="2"/><text x="36.1433%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="35.8933%" y="437" width="0.1617%" height="15" fill="rgb(226,15,5)" fg:x="444" fg:w="2"/><text x="36.1433%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.8933%" y="421" width="0.1617%" height="15" fill="rgb(254,188,5)" fg:x="444" fg:w="2"/><text x="36.1433%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9741%" y="405" width="0.0808%" height="15" fill="rgb(241,148,52)" fg:x="445" fg:w="1"/><text x="36.2241%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9741%" y="389" width="0.0808%" height="15" fill="rgb(251,48,36)" fg:x="445" fg:w="1"/><text x="36.2241%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.9741%" y="373" width="0.0808%" height="15" fill="rgb(243,83,13)" fg:x="445" fg:w="1"/><text x="36.2241%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.0550%" y="469" width="0.0808%" height="15" fill="rgb(210,105,0)" fg:x="446" fg:w="1"/><text x="36.3050%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.1358%" y="437" width="0.0808%" height="15" fill="rgb(239,60,36)" fg:x="447" fg:w="1"/><text x="36.3858%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="36.0550%" y="517" width="0.2425%" height="15" fill="rgb(210,20,0)" fg:x="446" fg:w="3"/><text x="36.3050%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="36.0550%" y="501" width="0.2425%" height="15" fill="rgb(244,26,53)" fg:x="446" fg:w="3"/><text x="36.3050%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="36.0550%" y="485" width="0.2425%" height="15" fill="rgb(240,100,49)" fg:x="446" fg:w="3"/><text x="36.3050%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.1358%" y="469" width="0.1617%" height="15" fill="rgb(250,46,45)" fg:x="447" fg:w="2"/><text x="36.3858%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.1358%" y="453" width="0.1617%" height="15" fill="rgb(220,181,29)" fg:x="447" fg:w="2"/><text x="36.3858%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="36.2167%" y="437" width="0.0808%" height="15" fill="rgb(213,137,33)" fg:x="448" fg:w="1"/><text x="36.4667%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="36.2167%" y="421" width="0.0808%" height="15" fill="rgb(213,27,48)" fg:x="448" fg:w="1"/><text x="36.4667%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.2167%" y="405" width="0.0808%" height="15" fill="rgb(245,180,39)" fg:x="448" fg:w="1"/><text x="36.4667%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.2975%" y="485" width="0.0808%" height="15" fill="rgb(212,158,42)" fg:x="449" fg:w="1"/><text x="36.5475%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="36.2975%" y="469" width="0.0808%" height="15" fill="rgb(228,193,18)" fg:x="449" fg:w="1"/><text x="36.5475%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="36.2975%" y="453" width="0.0808%" height="15" fill="rgb(245,172,29)" fg:x="449" fg:w="1"/><text x="36.5475%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.2975%" y="437" width="0.0808%" height="15" fill="rgb(207,98,24)" fg:x="449" fg:w="1"/><text x="36.5475%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (7 samples, 0.57%)</title><rect x="36.0550%" y="533" width="0.5659%" height="15" fill="rgb(249,92,26)" fg:x="446" fg:w="7"/><text x="36.3050%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="36.2975%" y="517" width="0.3234%" height="15" fill="rgb(217,176,26)" fg:x="449" fg:w="4"/><text x="36.5475%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (4 samples, 0.32%)</title><rect x="36.2975%" y="501" width="0.3234%" height="15" fill="rgb(221,8,39)" fg:x="449" fg:w="4"/><text x="36.5475%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="36.3783%" y="485" width="0.2425%" height="15" fill="rgb(208,90,18)" fg:x="450" fg:w="3"/><text x="36.6283%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (2 samples, 0.16%)</title><rect x="36.4592%" y="469" width="0.1617%" height="15" fill="rgb(207,202,30)" fg:x="451" fg:w="2"/><text x="36.7092%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (1 samples, 0.08%)</title><rect x="36.5400%" y="453" width="0.0808%" height="15" fill="rgb(231,124,22)" fg:x="452" fg:w="1"/><text x="36.7900%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.5400%" y="437" width="0.0808%" height="15" fill="rgb(206,15,5)" fg:x="452" fg:w="1"/><text x="36.7900%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.5400%" y="421" width="0.0808%" height="15" fill="rgb(239,16,52)" fg:x="452" fg:w="1"/><text x="36.7900%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.5400%" y="405" width="0.0808%" height="15" fill="rgb(245,213,29)" fg:x="452" fg:w="1"/><text x="36.7900%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6209%" y="421" width="0.0808%" height="15" fill="rgb(213,203,36)" fg:x="453" fg:w="1"/><text x="36.8709%" y="431.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="36.6209%" y="517" width="0.1617%" height="15" fill="rgb(209,55,18)" fg:x="453" fg:w="2"/><text x="36.8709%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="36.6209%" y="501" width="0.1617%" height="15" fill="rgb(207,133,49)" fg:x="453" fg:w="2"/><text x="36.8709%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="36.6209%" y="485" width="0.1617%" height="15" fill="rgb(240,33,46)" fg:x="453" fg:w="2"/><text x="36.8709%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="36.6209%" y="469" width="0.1617%" height="15" fill="rgb(212,35,2)" fg:x="453" fg:w="2"/><text x="36.8709%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="36.6209%" y="453" width="0.1617%" height="15" fill="rgb(231,119,28)" fg:x="453" fg:w="2"/><text x="36.8709%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="36.6209%" y="437" width="0.1617%" height="15" fill="rgb(252,178,7)" fg:x="453" fg:w="2"/><text x="36.8709%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7017%" y="421" width="0.0808%" height="15" fill="rgb(251,91,4)" fg:x="454" fg:w="1"/><text x="36.9517%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7825%" y="485" width="0.0808%" height="15" fill="rgb(233,122,19)" fg:x="455" fg:w="1"/><text x="37.0325%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7825%" y="469" width="0.0808%" height="15" fill="rgb(231,208,46)" fg:x="455" fg:w="1"/><text x="37.0325%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7825%" y="453" width="0.0808%" height="15" fill="rgb(243,15,41)" fg:x="455" fg:w="1"/><text x="37.0325%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7825%" y="437" width="0.0808%" height="15" fill="rgb(210,32,43)" fg:x="455" fg:w="1"/><text x="37.0325%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7825%" y="421" width="0.0808%" height="15" fill="rgb(222,177,15)" fg:x="455" fg:w="1"/><text x="37.0325%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.7825%" y="405" width="0.0808%" height="15" fill="rgb(244,121,34)" fg:x="455" fg:w="1"/><text x="37.0325%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.7825%" y="389" width="0.0808%" height="15" fill="rgb(234,138,4)" fg:x="455" fg:w="1"/><text x="37.0325%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.7825%" y="373" width="0.0808%" height="15" fill="rgb(240,97,48)" fg:x="455" fg:w="1"/><text x="37.0325%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7825%" y="357" width="0.0808%" height="15" fill="rgb(237,65,54)" fg:x="455" fg:w="1"/><text x="37.0325%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7825%" y="341" width="0.0808%" height="15" fill="rgb(214,25,24)" fg:x="455" fg:w="1"/><text x="37.0325%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.7825%" y="325" width="0.0808%" height="15" fill="rgb(213,5,3)" fg:x="455" fg:w="1"/><text x="37.0325%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.7825%" y="309" width="0.0808%" height="15" fill="rgb(219,81,29)" fg:x="455" fg:w="1"/><text x="37.0325%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.7825%" y="293" width="0.0808%" height="15" fill="rgb(220,43,48)" fg:x="455" fg:w="1"/><text x="37.0325%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.7825%" y="277" width="0.0808%" height="15" fill="rgb(239,157,2)" fg:x="455" fg:w="1"/><text x="37.0325%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7825%" y="261" width="0.0808%" height="15" fill="rgb(213,104,43)" fg:x="455" fg:w="1"/><text x="37.0325%" y="271.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="36.7825%" y="501" width="0.1617%" height="15" fill="rgb(237,84,9)" fg:x="455" fg:w="2"/><text x="37.0325%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8634%" y="485" width="0.0808%" height="15" fill="rgb(252,6,33)" fg:x="456" fg:w="1"/><text x="37.1134%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8634%" y="469" width="0.0808%" height="15" fill="rgb(251,172,22)" fg:x="456" fg:w="1"/><text x="37.1134%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8634%" y="453" width="0.0808%" height="15" fill="rgb(244,91,53)" fg:x="456" fg:w="1"/><text x="37.1134%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8634%" y="437" width="0.0808%" height="15" fill="rgb(219,29,30)" fg:x="456" fg:w="1"/><text x="37.1134%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.8634%" y="421" width="0.0808%" height="15" fill="rgb(213,3,15)" fg:x="456" fg:w="1"/><text x="37.1134%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.8634%" y="405" width="0.0808%" height="15" fill="rgb(208,25,28)" fg:x="456" fg:w="1"/><text x="37.1134%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0251%" y="421" width="0.0808%" height="15" fill="rgb(252,144,25)" fg:x="458" fg:w="1"/><text x="37.2751%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.0251%" y="405" width="0.0808%" height="15" fill="rgb(226,220,25)" fg:x="458" fg:w="1"/><text x="37.2751%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="36.9442%" y="437" width="0.2425%" height="15" fill="rgb(212,131,28)" fg:x="457" fg:w="3"/><text x="37.1942%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1059%" y="421" width="0.0808%" height="15" fill="rgb(219,143,52)" fg:x="459" fg:w="1"/><text x="37.3559%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.49%)</title><rect x="36.7825%" y="517" width="0.4850%" height="15" fill="rgb(215,56,7)" fg:x="455" fg:w="6"/><text x="37.0325%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="36.9442%" y="501" width="0.3234%" height="15" fill="rgb(239,59,51)" fg:x="457" fg:w="4"/><text x="37.1942%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="36.9442%" y="485" width="0.3234%" height="15" fill="rgb(209,215,4)" fg:x="457" fg:w="4"/><text x="37.1942%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="36.9442%" y="469" width="0.3234%" height="15" fill="rgb(221,118,39)" fg:x="457" fg:w="4"/><text x="37.1942%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="36.9442%" y="453" width="0.3234%" height="15" fill="rgb(236,6,44)" fg:x="457" fg:w="4"/><text x="37.1942%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.1867%" y="437" width="0.0808%" height="15" fill="rgb(216,122,9)" fg:x="460" fg:w="1"/><text x="37.4367%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.1867%" y="421" width="0.0808%" height="15" fill="rgb(244,134,42)" fg:x="460" fg:w="1"/><text x="37.4367%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.1867%" y="405" width="0.0808%" height="15" fill="rgb(209,189,35)" fg:x="460" fg:w="1"/><text x="37.4367%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.1867%" y="389" width="0.0808%" height="15" fill="rgb(250,47,36)" fg:x="460" fg:w="1"/><text x="37.4367%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.1867%" y="373" width="0.0808%" height="15" fill="rgb(252,112,4)" fg:x="460" fg:w="1"/><text x="37.4367%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.1867%" y="357" width="0.0808%" height="15" fill="rgb(221,79,51)" fg:x="460" fg:w="1"/><text x="37.4367%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="37.3484%" y="485" width="0.1617%" height="15" fill="rgb(232,65,53)" fg:x="462" fg:w="2"/><text x="37.5984%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.3484%" y="469" width="0.1617%" height="15" fill="rgb(211,37,7)" fg:x="462" fg:w="2"/><text x="37.5984%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="37.3484%" y="453" width="0.1617%" height="15" fill="rgb(234,221,18)" fg:x="462" fg:w="2"/><text x="37.5984%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.4293%" y="437" width="0.0808%" height="15" fill="rgb(220,158,26)" fg:x="463" fg:w="1"/><text x="37.6793%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (181 samples, 14.63%)</title><rect x="23.0396%" y="549" width="14.6322%" height="15" fill="rgb(220,70,6)" fg:x="285" fg:w="181"/><text x="23.2896%" y="559.50">plugins_core::build::B..</text></g><g><title>plugins_core::tools::set_container (13 samples, 1.05%)</title><rect x="36.6209%" y="533" width="1.0509%" height="15" fill="rgb(250,39,48)" fg:x="453" fg:w="13"/><text x="36.8709%" y="543.50"></text></g><g><title>plugins_core::location::model::Location::set (5 samples, 0.40%)</title><rect x="37.2676%" y="517" width="0.4042%" height="15" fill="rgb(206,40,27)" fg:x="461" fg:w="5"/><text x="37.5176%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="37.3484%" y="501" width="0.3234%" height="15" fill="rgb(247,80,36)" fg:x="462" fg:w="4"/><text x="37.5984%" y="511.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="37.5101%" y="485" width="0.1617%" height="15" fill="rgb(222,9,20)" fg:x="464" fg:w="2"/><text x="37.7601%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.5101%" y="469" width="0.1617%" height="15" fill="rgb(217,26,45)" fg:x="464" fg:w="2"/><text x="37.7601%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="37.5909%" y="453" width="0.0808%" height="15" fill="rgb(221,67,14)" fg:x="465" fg:w="1"/><text x="37.8409%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.5909%" y="437" width="0.0808%" height="15" fill="rgb(248,100,24)" fg:x="465" fg:w="1"/><text x="37.8409%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5909%" y="421" width="0.0808%" height="15" fill="rgb(230,187,16)" fg:x="465" fg:w="1"/><text x="37.8409%" y="431.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="37.8335%" y="453" width="0.0808%" height="15" fill="rgb(205,108,13)" fg:x="468" fg:w="1"/><text x="38.0835%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="37.8335%" y="437" width="0.0808%" height="15" fill="rgb(235,71,51)" fg:x="468" fg:w="1"/><text x="38.0835%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8335%" y="421" width="0.0808%" height="15" fill="rgb(251,172,48)" fg:x="468" fg:w="1"/><text x="38.0835%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8335%" y="405" width="0.0808%" height="15" fill="rgb(240,96,49)" fg:x="468" fg:w="1"/><text x="38.0835%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.8335%" y="389" width="0.0808%" height="15" fill="rgb(235,46,36)" fg:x="468" fg:w="1"/><text x="38.0835%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.8335%" y="373" width="0.0808%" height="15" fill="rgb(244,3,49)" fg:x="468" fg:w="1"/><text x="38.0835%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.8335%" y="357" width="0.0808%" height="15" fill="rgb(206,78,54)" fg:x="468" fg:w="1"/><text x="38.0835%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.8335%" y="341" width="0.0808%" height="15" fill="rgb(208,85,42)" fg:x="468" fg:w="1"/><text x="38.0835%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8335%" y="325" width="0.0808%" height="15" fill="rgb(219,196,21)" fg:x="468" fg:w="1"/><text x="38.0835%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="37.8335%" y="501" width="0.1617%" height="15" fill="rgb(238,19,9)" fg:x="468" fg:w="2"/><text x="38.0835%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="37.8335%" y="485" width="0.1617%" height="15" fill="rgb(206,86,13)" fg:x="468" fg:w="2"/><text x="38.0835%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="37.8335%" y="469" width="0.1617%" height="15" fill="rgb(214,123,40)" fg:x="468" fg:w="2"/><text x="38.0835%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.9143%" y="453" width="0.0808%" height="15" fill="rgb(243,53,5)" fg:x="469" fg:w="1"/><text x="38.1643%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.9143%" y="437" width="0.0808%" height="15" fill="rgb(254,186,31)" fg:x="469" fg:w="1"/><text x="38.1643%" y="447.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="37.9143%" y="421" width="0.0808%" height="15" fill="rgb(221,216,25)" fg:x="469" fg:w="1"/><text x="38.1643%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (5 samples, 0.40%)</title><rect x="37.6718%" y="549" width="0.4042%" height="15" fill="rgb(248,107,42)" fg:x="466" fg:w="5"/><text x="37.9218%" y="559.50"></text></g><g><title>plugins_core::build::Build::new (5 samples, 0.40%)</title><rect x="37.6718%" y="533" width="0.4042%" height="15" fill="rgb(221,85,43)" fg:x="466" fg:w="5"/><text x="37.9218%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="37.8335%" y="517" width="0.2425%" height="15" fill="rgb(225,34,24)" fg:x="468" fg:w="3"/><text x="38.0835%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="37.9951%" y="501" width="0.0808%" height="15" fill="rgb(211,119,1)" fg:x="470" fg:w="1"/><text x="38.2451%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.9951%" y="485" width="0.0808%" height="15" fill="rgb(254,216,46)" fg:x="470" fg:w="1"/><text x="38.2451%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.9951%" y="469" width="0.0808%" height="15" fill="rgb(238,11,38)" fg:x="470" fg:w="1"/><text x="38.2451%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="38.1568%" y="517" width="0.0808%" height="15" fill="rgb(233,50,15)" fg:x="472" fg:w="1"/><text x="38.4068%" y="527.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="38.1568%" y="501" width="0.0808%" height="15" fill="rgb(217,181,29)" fg:x="472" fg:w="1"/><text x="38.4068%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::scope_key (1 samples, 0.08%)</title><rect x="38.1568%" y="485" width="0.0808%" height="15" fill="rgb(214,56,3)" fg:x="472" fg:w="1"/><text x="38.4068%" y="495.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="38.2377%" y="517" width="0.2425%" height="15" fill="rgb(230,69,45)" fg:x="473" fg:w="3"/><text x="38.4877%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="38.2377%" y="501" width="0.2425%" height="15" fill="rgb(224,201,50)" fg:x="473" fg:w="3"/><text x="38.4877%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="38.3994%" y="485" width="0.0808%" height="15" fill="rgb(217,228,18)" fg:x="475" fg:w="1"/><text x="38.6494%" y="495.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="38.3994%" y="469" width="0.0808%" height="15" fill="rgb(239,33,44)" fg:x="475" fg:w="1"/><text x="38.6494%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.3994%" y="453" width="0.0808%" height="15" fill="rgb(248,210,23)" fg:x="475" fg:w="1"/><text x="38.6494%" y="463.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="38.3994%" y="437" width="0.0808%" height="15" fill="rgb(253,135,8)" fg:x="475" fg:w="1"/><text x="38.6494%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="38.3994%" y="421" width="0.0808%" height="15" fill="rgb(217,98,21)" fg:x="475" fg:w="1"/><text x="38.6494%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3994%" y="405" width="0.0808%" height="15" fill="rgb(253,130,21)" fg:x="475" fg:w="1"/><text x="38.6494%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3994%" y="389" width="0.0808%" height="15" fill="rgb(207,81,54)" fg:x="475" fg:w="1"/><text x="38.6494%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.3994%" y="373" width="0.0808%" height="15" fill="rgb(232,48,33)" fg:x="475" fg:w="1"/><text x="38.6494%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.3994%" y="357" width="0.0808%" height="15" fill="rgb(211,9,35)" fg:x="475" fg:w="1"/><text x="38.6494%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.3994%" y="341" width="0.0808%" height="15" fill="rgb(205,152,21)" fg:x="475" fg:w="1"/><text x="38.6494%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.3994%" y="325" width="0.0808%" height="15" fill="rgb(249,21,27)" fg:x="475" fg:w="1"/><text x="38.6494%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3994%" y="309" width="0.0808%" height="15" fill="rgb(252,29,24)" fg:x="475" fg:w="1"/><text x="38.6494%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (2 samples, 0.16%)</title><rect x="38.4802%" y="485" width="0.1617%" height="15" fill="rgb(230,130,50)" fg:x="476" fg:w="2"/><text x="38.7302%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="38.4802%" y="469" width="0.1617%" height="15" fill="rgb(239,144,14)" fg:x="476" fg:w="2"/><text x="38.7302%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="38.6419%" y="437" width="0.0808%" height="15" fill="rgb(227,111,50)" fg:x="478" fg:w="1"/><text x="38.8919%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.6419%" y="421" width="0.0808%" height="15" fill="rgb(254,84,20)" fg:x="478" fg:w="1"/><text x="38.8919%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.6419%" y="405" width="0.0808%" height="15" fill="rgb(232,90,48)" fg:x="478" fg:w="1"/><text x="38.8919%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.6419%" y="389" width="0.0808%" height="15" fill="rgb(253,63,47)" fg:x="478" fg:w="1"/><text x="38.8919%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.6419%" y="373" width="0.0808%" height="15" fill="rgb(251,146,35)" fg:x="478" fg:w="1"/><text x="38.8919%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.6419%" y="357" width="0.0808%" height="15" fill="rgb(229,192,35)" fg:x="478" fg:w="1"/><text x="38.8919%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.6419%" y="341" width="0.0808%" height="15" fill="rgb(225,68,9)" fg:x="478" fg:w="1"/><text x="38.8919%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.6419%" y="325" width="0.0808%" height="15" fill="rgb(214,97,34)" fg:x="478" fg:w="1"/><text x="38.8919%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.6419%" y="309" width="0.0808%" height="15" fill="rgb(253,31,26)" fg:x="478" fg:w="1"/><text x="38.8919%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.6419%" y="293" width="0.0808%" height="15" fill="rgb(225,151,47)" fg:x="478" fg:w="1"/><text x="38.8919%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.6419%" y="277" width="0.0808%" height="15" fill="rgb(206,185,9)" fg:x="478" fg:w="1"/><text x="38.8919%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.6419%" y="261" width="0.0808%" height="15" fill="rgb(249,65,17)" fg:x="478" fg:w="1"/><text x="38.8919%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.6419%" y="245" width="0.0808%" height="15" fill="rgb(220,110,10)" fg:x="478" fg:w="1"/><text x="38.8919%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6419%" y="229" width="0.0808%" height="15" fill="rgb(222,198,49)" fg:x="478" fg:w="1"/><text x="38.8919%" y="239.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="38.6419%" y="469" width="0.2425%" height="15" fill="rgb(239,81,13)" fg:x="478" fg:w="3"/><text x="38.8919%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.24%)</title><rect x="38.6419%" y="453" width="0.2425%" height="15" fill="rgb(216,128,11)" fg:x="478" fg:w="3"/><text x="38.8919%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="38.7227%" y="437" width="0.1617%" height="15" fill="rgb(247,156,8)" fg:x="479" fg:w="2"/><text x="38.9727%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="38.7227%" y="421" width="0.1617%" height="15" fill="rgb(219,173,1)" fg:x="479" fg:w="2"/><text x="38.9727%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="38.7227%" y="405" width="0.1617%" height="15" fill="rgb(227,42,24)" fg:x="479" fg:w="2"/><text x="38.9727%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="38.8036%" y="389" width="0.0808%" height="15" fill="rgb(253,219,50)" fg:x="480" fg:w="1"/><text x="39.0536%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.8036%" y="373" width="0.0808%" height="15" fill="rgb(215,191,54)" fg:x="480" fg:w="1"/><text x="39.0536%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8036%" y="357" width="0.0808%" height="15" fill="rgb(238,83,12)" fg:x="480" fg:w="1"/><text x="39.0536%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.8844%" y="437" width="0.0808%" height="15" fill="rgb(205,124,9)" fg:x="481" fg:w="1"/><text x="39.1344%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="38.9652%" y="437" width="0.0808%" height="15" fill="rgb(253,174,7)" fg:x="482" fg:w="1"/><text x="39.2152%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.9652%" y="421" width="0.0808%" height="15" fill="rgb(206,134,49)" fg:x="482" fg:w="1"/><text x="39.2152%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="38.9652%" y="405" width="0.0808%" height="15" fill="rgb(221,89,20)" fg:x="482" fg:w="1"/><text x="39.2152%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="38.9652%" y="389" width="0.0808%" height="15" fill="rgb(240,205,13)" fg:x="482" fg:w="1"/><text x="39.2152%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.49%)</title><rect x="38.6419%" y="485" width="0.4850%" height="15" fill="rgb(237,174,32)" fg:x="478" fg:w="6"/><text x="38.8919%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="38.8844%" y="469" width="0.2425%" height="15" fill="rgb(226,12,15)" fg:x="481" fg:w="3"/><text x="39.1344%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.8844%" y="453" width="0.2425%" height="15" fill="rgb(245,160,52)" fg:x="481" fg:w="3"/><text x="39.1344%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="39.0461%" y="437" width="0.0808%" height="15" fill="rgb(253,80,21)" fg:x="483" fg:w="1"/><text x="39.2961%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.0461%" y="421" width="0.0808%" height="15" fill="rgb(231,225,22)" fg:x="483" fg:w="1"/><text x="39.2961%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.73%)</title><rect x="38.4802%" y="501" width="0.7276%" height="15" fill="rgb(253,185,12)" fg:x="476" fg:w="9"/><text x="38.7302%" y="511.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="39.1269%" y="485" width="0.0808%" height="15" fill="rgb(234,197,21)" fg:x="484" fg:w="1"/><text x="39.3769%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.1269%" y="469" width="0.0808%" height="15" fill="rgb(210,47,30)" fg:x="484" fg:w="1"/><text x="39.3769%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2078%" y="501" width="0.0808%" height="15" fill="rgb(246,139,27)" fg:x="485" fg:w="1"/><text x="39.4578%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2078%" y="485" width="0.0808%" height="15" fill="rgb(226,130,16)" fg:x="485" fg:w="1"/><text x="39.4578%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2078%" y="469" width="0.0808%" height="15" fill="rgb(237,208,20)" fg:x="485" fg:w="1"/><text x="39.4578%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2078%" y="453" width="0.0808%" height="15" fill="rgb(245,186,28)" fg:x="485" fg:w="1"/><text x="39.4578%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2078%" y="437" width="0.0808%" height="15" fill="rgb(238,105,39)" fg:x="485" fg:w="1"/><text x="39.4578%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2078%" y="421" width="0.0808%" height="15" fill="rgb(253,228,11)" fg:x="485" fg:w="1"/><text x="39.4578%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.2078%" y="405" width="0.0808%" height="15" fill="rgb(224,136,38)" fg:x="485" fg:w="1"/><text x="39.4578%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.2078%" y="389" width="0.0808%" height="15" fill="rgb(211,3,25)" fg:x="485" fg:w="1"/><text x="39.4578%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.2078%" y="373" width="0.0808%" height="15" fill="rgb(238,66,34)" fg:x="485" fg:w="1"/><text x="39.4578%" y="383.50"></text></g><g><title>plugins_core::build::Build::save (11 samples, 0.89%)</title><rect x="38.4802%" y="517" width="0.8892%" height="15" fill="rgb(223,188,11)" fg:x="476" fg:w="11"/><text x="38.7302%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="39.2886%" y="501" width="0.0808%" height="15" fill="rgb(221,10,35)" fg:x="486" fg:w="1"/><text x="39.5386%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2886%" y="485" width="0.0808%" height="15" fill="rgb(223,18,44)" fg:x="486" fg:w="1"/><text x="39.5386%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2886%" y="469" width="0.0808%" height="15" fill="rgb(220,97,41)" fg:x="486" fg:w="1"/><text x="39.5386%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.2886%" y="453" width="0.0808%" height="15" fill="rgb(206,95,45)" fg:x="486" fg:w="1"/><text x="39.5386%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::into_entity (1 samples, 0.08%)</title><rect x="39.3694%" y="517" width="0.0808%" height="15" fill="rgb(209,96,13)" fg:x="487" fg:w="1"/><text x="39.6194%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (18 samples, 1.46%)</title><rect x="38.0760%" y="549" width="1.4551%" height="15" fill="rgb(237,39,34)" fg:x="471" fg:w="18"/><text x="38.3260%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.37%)</title><rect x="38.1568%" y="533" width="1.3743%" height="15" fill="rgb(213,49,47)" fg:x="472" fg:w="17"/><text x="38.4068%" y="543.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (1 samples, 0.08%)</title><rect x="39.4503%" y="517" width="0.0808%" height="15" fill="rgb(205,107,27)" fg:x="488" fg:w="1"/><text x="39.7003%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="39.4503%" y="501" width="0.0808%" height="15" fill="rgb(212,142,9)" fg:x="488" fg:w="1"/><text x="39.7003%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="39.4503%" y="485" width="0.0808%" height="15" fill="rgb(226,182,0)" fg:x="488" fg:w="1"/><text x="39.7003%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.4503%" y="469" width="0.0808%" height="15" fill="rgb(231,3,53)" fg:x="488" fg:w="1"/><text x="39.7003%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="39.4503%" y="453" width="0.0808%" height="15" fill="rgb(246,111,28)" fg:x="488" fg:w="1"/><text x="39.7003%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="39.5311%" y="517" width="0.0808%" height="15" fill="rgb(254,183,7)" fg:x="489" fg:w="1"/><text x="39.7811%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.5311%" y="501" width="0.0808%" height="15" fill="rgb(247,177,28)" fg:x="489" fg:w="1"/><text x="39.7811%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="39.5311%" y="485" width="0.0808%" height="15" fill="rgb(244,43,1)" fg:x="489" fg:w="1"/><text x="39.7811%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="39.6928%" y="453" width="0.1617%" height="15" fill="rgb(207,2,35)" fg:x="491" fg:w="2"/><text x="39.9428%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (5 samples, 0.40%)</title><rect x="39.5311%" y="533" width="0.4042%" height="15" fill="rgb(213,83,22)" fg:x="489" fg:w="5"/><text x="39.7811%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (4 samples, 0.32%)</title><rect x="39.6120%" y="517" width="0.3234%" height="15" fill="rgb(246,212,13)" fg:x="490" fg:w="4"/><text x="39.8620%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="39.6928%" y="501" width="0.2425%" height="15" fill="rgb(213,127,46)" fg:x="491" fg:w="3"/><text x="39.9428%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="39.6928%" y="485" width="0.2425%" height="15" fill="rgb(219,215,39)" fg:x="491" fg:w="3"/><text x="39.9428%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="39.6928%" y="469" width="0.2425%" height="15" fill="rgb(227,99,17)" fg:x="491" fg:w="3"/><text x="39.9428%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.8545%" y="453" width="0.0808%" height="15" fill="rgb(208,155,18)" fg:x="493" fg:w="1"/><text x="40.1045%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8545%" y="437" width="0.0808%" height="15" fill="rgb(223,204,38)" fg:x="493" fg:w="1"/><text x="40.1045%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8545%" y="421" width="0.0808%" height="15" fill="rgb(212,114,21)" fg:x="493" fg:w="1"/><text x="40.1045%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.9353%" y="517" width="0.0808%" height="15" fill="rgb(250,74,13)" fg:x="494" fg:w="1"/><text x="40.1853%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.9353%" y="501" width="0.0808%" height="15" fill="rgb(234,7,1)" fg:x="494" fg:w="1"/><text x="40.1853%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.9353%" y="485" width="0.0808%" height="15" fill="rgb(207,138,31)" fg:x="494" fg:w="1"/><text x="40.1853%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.9353%" y="469" width="0.0808%" height="15" fill="rgb(215,186,42)" fg:x="494" fg:w="1"/><text x="40.1853%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.9353%" y="453" width="0.0808%" height="15" fill="rgb(229,205,49)" fg:x="494" fg:w="1"/><text x="40.1853%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9353%" y="437" width="0.0808%" height="15" fill="rgb(216,156,32)" fg:x="494" fg:w="1"/><text x="40.1853%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="39.9353%" y="533" width="0.1617%" height="15" fill="rgb(238,7,21)" fg:x="494" fg:w="2"/><text x="40.1853%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0162%" y="517" width="0.0808%" height="15" fill="rgb(249,190,22)" fg:x="495" fg:w="1"/><text x="40.2662%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="40.0970%" y="517" width="0.1617%" height="15" fill="rgb(253,51,31)" fg:x="496" fg:w="2"/><text x="40.3470%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="40.1778%" y="501" width="0.0808%" height="15" fill="rgb(237,90,54)" fg:x="497" fg:w="1"/><text x="40.4278%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="40.1778%" y="485" width="0.0808%" height="15" fill="rgb(250,214,33)" fg:x="497" fg:w="1"/><text x="40.4278%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.1778%" y="469" width="0.0808%" height="15" fill="rgb(237,10,49)" fg:x="497" fg:w="1"/><text x="40.4278%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1778%" y="453" width="0.0808%" height="15" fill="rgb(241,56,36)" fg:x="497" fg:w="1"/><text x="40.4278%" y="463.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="40.0970%" y="533" width="0.2425%" height="15" fill="rgb(227,164,12)" fg:x="496" fg:w="3"/><text x="40.3470%" y="543.50"></text></g><g><title>kernel::model::builder::build_entity (1 samples, 0.08%)</title><rect x="40.2587%" y="517" width="0.0808%" height="15" fill="rgb(249,149,35)" fg:x="498" fg:w="1"/><text x="40.5087%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.5012%" y="485" width="0.0808%" height="15" fill="rgb(238,227,50)" fg:x="501" fg:w="1"/><text x="40.7512%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.5012%" y="469" width="0.0808%" height="15" fill="rgb(235,102,45)" fg:x="501" fg:w="1"/><text x="40.7512%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="40.5012%" y="501" width="0.2425%" height="15" fill="rgb(211,10,38)" fg:x="501" fg:w="3"/><text x="40.7512%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.5821%" y="485" width="0.1617%" height="15" fill="rgb(219,77,48)" fg:x="502" fg:w="2"/><text x="40.8321%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.5821%" y="469" width="0.1617%" height="15" fill="rgb(246,6,15)" fg:x="502" fg:w="2"/><text x="40.8321%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="40.5821%" y="453" width="0.1617%" height="15" fill="rgb(207,220,2)" fg:x="502" fg:w="2"/><text x="40.8321%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.5821%" y="437" width="0.1617%" height="15" fill="rgb(242,48,14)" fg:x="502" fg:w="2"/><text x="40.8321%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.6629%" y="421" width="0.0808%" height="15" fill="rgb(218,19,27)" fg:x="503" fg:w="1"/><text x="40.9129%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6629%" y="405" width="0.0808%" height="15" fill="rgb(228,0,35)" fg:x="503" fg:w="1"/><text x="40.9129%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="40.7437%" y="453" width="0.0808%" height="15" fill="rgb(244,142,54)" fg:x="504" fg:w="1"/><text x="40.9937%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.7437%" y="437" width="0.0808%" height="15" fill="rgb(243,217,40)" fg:x="504" fg:w="1"/><text x="40.9937%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7437%" y="421" width="0.0808%" height="15" fill="rgb(207,114,16)" fg:x="504" fg:w="1"/><text x="40.9937%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.7437%" y="405" width="0.0808%" height="15" fill="rgb(224,33,25)" fg:x="504" fg:w="1"/><text x="40.9937%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7437%" y="389" width="0.0808%" height="15" fill="rgb(230,93,54)" fg:x="504" fg:w="1"/><text x="40.9937%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.7437%" y="373" width="0.0808%" height="15" fill="rgb(224,56,24)" fg:x="504" fg:w="1"/><text x="40.9937%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="40.7437%" y="485" width="0.1617%" height="15" fill="rgb(235,189,50)" fg:x="504" fg:w="2"/><text x="40.9937%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="40.7437%" y="469" width="0.1617%" height="15" fill="rgb(242,173,8)" fg:x="504" fg:w="2"/><text x="40.9937%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="40.8246%" y="453" width="0.0808%" height="15" fill="rgb(209,206,10)" fg:x="505" fg:w="1"/><text x="41.0746%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="40.8246%" y="437" width="0.0808%" height="15" fill="rgb(213,182,44)" fg:x="505" fg:w="1"/><text x="41.0746%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.8246%" y="421" width="0.0808%" height="15" fill="rgb(243,51,15)" fg:x="505" fg:w="1"/><text x="41.0746%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.8246%" y="405" width="0.0808%" height="15" fill="rgb(241,13,14)" fg:x="505" fg:w="1"/><text x="41.0746%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.8246%" y="389" width="0.0808%" height="15" fill="rgb(239,147,24)" fg:x="505" fg:w="1"/><text x="41.0746%" y="399.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="40.9054%" y="485" width="0.1617%" height="15" fill="rgb(223,129,16)" fg:x="506" fg:w="2"/><text x="41.1554%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.9054%" y="469" width="0.1617%" height="15" fill="rgb(209,169,13)" fg:x="506" fg:w="2"/><text x="41.1554%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="40.9863%" y="453" width="0.0808%" height="15" fill="rgb(235,159,41)" fg:x="507" fg:w="1"/><text x="41.2363%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9863%" y="437" width="0.0808%" height="15" fill="rgb(223,219,48)" fg:x="507" fg:w="1"/><text x="41.2363%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="40.5012%" y="517" width="0.8084%" height="15" fill="rgb(236,80,13)" fg:x="501" fg:w="10"/><text x="40.7512%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="40.7437%" y="501" width="0.5659%" height="15" fill="rgb(213,5,6)" fg:x="504" fg:w="7"/><text x="40.9937%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="41.0671%" y="485" width="0.2425%" height="15" fill="rgb(205,59,21)" fg:x="508" fg:w="3"/><text x="41.3171%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="41.0671%" y="469" width="0.2425%" height="15" fill="rgb(247,137,35)" fg:x="508" fg:w="3"/><text x="41.3171%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="41.2288%" y="453" width="0.0808%" height="15" fill="rgb(242,208,28)" fg:x="510" fg:w="1"/><text x="41.4788%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="41.2288%" y="437" width="0.0808%" height="15" fill="rgb(245,62,25)" fg:x="510" fg:w="1"/><text x="41.4788%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="41.2288%" y="421" width="0.0808%" height="15" fill="rgb(233,99,54)" fg:x="510" fg:w="1"/><text x="41.4788%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="41.2288%" y="405" width="0.0808%" height="15" fill="rgb(213,10,37)" fg:x="510" fg:w="1"/><text x="41.4788%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="41.2288%" y="389" width="0.0808%" height="15" fill="rgb(235,143,30)" fg:x="510" fg:w="1"/><text x="41.4788%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="41.2288%" y="373" width="0.0808%" height="15" fill="rgb(250,146,33)" fg:x="510" fg:w="1"/><text x="41.4788%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="41.2288%" y="357" width="0.0808%" height="15" fill="rgb(226,198,42)" fg:x="510" fg:w="1"/><text x="41.4788%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.3096%" y="517" width="0.0808%" height="15" fill="rgb(222,55,6)" fg:x="511" fg:w="1"/><text x="41.5596%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.3096%" y="501" width="0.0808%" height="15" fill="rgb(213,224,31)" fg:x="511" fg:w="1"/><text x="41.5596%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.3096%" y="485" width="0.0808%" height="15" fill="rgb(226,103,35)" fg:x="511" fg:w="1"/><text x="41.5596%" y="495.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (359 samples, 29.02%)</title><rect x="12.5303%" y="565" width="29.0218%" height="15" fill="rgb(205,66,45)" fg:x="155" fg:w="359"/><text x="12.7803%" y="575.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixtu..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (25 samples, 2.02%)</title><rect x="39.5311%" y="549" width="2.0210%" height="15" fill="rgb(226,51,42)" fg:x="489" fg:w="25"/><text x="39.7811%" y="559.50">p..</text></g><g><title>plugins_core::build::Build::save (15 samples, 1.21%)</title><rect x="40.3395%" y="533" width="1.2126%" height="15" fill="rgb(206,69,1)" fg:x="499" fg:w="15"/><text x="40.5895%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="41.3905%" y="517" width="0.1617%" height="15" fill="rgb(213,228,47)" fg:x="512" fg:w="2"/><text x="41.6405%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.3905%" y="501" width="0.1617%" height="15" fill="rgb(224,204,18)" fg:x="512" fg:w="2"/><text x="41.6405%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.3905%" y="485" width="0.1617%" height="15" fill="rgb(253,187,47)" fg:x="512" fg:w="2"/><text x="41.6405%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.4713%" y="469" width="0.0808%" height="15" fill="rgb(232,61,2)" fg:x="513" fg:w="1"/><text x="41.7213%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.4713%" y="453" width="0.0808%" height="15" fill="rgb(213,132,35)" fg:x="513" fg:w="1"/><text x="41.7213%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5521%" y="565" width="0.0808%" height="15" fill="rgb(247,33,21)" fg:x="514" fg:w="1"/><text x="41.8021%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="41.6330%" y="565" width="0.0808%" height="15" fill="rgb(233,71,46)" fg:x="515" fg:w="1"/><text x="41.8830%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.6330%" y="549" width="0.0808%" height="15" fill="rgb(222,173,43)" fg:x="515" fg:w="1"/><text x="41.8830%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="41.7947%" y="549" width="0.1617%" height="15" fill="rgb(249,218,47)" fg:x="517" fg:w="2"/><text x="42.0447%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.8755%" y="533" width="0.0808%" height="15" fill="rgb(254,185,48)" fg:x="518" fg:w="1"/><text x="42.1255%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.0372%" y="405" width="0.0808%" height="15" fill="rgb(252,165,50)" fg:x="520" fg:w="1"/><text x="42.2872%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.0372%" y="389" width="0.0808%" height="15" fill="rgb(206,219,6)" fg:x="520" fg:w="1"/><text x="42.2872%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="42.0372%" y="373" width="0.0808%" height="15" fill="rgb(212,212,45)" fg:x="520" fg:w="1"/><text x="42.2872%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="42.0372%" y="357" width="0.0808%" height="15" fill="rgb(221,31,9)" fg:x="520" fg:w="1"/><text x="42.2872%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="42.0372%" y="341" width="0.0808%" height="15" fill="rgb(234,198,39)" fg:x="520" fg:w="1"/><text x="42.2872%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="42.0372%" y="325" width="0.0808%" height="15" fill="rgb(252,145,46)" fg:x="520" fg:w="1"/><text x="42.2872%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.0372%" y="309" width="0.0808%" height="15" fill="rgb(237,149,0)" fg:x="520" fg:w="1"/><text x="42.2872%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="41.9563%" y="437" width="0.2425%" height="15" fill="rgb(229,65,5)" fg:x="519" fg:w="3"/><text x="42.2063%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="41.9563%" y="421" width="0.2425%" height="15" fill="rgb(235,60,36)" fg:x="519" fg:w="3"/><text x="42.2063%" y="431.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="42.1180%" y="405" width="0.0808%" height="15" fill="rgb(222,47,18)" fg:x="521" fg:w="1"/><text x="42.3680%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.1180%" y="389" width="0.0808%" height="15" fill="rgb(235,114,22)" fg:x="521" fg:w="1"/><text x="42.3680%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="42.1180%" y="373" width="0.0808%" height="15" fill="rgb(209,167,11)" fg:x="521" fg:w="1"/><text x="42.3680%" y="383.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="42.1180%" y="357" width="0.0808%" height="15" fill="rgb(251,73,18)" fg:x="521" fg:w="1"/><text x="42.3680%" y="367.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.08%)</title><rect x="42.1180%" y="341" width="0.0808%" height="15" fill="rgb(217,60,17)" fg:x="521" fg:w="1"/><text x="42.3680%" y="351.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.08%)</title><rect x="42.1180%" y="325" width="0.0808%" height="15" fill="rgb(224,36,37)" fg:x="521" fg:w="1"/><text x="42.3680%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="42.1180%" y="309" width="0.0808%" height="15" fill="rgb(211,21,32)" fg:x="521" fg:w="1"/><text x="42.3680%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="42.1180%" y="293" width="0.0808%" height="15" fill="rgb(231,55,48)" fg:x="521" fg:w="1"/><text x="42.3680%" y="303.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="42.1180%" y="277" width="0.0808%" height="15" fill="rgb(227,42,18)" fg:x="521" fg:w="1"/><text x="42.3680%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="42.1180%" y="261" width="0.0808%" height="15" fill="rgb(217,2,27)" fg:x="521" fg:w="1"/><text x="42.3680%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="42.1180%" y="245" width="0.0808%" height="15" fill="rgb(251,138,23)" fg:x="521" fg:w="1"/><text x="42.3680%" y="255.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="41.9563%" y="549" width="0.3234%" height="15" fill="rgb(226,184,11)" fg:x="519" fg:w="4"/><text x="42.2063%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="41.9563%" y="533" width="0.3234%" height="15" fill="rgb(242,142,12)" fg:x="519" fg:w="4"/><text x="42.2063%" y="543.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="41.9563%" y="517" width="0.3234%" height="15" fill="rgb(234,187,18)" fg:x="519" fg:w="4"/><text x="42.2063%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="41.9563%" y="501" width="0.3234%" height="15" fill="rgb(237,44,42)" fg:x="519" fg:w="4"/><text x="42.2063%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="41.9563%" y="485" width="0.3234%" height="15" fill="rgb(211,90,23)" fg:x="519" fg:w="4"/><text x="42.2063%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (4 samples, 0.32%)</title><rect x="41.9563%" y="469" width="0.3234%" height="15" fill="rgb(207,81,18)" fg:x="519" fg:w="4"/><text x="42.2063%" y="479.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (4 samples, 0.32%)</title><rect x="41.9563%" y="453" width="0.3234%" height="15" fill="rgb(222,107,28)" fg:x="519" fg:w="4"/><text x="42.2063%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.1989%" y="437" width="0.0808%" height="15" fill="rgb(237,83,52)" fg:x="522" fg:w="1"/><text x="42.4489%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.1989%" y="421" width="0.0808%" height="15" fill="rgb(208,67,11)" fg:x="522" fg:w="1"/><text x="42.4489%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="42.1989%" y="405" width="0.0808%" height="15" fill="rgb(249,157,49)" fg:x="522" fg:w="1"/><text x="42.4489%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="42.1989%" y="389" width="0.0808%" height="15" fill="rgb(243,200,1)" fg:x="522" fg:w="1"/><text x="42.4489%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="42.1989%" y="373" width="0.0808%" height="15" fill="rgb(225,162,37)" fg:x="522" fg:w="1"/><text x="42.4489%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="42.1989%" y="357" width="0.0808%" height="15" fill="rgb(242,92,13)" fg:x="522" fg:w="1"/><text x="42.4489%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3605%" y="517" width="0.0808%" height="15" fill="rgb(220,43,36)" fg:x="524" fg:w="1"/><text x="42.6105%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.3605%" y="501" width="0.0808%" height="15" fill="rgb(213,165,48)" fg:x="524" fg:w="1"/><text x="42.6105%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.4414%" y="405" width="0.0808%" height="15" fill="rgb(227,200,9)" fg:x="525" fg:w="1"/><text x="42.6914%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="42.4414%" y="421" width="0.1617%" height="15" fill="rgb(221,222,28)" fg:x="525" fg:w="2"/><text x="42.6914%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.5222%" y="405" width="0.0808%" height="15" fill="rgb(223,142,26)" fg:x="526" fg:w="1"/><text x="42.7722%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5222%" y="389" width="0.0808%" height="15" fill="rgb(243,46,9)" fg:x="526" fg:w="1"/><text x="42.7722%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="42.4414%" y="437" width="0.3234%" height="15" fill="rgb(250,56,11)" fg:x="525" fg:w="4"/><text x="42.6914%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="42.6031%" y="421" width="0.1617%" height="15" fill="rgb(229,113,5)" fg:x="527" fg:w="2"/><text x="42.8531%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="42.6031%" y="405" width="0.1617%" height="15" fill="rgb(244,108,28)" fg:x="527" fg:w="2"/><text x="42.8531%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="42.6031%" y="389" width="0.1617%" height="15" fill="rgb(242,119,50)" fg:x="527" fg:w="2"/><text x="42.8531%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="42.6031%" y="373" width="0.1617%" height="15" fill="rgb(224,164,23)" fg:x="527" fg:w="2"/><text x="42.8531%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6839%" y="357" width="0.0808%" height="15" fill="rgb(214,227,44)" fg:x="528" fg:w="1"/><text x="42.9339%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="42.4414%" y="469" width="0.4042%" height="15" fill="rgb(238,202,4)" fg:x="525" fg:w="5"/><text x="42.6914%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="42.4414%" y="453" width="0.4042%" height="15" fill="rgb(213,190,30)" fg:x="525" fg:w="5"/><text x="42.6914%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.7648%" y="437" width="0.0808%" height="15" fill="rgb(239,15,2)" fg:x="529" fg:w="1"/><text x="43.0148%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="42.8456%" y="453" width="0.1617%" height="15" fill="rgb(249,229,4)" fg:x="530" fg:w="2"/><text x="43.0956%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="43.0073%" y="437" width="0.3234%" height="15" fill="rgb(239,75,44)" fg:x="532" fg:w="4"/><text x="43.2573%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="43.0073%" y="421" width="0.3234%" height="15" fill="rgb(251,206,23)" fg:x="532" fg:w="4"/><text x="43.2573%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="43.0073%" y="405" width="0.3234%" height="15" fill="rgb(215,208,0)" fg:x="532" fg:w="4"/><text x="43.2573%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="43.0073%" y="389" width="0.3234%" height="15" fill="rgb(230,75,50)" fg:x="532" fg:w="4"/><text x="43.2573%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="43.1690%" y="373" width="0.1617%" height="15" fill="rgb(246,180,39)" fg:x="534" fg:w="2"/><text x="43.4190%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.2498%" y="357" width="0.0808%" height="15" fill="rgb(249,175,24)" fg:x="535" fg:w="1"/><text x="43.4998%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="43.2498%" y="341" width="0.0808%" height="15" fill="rgb(247,176,22)" fg:x="535" fg:w="1"/><text x="43.4998%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="43.4115%" y="421" width="0.0808%" height="15" fill="rgb(241,100,24)" fg:x="537" fg:w="1"/><text x="43.6615%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="43.4115%" y="405" width="0.0808%" height="15" fill="rgb(233,4,35)" fg:x="537" fg:w="1"/><text x="43.6615%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="43.4115%" y="389" width="0.0808%" height="15" fill="rgb(211,164,46)" fg:x="537" fg:w="1"/><text x="43.6615%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="43.4115%" y="373" width="0.0808%" height="15" fill="rgb(242,99,53)" fg:x="537" fg:w="1"/><text x="43.6615%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="43.4115%" y="357" width="0.0808%" height="15" fill="rgb(243,45,33)" fg:x="537" fg:w="1"/><text x="43.6615%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="43.4923%" y="421" width="0.1617%" height="15" fill="rgb(217,55,21)" fg:x="538" fg:w="2"/><text x="43.7423%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.5732%" y="405" width="0.0808%" height="15" fill="rgb(245,145,46)" fg:x="539" fg:w="1"/><text x="43.8232%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="43.6540%" y="405" width="0.1617%" height="15" fill="rgb(215,112,45)" fg:x="540" fg:w="2"/><text x="43.9040%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.7348%" y="389" width="0.0808%" height="15" fill="rgb(228,104,16)" fg:x="541" fg:w="1"/><text x="43.9848%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.7348%" y="373" width="0.0808%" height="15" fill="rgb(239,186,38)" fg:x="541" fg:w="1"/><text x="43.9848%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.8157%" y="389" width="0.0808%" height="15" fill="rgb(228,38,35)" fg:x="542" fg:w="1"/><text x="44.0657%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="43.8965%" y="389" width="0.2425%" height="15" fill="rgb(251,42,40)" fg:x="543" fg:w="3"/><text x="44.1465%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="43.9774%" y="373" width="0.1617%" height="15" fill="rgb(210,51,19)" fg:x="544" fg:w="2"/><text x="44.2274%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="43.8157%" y="405" width="0.4042%" height="15" fill="rgb(236,94,42)" fg:x="542" fg:w="5"/><text x="44.0657%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.1390%" y="389" width="0.0808%" height="15" fill="rgb(239,167,16)" fg:x="546" fg:w="1"/><text x="44.3890%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="43.6540%" y="421" width="0.8892%" height="15" fill="rgb(252,175,31)" fg:x="540" fg:w="11"/><text x="43.9040%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="44.2199%" y="405" width="0.3234%" height="15" fill="rgb(206,166,30)" fg:x="547" fg:w="4"/><text x="44.4699%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="44.3816%" y="389" width="0.1617%" height="15" fill="rgb(206,209,37)" fg:x="549" fg:w="2"/><text x="44.6316%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="44.4624%" y="373" width="0.0808%" height="15" fill="rgb(226,91,4)" fg:x="550" fg:w="1"/><text x="44.7124%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.46%)</title><rect x="43.3306%" y="437" width="1.4551%" height="15" fill="rgb(222,167,0)" fg:x="536" fg:w="18"/><text x="43.5806%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="44.5432%" y="421" width="0.2425%" height="15" fill="rgb(211,70,14)" fg:x="551" fg:w="3"/><text x="44.7932%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.7049%" y="405" width="0.0808%" height="15" fill="rgb(214,84,42)" fg:x="553" fg:w="1"/><text x="44.9549%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="44.7049%" y="389" width="0.0808%" height="15" fill="rgb(235,157,37)" fg:x="553" fg:w="1"/><text x="44.9549%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.10%)</title><rect x="43.0073%" y="453" width="2.1019%" height="15" fill="rgb(225,13,6)" fg:x="532" fg:w="26"/><text x="43.2573%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="44.7858%" y="437" width="0.3234%" height="15" fill="rgb(205,202,1)" fg:x="554" fg:w="4"/><text x="45.0358%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="44.8666%" y="421" width="0.2425%" height="15" fill="rgb(232,195,26)" fg:x="555" fg:w="3"/><text x="45.1166%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="44.9475%" y="405" width="0.1617%" height="15" fill="rgb(208,102,26)" fg:x="556" fg:w="2"/><text x="45.1975%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.0283%" y="389" width="0.0808%" height="15" fill="rgb(215,41,39)" fg:x="557" fg:w="1"/><text x="45.2783%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.0283%" y="373" width="0.0808%" height="15" fill="rgb(247,139,11)" fg:x="557" fg:w="1"/><text x="45.2783%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (30 samples, 2.43%)</title><rect x="42.8456%" y="469" width="2.4252%" height="15" fill="rgb(243,99,6)" fg:x="530" fg:w="30"/><text x="43.0956%" y="479.50">&lt;s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="45.1091%" y="453" width="0.1617%" height="15" fill="rgb(230,168,48)" fg:x="558" fg:w="2"/><text x="45.3591%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.1900%" y="437" width="0.0808%" height="15" fill="rgb(238,227,13)" fg:x="559" fg:w="1"/><text x="45.4400%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.1900%" y="421" width="0.0808%" height="15" fill="rgb(209,109,13)" fg:x="559" fg:w="1"/><text x="45.4400%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.1900%" y="405" width="0.0808%" height="15" fill="rgb(228,195,1)" fg:x="559" fg:w="1"/><text x="45.4400%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.1900%" y="389" width="0.0808%" height="15" fill="rgb(230,218,0)" fg:x="559" fg:w="1"/><text x="45.4400%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.2708%" y="405" width="0.1617%" height="15" fill="rgb(206,1,45)" fg:x="560" fg:w="2"/><text x="45.5208%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="45.5133%" y="389" width="0.2425%" height="15" fill="rgb(209,124,26)" fg:x="563" fg:w="3"/><text x="45.7633%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.7559%" y="373" width="0.0808%" height="15" fill="rgb(220,59,8)" fg:x="566" fg:w="1"/><text x="46.0059%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.8367%" y="325" width="0.0808%" height="15" fill="rgb(251,41,37)" fg:x="567" fg:w="1"/><text x="46.0867%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="45.8367%" y="357" width="0.1617%" height="15" fill="rgb(239,152,21)" fg:x="567" fg:w="2"/><text x="46.0867%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="45.8367%" y="341" width="0.1617%" height="15" fill="rgb(226,32,1)" fg:x="567" fg:w="2"/><text x="46.0867%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.9175%" y="325" width="0.0808%" height="15" fill="rgb(230,154,36)" fg:x="568" fg:w="1"/><text x="46.1675%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.9175%" y="309" width="0.0808%" height="15" fill="rgb(208,228,43)" fg:x="568" fg:w="1"/><text x="46.1675%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.05%)</title><rect x="45.2708%" y="437" width="1.0509%" height="15" fill="rgb(214,203,3)" fg:x="560" fg:w="13"/><text x="45.5208%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.05%)</title><rect x="45.2708%" y="421" width="1.0509%" height="15" fill="rgb(207,149,29)" fg:x="560" fg:w="13"/><text x="45.5208%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="45.4325%" y="405" width="0.8892%" height="15" fill="rgb(250,105,7)" fg:x="562" fg:w="11"/><text x="45.6825%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="45.7559%" y="389" width="0.5659%" height="15" fill="rgb(232,222,16)" fg:x="566" fg:w="7"/><text x="46.0059%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="45.8367%" y="373" width="0.4850%" height="15" fill="rgb(209,32,24)" fg:x="567" fg:w="6"/><text x="46.0867%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="45.9984%" y="357" width="0.3234%" height="15" fill="rgb(225,13,6)" fg:x="569" fg:w="4"/><text x="46.2484%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="46.1601%" y="341" width="0.1617%" height="15" fill="rgb(245,226,26)" fg:x="571" fg:w="2"/><text x="46.4101%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2409%" y="325" width="0.0808%" height="15" fill="rgb(229,178,27)" fg:x="572" fg:w="1"/><text x="46.4909%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="46.3217%" y="437" width="0.0808%" height="15" fill="rgb(205,227,28)" fg:x="573" fg:w="1"/><text x="46.5717%" y="447.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPath as core::convert::From&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::from (1 samples, 0.08%)</title><rect x="46.3217%" y="421" width="0.0808%" height="15" fill="rgb(210,191,45)" fg:x="573" fg:w="1"/><text x="46.5717%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="46.3217%" y="405" width="0.0808%" height="15" fill="rgb(206,124,16)" fg:x="573" fg:w="1"/><text x="46.5717%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (16 samples, 1.29%)</title><rect x="45.2708%" y="453" width="1.2935%" height="15" fill="rgb(210,162,0)" fg:x="560" fg:w="16"/><text x="45.5208%" y="463.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="46.4026%" y="437" width="0.1617%" height="15" fill="rgb(211,54,38)" fg:x="574" fg:w="2"/><text x="46.6526%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="46.4026%" y="421" width="0.1617%" height="15" fill="rgb(248,192,3)" fg:x="574" fg:w="2"/><text x="46.6526%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="46.4026%" y="405" width="0.1617%" height="15" fill="rgb(233,187,18)" fg:x="574" fg:w="2"/><text x="46.6526%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="46.4026%" y="389" width="0.1617%" height="15" fill="rgb(237,208,14)" fg:x="574" fg:w="2"/><text x="46.6526%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="46.4834%" y="373" width="0.0808%" height="15" fill="rgb(212,77,1)" fg:x="575" fg:w="1"/><text x="46.7334%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="46.4834%" y="357" width="0.0808%" height="15" fill="rgb(210,163,22)" fg:x="575" fg:w="1"/><text x="46.7334%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6451%" y="421" width="0.0808%" height="15" fill="rgb(250,58,28)" fg:x="577" fg:w="1"/><text x="46.8951%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="46.7259%" y="421" width="0.0808%" height="15" fill="rgb(254,28,41)" fg:x="578" fg:w="1"/><text x="46.9759%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="46.7259%" y="405" width="0.0808%" height="15" fill="rgb(237,162,36)" fg:x="578" fg:w="1"/><text x="46.9759%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="46.8068%" y="421" width="0.4042%" height="15" fill="rgb(232,56,6)" fg:x="579" fg:w="5"/><text x="47.0568%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="47.0493%" y="405" width="0.1617%" height="15" fill="rgb(216,127,42)" fg:x="582" fg:w="2"/><text x="47.2993%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (5 samples, 0.40%)</title><rect x="47.2110%" y="421" width="0.4042%" height="15" fill="rgb(241,69,15)" fg:x="584" fg:w="5"/><text x="47.4610%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="47.4535%" y="405" width="0.1617%" height="15" fill="rgb(227,180,19)" fg:x="587" fg:w="2"/><text x="47.7035%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="47.6152%" y="421" width="0.0808%" height="15" fill="rgb(231,188,29)" fg:x="589" fg:w="1"/><text x="47.8652%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.6152%" y="405" width="0.0808%" height="15" fill="rgb(224,176,27)" fg:x="589" fg:w="1"/><text x="47.8652%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.6152%" y="389" width="0.0808%" height="15" fill="rgb(249,214,19)" fg:x="589" fg:w="1"/><text x="47.8652%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="47.6960%" y="421" width="0.0808%" height="15" fill="rgb(240,0,4)" fg:x="590" fg:w="1"/><text x="47.9460%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.6960%" y="405" width="0.0808%" height="15" fill="rgb(233,28,41)" fg:x="590" fg:w="1"/><text x="47.9460%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.6960%" y="389" width="0.0808%" height="15" fill="rgb(220,90,51)" fg:x="590" fg:w="1"/><text x="47.9460%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.8577%" y="389" width="0.0808%" height="15" fill="rgb(250,52,22)" fg:x="592" fg:w="1"/><text x="48.1077%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="48.1002%" y="373" width="0.3234%" height="15" fill="rgb(231,152,36)" fg:x="595" fg:w="4"/><text x="48.3502%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.2619%" y="357" width="0.1617%" height="15" fill="rgb(250,218,4)" fg:x="597" fg:w="2"/><text x="48.5119%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="48.4236%" y="357" width="0.0808%" height="15" fill="rgb(210,38,21)" fg:x="599" fg:w="1"/><text x="48.6736%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="48.5853%" y="341" width="0.0808%" height="15" fill="rgb(230,75,13)" fg:x="601" fg:w="1"/><text x="48.8353%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="48.6661%" y="341" width="0.0808%" height="15" fill="rgb(250,68,53)" fg:x="602" fg:w="1"/><text x="48.9161%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="48.4236%" y="373" width="0.4042%" height="15" fill="rgb(250,210,16)" fg:x="599" fg:w="5"/><text x="48.6736%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="48.5044%" y="357" width="0.3234%" height="15" fill="rgb(240,132,5)" fg:x="600" fg:w="4"/><text x="48.7544%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7470%" y="341" width="0.0808%" height="15" fill="rgb(222,148,48)" fg:x="603" fg:w="1"/><text x="48.9970%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.2320%" y="357" width="0.0808%" height="15" fill="rgb(247,181,24)" fg:x="609" fg:w="1"/><text x="49.4820%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.3937%" y="341" width="0.1617%" height="15" fill="rgb(239,5,31)" fg:x="611" fg:w="2"/><text x="49.6437%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="49.4745%" y="325" width="0.0808%" height="15" fill="rgb(241,152,38)" fg:x="612" fg:w="1"/><text x="49.7245%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.8787%" y="325" width="0.0808%" height="15" fill="rgb(246,200,37)" fg:x="617" fg:w="1"/><text x="50.1287%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.0404%" y="309" width="0.1617%" height="15" fill="rgb(243,210,26)" fg:x="619" fg:w="2"/><text x="50.2904%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.05%)</title><rect x="49.3129%" y="357" width="1.0509%" height="15" fill="rgb(222,22,22)" fg:x="610" fg:w="13"/><text x="49.5629%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="49.5554%" y="341" width="0.8084%" height="15" fill="rgb(208,129,28)" fg:x="613" fg:w="10"/><text x="49.8054%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="49.9596%" y="325" width="0.4042%" height="15" fill="rgb(254,169,28)" fg:x="618" fg:w="5"/><text x="50.2096%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="50.2021%" y="309" width="0.1617%" height="15" fill="rgb(225,45,17)" fg:x="621" fg:w="2"/><text x="50.4521%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2829%" y="293" width="0.0808%" height="15" fill="rgb(232,199,2)" fg:x="622" fg:w="1"/><text x="50.5329%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (31 samples, 2.51%)</title><rect x="47.9386%" y="389" width="2.5061%" height="15" fill="rgb(235,33,40)" fg:x="593" fg:w="31"/><text x="48.1886%" y="399.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.62%)</title><rect x="48.8278%" y="373" width="1.6168%" height="15" fill="rgb(237,89,50)" fg:x="604" fg:w="20"/><text x="49.0778%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3638%" y="357" width="0.0808%" height="15" fill="rgb(238,126,5)" fg:x="623" fg:w="1"/><text x="50.6138%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (35 samples, 2.83%)</title><rect x="47.7769%" y="405" width="2.8294%" height="15" fill="rgb(247,214,42)" fg:x="591" fg:w="35"/><text x="48.0269%" y="415.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="50.4446%" y="389" width="0.1617%" height="15" fill="rgb(238,60,45)" fg:x="624" fg:w="2"/><text x="50.6946%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.5255%" y="373" width="0.0808%" height="15" fill="rgb(225,69,44)" fg:x="625" fg:w="1"/><text x="50.7755%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (53 samples, 4.28%)</title><rect x="46.5643%" y="453" width="4.2846%" height="15" fill="rgb(241,13,44)" fg:x="576" fg:w="53"/><text x="46.8143%" y="463.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (53 samples, 4.28%)</title><rect x="46.5643%" y="437" width="4.2846%" height="15" fill="rgb(227,121,22)" fg:x="576" fg:w="53"/><text x="46.8143%" y="447.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 3.07%)</title><rect x="47.7769%" y="421" width="3.0719%" height="15" fill="rgb(231,160,23)" fg:x="591" fg:w="38"/><text x="48.0269%" y="431.50">ser..</text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="50.6063%" y="405" width="0.2425%" height="15" fill="rgb(250,179,43)" fg:x="626" fg:w="3"/><text x="50.8563%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.4956%" y="277" width="0.0808%" height="15" fill="rgb(233,54,46)" fg:x="637" fg:w="1"/><text x="51.7456%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.4956%" y="261" width="0.0808%" height="15" fill="rgb(247,120,42)" fg:x="637" fg:w="1"/><text x="51.7456%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.4956%" y="245" width="0.0808%" height="15" fill="rgb(221,219,12)" fg:x="637" fg:w="1"/><text x="51.7456%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="51.4956%" y="229" width="0.0808%" height="15" fill="rgb(211,126,8)" fg:x="637" fg:w="1"/><text x="51.7456%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="51.3339%" y="309" width="0.3234%" height="15" fill="rgb(218,154,33)" fg:x="635" fg:w="4"/><text x="51.5839%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="51.3339%" y="293" width="0.3234%" height="15" fill="rgb(212,199,16)" fg:x="635" fg:w="4"/><text x="51.5839%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.5764%" y="277" width="0.0808%" height="15" fill="rgb(236,215,46)" fg:x="638" fg:w="1"/><text x="51.8264%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.5764%" y="261" width="0.0808%" height="15" fill="rgb(232,32,22)" fg:x="638" fg:w="1"/><text x="51.8264%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="51.6572%" y="293" width="0.2425%" height="15" fill="rgb(234,79,15)" fg:x="639" fg:w="3"/><text x="51.9072%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="51.7381%" y="277" width="0.1617%" height="15" fill="rgb(235,187,47)" fg:x="640" fg:w="2"/><text x="51.9881%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.8189%" y="261" width="0.0808%" height="15" fill="rgb(244,69,37)" fg:x="641" fg:w="1"/><text x="52.0689%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.8189%" y="245" width="0.0808%" height="15" fill="rgb(249,140,25)" fg:x="641" fg:w="1"/><text x="52.0689%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="51.2530%" y="325" width="0.7276%" height="15" fill="rgb(213,69,8)" fg:x="634" fg:w="9"/><text x="51.5030%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="51.6572%" y="309" width="0.3234%" height="15" fill="rgb(220,136,2)" fg:x="639" fg:w="4"/><text x="51.9072%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.8998%" y="293" width="0.0808%" height="15" fill="rgb(237,50,36)" fg:x="642" fg:w="1"/><text x="52.1498%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.13%)</title><rect x="51.0105%" y="357" width="1.1318%" height="15" fill="rgb(226,18,11)" fg:x="631" fg:w="14"/><text x="51.2605%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="51.0914%" y="341" width="1.0509%" height="15" fill="rgb(243,156,2)" fg:x="632" fg:w="13"/><text x="51.3414%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.9806%" y="325" width="0.1617%" height="15" fill="rgb(218,8,34)" fg:x="643" fg:w="2"/><text x="52.2306%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.0614%" y="309" width="0.0808%" height="15" fill="rgb(250,94,35)" fg:x="644" fg:w="1"/><text x="52.3114%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.0614%" y="293" width="0.0808%" height="15" fill="rgb(229,127,21)" fg:x="644" fg:w="1"/><text x="52.3114%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="52.3040%" y="341" width="0.1617%" height="15" fill="rgb(234,49,5)" fg:x="647" fg:w="2"/><text x="52.5540%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="52.1423%" y="357" width="0.4042%" height="15" fill="rgb(248,12,16)" fg:x="645" fg:w="5"/><text x="52.3923%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4656%" y="341" width="0.0808%" height="15" fill="rgb(208,220,31)" fg:x="649" fg:w="1"/><text x="52.7156%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.86%)</title><rect x="50.9297%" y="389" width="1.8593%" height="15" fill="rgb(243,184,0)" fg:x="630" fg:w="23"/><text x="51.1797%" y="399.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.78%)</title><rect x="51.0105%" y="373" width="1.7785%" height="15" fill="rgb(217,38,21)" fg:x="631" fg:w="22"/><text x="51.2605%" y="383.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.5465%" y="357" width="0.2425%" height="15" fill="rgb(239,120,45)" fg:x="650" fg:w="3"/><text x="52.7965%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.5465%" y="341" width="0.2425%" height="15" fill="rgb(235,33,2)" fg:x="650" fg:w="3"/><text x="52.7965%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="52.5465%" y="325" width="0.2425%" height="15" fill="rgb(249,161,5)" fg:x="650" fg:w="3"/><text x="52.7965%" y="335.50"></text></g><g><title>engine::session::state::State::close (132 samples, 10.67%)</title><rect x="42.2797%" y="549" width="10.6710%" height="15" fill="rgb(250,165,48)" fg:x="523" fg:w="132"/><text x="42.5297%" y="559.50">engine::session:..</text></g><g><title>engine::session::state::State::flush_entities (131 samples, 10.59%)</title><rect x="42.3605%" y="533" width="10.5901%" height="15" fill="rgb(221,23,45)" fg:x="524" fg:w="131"/><text x="42.6105%" y="543.50">engine::session..</text></g><g><title>core::iter::adapters::try_process (130 samples, 10.51%)</title><rect x="42.4414%" y="517" width="10.5093%" height="15" fill="rgb(217,108,46)" fg:x="525" fg:w="130"/><text x="42.6914%" y="527.50">core::iter::ada..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (130 samples, 10.51%)</title><rect x="42.4414%" y="501" width="10.5093%" height="15" fill="rgb(254,26,35)" fg:x="525" fg:w="130"/><text x="42.6914%" y="511.50">&lt;alloc::vec::Ve..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (130 samples, 10.51%)</title><rect x="42.4414%" y="485" width="10.5093%" height="15" fill="rgb(218,223,28)" fg:x="525" fg:w="130"/><text x="42.6914%" y="495.50">engine::session..</text></g><g><title>kernel::model::any_entity_changes (95 samples, 7.68%)</title><rect x="45.2708%" y="469" width="7.6799%" height="15" fill="rgb(242,27,47)" fg:x="560" fg:w="95"/><text x="45.5208%" y="479.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (26 samples, 2.10%)</title><rect x="50.8488%" y="453" width="2.1019%" height="15" fill="rgb(218,39,35)" fg:x="629" fg:w="26"/><text x="51.0988%" y="463.50">s..</text></g><g><title>serde_json::de::from_trait (26 samples, 2.10%)</title><rect x="50.8488%" y="437" width="2.1019%" height="15" fill="rgb(232,127,16)" fg:x="629" fg:w="26"/><text x="51.0988%" y="447.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26 samples, 2.10%)</title><rect x="50.8488%" y="421" width="2.1019%" height="15" fill="rgb(231,219,51)" fg:x="629" fg:w="26"/><text x="51.0988%" y="431.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (26 samples, 2.10%)</title><rect x="50.8488%" y="405" width="2.1019%" height="15" fill="rgb(217,220,46)" fg:x="629" fg:w="26"/><text x="51.0988%" y="415.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.7890%" y="389" width="0.1617%" height="15" fill="rgb(230,75,1)" fg:x="653" fg:w="2"/><text x="53.0390%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.8698%" y="373" width="0.0808%" height="15" fill="rgb(218,2,8)" fg:x="654" fg:w="1"/><text x="53.1198%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.8698%" y="357" width="0.0808%" height="15" fill="rgb(206,111,30)" fg:x="654" fg:w="1"/><text x="53.1198%" y="367.50"></text></g><g><title>engine::session::Session::close (141 samples, 11.40%)</title><rect x="41.7138%" y="565" width="11.3985%" height="15" fill="rgb(209,135,6)" fg:x="516" fg:w="141"/><text x="41.9638%" y="575.50">engine::session::..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.16%)</title><rect x="52.9507%" y="549" width="0.1617%" height="15" fill="rgb(205,169,10)" fg:x="655" fg:w="2"/><text x="53.2007%" y="559.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.16%)</title><rect x="52.9507%" y="533" width="0.1617%" height="15" fill="rgb(212,204,38)" fg:x="655" fg:w="2"/><text x="53.2007%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.16%)</title><rect x="52.9507%" y="517" width="0.1617%" height="15" fill="rgb(205,199,14)" fg:x="655" fg:w="2"/><text x="53.2007%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="52.9507%" y="501" width="0.1617%" height="15" fill="rgb(212,4,6)" fg:x="655" fg:w="2"/><text x="53.2007%" y="511.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="52.9507%" y="485" width="0.1617%" height="15" fill="rgb(250,15,10)" fg:x="655" fg:w="2"/><text x="53.2007%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="53.1124%" y="533" width="0.0808%" height="15" fill="rgb(212,49,51)" fg:x="657" fg:w="1"/><text x="53.3624%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="53.1124%" y="517" width="0.0808%" height="15" fill="rgb(235,21,9)" fg:x="657" fg:w="1"/><text x="53.3624%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="53.1124%" y="501" width="0.0808%" height="15" fill="rgb(251,31,32)" fg:x="657" fg:w="1"/><text x="53.3624%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.1124%" y="485" width="0.0808%" height="15" fill="rgb(246,23,9)" fg:x="657" fg:w="1"/><text x="53.3624%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="53.1124%" y="469" width="0.0808%" height="15" fill="rgb(225,216,14)" fg:x="657" fg:w="1"/><text x="53.3624%" y="479.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.2741%" y="501" width="0.0808%" height="15" fill="rgb(215,200,26)" fg:x="659" fg:w="1"/><text x="53.5241%" y="511.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="53.2741%" y="485" width="0.0808%" height="15" fill="rgb(237,130,47)" fg:x="659" fg:w="1"/><text x="53.5241%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="53.2741%" y="469" width="0.0808%" height="15" fill="rgb(247,74,14)" fg:x="659" fg:w="1"/><text x="53.5241%" y="479.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="53.1932%" y="533" width="0.2425%" height="15" fill="rgb(254,97,46)" fg:x="658" fg:w="3"/><text x="53.4432%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="53.1932%" y="517" width="0.2425%" height="15" fill="rgb(234,191,1)" fg:x="658" fg:w="3"/><text x="53.4432%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.3549%" y="501" width="0.0808%" height="15" fill="rgb(215,165,14)" fg:x="660" fg:w="1"/><text x="53.6049%" y="511.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="53.3549%" y="485" width="0.0808%" height="15" fill="rgb(230,182,6)" fg:x="660" fg:w="1"/><text x="53.6049%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.4357%" y="517" width="0.0808%" height="15" fill="rgb(210,127,39)" fg:x="661" fg:w="1"/><text x="53.6857%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.4357%" y="501" width="0.0808%" height="15" fill="rgb(223,212,51)" fg:x="661" fg:w="1"/><text x="53.6857%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.4357%" y="485" width="0.0808%" height="15" fill="rgb(226,176,43)" fg:x="661" fg:w="1"/><text x="53.6857%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.4357%" y="469" width="0.0808%" height="15" fill="rgb(222,155,4)" fg:x="661" fg:w="1"/><text x="53.6857%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.4357%" y="453" width="0.0808%" height="15" fill="rgb(215,149,7)" fg:x="661" fg:w="1"/><text x="53.6857%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.4357%" y="437" width="0.0808%" height="15" fill="rgb(252,199,23)" fg:x="661" fg:w="1"/><text x="53.6857%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.4357%" y="421" width="0.0808%" height="15" fill="rgb(245,52,29)" fg:x="661" fg:w="1"/><text x="53.6857%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.4357%" y="405" width="0.0808%" height="15" fill="rgb(221,228,19)" fg:x="661" fg:w="1"/><text x="53.6857%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.4357%" y="389" width="0.0808%" height="15" fill="rgb(253,101,6)" fg:x="661" fg:w="1"/><text x="53.6857%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.4357%" y="373" width="0.0808%" height="15" fill="rgb(211,130,8)" fg:x="661" fg:w="1"/><text x="53.6857%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.4357%" y="357" width="0.0808%" height="15" fill="rgb(238,37,53)" fg:x="661" fg:w="1"/><text x="53.6857%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.4357%" y="341" width="0.0808%" height="15" fill="rgb(235,145,5)" fg:x="661" fg:w="1"/><text x="53.6857%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="53.5166%" y="373" width="0.1617%" height="15" fill="rgb(244,12,43)" fg:x="662" fg:w="2"/><text x="53.7666%" y="383.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (2 samples, 0.16%)</title><rect x="53.5166%" y="357" width="0.1617%" height="15" fill="rgb(246,195,24)" fg:x="662" fg:w="2"/><text x="53.7666%" y="367.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (2 samples, 0.16%)</title><rect x="53.5166%" y="341" width="0.1617%" height="15" fill="rgb(235,163,6)" fg:x="662" fg:w="2"/><text x="53.7666%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.16%)</title><rect x="53.5166%" y="325" width="0.1617%" height="15" fill="rgb(236,218,17)" fg:x="662" fg:w="2"/><text x="53.7666%" y="335.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (2 samples, 0.16%)</title><rect x="53.5166%" y="309" width="0.1617%" height="15" fill="rgb(235,12,38)" fg:x="662" fg:w="2"/><text x="53.7666%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="53.5974%" y="293" width="0.0808%" height="15" fill="rgb(225,195,33)" fg:x="663" fg:w="1"/><text x="53.8474%" y="303.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (1 samples, 0.08%)</title><rect x="53.5974%" y="277" width="0.0808%" height="15" fill="rgb(238,54,35)" fg:x="663" fg:w="1"/><text x="53.8474%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="53.5974%" y="261" width="0.0808%" height="15" fill="rgb(238,33,7)" fg:x="663" fg:w="1"/><text x="53.8474%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="53.5974%" y="245" width="0.0808%" height="15" fill="rgb(245,5,14)" fg:x="663" fg:w="1"/><text x="53.8474%" y="255.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="53.5974%" y="229" width="0.0808%" height="15" fill="rgb(251,95,31)" fg:x="663" fg:w="1"/><text x="53.8474%" y="239.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="53.5974%" y="213" width="0.0808%" height="15" fill="rgb(222,15,46)" fg:x="663" fg:w="1"/><text x="53.8474%" y="223.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="53.5166%" y="517" width="0.2425%" height="15" fill="rgb(226,182,24)" fg:x="662" fg:w="3"/><text x="53.7666%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="53.5166%" y="501" width="0.2425%" height="15" fill="rgb(229,105,41)" fg:x="662" fg:w="3"/><text x="53.7666%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="53.5166%" y="485" width="0.2425%" height="15" fill="rgb(216,99,53)" fg:x="662" fg:w="3"/><text x="53.7666%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="53.5166%" y="469" width="0.2425%" height="15" fill="rgb(253,26,20)" fg:x="662" fg:w="3"/><text x="53.7666%" y="479.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="53.5166%" y="453" width="0.2425%" height="15" fill="rgb(249,155,28)" fg:x="662" fg:w="3"/><text x="53.7666%" y="463.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (3 samples, 0.24%)</title><rect x="53.5166%" y="437" width="0.2425%" height="15" fill="rgb(241,221,2)" fg:x="662" fg:w="3"/><text x="53.7666%" y="447.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (3 samples, 0.24%)</title><rect x="53.5166%" y="421" width="0.2425%" height="15" fill="rgb(219,124,6)" fg:x="662" fg:w="3"/><text x="53.7666%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.24%)</title><rect x="53.5166%" y="405" width="0.2425%" height="15" fill="rgb(233,37,6)" fg:x="662" fg:w="3"/><text x="53.7666%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (3 samples, 0.24%)</title><rect x="53.5166%" y="389" width="0.2425%" height="15" fill="rgb(238,20,14)" fg:x="662" fg:w="3"/><text x="53.7666%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="53.6783%" y="373" width="0.0808%" height="15" fill="rgb(232,106,27)" fg:x="664" fg:w="1"/><text x="53.9283%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.6783%" y="357" width="0.0808%" height="15" fill="rgb(246,157,24)" fg:x="664" fg:w="1"/><text x="53.9283%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.6783%" y="341" width="0.0808%" height="15" fill="rgb(214,153,10)" fg:x="664" fg:w="1"/><text x="53.9283%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="53.6783%" y="325" width="0.0808%" height="15" fill="rgb(212,94,6)" fg:x="664" fg:w="1"/><text x="53.9283%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="53.6783%" y="309" width="0.0808%" height="15" fill="rgb(254,25,27)" fg:x="664" fg:w="1"/><text x="53.9283%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="53.6783%" y="293" width="0.0808%" height="15" fill="rgb(250,43,52)" fg:x="664" fg:w="1"/><text x="53.9283%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="53.6783%" y="277" width="0.0808%" height="15" fill="rgb(221,226,40)" fg:x="664" fg:w="1"/><text x="53.9283%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.6783%" y="261" width="0.0808%" height="15" fill="rgb(235,162,34)" fg:x="664" fg:w="1"/><text x="53.9283%" y="271.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="53.7591%" y="517" width="0.0808%" height="15" fill="rgb(239,24,26)" fg:x="665" fg:w="1"/><text x="54.0091%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.9208%" y="501" width="0.0808%" height="15" fill="rgb(244,226,11)" fg:x="667" fg:w="1"/><text x="54.1708%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (2 samples, 0.16%)</title><rect x="54.0825%" y="469" width="0.1617%" height="15" fill="rgb(225,23,10)" fg:x="669" fg:w="2"/><text x="54.3325%" y="479.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (1 samples, 0.08%)</title><rect x="54.1633%" y="453" width="0.0808%" height="15" fill="rgb(249,125,6)" fg:x="670" fg:w="1"/><text x="54.4133%" y="463.50"></text></g><g><title>tracing_core::subscriber::Subscriber::register_callsite (1 samples, 0.08%)</title><rect x="54.1633%" y="437" width="0.0808%" height="15" fill="rgb(246,212,12)" fg:x="670" fg:w="1"/><text x="54.4133%" y="447.50"></text></g><g><title>&lt;engine::session::logs::SessionSubscriber as tracing_core::subscriber::Subscriber&gt;::enabled (1 samples, 0.08%)</title><rect x="54.1633%" y="421" width="0.0808%" height="15" fill="rgb(230,43,32)" fg:x="670" fg:w="1"/><text x="54.4133%" y="431.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (4 samples, 0.32%)</title><rect x="54.0016%" y="501" width="0.3234%" height="15" fill="rgb(210,95,23)" fg:x="668" fg:w="4"/><text x="54.2516%" y="511.50"></text></g><g><title>tracing_core::callsite::register_dispatch (3 samples, 0.24%)</title><rect x="54.0825%" y="485" width="0.2425%" height="15" fill="rgb(229,103,33)" fg:x="669" fg:w="3"/><text x="54.3325%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Dispatchers::register_dispatch (1 samples, 0.08%)</title><rect x="54.2441%" y="469" width="0.0808%" height="15" fill="rgb(222,104,27)" fg:x="671" fg:w="1"/><text x="54.4941%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (1 samples, 0.08%)</title><rect x="54.2441%" y="453" width="0.0808%" height="15" fill="rgb(239,221,23)" fg:x="671" fg:w="1"/><text x="54.4941%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.4058%" y="357" width="0.0808%" height="15" fill="rgb(222,98,21)" fg:x="673" fg:w="1"/><text x="54.6558%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.4058%" y="341" width="0.0808%" height="15" fill="rgb(231,101,20)" fg:x="673" fg:w="1"/><text x="54.6558%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.4058%" y="325" width="0.0808%" height="15" fill="rgb(215,150,22)" fg:x="673" fg:w="1"/><text x="54.6558%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.4058%" y="309" width="0.0808%" height="15" fill="rgb(248,3,34)" fg:x="673" fg:w="1"/><text x="54.6558%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.4058%" y="293" width="0.0808%" height="15" fill="rgb(220,141,21)" fg:x="673" fg:w="1"/><text x="54.6558%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.4058%" y="277" width="0.0808%" height="15" fill="rgb(223,41,48)" fg:x="673" fg:w="1"/><text x="54.6558%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="54.4058%" y="261" width="0.0808%" height="15" fill="rgb(247,12,5)" fg:x="673" fg:w="1"/><text x="54.6558%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.4058%" y="245" width="0.0808%" height="15" fill="rgb(206,173,10)" fg:x="673" fg:w="1"/><text x="54.6558%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.4058%" y="373" width="0.1617%" height="15" fill="rgb(233,214,37)" fg:x="673" fg:w="2"/><text x="54.6558%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.4867%" y="357" width="0.0808%" height="15" fill="rgb(238,86,43)" fg:x="674" fg:w="1"/><text x="54.7367%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="54.4058%" y="389" width="0.3234%" height="15" fill="rgb(212,182,8)" fg:x="673" fg:w="4"/><text x="54.6558%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.5675%" y="373" width="0.1617%" height="15" fill="rgb(240,91,47)" fg:x="675" fg:w="2"/><text x="54.8175%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.5675%" y="357" width="0.1617%" height="15" fill="rgb(209,138,26)" fg:x="675" fg:w="2"/><text x="54.8175%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.7292%" y="293" width="0.2425%" height="15" fill="rgb(231,163,20)" fg:x="677" fg:w="3"/><text x="54.9792%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="54.7292%" y="277" width="0.2425%" height="15" fill="rgb(214,91,54)" fg:x="677" fg:w="3"/><text x="54.9792%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.8100%" y="261" width="0.1617%" height="15" fill="rgb(230,32,17)" fg:x="678" fg:w="2"/><text x="55.0600%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.8100%" y="245" width="0.1617%" height="15" fill="rgb(231,34,34)" fg:x="678" fg:w="2"/><text x="55.0600%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.8909%" y="229" width="0.0808%" height="15" fill="rgb(224,228,27)" fg:x="679" fg:w="1"/><text x="55.1409%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="54.7292%" y="309" width="0.3234%" height="15" fill="rgb(219,35,40)" fg:x="677" fg:w="4"/><text x="54.9792%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9717%" y="293" width="0.0808%" height="15" fill="rgb(234,42,8)" fg:x="680" fg:w="1"/><text x="55.2217%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9717%" y="277" width="0.0808%" height="15" fill="rgb(226,75,22)" fg:x="680" fg:w="1"/><text x="55.2217%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.9717%" y="261" width="0.0808%" height="15" fill="rgb(242,203,28)" fg:x="680" fg:w="1"/><text x="55.2217%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.9717%" y="245" width="0.0808%" height="15" fill="rgb(221,3,9)" fg:x="680" fg:w="1"/><text x="55.2217%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.9717%" y="229" width="0.0808%" height="15" fill="rgb(214,34,31)" fg:x="680" fg:w="1"/><text x="55.2217%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9717%" y="213" width="0.0808%" height="15" fill="rgb(252,119,15)" fg:x="680" fg:w="1"/><text x="55.2217%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9717%" y="197" width="0.0808%" height="15" fill="rgb(244,224,31)" fg:x="680" fg:w="1"/><text x="55.2217%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.9717%" y="181" width="0.0808%" height="15" fill="rgb(215,8,51)" fg:x="680" fg:w="1"/><text x="55.2217%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.9717%" y="165" width="0.0808%" height="15" fill="rgb(207,24,1)" fg:x="680" fg:w="1"/><text x="55.2217%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.9717%" y="149" width="0.0808%" height="15" fill="rgb(245,90,0)" fg:x="680" fg:w="1"/><text x="55.2217%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.9717%" y="133" width="0.0808%" height="15" fill="rgb(246,43,48)" fg:x="680" fg:w="1"/><text x="55.2217%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9717%" y="117" width="0.0808%" height="15" fill="rgb(252,218,10)" fg:x="680" fg:w="1"/><text x="55.2217%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="54.7292%" y="325" width="0.4850%" height="15" fill="rgb(231,24,35)" fg:x="677" fg:w="6"/><text x="54.9792%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="55.0525%" y="309" width="0.1617%" height="15" fill="rgb(225,66,19)" fg:x="681" fg:w="2"/><text x="55.3025%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="55.0525%" y="293" width="0.1617%" height="15" fill="rgb(214,96,51)" fg:x="681" fg:w="2"/><text x="55.3025%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="55.0525%" y="277" width="0.1617%" height="15" fill="rgb(251,151,47)" fg:x="681" fg:w="2"/><text x="55.3025%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="55.0525%" y="261" width="0.1617%" height="15" fill="rgb(236,79,14)" fg:x="681" fg:w="2"/><text x="55.3025%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="55.0525%" y="245" width="0.1617%" height="15" fill="rgb(210,205,11)" fg:x="681" fg:w="2"/><text x="55.3025%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="55.0525%" y="229" width="0.1617%" height="15" fill="rgb(233,142,53)" fg:x="681" fg:w="2"/><text x="55.3025%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="55.0525%" y="213" width="0.1617%" height="15" fill="rgb(212,116,48)" fg:x="681" fg:w="2"/><text x="55.3025%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="55.0525%" y="197" width="0.1617%" height="15" fill="rgb(234,55,33)" fg:x="681" fg:w="2"/><text x="55.3025%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="55.0525%" y="181" width="0.1617%" height="15" fill="rgb(253,92,27)" fg:x="681" fg:w="2"/><text x="55.3025%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="55.0525%" y="165" width="0.1617%" height="15" fill="rgb(220,7,35)" fg:x="681" fg:w="2"/><text x="55.3025%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="55.0525%" y="149" width="0.1617%" height="15" fill="rgb(246,124,6)" fg:x="681" fg:w="2"/><text x="55.3025%" y="159.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.0525%" y="133" width="0.1617%" height="15" fill="rgb(212,111,51)" fg:x="681" fg:w="2"/><text x="55.3025%" y="143.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.2142%" y="309" width="0.0808%" height="15" fill="rgb(253,116,7)" fg:x="683" fg:w="1"/><text x="55.4642%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.2951%" y="277" width="0.0808%" height="15" fill="rgb(213,145,18)" fg:x="684" fg:w="1"/><text x="55.5451%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="55.2142%" y="325" width="0.2425%" height="15" fill="rgb(219,149,7)" fg:x="683" fg:w="3"/><text x="55.4642%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.2951%" y="309" width="0.1617%" height="15" fill="rgb(225,156,20)" fg:x="684" fg:w="2"/><text x="55.5451%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.2951%" y="293" width="0.1617%" height="15" fill="rgb(211,98,19)" fg:x="684" fg:w="2"/><text x="55.5451%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="55.3759%" y="277" width="0.0808%" height="15" fill="rgb(231,192,31)" fg:x="685" fg:w="1"/><text x="55.6259%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.3759%" y="261" width="0.0808%" height="15" fill="rgb(249,95,19)" fg:x="685" fg:w="1"/><text x="55.6259%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.3759%" y="245" width="0.0808%" height="15" fill="rgb(247,101,36)" fg:x="685" fg:w="1"/><text x="55.6259%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.3759%" y="229" width="0.0808%" height="15" fill="rgb(221,45,43)" fg:x="685" fg:w="1"/><text x="55.6259%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.4568%" y="325" width="0.0808%" height="15" fill="rgb(220,42,1)" fg:x="686" fg:w="1"/><text x="55.7068%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.6184%" y="277" width="0.0808%" height="15" fill="rgb(236,19,24)" fg:x="688" fg:w="1"/><text x="55.8684%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.6993%" y="133" width="0.0808%" height="15" fill="rgb(225,192,6)" fg:x="689" fg:w="1"/><text x="55.9493%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.6993%" y="229" width="0.1617%" height="15" fill="rgb(242,30,19)" fg:x="689" fg:w="2"/><text x="55.9493%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.6993%" y="213" width="0.1617%" height="15" fill="rgb(240,36,6)" fg:x="689" fg:w="2"/><text x="55.9493%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="55.6993%" y="197" width="0.1617%" height="15" fill="rgb(246,40,28)" fg:x="689" fg:w="2"/><text x="55.9493%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.6993%" y="181" width="0.1617%" height="15" fill="rgb(225,155,33)" fg:x="689" fg:w="2"/><text x="55.9493%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.6993%" y="165" width="0.1617%" height="15" fill="rgb(240,65,18)" fg:x="689" fg:w="2"/><text x="55.9493%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.6993%" y="149" width="0.1617%" height="15" fill="rgb(217,0,48)" fg:x="689" fg:w="2"/><text x="55.9493%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7801%" y="133" width="0.0808%" height="15" fill="rgb(217,80,15)" fg:x="690" fg:w="1"/><text x="56.0301%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8610%" y="165" width="0.0808%" height="15" fill="rgb(253,43,51)" fg:x="691" fg:w="1"/><text x="56.1110%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="55.8610%" y="229" width="0.2425%" height="15" fill="rgb(246,60,4)" fg:x="691" fg:w="3"/><text x="56.1110%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="55.8610%" y="213" width="0.2425%" height="15" fill="rgb(230,40,54)" fg:x="691" fg:w="3"/><text x="56.1110%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="55.8610%" y="197" width="0.2425%" height="15" fill="rgb(208,20,44)" fg:x="691" fg:w="3"/><text x="56.1110%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="55.8610%" y="181" width="0.2425%" height="15" fill="rgb(230,22,22)" fg:x="691" fg:w="3"/><text x="56.1110%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="55.9418%" y="165" width="0.1617%" height="15" fill="rgb(207,57,4)" fg:x="692" fg:w="2"/><text x="56.1918%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.0226%" y="149" width="0.0808%" height="15" fill="rgb(242,130,33)" fg:x="693" fg:w="1"/><text x="56.2726%" y="159.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.81%)</title><rect x="55.5376%" y="325" width="0.8084%" height="15" fill="rgb(218,66,43)" fg:x="687" fg:w="10"/><text x="55.7876%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.81%)</title><rect x="55.5376%" y="309" width="0.8084%" height="15" fill="rgb(236,105,16)" fg:x="687" fg:w="10"/><text x="55.7876%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="55.5376%" y="293" width="0.8084%" height="15" fill="rgb(230,46,15)" fg:x="687" fg:w="10"/><text x="55.7876%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.65%)</title><rect x="55.6993%" y="277" width="0.6467%" height="15" fill="rgb(251,172,40)" fg:x="689" fg:w="8"/><text x="55.9493%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="55.6993%" y="261" width="0.6467%" height="15" fill="rgb(225,217,32)" fg:x="689" fg:w="8"/><text x="55.9493%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.65%)</title><rect x="55.6993%" y="245" width="0.6467%" height="15" fill="rgb(243,10,29)" fg:x="689" fg:w="8"/><text x="55.9493%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.1035%" y="229" width="0.2425%" height="15" fill="rgb(207,102,10)" fg:x="694" fg:w="3"/><text x="56.3535%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="56.1035%" y="213" width="0.2425%" height="15" fill="rgb(241,125,5)" fg:x="694" fg:w="3"/><text x="56.3535%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.1843%" y="197" width="0.1617%" height="15" fill="rgb(230,125,29)" fg:x="695" fg:w="2"/><text x="56.4343%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.1843%" y="181" width="0.1617%" height="15" fill="rgb(223,65,44)" fg:x="695" fg:w="2"/><text x="56.4343%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.1843%" y="165" width="0.1617%" height="15" fill="rgb(224,188,28)" fg:x="695" fg:w="2"/><text x="56.4343%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.1843%" y="149" width="0.1617%" height="15" fill="rgb(254,197,27)" fg:x="695" fg:w="2"/><text x="56.4343%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.1843%" y="133" width="0.1617%" height="15" fill="rgb(220,200,25)" fg:x="695" fg:w="2"/><text x="56.4343%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.1843%" y="117" width="0.1617%" height="15" fill="rgb(239,225,54)" fg:x="695" fg:w="2"/><text x="56.4343%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="56.3460%" y="229" width="0.2425%" height="15" fill="rgb(211,59,40)" fg:x="697" fg:w="3"/><text x="56.5960%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="56.3460%" y="213" width="0.2425%" height="15" fill="rgb(213,176,46)" fg:x="697" fg:w="3"/><text x="56.5960%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="56.4268%" y="197" width="0.1617%" height="15" fill="rgb(226,99,4)" fg:x="698" fg:w="2"/><text x="56.6768%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.5077%" y="181" width="0.0808%" height="15" fill="rgb(239,203,43)" fg:x="699" fg:w="1"/><text x="56.7577%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.5077%" y="165" width="0.0808%" height="15" fill="rgb(246,1,45)" fg:x="699" fg:w="1"/><text x="56.7577%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.5077%" y="149" width="0.0808%" height="15" fill="rgb(231,42,52)" fg:x="699" fg:w="1"/><text x="56.7577%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.5077%" y="133" width="0.0808%" height="15" fill="rgb(240,13,50)" fg:x="699" fg:w="1"/><text x="56.7577%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.5077%" y="117" width="0.0808%" height="15" fill="rgb(225,81,14)" fg:x="699" fg:w="1"/><text x="56.7577%" y="127.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.5077%" y="101" width="0.0808%" height="15" fill="rgb(216,182,23)" fg:x="699" fg:w="1"/><text x="56.7577%" y="111.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.5885%" y="213" width="0.0808%" height="15" fill="rgb(233,137,19)" fg:x="700" fg:w="1"/><text x="56.8385%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="56.3460%" y="261" width="0.4042%" height="15" fill="rgb(242,61,46)" fg:x="697" fg:w="5"/><text x="56.5960%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="56.3460%" y="245" width="0.4042%" height="15" fill="rgb(221,168,51)" fg:x="697" fg:w="5"/><text x="56.5960%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.5885%" y="229" width="0.1617%" height="15" fill="rgb(238,48,15)" fg:x="700" fg:w="2"/><text x="56.8385%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6694%" y="213" width="0.0808%" height="15" fill="rgb(216,13,16)" fg:x="701" fg:w="1"/><text x="56.9194%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.7502%" y="245" width="0.0808%" height="15" fill="rgb(223,185,34)" fg:x="702" fg:w="1"/><text x="57.0002%" y="255.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.18%)</title><rect x="54.7292%" y="341" width="2.1827%" height="15" fill="rgb(228,94,42)" fg:x="677" fg:w="27"/><text x="54.9792%" y="351.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.57%)</title><rect x="56.3460%" y="325" width="0.5659%" height="15" fill="rgb(218,166,43)" fg:x="697" fg:w="7"/><text x="56.5960%" y="335.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.57%)</title><rect x="56.3460%" y="309" width="0.5659%" height="15" fill="rgb(232,30,50)" fg:x="697" fg:w="7"/><text x="56.5960%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="56.3460%" y="293" width="0.5659%" height="15" fill="rgb(245,206,45)" fg:x="697" fg:w="7"/><text x="56.5960%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="56.3460%" y="277" width="0.5659%" height="15" fill="rgb(220,56,22)" fg:x="697" fg:w="7"/><text x="56.5960%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.7502%" y="261" width="0.1617%" height="15" fill="rgb(239,129,38)" fg:x="702" fg:w="2"/><text x="57.0002%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8310%" y="245" width="0.0808%" height="15" fill="rgb(207,68,41)" fg:x="703" fg:w="1"/><text x="57.0810%" y="255.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (32 samples, 2.59%)</title><rect x="54.4058%" y="421" width="2.5869%" height="15" fill="rgb(221,21,7)" fg:x="673" fg:w="32"/><text x="54.6558%" y="431.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (32 samples, 2.59%)</title><rect x="54.4058%" y="405" width="2.5869%" height="15" fill="rgb(240,33,25)" fg:x="673" fg:w="32"/><text x="54.6558%" y="415.50">&lt;p..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (28 samples, 2.26%)</title><rect x="54.7292%" y="389" width="2.2635%" height="15" fill="rgb(242,119,10)" fg:x="677" fg:w="28"/><text x="54.9792%" y="399.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (28 samples, 2.26%)</title><rect x="54.7292%" y="373" width="2.2635%" height="15" fill="rgb(214,149,40)" fg:x="677" fg:w="28"/><text x="54.9792%" y="383.50">k..</text></g><g><title>engine::session::Session::load_entity (28 samples, 2.26%)</title><rect x="54.7292%" y="357" width="2.2635%" height="15" fill="rgb(228,25,36)" fg:x="677" fg:w="28"/><text x="54.9792%" y="367.50">e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="56.9119%" y="341" width="0.0808%" height="15" fill="rgb(222,59,15)" fg:x="704" fg:w="1"/><text x="57.1619%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.9119%" y="325" width="0.0808%" height="15" fill="rgb(218,170,0)" fg:x="704" fg:w="1"/><text x="57.1619%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="56.9119%" y="309" width="0.0808%" height="15" fill="rgb(232,173,23)" fg:x="704" fg:w="1"/><text x="57.1619%" y="319.50"></text></g><g><title>&lt;kernel::actions::Perform as plugins_rune::ToCall&gt;::to_call (1 samples, 0.08%)</title><rect x="56.9927%" y="389" width="0.0808%" height="15" fill="rgb(218,116,1)" fg:x="705" fg:w="1"/><text x="57.2427%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="57.0736%" y="373" width="0.0808%" height="15" fill="rgb(207,34,4)" fg:x="706" fg:w="1"/><text x="57.3236%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="57.0736%" y="389" width="0.3234%" height="15" fill="rgb(229,54,52)" fg:x="706" fg:w="4"/><text x="57.3236%" y="399.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="57.1544%" y="373" width="0.2425%" height="15" fill="rgb(211,86,23)" fg:x="707" fg:w="3"/><text x="57.4044%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="57.2352%" y="357" width="0.1617%" height="15" fill="rgb(254,153,34)" fg:x="708" fg:w="2"/><text x="57.4852%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="57.2352%" y="341" width="0.1617%" height="15" fill="rgb(219,220,14)" fg:x="708" fg:w="2"/><text x="57.4852%" y="351.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="57.2352%" y="325" width="0.1617%" height="15" fill="rgb(247,8,26)" fg:x="708" fg:w="2"/><text x="57.4852%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="57.2352%" y="309" width="0.1617%" height="15" fill="rgb(213,129,42)" fg:x="708" fg:w="2"/><text x="57.4852%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="57.2352%" y="293" width="0.1617%" height="15" fill="rgb(225,95,41)" fg:x="708" fg:w="2"/><text x="57.4852%" y="303.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="57.2352%" y="277" width="0.1617%" height="15" fill="rgb(215,134,24)" fg:x="708" fg:w="2"/><text x="57.4852%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="57.3161%" y="261" width="0.0808%" height="15" fill="rgb(235,23,54)" fg:x="709" fg:w="1"/><text x="57.5661%" y="271.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="57.3161%" y="245" width="0.0808%" height="15" fill="rgb(229,96,31)" fg:x="709" fg:w="1"/><text x="57.5661%" y="255.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="57.3161%" y="229" width="0.0808%" height="15" fill="rgb(206,111,12)" fg:x="709" fg:w="1"/><text x="57.5661%" y="239.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="57.3161%" y="213" width="0.0808%" height="15" fill="rgb(222,177,8)" fg:x="709" fg:w="1"/><text x="57.5661%" y="223.50"></text></g><g><title>plugins_rune::runner::SharedRunners::before (1 samples, 0.08%)</title><rect x="57.3969%" y="389" width="0.0808%" height="15" fill="rgb(251,36,52)" fg:x="710" fg:w="1"/><text x="57.6469%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.5586%" y="357" width="0.0808%" height="15" fill="rgb(216,182,29)" fg:x="712" fg:w="1"/><text x="57.8086%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.6395%" y="357" width="0.0808%" height="15" fill="rgb(241,145,50)" fg:x="713" fg:w="1"/><text x="57.8895%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.6395%" y="341" width="0.0808%" height="15" fill="rgb(231,71,35)" fg:x="713" fg:w="1"/><text x="57.8895%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="57.6395%" y="325" width="0.0808%" height="15" fill="rgb(218,22,17)" fg:x="713" fg:w="1"/><text x="57.8895%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="57.7203%" y="357" width="0.0808%" height="15" fill="rgb(225,227,6)" fg:x="714" fg:w="1"/><text x="57.9703%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.7203%" y="341" width="0.0808%" height="15" fill="rgb(224,204,17)" fg:x="714" fg:w="1"/><text x="57.9703%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.8820%" y="325" width="0.0808%" height="15" fill="rgb(227,61,28)" fg:x="716" fg:w="1"/><text x="58.1320%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8820%" y="309" width="0.0808%" height="15" fill="rgb(242,148,23)" fg:x="716" fg:w="1"/><text x="58.1320%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.8820%" y="293" width="0.0808%" height="15" fill="rgb(237,105,33)" fg:x="716" fg:w="1"/><text x="58.1320%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8820%" y="277" width="0.0808%" height="15" fill="rgb(238,218,40)" fg:x="716" fg:w="1"/><text x="58.1320%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8820%" y="261" width="0.0808%" height="15" fill="rgb(209,126,11)" fg:x="716" fg:w="1"/><text x="58.1320%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.8820%" y="245" width="0.0808%" height="15" fill="rgb(245,90,11)" fg:x="716" fg:w="1"/><text x="58.1320%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.8820%" y="229" width="0.0808%" height="15" fill="rgb(211,195,10)" fg:x="716" fg:w="1"/><text x="58.1320%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.8820%" y="213" width="0.0808%" height="15" fill="rgb(231,45,45)" fg:x="716" fg:w="1"/><text x="58.1320%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.8820%" y="197" width="0.0808%" height="15" fill="rgb(246,100,43)" fg:x="716" fg:w="1"/><text x="58.1320%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.8820%" y="181" width="0.0808%" height="15" fill="rgb(241,193,8)" fg:x="716" fg:w="1"/><text x="58.1320%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="57.9628%" y="293" width="0.1617%" height="15" fill="rgb(208,76,19)" fg:x="717" fg:w="2"/><text x="58.2128%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.0437%" y="277" width="0.0808%" height="15" fill="rgb(223,69,40)" fg:x="718" fg:w="1"/><text x="58.2937%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.1245%" y="293" width="0.0808%" height="15" fill="rgb(207,120,39)" fg:x="719" fg:w="1"/><text x="58.3745%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.1245%" y="277" width="0.0808%" height="15" fill="rgb(212,209,28)" fg:x="719" fg:w="1"/><text x="58.3745%" y="287.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="57.8820%" y="341" width="0.4042%" height="15" fill="rgb(246,82,29)" fg:x="716" fg:w="5"/><text x="58.1320%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="57.9628%" y="325" width="0.3234%" height="15" fill="rgb(239,6,40)" fg:x="717" fg:w="4"/><text x="58.2128%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="57.9628%" y="309" width="0.3234%" height="15" fill="rgb(228,181,35)" fg:x="717" fg:w="4"/><text x="58.2128%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="58.2053%" y="293" width="0.0808%" height="15" fill="rgb(238,151,2)" fg:x="720" fg:w="1"/><text x="58.4553%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="58.2053%" y="277" width="0.0808%" height="15" fill="rgb(236,94,18)" fg:x="720" fg:w="1"/><text x="58.4553%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="58.2053%" y="261" width="0.0808%" height="15" fill="rgb(208,38,14)" fg:x="720" fg:w="1"/><text x="58.4553%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.2053%" y="245" width="0.0808%" height="15" fill="rgb(234,215,27)" fg:x="720" fg:w="1"/><text x="58.4553%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.2053%" y="229" width="0.0808%" height="15" fill="rgb(254,211,53)" fg:x="720" fg:w="1"/><text x="58.4553%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.2053%" y="213" width="0.0808%" height="15" fill="rgb(216,175,11)" fg:x="720" fg:w="1"/><text x="58.4553%" y="223.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="58.2862%" y="293" width="0.0808%" height="15" fill="rgb(246,179,26)" fg:x="721" fg:w="1"/><text x="58.5362%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="58.3670%" y="277" width="0.0808%" height="15" fill="rgb(249,19,52)" fg:x="722" fg:w="1"/><text x="58.6170%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.3670%" y="261" width="0.0808%" height="15" fill="rgb(230,42,52)" fg:x="722" fg:w="1"/><text x="58.6170%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.3670%" y="245" width="0.0808%" height="15" fill="rgb(221,171,0)" fg:x="722" fg:w="1"/><text x="58.6170%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.3670%" y="229" width="0.0808%" height="15" fill="rgb(222,177,40)" fg:x="722" fg:w="1"/><text x="58.6170%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.3670%" y="213" width="0.0808%" height="15" fill="rgb(247,34,16)" fg:x="722" fg:w="1"/><text x="58.6170%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.3670%" y="197" width="0.0808%" height="15" fill="rgb(213,217,37)" fg:x="722" fg:w="1"/><text x="58.6170%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.3670%" y="181" width="0.0808%" height="15" fill="rgb(231,189,24)" fg:x="722" fg:w="1"/><text x="58.6170%" y="191.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="58.4479%" y="277" width="0.1617%" height="15" fill="rgb(214,22,9)" fg:x="723" fg:w="2"/><text x="58.6979%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.4479%" y="261" width="0.1617%" height="15" fill="rgb(212,70,22)" fg:x="723" fg:w="2"/><text x="58.6979%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="58.4479%" y="245" width="0.1617%" height="15" fill="rgb(249,64,51)" fg:x="723" fg:w="2"/><text x="58.6979%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.6904%" y="181" width="0.0808%" height="15" fill="rgb(249,148,20)" fg:x="726" fg:w="1"/><text x="58.9404%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.6904%" y="165" width="0.0808%" height="15" fill="rgb(246,46,48)" fg:x="726" fg:w="1"/><text x="58.9404%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.6904%" y="149" width="0.0808%" height="15" fill="rgb(217,34,48)" fg:x="726" fg:w="1"/><text x="58.9404%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.6904%" y="133" width="0.0808%" height="15" fill="rgb(222,45,26)" fg:x="726" fg:w="1"/><text x="58.9404%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.6904%" y="117" width="0.0808%" height="15" fill="rgb(230,201,36)" fg:x="726" fg:w="1"/><text x="58.9404%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.7712%" y="181" width="0.0808%" height="15" fill="rgb(217,30,43)" fg:x="727" fg:w="1"/><text x="59.0212%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.7712%" y="165" width="0.0808%" height="15" fill="rgb(230,197,40)" fg:x="727" fg:w="1"/><text x="59.0212%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.7712%" y="149" width="0.0808%" height="15" fill="rgb(239,181,18)" fg:x="727" fg:w="1"/><text x="59.0212%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.7712%" y="133" width="0.0808%" height="15" fill="rgb(222,60,39)" fg:x="727" fg:w="1"/><text x="59.0212%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.7712%" y="117" width="0.0808%" height="15" fill="rgb(210,60,22)" fg:x="727" fg:w="1"/><text x="59.0212%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="58.6095%" y="229" width="0.4042%" height="15" fill="rgb(239,213,48)" fg:x="725" fg:w="5"/><text x="58.8595%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="58.6095%" y="213" width="0.4042%" height="15" fill="rgb(253,214,23)" fg:x="725" fg:w="5"/><text x="58.8595%" y="223.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="58.6904%" y="197" width="0.3234%" height="15" fill="rgb(211,98,45)" fg:x="726" fg:w="4"/><text x="58.9404%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.8521%" y="181" width="0.1617%" height="15" fill="rgb(239,130,44)" fg:x="728" fg:w="2"/><text x="59.1021%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.8521%" y="165" width="0.1617%" height="15" fill="rgb(222,181,35)" fg:x="728" fg:w="2"/><text x="59.1021%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="58.8521%" y="149" width="0.1617%" height="15" fill="rgb(219,219,49)" fg:x="728" fg:w="2"/><text x="59.1021%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.8521%" y="133" width="0.1617%" height="15" fill="rgb(227,161,51)" fg:x="728" fg:w="2"/><text x="59.1021%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.9329%" y="117" width="0.0808%" height="15" fill="rgb(239,112,27)" fg:x="729" fg:w="1"/><text x="59.1829%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="58.9329%" y="101" width="0.0808%" height="15" fill="rgb(248,122,18)" fg:x="729" fg:w="1"/><text x="59.1829%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.9329%" y="85" width="0.0808%" height="15" fill="rgb(245,130,23)" fg:x="729" fg:w="1"/><text x="59.1829%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.9329%" y="69" width="0.0808%" height="15" fill="rgb(211,225,28)" fg:x="729" fg:w="1"/><text x="59.1829%" y="79.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.49%)</title><rect x="58.6095%" y="277" width="0.4850%" height="15" fill="rgb(242,105,44)" fg:x="725" fg:w="6"/><text x="58.8595%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="58.6095%" y="261" width="0.4850%" height="15" fill="rgb(216,183,46)" fg:x="725" fg:w="6"/><text x="58.8595%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="58.6095%" y="245" width="0.4850%" height="15" fill="rgb(227,112,9)" fg:x="725" fg:w="6"/><text x="58.8595%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.0137%" y="229" width="0.0808%" height="15" fill="rgb(244,21,0)" fg:x="730" fg:w="1"/><text x="59.2637%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.0137%" y="213" width="0.0808%" height="15" fill="rgb(236,185,14)" fg:x="730" fg:w="1"/><text x="59.2637%" y="223.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="59.0946%" y="277" width="0.0808%" height="15" fill="rgb(236,170,30)" fg:x="731" fg:w="1"/><text x="59.3446%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.3371%" y="133" width="0.0808%" height="15" fill="rgb(209,198,51)" fg:x="734" fg:w="1"/><text x="59.5871%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.3371%" y="117" width="0.0808%" height="15" fill="rgb(205,171,26)" fg:x="734" fg:w="1"/><text x="59.5871%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.3371%" y="101" width="0.0808%" height="15" fill="rgb(246,41,49)" fg:x="734" fg:w="1"/><text x="59.5871%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.3371%" y="85" width="0.0808%" height="15" fill="rgb(240,229,12)" fg:x="734" fg:w="1"/><text x="59.5871%" y="95.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.3371%" y="69" width="0.0808%" height="15" fill="rgb(212,8,54)" fg:x="734" fg:w="1"/><text x="59.5871%" y="79.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="59.4179%" y="117" width="0.1617%" height="15" fill="rgb(230,114,13)" fg:x="735" fg:w="2"/><text x="59.6679%" y="127.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.4179%" y="101" width="0.1617%" height="15" fill="rgb(229,130,28)" fg:x="735" fg:w="2"/><text x="59.6679%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="59.1754%" y="181" width="0.4850%" height="15" fill="rgb(206,139,15)" fg:x="732" fg:w="6"/><text x="59.4254%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="59.2563%" y="165" width="0.4042%" height="15" fill="rgb(241,188,35)" fg:x="733" fg:w="5"/><text x="59.5063%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="59.3371%" y="149" width="0.3234%" height="15" fill="rgb(208,224,26)" fg:x="734" fg:w="4"/><text x="59.5871%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.4179%" y="133" width="0.2425%" height="15" fill="rgb(251,131,28)" fg:x="735" fg:w="3"/><text x="59.6679%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.5796%" y="117" width="0.0808%" height="15" fill="rgb(208,153,1)" fg:x="737" fg:w="1"/><text x="59.8296%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.6605%" y="181" width="0.0808%" height="15" fill="rgb(234,33,36)" fg:x="738" fg:w="1"/><text x="59.9105%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6605%" y="165" width="0.0808%" height="15" fill="rgb(246,42,29)" fg:x="738" fg:w="1"/><text x="59.9105%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="59.1754%" y="213" width="0.7276%" height="15" fill="rgb(251,114,16)" fg:x="732" fg:w="9"/><text x="59.4254%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="59.1754%" y="197" width="0.7276%" height="15" fill="rgb(233,13,38)" fg:x="732" fg:w="9"/><text x="59.4254%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.7413%" y="181" width="0.1617%" height="15" fill="rgb(247,120,19)" fg:x="739" fg:w="2"/><text x="59.9913%" y="191.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (22 samples, 1.78%)</title><rect x="58.2862%" y="341" width="1.7785%" height="15" fill="rgb(205,11,16)" fg:x="721" fg:w="22"/><text x="58.5362%" y="351.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (22 samples, 1.78%)</title><rect x="58.2862%" y="325" width="1.7785%" height="15" fill="rgb(228,185,19)" fg:x="721" fg:w="22"/><text x="58.5362%" y="335.50">k..</text></g><g><title>engine::session::Session::load_entity (22 samples, 1.78%)</title><rect x="58.2862%" y="309" width="1.7785%" height="15" fill="rgb(239,88,52)" fg:x="721" fg:w="22"/><text x="58.5362%" y="319.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (21 samples, 1.70%)</title><rect x="58.3670%" y="293" width="1.6977%" height="15" fill="rgb(219,23,1)" fg:x="722" fg:w="21"/><text x="58.6170%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.89%)</title><rect x="59.1754%" y="277" width="0.8892%" height="15" fill="rgb(253,177,16)" fg:x="732" fg:w="11"/><text x="59.4254%" y="287.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.89%)</title><rect x="59.1754%" y="261" width="0.8892%" height="15" fill="rgb(225,150,40)" fg:x="732" fg:w="11"/><text x="59.4254%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.89%)</title><rect x="59.1754%" y="245" width="0.8892%" height="15" fill="rgb(208,108,30)" fg:x="732" fg:w="11"/><text x="59.4254%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="59.1754%" y="229" width="0.8892%" height="15" fill="rgb(214,122,4)" fg:x="732" fg:w="11"/><text x="59.4254%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="59.9030%" y="213" width="0.1617%" height="15" fill="rgb(229,74,37)" fg:x="741" fg:w="2"/><text x="60.1530%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.9838%" y="197" width="0.0808%" height="15" fill="rgb(233,61,41)" fg:x="742" fg:w="1"/><text x="60.2338%" y="207.50"></text></g><g><title>plugins_core::tools::contained_by (29 samples, 2.34%)</title><rect x="57.8011%" y="357" width="2.3444%" height="15" fill="rgb(238,191,5)" fg:x="715" fg:w="29"/><text x="58.0511%" y="367.50">p..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="60.0647%" y="341" width="0.0808%" height="15" fill="rgb(233,78,24)" fg:x="743" fg:w="1"/><text x="60.3147%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.1455%" y="325" width="0.1617%" height="15" fill="rgb(211,142,8)" fg:x="744" fg:w="2"/><text x="60.3955%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.1455%" y="309" width="0.1617%" height="15" fill="rgb(253,38,53)" fg:x="744" fg:w="2"/><text x="60.3955%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.2264%" y="293" width="0.0808%" height="15" fill="rgb(234,63,51)" fg:x="745" fg:w="1"/><text x="60.4764%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2264%" y="277" width="0.0808%" height="15" fill="rgb(205,23,31)" fg:x="745" fg:w="1"/><text x="60.4764%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2264%" y="261" width="0.0808%" height="15" fill="rgb(210,184,50)" fg:x="745" fg:w="1"/><text x="60.4764%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.2264%" y="245" width="0.0808%" height="15" fill="rgb(222,112,26)" fg:x="745" fg:w="1"/><text x="60.4764%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.2264%" y="229" width="0.0808%" height="15" fill="rgb(250,98,18)" fg:x="745" fg:w="1"/><text x="60.4764%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.2264%" y="213" width="0.0808%" height="15" fill="rgb(250,34,12)" fg:x="745" fg:w="1"/><text x="60.4764%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.2264%" y="197" width="0.0808%" height="15" fill="rgb(236,141,30)" fg:x="745" fg:w="1"/><text x="60.4764%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.2264%" y="181" width="0.0808%" height="15" fill="rgb(246,134,38)" fg:x="745" fg:w="1"/><text x="60.4764%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.2264%" y="165" width="0.0808%" height="15" fill="rgb(240,114,4)" fg:x="745" fg:w="1"/><text x="60.4764%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.2264%" y="149" width="0.0808%" height="15" fill="rgb(243,113,39)" fg:x="745" fg:w="1"/><text x="60.4764%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.2264%" y="133" width="0.0808%" height="15" fill="rgb(239,215,4)" fg:x="745" fg:w="1"/><text x="60.4764%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.2264%" y="117" width="0.0808%" height="15" fill="rgb(236,229,45)" fg:x="745" fg:w="1"/><text x="60.4764%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.2264%" y="101" width="0.0808%" height="15" fill="rgb(242,2,6)" fg:x="745" fg:w="1"/><text x="60.4764%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="60.3072%" y="325" width="0.0808%" height="15" fill="rgb(239,108,21)" fg:x="746" fg:w="1"/><text x="60.5572%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (2 samples, 0.16%)</title><rect x="60.3880%" y="229" width="0.1617%" height="15" fill="rgb(215,168,34)" fg:x="747" fg:w="2"/><text x="60.6380%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4689%" y="213" width="0.0808%" height="15" fill="rgb(238,31,17)" fg:x="748" fg:w="1"/><text x="60.7189%" y="223.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (6 samples, 0.49%)</title><rect x="60.1455%" y="341" width="0.4850%" height="15" fill="rgb(220,133,11)" fg:x="744" fg:w="6"/><text x="60.3955%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="60.3880%" y="325" width="0.2425%" height="15" fill="rgb(212,158,23)" fg:x="747" fg:w="3"/><text x="60.6380%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.3880%" y="309" width="0.2425%" height="15" fill="rgb(223,172,7)" fg:x="747" fg:w="3"/><text x="60.6380%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="60.3880%" y="293" width="0.2425%" height="15" fill="rgb(244,3,52)" fg:x="747" fg:w="3"/><text x="60.6380%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="60.3880%" y="277" width="0.2425%" height="15" fill="rgb(207,69,27)" fg:x="747" fg:w="3"/><text x="60.6380%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="60.3880%" y="261" width="0.2425%" height="15" fill="rgb(213,136,45)" fg:x="747" fg:w="3"/><text x="60.6380%" y="271.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (3 samples, 0.24%)</title><rect x="60.3880%" y="245" width="0.2425%" height="15" fill="rgb(218,79,17)" fg:x="747" fg:w="3"/><text x="60.6380%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.5497%" y="229" width="0.0808%" height="15" fill="rgb(216,106,36)" fg:x="749" fg:w="1"/><text x="60.7997%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5497%" y="213" width="0.0808%" height="15" fill="rgb(251,27,45)" fg:x="749" fg:w="1"/><text x="60.7997%" y="223.50"></text></g><g><title>plugins_core::tools::occupied_by (7 samples, 0.57%)</title><rect x="60.1455%" y="357" width="0.5659%" height="15" fill="rgb(232,21,34)" fg:x="744" fg:w="7"/><text x="60.3955%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="60.6306%" y="341" width="0.0808%" height="15" fill="rgb(249,191,16)" fg:x="750" fg:w="1"/><text x="60.8806%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.7922%" y="325" width="0.0808%" height="15" fill="rgb(224,88,20)" fg:x="752" fg:w="1"/><text x="61.0422%" y="335.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (43 samples, 3.48%)</title><rect x="57.4778%" y="373" width="3.4762%" height="15" fill="rgb(237,93,27)" fg:x="711" fg:w="43"/><text x="57.7278%" y="383.50">plu..</text></g><g><title>plugins_core::tools::worn_by (3 samples, 0.24%)</title><rect x="60.7114%" y="357" width="0.2425%" height="15" fill="rgb(226,198,48)" fg:x="751" fg:w="3"/><text x="60.9614%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="60.7114%" y="341" width="0.2425%" height="15" fill="rgb(207,162,53)" fg:x="751" fg:w="3"/><text x="60.9614%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.8731%" y="325" width="0.0808%" height="15" fill="rgb(207,169,9)" fg:x="753" fg:w="1"/><text x="61.1231%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8731%" y="309" width="0.0808%" height="15" fill="rgb(224,166,46)" fg:x="753" fg:w="1"/><text x="61.1231%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (83 samples, 6.71%)</title><rect x="54.3250%" y="485" width="6.7098%" height="15" fill="rgb(233,26,6)" fg:x="672" fg:w="83"/><text x="54.5750%" y="495.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::apply_middleware (83 samples, 6.71%)</title><rect x="54.3250%" y="469" width="6.7098%" height="15" fill="rgb(218,106,45)" fg:x="672" fg:w="83"/><text x="54.5750%" y="479.50">kernel::p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (82 samples, 6.63%)</title><rect x="54.4058%" y="453" width="6.6289%" height="15" fill="rgb(240,217,4)" fg:x="673" fg:w="82"/><text x="54.6558%" y="463.50">kernel::p..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (82 samples, 6.63%)</title><rect x="54.4058%" y="437" width="6.6289%" height="15" fill="rgb(246,171,10)" fg:x="673" fg:w="82"/><text x="54.6558%" y="447.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (50 samples, 4.04%)</title><rect x="56.9927%" y="421" width="4.0420%" height="15" fill="rgb(223,197,30)" fg:x="705" fg:w="50"/><text x="57.2427%" y="431.50">kern..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (50 samples, 4.04%)</title><rect x="56.9927%" y="405" width="4.0420%" height="15" fill="rgb(207,92,16)" fg:x="705" fg:w="50"/><text x="57.2427%" y="415.50">&lt;plu..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (44 samples, 3.56%)</title><rect x="57.4778%" y="389" width="3.5570%" height="15" fill="rgb(211,6,44)" fg:x="711" fg:w="44"/><text x="57.7278%" y="399.50">plug..</text></g><g><title>plugins_rune::sources::load_sources_from_entity (1 samples, 0.08%)</title><rect x="60.9539%" y="373" width="0.0808%" height="15" fill="rgb(219,139,2)" fg:x="754" fg:w="1"/><text x="61.2039%" y="383.50"></text></g><g><title>engine::session::Session::captured (95 samples, 7.68%)</title><rect x="53.4357%" y="533" width="7.6799%" height="15" fill="rgb(224,103,21)" fg:x="661" fg:w="95"/><text x="53.6857%" y="543.50">engine::ses..</text></g><g><title>engine::session::logs::capture (90 samples, 7.28%)</title><rect x="53.8399%" y="517" width="7.2757%" height="15" fill="rgb(254,110,48)" fg:x="666" fg:w="90"/><text x="54.0899%" y="527.50">engine::se..</text></g><g><title>tracing_core::dispatcher::with_default (84 samples, 6.79%)</title><rect x="54.3250%" y="501" width="6.7906%" height="15" fill="rgb(212,88,19)" fg:x="672" fg:w="84"/><text x="54.5750%" y="511.50">tracing_c..</text></g><g><title>&lt;kernel::actions::PerformAction as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0348%" y="485" width="0.0808%" height="15" fill="rgb(248,103,6)" fg:x="755" fg:w="1"/><text x="61.2848%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="61.1156%" y="517" width="0.0808%" height="15" fill="rgb(214,53,46)" fg:x="756" fg:w="1"/><text x="61.3656%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.2773%" y="437" width="0.0808%" height="15" fill="rgb(236,190,24)" fg:x="758" fg:w="1"/><text x="61.5273%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.2773%" y="453" width="0.1617%" height="15" fill="rgb(254,58,28)" fg:x="758" fg:w="2"/><text x="61.5273%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3581%" y="437" width="0.0808%" height="15" fill="rgb(243,63,27)" fg:x="759" fg:w="1"/><text x="61.6081%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.3581%" y="421" width="0.0808%" height="15" fill="rgb(206,81,20)" fg:x="759" fg:w="1"/><text x="61.6081%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3581%" y="405" width="0.0808%" height="15" fill="rgb(252,69,51)" fg:x="759" fg:w="1"/><text x="61.6081%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3581%" y="389" width="0.0808%" height="15" fill="rgb(222,213,4)" fg:x="759" fg:w="1"/><text x="61.6081%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.3581%" y="373" width="0.0808%" height="15" fill="rgb(226,198,12)" fg:x="759" fg:w="1"/><text x="61.6081%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.3581%" y="357" width="0.0808%" height="15" fill="rgb(248,115,11)" fg:x="759" fg:w="1"/><text x="61.6081%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.3581%" y="341" width="0.0808%" height="15" fill="rgb(221,148,54)" fg:x="759" fg:w="1"/><text x="61.6081%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.3581%" y="325" width="0.0808%" height="15" fill="rgb(214,209,51)" fg:x="759" fg:w="1"/><text x="61.6081%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.3581%" y="309" width="0.0808%" height="15" fill="rgb(249,116,53)" fg:x="759" fg:w="1"/><text x="61.6081%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.3581%" y="293" width="0.0808%" height="15" fill="rgb(248,170,1)" fg:x="759" fg:w="1"/><text x="61.6081%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.3581%" y="277" width="0.0808%" height="15" fill="rgb(244,105,10)" fg:x="759" fg:w="1"/><text x="61.6081%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.3581%" y="261" width="0.0808%" height="15" fill="rgb(229,100,5)" fg:x="759" fg:w="1"/><text x="61.6081%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.3581%" y="245" width="0.0808%" height="15" fill="rgb(233,221,39)" fg:x="759" fg:w="1"/><text x="61.6081%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.3581%" y="229" width="0.0808%" height="15" fill="rgb(233,88,21)" fg:x="759" fg:w="1"/><text x="61.6081%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.2773%" y="469" width="0.2425%" height="15" fill="rgb(206,13,0)" fg:x="758" fg:w="3"/><text x="61.5273%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4390%" y="453" width="0.0808%" height="15" fill="rgb(242,15,35)" fg:x="760" fg:w="1"/><text x="61.6890%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4390%" y="437" width="0.0808%" height="15" fill="rgb(247,142,41)" fg:x="760" fg:w="1"/><text x="61.6890%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.4390%" y="421" width="0.0808%" height="15" fill="rgb(245,51,29)" fg:x="760" fg:w="1"/><text x="61.6890%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.4390%" y="405" width="0.0808%" height="15" fill="rgb(228,209,43)" fg:x="760" fg:w="1"/><text x="61.6890%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.4390%" y="389" width="0.0808%" height="15" fill="rgb(233,185,9)" fg:x="760" fg:w="1"/><text x="61.6890%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4390%" y="373" width="0.0808%" height="15" fill="rgb(226,93,0)" fg:x="760" fg:w="1"/><text x="61.6890%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4390%" y="357" width="0.0808%" height="15" fill="rgb(245,194,43)" fg:x="760" fg:w="1"/><text x="61.6890%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.4390%" y="341" width="0.0808%" height="15" fill="rgb(211,145,34)" fg:x="760" fg:w="1"/><text x="61.6890%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.4390%" y="325" width="0.0808%" height="15" fill="rgb(231,228,28)" fg:x="760" fg:w="1"/><text x="61.6890%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.4390%" y="309" width="0.0808%" height="15" fill="rgb(236,149,4)" fg:x="760" fg:w="1"/><text x="61.6890%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.4390%" y="293" width="0.0808%" height="15" fill="rgb(234,114,38)" fg:x="760" fg:w="1"/><text x="61.6890%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="61.1964%" y="485" width="0.4042%" height="15" fill="rgb(246,132,51)" fg:x="757" fg:w="5"/><text x="61.4464%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5198%" y="469" width="0.0808%" height="15" fill="rgb(251,137,22)" fg:x="761" fg:w="1"/><text x="61.7698%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5198%" y="453" width="0.0808%" height="15" fill="rgb(243,59,52)" fg:x="761" fg:w="1"/><text x="61.7698%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.5198%" y="437" width="0.0808%" height="15" fill="rgb(239,56,28)" fg:x="761" fg:w="1"/><text x="61.7698%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.5198%" y="421" width="0.0808%" height="15" fill="rgb(218,168,27)" fg:x="761" fg:w="1"/><text x="61.7698%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.5198%" y="405" width="0.0808%" height="15" fill="rgb(232,165,11)" fg:x="761" fg:w="1"/><text x="61.7698%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.5198%" y="389" width="0.0808%" height="15" fill="rgb(253,55,41)" fg:x="761" fg:w="1"/><text x="61.7698%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.5198%" y="373" width="0.0808%" height="15" fill="rgb(233,206,24)" fg:x="761" fg:w="1"/><text x="61.7698%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.6006%" y="437" width="0.1617%" height="15" fill="rgb(220,199,8)" fg:x="762" fg:w="2"/><text x="61.8506%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.6815%" y="421" width="0.0808%" height="15" fill="rgb(254,65,26)" fg:x="763" fg:w="1"/><text x="61.9315%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.6815%" y="405" width="0.0808%" height="15" fill="rgb(253,102,23)" fg:x="763" fg:w="1"/><text x="61.9315%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.6815%" y="389" width="0.0808%" height="15" fill="rgb(231,103,35)" fg:x="763" fg:w="1"/><text x="61.9315%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6815%" y="373" width="0.0808%" height="15" fill="rgb(238,26,10)" fg:x="763" fg:w="1"/><text x="61.9315%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6815%" y="357" width="0.0808%" height="15" fill="rgb(234,191,34)" fg:x="763" fg:w="1"/><text x="61.9315%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.6815%" y="341" width="0.0808%" height="15" fill="rgb(206,210,9)" fg:x="763" fg:w="1"/><text x="61.9315%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.6815%" y="325" width="0.0808%" height="15" fill="rgb(219,155,3)" fg:x="763" fg:w="1"/><text x="61.9315%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.6815%" y="309" width="0.0808%" height="15" fill="rgb(221,62,52)" fg:x="763" fg:w="1"/><text x="61.9315%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7623%" y="389" width="0.0808%" height="15" fill="rgb(215,197,36)" fg:x="764" fg:w="1"/><text x="62.0123%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7623%" y="373" width="0.0808%" height="15" fill="rgb(226,222,6)" fg:x="764" fg:w="1"/><text x="62.0123%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7623%" y="357" width="0.0808%" height="15" fill="rgb(215,58,28)" fg:x="764" fg:w="1"/><text x="62.0123%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7623%" y="341" width="0.0808%" height="15" fill="rgb(212,148,2)" fg:x="764" fg:w="1"/><text x="62.0123%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7623%" y="325" width="0.0808%" height="15" fill="rgb(208,21,42)" fg:x="764" fg:w="1"/><text x="62.0123%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.7623%" y="309" width="0.0808%" height="15" fill="rgb(209,107,26)" fg:x="764" fg:w="1"/><text x="62.0123%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.7623%" y="293" width="0.0808%" height="15" fill="rgb(254,60,47)" fg:x="764" fg:w="1"/><text x="62.0123%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.7623%" y="277" width="0.0808%" height="15" fill="rgb(207,226,45)" fg:x="764" fg:w="1"/><text x="62.0123%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7623%" y="261" width="0.0808%" height="15" fill="rgb(223,124,22)" fg:x="764" fg:w="1"/><text x="62.0123%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7623%" y="245" width="0.0808%" height="15" fill="rgb(240,162,13)" fg:x="764" fg:w="1"/><text x="62.0123%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.7623%" y="229" width="0.0808%" height="15" fill="rgb(244,199,31)" fg:x="764" fg:w="1"/><text x="62.0123%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.7623%" y="213" width="0.0808%" height="15" fill="rgb(207,92,16)" fg:x="764" fg:w="1"/><text x="62.0123%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.7623%" y="197" width="0.0808%" height="15" fill="rgb(215,31,19)" fg:x="764" fg:w="1"/><text x="62.0123%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.7623%" y="181" width="0.0808%" height="15" fill="rgb(245,118,14)" fg:x="764" fg:w="1"/><text x="62.0123%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7623%" y="165" width="0.0808%" height="15" fill="rgb(248,12,46)" fg:x="764" fg:w="1"/><text x="62.0123%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.8432%" y="341" width="0.0808%" height="15" fill="rgb(209,119,0)" fg:x="765" fg:w="1"/><text x="62.0932%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8432%" y="325" width="0.0808%" height="15" fill="rgb(254,51,44)" fg:x="765" fg:w="1"/><text x="62.0932%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.9240%" y="341" width="0.0808%" height="15" fill="rgb(253,182,35)" fg:x="766" fg:w="1"/><text x="62.1740%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="61.9240%" y="325" width="0.0808%" height="15" fill="rgb(205,198,39)" fg:x="766" fg:w="1"/><text x="62.1740%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0049%" y="309" width="0.0808%" height="15" fill="rgb(251,175,48)" fg:x="767" fg:w="1"/><text x="62.2549%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="62.0857%" y="245" width="0.0808%" height="15" fill="rgb(239,38,17)" fg:x="768" fg:w="1"/><text x="62.3357%" y="255.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.0857%" y="229" width="0.0808%" height="15" fill="rgb(212,101,8)" fg:x="768" fg:w="1"/><text x="62.3357%" y="239.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.0857%" y="213" width="0.0808%" height="15" fill="rgb(228,35,17)" fg:x="768" fg:w="1"/><text x="62.3357%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.0857%" y="197" width="0.0808%" height="15" fill="rgb(214,95,8)" fg:x="768" fg:w="1"/><text x="62.3357%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.0857%" y="181" width="0.0808%" height="15" fill="rgb(210,176,35)" fg:x="768" fg:w="1"/><text x="62.3357%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.0857%" y="165" width="0.0808%" height="15" fill="rgb(226,4,3)" fg:x="768" fg:w="1"/><text x="62.3357%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.0857%" y="149" width="0.0808%" height="15" fill="rgb(232,133,14)" fg:x="768" fg:w="1"/><text x="62.3357%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.0857%" y="133" width="0.0808%" height="15" fill="rgb(250,191,8)" fg:x="768" fg:w="1"/><text x="62.3357%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.0857%" y="117" width="0.0808%" height="15" fill="rgb(213,12,45)" fg:x="768" fg:w="1"/><text x="62.3357%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.0857%" y="101" width="0.0808%" height="15" fill="rgb(233,78,26)" fg:x="768" fg:w="1"/><text x="62.3357%" y="111.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="62.1665%" y="229" width="0.0808%" height="15" fill="rgb(245,222,11)" fg:x="769" fg:w="1"/><text x="62.4165%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="61.7623%" y="437" width="0.5659%" height="15" fill="rgb(216,174,12)" fg:x="764" fg:w="7"/><text x="62.0123%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.57%)</title><rect x="61.7623%" y="421" width="0.5659%" height="15" fill="rgb(213,15,9)" fg:x="764" fg:w="7"/><text x="62.0123%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.57%)</title><rect x="61.7623%" y="405" width="0.5659%" height="15" fill="rgb(238,103,32)" fg:x="764" fg:w="7"/><text x="62.0123%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.49%)</title><rect x="61.8432%" y="389" width="0.4850%" height="15" fill="rgb(245,85,15)" fg:x="765" fg:w="6"/><text x="62.0932%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.49%)</title><rect x="61.8432%" y="373" width="0.4850%" height="15" fill="rgb(254,204,5)" fg:x="765" fg:w="6"/><text x="62.0932%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.49%)</title><rect x="61.8432%" y="357" width="0.4850%" height="15" fill="rgb(231,178,15)" fg:x="765" fg:w="6"/><text x="62.0932%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.0049%" y="341" width="0.3234%" height="15" fill="rgb(248,151,3)" fg:x="767" fg:w="4"/><text x="62.2549%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.0049%" y="325" width="0.3234%" height="15" fill="rgb(250,139,13)" fg:x="767" fg:w="4"/><text x="62.2549%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (3 samples, 0.24%)</title><rect x="62.0857%" y="309" width="0.2425%" height="15" fill="rgb(243,107,53)" fg:x="768" fg:w="3"/><text x="62.3357%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (3 samples, 0.24%)</title><rect x="62.0857%" y="293" width="0.2425%" height="15" fill="rgb(232,81,15)" fg:x="768" fg:w="3"/><text x="62.3357%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (3 samples, 0.24%)</title><rect x="62.0857%" y="277" width="0.2425%" height="15" fill="rgb(225,187,48)" fg:x="768" fg:w="3"/><text x="62.3357%" y="287.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (3 samples, 0.24%)</title><rect x="62.0857%" y="261" width="0.2425%" height="15" fill="rgb(205,116,12)" fg:x="768" fg:w="3"/><text x="62.3357%" y="271.50"></text></g><g><title>serde_json::error::make_error (2 samples, 0.16%)</title><rect x="62.1665%" y="245" width="0.1617%" height="15" fill="rgb(220,222,31)" fg:x="769" fg:w="2"/><text x="62.4165%" y="255.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.08%)</title><rect x="62.2474%" y="229" width="0.0808%" height="15" fill="rgb(233,187,49)" fg:x="770" fg:w="1"/><text x="62.4974%" y="239.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.08%)</title><rect x="62.2474%" y="213" width="0.0808%" height="15" fill="rgb(211,168,53)" fg:x="770" fg:w="1"/><text x="62.4974%" y="223.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.08%)</title><rect x="62.2474%" y="197" width="0.0808%" height="15" fill="rgb(206,160,16)" fg:x="770" fg:w="1"/><text x="62.4974%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.3282%" y="405" width="0.0808%" height="15" fill="rgb(254,164,13)" fg:x="771" fg:w="1"/><text x="62.5782%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.3282%" y="389" width="0.0808%" height="15" fill="rgb(229,45,30)" fg:x="771" fg:w="1"/><text x="62.5782%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.3282%" y="373" width="0.0808%" height="15" fill="rgb(237,32,10)" fg:x="771" fg:w="1"/><text x="62.5782%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.89%)</title><rect x="61.6006%" y="485" width="0.8892%" height="15" fill="rgb(251,20,47)" fg:x="762" fg:w="11"/><text x="61.8506%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.89%)</title><rect x="61.6006%" y="469" width="0.8892%" height="15" fill="rgb(251,116,12)" fg:x="762" fg:w="11"/><text x="61.8506%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (11 samples, 0.89%)</title><rect x="61.6006%" y="453" width="0.8892%" height="15" fill="rgb(214,227,27)" fg:x="762" fg:w="11"/><text x="61.8506%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.3282%" y="437" width="0.1617%" height="15" fill="rgb(248,10,53)" fg:x="771" fg:w="2"/><text x="62.5782%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.3282%" y="421" width="0.1617%" height="15" fill="rgb(221,176,25)" fg:x="771" fg:w="2"/><text x="62.5782%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.4091%" y="405" width="0.0808%" height="15" fill="rgb(205,70,46)" fg:x="772" fg:w="1"/><text x="62.6591%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4899%" y="485" width="0.0808%" height="15" fill="rgb(217,45,38)" fg:x="773" fg:w="1"/><text x="62.7399%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.6516%" y="405" width="0.0808%" height="15" fill="rgb(243,6,54)" fg:x="775" fg:w="1"/><text x="62.9016%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="62.5707%" y="453" width="0.2425%" height="15" fill="rgb(242,76,23)" fg:x="774" fg:w="3"/><text x="62.8207%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="62.5707%" y="437" width="0.2425%" height="15" fill="rgb(239,166,0)" fg:x="774" fg:w="3"/><text x="62.8207%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="62.5707%" y="421" width="0.2425%" height="15" fill="rgb(238,174,32)" fg:x="774" fg:w="3"/><text x="62.8207%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.7324%" y="405" width="0.0808%" height="15" fill="rgb(238,124,44)" fg:x="776" fg:w="1"/><text x="62.9824%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.7324%" y="389" width="0.0808%" height="15" fill="rgb(206,185,9)" fg:x="776" fg:w="1"/><text x="62.9824%" y="399.50"></text></g><g><title>engine::session::internal::Added::find_refs (21 samples, 1.70%)</title><rect x="61.1964%" y="517" width="1.6977%" height="15" fill="rgb(215,157,17)" fg:x="757" fg:w="21"/><text x="61.4464%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (21 samples, 1.70%)</title><rect x="61.1964%" y="501" width="1.6977%" height="15" fill="rgb(251,17,29)" fg:x="757" fg:w="21"/><text x="61.4464%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.5707%" y="485" width="0.3234%" height="15" fill="rgb(227,113,27)" fg:x="774" fg:w="4"/><text x="62.8207%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.5707%" y="469" width="0.3234%" height="15" fill="rgb(217,226,24)" fg:x="774" fg:w="4"/><text x="62.8207%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8133%" y="453" width="0.0808%" height="15" fill="rgb(251,99,38)" fg:x="777" fg:w="1"/><text x="63.0633%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8941%" y="453" width="0.0808%" height="15" fill="rgb(231,147,19)" fg:x="778" fg:w="1"/><text x="63.1441%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.8941%" y="501" width="0.1617%" height="15" fill="rgb(230,86,8)" fg:x="778" fg:w="2"/><text x="63.1441%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.8941%" y="485" width="0.1617%" height="15" fill="rgb(237,159,39)" fg:x="778" fg:w="2"/><text x="63.1441%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.8941%" y="469" width="0.1617%" height="15" fill="rgb(247,179,47)" fg:x="778" fg:w="2"/><text x="63.1441%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.9749%" y="453" width="0.0808%" height="15" fill="rgb(253,152,26)" fg:x="779" fg:w="1"/><text x="63.2249%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="63.0558%" y="501" width="0.0808%" height="15" fill="rgb(222,211,15)" fg:x="780" fg:w="1"/><text x="63.3058%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.0558%" y="485" width="0.0808%" height="15" fill="rgb(236,193,6)" fg:x="780" fg:w="1"/><text x="63.3058%" y="495.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.2175%" y="453" width="0.0808%" height="15" fill="rgb(226,206,10)" fg:x="782" fg:w="1"/><text x="63.4675%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.2175%" y="437" width="0.0808%" height="15" fill="rgb(213,125,22)" fg:x="782" fg:w="1"/><text x="63.4675%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.2175%" y="421" width="0.0808%" height="15" fill="rgb(221,66,28)" fg:x="782" fg:w="1"/><text x="63.4675%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.2983%" y="421" width="0.0808%" height="15" fill="rgb(222,84,53)" fg:x="783" fg:w="1"/><text x="63.5483%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.3791%" y="373" width="0.0808%" height="15" fill="rgb(243,50,15)" fg:x="784" fg:w="1"/><text x="63.6291%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="63.3791%" y="405" width="0.1617%" height="15" fill="rgb(208,184,23)" fg:x="784" fg:w="2"/><text x="63.6291%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.3791%" y="389" width="0.1617%" height="15" fill="rgb(221,83,2)" fg:x="784" fg:w="2"/><text x="63.6291%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4600%" y="373" width="0.0808%" height="15" fill="rgb(236,53,24)" fg:x="785" fg:w="1"/><text x="63.7100%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.5408%" y="405" width="0.0808%" height="15" fill="rgb(244,171,29)" fg:x="786" fg:w="1"/><text x="63.7908%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.5408%" y="389" width="0.0808%" height="15" fill="rgb(205,19,11)" fg:x="786" fg:w="1"/><text x="63.7908%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.5408%" y="373" width="0.0808%" height="15" fill="rgb(207,108,29)" fg:x="786" fg:w="1"/><text x="63.7908%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.5408%" y="357" width="0.0808%" height="15" fill="rgb(236,215,43)" fg:x="786" fg:w="1"/><text x="63.7908%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.5408%" y="341" width="0.0808%" height="15" fill="rgb(213,58,35)" fg:x="786" fg:w="1"/><text x="63.7908%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.6217%" y="373" width="0.0808%" height="15" fill="rgb(220,211,46)" fg:x="787" fg:w="1"/><text x="63.8717%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6217%" y="357" width="0.0808%" height="15" fill="rgb(212,134,16)" fg:x="787" fg:w="1"/><text x="63.8717%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.6217%" y="341" width="0.0808%" height="15" fill="rgb(232,90,44)" fg:x="787" fg:w="1"/><text x="63.8717%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.6217%" y="325" width="0.0808%" height="15" fill="rgb(212,18,36)" fg:x="787" fg:w="1"/><text x="63.8717%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.65%)</title><rect x="63.1366%" y="501" width="0.6467%" height="15" fill="rgb(206,112,24)" fg:x="781" fg:w="8"/><text x="63.3866%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="63.1366%" y="485" width="0.6467%" height="15" fill="rgb(238,223,40)" fg:x="781" fg:w="8"/><text x="63.3866%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="63.1366%" y="469" width="0.6467%" height="15" fill="rgb(226,169,20)" fg:x="781" fg:w="8"/><text x="63.3866%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.49%)</title><rect x="63.2983%" y="453" width="0.4850%" height="15" fill="rgb(241,64,52)" fg:x="783" fg:w="6"/><text x="63.5483%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="63.2983%" y="437" width="0.4850%" height="15" fill="rgb(228,120,25)" fg:x="783" fg:w="6"/><text x="63.5483%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="63.3791%" y="421" width="0.4042%" height="15" fill="rgb(234,108,19)" fg:x="784" fg:w="5"/><text x="63.6291%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.6217%" y="405" width="0.1617%" height="15" fill="rgb(236,133,29)" fg:x="787" fg:w="2"/><text x="63.8717%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.6217%" y="389" width="0.1617%" height="15" fill="rgb(246,174,53)" fg:x="787" fg:w="2"/><text x="63.8717%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.7025%" y="373" width="0.0808%" height="15" fill="rgb(210,105,35)" fg:x="788" fg:w="1"/><text x="63.9525%" y="383.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="63.7833%" y="501" width="0.0808%" height="15" fill="rgb(225,27,26)" fg:x="789" fg:w="1"/><text x="64.0333%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.8642%" y="421" width="0.1617%" height="15" fill="rgb(233,2,39)" fg:x="790" fg:w="2"/><text x="64.1142%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.9450%" y="405" width="0.0808%" height="15" fill="rgb(219,164,26)" fg:x="791" fg:w="1"/><text x="64.1950%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9450%" y="389" width="0.0808%" height="15" fill="rgb(236,211,5)" fg:x="791" fg:w="1"/><text x="64.1950%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9450%" y="373" width="0.0808%" height="15" fill="rgb(244,227,23)" fg:x="791" fg:w="1"/><text x="64.1950%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="63.8642%" y="437" width="0.2425%" height="15" fill="rgb(230,184,8)" fg:x="790" fg:w="3"/><text x="64.1142%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.0259%" y="421" width="0.0808%" height="15" fill="rgb(217,125,48)" fg:x="792" fg:w="1"/><text x="64.2759%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.1067%" y="421" width="0.0808%" height="15" fill="rgb(223,192,47)" fg:x="793" fg:w="1"/><text x="64.3567%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (39 samples, 3.15%)</title><rect x="61.1156%" y="533" width="3.1528%" height="15" fill="rgb(226,119,10)" fg:x="756" fg:w="39"/><text x="61.3656%" y="543.50">eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.37%)</title><rect x="62.8941%" y="517" width="1.3743%" height="15" fill="rgb(221,49,29)" fg:x="778" fg:w="17"/><text x="63.1441%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="63.8642%" y="501" width="0.4042%" height="15" fill="rgb(217,205,19)" fg:x="790" fg:w="5"/><text x="64.1142%" y="511.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="63.8642%" y="485" width="0.4042%" height="15" fill="rgb(242,104,7)" fg:x="790" fg:w="5"/><text x="64.1142%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="63.8642%" y="469" width="0.4042%" height="15" fill="rgb(209,154,48)" fg:x="790" fg:w="5"/><text x="64.1142%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="63.8642%" y="453" width="0.4042%" height="15" fill="rgb(219,213,46)" fg:x="790" fg:w="5"/><text x="64.1142%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="64.1067%" y="437" width="0.1617%" height="15" fill="rgb(229,105,38)" fg:x="793" fg:w="2"/><text x="64.3567%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1876%" y="421" width="0.0808%" height="15" fill="rgb(205,151,5)" fg:x="794" fg:w="1"/><text x="64.4376%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="64.3492%" y="501" width="0.1617%" height="15" fill="rgb(248,115,40)" fg:x="796" fg:w="2"/><text x="64.5992%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.5109%" y="485" width="0.2425%" height="15" fill="rgb(206,179,2)" fg:x="798" fg:w="3"/><text x="64.7609%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.5918%" y="469" width="0.1617%" height="15" fill="rgb(230,103,24)" fg:x="799" fg:w="2"/><text x="64.8418%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.6726%" y="453" width="0.0808%" height="15" fill="rgb(218,152,4)" fg:x="800" fg:w="1"/><text x="64.9226%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.6726%" y="437" width="0.0808%" height="15" fill="rgb(236,161,54)" fg:x="800" fg:w="1"/><text x="64.9226%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.6726%" y="421" width="0.0808%" height="15" fill="rgb(226,65,17)" fg:x="800" fg:w="1"/><text x="64.9226%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.6726%" y="405" width="0.0808%" height="15" fill="rgb(221,134,44)" fg:x="800" fg:w="1"/><text x="64.9226%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="64.7534%" y="485" width="0.3234%" height="15" fill="rgb(251,129,4)" fg:x="801" fg:w="4"/><text x="65.0034%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.9151%" y="469" width="0.1617%" height="15" fill="rgb(244,32,34)" fg:x="803" fg:w="2"/><text x="65.1651%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.9151%" y="453" width="0.1617%" height="15" fill="rgb(251,224,37)" fg:x="803" fg:w="2"/><text x="65.1651%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="64.9151%" y="437" width="0.1617%" height="15" fill="rgb(248,117,31)" fg:x="803" fg:w="2"/><text x="65.1651%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.9151%" y="421" width="0.1617%" height="15" fill="rgb(222,208,37)" fg:x="803" fg:w="2"/><text x="65.1651%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.9960%" y="405" width="0.0808%" height="15" fill="rgb(234,211,25)" fg:x="804" fg:w="1"/><text x="65.2460%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.9960%" y="389" width="0.0808%" height="15" fill="rgb(211,72,6)" fg:x="804" fg:w="1"/><text x="65.2460%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.1576%" y="405" width="0.0808%" height="15" fill="rgb(249,198,38)" fg:x="806" fg:w="1"/><text x="65.4076%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.3193%" y="325" width="0.0808%" height="15" fill="rgb(221,86,51)" fg:x="808" fg:w="1"/><text x="65.5693%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.3193%" y="309" width="0.0808%" height="15" fill="rgb(226,178,43)" fg:x="808" fg:w="1"/><text x="65.5693%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.3193%" y="293" width="0.0808%" height="15" fill="rgb(215,145,7)" fg:x="808" fg:w="1"/><text x="65.5693%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.3193%" y="277" width="0.0808%" height="15" fill="rgb(250,202,36)" fg:x="808" fg:w="1"/><text x="65.5693%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.3193%" y="357" width="0.1617%" height="15" fill="rgb(215,86,13)" fg:x="808" fg:w="2"/><text x="65.5693%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.3193%" y="341" width="0.1617%" height="15" fill="rgb(221,134,12)" fg:x="808" fg:w="2"/><text x="65.5693%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.4002%" y="325" width="0.0808%" height="15" fill="rgb(213,82,10)" fg:x="809" fg:w="1"/><text x="65.6502%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.4002%" y="309" width="0.0808%" height="15" fill="rgb(214,142,0)" fg:x="809" fg:w="1"/><text x="65.6502%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.4002%" y="293" width="0.0808%" height="15" fill="rgb(205,145,9)" fg:x="809" fg:w="1"/><text x="65.6502%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="65.4002%" y="277" width="0.0808%" height="15" fill="rgb(244,214,8)" fg:x="809" fg:w="1"/><text x="65.6502%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.4002%" y="261" width="0.0808%" height="15" fill="rgb(224,72,51)" fg:x="809" fg:w="1"/><text x="65.6502%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="65.2385%" y="389" width="0.3234%" height="15" fill="rgb(233,137,37)" fg:x="807" fg:w="4"/><text x="65.4885%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.3193%" y="373" width="0.2425%" height="15" fill="rgb(208,71,28)" fg:x="808" fg:w="3"/><text x="65.5693%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.4810%" y="357" width="0.0808%" height="15" fill="rgb(226,31,7)" fg:x="810" fg:w="1"/><text x="65.7310%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.5618%" y="389" width="0.0808%" height="15" fill="rgb(229,62,18)" fg:x="811" fg:w="1"/><text x="65.8118%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.5618%" y="373" width="0.0808%" height="15" fill="rgb(226,74,28)" fg:x="811" fg:w="1"/><text x="65.8118%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.5618%" y="357" width="0.0808%" height="15" fill="rgb(214,170,18)" fg:x="811" fg:w="1"/><text x="65.8118%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5618%" y="341" width="0.0808%" height="15" fill="rgb(227,229,35)" fg:x="811" fg:w="1"/><text x="65.8118%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.73%)</title><rect x="65.0768%" y="485" width="0.7276%" height="15" fill="rgb(225,181,39)" fg:x="805" fg:w="9"/><text x="65.3268%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.73%)</title><rect x="65.0768%" y="469" width="0.7276%" height="15" fill="rgb(253,124,44)" fg:x="805" fg:w="9"/><text x="65.3268%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="65.0768%" y="453" width="0.7276%" height="15" fill="rgb(220,75,18)" fg:x="805" fg:w="9"/><text x="65.3268%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.65%)</title><rect x="65.1576%" y="437" width="0.6467%" height="15" fill="rgb(239,175,43)" fg:x="806" fg:w="8"/><text x="65.4076%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="65.1576%" y="421" width="0.6467%" height="15" fill="rgb(228,112,50)" fg:x="806" fg:w="8"/><text x="65.4076%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.57%)</title><rect x="65.2385%" y="405" width="0.5659%" height="15" fill="rgb(232,105,36)" fg:x="807" fg:w="7"/><text x="65.4885%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.6427%" y="389" width="0.1617%" height="15" fill="rgb(227,137,47)" fg:x="812" fg:w="2"/><text x="65.8927%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.7235%" y="373" width="0.0808%" height="15" fill="rgb(217,51,9)" fg:x="813" fg:w="1"/><text x="65.9735%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.7235%" y="357" width="0.0808%" height="15" fill="rgb(245,117,0)" fg:x="813" fg:w="1"/><text x="65.9735%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7235%" y="341" width="0.0808%" height="15" fill="rgb(252,52,30)" fg:x="813" fg:w="1"/><text x="65.9735%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.7235%" y="325" width="0.0808%" height="15" fill="rgb(227,85,33)" fg:x="813" fg:w="1"/><text x="65.9735%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.7235%" y="309" width="0.0808%" height="15" fill="rgb(220,157,20)" fg:x="813" fg:w="1"/><text x="65.9735%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7235%" y="293" width="0.0808%" height="15" fill="rgb(254,14,34)" fg:x="813" fg:w="1"/><text x="65.9735%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.7235%" y="277" width="0.0808%" height="15" fill="rgb(216,103,41)" fg:x="813" fg:w="1"/><text x="65.9735%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="65.8044%" y="421" width="0.2425%" height="15" fill="rgb(245,221,9)" fg:x="814" fg:w="3"/><text x="66.0544%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.8852%" y="405" width="0.1617%" height="15" fill="rgb(254,136,47)" fg:x="815" fg:w="2"/><text x="66.1352%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.8852%" y="389" width="0.1617%" height="15" fill="rgb(235,71,46)" fg:x="815" fg:w="2"/><text x="66.1352%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.8852%" y="373" width="0.1617%" height="15" fill="rgb(242,154,29)" fg:x="815" fg:w="2"/><text x="66.1352%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.8852%" y="357" width="0.1617%" height="15" fill="rgb(210,65,31)" fg:x="815" fg:w="2"/><text x="66.1352%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.9660%" y="341" width="0.0808%" height="15" fill="rgb(244,9,50)" fg:x="816" fg:w="1"/><text x="66.2160%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9660%" y="325" width="0.0808%" height="15" fill="rgb(215,141,38)" fg:x="816" fg:w="1"/><text x="66.2160%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9660%" y="309" width="0.0808%" height="15" fill="rgb(241,129,6)" fg:x="816" fg:w="1"/><text x="66.2160%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="65.9660%" y="293" width="0.0808%" height="15" fill="rgb(253,169,4)" fg:x="816" fg:w="1"/><text x="66.2160%" y="303.50"></text></g><g><title>engine::session::Session::load_entity (23 samples, 1.86%)</title><rect x="64.2684%" y="517" width="1.8593%" height="15" fill="rgb(237,82,36)" fg:x="795" fg:w="23"/><text x="64.5184%" y="527.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.62%)</title><rect x="64.5109%" y="501" width="1.6168%" height="15" fill="rgb(209,171,11)" fg:x="798" fg:w="20"/><text x="64.7609%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="65.8044%" y="485" width="0.3234%" height="15" fill="rgb(242,19,22)" fg:x="814" fg:w="4"/><text x="66.0544%" y="495.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="65.8044%" y="469" width="0.3234%" height="15" fill="rgb(251,122,24)" fg:x="814" fg:w="4"/><text x="66.0544%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="65.8044%" y="453" width="0.3234%" height="15" fill="rgb(226,166,42)" fg:x="814" fg:w="4"/><text x="66.0544%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="65.8044%" y="437" width="0.3234%" height="15" fill="rgb(244,101,48)" fg:x="814" fg:w="4"/><text x="66.0544%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.0469%" y="421" width="0.0808%" height="15" fill="rgb(227,125,1)" fg:x="817" fg:w="1"/><text x="66.2969%" y="431.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (162 samples, 13.10%)</title><rect x="53.1124%" y="565" width="13.0962%" height="15" fill="rgb(206,79,43)" fg:x="657" fg:w="162"/><text x="53.3624%" y="575.50">engine::session::Ses..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (162 samples, 13.10%)</title><rect x="53.1124%" y="549" width="13.0962%" height="15" fill="rgb(241,109,41)" fg:x="657" fg:w="162"/><text x="53.3624%" y="559.50">engine::session::Ses..</text></g><g><title>kernel::model::EntityPtrResolver::world (24 samples, 1.94%)</title><rect x="64.2684%" y="533" width="1.9402%" height="15" fill="rgb(219,73,4)" fg:x="795" fg:w="24"/><text x="64.5184%" y="543.50">k..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="66.1277%" y="517" width="0.0808%" height="15" fill="rgb(239,25,41)" fg:x="818" fg:w="1"/><text x="66.3777%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.2086%" y="549" width="0.0808%" height="15" fill="rgb(208,88,46)" fg:x="819" fg:w="1"/><text x="66.4586%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (821 samples, 66.37%)</title><rect x="0.0000%" y="613" width="66.3703%" height="15" fill="rgb(239,184,9)" fg:x="0" fg:w="821"/><text x="0.2500%" y="623.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (821 samples, 66.37%)</title><rect x="0.0000%" y="597" width="66.3703%" height="15" fill="rgb(223,114,13)" fg:x="0" fg:w="821"/><text x="0.2500%" y="607.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (821 samples, 66.37%)</title><rect x="0.0000%" y="581" width="66.3703%" height="15" fill="rgb(214,28,42)" fg:x="0" fg:w="821"/><text x="0.2500%" y="591.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="66.2086%" y="565" width="0.1617%" height="15" fill="rgb(252,32,44)" fg:x="819" fg:w="2"/><text x="66.4586%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="66.2894%" y="549" width="0.0808%" height="15" fill="rgb(231,159,4)" fg:x="820" fg:w="1"/><text x="66.5394%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.2894%" y="533" width="0.0808%" height="15" fill="rgb(210,35,26)" fg:x="820" fg:w="1"/><text x="66.5394%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.2894%" y="517" width="0.0808%" height="15" fill="rgb(208,190,37)" fg:x="820" fg:w="1"/><text x="66.5394%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.5319%" y="549" width="0.0808%" height="15" fill="rgb(226,148,22)" fg:x="823" fg:w="1"/><text x="66.7819%" y="559.50"></text></g><g><title>&lt;engine::session::Session as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.6128%" y="549" width="0.0808%" height="15" fill="rgb(242,153,24)" fg:x="824" fg:w="1"/><text x="66.8628%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.73%)</title><rect x="66.6936%" y="549" width="0.7276%" height="15" fill="rgb(213,133,7)" fg:x="825" fg:w="9"/><text x="66.9436%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="66.7745%" y="533" width="0.6467%" height="15" fill="rgb(248,206,18)" fg:x="826" fg:w="8"/><text x="67.0245%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.49%)</title><rect x="66.9361%" y="517" width="0.4850%" height="15" fill="rgb(233,157,4)" fg:x="828" fg:w="6"/><text x="67.1861%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (6 samples, 0.49%)</title><rect x="66.9361%" y="501" width="0.4850%" height="15" fill="rgb(249,179,32)" fg:x="828" fg:w="6"/><text x="67.1861%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (6 samples, 0.49%)</title><rect x="66.9361%" y="485" width="0.4850%" height="15" fill="rgb(248,69,35)" fg:x="828" fg:w="6"/><text x="67.1861%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.2595%" y="469" width="0.1617%" height="15" fill="rgb(249,158,38)" fg:x="832" fg:w="2"/><text x="67.5095%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5020%" y="517" width="0.0808%" height="15" fill="rgb(223,18,43)" fg:x="835" fg:w="1"/><text x="67.7520%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.6637%" y="437" width="0.0808%" height="15" fill="rgb(238,42,45)" fg:x="837" fg:w="1"/><text x="67.9137%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="67.7445%" y="421" width="0.0808%" height="15" fill="rgb(219,65,47)" fg:x="838" fg:w="1"/><text x="67.9945%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="67.7445%" y="405" width="0.0808%" height="15" fill="rgb(248,153,12)" fg:x="838" fg:w="1"/><text x="67.9945%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.7445%" y="389" width="0.0808%" height="15" fill="rgb(240,118,4)" fg:x="838" fg:w="1"/><text x="67.9945%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.7445%" y="373" width="0.0808%" height="15" fill="rgb(250,96,34)" fg:x="838" fg:w="1"/><text x="67.9945%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.7445%" y="357" width="0.0808%" height="15" fill="rgb(221,15,4)" fg:x="838" fg:w="1"/><text x="67.9945%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="67.5829%" y="485" width="0.4042%" height="15" fill="rgb(217,149,33)" fg:x="836" fg:w="5"/><text x="67.8329%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (5 samples, 0.40%)</title><rect x="67.5829%" y="469" width="0.4042%" height="15" fill="rgb(213,58,29)" fg:x="836" fg:w="5"/><text x="67.8329%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="67.6637%" y="453" width="0.3234%" height="15" fill="rgb(236,218,9)" fg:x="837" fg:w="4"/><text x="67.9137%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="67.7445%" y="437" width="0.2425%" height="15" fill="rgb(248,40,19)" fg:x="838" fg:w="3"/><text x="67.9945%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.8254%" y="421" width="0.1617%" height="15" fill="rgb(212,17,6)" fg:x="839" fg:w="2"/><text x="68.0754%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.8254%" y="405" width="0.1617%" height="15" fill="rgb(206,212,20)" fg:x="839" fg:w="2"/><text x="68.0754%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.3104%" y="421" width="0.0808%" height="15" fill="rgb(229,80,37)" fg:x="845" fg:w="1"/><text x="68.5604%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="68.3913%" y="421" width="0.0808%" height="15" fill="rgb(253,8,37)" fg:x="846" fg:w="1"/><text x="68.6413%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.3913%" y="405" width="0.0808%" height="15" fill="rgb(215,16,43)" fg:x="846" fg:w="1"/><text x="68.6413%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.3913%" y="389" width="0.0808%" height="15" fill="rgb(236,219,16)" fg:x="846" fg:w="1"/><text x="68.6413%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.3913%" y="373" width="0.0808%" height="15" fill="rgb(251,0,3)" fg:x="846" fg:w="1"/><text x="68.6413%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.3913%" y="357" width="0.0808%" height="15" fill="rgb(207,133,37)" fg:x="846" fg:w="1"/><text x="68.6413%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.05%)</title><rect x="67.5829%" y="501" width="1.0509%" height="15" fill="rgb(250,143,20)" fg:x="836" fg:w="13"/><text x="67.8329%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.65%)</title><rect x="67.9871%" y="485" width="0.6467%" height="15" fill="rgb(242,19,50)" fg:x="841" fg:w="8"/><text x="68.2371%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="67.9871%" y="469" width="0.6467%" height="15" fill="rgb(206,124,43)" fg:x="841" fg:w="8"/><text x="68.2371%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="68.1487%" y="453" width="0.4850%" height="15" fill="rgb(229,4,38)" fg:x="843" fg:w="6"/><text x="68.3987%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="68.2296%" y="437" width="0.4042%" height="15" fill="rgb(247,220,45)" fg:x="844" fg:w="5"/><text x="68.4796%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.4721%" y="421" width="0.1617%" height="15" fill="rgb(247,195,0)" fg:x="847" fg:w="2"/><text x="68.7221%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.5530%" y="405" width="0.0808%" height="15" fill="rgb(252,12,19)" fg:x="848" fg:w="1"/><text x="68.8030%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.18%)</title><rect x="66.5319%" y="565" width="2.1827%" height="15" fill="rgb(222,49,50)" fg:x="823" fg:w="27"/><text x="66.7819%" y="575.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (16 samples, 1.29%)</title><rect x="67.4212%" y="549" width="1.2935%" height="15" fill="rgb(209,157,28)" fg:x="834" fg:w="16"/><text x="67.6712%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.21%)</title><rect x="67.5020%" y="533" width="1.2126%" height="15" fill="rgb(238,174,24)" fg:x="835" fg:w="15"/><text x="67.7520%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (14 samples, 1.13%)</title><rect x="67.5829%" y="517" width="1.1318%" height="15" fill="rgb(224,17,28)" fg:x="836" fg:w="14"/><text x="67.8329%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.6338%" y="501" width="0.0808%" height="15" fill="rgb(249,7,29)" fg:x="849" fg:w="1"/><text x="68.8838%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.7955%" y="517" width="0.0808%" height="15" fill="rgb(243,178,4)" fg:x="851" fg:w="1"/><text x="69.0455%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="68.8763%" y="517" width="0.0808%" height="15" fill="rgb(246,138,35)" fg:x="852" fg:w="1"/><text x="69.1263%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.2805%" y="469" width="0.0808%" height="15" fill="rgb(251,85,18)" fg:x="857" fg:w="1"/><text x="69.5305%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (5 samples, 0.40%)</title><rect x="69.0380%" y="485" width="0.4042%" height="15" fill="rgb(254,55,9)" fg:x="854" fg:w="5"/><text x="69.2880%" y="495.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="69.3614%" y="469" width="0.0808%" height="15" fill="rgb(248,4,50)" fg:x="858" fg:w="1"/><text x="69.6114%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="69.6847%" y="341" width="0.1617%" height="15" fill="rgb(215,208,14)" fg:x="862" fg:w="2"/><text x="69.9347%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="69.6847%" y="325" width="0.1617%" height="15" fill="rgb(218,37,18)" fg:x="862" fg:w="2"/><text x="69.9347%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="69.6847%" y="309" width="0.1617%" height="15" fill="rgb(206,104,13)" fg:x="862" fg:w="2"/><text x="69.9347%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="69.6847%" y="293" width="0.1617%" height="15" fill="rgb(248,94,22)" fg:x="862" fg:w="2"/><text x="69.9347%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="69.6847%" y="277" width="0.1617%" height="15" fill="rgb(235,42,46)" fg:x="862" fg:w="2"/><text x="69.9347%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="69.6847%" y="261" width="0.1617%" height="15" fill="rgb(220,228,48)" fg:x="862" fg:w="2"/><text x="69.9347%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.6847%" y="245" width="0.1617%" height="15" fill="rgb(216,58,12)" fg:x="862" fg:w="2"/><text x="69.9347%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="69.6847%" y="421" width="0.2425%" height="15" fill="rgb(223,97,52)" fg:x="862" fg:w="3"/><text x="69.9347%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="69.6847%" y="405" width="0.2425%" height="15" fill="rgb(208,159,17)" fg:x="862" fg:w="3"/><text x="69.9347%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="69.6847%" y="389" width="0.2425%" height="15" fill="rgb(215,172,9)" fg:x="862" fg:w="3"/><text x="69.9347%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="69.6847%" y="373" width="0.2425%" height="15" fill="rgb(252,175,30)" fg:x="862" fg:w="3"/><text x="69.9347%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="69.6847%" y="357" width="0.2425%" height="15" fill="rgb(209,159,10)" fg:x="862" fg:w="3"/><text x="69.9347%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.8464%" y="341" width="0.0808%" height="15" fill="rgb(229,73,51)" fg:x="864" fg:w="1"/><text x="70.0964%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.8464%" y="325" width="0.0808%" height="15" fill="rgb(208,212,43)" fg:x="864" fg:w="1"/><text x="70.0964%" y="335.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (8 samples, 0.65%)</title><rect x="69.4422%" y="469" width="0.6467%" height="15" fill="rgb(254,123,53)" fg:x="859" fg:w="8"/><text x="69.6922%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.65%)</title><rect x="69.4422%" y="453" width="0.6467%" height="15" fill="rgb(254,128,49)" fg:x="859" fg:w="8"/><text x="69.6922%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.57%)</title><rect x="69.5230%" y="437" width="0.5659%" height="15" fill="rgb(246,16,16)" fg:x="860" fg:w="7"/><text x="69.7730%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.9272%" y="421" width="0.1617%" height="15" fill="rgb(209,200,1)" fg:x="865" fg:w="2"/><text x="70.1772%" y="431.50"></text></g><g><title>glob::is_dir (5 samples, 0.40%)</title><rect x="70.0889%" y="421" width="0.4042%" height="15" fill="rgb(235,9,3)" fg:x="867" fg:w="5"/><text x="70.3389%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat (5 samples, 0.40%)</title><rect x="70.0889%" y="405" width="0.4042%" height="15" fill="rgb(233,121,54)" fg:x="867" fg:w="5"/><text x="70.3389%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (5 samples, 0.40%)</title><rect x="70.0889%" y="389" width="0.4042%" height="15" fill="rgb(236,80,25)" fg:x="867" fg:w="5"/><text x="70.3389%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (5 samples, 0.40%)</title><rect x="70.0889%" y="373" width="0.4042%" height="15" fill="rgb(220,44,24)" fg:x="867" fg:w="5"/><text x="70.3389%" y="383.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (5 samples, 0.40%)</title><rect x="70.0889%" y="357" width="0.4042%" height="15" fill="rgb(236,225,16)" fg:x="867" fg:w="5"/><text x="70.3389%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx (5 samples, 0.40%)</title><rect x="70.0889%" y="341" width="0.4042%" height="15" fill="rgb(237,140,0)" fg:x="867" fg:w="5"/><text x="70.3389%" y="351.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (5 samples, 0.40%)</title><rect x="70.0889%" y="325" width="0.4042%" height="15" fill="rgb(243,225,53)" fg:x="867" fg:w="5"/><text x="70.3389%" y="335.50"></text></g><g><title>statx (5 samples, 0.40%)</title><rect x="70.0889%" y="309" width="0.4042%" height="15" fill="rgb(240,140,30)" fg:x="867" fg:w="5"/><text x="70.3389%" y="319.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.49%)</title><rect x="70.0889%" y="453" width="0.4850%" height="15" fill="rgb(217,51,16)" fg:x="867" fg:w="6"/><text x="70.3389%" y="463.50"></text></g><g><title>glob::fill_todo (6 samples, 0.49%)</title><rect x="70.0889%" y="437" width="0.4850%" height="15" fill="rgb(245,75,50)" fg:x="867" fg:w="6"/><text x="70.3389%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="70.4931%" y="421" width="0.0808%" height="15" fill="rgb(208,174,22)" fg:x="872" fg:w="1"/><text x="70.7431%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="70.4931%" y="405" width="0.0808%" height="15" fill="rgb(219,98,50)" fg:x="872" fg:w="1"/><text x="70.7431%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="70.4931%" y="389" width="0.0808%" height="15" fill="rgb(243,138,3)" fg:x="872" fg:w="1"/><text x="70.7431%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="70.4931%" y="373" width="0.0808%" height="15" fill="rgb(243,132,26)" fg:x="872" fg:w="1"/><text x="70.7431%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="70.4931%" y="357" width="0.0808%" height="15" fill="rgb(250,201,8)" fg:x="872" fg:w="1"/><text x="70.7431%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="70.4931%" y="341" width="0.0808%" height="15" fill="rgb(213,91,26)" fg:x="872" fg:w="1"/><text x="70.7431%" y="351.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="70.4931%" y="325" width="0.0808%" height="15" fill="rgb(229,117,1)" fg:x="872" fg:w="1"/><text x="70.7431%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;glob::Paths&gt; (1 samples, 0.08%)</title><rect x="70.5740%" y="453" width="0.0808%" height="15" fill="rgb(229,24,6)" fg:x="873" fg:w="1"/><text x="70.8240%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.8165%" y="405" width="0.0808%" height="15" fill="rgb(206,69,11)" fg:x="876" fg:w="1"/><text x="71.0665%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8973%" y="373" width="0.0808%" height="15" fill="rgb(234,111,34)" fg:x="877" fg:w="1"/><text x="71.1473%" y="383.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (20 samples, 1.62%)</title><rect x="69.4422%" y="485" width="1.6168%" height="15" fill="rgb(213,187,51)" fg:x="859" fg:w="20"/><text x="69.6922%" y="495.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (12 samples, 0.97%)</title><rect x="70.0889%" y="469" width="0.9701%" height="15" fill="rgb(207,45,11)" fg:x="867" fg:w="12"/><text x="70.3389%" y="479.50"></text></g><g><title>glob::glob (5 samples, 0.40%)</title><rect x="70.6548%" y="453" width="0.4042%" height="15" fill="rgb(225,151,47)" fg:x="874" fg:w="5"/><text x="70.9048%" y="463.50"></text></g><g><title>glob::glob_with (5 samples, 0.40%)</title><rect x="70.6548%" y="437" width="0.4042%" height="15" fill="rgb(211,226,5)" fg:x="874" fg:w="5"/><text x="70.9048%" y="447.50"></text></g><g><title>glob::Pattern::new (4 samples, 0.32%)</title><rect x="70.7357%" y="421" width="0.3234%" height="15" fill="rgb(214,83,52)" fg:x="875" fg:w="4"/><text x="70.9857%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="70.8973%" y="405" width="0.1617%" height="15" fill="rgb(229,49,53)" fg:x="877" fg:w="2"/><text x="71.1473%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="70.8973%" y="389" width="0.1617%" height="15" fill="rgb(246,8,28)" fg:x="877" fg:w="2"/><text x="71.1473%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.9782%" y="373" width="0.0808%" height="15" fill="rgb(207,28,41)" fg:x="878" fg:w="1"/><text x="71.2282%" y="383.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="71.2207%" y="421" width="0.1617%" height="15" fill="rgb(254,22,25)" fg:x="881" fg:w="2"/><text x="71.4707%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="71.2207%" y="405" width="0.1617%" height="15" fill="rgb(209,120,42)" fg:x="881" fg:w="2"/><text x="71.4707%" y="415.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.40%)</title><rect x="71.1399%" y="453" width="0.4042%" height="15" fill="rgb(216,194,18)" fg:x="880" fg:w="5"/><text x="71.3899%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (5 samples, 0.40%)</title><rect x="71.1399%" y="437" width="0.4042%" height="15" fill="rgb(213,70,17)" fg:x="880" fg:w="5"/><text x="71.3899%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (2 samples, 0.16%)</title><rect x="71.3824%" y="421" width="0.1617%" height="15" fill="rgb(228,66,19)" fg:x="883" fg:w="2"/><text x="71.6324%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.3824%" y="405" width="0.1617%" height="15" fill="rgb(236,221,54)" fg:x="883" fg:w="2"/><text x="71.6324%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::GiveToAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="71.5441%" y="421" width="0.0808%" height="15" fill="rgb(207,175,15)" fg:x="885" fg:w="1"/><text x="71.7941%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="71.5441%" y="405" width="0.0808%" height="15" fill="rgb(234,76,8)" fg:x="885" fg:w="1"/><text x="71.7941%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="71.5441%" y="453" width="0.1617%" height="15" fill="rgb(243,106,0)" fg:x="885" fg:w="2"/><text x="71.7941%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="71.5441%" y="437" width="0.1617%" height="15" fill="rgb(208,48,19)" fg:x="885" fg:w="2"/><text x="71.7941%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6249%" y="421" width="0.0808%" height="15" fill="rgb(251,50,29)" fg:x="886" fg:w="1"/><text x="71.8749%" y="431.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="71.7057%" y="453" width="0.0808%" height="15" fill="rgb(222,31,49)" fg:x="887" fg:w="1"/><text x="71.9557%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="71.7057%" y="437" width="0.0808%" height="15" fill="rgb(232,33,18)" fg:x="887" fg:w="1"/><text x="71.9557%" y="447.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="71.7057%" y="421" width="0.0808%" height="15" fill="rgb(209,1,44)" fg:x="887" fg:w="1"/><text x="71.9557%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::actions::DeactivateRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="71.7866%" y="421" width="0.0808%" height="15" fill="rgb(211,7,1)" fg:x="888" fg:w="1"/><text x="72.0366%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="71.7866%" y="405" width="0.0808%" height="15" fill="rgb(224,111,27)" fg:x="888" fg:w="1"/><text x="72.0366%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="71.7866%" y="389" width="0.0808%" height="15" fill="rgb(252,195,39)" fg:x="888" fg:w="1"/><text x="72.0366%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.7866%" y="373" width="0.0808%" height="15" fill="rgb(237,198,5)" fg:x="888" fg:w="1"/><text x="72.0366%" y="383.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="71.7866%" y="453" width="0.1617%" height="15" fill="rgb(232,148,1)" fg:x="888" fg:w="2"/><text x="72.0366%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="71.7866%" y="437" width="0.1617%" height="15" fill="rgb(249,41,3)" fg:x="888" fg:w="2"/><text x="72.0366%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="71.8674%" y="421" width="0.0808%" height="15" fill="rgb(215,14,33)" fg:x="889" fg:w="1"/><text x="72.1174%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.8674%" y="405" width="0.0808%" height="15" fill="rgb(209,146,24)" fg:x="889" fg:w="1"/><text x="72.1174%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.8674%" y="389" width="0.0808%" height="15" fill="rgb(219,51,47)" fg:x="889" fg:w="1"/><text x="72.1174%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12 samples, 0.97%)</title><rect x="71.0590%" y="485" width="0.9701%" height="15" fill="rgb(234,217,40)" fg:x="879" fg:w="12"/><text x="71.3090%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.97%)</title><rect x="71.0590%" y="469" width="0.9701%" height="15" fill="rgb(228,34,26)" fg:x="879" fg:w="12"/><text x="71.3090%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.9483%" y="453" width="0.0808%" height="15" fill="rgb(224,50,29)" fg:x="890" fg:w="1"/><text x="72.1983%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.9483%" y="437" width="0.0808%" height="15" fill="rgb(205,79,51)" fg:x="890" fg:w="1"/><text x="72.1983%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0291%" y="469" width="0.0808%" height="15" fill="rgb(218,136,28)" fg:x="891" fg:w="1"/><text x="72.2791%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (40 samples, 3.23%)</title><rect x="69.0380%" y="501" width="3.2336%" height="15" fill="rgb(220,150,10)" fg:x="854" fg:w="40"/><text x="69.2880%" y="511.50">ker..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (3 samples, 0.24%)</title><rect x="72.0291%" y="485" width="0.2425%" height="15" fill="rgb(242,158,47)" fg:x="891" fg:w="3"/><text x="72.2791%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (2 samples, 0.16%)</title><rect x="72.1099%" y="469" width="0.1617%" height="15" fill="rgb(209,68,0)" fg:x="892" fg:w="2"/><text x="72.3599%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.1099%" y="453" width="0.1617%" height="15" fill="rgb(208,13,41)" fg:x="892" fg:w="2"/><text x="72.3599%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (45 samples, 3.64%)</title><rect x="68.7146%" y="565" width="3.6378%" height="15" fill="rgb(226,201,7)" fg:x="850" fg:w="45"/><text x="68.9646%" y="575.50">&lt;eng..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (45 samples, 3.64%)</title><rect x="68.7146%" y="549" width="3.6378%" height="15" fill="rgb(236,103,26)" fg:x="850" fg:w="45"/><text x="68.9646%" y="559.50">engi..</text></g><g><title>engine::session::Session::new (44 samples, 3.56%)</title><rect x="68.7955%" y="533" width="3.5570%" height="15" fill="rgb(243,162,8)" fg:x="851" fg:w="44"/><text x="69.0455%" y="543.50">engi..</text></g><g><title>engine::session::Session::initialize (42 samples, 3.40%)</title><rect x="68.9572%" y="517" width="3.3953%" height="15" fill="rgb(237,225,11)" fg:x="853" fg:w="42"/><text x="69.2072%" y="527.50">eng..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="72.2716%" y="501" width="0.0808%" height="15" fill="rgb(247,186,32)" fg:x="894" fg:w="1"/><text x="72.5216%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="72.2716%" y="485" width="0.0808%" height="15" fill="rgb(215,26,28)" fg:x="894" fg:w="1"/><text x="72.5216%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.2716%" y="469" width="0.0808%" height="15" fill="rgb(208,121,6)" fg:x="894" fg:w="1"/><text x="72.5216%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.2716%" y="453" width="0.0808%" height="15" fill="rgb(225,91,3)" fg:x="894" fg:w="1"/><text x="72.5216%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.2716%" y="437" width="0.0808%" height="15" fill="rgb(246,119,36)" fg:x="894" fg:w="1"/><text x="72.5216%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.3525%" y="389" width="0.0808%" height="15" fill="rgb(254,173,2)" fg:x="895" fg:w="1"/><text x="72.6025%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3525%" y="373" width="0.0808%" height="15" fill="rgb(209,87,54)" fg:x="895" fg:w="1"/><text x="72.6025%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="72.3525%" y="453" width="0.2425%" height="15" fill="rgb(223,216,20)" fg:x="895" fg:w="3"/><text x="72.6025%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="72.3525%" y="437" width="0.2425%" height="15" fill="rgb(220,31,8)" fg:x="895" fg:w="3"/><text x="72.6025%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="72.3525%" y="421" width="0.2425%" height="15" fill="rgb(220,185,15)" fg:x="895" fg:w="3"/><text x="72.6025%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="72.3525%" y="405" width="0.2425%" height="15" fill="rgb(247,190,50)" fg:x="895" fg:w="3"/><text x="72.6025%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="72.4333%" y="389" width="0.1617%" height="15" fill="rgb(239,173,47)" fg:x="896" fg:w="2"/><text x="72.6833%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.5141%" y="373" width="0.0808%" height="15" fill="rgb(218,190,42)" fg:x="897" fg:w="1"/><text x="72.7641%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.5950%" y="421" width="0.0808%" height="15" fill="rgb(251,207,16)" fg:x="898" fg:w="1"/><text x="72.8450%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.5950%" y="405" width="0.0808%" height="15" fill="rgb(222,199,47)" fg:x="898" fg:w="1"/><text x="72.8450%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.5950%" y="389" width="0.0808%" height="15" fill="rgb(245,190,7)" fg:x="898" fg:w="1"/><text x="72.8450%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.5950%" y="373" width="0.0808%" height="15" fill="rgb(239,85,38)" fg:x="898" fg:w="1"/><text x="72.8450%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="72.5950%" y="437" width="0.2425%" height="15" fill="rgb(229,69,51)" fg:x="898" fg:w="3"/><text x="72.8450%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.6758%" y="421" width="0.1617%" height="15" fill="rgb(231,104,51)" fg:x="899" fg:w="2"/><text x="72.9258%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.7567%" y="405" width="0.0808%" height="15" fill="rgb(235,49,4)" fg:x="900" fg:w="1"/><text x="73.0067%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="72.8375%" y="421" width="0.0808%" height="15" fill="rgb(246,166,20)" fg:x="901" fg:w="1"/><text x="73.0875%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.8375%" y="405" width="0.0808%" height="15" fill="rgb(230,119,37)" fg:x="901" fg:w="1"/><text x="73.0875%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.8375%" y="389" width="0.0808%" height="15" fill="rgb(234,77,34)" fg:x="901" fg:w="1"/><text x="73.0875%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.8375%" y="373" width="0.0808%" height="15" fill="rgb(211,222,33)" fg:x="901" fg:w="1"/><text x="73.0875%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.9184%" y="421" width="0.0808%" height="15" fill="rgb(226,45,42)" fg:x="902" fg:w="1"/><text x="73.1684%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.9184%" y="405" width="0.0808%" height="15" fill="rgb(215,174,28)" fg:x="902" fg:w="1"/><text x="73.1684%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.9184%" y="389" width="0.0808%" height="15" fill="rgb(254,173,49)" fg:x="902" fg:w="1"/><text x="73.1684%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.9184%" y="373" width="0.0808%" height="15" fill="rgb(229,191,6)" fg:x="902" fg:w="1"/><text x="73.1684%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="73.0800%" y="405" width="0.2425%" height="15" fill="rgb(212,145,22)" fg:x="904" fg:w="3"/><text x="73.3300%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.2417%" y="389" width="0.0808%" height="15" fill="rgb(226,6,51)" fg:x="906" fg:w="1"/><text x="73.4917%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.4842%" y="389" width="0.0808%" height="15" fill="rgb(227,128,8)" fg:x="909" fg:w="1"/><text x="73.7342%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.5651%" y="389" width="0.0808%" height="15" fill="rgb(205,24,10)" fg:x="910" fg:w="1"/><text x="73.8151%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.5651%" y="373" width="0.0808%" height="15" fill="rgb(217,147,27)" fg:x="910" fg:w="1"/><text x="73.8151%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.6459%" y="389" width="0.0808%" height="15" fill="rgb(250,82,42)" fg:x="911" fg:w="1"/><text x="73.8959%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.6459%" y="373" width="0.0808%" height="15" fill="rgb(248,93,17)" fg:x="911" fg:w="1"/><text x="73.8959%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.6459%" y="357" width="0.0808%" height="15" fill="rgb(254,212,40)" fg:x="911" fg:w="1"/><text x="73.8959%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.6459%" y="341" width="0.0808%" height="15" fill="rgb(229,209,2)" fg:x="911" fg:w="1"/><text x="73.8959%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.6459%" y="325" width="0.0808%" height="15" fill="rgb(211,50,43)" fg:x="911" fg:w="1"/><text x="73.8959%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="72.9992%" y="421" width="0.8892%" height="15" fill="rgb(245,196,29)" fg:x="903" fg:w="11"/><text x="73.2492%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="73.3226%" y="405" width="0.5659%" height="15" fill="rgb(216,132,13)" fg:x="907" fg:w="7"/><text x="73.5726%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.7268%" y="389" width="0.1617%" height="15" fill="rgb(251,108,21)" fg:x="912" fg:w="2"/><text x="73.9768%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="73.7268%" y="373" width="0.1617%" height="15" fill="rgb(229,174,54)" fg:x="912" fg:w="2"/><text x="73.9768%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.46%)</title><rect x="72.5950%" y="453" width="1.4551%" height="15" fill="rgb(211,175,47)" fg:x="898" fg:w="18"/><text x="72.8450%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="72.8375%" y="437" width="1.2126%" height="15" fill="rgb(234,5,37)" fg:x="901" fg:w="15"/><text x="73.0875%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.8884%" y="421" width="0.1617%" height="15" fill="rgb(244,150,43)" fg:x="914" fg:w="2"/><text x="74.1384%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="73.8884%" y="405" width="0.1617%" height="15" fill="rgb(242,172,38)" fg:x="914" fg:w="2"/><text x="74.1384%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="74.0501%" y="437" width="0.0808%" height="15" fill="rgb(205,27,8)" fg:x="916" fg:w="1"/><text x="74.3001%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.0501%" y="421" width="0.0808%" height="15" fill="rgb(217,57,3)" fg:x="916" fg:w="1"/><text x="74.3001%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.1310%" y="405" width="0.1617%" height="15" fill="rgb(242,21,38)" fg:x="917" fg:w="2"/><text x="74.3810%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.2118%" y="389" width="0.0808%" height="15" fill="rgb(209,64,43)" fg:x="918" fg:w="1"/><text x="74.4618%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="74.2926%" y="405" width="0.1617%" height="15" fill="rgb(222,2,46)" fg:x="919" fg:w="2"/><text x="74.5426%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="74.2926%" y="389" width="0.1617%" height="15" fill="rgb(218,19,44)" fg:x="919" fg:w="2"/><text x="74.5426%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3735%" y="373" width="0.0808%" height="15" fill="rgb(240,203,42)" fg:x="920" fg:w="1"/><text x="74.6235%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="74.4543%" y="357" width="0.1617%" height="15" fill="rgb(229,23,45)" fg:x="921" fg:w="2"/><text x="74.7043%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="74.4543%" y="341" width="0.1617%" height="15" fill="rgb(205,228,51)" fg:x="921" fg:w="2"/><text x="74.7043%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="74.4543%" y="325" width="0.1617%" height="15" fill="rgb(239,36,20)" fg:x="921" fg:w="2"/><text x="74.7043%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.4543%" y="309" width="0.1617%" height="15" fill="rgb(248,172,27)" fg:x="921" fg:w="2"/><text x="74.7043%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.6968%" y="325" width="0.0808%" height="15" fill="rgb(244,55,32)" fg:x="924" fg:w="1"/><text x="74.9468%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6968%" y="309" width="0.0808%" height="15" fill="rgb(215,97,16)" fg:x="924" fg:w="1"/><text x="74.9468%" y="319.50"></text></g><g><title>engine::session::Session::flush (32 samples, 2.59%)</title><rect x="72.3525%" y="549" width="2.5869%" height="15" fill="rgb(224,80,29)" fg:x="895" fg:w="32"/><text x="72.6025%" y="559.50">en..</text></g><g><title>engine::session::state::State::close (32 samples, 2.59%)</title><rect x="72.3525%" y="533" width="2.5869%" height="15" fill="rgb(216,93,47)" fg:x="895" fg:w="32"/><text x="72.6025%" y="543.50">en..</text></g><g><title>engine::session::state::State::flush_entities (32 samples, 2.59%)</title><rect x="72.3525%" y="517" width="2.5869%" height="15" fill="rgb(238,159,10)" fg:x="895" fg:w="32"/><text x="72.6025%" y="527.50">en..</text></g><g><title>core::iter::adapters::try_process (32 samples, 2.59%)</title><rect x="72.3525%" y="501" width="2.5869%" height="15" fill="rgb(223,98,29)" fg:x="895" fg:w="32"/><text x="72.6025%" y="511.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 2.59%)</title><rect x="72.3525%" y="485" width="2.5869%" height="15" fill="rgb(210,176,23)" fg:x="895" fg:w="32"/><text x="72.6025%" y="495.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (32 samples, 2.59%)</title><rect x="72.3525%" y="469" width="2.5869%" height="15" fill="rgb(242,162,27)" fg:x="895" fg:w="32"/><text x="72.6025%" y="479.50">en..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.89%)</title><rect x="74.0501%" y="453" width="0.8892%" height="15" fill="rgb(245,109,32)" fg:x="916" fg:w="11"/><text x="74.3001%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.81%)</title><rect x="74.1310%" y="437" width="0.8084%" height="15" fill="rgb(248,87,8)" fg:x="917" fg:w="10"/><text x="74.3810%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.81%)</title><rect x="74.1310%" y="421" width="0.8084%" height="15" fill="rgb(250,160,50)" fg:x="917" fg:w="10"/><text x="74.3810%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.49%)</title><rect x="74.4543%" y="405" width="0.4850%" height="15" fill="rgb(246,165,25)" fg:x="921" fg:w="6"/><text x="74.7043%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.49%)</title><rect x="74.4543%" y="389" width="0.4850%" height="15" fill="rgb(249,219,3)" fg:x="921" fg:w="6"/><text x="74.7043%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="74.4543%" y="373" width="0.4850%" height="15" fill="rgb(226,66,5)" fg:x="921" fg:w="6"/><text x="74.7043%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="74.6160%" y="357" width="0.3234%" height="15" fill="rgb(250,220,43)" fg:x="923" fg:w="4"/><text x="74.8660%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="74.6968%" y="341" width="0.2425%" height="15" fill="rgb(225,111,31)" fg:x="924" fg:w="3"/><text x="74.9468%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="74.7777%" y="325" width="0.1617%" height="15" fill="rgb(248,106,18)" fg:x="925" fg:w="2"/><text x="75.0277%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.8585%" y="309" width="0.0808%" height="15" fill="rgb(220,226,45)" fg:x="926" fg:w="1"/><text x="75.1085%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.8585%" y="293" width="0.0808%" height="15" fill="rgb(208,58,53)" fg:x="926" fg:w="1"/><text x="75.1085%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.8585%" y="277" width="0.0808%" height="15" fill="rgb(209,133,1)" fg:x="926" fg:w="1"/><text x="75.1085%" y="287.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="74.9394%" y="517" width="0.0808%" height="15" fill="rgb(228,216,27)" fg:x="927" fg:w="1"/><text x="75.1894%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.9394%" y="501" width="0.0808%" height="15" fill="rgb(238,155,2)" fg:x="927" fg:w="1"/><text x="75.1894%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.9394%" y="485" width="0.0808%" height="15" fill="rgb(244,99,37)" fg:x="927" fg:w="1"/><text x="75.1894%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="74.9394%" y="549" width="0.2425%" height="15" fill="rgb(254,32,3)" fg:x="927" fg:w="3"/><text x="75.1894%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.24%)</title><rect x="74.9394%" y="533" width="0.2425%" height="15" fill="rgb(234,46,50)" fg:x="927" fg:w="3"/><text x="75.1894%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="75.0202%" y="517" width="0.1617%" height="15" fill="rgb(232,118,51)" fg:x="928" fg:w="2"/><text x="75.2702%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="75.0202%" y="501" width="0.1617%" height="15" fill="rgb(207,24,32)" fg:x="928" fg:w="2"/><text x="75.2702%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.1011%" y="485" width="0.0808%" height="15" fill="rgb(208,107,43)" fg:x="929" fg:w="1"/><text x="75.3511%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1011%" y="469" width="0.0808%" height="15" fill="rgb(231,28,9)" fg:x="929" fg:w="1"/><text x="75.3511%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.1011%" y="453" width="0.0808%" height="15" fill="rgb(241,204,15)" fg:x="929" fg:w="1"/><text x="75.3511%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1011%" y="437" width="0.0808%" height="15" fill="rgb(214,54,15)" fg:x="929" fg:w="1"/><text x="75.3511%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1011%" y="421" width="0.0808%" height="15" fill="rgb(230,12,28)" fg:x="929" fg:w="1"/><text x="75.3511%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1819%" y="485" width="0.0808%" height="15" fill="rgb(221,171,5)" fg:x="930" fg:w="1"/><text x="75.4319%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1819%" y="469" width="0.0808%" height="15" fill="rgb(207,72,25)" fg:x="930" fg:w="1"/><text x="75.4319%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="75.1819%" y="501" width="0.2425%" height="15" fill="rgb(249,79,37)" fg:x="930" fg:w="3"/><text x="75.4319%" y="511.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.2627%" y="485" width="0.1617%" height="15" fill="rgb(209,98,49)" fg:x="931" fg:w="2"/><text x="75.5127%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2627%" y="469" width="0.1617%" height="15" fill="rgb(221,62,13)" fg:x="931" fg:w="2"/><text x="75.5127%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.2627%" y="453" width="0.1617%" height="15" fill="rgb(223,39,6)" fg:x="931" fg:w="2"/><text x="75.5127%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="75.1819%" y="517" width="0.3234%" height="15" fill="rgb(246,163,20)" fg:x="930" fg:w="4"/><text x="75.4319%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="75.4244%" y="501" width="0.0808%" height="15" fill="rgb(211,111,29)" fg:x="933" fg:w="1"/><text x="75.6744%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="75.4244%" y="485" width="0.0808%" height="15" fill="rgb(243,118,5)" fg:x="933" fg:w="1"/><text x="75.6744%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="75.4244%" y="469" width="0.0808%" height="15" fill="rgb(240,144,52)" fg:x="933" fg:w="1"/><text x="75.6744%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.4244%" y="453" width="0.0808%" height="15" fill="rgb(244,158,36)" fg:x="933" fg:w="1"/><text x="75.6744%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="75.5053%" y="469" width="0.0808%" height="15" fill="rgb(241,109,37)" fg:x="934" fg:w="1"/><text x="75.7553%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="75.5053%" y="453" width="0.0808%" height="15" fill="rgb(213,95,32)" fg:x="934" fg:w="1"/><text x="75.7553%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="75.5053%" y="501" width="0.1617%" height="15" fill="rgb(252,193,9)" fg:x="934" fg:w="2"/><text x="75.7553%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="75.5053%" y="485" width="0.1617%" height="15" fill="rgb(225,213,21)" fg:x="934" fg:w="2"/><text x="75.7553%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5861%" y="469" width="0.0808%" height="15" fill="rgb(220,172,46)" fg:x="935" fg:w="1"/><text x="75.8361%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.5861%" y="453" width="0.0808%" height="15" fill="rgb(235,75,41)" fg:x="935" fg:w="1"/><text x="75.8361%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.5861%" y="437" width="0.0808%" height="15" fill="rgb(213,86,9)" fg:x="935" fg:w="1"/><text x="75.8361%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5861%" y="421" width="0.0808%" height="15" fill="rgb(238,127,51)" fg:x="935" fg:w="1"/><text x="75.8361%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.5861%" y="405" width="0.0808%" height="15" fill="rgb(215,2,54)" fg:x="935" fg:w="1"/><text x="75.8361%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5861%" y="389" width="0.0808%" height="15" fill="rgb(245,80,6)" fg:x="935" fg:w="1"/><text x="75.8361%" y="399.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="75.6669%" y="501" width="0.0808%" height="15" fill="rgb(233,106,42)" fg:x="936" fg:w="1"/><text x="75.9169%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="75.9095%" y="373" width="0.0808%" height="15" fill="rgb(244,86,38)" fg:x="939" fg:w="1"/><text x="76.1595%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.89%)</title><rect x="75.1819%" y="533" width="0.8892%" height="15" fill="rgb(242,167,7)" fg:x="930" fg:w="11"/><text x="75.4319%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="75.5053%" y="517" width="0.5659%" height="15" fill="rgb(218,216,3)" fg:x="934" fg:w="7"/><text x="75.7553%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="75.7478%" y="501" width="0.3234%" height="15" fill="rgb(206,136,36)" fg:x="937" fg:w="4"/><text x="75.9978%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="75.7478%" y="485" width="0.3234%" height="15" fill="rgb(206,206,15)" fg:x="937" fg:w="4"/><text x="75.9978%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="75.7478%" y="469" width="0.3234%" height="15" fill="rgb(207,163,34)" fg:x="937" fg:w="4"/><text x="75.9978%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="75.7478%" y="453" width="0.3234%" height="15" fill="rgb(240,127,22)" fg:x="937" fg:w="4"/><text x="75.9978%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="75.8286%" y="437" width="0.2425%" height="15" fill="rgb(227,49,5)" fg:x="938" fg:w="3"/><text x="76.0786%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="75.8286%" y="421" width="0.2425%" height="15" fill="rgb(231,8,6)" fg:x="938" fg:w="3"/><text x="76.0786%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="75.8286%" y="405" width="0.2425%" height="15" fill="rgb(223,21,24)" fg:x="938" fg:w="3"/><text x="76.0786%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.9095%" y="389" width="0.1617%" height="15" fill="rgb(244,44,52)" fg:x="939" fg:w="2"/><text x="76.1595%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.9903%" y="373" width="0.0808%" height="15" fill="rgb(207,73,28)" fg:x="940" fg:w="1"/><text x="76.2403%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9903%" y="357" width="0.0808%" height="15" fill="rgb(234,215,10)" fg:x="940" fg:w="1"/><text x="76.2403%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9903%" y="341" width="0.0808%" height="15" fill="rgb(236,85,3)" fg:x="940" fg:w="1"/><text x="76.2403%" y="351.50"></text></g><g><title>plugins_core::build::Build::save (12 samples, 0.97%)</title><rect x="75.1819%" y="549" width="0.9701%" height="15" fill="rgb(236,102,39)" fg:x="930" fg:w="12"/><text x="75.4319%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.0711%" y="533" width="0.0808%" height="15" fill="rgb(243,50,8)" fg:x="941" fg:w="1"/><text x="76.3211%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.0711%" y="517" width="0.0808%" height="15" fill="rgb(207,111,4)" fg:x="941" fg:w="1"/><text x="76.3211%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.0711%" y="501" width="0.0808%" height="15" fill="rgb(230,52,42)" fg:x="941" fg:w="1"/><text x="76.3211%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.0711%" y="485" width="0.0808%" height="15" fill="rgb(252,178,50)" fg:x="941" fg:w="1"/><text x="76.3211%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.0711%" y="469" width="0.0808%" height="15" fill="rgb(234,46,35)" fg:x="941" fg:w="1"/><text x="76.3211%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.0711%" y="453" width="0.0808%" height="15" fill="rgb(228,69,37)" fg:x="941" fg:w="1"/><text x="76.3211%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.0711%" y="437" width="0.0808%" height="15" fill="rgb(221,21,11)" fg:x="941" fg:w="1"/><text x="76.3211%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.0711%" y="421" width="0.0808%" height="15" fill="rgb(223,56,9)" fg:x="941" fg:w="1"/><text x="76.3211%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.0711%" y="405" width="0.0808%" height="15" fill="rgb(234,30,19)" fg:x="941" fg:w="1"/><text x="76.3211%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.0711%" y="389" width="0.0808%" height="15" fill="rgb(211,64,54)" fg:x="941" fg:w="1"/><text x="76.3211%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.0711%" y="373" width="0.0808%" height="15" fill="rgb(250,189,5)" fg:x="941" fg:w="1"/><text x="76.3211%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.0711%" y="357" width="0.0808%" height="15" fill="rgb(214,180,13)" fg:x="941" fg:w="1"/><text x="76.3211%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0711%" y="341" width="0.0808%" height="15" fill="rgb(238,40,40)" fg:x="941" fg:w="1"/><text x="76.3211%" y="351.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (1 samples, 0.08%)</title><rect x="76.1520%" y="549" width="0.0808%" height="15" fill="rgb(214,101,38)" fg:x="942" fg:w="1"/><text x="76.4020%" y="559.50"></text></g><g><title>plugins_core::tools::set_quantity (1 samples, 0.08%)</title><rect x="76.1520%" y="533" width="0.0808%" height="15" fill="rgb(242,65,53)" fg:x="942" fg:w="1"/><text x="76.4020%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="76.1520%" y="517" width="0.0808%" height="15" fill="rgb(230,22,45)" fg:x="942" fg:w="1"/><text x="76.4020%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1520%" y="501" width="0.0808%" height="15" fill="rgb(223,77,1)" fg:x="942" fg:w="1"/><text x="76.4020%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.1520%" y="485" width="0.0808%" height="15" fill="rgb(227,33,37)" fg:x="942" fg:w="1"/><text x="76.4020%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1520%" y="469" width="0.0808%" height="15" fill="rgb(224,148,39)" fg:x="942" fg:w="1"/><text x="76.4020%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.1520%" y="453" width="0.0808%" height="15" fill="rgb(232,212,39)" fg:x="942" fg:w="1"/><text x="76.4020%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1520%" y="437" width="0.0808%" height="15" fill="rgb(251,172,7)" fg:x="942" fg:w="1"/><text x="76.4020%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.1520%" y="421" width="0.0808%" height="15" fill="rgb(219,39,9)" fg:x="942" fg:w="1"/><text x="76.4020%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1520%" y="405" width="0.0808%" height="15" fill="rgb(228,118,14)" fg:x="942" fg:w="1"/><text x="76.4020%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::OpenedScopeRefMut&lt;plugins_core::carrying::model::Containing,kernel::model::entity::Entity&gt;&gt; (1 samples, 0.08%)</title><rect x="76.2328%" y="517" width="0.0808%" height="15" fill="rgb(207,140,10)" fg:x="943" fg:w="1"/><text x="76.4828%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="76.2328%" y="501" width="0.0808%" height="15" fill="rgb(227,111,53)" fg:x="943" fg:w="1"/><text x="76.4828%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.2328%" y="485" width="0.0808%" height="15" fill="rgb(216,165,16)" fg:x="943" fg:w="1"/><text x="76.4828%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="76.3137%" y="517" width="0.0808%" height="15" fill="rgb(226,111,18)" fg:x="944" fg:w="1"/><text x="76.5637%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="76.3137%" y="501" width="0.0808%" height="15" fill="rgb(251,27,17)" fg:x="944" fg:w="1"/><text x="76.5637%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.3137%" y="485" width="0.0808%" height="15" fill="rgb(254,69,9)" fg:x="944" fg:w="1"/><text x="76.5637%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="76.3137%" y="469" width="0.0808%" height="15" fill="rgb(234,140,37)" fg:x="944" fg:w="1"/><text x="76.5637%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.3137%" y="453" width="0.0808%" height="15" fill="rgb(220,93,8)" fg:x="944" fg:w="1"/><text x="76.5637%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3137%" y="437" width="0.0808%" height="15" fill="rgb(236,113,3)" fg:x="944" fg:w="1"/><text x="76.5637%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.3137%" y="421" width="0.0808%" height="15" fill="rgb(234,108,23)" fg:x="944" fg:w="1"/><text x="76.5637%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3137%" y="405" width="0.0808%" height="15" fill="rgb(205,114,34)" fg:x="944" fg:w="1"/><text x="76.5637%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.3137%" y="389" width="0.0808%" height="15" fill="rgb(236,200,45)" fg:x="944" fg:w="1"/><text x="76.5637%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3137%" y="373" width="0.0808%" height="15" fill="rgb(227,194,29)" fg:x="944" fg:w="1"/><text x="76.5637%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.3137%" y="357" width="0.0808%" height="15" fill="rgb(250,76,42)" fg:x="944" fg:w="1"/><text x="76.5637%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="76.4753%" y="501" width="0.0808%" height="15" fill="rgb(208,128,8)" fg:x="946" fg:w="1"/><text x="76.7253%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4753%" y="485" width="0.0808%" height="15" fill="rgb(229,209,35)" fg:x="946" fg:w="1"/><text x="76.7253%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4753%" y="469" width="0.0808%" height="15" fill="rgb(215,39,53)" fg:x="946" fg:w="1"/><text x="76.7253%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4753%" y="453" width="0.0808%" height="15" fill="rgb(219,123,41)" fg:x="946" fg:w="1"/><text x="76.7253%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4753%" y="437" width="0.0808%" height="15" fill="rgb(212,158,18)" fg:x="946" fg:w="1"/><text x="76.7253%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.5562%" y="469" width="0.0808%" height="15" fill="rgb(234,196,53)" fg:x="947" fg:w="1"/><text x="76.8062%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="76.5562%" y="453" width="0.0808%" height="15" fill="rgb(210,139,12)" fg:x="947" fg:w="1"/><text x="76.8062%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5562%" y="437" width="0.0808%" height="15" fill="rgb(220,116,54)" fg:x="947" fg:w="1"/><text x="76.8062%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5562%" y="421" width="0.0808%" height="15" fill="rgb(247,103,28)" fg:x="947" fg:w="1"/><text x="76.8062%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5562%" y="405" width="0.0808%" height="15" fill="rgb(253,156,45)" fg:x="947" fg:w="1"/><text x="76.8062%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5562%" y="389" width="0.0808%" height="15" fill="rgb(237,157,52)" fg:x="947" fg:w="1"/><text x="76.8062%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5562%" y="373" width="0.0808%" height="15" fill="rgb(253,112,16)" fg:x="947" fg:w="1"/><text x="76.8062%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.5562%" y="357" width="0.0808%" height="15" fill="rgb(234,70,18)" fg:x="947" fg:w="1"/><text x="76.8062%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.5562%" y="341" width="0.0808%" height="15" fill="rgb(247,138,19)" fg:x="947" fg:w="1"/><text x="76.8062%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.5562%" y="325" width="0.0808%" height="15" fill="rgb(207,171,1)" fg:x="947" fg:w="1"/><text x="76.8062%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.5562%" y="309" width="0.0808%" height="15" fill="rgb(239,213,3)" fg:x="947" fg:w="1"/><text x="76.8062%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.5562%" y="293" width="0.0808%" height="15" fill="rgb(226,112,4)" fg:x="947" fg:w="1"/><text x="76.8062%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.5562%" y="277" width="0.0808%" height="15" fill="rgb(252,170,12)" fg:x="947" fg:w="1"/><text x="76.8062%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.5562%" y="261" width="0.0808%" height="15" fill="rgb(241,106,13)" fg:x="947" fg:w="1"/><text x="76.8062%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.5562%" y="245" width="0.0808%" height="15" fill="rgb(225,73,23)" fg:x="947" fg:w="1"/><text x="76.8062%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.5562%" y="229" width="0.0808%" height="15" fill="rgb(251,227,29)" fg:x="947" fg:w="1"/><text x="76.8062%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5562%" y="213" width="0.0808%" height="15" fill="rgb(237,144,13)" fg:x="947" fg:w="1"/><text x="76.8062%" y="223.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (6 samples, 0.49%)</title><rect x="76.2328%" y="549" width="0.4850%" height="15" fill="rgb(232,106,46)" fg:x="943" fg:w="6"/><text x="76.4828%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.49%)</title><rect x="76.2328%" y="533" width="0.4850%" height="15" fill="rgb(245,154,53)" fg:x="943" fg:w="6"/><text x="76.4828%" y="543.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="76.3945%" y="517" width="0.3234%" height="15" fill="rgb(212,119,47)" fg:x="945" fg:w="4"/><text x="76.6445%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="76.5562%" y="501" width="0.1617%" height="15" fill="rgb(253,135,25)" fg:x="947" fg:w="2"/><text x="76.8062%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="76.5562%" y="485" width="0.1617%" height="15" fill="rgb(253,208,39)" fg:x="947" fg:w="2"/><text x="76.8062%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.6370%" y="469" width="0.0808%" height="15" fill="rgb(226,64,12)" fg:x="948" fg:w="1"/><text x="76.8870%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="76.6370%" y="453" width="0.0808%" height="15" fill="rgb(214,162,37)" fg:x="948" fg:w="1"/><text x="76.8870%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="76.7179%" y="533" width="0.0808%" height="15" fill="rgb(250,104,5)" fg:x="949" fg:w="1"/><text x="76.9679%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="76.7179%" y="517" width="0.0808%" height="15" fill="rgb(220,202,50)" fg:x="949" fg:w="1"/><text x="76.9679%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7179%" y="501" width="0.0808%" height="15" fill="rgb(248,67,38)" fg:x="949" fg:w="1"/><text x="76.9679%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7179%" y="485" width="0.0808%" height="15" fill="rgb(242,94,35)" fg:x="949" fg:w="1"/><text x="76.9679%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.7179%" y="469" width="0.0808%" height="15" fill="rgb(209,78,37)" fg:x="949" fg:w="1"/><text x="76.9679%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7179%" y="453" width="0.0808%" height="15" fill="rgb(230,126,47)" fg:x="949" fg:w="1"/><text x="76.9679%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="76.7987%" y="533" width="0.1617%" height="15" fill="rgb(222,110,35)" fg:x="950" fg:w="2"/><text x="77.0487%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.8795%" y="517" width="0.0808%" height="15" fill="rgb(233,154,20)" fg:x="951" fg:w="1"/><text x="77.1295%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.8795%" y="501" width="0.0808%" height="15" fill="rgb(223,53,50)" fg:x="951" fg:w="1"/><text x="77.1295%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.8795%" y="485" width="0.0808%" height="15" fill="rgb(251,27,26)" fg:x="951" fg:w="1"/><text x="77.1295%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.8795%" y="469" width="0.0808%" height="15" fill="rgb(223,189,16)" fg:x="951" fg:w="1"/><text x="77.1295%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8795%" y="453" width="0.0808%" height="15" fill="rgb(207,5,54)" fg:x="951" fg:w="1"/><text x="77.1295%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="76.9604%" y="533" width="0.0808%" height="15" fill="rgb(254,124,50)" fg:x="952" fg:w="1"/><text x="77.2104%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9604%" y="517" width="0.0808%" height="15" fill="rgb(253,193,24)" fg:x="952" fg:w="1"/><text x="77.2104%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.0412%" y="421" width="0.0808%" height="15" fill="rgb(235,170,24)" fg:x="953" fg:w="1"/><text x="77.2912%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.0412%" y="405" width="0.0808%" height="15" fill="rgb(222,212,52)" fg:x="953" fg:w="1"/><text x="77.2912%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.0412%" y="389" width="0.0808%" height="15" fill="rgb(223,17,45)" fg:x="953" fg:w="1"/><text x="77.2912%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.0412%" y="373" width="0.0808%" height="15" fill="rgb(227,103,26)" fg:x="953" fg:w="1"/><text x="77.2912%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="77.0412%" y="533" width="0.1617%" height="15" fill="rgb(251,151,25)" fg:x="953" fg:w="2"/><text x="77.2912%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="77.0412%" y="517" width="0.1617%" height="15" fill="rgb(248,144,29)" fg:x="953" fg:w="2"/><text x="77.2912%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="77.0412%" y="501" width="0.1617%" height="15" fill="rgb(245,97,16)" fg:x="953" fg:w="2"/><text x="77.2912%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="77.0412%" y="485" width="0.1617%" height="15" fill="rgb(220,200,29)" fg:x="953" fg:w="2"/><text x="77.2912%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="77.0412%" y="469" width="0.1617%" height="15" fill="rgb(206,38,29)" fg:x="953" fg:w="2"/><text x="77.2912%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="77.0412%" y="453" width="0.1617%" height="15" fill="rgb(245,19,52)" fg:x="953" fg:w="2"/><text x="77.2912%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="77.0412%" y="437" width="0.1617%" height="15" fill="rgb(205,67,43)" fg:x="953" fg:w="2"/><text x="77.2912%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1221%" y="421" width="0.0808%" height="15" fill="rgb(217,128,23)" fg:x="954" fg:w="1"/><text x="77.3721%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1221%" y="405" width="0.0808%" height="15" fill="rgb(210,109,28)" fg:x="954" fg:w="1"/><text x="77.3721%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1221%" y="389" width="0.0808%" height="15" fill="rgb(233,181,7)" fg:x="954" fg:w="1"/><text x="77.3721%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.1221%" y="373" width="0.0808%" height="15" fill="rgb(244,11,22)" fg:x="954" fg:w="1"/><text x="77.3721%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.1221%" y="357" width="0.0808%" height="15" fill="rgb(205,124,54)" fg:x="954" fg:w="1"/><text x="77.3721%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.1221%" y="341" width="0.0808%" height="15" fill="rgb(218,21,27)" fg:x="954" fg:w="1"/><text x="77.3721%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.1221%" y="325" width="0.0808%" height="15" fill="rgb(224,153,33)" fg:x="954" fg:w="1"/><text x="77.3721%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.1221%" y="309" width="0.0808%" height="15" fill="rgb(240,219,28)" fg:x="954" fg:w="1"/><text x="77.3721%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.1221%" y="293" width="0.0808%" height="15" fill="rgb(214,80,29)" fg:x="954" fg:w="1"/><text x="77.3721%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.1221%" y="277" width="0.0808%" height="15" fill="rgb(247,148,44)" fg:x="954" fg:w="1"/><text x="77.3721%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.1221%" y="261" width="0.0808%" height="15" fill="rgb(243,110,30)" fg:x="954" fg:w="1"/><text x="77.3721%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.1221%" y="245" width="0.0808%" height="15" fill="rgb(243,173,41)" fg:x="954" fg:w="1"/><text x="77.3721%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1221%" y="229" width="0.0808%" height="15" fill="rgb(225,160,47)" fg:x="954" fg:w="1"/><text x="77.3721%" y="239.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="77.2029%" y="501" width="0.0808%" height="15" fill="rgb(215,44,21)" fg:x="955" fg:w="1"/><text x="77.4529%" y="511.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="77.2029%" y="485" width="0.0808%" height="15" fill="rgb(248,90,3)" fg:x="955" fg:w="1"/><text x="77.4529%" y="495.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="77.2029%" y="469" width="0.0808%" height="15" fill="rgb(220,196,49)" fg:x="955" fg:w="1"/><text x="77.4529%" y="479.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="77.2029%" y="453" width="0.0808%" height="15" fill="rgb(217,138,14)" fg:x="955" fg:w="1"/><text x="77.4529%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="77.2029%" y="437" width="0.0808%" height="15" fill="rgb(219,111,20)" fg:x="955" fg:w="1"/><text x="77.4529%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="77.2029%" y="421" width="0.0808%" height="15" fill="rgb(218,114,4)" fg:x="955" fg:w="1"/><text x="77.4529%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.2838%" y="469" width="0.0808%" height="15" fill="rgb(238,133,3)" fg:x="956" fg:w="1"/><text x="77.5338%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="77.2838%" y="453" width="0.0808%" height="15" fill="rgb(224,95,0)" fg:x="956" fg:w="1"/><text x="77.5338%" y="463.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="77.2838%" y="437" width="0.0808%" height="15" fill="rgb(220,169,35)" fg:x="956" fg:w="1"/><text x="77.5338%" y="447.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="77.2838%" y="421" width="0.0808%" height="15" fill="rgb(242,116,47)" fg:x="956" fg:w="1"/><text x="77.5338%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="77.2838%" y="405" width="0.0808%" height="15" fill="rgb(251,42,20)" fg:x="956" fg:w="1"/><text x="77.5338%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="77.2838%" y="389" width="0.0808%" height="15" fill="rgb(234,7,34)" fg:x="956" fg:w="1"/><text x="77.5338%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="77.3646%" y="373" width="0.1617%" height="15" fill="rgb(243,208,13)" fg:x="957" fg:w="2"/><text x="77.6146%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.4454%" y="357" width="0.0808%" height="15" fill="rgb(227,33,28)" fg:x="958" fg:w="1"/><text x="77.6954%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.4454%" y="341" width="0.0808%" height="15" fill="rgb(250,47,37)" fg:x="958" fg:w="1"/><text x="77.6954%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.4454%" y="325" width="0.0808%" height="15" fill="rgb(235,111,52)" fg:x="958" fg:w="1"/><text x="77.6954%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="77.3646%" y="389" width="0.4042%" height="15" fill="rgb(223,64,28)" fg:x="957" fg:w="5"/><text x="77.6146%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="77.5263%" y="373" width="0.2425%" height="15" fill="rgb(236,67,22)" fg:x="959" fg:w="3"/><text x="77.7763%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="77.6071%" y="357" width="0.1617%" height="15" fill="rgb(243,79,24)" fg:x="960" fg:w="2"/><text x="77.8571%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.6880%" y="341" width="0.0808%" height="15" fill="rgb(241,225,22)" fg:x="961" fg:w="1"/><text x="77.9380%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.6880%" y="325" width="0.0808%" height="15" fill="rgb(228,214,26)" fg:x="961" fg:w="1"/><text x="77.9380%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6880%" y="309" width="0.0808%" height="15" fill="rgb(219,84,52)" fg:x="961" fg:w="1"/><text x="77.9380%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="77.3646%" y="405" width="0.4850%" height="15" fill="rgb(220,12,22)" fg:x="957" fg:w="6"/><text x="77.6146%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.7688%" y="389" width="0.0808%" height="15" fill="rgb(219,9,49)" fg:x="962" fg:w="1"/><text x="78.0188%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="77.3646%" y="421" width="0.5659%" height="15" fill="rgb(237,40,43)" fg:x="957" fg:w="7"/><text x="77.6146%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.8496%" y="405" width="0.0808%" height="15" fill="rgb(212,189,32)" fg:x="963" fg:w="1"/><text x="78.0996%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="77.9305%" y="421" width="0.0808%" height="15" fill="rgb(247,48,9)" fg:x="964" fg:w="1"/><text x="78.1805%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.9305%" y="405" width="0.0808%" height="15" fill="rgb(247,112,3)" fg:x="964" fg:w="1"/><text x="78.1805%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="78.0113%" y="405" width="0.3234%" height="15" fill="rgb(243,110,18)" fg:x="965" fg:w="4"/><text x="78.2613%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="78.0113%" y="389" width="0.3234%" height="15" fill="rgb(233,223,44)" fg:x="965" fg:w="4"/><text x="78.2613%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="78.0922%" y="373" width="0.2425%" height="15" fill="rgb(245,160,20)" fg:x="966" fg:w="3"/><text x="78.3422%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="78.0922%" y="357" width="0.2425%" height="15" fill="rgb(225,37,1)" fg:x="966" fg:w="3"/><text x="78.3422%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="78.0922%" y="341" width="0.2425%" height="15" fill="rgb(253,227,39)" fg:x="966" fg:w="3"/><text x="78.3422%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.2538%" y="325" width="0.0808%" height="15" fill="rgb(240,179,26)" fg:x="968" fg:w="1"/><text x="78.5038%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.2538%" y="309" width="0.0808%" height="15" fill="rgb(237,212,23)" fg:x="968" fg:w="1"/><text x="78.5038%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.2538%" y="293" width="0.0808%" height="15" fill="rgb(221,38,11)" fg:x="968" fg:w="1"/><text x="78.5038%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.3347%" y="389" width="0.1617%" height="15" fill="rgb(215,85,6)" fg:x="969" fg:w="2"/><text x="78.5847%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.3347%" y="373" width="0.1617%" height="15" fill="rgb(239,64,14)" fg:x="969" fg:w="2"/><text x="78.5847%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.3347%" y="357" width="0.1617%" height="15" fill="rgb(215,150,32)" fg:x="969" fg:w="2"/><text x="78.5847%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="78.3347%" y="341" width="0.1617%" height="15" fill="rgb(238,15,13)" fg:x="969" fg:w="2"/><text x="78.5847%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="78.3347%" y="325" width="0.1617%" height="15" fill="rgb(251,87,8)" fg:x="969" fg:w="2"/><text x="78.5847%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="78.3347%" y="309" width="0.1617%" height="15" fill="rgb(206,86,1)" fg:x="969" fg:w="2"/><text x="78.5847%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="78.3347%" y="293" width="0.1617%" height="15" fill="rgb(208,151,45)" fg:x="969" fg:w="2"/><text x="78.5847%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.4964%" y="373" width="0.0808%" height="15" fill="rgb(231,181,24)" fg:x="971" fg:w="1"/><text x="78.7464%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.4964%" y="357" width="0.0808%" height="15" fill="rgb(240,106,29)" fg:x="971" fg:w="1"/><text x="78.7464%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.4964%" y="341" width="0.0808%" height="15" fill="rgb(227,166,11)" fg:x="971" fg:w="1"/><text x="78.7464%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="78.5772%" y="373" width="0.2425%" height="15" fill="rgb(254,14,34)" fg:x="972" fg:w="3"/><text x="78.8272%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.6580%" y="357" width="0.1617%" height="15" fill="rgb(223,222,6)" fg:x="973" fg:w="2"/><text x="78.9080%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.7389%" y="341" width="0.0808%" height="15" fill="rgb(245,69,24)" fg:x="974" fg:w="1"/><text x="78.9889%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.7389%" y="325" width="0.0808%" height="15" fill="rgb(213,193,7)" fg:x="974" fg:w="1"/><text x="78.9889%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.7389%" y="309" width="0.0808%" height="15" fill="rgb(237,92,51)" fg:x="974" fg:w="1"/><text x="78.9889%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.7389%" y="293" width="0.0808%" height="15" fill="rgb(225,194,6)" fg:x="974" fg:w="1"/><text x="78.9889%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.7389%" y="277" width="0.0808%" height="15" fill="rgb(205,159,49)" fg:x="974" fg:w="1"/><text x="78.9889%" y="287.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="78.8197%" y="357" width="0.0808%" height="15" fill="rgb(219,69,2)" fg:x="975" fg:w="1"/><text x="79.0697%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.9006%" y="357" width="0.0808%" height="15" fill="rgb(215,107,24)" fg:x="976" fg:w="1"/><text x="79.1506%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.9006%" y="341" width="0.0808%" height="15" fill="rgb(249,208,29)" fg:x="976" fg:w="1"/><text x="79.1506%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.9006%" y="325" width="0.0808%" height="15" fill="rgb(213,147,10)" fg:x="976" fg:w="1"/><text x="79.1506%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.9006%" y="309" width="0.0808%" height="15" fill="rgb(254,140,42)" fg:x="976" fg:w="1"/><text x="79.1506%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.9006%" y="293" width="0.0808%" height="15" fill="rgb(249,9,15)" fg:x="976" fg:w="1"/><text x="79.1506%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.8197%" y="373" width="0.2425%" height="15" fill="rgb(210,19,33)" fg:x="975" fg:w="3"/><text x="79.0697%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.9814%" y="357" width="0.0808%" height="15" fill="rgb(241,121,22)" fg:x="977" fg:w="1"/><text x="79.2314%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.13%)</title><rect x="78.0113%" y="421" width="1.1318%" height="15" fill="rgb(244,69,52)" fg:x="965" fg:w="14"/><text x="78.2613%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="78.3347%" y="405" width="0.8084%" height="15" fill="rgb(244,191,54)" fg:x="969" fg:w="10"/><text x="78.5847%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="78.4964%" y="389" width="0.6467%" height="15" fill="rgb(250,3,53)" fg:x="971" fg:w="8"/><text x="78.7464%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.0622%" y="373" width="0.0808%" height="15" fill="rgb(205,77,3)" fg:x="978" fg:w="1"/><text x="79.3122%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.2239%" y="389" width="0.0808%" height="15" fill="rgb(207,155,3)" fg:x="980" fg:w="1"/><text x="79.4739%" y="399.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPath as core::convert::From&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::from (1 samples, 0.08%)</title><rect x="79.2239%" y="373" width="0.0808%" height="15" fill="rgb(224,79,2)" fg:x="980" fg:w="1"/><text x="79.4739%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="79.1431%" y="405" width="0.2425%" height="15" fill="rgb(243,172,5)" fg:x="979" fg:w="3"/><text x="79.3931%" y="415.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="79.3048%" y="389" width="0.0808%" height="15" fill="rgb(217,23,43)" fg:x="981" fg:w="1"/><text x="79.5548%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.3048%" y="373" width="0.0808%" height="15" fill="rgb(223,109,20)" fg:x="981" fg:w="1"/><text x="79.5548%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.3048%" y="357" width="0.0808%" height="15" fill="rgb(232,159,21)" fg:x="981" fg:w="1"/><text x="79.5548%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5473%" y="373" width="0.0808%" height="15" fill="rgb(219,58,2)" fg:x="984" fg:w="1"/><text x="79.7973%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.5473%" y="357" width="0.0808%" height="15" fill="rgb(241,56,8)" fg:x="984" fg:w="1"/><text x="79.7973%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.7090%" y="325" width="0.1617%" height="15" fill="rgb(249,10,27)" fg:x="986" fg:w="2"/><text x="79.9590%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.7898%" y="309" width="0.0808%" height="15" fill="rgb(248,177,5)" fg:x="987" fg:w="1"/><text x="80.0398%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.9515%" y="293" width="0.0808%" height="15" fill="rgb(239,12,30)" fg:x="989" fg:w="1"/><text x="80.2015%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9515%" y="277" width="0.0808%" height="15" fill="rgb(229,164,25)" fg:x="989" fg:w="1"/><text x="80.2015%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.9515%" y="261" width="0.0808%" height="15" fill="rgb(231,217,50)" fg:x="989" fg:w="1"/><text x="80.2015%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9515%" y="245" width="0.0808%" height="15" fill="rgb(247,99,32)" fg:x="989" fg:w="1"/><text x="80.2015%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="79.8707%" y="325" width="0.2425%" height="15" fill="rgb(240,74,50)" fg:x="988" fg:w="3"/><text x="80.1207%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="79.8707%" y="309" width="0.2425%" height="15" fill="rgb(218,54,8)" fg:x="988" fg:w="3"/><text x="80.1207%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.0323%" y="293" width="0.0808%" height="15" fill="rgb(227,132,20)" fg:x="990" fg:w="1"/><text x="80.2823%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.1132%" y="277" width="0.0808%" height="15" fill="rgb(232,134,12)" fg:x="991" fg:w="1"/><text x="80.3632%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.1132%" y="293" width="0.1617%" height="15" fill="rgb(250,129,18)" fg:x="991" fg:w="2"/><text x="80.3632%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.1940%" y="277" width="0.0808%" height="15" fill="rgb(232,129,47)" fg:x="992" fg:w="1"/><text x="80.4440%" y="287.50"></text></g><g><title>engine::session::Session::flush (39 samples, 3.15%)</title><rect x="77.2029%" y="533" width="3.1528%" height="15" fill="rgb(230,31,40)" fg:x="955" fg:w="39"/><text x="77.4529%" y="543.50">eng..</text></g><g><title>engine::session::Session::save_changes (39 samples, 3.15%)</title><rect x="77.2029%" y="517" width="3.1528%" height="15" fill="rgb(232,126,10)" fg:x="955" fg:w="39"/><text x="77.4529%" y="527.50">eng..</text></g><g><title>engine::session::state::State::close (38 samples, 3.07%)</title><rect x="77.2838%" y="501" width="3.0719%" height="15" fill="rgb(205,46,31)" fg:x="956" fg:w="38"/><text x="77.5338%" y="511.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (38 samples, 3.07%)</title><rect x="77.2838%" y="485" width="3.0719%" height="15" fill="rgb(232,37,37)" fg:x="956" fg:w="38"/><text x="77.5338%" y="495.50">eng..</text></g><g><title>core::iter::adapters::try_process (37 samples, 2.99%)</title><rect x="77.3646%" y="469" width="2.9911%" height="15" fill="rgb(240,91,16)" fg:x="957" fg:w="37"/><text x="77.6146%" y="479.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (37 samples, 2.99%)</title><rect x="77.3646%" y="453" width="2.9911%" height="15" fill="rgb(224,160,9)" fg:x="957" fg:w="37"/><text x="77.6146%" y="463.50">&lt;al..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (37 samples, 2.99%)</title><rect x="77.3646%" y="437" width="2.9911%" height="15" fill="rgb(215,116,14)" fg:x="957" fg:w="37"/><text x="77.6146%" y="447.50">eng..</text></g><g><title>kernel::model::any_entity_changes (15 samples, 1.21%)</title><rect x="79.1431%" y="421" width="1.2126%" height="15" fill="rgb(235,46,36)" fg:x="979" fg:w="15"/><text x="79.3931%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.97%)</title><rect x="79.3856%" y="405" width="0.9701%" height="15" fill="rgb(238,39,28)" fg:x="982" fg:w="12"/><text x="79.6356%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="79.3856%" y="389" width="0.9701%" height="15" fill="rgb(242,125,29)" fg:x="982" fg:w="12"/><text x="79.6356%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.73%)</title><rect x="79.6281%" y="373" width="0.7276%" height="15" fill="rgb(238,211,30)" fg:x="985" fg:w="9"/><text x="79.8781%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.65%)</title><rect x="79.7090%" y="357" width="0.6467%" height="15" fill="rgb(227,201,28)" fg:x="986" fg:w="8"/><text x="79.9590%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="79.7090%" y="341" width="0.6467%" height="15" fill="rgb(238,77,29)" fg:x="986" fg:w="8"/><text x="79.9590%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="80.1132%" y="325" width="0.2425%" height="15" fill="rgb(213,221,40)" fg:x="991" fg:w="3"/><text x="80.3632%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="80.1132%" y="309" width="0.2425%" height="15" fill="rgb(226,220,44)" fg:x="991" fg:w="3"/><text x="80.3632%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2749%" y="293" width="0.0808%" height="15" fill="rgb(228,90,23)" fg:x="993" fg:w="1"/><text x="80.5249%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.2749%" y="277" width="0.0808%" height="15" fill="rgb(235,72,29)" fg:x="993" fg:w="1"/><text x="80.5249%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2749%" y="261" width="0.0808%" height="15" fill="rgb(248,117,39)" fg:x="993" fg:w="1"/><text x="80.5249%" y="271.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="80.3557%" y="533" width="0.0808%" height="15" fill="rgb(225,43,28)" fg:x="994" fg:w="1"/><text x="80.6057%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="80.3557%" y="517" width="0.0808%" height="15" fill="rgb(240,93,4)" fg:x="994" fg:w="1"/><text x="80.6057%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="80.3557%" y="501" width="0.0808%" height="15" fill="rgb(234,178,27)" fg:x="994" fg:w="1"/><text x="80.6057%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.3557%" y="485" width="0.0808%" height="15" fill="rgb(254,88,22)" fg:x="994" fg:w="1"/><text x="80.6057%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.3557%" y="469" width="0.0808%" height="15" fill="rgb(240,206,50)" fg:x="994" fg:w="1"/><text x="80.6057%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.3557%" y="453" width="0.0808%" height="15" fill="rgb(249,103,8)" fg:x="994" fg:w="1"/><text x="80.6057%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5174%" y="485" width="0.0808%" height="15" fill="rgb(241,178,36)" fg:x="996" fg:w="1"/><text x="80.7674%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5174%" y="469" width="0.0808%" height="15" fill="rgb(246,110,15)" fg:x="996" fg:w="1"/><text x="80.7674%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="80.4365%" y="501" width="0.4042%" height="15" fill="rgb(207,14,43)" fg:x="995" fg:w="5"/><text x="80.6865%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="80.5982%" y="485" width="0.2425%" height="15" fill="rgb(253,219,19)" fg:x="997" fg:w="3"/><text x="80.8482%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="80.5982%" y="469" width="0.2425%" height="15" fill="rgb(216,126,5)" fg:x="997" fg:w="3"/><text x="80.8482%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="80.5982%" y="453" width="0.2425%" height="15" fill="rgb(218,78,42)" fg:x="997" fg:w="3"/><text x="80.8482%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.6791%" y="437" width="0.1617%" height="15" fill="rgb(215,154,40)" fg:x="998" fg:w="2"/><text x="80.9291%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="80.7599%" y="421" width="0.0808%" height="15" fill="rgb(235,129,32)" fg:x="999" fg:w="1"/><text x="81.0099%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.7599%" y="405" width="0.0808%" height="15" fill="rgb(218,51,8)" fg:x="999" fg:w="1"/><text x="81.0099%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.7599%" y="389" width="0.0808%" height="15" fill="rgb(245,48,4)" fg:x="999" fg:w="1"/><text x="81.0099%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.8407%" y="469" width="0.0808%" height="15" fill="rgb(250,175,12)" fg:x="1000" fg:w="1"/><text x="81.0907%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.8407%" y="453" width="0.0808%" height="15" fill="rgb(237,95,40)" fg:x="1000" fg:w="1"/><text x="81.0907%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.8407%" y="437" width="0.0808%" height="15" fill="rgb(244,120,0)" fg:x="1000" fg:w="1"/><text x="81.0907%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="80.8407%" y="485" width="0.1617%" height="15" fill="rgb(241,19,42)" fg:x="1000" fg:w="2"/><text x="81.0907%" y="495.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.9216%" y="469" width="0.0808%" height="15" fill="rgb(217,174,48)" fg:x="1001" fg:w="1"/><text x="81.1716%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.9216%" y="453" width="0.0808%" height="15" fill="rgb(239,36,38)" fg:x="1001" fg:w="1"/><text x="81.1716%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.9216%" y="437" width="0.0808%" height="15" fill="rgb(220,63,49)" fg:x="1001" fg:w="1"/><text x="81.1716%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9216%" y="421" width="0.0808%" height="15" fill="rgb(240,101,13)" fg:x="1001" fg:w="1"/><text x="81.1716%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="80.8407%" y="501" width="0.2425%" height="15" fill="rgb(209,184,51)" fg:x="1000" fg:w="3"/><text x="81.0907%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="81.0024%" y="485" width="0.0808%" height="15" fill="rgb(206,136,39)" fg:x="1002" fg:w="1"/><text x="81.2524%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="81.0024%" y="469" width="0.0808%" height="15" fill="rgb(254,47,45)" fg:x="1002" fg:w="1"/><text x="81.2524%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0024%" y="453" width="0.0808%" height="15" fill="rgb(252,103,20)" fg:x="1002" fg:w="1"/><text x="81.2524%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0024%" y="437" width="0.0808%" height="15" fill="rgb(230,69,12)" fg:x="1002" fg:w="1"/><text x="81.2524%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0024%" y="421" width="0.0808%" height="15" fill="rgb(219,2,28)" fg:x="1002" fg:w="1"/><text x="81.2524%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.0024%" y="405" width="0.0808%" height="15" fill="rgb(210,9,12)" fg:x="1002" fg:w="1"/><text x="81.2524%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="81.0833%" y="453" width="0.0808%" height="15" fill="rgb(235,99,33)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.0833%" y="437" width="0.0808%" height="15" fill="rgb(230,11,38)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.0833%" y="421" width="0.0808%" height="15" fill="rgb(217,129,0)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.0833%" y="405" width="0.0808%" height="15" fill="rgb(222,198,4)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0833%" y="389" width="0.0808%" height="15" fill="rgb(246,170,27)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0833%" y="373" width="0.0808%" height="15" fill="rgb(229,17,28)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.0833%" y="357" width="0.0808%" height="15" fill="rgb(233,198,48)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.0833%" y="341" width="0.0808%" height="15" fill="rgb(238,103,23)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.0833%" y="325" width="0.0808%" height="15" fill="rgb(206,91,41)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.0833%" y="309" width="0.0808%" height="15" fill="rgb(227,34,25)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.0833%" y="293" width="0.0808%" height="15" fill="rgb(210,110,44)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.0833%" y="277" width="0.0808%" height="15" fill="rgb(216,189,8)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.0833%" y="261" width="0.0808%" height="15" fill="rgb(234,9,46)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.0833%" y="245" width="0.0808%" height="15" fill="rgb(251,200,5)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.0833%" y="229" width="0.0808%" height="15" fill="rgb(238,165,37)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0833%" y="213" width="0.0808%" height="15" fill="rgb(232,77,38)" fg:x="1003" fg:w="1"/><text x="81.3333%" y="223.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="81.0833%" y="485" width="0.1617%" height="15" fill="rgb(253,179,33)" fg:x="1003" fg:w="2"/><text x="81.3333%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="81.0833%" y="469" width="0.1617%" height="15" fill="rgb(240,13,35)" fg:x="1003" fg:w="2"/><text x="81.3333%" y="479.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.1641%" y="453" width="0.0808%" height="15" fill="rgb(242,150,49)" fg:x="1004" fg:w="1"/><text x="81.4141%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1641%" y="437" width="0.0808%" height="15" fill="rgb(237,176,28)" fg:x="1004" fg:w="1"/><text x="81.4141%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.2449%" y="453" width="0.0808%" height="15" fill="rgb(214,176,33)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="81.2449%" y="437" width="0.0808%" height="15" fill="rgb(214,25,12)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.2449%" y="421" width="0.0808%" height="15" fill="rgb(238,190,20)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.2449%" y="405" width="0.0808%" height="15" fill="rgb(208,11,19)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.2449%" y="389" width="0.0808%" height="15" fill="rgb(239,90,4)" fg:x="1005" fg:w="1"/><text x="81.4949%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.3258%" y="421" width="0.0808%" height="15" fill="rgb(248,110,3)" fg:x="1006" fg:w="1"/><text x="81.5758%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="80.4365%" y="517" width="1.0509%" height="15" fill="rgb(210,41,30)" fg:x="995" fg:w="13"/><text x="80.6865%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="81.0833%" y="501" width="0.4042%" height="15" fill="rgb(239,36,8)" fg:x="1003" fg:w="5"/><text x="81.3333%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="81.2449%" y="485" width="0.2425%" height="15" fill="rgb(237,201,47)" fg:x="1005" fg:w="3"/><text x="81.4949%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="81.2449%" y="469" width="0.2425%" height="15" fill="rgb(224,140,29)" fg:x="1005" fg:w="3"/><text x="81.4949%" y="479.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="81.3258%" y="453" width="0.1617%" height="15" fill="rgb(231,209,17)" fg:x="1006" fg:w="2"/><text x="81.5758%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="81.3258%" y="437" width="0.1617%" height="15" fill="rgb(249,196,1)" fg:x="1006" fg:w="2"/><text x="81.5758%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4066%" y="421" width="0.0808%" height="15" fill="rgb(223,207,51)" fg:x="1007" fg:w="1"/><text x="81.6566%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4066%" y="405" width="0.0808%" height="15" fill="rgb(210,14,40)" fg:x="1007" fg:w="1"/><text x="81.6566%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4066%" y="389" width="0.0808%" height="15" fill="rgb(250,20,52)" fg:x="1007" fg:w="1"/><text x="81.6566%" y="399.50"></text></g><g><title>plugins_core::build::Build::save (14 samples, 1.13%)</title><rect x="80.4365%" y="533" width="1.1318%" height="15" fill="rgb(241,46,11)" fg:x="995" fg:w="14"/><text x="80.6865%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="81.4875%" y="517" width="0.0808%" height="15" fill="rgb(219,105,5)" fg:x="1008" fg:w="1"/><text x="81.7375%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.4875%" y="501" width="0.0808%" height="15" fill="rgb(252,77,35)" fg:x="1008" fg:w="1"/><text x="81.7375%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4875%" y="485" width="0.0808%" height="15" fill="rgb(243,119,2)" fg:x="1008" fg:w="1"/><text x="81.7375%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="81.5683%" y="501" width="0.0808%" height="15" fill="rgb(206,82,28)" fg:x="1009" fg:w="1"/><text x="81.8183%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="81.5683%" y="485" width="0.0808%" height="15" fill="rgb(227,120,12)" fg:x="1009" fg:w="1"/><text x="81.8183%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.5683%" y="469" width="0.0808%" height="15" fill="rgb(229,134,41)" fg:x="1009" fg:w="1"/><text x="81.8183%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="81.5683%" y="453" width="0.0808%" height="15" fill="rgb(239,96,32)" fg:x="1009" fg:w="1"/><text x="81.8183%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.5683%" y="437" width="0.0808%" height="15" fill="rgb(225,46,27)" fg:x="1009" fg:w="1"/><text x="81.8183%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5683%" y="421" width="0.0808%" height="15" fill="rgb(215,168,2)" fg:x="1009" fg:w="1"/><text x="81.8183%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.5683%" y="405" width="0.0808%" height="15" fill="rgb(207,170,52)" fg:x="1009" fg:w="1"/><text x="81.8183%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5683%" y="389" width="0.0808%" height="15" fill="rgb(237,198,36)" fg:x="1009" fg:w="1"/><text x="81.8183%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.5683%" y="373" width="0.0808%" height="15" fill="rgb(213,27,14)" fg:x="1009" fg:w="1"/><text x="81.8183%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5683%" y="357" width="0.0808%" height="15" fill="rgb(218,77,5)" fg:x="1009" fg:w="1"/><text x="81.8183%" y="367.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6492%" y="485" width="0.0808%" height="15" fill="rgb(230,219,39)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.6492%" y="469" width="0.0808%" height="15" fill="rgb(245,177,7)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.6492%" y="453" width="0.0808%" height="15" fill="rgb(246,44,46)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6492%" y="437" width="0.0808%" height="15" fill="rgb(207,173,15)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.6492%" y="421" width="0.0808%" height="15" fill="rgb(245,170,50)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6492%" y="405" width="0.0808%" height="15" fill="rgb(233,156,21)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6492%" y="389" width="0.0808%" height="15" fill="rgb(253,146,27)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6492%" y="373" width="0.0808%" height="15" fill="rgb(247,66,29)" fg:x="1010" fg:w="1"/><text x="81.8992%" y="383.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (4 samples, 0.32%)</title><rect x="81.5683%" y="533" width="0.3234%" height="15" fill="rgb(218,207,26)" fg:x="1009" fg:w="4"/><text x="81.8183%" y="543.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.32%)</title><rect x="81.5683%" y="517" width="0.3234%" height="15" fill="rgb(234,93,26)" fg:x="1009" fg:w="4"/><text x="81.8183%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="81.6492%" y="501" width="0.2425%" height="15" fill="rgb(214,75,48)" fg:x="1010" fg:w="3"/><text x="81.8992%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="81.7300%" y="485" width="0.1617%" height="15" fill="rgb(229,119,22)" fg:x="1011" fg:w="2"/><text x="81.9800%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="81.7300%" y="469" width="0.1617%" height="15" fill="rgb(226,153,19)" fg:x="1011" fg:w="2"/><text x="81.9800%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="81.7300%" y="453" width="0.1617%" height="15" fill="rgb(220,204,36)" fg:x="1011" fg:w="2"/><text x="81.9800%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="81.7300%" y="437" width="0.1617%" height="15" fill="rgb(253,181,43)" fg:x="1011" fg:w="2"/><text x="81.9800%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8108%" y="421" width="0.0808%" height="15" fill="rgb(211,41,51)" fg:x="1012" fg:w="1"/><text x="82.0608%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9725%" y="469" width="0.0808%" height="15" fill="rgb(207,215,0)" fg:x="1014" fg:w="1"/><text x="82.2225%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="81.8917%" y="517" width="0.3234%" height="15" fill="rgb(212,153,10)" fg:x="1013" fg:w="4"/><text x="82.1417%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="81.9725%" y="501" width="0.2425%" height="15" fill="rgb(251,171,36)" fg:x="1014" fg:w="3"/><text x="82.2225%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="81.9725%" y="485" width="0.2425%" height="15" fill="rgb(225,219,41)" fg:x="1014" fg:w="3"/><text x="82.2225%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.0534%" y="469" width="0.1617%" height="15" fill="rgb(208,200,1)" fg:x="1015" fg:w="2"/><text x="82.3034%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.0534%" y="453" width="0.1617%" height="15" fill="rgb(206,75,47)" fg:x="1015" fg:w="2"/><text x="82.3034%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="82.0534%" y="437" width="0.1617%" height="15" fill="rgb(248,3,16)" fg:x="1015" fg:w="2"/><text x="82.3034%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="82.1342%" y="421" width="0.0808%" height="15" fill="rgb(242,157,36)" fg:x="1016" fg:w="1"/><text x="82.3842%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="82.1342%" y="405" width="0.0808%" height="15" fill="rgb(215,175,11)" fg:x="1016" fg:w="1"/><text x="82.3842%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2150%" y="485" width="0.0808%" height="15" fill="rgb(252,222,22)" fg:x="1017" fg:w="1"/><text x="82.4650%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.2150%" y="469" width="0.0808%" height="15" fill="rgb(250,121,35)" fg:x="1017" fg:w="1"/><text x="82.4650%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2150%" y="453" width="0.0808%" height="15" fill="rgb(233,120,49)" fg:x="1017" fg:w="1"/><text x="82.4650%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2959%" y="453" width="0.0808%" height="15" fill="rgb(205,201,14)" fg:x="1018" fg:w="1"/><text x="82.5459%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2959%" y="437" width="0.0808%" height="15" fill="rgb(219,58,45)" fg:x="1018" fg:w="1"/><text x="82.5459%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2959%" y="421" width="0.0808%" height="15" fill="rgb(251,65,12)" fg:x="1018" fg:w="1"/><text x="82.5459%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (7 samples, 0.57%)</title><rect x="81.8917%" y="533" width="0.5659%" height="15" fill="rgb(224,47,31)" fg:x="1013" fg:w="7"/><text x="82.1417%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="82.2150%" y="517" width="0.2425%" height="15" fill="rgb(233,74,26)" fg:x="1017" fg:w="3"/><text x="82.4650%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="82.2150%" y="501" width="0.2425%" height="15" fill="rgb(231,211,31)" fg:x="1017" fg:w="3"/><text x="82.4650%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="82.2959%" y="485" width="0.1617%" height="15" fill="rgb(239,167,5)" fg:x="1018" fg:w="2"/><text x="82.5459%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2959%" y="469" width="0.1617%" height="15" fill="rgb(241,85,0)" fg:x="1018" fg:w="2"/><text x="82.5459%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3767%" y="453" width="0.0808%" height="15" fill="rgb(229,130,21)" fg:x="1019" fg:w="1"/><text x="82.6267%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.3767%" y="437" width="0.0808%" height="15" fill="rgb(254,84,49)" fg:x="1019" fg:w="1"/><text x="82.6267%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3767%" y="421" width="0.0808%" height="15" fill="rgb(235,85,21)" fg:x="1019" fg:w="1"/><text x="82.6267%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="82.4576%" y="517" width="0.0808%" height="15" fill="rgb(246,128,52)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="82.4576%" y="501" width="0.0808%" height="15" fill="rgb(243,114,49)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.4576%" y="485" width="0.0808%" height="15" fill="rgb(240,224,22)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="82.4576%" y="469" width="0.0808%" height="15" fill="rgb(247,201,52)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4576%" y="453" width="0.0808%" height="15" fill="rgb(231,70,45)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4576%" y="437" width="0.0808%" height="15" fill="rgb(217,215,20)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.4576%" y="421" width="0.0808%" height="15" fill="rgb(226,170,30)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4576%" y="405" width="0.0808%" height="15" fill="rgb(220,190,43)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4576%" y="389" width="0.0808%" height="15" fill="rgb(218,20,18)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4576%" y="373" width="0.0808%" height="15" fill="rgb(245,37,26)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.4576%" y="357" width="0.0808%" height="15" fill="rgb(241,127,29)" fg:x="1020" fg:w="1"/><text x="82.7076%" y="367.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="82.5384%" y="517" width="0.0808%" height="15" fill="rgb(241,33,26)" fg:x="1021" fg:w="1"/><text x="82.7884%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="82.5384%" y="501" width="0.0808%" height="15" fill="rgb(220,106,21)" fg:x="1021" fg:w="1"/><text x="82.7884%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5384%" y="485" width="0.0808%" height="15" fill="rgb(225,125,35)" fg:x="1021" fg:w="1"/><text x="82.7884%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6192%" y="485" width="0.0808%" height="15" fill="rgb(248,80,22)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6192%" y="469" width="0.0808%" height="15" fill="rgb(231,117,39)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6192%" y="453" width="0.0808%" height="15" fill="rgb(239,183,16)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6192%" y="437" width="0.0808%" height="15" fill="rgb(221,61,19)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6192%" y="421" width="0.0808%" height="15" fill="rgb(239,196,44)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.6192%" y="405" width="0.0808%" height="15" fill="rgb(206,113,19)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.6192%" y="389" width="0.0808%" height="15" fill="rgb(245,114,12)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.6192%" y="373" width="0.0808%" height="15" fill="rgb(247,89,39)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.6192%" y="357" width="0.0808%" height="15" fill="rgb(213,85,14)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.6192%" y="341" width="0.0808%" height="15" fill="rgb(249,206,33)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.6192%" y="325" width="0.0808%" height="15" fill="rgb(235,167,47)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.6192%" y="309" width="0.0808%" height="15" fill="rgb(217,177,16)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.6192%" y="293" width="0.0808%" height="15" fill="rgb(250,228,29)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.6192%" y="277" width="0.0808%" height="15" fill="rgb(216,195,42)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6192%" y="261" width="0.0808%" height="15" fill="rgb(232,192,32)" fg:x="1022" fg:w="1"/><text x="82.8692%" y="271.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="82.6192%" y="501" width="0.1617%" height="15" fill="rgb(211,8,47)" fg:x="1022" fg:w="2"/><text x="82.8692%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7001%" y="485" width="0.0808%" height="15" fill="rgb(251,201,9)" fg:x="1023" fg:w="1"/><text x="82.9501%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7001%" y="469" width="0.0808%" height="15" fill="rgb(206,185,47)" fg:x="1023" fg:w="1"/><text x="82.9501%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7001%" y="453" width="0.0808%" height="15" fill="rgb(245,54,32)" fg:x="1023" fg:w="1"/><text x="82.9501%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7001%" y="437" width="0.0808%" height="15" fill="rgb(208,1,8)" fg:x="1023" fg:w="1"/><text x="82.9501%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.7001%" y="421" width="0.0808%" height="15" fill="rgb(228,57,24)" fg:x="1023" fg:w="1"/><text x="82.9501%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.7809%" y="469" width="0.0808%" height="15" fill="rgb(251,24,8)" fg:x="1024" fg:w="1"/><text x="83.0309%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="82.7809%" y="453" width="0.0808%" height="15" fill="rgb(236,196,50)" fg:x="1024" fg:w="1"/><text x="83.0309%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7809%" y="437" width="0.0808%" height="15" fill="rgb(246,222,29)" fg:x="1024" fg:w="1"/><text x="83.0309%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7809%" y="421" width="0.0808%" height="15" fill="rgb(211,34,40)" fg:x="1024" fg:w="1"/><text x="83.0309%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.7809%" y="405" width="0.0808%" height="15" fill="rgb(210,66,51)" fg:x="1024" fg:w="1"/><text x="83.0309%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7809%" y="389" width="0.0808%" height="15" fill="rgb(250,56,43)" fg:x="1024" fg:w="1"/><text x="83.0309%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7809%" y="373" width="0.0808%" height="15" fill="rgb(240,111,50)" fg:x="1024" fg:w="1"/><text x="83.0309%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7809%" y="357" width="0.0808%" height="15" fill="rgb(209,117,13)" fg:x="1024" fg:w="1"/><text x="83.0309%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8618%" y="437" width="0.0808%" height="15" fill="rgb(232,164,45)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8618%" y="421" width="0.0808%" height="15" fill="rgb(205,69,32)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8618%" y="405" width="0.0808%" height="15" fill="rgb(240,147,45)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.8618%" y="389" width="0.0808%" height="15" fill="rgb(221,94,48)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.8618%" y="373" width="0.0808%" height="15" fill="rgb(249,209,17)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.8618%" y="357" width="0.0808%" height="15" fill="rgb(228,57,28)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.8618%" y="341" width="0.0808%" height="15" fill="rgb(250,133,26)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.8618%" y="325" width="0.0808%" height="15" fill="rgb(254,15,16)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.8618%" y="309" width="0.0808%" height="15" fill="rgb(209,147,42)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.8618%" y="293" width="0.0808%" height="15" fill="rgb(208,5,29)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.8618%" y="277" width="0.0808%" height="15" fill="rgb(250,73,31)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.8618%" y="261" width="0.0808%" height="15" fill="rgb(238,45,10)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8618%" y="245" width="0.0808%" height="15" fill="rgb(214,104,5)" fg:x="1025" fg:w="1"/><text x="83.1118%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="82.8618%" y="453" width="0.1617%" height="15" fill="rgb(242,217,19)" fg:x="1025" fg:w="2"/><text x="83.1118%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.9426%" y="437" width="0.0808%" height="15" fill="rgb(246,113,27)" fg:x="1026" fg:w="1"/><text x="83.1926%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9426%" y="421" width="0.0808%" height="15" fill="rgb(221,34,27)" fg:x="1026" fg:w="1"/><text x="83.1926%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.9426%" y="405" width="0.0808%" height="15" fill="rgb(246,109,6)" fg:x="1026" fg:w="1"/><text x="83.1926%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9426%" y="389" width="0.0808%" height="15" fill="rgb(217,12,25)" fg:x="1026" fg:w="1"/><text x="83.1926%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.9426%" y="373" width="0.0808%" height="15" fill="rgb(250,195,5)" fg:x="1026" fg:w="1"/><text x="83.1926%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9426%" y="357" width="0.0808%" height="15" fill="rgb(244,140,45)" fg:x="1026" fg:w="1"/><text x="83.1926%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.49%)</title><rect x="82.6192%" y="517" width="0.4850%" height="15" fill="rgb(230,64,14)" fg:x="1022" fg:w="6"/><text x="82.8692%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="82.7809%" y="501" width="0.3234%" height="15" fill="rgb(206,27,27)" fg:x="1024" fg:w="4"/><text x="83.0309%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="82.7809%" y="485" width="0.3234%" height="15" fill="rgb(230,14,50)" fg:x="1024" fg:w="4"/><text x="83.0309%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="82.8618%" y="469" width="0.2425%" height="15" fill="rgb(237,172,14)" fg:x="1025" fg:w="3"/><text x="83.1118%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="83.0234%" y="453" width="0.0808%" height="15" fill="rgb(209,25,21)" fg:x="1027" fg:w="1"/><text x="83.2734%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0234%" y="437" width="0.0808%" height="15" fill="rgb(248,148,22)" fg:x="1027" fg:w="1"/><text x="83.2734%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (80 samples, 6.47%)</title><rect x="76.7179%" y="549" width="6.4673%" height="15" fill="rgb(234,100,22)" fg:x="949" fg:w="80"/><text x="76.9679%" y="559.50">plugins_..</text></g><g><title>plugins_core::tools::set_container (9 samples, 0.73%)</title><rect x="82.4576%" y="533" width="0.7276%" height="15" fill="rgb(210,20,30)" fg:x="1020" fg:w="9"/><text x="82.7076%" y="543.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="83.1043%" y="517" width="0.0808%" height="15" fill="rgb(232,58,0)" fg:x="1028" fg:w="1"/><text x="83.3543%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="83.1043%" y="501" width="0.0808%" height="15" fill="rgb(221,68,13)" fg:x="1028" fg:w="1"/><text x="83.3543%" y="511.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1043%" y="485" width="0.0808%" height="15" fill="rgb(231,194,11)" fg:x="1028" fg:w="1"/><text x="83.3543%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1043%" y="469" width="0.0808%" height="15" fill="rgb(235,51,41)" fg:x="1028" fg:w="1"/><text x="83.3543%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="83.1851%" y="517" width="0.0808%" height="15" fill="rgb(240,50,32)" fg:x="1029" fg:w="1"/><text x="83.4351%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1851%" y="501" width="0.0808%" height="15" fill="rgb(240,185,36)" fg:x="1029" fg:w="1"/><text x="83.4351%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1851%" y="485" width="0.0808%" height="15" fill="rgb(211,168,15)" fg:x="1029" fg:w="1"/><text x="83.4351%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.1851%" y="469" width="0.0808%" height="15" fill="rgb(221,70,0)" fg:x="1029" fg:w="1"/><text x="83.4351%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.2660%" y="485" width="0.0808%" height="15" fill="rgb(205,21,33)" fg:x="1030" fg:w="1"/><text x="83.5160%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="83.2660%" y="469" width="0.0808%" height="15" fill="rgb(225,106,10)" fg:x="1030" fg:w="1"/><text x="83.5160%" y="479.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="83.2660%" y="453" width="0.0808%" height="15" fill="rgb(236,200,50)" fg:x="1030" fg:w="1"/><text x="83.5160%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2660%" y="437" width="0.0808%" height="15" fill="rgb(249,93,23)" fg:x="1030" fg:w="1"/><text x="83.5160%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="83.3468%" y="437" width="0.0808%" height="15" fill="rgb(244,115,35)" fg:x="1031" fg:w="1"/><text x="83.5968%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.3468%" y="421" width="0.0808%" height="15" fill="rgb(231,129,47)" fg:x="1031" fg:w="1"/><text x="83.5968%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.3468%" y="405" width="0.0808%" height="15" fill="rgb(225,160,50)" fg:x="1031" fg:w="1"/><text x="83.5968%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.3468%" y="389" width="0.0808%" height="15" fill="rgb(218,135,23)" fg:x="1031" fg:w="1"/><text x="83.5968%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.3468%" y="373" width="0.0808%" height="15" fill="rgb(227,119,14)" fg:x="1031" fg:w="1"/><text x="83.5968%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.3468%" y="357" width="0.0808%" height="15" fill="rgb(242,138,13)" fg:x="1031" fg:w="1"/><text x="83.5968%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="83.3468%" y="469" width="0.1617%" height="15" fill="rgb(215,11,16)" fg:x="1031" fg:w="2"/><text x="83.5968%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="83.3468%" y="453" width="0.1617%" height="15" fill="rgb(234,170,50)" fg:x="1031" fg:w="2"/><text x="83.5968%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4276%" y="437" width="0.0808%" height="15" fill="rgb(233,34,20)" fg:x="1032" fg:w="1"/><text x="83.6776%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.4276%" y="421" width="0.0808%" height="15" fill="rgb(237,100,45)" fg:x="1032" fg:w="1"/><text x="83.6776%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.4276%" y="405" width="0.0808%" height="15" fill="rgb(231,184,36)" fg:x="1032" fg:w="1"/><text x="83.6776%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4276%" y="389" width="0.0808%" height="15" fill="rgb(252,93,2)" fg:x="1032" fg:w="1"/><text x="83.6776%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4276%" y="373" width="0.0808%" height="15" fill="rgb(248,176,47)" fg:x="1032" fg:w="1"/><text x="83.6776%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="83.5085%" y="469" width="0.0808%" height="15" fill="rgb(249,125,23)" fg:x="1033" fg:w="1"/><text x="83.7585%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="83.2660%" y="501" width="0.4042%" height="15" fill="rgb(239,67,42)" fg:x="1030" fg:w="5"/><text x="83.5160%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="83.3468%" y="485" width="0.3234%" height="15" fill="rgb(244,162,4)" fg:x="1031" fg:w="4"/><text x="83.5968%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="83.5893%" y="469" width="0.0808%" height="15" fill="rgb(214,150,38)" fg:x="1034" fg:w="1"/><text x="83.8393%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.5893%" y="453" width="0.0808%" height="15" fill="rgb(228,211,28)" fg:x="1034" fg:w="1"/><text x="83.8393%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.5893%" y="437" width="0.0808%" height="15" fill="rgb(212,98,48)" fg:x="1034" fg:w="1"/><text x="83.8393%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="83.5893%" y="421" width="0.0808%" height="15" fill="rgb(213,45,13)" fg:x="1034" fg:w="1"/><text x="83.8393%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.5893%" y="405" width="0.0808%" height="15" fill="rgb(218,35,29)" fg:x="1034" fg:w="1"/><text x="83.8393%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.5893%" y="389" width="0.0808%" height="15" fill="rgb(244,13,3)" fg:x="1034" fg:w="1"/><text x="83.8393%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.5893%" y="373" width="0.0808%" height="15" fill="rgb(235,170,19)" fg:x="1034" fg:w="1"/><text x="83.8393%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.5893%" y="357" width="0.0808%" height="15" fill="rgb(233,193,43)" fg:x="1034" fg:w="1"/><text x="83.8393%" y="367.50"></text></g><g><title>plugins_core::build::Build::save (6 samples, 0.49%)</title><rect x="83.2660%" y="517" width="0.4850%" height="15" fill="rgb(228,223,20)" fg:x="1030" fg:w="6"/><text x="83.5160%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="83.6702%" y="501" width="0.0808%" height="15" fill="rgb(208,85,54)" fg:x="1035" fg:w="1"/><text x="83.9202%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.6702%" y="485" width="0.0808%" height="15" fill="rgb(254,14,45)" fg:x="1035" fg:w="1"/><text x="83.9202%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.6702%" y="469" width="0.0808%" height="15" fill="rgb(247,99,29)" fg:x="1035" fg:w="1"/><text x="83.9202%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.6702%" y="453" width="0.0808%" height="15" fill="rgb(225,180,54)" fg:x="1035" fg:w="1"/><text x="83.9202%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.65%)</title><rect x="83.1851%" y="549" width="0.6467%" height="15" fill="rgb(239,88,43)" fg:x="1029" fg:w="8"/><text x="83.4351%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.65%)</title><rect x="83.1851%" y="533" width="0.6467%" height="15" fill="rgb(209,47,11)" fg:x="1029" fg:w="8"/><text x="83.4351%" y="543.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (1 samples, 0.08%)</title><rect x="83.7510%" y="517" width="0.0808%" height="15" fill="rgb(219,179,23)" fg:x="1036" fg:w="1"/><text x="84.0010%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="83.7510%" y="501" width="0.0808%" height="15" fill="rgb(213,183,19)" fg:x="1036" fg:w="1"/><text x="84.0010%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="83.7510%" y="485" width="0.0808%" height="15" fill="rgb(210,11,9)" fg:x="1036" fg:w="1"/><text x="84.0010%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="83.8319%" y="517" width="0.1617%" height="15" fill="rgb(239,194,16)" fg:x="1037" fg:w="2"/><text x="84.0819%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeMut&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="83.9127%" y="501" width="0.0808%" height="15" fill="rgb(246,23,50)" fg:x="1038" fg:w="1"/><text x="84.1627%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.24%)</title><rect x="83.8319%" y="533" width="0.2425%" height="15" fill="rgb(245,10,41)" fg:x="1037" fg:w="3"/><text x="84.0819%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9935%" y="517" width="0.0808%" height="15" fill="rgb(228,43,24)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.9935%" y="501" width="0.0808%" height="15" fill="rgb(220,151,0)" fg:x="1039" fg:w="1"/><text x="84.2435%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="84.0744%" y="533" width="0.1617%" height="15" fill="rgb(232,219,10)" fg:x="1040" fg:w="2"/><text x="84.3244%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="84.0744%" y="517" width="0.1617%" height="15" fill="rgb(227,217,48)" fg:x="1040" fg:w="2"/><text x="84.3244%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="84.0744%" y="501" width="0.1617%" height="15" fill="rgb(210,66,35)" fg:x="1040" fg:w="2"/><text x="84.3244%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="84.0744%" y="485" width="0.1617%" height="15" fill="rgb(254,6,7)" fg:x="1040" fg:w="2"/><text x="84.3244%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.1552%" y="469" width="0.0808%" height="15" fill="rgb(235,222,42)" fg:x="1041" fg:w="1"/><text x="84.4052%" y="479.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="84.2361%" y="533" width="0.0808%" height="15" fill="rgb(245,126,5)" fg:x="1042" fg:w="1"/><text x="84.4861%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="84.2361%" y="517" width="0.0808%" height="15" fill="rgb(215,73,17)" fg:x="1042" fg:w="1"/><text x="84.4861%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.3169%" y="501" width="0.0808%" height="15" fill="rgb(219,198,52)" fg:x="1043" fg:w="1"/><text x="84.5669%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3169%" y="485" width="0.0808%" height="15" fill="rgb(217,159,18)" fg:x="1043" fg:w="1"/><text x="84.5669%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3169%" y="469" width="0.0808%" height="15" fill="rgb(212,177,18)" fg:x="1043" fg:w="1"/><text x="84.5669%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.3169%" y="453" width="0.0808%" height="15" fill="rgb(241,10,11)" fg:x="1043" fg:w="1"/><text x="84.5669%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3169%" y="437" width="0.0808%" height="15" fill="rgb(232,114,35)" fg:x="1043" fg:w="1"/><text x="84.5669%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.3169%" y="421" width="0.0808%" height="15" fill="rgb(238,222,8)" fg:x="1043" fg:w="1"/><text x="84.5669%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="84.3977%" y="453" width="0.0808%" height="15" fill="rgb(251,153,44)" fg:x="1044" fg:w="1"/><text x="84.6477%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="84.3977%" y="437" width="0.0808%" height="15" fill="rgb(210,140,51)" fg:x="1044" fg:w="1"/><text x="84.6477%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.3977%" y="421" width="0.0808%" height="15" fill="rgb(222,63,0)" fg:x="1044" fg:w="1"/><text x="84.6477%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.4786%" y="389" width="0.0808%" height="15" fill="rgb(240,18,40)" fg:x="1045" fg:w="1"/><text x="84.7286%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4786%" y="373" width="0.0808%" height="15" fill="rgb(237,88,16)" fg:x="1045" fg:w="1"/><text x="84.7286%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="84.3977%" y="485" width="0.2425%" height="15" fill="rgb(251,117,13)" fg:x="1044" fg:w="3"/><text x="84.6477%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.24%)</title><rect x="84.3977%" y="469" width="0.2425%" height="15" fill="rgb(251,228,8)" fg:x="1044" fg:w="3"/><text x="84.6477%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="84.4786%" y="453" width="0.1617%" height="15" fill="rgb(205,107,49)" fg:x="1045" fg:w="2"/><text x="84.7286%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.4786%" y="437" width="0.1617%" height="15" fill="rgb(238,72,41)" fg:x="1045" fg:w="2"/><text x="84.7286%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="84.4786%" y="421" width="0.1617%" height="15" fill="rgb(248,183,52)" fg:x="1045" fg:w="2"/><text x="84.7286%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="84.4786%" y="405" width="0.1617%" height="15" fill="rgb(215,58,20)" fg:x="1045" fg:w="2"/><text x="84.7286%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5594%" y="389" width="0.0808%" height="15" fill="rgb(209,49,13)" fg:x="1046" fg:w="1"/><text x="84.8094%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5594%" y="373" width="0.0808%" height="15" fill="rgb(208,113,17)" fg:x="1046" fg:w="1"/><text x="84.8094%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5594%" y="357" width="0.0808%" height="15" fill="rgb(208,14,22)" fg:x="1046" fg:w="1"/><text x="84.8094%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5594%" y="341" width="0.0808%" height="15" fill="rgb(222,95,2)" fg:x="1046" fg:w="1"/><text x="84.8094%" y="351.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="84.6403%" y="485" width="0.0808%" height="15" fill="rgb(253,180,37)" fg:x="1047" fg:w="1"/><text x="84.8903%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6403%" y="469" width="0.0808%" height="15" fill="rgb(250,81,33)" fg:x="1047" fg:w="1"/><text x="84.8903%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7211%" y="453" width="0.0808%" height="15" fill="rgb(251,151,41)" fg:x="1048" fg:w="1"/><text x="84.9711%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8019%" y="453" width="0.0808%" height="15" fill="rgb(210,135,17)" fg:x="1049" fg:w="1"/><text x="85.0519%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.8828%" y="389" width="0.0808%" height="15" fill="rgb(239,21,29)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8828%" y="373" width="0.0808%" height="15" fill="rgb(231,215,16)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.8828%" y="357" width="0.0808%" height="15" fill="rgb(239,151,54)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8828%" y="341" width="0.0808%" height="15" fill="rgb(222,122,38)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8828%" y="325" width="0.0808%" height="15" fill="rgb(243,128,1)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8828%" y="309" width="0.0808%" height="15" fill="rgb(225,74,21)" fg:x="1050" fg:w="1"/><text x="85.1328%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.73%)</title><rect x="84.3169%" y="517" width="0.7276%" height="15" fill="rgb(216,210,10)" fg:x="1043" fg:w="9"/><text x="84.5669%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.65%)</title><rect x="84.3977%" y="501" width="0.6467%" height="15" fill="rgb(228,76,19)" fg:x="1044" fg:w="8"/><text x="84.6477%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="84.7211%" y="485" width="0.3234%" height="15" fill="rgb(236,80,34)" fg:x="1048" fg:w="4"/><text x="84.9711%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="84.7211%" y="469" width="0.3234%" height="15" fill="rgb(225,173,23)" fg:x="1048" fg:w="4"/><text x="84.9711%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="84.8828%" y="453" width="0.1617%" height="15" fill="rgb(253,38,1)" fg:x="1050" fg:w="2"/><text x="85.1328%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="84.8828%" y="437" width="0.1617%" height="15" fill="rgb(206,155,35)" fg:x="1050" fg:w="2"/><text x="85.1328%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.8828%" y="421" width="0.1617%" height="15" fill="rgb(254,27,53)" fg:x="1050" fg:w="2"/><text x="85.1328%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.8828%" y="405" width="0.1617%" height="15" fill="rgb(225,52,41)" fg:x="1050" fg:w="2"/><text x="85.1328%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="84.9636%" y="389" width="0.0808%" height="15" fill="rgb(244,53,18)" fg:x="1051" fg:w="1"/><text x="85.2136%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0445%" y="517" width="0.0808%" height="15" fill="rgb(254,206,48)" fg:x="1052" fg:w="1"/><text x="85.2945%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="85.1253%" y="517" width="0.1617%" height="15" fill="rgb(236,182,23)" fg:x="1053" fg:w="2"/><text x="85.3753%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.1253%" y="501" width="0.1617%" height="15" fill="rgb(236,191,37)" fg:x="1053" fg:w="2"/><text x="85.3753%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.1253%" y="485" width="0.1617%" height="15" fill="rgb(245,53,8)" fg:x="1053" fg:w="2"/><text x="85.3753%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="85.1253%" y="469" width="0.1617%" height="15" fill="rgb(245,147,9)" fg:x="1053" fg:w="2"/><text x="85.3753%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.1253%" y="453" width="0.1617%" height="15" fill="rgb(218,24,48)" fg:x="1053" fg:w="2"/><text x="85.3753%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.1253%" y="437" width="0.1617%" height="15" fill="rgb(254,23,9)" fg:x="1053" fg:w="2"/><text x="85.3753%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.2061%" y="421" width="0.0808%" height="15" fill="rgb(244,105,9)" fg:x="1054" fg:w="1"/><text x="85.4561%" y="431.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (161 samples, 13.02%)</title><rect x="72.3525%" y="565" width="13.0154%" height="15" fill="rgb(212,142,22)" fg:x="895" fg:w="161"/><text x="72.6025%" y="575.50">&lt;tests::HoldingKeyIn..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (19 samples, 1.54%)</title><rect x="83.8319%" y="549" width="1.5360%" height="15" fill="rgb(221,114,49)" fg:x="1037" fg:w="19"/><text x="84.0819%" y="559.50"></text></g><g><title>plugins_core::build::Build::save (13 samples, 1.05%)</title><rect x="84.3169%" y="533" width="1.0509%" height="15" fill="rgb(223,210,25)" fg:x="1043" fg:w="13"/><text x="84.5669%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.2870%" y="517" width="0.0808%" height="15" fill="rgb(235,162,44)" fg:x="1055" fg:w="1"/><text x="85.5370%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="85.4487%" y="549" width="0.1617%" height="15" fill="rgb(237,65,45)" fg:x="1057" fg:w="2"/><text x="85.6987%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5295%" y="533" width="0.0808%" height="15" fill="rgb(208,79,9)" fg:x="1058" fg:w="1"/><text x="85.7795%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.6103%" y="549" width="0.0808%" height="15" fill="rgb(215,228,8)" fg:x="1059" fg:w="1"/><text x="85.8603%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.6912%" y="549" width="0.0808%" height="15" fill="rgb(205,185,17)" fg:x="1060" fg:w="1"/><text x="85.9412%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.6912%" y="533" width="0.0808%" height="15" fill="rgb(213,62,36)" fg:x="1060" fg:w="1"/><text x="85.9412%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.6912%" y="517" width="0.0808%" height="15" fill="rgb(209,34,9)" fg:x="1060" fg:w="1"/><text x="85.9412%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.6912%" y="501" width="0.0808%" height="15" fill="rgb(246,151,27)" fg:x="1060" fg:w="1"/><text x="85.9412%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.6912%" y="485" width="0.0808%" height="15" fill="rgb(218,206,3)" fg:x="1060" fg:w="1"/><text x="85.9412%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="85.6912%" y="469" width="0.0808%" height="15" fill="rgb(242,202,1)" fg:x="1060" fg:w="1"/><text x="85.9412%" y="479.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="85.7720%" y="549" width="0.0808%" height="15" fill="rgb(227,185,16)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="559.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="85.7720%" y="533" width="0.0808%" height="15" fill="rgb(241,1,14)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="543.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="85.7720%" y="517" width="0.0808%" height="15" fill="rgb(212,113,25)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="527.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="85.7720%" y="501" width="0.0808%" height="15" fill="rgb(247,37,43)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="85.7720%" y="485" width="0.0808%" height="15" fill="rgb(226,54,8)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="85.7720%" y="469" width="0.0808%" height="15" fill="rgb(251,205,25)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="85.7720%" y="453" width="0.0808%" height="15" fill="rgb(246,87,35)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="463.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="85.7720%" y="437" width="0.0808%" height="15" fill="rgb(251,145,46)" fg:x="1061" fg:w="1"/><text x="86.0220%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.8529%" y="517" width="0.0808%" height="15" fill="rgb(210,210,33)" fg:x="1062" fg:w="1"/><text x="86.1029%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.8529%" y="501" width="0.0808%" height="15" fill="rgb(221,151,11)" fg:x="1062" fg:w="1"/><text x="86.1029%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.0146%" y="421" width="0.0808%" height="15" fill="rgb(208,160,28)" fg:x="1064" fg:w="1"/><text x="86.2646%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.0146%" y="405" width="0.0808%" height="15" fill="rgb(243,69,29)" fg:x="1064" fg:w="1"/><text x="86.2646%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.0146%" y="389" width="0.0808%" height="15" fill="rgb(224,144,4)" fg:x="1064" fg:w="1"/><text x="86.2646%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.0146%" y="373" width="0.0808%" height="15" fill="rgb(211,140,38)" fg:x="1064" fg:w="1"/><text x="86.2646%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.0954%" y="421" width="0.0808%" height="15" fill="rgb(252,189,15)" fg:x="1065" fg:w="1"/><text x="86.3454%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="86.0146%" y="453" width="0.2425%" height="15" fill="rgb(251,175,23)" fg:x="1064" fg:w="3"/><text x="86.2646%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="86.0146%" y="437" width="0.2425%" height="15" fill="rgb(212,184,11)" fg:x="1064" fg:w="3"/><text x="86.2646%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.1762%" y="421" width="0.0808%" height="15" fill="rgb(217,205,6)" fg:x="1066" fg:w="1"/><text x="86.4262%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="85.9337%" y="469" width="0.4042%" height="15" fill="rgb(235,45,45)" fg:x="1063" fg:w="5"/><text x="86.1837%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.2571%" y="453" width="0.0808%" height="15" fill="rgb(211,157,53)" fg:x="1067" fg:w="1"/><text x="86.5071%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="86.3379%" y="453" width="0.1617%" height="15" fill="rgb(212,13,8)" fg:x="1068" fg:w="2"/><text x="86.5879%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.3379%" y="437" width="0.1617%" height="15" fill="rgb(218,80,36)" fg:x="1068" fg:w="2"/><text x="86.5879%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.3379%" y="421" width="0.1617%" height="15" fill="rgb(211,123,43)" fg:x="1068" fg:w="2"/><text x="86.5879%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.3379%" y="405" width="0.1617%" height="15" fill="rgb(206,165,2)" fg:x="1068" fg:w="2"/><text x="86.5879%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.4188%" y="389" width="0.0808%" height="15" fill="rgb(248,63,35)" fg:x="1069" fg:w="1"/><text x="86.6688%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.4188%" y="373" width="0.0808%" height="15" fill="rgb(219,133,41)" fg:x="1069" fg:w="1"/><text x="86.6688%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.4188%" y="357" width="0.0808%" height="15" fill="rgb(206,175,46)" fg:x="1069" fg:w="1"/><text x="86.6688%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.4188%" y="341" width="0.0808%" height="15" fill="rgb(224,41,35)" fg:x="1069" fg:w="1"/><text x="86.6688%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.4996%" y="437" width="0.1617%" height="15" fill="rgb(226,113,24)" fg:x="1070" fg:w="2"/><text x="86.7496%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.5804%" y="421" width="0.0808%" height="15" fill="rgb(219,51,41)" fg:x="1071" fg:w="1"/><text x="86.8304%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.5804%" y="405" width="0.0808%" height="15" fill="rgb(220,145,47)" fg:x="1071" fg:w="1"/><text x="86.8304%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.5804%" y="389" width="0.0808%" height="15" fill="rgb(239,121,47)" fg:x="1071" fg:w="1"/><text x="86.8304%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.6613%" y="389" width="0.0808%" height="15" fill="rgb(207,60,40)" fg:x="1072" fg:w="1"/><text x="86.9113%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.6613%" y="373" width="0.0808%" height="15" fill="rgb(224,229,11)" fg:x="1072" fg:w="1"/><text x="86.9113%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.6613%" y="357" width="0.0808%" height="15" fill="rgb(252,28,32)" fg:x="1072" fg:w="1"/><text x="86.9113%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="86.6613%" y="341" width="0.0808%" height="15" fill="rgb(207,52,49)" fg:x="1072" fg:w="1"/><text x="86.9113%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.7421%" y="389" width="0.0808%" height="15" fill="rgb(243,51,50)" fg:x="1073" fg:w="1"/><text x="86.9921%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="86.6613%" y="421" width="0.2425%" height="15" fill="rgb(212,92,21)" fg:x="1072" fg:w="3"/><text x="86.9113%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="86.6613%" y="405" width="0.2425%" height="15" fill="rgb(230,183,50)" fg:x="1072" fg:w="3"/><text x="86.9113%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.8230%" y="389" width="0.0808%" height="15" fill="rgb(225,48,9)" fg:x="1074" fg:w="1"/><text x="87.0730%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.8230%" y="373" width="0.0808%" height="15" fill="rgb(254,44,4)" fg:x="1074" fg:w="1"/><text x="87.0730%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.8230%" y="357" width="0.0808%" height="15" fill="rgb(252,128,37)" fg:x="1074" fg:w="1"/><text x="87.0730%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.9038%" y="405" width="0.1617%" height="15" fill="rgb(227,178,8)" fg:x="1075" fg:w="2"/><text x="87.1538%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.9846%" y="389" width="0.0808%" height="15" fill="rgb(205,206,32)" fg:x="1076" fg:w="1"/><text x="87.2346%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.9846%" y="373" width="0.0808%" height="15" fill="rgb(220,218,22)" fg:x="1076" fg:w="1"/><text x="87.2346%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.9846%" y="357" width="0.0808%" height="15" fill="rgb(236,41,28)" fg:x="1076" fg:w="1"/><text x="87.2346%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="87.1463%" y="389" width="0.2425%" height="15" fill="rgb(219,37,7)" fg:x="1078" fg:w="3"/><text x="87.3963%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.2272%" y="373" width="0.1617%" height="15" fill="rgb(206,160,15)" fg:x="1079" fg:w="2"/><text x="87.4772%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.2272%" y="357" width="0.1617%" height="15" fill="rgb(208,82,21)" fg:x="1079" fg:w="2"/><text x="87.4772%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="87.2272%" y="341" width="0.1617%" height="15" fill="rgb(226,130,25)" fg:x="1079" fg:w="2"/><text x="87.4772%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.3080%" y="325" width="0.0808%" height="15" fill="rgb(212,72,24)" fg:x="1080" fg:w="1"/><text x="87.5580%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.3080%" y="309" width="0.0808%" height="15" fill="rgb(206,28,16)" fg:x="1080" fg:w="1"/><text x="87.5580%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.3080%" y="293" width="0.0808%" height="15" fill="rgb(249,41,5)" fg:x="1080" fg:w="1"/><text x="87.5580%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3888%" y="389" width="0.0808%" height="15" fill="rgb(233,96,48)" fg:x="1081" fg:w="1"/><text x="87.6388%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="87.0655%" y="405" width="0.5659%" height="15" fill="rgb(240,198,11)" fg:x="1077" fg:w="7"/><text x="87.3155%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.4697%" y="389" width="0.1617%" height="15" fill="rgb(209,175,35)" fg:x="1082" fg:w="2"/><text x="87.7197%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.4697%" y="373" width="0.1617%" height="15" fill="rgb(214,40,51)" fg:x="1082" fg:w="2"/><text x="87.7197%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.5505%" y="357" width="0.0808%" height="15" fill="rgb(252,56,4)" fg:x="1083" fg:w="1"/><text x="87.8005%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="86.6613%" y="437" width="1.0509%" height="15" fill="rgb(219,131,5)" fg:x="1072" fg:w="13"/><text x="86.9113%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="86.9038%" y="421" width="0.8084%" height="15" fill="rgb(223,67,53)" fg:x="1075" fg:w="10"/><text x="87.1538%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.6314%" y="405" width="0.0808%" height="15" fill="rgb(227,154,8)" fg:x="1084" fg:w="1"/><text x="87.8814%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.54%)</title><rect x="86.3379%" y="469" width="1.5360%" height="15" fill="rgb(216,174,51)" fg:x="1068" fg:w="19"/><text x="86.5879%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.37%)</title><rect x="86.4996%" y="453" width="1.3743%" height="15" fill="rgb(239,60,34)" fg:x="1070" fg:w="17"/><text x="86.7496%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.7122%" y="437" width="0.1617%" height="15" fill="rgb(236,165,48)" fg:x="1085" fg:w="2"/><text x="87.9622%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.7122%" y="421" width="0.1617%" height="15" fill="rgb(210,37,26)" fg:x="1085" fg:w="2"/><text x="87.9622%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="87.7122%" y="405" width="0.1617%" height="15" fill="rgb(211,3,17)" fg:x="1085" fg:w="2"/><text x="87.9622%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.7930%" y="389" width="0.0808%" height="15" fill="rgb(234,88,49)" fg:x="1086" fg:w="1"/><text x="88.0430%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.7930%" y="373" width="0.0808%" height="15" fill="rgb(233,40,17)" fg:x="1086" fg:w="1"/><text x="88.0430%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.7930%" y="357" width="0.0808%" height="15" fill="rgb(235,127,31)" fg:x="1086" fg:w="1"/><text x="88.0430%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9547%" y="389" width="0.0808%" height="15" fill="rgb(248,167,17)" fg:x="1088" fg:w="1"/><text x="88.2047%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.0356%" y="373" width="0.0808%" height="15" fill="rgb(218,179,8)" fg:x="1089" fg:w="1"/><text x="88.2856%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.1164%" y="357" width="0.0808%" height="15" fill="rgb(216,92,14)" fg:x="1090" fg:w="1"/><text x="88.3664%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="87.9547%" y="437" width="0.3234%" height="15" fill="rgb(221,198,46)" fg:x="1088" fg:w="4"/><text x="88.2047%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="87.9547%" y="421" width="0.3234%" height="15" fill="rgb(244,7,25)" fg:x="1088" fg:w="4"/><text x="88.2047%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="87.9547%" y="405" width="0.3234%" height="15" fill="rgb(233,75,6)" fg:x="1088" fg:w="4"/><text x="88.2047%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.0356%" y="389" width="0.2425%" height="15" fill="rgb(240,189,41)" fg:x="1089" fg:w="3"/><text x="88.2856%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.1164%" y="373" width="0.1617%" height="15" fill="rgb(237,157,21)" fg:x="1090" fg:w="2"/><text x="88.3664%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.1973%" y="357" width="0.0808%" height="15" fill="rgb(210,136,49)" fg:x="1091" fg:w="1"/><text x="88.4473%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.1973%" y="341" width="0.0808%" height="15" fill="rgb(210,68,29)" fg:x="1091" fg:w="1"/><text x="88.4473%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.1973%" y="325" width="0.0808%" height="15" fill="rgb(247,207,20)" fg:x="1091" fg:w="1"/><text x="88.4473%" y="335.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="88.2781%" y="437" width="0.1617%" height="15" fill="rgb(224,73,48)" fg:x="1092" fg:w="2"/><text x="88.5281%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="88.2781%" y="421" width="0.1617%" height="15" fill="rgb(215,136,47)" fg:x="1092" fg:w="2"/><text x="88.5281%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="88.2781%" y="405" width="0.1617%" height="15" fill="rgb(232,222,16)" fg:x="1092" fg:w="2"/><text x="88.5281%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.16%)</title><rect x="88.2781%" y="389" width="0.1617%" height="15" fill="rgb(249,202,47)" fg:x="1092" fg:w="2"/><text x="88.5281%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="88.2781%" y="373" width="0.1617%" height="15" fill="rgb(236,56,8)" fg:x="1092" fg:w="2"/><text x="88.5281%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="88.4398%" y="405" width="0.1617%" height="15" fill="rgb(222,6,3)" fg:x="1094" fg:w="2"/><text x="88.6898%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="88.5206%" y="389" width="0.0808%" height="15" fill="rgb(254,222,28)" fg:x="1095" fg:w="1"/><text x="88.7706%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="88.5206%" y="373" width="0.0808%" height="15" fill="rgb(219,57,23)" fg:x="1095" fg:w="1"/><text x="88.7706%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.5206%" y="357" width="0.0808%" height="15" fill="rgb(251,106,48)" fg:x="1095" fg:w="1"/><text x="88.7706%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (11 samples, 0.89%)</title><rect x="87.8739%" y="453" width="0.8892%" height="15" fill="rgb(242,2,23)" fg:x="1087" fg:w="11"/><text x="88.1239%" y="463.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="88.4398%" y="437" width="0.3234%" height="15" fill="rgb(212,109,31)" fg:x="1094" fg:w="4"/><text x="88.6898%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="88.4398%" y="421" width="0.3234%" height="15" fill="rgb(241,9,22)" fg:x="1094" fg:w="4"/><text x="88.6898%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="88.6015%" y="405" width="0.1617%" height="15" fill="rgb(209,64,27)" fg:x="1096" fg:w="2"/><text x="88.8515%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="88.8440%" y="421" width="0.2425%" height="15" fill="rgb(248,13,44)" fg:x="1099" fg:w="3"/><text x="89.0940%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="89.0865%" y="421" width="0.2425%" height="15" fill="rgb(213,86,6)" fg:x="1102" fg:w="3"/><text x="89.3365%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="89.1673%" y="405" width="0.1617%" height="15" fill="rgb(247,11,18)" fg:x="1103" fg:w="2"/><text x="89.4173%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="89.3290%" y="421" width="0.0808%" height="15" fill="rgb(252,31,11)" fg:x="1105" fg:w="1"/><text x="89.5790%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="89.4099%" y="421" width="0.2425%" height="15" fill="rgb(215,63,51)" fg:x="1106" fg:w="3"/><text x="89.6599%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="89.4099%" y="405" width="0.2425%" height="15" fill="rgb(222,180,4)" fg:x="1106" fg:w="3"/><text x="89.6599%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="89.4907%" y="389" width="0.1617%" height="15" fill="rgb(233,4,23)" fg:x="1107" fg:w="2"/><text x="89.7407%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.7332%" y="389" width="0.0808%" height="15" fill="rgb(230,116,22)" fg:x="1110" fg:w="1"/><text x="89.9832%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.8141%" y="373" width="0.1617%" height="15" fill="rgb(222,20,14)" fg:x="1111" fg:w="2"/><text x="90.0641%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8949%" y="357" width="0.0808%" height="15" fill="rgb(210,176,43)" fg:x="1112" fg:w="1"/><text x="90.1449%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1374%" y="325" width="0.0808%" height="15" fill="rgb(219,67,32)" fg:x="1115" fg:w="1"/><text x="90.3874%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1374%" y="309" width="0.0808%" height="15" fill="rgb(228,91,39)" fg:x="1115" fg:w="1"/><text x="90.3874%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="89.9757%" y="373" width="0.3234%" height="15" fill="rgb(254,63,14)" fg:x="1113" fg:w="4"/><text x="90.2257%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="89.9757%" y="357" width="0.3234%" height="15" fill="rgb(216,171,39)" fg:x="1113" fg:w="4"/><text x="90.2257%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.1374%" y="341" width="0.1617%" height="15" fill="rgb(248,68,25)" fg:x="1115" fg:w="2"/><text x="90.3874%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.2183%" y="325" width="0.0808%" height="15" fill="rgb(239,63,16)" fg:x="1116" fg:w="1"/><text x="90.4683%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="90.2991%" y="357" width="0.0808%" height="15" fill="rgb(225,111,43)" fg:x="1117" fg:w="1"/><text x="90.5491%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3800%" y="325" width="0.0808%" height="15" fill="rgb(246,165,17)" fg:x="1118" fg:w="1"/><text x="90.6300%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.3800%" y="341" width="0.1617%" height="15" fill="rgb(208,124,1)" fg:x="1118" fg:w="2"/><text x="90.6300%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.4608%" y="325" width="0.0808%" height="15" fill="rgb(234,147,33)" fg:x="1119" fg:w="1"/><text x="90.7108%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.7033%" y="325" width="0.0808%" height="15" fill="rgb(240,86,30)" fg:x="1122" fg:w="1"/><text x="90.9533%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="89.8141%" y="389" width="1.1318%" height="15" fill="rgb(237,34,51)" fg:x="1111" fg:w="14"/><text x="90.0641%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="90.2991%" y="373" width="0.6467%" height="15" fill="rgb(232,131,41)" fg:x="1117" fg:w="8"/><text x="90.5491%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="90.3800%" y="357" width="0.5659%" height="15" fill="rgb(227,129,53)" fg:x="1118" fg:w="7"/><text x="90.6300%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="90.5416%" y="341" width="0.4042%" height="15" fill="rgb(230,90,35)" fg:x="1120" fg:w="5"/><text x="90.7916%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.7842%" y="325" width="0.1617%" height="15" fill="rgb(248,88,27)" fg:x="1123" fg:w="2"/><text x="91.0342%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.8650%" y="309" width="0.0808%" height="15" fill="rgb(223,18,17)" fg:x="1124" fg:w="1"/><text x="91.1150%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8650%" y="293" width="0.0808%" height="15" fill="rgb(241,11,10)" fg:x="1124" fg:w="1"/><text x="91.1150%" y="303.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (28 samples, 2.26%)</title><rect x="88.7631%" y="453" width="2.2635%" height="15" fill="rgb(232,111,52)" fg:x="1098" fg:w="28"/><text x="89.0131%" y="463.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.18%)</title><rect x="88.8440%" y="437" width="2.1827%" height="15" fill="rgb(228,67,8)" fg:x="1099" fg:w="27"/><text x="89.0940%" y="447.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.37%)</title><rect x="89.6524%" y="421" width="1.3743%" height="15" fill="rgb(251,168,31)" fg:x="1109" fg:w="17"/><text x="89.9024%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.29%)</title><rect x="89.7332%" y="405" width="1.2935%" height="15" fill="rgb(249,164,11)" fg:x="1110" fg:w="16"/><text x="89.9832%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="90.9458%" y="389" width="0.0808%" height="15" fill="rgb(239,81,9)" fg:x="1125" fg:w="1"/><text x="91.1958%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.1884%" y="309" width="0.0808%" height="15" fill="rgb(222,145,38)" fg:x="1128" fg:w="1"/><text x="91.4384%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.1884%" y="293" width="0.0808%" height="15" fill="rgb(238,80,54)" fg:x="1128" fg:w="1"/><text x="91.4384%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.1884%" y="277" width="0.0808%" height="15" fill="rgb(237,116,16)" fg:x="1128" fg:w="1"/><text x="91.4384%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.1884%" y="261" width="0.0808%" height="15" fill="rgb(218,135,19)" fg:x="1128" fg:w="1"/><text x="91.4384%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.4309%" y="261" width="0.0808%" height="15" fill="rgb(216,207,44)" fg:x="1131" fg:w="1"/><text x="91.6809%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.5117%" y="245" width="0.0808%" height="15" fill="rgb(226,152,40)" fg:x="1132" fg:w="1"/><text x="91.7617%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="91.2692%" y="309" width="0.4042%" height="15" fill="rgb(219,98,35)" fg:x="1129" fg:w="5"/><text x="91.5192%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="91.3500%" y="293" width="0.3234%" height="15" fill="rgb(222,136,46)" fg:x="1130" fg:w="4"/><text x="91.6000%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="91.4309%" y="277" width="0.2425%" height="15" fill="rgb(222,71,8)" fg:x="1131" fg:w="3"/><text x="91.6809%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="91.5117%" y="261" width="0.1617%" height="15" fill="rgb(209,89,53)" fg:x="1132" fg:w="2"/><text x="91.7617%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5926%" y="245" width="0.0808%" height="15" fill="rgb(210,97,51)" fg:x="1133" fg:w="1"/><text x="91.8426%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="91.1884%" y="325" width="0.5659%" height="15" fill="rgb(248,65,21)" fg:x="1128" fg:w="7"/><text x="91.4384%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="91.6734%" y="309" width="0.0808%" height="15" fill="rgb(222,5,31)" fg:x="1134" fg:w="1"/><text x="91.9234%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.6734%" y="293" width="0.0808%" height="15" fill="rgb(241,16,30)" fg:x="1134" fg:w="1"/><text x="91.9234%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.6734%" y="277" width="0.0808%" height="15" fill="rgb(215,86,30)" fg:x="1134" fg:w="1"/><text x="91.9234%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="91.1884%" y="357" width="0.7276%" height="15" fill="rgb(235,26,44)" fg:x="1128" fg:w="9"/><text x="91.4384%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="91.1884%" y="341" width="0.7276%" height="15" fill="rgb(228,147,14)" fg:x="1128" fg:w="9"/><text x="91.4384%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.7542%" y="325" width="0.1617%" height="15" fill="rgb(253,38,50)" fg:x="1135" fg:w="2"/><text x="92.0042%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.7542%" y="309" width="0.1617%" height="15" fill="rgb(251,151,16)" fg:x="1135" fg:w="2"/><text x="92.0042%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.7542%" y="293" width="0.1617%" height="15" fill="rgb(224,64,19)" fg:x="1135" fg:w="2"/><text x="92.0042%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.13%)</title><rect x="91.0267%" y="389" width="1.1318%" height="15" fill="rgb(235,214,47)" fg:x="1126" fg:w="14"/><text x="91.2767%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="91.1075%" y="373" width="1.0509%" height="15" fill="rgb(218,15,19)" fg:x="1127" fg:w="13"/><text x="91.3575%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="91.9159%" y="357" width="0.2425%" height="15" fill="rgb(247,209,3)" fg:x="1137" fg:w="3"/><text x="92.1659%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.9968%" y="341" width="0.1617%" height="15" fill="rgb(217,29,2)" fg:x="1138" fg:w="2"/><text x="92.2468%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.1584%" y="389" width="0.0808%" height="15" fill="rgb(234,9,9)" fg:x="1140" fg:w="1"/><text x="92.4084%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1584%" y="373" width="0.0808%" height="15" fill="rgb(207,43,14)" fg:x="1140" fg:w="1"/><text x="92.4084%" y="383.50"></text></g><g><title>engine::session::state::State::close (80 samples, 6.47%)</title><rect x="85.8529%" y="549" width="6.4673%" height="15" fill="rgb(216,219,36)" fg:x="1062" fg:w="80"/><text x="86.1029%" y="559.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (80 samples, 6.47%)</title><rect x="85.8529%" y="533" width="6.4673%" height="15" fill="rgb(238,12,26)" fg:x="1062" fg:w="80"/><text x="86.1029%" y="543.50">engine::..</text></g><g><title>core::iter::adapters::try_process (79 samples, 6.39%)</title><rect x="85.9337%" y="517" width="6.3864%" height="15" fill="rgb(226,67,30)" fg:x="1063" fg:w="79"/><text x="86.1837%" y="527.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (79 samples, 6.39%)</title><rect x="85.9337%" y="501" width="6.3864%" height="15" fill="rgb(229,154,7)" fg:x="1063" fg:w="79"/><text x="86.1837%" y="511.50">&lt;alloc::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (79 samples, 6.39%)</title><rect x="85.9337%" y="485" width="6.3864%" height="15" fill="rgb(249,90,18)" fg:x="1063" fg:w="79"/><text x="86.1837%" y="495.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (55 samples, 4.45%)</title><rect x="87.8739%" y="469" width="4.4462%" height="15" fill="rgb(223,53,15)" fg:x="1087" fg:w="55"/><text x="88.1239%" y="479.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (16 samples, 1.29%)</title><rect x="91.0267%" y="453" width="1.2935%" height="15" fill="rgb(253,86,38)" fg:x="1126" fg:w="16"/><text x="91.2767%" y="463.50"></text></g><g><title>serde_json::de::from_trait (16 samples, 1.29%)</title><rect x="91.0267%" y="437" width="1.2935%" height="15" fill="rgb(222,198,9)" fg:x="1126" fg:w="16"/><text x="91.2767%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.29%)</title><rect x="91.0267%" y="421" width="1.2935%" height="15" fill="rgb(240,146,25)" fg:x="1126" fg:w="16"/><text x="91.2767%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.29%)</title><rect x="91.0267%" y="405" width="1.2935%" height="15" fill="rgb(225,38,10)" fg:x="1126" fg:w="16"/><text x="91.2767%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2393%" y="389" width="0.0808%" height="15" fill="rgb(246,93,4)" fg:x="1141" fg:w="1"/><text x="92.4893%" y="399.50"></text></g><g><title>engine::session::Session::close (87 samples, 7.03%)</title><rect x="85.3678%" y="565" width="7.0331%" height="15" fill="rgb(222,55,18)" fg:x="1056" fg:w="87"/><text x="85.6178%" y="575.50">engine::s..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="92.3201%" y="549" width="0.0808%" height="15" fill="rgb(233,137,48)" fg:x="1142" fg:w="1"/><text x="92.5701%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="92.4010%" y="533" width="0.0808%" height="15" fill="rgb(214,8,54)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="92.4010%" y="517" width="0.0808%" height="15" fill="rgb(206,75,4)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4010%" y="501" width="0.0808%" height="15" fill="rgb(238,171,14)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4010%" y="485" width="0.0808%" height="15" fill="rgb(233,70,41)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.4010%" y="469" width="0.0808%" height="15" fill="rgb(214,68,36)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4010%" y="453" width="0.0808%" height="15" fill="rgb(223,29,5)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.4010%" y="437" width="0.0808%" height="15" fill="rgb(251,22,40)" fg:x="1143" fg:w="1"/><text x="92.6510%" y="447.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="92.4818%" y="533" width="0.0808%" height="15" fill="rgb(210,67,41)" fg:x="1144" fg:w="1"/><text x="92.7318%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="92.4818%" y="517" width="0.0808%" height="15" fill="rgb(225,177,31)" fg:x="1144" fg:w="1"/><text x="92.7318%" y="527.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="92.4818%" y="501" width="0.0808%" height="15" fill="rgb(221,229,11)" fg:x="1144" fg:w="1"/><text x="92.7318%" y="511.50"></text></g><g><title>&lt;plugins_core::chat::parser::SpeakActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="92.4818%" y="485" width="0.0808%" height="15" fill="rgb(247,172,52)" fg:x="1144" fg:w="1"/><text x="92.7318%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="92.4818%" y="469" width="0.0808%" height="15" fill="rgb(212,73,19)" fg:x="1144" fg:w="1"/><text x="92.7318%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="92.6435%" y="517" width="0.0808%" height="15" fill="rgb(244,7,46)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.6435%" y="501" width="0.0808%" height="15" fill="rgb(230,113,20)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.6435%" y="485" width="0.0808%" height="15" fill="rgb(209,97,30)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.6435%" y="469" width="0.0808%" height="15" fill="rgb(243,89,12)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="479.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="92.6435%" y="453" width="0.0808%" height="15" fill="rgb(228,32,19)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="463.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (1 samples, 0.08%)</title><rect x="92.6435%" y="437" width="0.0808%" height="15" fill="rgb(248,25,17)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="447.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="92.6435%" y="421" width="0.0808%" height="15" fill="rgb(232,161,29)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="92.6435%" y="405" width="0.0808%" height="15" fill="rgb(251,192,11)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.6435%" y="389" width="0.0808%" height="15" fill="rgb(240,47,32)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.6435%" y="373" width="0.0808%" height="15" fill="rgb(250,16,45)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="92.6435%" y="357" width="0.0808%" height="15" fill="rgb(227,217,42)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="92.6435%" y="341" width="0.0808%" height="15" fill="rgb(206,82,54)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="92.6435%" y="325" width="0.0808%" height="15" fill="rgb(243,145,25)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="92.6435%" y="309" width="0.0808%" height="15" fill="rgb(207,166,24)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="92.6435%" y="293" width="0.0808%" height="15" fill="rgb(215,191,44)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="92.6435%" y="277" width="0.0808%" height="15" fill="rgb(234,218,51)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.6435%" y="261" width="0.0808%" height="15" fill="rgb(245,133,21)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="92.6435%" y="245" width="0.0808%" height="15" fill="rgb(230,136,45)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="92.6435%" y="229" width="0.0808%" height="15" fill="rgb(247,63,43)" fg:x="1146" fg:w="1"/><text x="92.8935%" y="239.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="92.7243%" y="517" width="0.0808%" height="15" fill="rgb(254,223,31)" fg:x="1147" fg:w="1"/><text x="92.9743%" y="527.50"></text></g><g><title>chrono::offset::utc::Utc::now (1 samples, 0.08%)</title><rect x="92.8052%" y="501" width="0.0808%" height="15" fill="rgb(236,185,0)" fg:x="1148" fg:w="1"/><text x="93.0552%" y="511.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (1 samples, 0.08%)</title><rect x="92.8052%" y="485" width="0.0808%" height="15" fill="rgb(231,139,46)" fg:x="1148" fg:w="1"/><text x="93.0552%" y="495.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (4 samples, 0.32%)</title><rect x="92.8860%" y="501" width="0.3234%" height="15" fill="rgb(236,147,31)" fg:x="1149" fg:w="4"/><text x="93.1360%" y="511.50"></text></g><g><title>tracing_core::callsite::register_dispatch (3 samples, 0.24%)</title><rect x="92.9669%" y="485" width="0.2425%" height="15" fill="rgb(225,222,22)" fg:x="1150" fg:w="3"/><text x="93.2169%" y="495.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (3 samples, 0.24%)</title><rect x="92.9669%" y="469" width="0.2425%" height="15" fill="rgb(225,193,14)" fg:x="1150" fg:w="3"/><text x="93.2169%" y="479.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (3 samples, 0.24%)</title><rect x="92.9669%" y="453" width="0.2425%" height="15" fill="rgb(253,193,46)" fg:x="1150" fg:w="3"/><text x="93.2169%" y="463.50"></text></g><g><title>tracing_core::subscriber::Subscriber::register_callsite (1 samples, 0.08%)</title><rect x="93.1285%" y="437" width="0.0808%" height="15" fill="rgb(218,187,39)" fg:x="1152" fg:w="1"/><text x="93.3785%" y="447.50"></text></g><g><title>&lt;engine::session::logs::SessionSubscriber as tracing_core::subscriber::Subscriber&gt;::enabled (1 samples, 0.08%)</title><rect x="93.1285%" y="421" width="0.0808%" height="15" fill="rgb(227,162,48)" fg:x="1152" fg:w="1"/><text x="93.3785%" y="431.50"></text></g><g><title>tracing_core::dispatcher::Registrar::upgrade (1 samples, 0.08%)</title><rect x="93.1285%" y="405" width="0.0808%" height="15" fill="rgb(222,25,5)" fg:x="1152" fg:w="1"/><text x="93.3785%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="93.3711%" y="389" width="0.0808%" height="15" fill="rgb(211,205,16)" fg:x="1155" fg:w="1"/><text x="93.6211%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.3711%" y="373" width="0.0808%" height="15" fill="rgb(244,191,2)" fg:x="1155" fg:w="1"/><text x="93.6211%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.3711%" y="357" width="0.0808%" height="15" fill="rgb(248,159,12)" fg:x="1155" fg:w="1"/><text x="93.6211%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.3711%" y="341" width="0.0808%" height="15" fill="rgb(235,204,17)" fg:x="1155" fg:w="1"/><text x="93.6211%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4519%" y="325" width="0.0808%" height="15" fill="rgb(240,21,27)" fg:x="1156" fg:w="1"/><text x="93.7019%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4519%" y="309" width="0.0808%" height="15" fill="rgb(224,170,31)" fg:x="1156" fg:w="1"/><text x="93.7019%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.6136%" y="197" width="0.0808%" height="15" fill="rgb(223,145,32)" fg:x="1158" fg:w="1"/><text x="93.8636%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.6136%" y="181" width="0.0808%" height="15" fill="rgb(243,100,5)" fg:x="1158" fg:w="1"/><text x="93.8636%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.6944%" y="165" width="0.0808%" height="15" fill="rgb(242,131,51)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.6944%" y="149" width="0.0808%" height="15" fill="rgb(223,156,46)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.6944%" y="133" width="0.0808%" height="15" fill="rgb(215,10,40)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.6944%" y="117" width="0.0808%" height="15" fill="rgb(233,155,0)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.6944%" y="101" width="0.0808%" height="15" fill="rgb(247,78,6)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.6944%" y="85" width="0.0808%" height="15" fill="rgb(237,217,21)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.6944%" y="69" width="0.0808%" height="15" fill="rgb(212,1,21)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="79.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.6944%" y="53" width="0.0808%" height="15" fill="rgb(213,7,14)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="93.6944%" y="37" width="0.0808%" height="15" fill="rgb(225,84,14)" fg:x="1159" fg:w="1"/><text x="93.9444%" y="47.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.6944%" y="181" width="0.1617%" height="15" fill="rgb(239,216,39)" fg:x="1159" fg:w="2"/><text x="93.9444%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="93.7753%" y="165" width="0.0808%" height="15" fill="rgb(253,29,23)" fg:x="1160" fg:w="1"/><text x="94.0253%" y="175.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="93.5327%" y="325" width="0.4042%" height="15" fill="rgb(220,167,50)" fg:x="1157" fg:w="5"/><text x="93.7827%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="93.5327%" y="309" width="0.4042%" height="15" fill="rgb(232,141,1)" fg:x="1157" fg:w="5"/><text x="93.7827%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="93.5327%" y="293" width="0.4042%" height="15" fill="rgb(222,210,1)" fg:x="1157" fg:w="5"/><text x="93.7827%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="93.5327%" y="277" width="0.4042%" height="15" fill="rgb(219,84,10)" fg:x="1157" fg:w="5"/><text x="93.7827%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="93.5327%" y="261" width="0.4042%" height="15" fill="rgb(245,188,6)" fg:x="1157" fg:w="5"/><text x="93.7827%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="93.5327%" y="245" width="0.4042%" height="15" fill="rgb(252,139,39)" fg:x="1157" fg:w="5"/><text x="93.7827%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="93.5327%" y="229" width="0.4042%" height="15" fill="rgb(218,42,26)" fg:x="1157" fg:w="5"/><text x="93.7827%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="93.6136%" y="213" width="0.3234%" height="15" fill="rgb(237,226,51)" fg:x="1158" fg:w="4"/><text x="93.8636%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="93.6944%" y="197" width="0.2425%" height="15" fill="rgb(246,15,17)" fg:x="1159" fg:w="3"/><text x="93.9444%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="93.8561%" y="181" width="0.0808%" height="15" fill="rgb(228,170,42)" fg:x="1161" fg:w="1"/><text x="94.1061%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8561%" y="165" width="0.0808%" height="15" fill="rgb(248,118,53)" fg:x="1161" fg:w="1"/><text x="94.1061%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.9369%" y="197" width="0.0808%" height="15" fill="rgb(207,30,10)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.9369%" y="181" width="0.0808%" height="15" fill="rgb(217,104,38)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.9369%" y="165" width="0.0808%" height="15" fill="rgb(211,165,26)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.9369%" y="149" width="0.0808%" height="15" fill="rgb(247,38,9)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.9369%" y="133" width="0.0808%" height="15" fill="rgb(218,187,8)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.9369%" y="117" width="0.0808%" height="15" fill="rgb(247,94,28)" fg:x="1162" fg:w="1"/><text x="94.1869%" y="127.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (8 samples, 0.65%)</title><rect x="93.4519%" y="389" width="0.6467%" height="15" fill="rgb(218,173,30)" fg:x="1156" fg:w="8"/><text x="93.7019%" y="399.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (8 samples, 0.65%)</title><rect x="93.4519%" y="373" width="0.6467%" height="15" fill="rgb(245,45,36)" fg:x="1156" fg:w="8"/><text x="93.7019%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (8 samples, 0.65%)</title><rect x="93.4519%" y="357" width="0.6467%" height="15" fill="rgb(221,172,44)" fg:x="1156" fg:w="8"/><text x="93.7019%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.65%)</title><rect x="93.4519%" y="341" width="0.6467%" height="15" fill="rgb(222,45,12)" fg:x="1156" fg:w="8"/><text x="93.7019%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="93.9369%" y="325" width="0.1617%" height="15" fill="rgb(250,10,22)" fg:x="1162" fg:w="2"/><text x="94.1869%" y="335.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="93.9369%" y="309" width="0.1617%" height="15" fill="rgb(239,27,0)" fg:x="1162" fg:w="2"/><text x="94.1869%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.9369%" y="293" width="0.1617%" height="15" fill="rgb(223,118,22)" fg:x="1162" fg:w="2"/><text x="94.1869%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.9369%" y="277" width="0.1617%" height="15" fill="rgb(251,81,25)" fg:x="1162" fg:w="2"/><text x="94.1869%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.9369%" y="261" width="0.1617%" height="15" fill="rgb(237,225,53)" fg:x="1162" fg:w="2"/><text x="94.1869%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.9369%" y="245" width="0.1617%" height="15" fill="rgb(237,186,51)" fg:x="1162" fg:w="2"/><text x="94.1869%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.9369%" y="229" width="0.1617%" height="15" fill="rgb(247,209,11)" fg:x="1162" fg:w="2"/><text x="94.1869%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.9369%" y="213" width="0.1617%" height="15" fill="rgb(223,109,27)" fg:x="1162" fg:w="2"/><text x="94.1869%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.0178%" y="197" width="0.0808%" height="15" fill="rgb(246,181,13)" fg:x="1163" fg:w="1"/><text x="94.2678%" y="207.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (12 samples, 0.97%)</title><rect x="93.2094%" y="421" width="0.9701%" height="15" fill="rgb(234,57,44)" fg:x="1153" fg:w="12"/><text x="93.4594%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (12 samples, 0.97%)</title><rect x="93.2094%" y="405" width="0.9701%" height="15" fill="rgb(211,227,50)" fg:x="1153" fg:w="12"/><text x="93.4594%" y="415.50"></text></g><g><title>plugins_core::finding::DefaultFinder::find_top_container (1 samples, 0.08%)</title><rect x="94.0986%" y="389" width="0.0808%" height="15" fill="rgb(254,57,34)" fg:x="1164" fg:w="1"/><text x="94.3486%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="94.0986%" y="373" width="0.0808%" height="15" fill="rgb(227,212,26)" fg:x="1164" fg:w="1"/><text x="94.3486%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="94.0986%" y="357" width="0.0808%" height="15" fill="rgb(244,169,44)" fg:x="1164" fg:w="1"/><text x="94.3486%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="94.1795%" y="389" width="0.2425%" height="15" fill="rgb(236,135,50)" fg:x="1165" fg:w="3"/><text x="94.4295%" y="399.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="94.1795%" y="373" width="0.2425%" height="15" fill="rgb(241,89,30)" fg:x="1165" fg:w="3"/><text x="94.4295%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="94.1795%" y="357" width="0.2425%" height="15" fill="rgb(206,113,34)" fg:x="1165" fg:w="3"/><text x="94.4295%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="94.1795%" y="341" width="0.2425%" height="15" fill="rgb(218,104,52)" fg:x="1165" fg:w="3"/><text x="94.4295%" y="351.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="94.1795%" y="325" width="0.2425%" height="15" fill="rgb(223,82,32)" fg:x="1165" fg:w="3"/><text x="94.4295%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="94.1795%" y="309" width="0.2425%" height="15" fill="rgb(249,219,30)" fg:x="1165" fg:w="3"/><text x="94.4295%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="94.1795%" y="293" width="0.2425%" height="15" fill="rgb(233,141,21)" fg:x="1165" fg:w="3"/><text x="94.4295%" y="303.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="94.2603%" y="277" width="0.1617%" height="15" fill="rgb(252,87,44)" fg:x="1166" fg:w="2"/><text x="94.5103%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="94.3411%" y="261" width="0.0808%" height="15" fill="rgb(229,48,33)" fg:x="1167" fg:w="1"/><text x="94.5911%" y="271.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="94.3411%" y="245" width="0.0808%" height="15" fill="rgb(229,23,22)" fg:x="1167" fg:w="1"/><text x="94.5911%" y="255.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="94.3411%" y="229" width="0.0808%" height="15" fill="rgb(244,116,16)" fg:x="1167" fg:w="1"/><text x="94.5911%" y="239.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="94.3411%" y="213" width="0.0808%" height="15" fill="rgb(247,45,10)" fg:x="1167" fg:w="1"/><text x="94.5911%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.3411%" y="197" width="0.0808%" height="15" fill="rgb(228,60,29)" fg:x="1167" fg:w="1"/><text x="94.5911%" y="207.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.3411%" y="181" width="0.0808%" height="15" fill="rgb(205,129,15)" fg:x="1167" fg:w="1"/><text x="94.5911%" y="191.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.3411%" y="165" width="0.0808%" height="15" fill="rgb(206,229,4)" fg:x="1167" fg:w="1"/><text x="94.5911%" y="175.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="94.5028%" y="373" width="0.0808%" height="15" fill="rgb(249,191,30)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5028%" y="357" width="0.0808%" height="15" fill="rgb(250,84,54)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5028%" y="341" width="0.0808%" height="15" fill="rgb(207,25,53)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.5028%" y="325" width="0.0808%" height="15" fill="rgb(235,40,8)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.5028%" y="309" width="0.0808%" height="15" fill="rgb(226,169,33)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.5028%" y="293" width="0.0808%" height="15" fill="rgb(238,110,8)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5028%" y="277" width="0.0808%" height="15" fill="rgb(251,206,12)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5028%" y="261" width="0.0808%" height="15" fill="rgb(248,171,18)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.5028%" y="245" width="0.0808%" height="15" fill="rgb(213,65,46)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.5028%" y="229" width="0.0808%" height="15" fill="rgb(211,154,15)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.5028%" y="213" width="0.0808%" height="15" fill="rgb(217,75,43)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.5028%" y="197" width="0.0808%" height="15" fill="rgb(230,32,33)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5028%" y="181" width="0.0808%" height="15" fill="rgb(221,100,16)" fg:x="1169" fg:w="1"/><text x="94.7528%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.5837%" y="357" width="0.1617%" height="15" fill="rgb(212,129,47)" fg:x="1170" fg:w="2"/><text x="94.8337%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6645%" y="341" width="0.0808%" height="15" fill="rgb(239,217,47)" fg:x="1171" fg:w="1"/><text x="94.9145%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="94.7454%" y="341" width="0.0808%" height="15" fill="rgb(230,84,24)" fg:x="1172" fg:w="1"/><text x="94.9954%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7454%" y="325" width="0.0808%" height="15" fill="rgb(214,153,51)" fg:x="1172" fg:w="1"/><text x="94.9954%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8262%" y="277" width="0.0808%" height="15" fill="rgb(231,6,35)" fg:x="1173" fg:w="1"/><text x="95.0762%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8262%" y="261" width="0.0808%" height="15" fill="rgb(229,122,30)" fg:x="1173" fg:w="1"/><text x="95.0762%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8262%" y="245" width="0.0808%" height="15" fill="rgb(234,71,10)" fg:x="1173" fg:w="1"/><text x="95.0762%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8262%" y="229" width="0.0808%" height="15" fill="rgb(215,173,26)" fg:x="1173" fg:w="1"/><text x="95.0762%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8262%" y="213" width="0.0808%" height="15" fill="rgb(248,118,52)" fg:x="1173" fg:w="1"/><text x="95.0762%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.9070%" y="277" width="0.0808%" height="15" fill="rgb(237,55,46)" fg:x="1174" fg:w="1"/><text x="95.1570%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="94.9070%" y="261" width="0.0808%" height="15" fill="rgb(243,214,43)" fg:x="1174" fg:w="1"/><text x="95.1570%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9070%" y="245" width="0.0808%" height="15" fill="rgb(252,123,30)" fg:x="1174" fg:w="1"/><text x="95.1570%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.9879%" y="229" width="0.0808%" height="15" fill="rgb(215,73,39)" fg:x="1175" fg:w="1"/><text x="95.2379%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9879%" y="213" width="0.0808%" height="15" fill="rgb(251,194,29)" fg:x="1175" fg:w="1"/><text x="95.2379%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="94.9879%" y="277" width="0.1617%" height="15" fill="rgb(224,58,52)" fg:x="1175" fg:w="2"/><text x="95.2379%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.9879%" y="261" width="0.1617%" height="15" fill="rgb(248,106,46)" fg:x="1175" fg:w="2"/><text x="95.2379%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.9879%" y="245" width="0.1617%" height="15" fill="rgb(223,80,29)" fg:x="1175" fg:w="2"/><text x="95.2379%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.0687%" y="229" width="0.0808%" height="15" fill="rgb(243,137,9)" fg:x="1176" fg:w="1"/><text x="95.3187%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0687%" y="213" width="0.0808%" height="15" fill="rgb(235,121,28)" fg:x="1176" fg:w="1"/><text x="95.3187%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.1496%" y="277" width="0.0808%" height="15" fill="rgb(219,121,41)" fg:x="1177" fg:w="1"/><text x="95.3996%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.2304%" y="229" width="0.0808%" height="15" fill="rgb(251,60,6)" fg:x="1178" fg:w="1"/><text x="95.4804%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="95.3921%" y="117" width="0.0808%" height="15" fill="rgb(208,12,30)" fg:x="1180" fg:w="1"/><text x="95.6421%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.3112%" y="181" width="0.2425%" height="15" fill="rgb(207,176,36)" fg:x="1179" fg:w="3"/><text x="95.5612%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.3112%" y="165" width="0.2425%" height="15" fill="rgb(211,188,29)" fg:x="1179" fg:w="3"/><text x="95.5612%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.3921%" y="149" width="0.1617%" height="15" fill="rgb(220,184,37)" fg:x="1180" fg:w="2"/><text x="95.6421%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.3921%" y="133" width="0.1617%" height="15" fill="rgb(239,87,37)" fg:x="1180" fg:w="2"/><text x="95.6421%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4729%" y="117" width="0.0808%" height="15" fill="rgb(232,113,44)" fg:x="1181" fg:w="1"/><text x="95.7229%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4729%" y="101" width="0.0808%" height="15" fill="rgb(246,25,39)" fg:x="1181" fg:w="1"/><text x="95.7229%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.5538%" y="181" width="0.0808%" height="15" fill="rgb(247,30,13)" fg:x="1182" fg:w="1"/><text x="95.8038%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.5538%" y="165" width="0.0808%" height="15" fill="rgb(230,176,35)" fg:x="1182" fg:w="1"/><text x="95.8038%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.5538%" y="149" width="0.0808%" height="15" fill="rgb(222,23,18)" fg:x="1182" fg:w="1"/><text x="95.8038%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.5538%" y="133" width="0.0808%" height="15" fill="rgb(234,86,8)" fg:x="1182" fg:w="1"/><text x="95.8038%" y="143.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.49%)</title><rect x="95.2304%" y="277" width="0.4850%" height="15" fill="rgb(206,218,47)" fg:x="1178" fg:w="6"/><text x="95.4804%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="95.2304%" y="261" width="0.4850%" height="15" fill="rgb(229,35,31)" fg:x="1178" fg:w="6"/><text x="95.4804%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="95.2304%" y="245" width="0.4850%" height="15" fill="rgb(242,81,7)" fg:x="1178" fg:w="6"/><text x="95.4804%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="95.3112%" y="229" width="0.4042%" height="15" fill="rgb(231,11,35)" fg:x="1179" fg:w="5"/><text x="95.5612%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="95.3112%" y="213" width="0.4042%" height="15" fill="rgb(219,218,17)" fg:x="1179" fg:w="5"/><text x="95.5612%" y="223.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="95.3112%" y="197" width="0.4042%" height="15" fill="rgb(221,83,32)" fg:x="1179" fg:w="5"/><text x="95.5612%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6346%" y="181" width="0.0808%" height="15" fill="rgb(233,49,54)" fg:x="1183" fg:w="1"/><text x="95.8846%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.6346%" y="165" width="0.0808%" height="15" fill="rgb(206,18,51)" fg:x="1183" fg:w="1"/><text x="95.8846%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="95.6346%" y="149" width="0.0808%" height="15" fill="rgb(249,193,15)" fg:x="1183" fg:w="1"/><text x="95.8846%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6346%" y="133" width="0.0808%" height="15" fill="rgb(245,186,19)" fg:x="1183" fg:w="1"/><text x="95.8846%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.6346%" y="117" width="0.0808%" height="15" fill="rgb(230,4,24)" fg:x="1183" fg:w="1"/><text x="95.8846%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.6346%" y="101" width="0.0808%" height="15" fill="rgb(234,75,27)" fg:x="1183" fg:w="1"/><text x="95.8846%" y="111.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.6346%" y="85" width="0.0808%" height="15" fill="rgb(244,187,35)" fg:x="1183" fg:w="1"/><text x="95.8846%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.7963%" y="149" width="0.1617%" height="15" fill="rgb(241,97,43)" fg:x="1185" fg:w="2"/><text x="96.0463%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.7963%" y="133" width="0.1617%" height="15" fill="rgb(236,94,2)" fg:x="1185" fg:w="2"/><text x="96.0463%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.7963%" y="117" width="0.1617%" height="15" fill="rgb(231,175,7)" fg:x="1185" fg:w="2"/><text x="96.0463%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.7963%" y="101" width="0.1617%" height="15" fill="rgb(236,89,47)" fg:x="1185" fg:w="2"/><text x="96.0463%" y="111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.8771%" y="85" width="0.0808%" height="15" fill="rgb(213,191,37)" fg:x="1186" fg:w="1"/><text x="96.1271%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8771%" y="69" width="0.0808%" height="15" fill="rgb(252,0,34)" fg:x="1186" fg:w="1"/><text x="96.1271%" y="79.50"></text></g><g><title>plugins_core::tools::contained_by (17 samples, 1.37%)</title><rect x="94.7454%" y="357" width="1.3743%" height="15" fill="rgb(208,145,44)" fg:x="1172" fg:w="17"/><text x="94.9954%" y="367.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (16 samples, 1.29%)</title><rect x="94.8262%" y="341" width="1.2935%" height="15" fill="rgb(227,95,50)" fg:x="1173" fg:w="16"/><text x="95.0762%" y="351.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (16 samples, 1.29%)</title><rect x="94.8262%" y="325" width="1.2935%" height="15" fill="rgb(222,136,24)" fg:x="1173" fg:w="16"/><text x="95.0762%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (16 samples, 1.29%)</title><rect x="94.8262%" y="309" width="1.2935%" height="15" fill="rgb(218,105,10)" fg:x="1173" fg:w="16"/><text x="95.0762%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.29%)</title><rect x="94.8262%" y="293" width="1.2935%" height="15" fill="rgb(216,65,28)" fg:x="1173" fg:w="16"/><text x="95.0762%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="95.7154%" y="277" width="0.4042%" height="15" fill="rgb(229,6,28)" fg:x="1184" fg:w="5"/><text x="95.9654%" y="287.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="95.7154%" y="261" width="0.4042%" height="15" fill="rgb(222,160,42)" fg:x="1184" fg:w="5"/><text x="95.9654%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="95.7154%" y="245" width="0.4042%" height="15" fill="rgb(235,83,49)" fg:x="1184" fg:w="5"/><text x="95.9654%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.7963%" y="229" width="0.3234%" height="15" fill="rgb(236,86,36)" fg:x="1185" fg:w="4"/><text x="96.0463%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="95.7963%" y="213" width="0.3234%" height="15" fill="rgb(236,19,41)" fg:x="1185" fg:w="4"/><text x="96.0463%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.7963%" y="197" width="0.3234%" height="15" fill="rgb(217,71,31)" fg:x="1185" fg:w="4"/><text x="96.0463%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="95.7963%" y="181" width="0.3234%" height="15" fill="rgb(236,209,25)" fg:x="1185" fg:w="4"/><text x="96.0463%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.7963%" y="165" width="0.3234%" height="15" fill="rgb(247,104,21)" fg:x="1185" fg:w="4"/><text x="96.0463%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="95.9580%" y="149" width="0.1617%" height="15" fill="rgb(243,80,38)" fg:x="1187" fg:w="2"/><text x="96.2080%" y="159.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.9580%" y="133" width="0.1617%" height="15" fill="rgb(232,109,38)" fg:x="1187" fg:w="2"/><text x="96.2080%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1196%" y="325" width="0.0808%" height="15" fill="rgb(212,177,53)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1196%" y="309" width="0.0808%" height="15" fill="rgb(227,30,34)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1196%" y="293" width="0.0808%" height="15" fill="rgb(205,175,25)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1196%" y="277" width="0.0808%" height="15" fill="rgb(249,39,54)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1196%" y="261" width="0.0808%" height="15" fill="rgb(215,54,37)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1196%" y="245" width="0.0808%" height="15" fill="rgb(205,60,46)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1196%" y="229" width="0.0808%" height="15" fill="rgb(238,89,29)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1196%" y="213" width="0.0808%" height="15" fill="rgb(212,48,10)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1196%" y="197" width="0.0808%" height="15" fill="rgb(237,186,28)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1196%" y="181" width="0.0808%" height="15" fill="rgb(237,204,4)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1196%" y="165" width="0.0808%" height="15" fill="rgb(237,15,47)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.1196%" y="149" width="0.0808%" height="15" fill="rgb(244,110,25)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.1196%" y="133" width="0.0808%" height="15" fill="rgb(241,12,16)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.1196%" y="117" width="0.0808%" height="15" fill="rgb(235,25,9)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.1196%" y="101" width="0.0808%" height="15" fill="rgb(245,159,19)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1196%" y="85" width="0.0808%" height="15" fill="rgb(236,63,32)" fg:x="1189" fg:w="1"/><text x="96.3696%" y="95.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.2005%" y="293" width="0.0808%" height="15" fill="rgb(235,32,52)" fg:x="1190" fg:w="1"/><text x="96.4505%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2005%" y="277" width="0.0808%" height="15" fill="rgb(209,176,21)" fg:x="1190" fg:w="1"/><text x="96.4505%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.2813%" y="293" width="0.0808%" height="15" fill="rgb(205,90,42)" fg:x="1191" fg:w="1"/><text x="96.5313%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.2813%" y="277" width="0.0808%" height="15" fill="rgb(213,132,16)" fg:x="1191" fg:w="1"/><text x="96.5313%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.2813%" y="261" width="0.0808%" height="15" fill="rgb(232,11,22)" fg:x="1191" fg:w="1"/><text x="96.5313%" y="271.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.2813%" y="245" width="0.0808%" height="15" fill="rgb(248,167,41)" fg:x="1191" fg:w="1"/><text x="96.5313%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.2813%" y="229" width="0.0808%" height="15" fill="rgb(209,127,6)" fg:x="1191" fg:w="1"/><text x="96.5313%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2813%" y="213" width="0.0808%" height="15" fill="rgb(246,210,34)" fg:x="1191" fg:w="1"/><text x="96.5313%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.2813%" y="197" width="0.0808%" height="15" fill="rgb(238,165,13)" fg:x="1191" fg:w="1"/><text x="96.5313%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2813%" y="181" width="0.0808%" height="15" fill="rgb(233,98,15)" fg:x="1191" fg:w="1"/><text x="96.5313%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2813%" y="165" width="0.0808%" height="15" fill="rgb(215,215,51)" fg:x="1191" fg:w="1"/><text x="96.5313%" y="175.50"></text></g><g><title>plugins_core::tools::occupied_by (5 samples, 0.40%)</title><rect x="96.1196%" y="357" width="0.4042%" height="15" fill="rgb(217,161,25)" fg:x="1189" fg:w="5"/><text x="96.3696%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="96.1196%" y="341" width="0.4042%" height="15" fill="rgb(217,167,48)" fg:x="1189" fg:w="5"/><text x="96.3696%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="96.2005%" y="325" width="0.3234%" height="15" fill="rgb(205,163,34)" fg:x="1190" fg:w="4"/><text x="96.4505%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.2005%" y="309" width="0.3234%" height="15" fill="rgb(241,197,31)" fg:x="1190" fg:w="4"/><text x="96.4505%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3622%" y="293" width="0.1617%" height="15" fill="rgb(225,123,11)" fg:x="1192" fg:w="2"/><text x="96.6122%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3622%" y="277" width="0.1617%" height="15" fill="rgb(217,4,20)" fg:x="1192" fg:w="2"/><text x="96.6122%" y="287.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="96.4430%" y="261" width="0.0808%" height="15" fill="rgb(215,55,9)" fg:x="1193" fg:w="1"/><text x="96.6930%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (43 samples, 3.48%)</title><rect x="93.2094%" y="485" width="3.4762%" height="15" fill="rgb(218,165,5)" fg:x="1153" fg:w="43"/><text x="93.4594%" y="495.50">&lt;en..</text></g><g><title>kernel::plugins::mw::apply_middleware (43 samples, 3.48%)</title><rect x="93.2094%" y="469" width="3.4762%" height="15" fill="rgb(222,175,15)" fg:x="1153" fg:w="43"/><text x="93.4594%" y="479.50">ker..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (43 samples, 3.48%)</title><rect x="93.2094%" y="453" width="3.4762%" height="15" fill="rgb(223,85,34)" fg:x="1153" fg:w="43"/><text x="93.4594%" y="463.50">ker..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (43 samples, 3.48%)</title><rect x="93.2094%" y="437" width="3.4762%" height="15" fill="rgb(234,228,29)" fg:x="1153" fg:w="43"/><text x="93.4594%" y="447.50">&lt;en..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (31 samples, 2.51%)</title><rect x="94.1795%" y="421" width="2.5061%" height="15" fill="rgb(239,7,28)" fg:x="1165" fg:w="31"/><text x="94.4295%" y="431.50">ke..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (31 samples, 2.51%)</title><rect x="94.1795%" y="405" width="2.5061%" height="15" fill="rgb(252,222,53)" fg:x="1165" fg:w="31"/><text x="94.4295%" y="415.50">&lt;p..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (28 samples, 2.26%)</title><rect x="94.4220%" y="389" width="2.2635%" height="15" fill="rgb(232,146,44)" fg:x="1168" fg:w="28"/><text x="94.6720%" y="399.50">p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (26 samples, 2.10%)</title><rect x="94.5837%" y="373" width="2.1019%" height="15" fill="rgb(243,223,53)" fg:x="1170" fg:w="26"/><text x="94.8337%" y="383.50">p..</text></g><g><title>plugins_core::tools::worn_by (2 samples, 0.16%)</title><rect x="96.5238%" y="357" width="0.1617%" height="15" fill="rgb(219,128,25)" fg:x="1194" fg:w="2"/><text x="96.7738%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="96.5238%" y="341" width="0.1617%" height="15" fill="rgb(223,56,32)" fg:x="1194" fg:w="2"/><text x="96.7738%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6047%" y="325" width="0.0808%" height="15" fill="rgb(237,41,3)" fg:x="1195" fg:w="1"/><text x="96.8547%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6047%" y="309" width="0.0808%" height="15" fill="rgb(235,138,9)" fg:x="1195" fg:w="1"/><text x="96.8547%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.6047%" y="293" width="0.0808%" height="15" fill="rgb(214,131,10)" fg:x="1195" fg:w="1"/><text x="96.8547%" y="303.50"></text></g><g><title>engine::session::Session::captured (52 samples, 4.20%)</title><rect x="92.5627%" y="533" width="4.2037%" height="15" fill="rgb(229,89,7)" fg:x="1145" fg:w="52"/><text x="92.8127%" y="543.50">engin..</text></g><g><title>engine::session::logs::capture (49 samples, 3.96%)</title><rect x="92.8052%" y="517" width="3.9612%" height="15" fill="rgb(240,24,42)" fg:x="1148" fg:w="49"/><text x="93.0552%" y="527.50">engi..</text></g><g><title>tracing_core::dispatcher::with_default (44 samples, 3.56%)</title><rect x="93.2094%" y="501" width="3.5570%" height="15" fill="rgb(243,188,54)" fg:x="1153" fg:w="44"/><text x="93.4594%" y="511.50">trac..</text></g><g><title>core::ptr::drop_in_place&lt;tracing_core::dispatcher::DefaultGuard&gt; (1 samples, 0.08%)</title><rect x="96.6855%" y="485" width="0.0808%" height="15" fill="rgb(246,92,22)" fg:x="1196" fg:w="1"/><text x="96.9355%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.7664%" y="501" width="0.0808%" height="15" fill="rgb(211,176,51)" fg:x="1197" fg:w="1"/><text x="97.0164%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.8472%" y="469" width="0.1617%" height="15" fill="rgb(246,207,34)" fg:x="1198" fg:w="2"/><text x="97.0972%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9281%" y="453" width="0.0808%" height="15" fill="rgb(239,95,2)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9281%" y="437" width="0.0808%" height="15" fill="rgb(211,124,25)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9281%" y="421" width="0.0808%" height="15" fill="rgb(231,221,19)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9281%" y="405" width="0.0808%" height="15" fill="rgb(239,183,19)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.9281%" y="389" width="0.0808%" height="15" fill="rgb(221,130,29)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.9281%" y="373" width="0.0808%" height="15" fill="rgb(206,130,36)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.9281%" y="357" width="0.0808%" height="15" fill="rgb(215,70,19)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9281%" y="341" width="0.0808%" height="15" fill="rgb(244,16,43)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9281%" y="325" width="0.0808%" height="15" fill="rgb(222,115,32)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.9281%" y="309" width="0.0808%" height="15" fill="rgb(247,48,25)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.9281%" y="293" width="0.0808%" height="15" fill="rgb(226,180,51)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.9281%" y="277" width="0.0808%" height="15" fill="rgb(217,142,42)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.9281%" y="261" width="0.0808%" height="15" fill="rgb(220,178,3)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9281%" y="245" width="0.0808%" height="15" fill="rgb(217,221,4)" fg:x="1199" fg:w="1"/><text x="97.1781%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.8472%" y="485" width="0.2425%" height="15" fill="rgb(237,63,43)" fg:x="1198" fg:w="3"/><text x="97.0972%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.0089%" y="469" width="0.0808%" height="15" fill="rgb(220,57,8)" fg:x="1200" fg:w="1"/><text x="97.2589%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1706%" y="357" width="0.0808%" height="15" fill="rgb(254,186,27)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1706%" y="341" width="0.0808%" height="15" fill="rgb(251,57,28)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1706%" y="325" width="0.0808%" height="15" fill="rgb(215,228,0)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1706%" y="309" width="0.0808%" height="15" fill="rgb(237,218,39)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1706%" y="293" width="0.0808%" height="15" fill="rgb(207,2,54)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1706%" y="277" width="0.0808%" height="15" fill="rgb(232,76,50)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1706%" y="261" width="0.0808%" height="15" fill="rgb(211,85,31)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1706%" y="245" width="0.0808%" height="15" fill="rgb(223,210,27)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.1706%" y="229" width="0.0808%" height="15" fill="rgb(254,36,8)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.1706%" y="213" width="0.0808%" height="15" fill="rgb(213,4,25)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.1706%" y="197" width="0.0808%" height="15" fill="rgb(224,2,39)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.1706%" y="181" width="0.0808%" height="15" fill="rgb(208,8,39)" fg:x="1202" fg:w="1"/><text x="97.4206%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1706%" y="389" width="0.1617%" height="15" fill="rgb(216,226,3)" fg:x="1202" fg:w="2"/><text x="97.4206%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1706%" y="373" width="0.1617%" height="15" fill="rgb(249,139,31)" fg:x="1202" fg:w="2"/><text x="97.4206%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2514%" y="357" width="0.0808%" height="15" fill="rgb(242,170,35)" fg:x="1203" fg:w="1"/><text x="97.5014%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.49%)</title><rect x="97.0897%" y="437" width="0.4850%" height="15" fill="rgb(238,14,9)" fg:x="1201" fg:w="6"/><text x="97.3397%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.49%)</title><rect x="97.0897%" y="421" width="0.4850%" height="15" fill="rgb(251,81,46)" fg:x="1201" fg:w="6"/><text x="97.3397%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.49%)</title><rect x="97.0897%" y="405" width="0.4850%" height="15" fill="rgb(230,23,4)" fg:x="1201" fg:w="6"/><text x="97.3397%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="97.3323%" y="389" width="0.2425%" height="15" fill="rgb(211,85,25)" fg:x="1204" fg:w="3"/><text x="97.5823%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="97.3323%" y="373" width="0.2425%" height="15" fill="rgb(252,23,31)" fg:x="1204" fg:w="3"/><text x="97.5823%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="97.3323%" y="357" width="0.2425%" height="15" fill="rgb(234,163,38)" fg:x="1204" fg:w="3"/><text x="97.5823%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.4131%" y="341" width="0.1617%" height="15" fill="rgb(210,190,50)" fg:x="1205" fg:w="2"/><text x="97.6631%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.4131%" y="325" width="0.1617%" height="15" fill="rgb(228,158,3)" fg:x="1205" fg:w="2"/><text x="97.6631%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.4939%" y="309" width="0.0808%" height="15" fill="rgb(216,130,0)" fg:x="1206" fg:w="1"/><text x="97.7439%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4939%" y="293" width="0.0808%" height="15" fill="rgb(224,184,10)" fg:x="1206" fg:w="1"/><text x="97.7439%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4939%" y="277" width="0.0808%" height="15" fill="rgb(214,202,18)" fg:x="1206" fg:w="1"/><text x="97.7439%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.4939%" y="261" width="0.0808%" height="15" fill="rgb(213,229,54)" fg:x="1206" fg:w="1"/><text x="97.7439%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.81%)</title><rect x="97.0897%" y="485" width="0.8084%" height="15" fill="rgb(246,120,0)" fg:x="1201" fg:w="10"/><text x="97.3397%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.81%)</title><rect x="97.0897%" y="469" width="0.8084%" height="15" fill="rgb(237,6,15)" fg:x="1201" fg:w="10"/><text x="97.3397%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.81%)</title><rect x="97.0897%" y="453" width="0.8084%" height="15" fill="rgb(252,156,15)" fg:x="1201" fg:w="10"/><text x="97.3397%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="97.5748%" y="437" width="0.3234%" height="15" fill="rgb(249,78,18)" fg:x="1207" fg:w="4"/><text x="97.8248%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="97.5748%" y="421" width="0.3234%" height="15" fill="rgb(230,223,44)" fg:x="1207" fg:w="4"/><text x="97.8248%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="97.7365%" y="405" width="0.1617%" height="15" fill="rgb(230,222,32)" fg:x="1209" fg:w="2"/><text x="97.9865%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="97.7365%" y="389" width="0.1617%" height="15" fill="rgb(247,54,6)" fg:x="1209" fg:w="2"/><text x="97.9865%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="97.7365%" y="373" width="0.1617%" height="15" fill="rgb(247,115,45)" fg:x="1209" fg:w="2"/><text x="97.9865%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.8173%" y="357" width="0.0808%" height="15" fill="rgb(213,203,37)" fg:x="1210" fg:w="1"/><text x="98.0673%" y="367.50"></text></g><g><title>engine::session::internal::Added::find_refs (15 samples, 1.21%)</title><rect x="96.7664%" y="517" width="1.2126%" height="15" fill="rgb(248,188,18)" fg:x="1197" fg:w="15"/><text x="97.0164%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (14 samples, 1.13%)</title><rect x="96.8472%" y="501" width="1.1318%" height="15" fill="rgb(206,80,8)" fg:x="1198" fg:w="14"/><text x="97.0972%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8981%" y="485" width="0.0808%" height="15" fill="rgb(245,217,31)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8981%" y="469" width="0.0808%" height="15" fill="rgb(220,193,15)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.8981%" y="453" width="0.0808%" height="15" fill="rgb(226,7,19)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.8981%" y="437" width="0.0808%" height="15" fill="rgb(222,145,31)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.8981%" y="421" width="0.0808%" height="15" fill="rgb(241,193,36)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.8981%" y="405" width="0.0808%" height="15" fill="rgb(225,123,33)" fg:x="1211" fg:w="1"/><text x="98.1481%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9790%" y="485" width="0.0808%" height="15" fill="rgb(246,136,38)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9790%" y="469" width="0.0808%" height="15" fill="rgb(243,56,24)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9790%" y="453" width="0.0808%" height="15" fill="rgb(215,147,2)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9790%" y="437" width="0.0808%" height="15" fill="rgb(209,155,27)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9790%" y="421" width="0.0808%" height="15" fill="rgb(222,177,11)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.9790%" y="405" width="0.0808%" height="15" fill="rgb(212,227,15)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.9790%" y="389" width="0.0808%" height="15" fill="rgb(214,138,20)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.9790%" y="373" width="0.0808%" height="15" fill="rgb(221,170,31)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.9790%" y="357" width="0.0808%" height="15" fill="rgb(253,207,5)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.9790%" y="341" width="0.0808%" height="15" fill="rgb(212,64,37)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.9790%" y="325" width="0.0808%" height="15" fill="rgb(208,113,51)" fg:x="1212" fg:w="1"/><text x="98.2290%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.9790%" y="501" width="0.1617%" height="15" fill="rgb(237,15,5)" fg:x="1212" fg:w="2"/><text x="98.2290%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0598%" y="485" width="0.0808%" height="15" fill="rgb(238,33,18)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0598%" y="469" width="0.0808%" height="15" fill="rgb(253,206,50)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0598%" y="453" width="0.0808%" height="15" fill="rgb(242,158,43)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0598%" y="437" width="0.0808%" height="15" fill="rgb(213,125,27)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0598%" y="421" width="0.0808%" height="15" fill="rgb(233,161,31)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0598%" y="405" width="0.0808%" height="15" fill="rgb(218,135,6)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0598%" y="389" width="0.0808%" height="15" fill="rgb(222,73,53)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0598%" y="373" width="0.0808%" height="15" fill="rgb(229,66,53)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0598%" y="357" width="0.0808%" height="15" fill="rgb(208,128,19)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0598%" y="341" width="0.0808%" height="15" fill="rgb(235,70,27)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0598%" y="325" width="0.0808%" height="15" fill="rgb(241,130,30)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0598%" y="309" width="0.0808%" height="15" fill="rgb(222,57,48)" fg:x="1213" fg:w="1"/><text x="98.3098%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.1407%" y="485" width="0.0808%" height="15" fill="rgb(225,204,29)" fg:x="1214" fg:w="1"/><text x="98.3907%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="98.1407%" y="501" width="0.1617%" height="15" fill="rgb(240,196,35)" fg:x="1214" fg:w="2"/><text x="98.3907%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.2215%" y="485" width="0.0808%" height="15" fill="rgb(215,150,16)" fg:x="1215" fg:w="1"/><text x="98.4715%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2215%" y="469" width="0.0808%" height="15" fill="rgb(209,170,13)" fg:x="1215" fg:w="1"/><text x="98.4715%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.2215%" y="453" width="0.0808%" height="15" fill="rgb(235,75,31)" fg:x="1215" fg:w="1"/><text x="98.4715%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2215%" y="437" width="0.0808%" height="15" fill="rgb(252,1,47)" fg:x="1215" fg:w="1"/><text x="98.4715%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3023%" y="341" width="0.0808%" height="15" fill="rgb(241,2,36)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3023%" y="325" width="0.0808%" height="15" fill="rgb(236,191,4)" fg:x="1216" fg:w="1"/><text x="98.5523%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.3023%" y="405" width="0.1617%" height="15" fill="rgb(212,65,35)" fg:x="1216" fg:w="2"/><text x="98.5523%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3023%" y="389" width="0.1617%" height="15" fill="rgb(209,49,33)" fg:x="1216" fg:w="2"/><text x="98.5523%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.3023%" y="373" width="0.1617%" height="15" fill="rgb(208,36,46)" fg:x="1216" fg:w="2"/><text x="98.5523%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3023%" y="357" width="0.1617%" height="15" fill="rgb(210,125,2)" fg:x="1216" fg:w="2"/><text x="98.5523%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.3832%" y="341" width="0.0808%" height="15" fill="rgb(225,62,6)" fg:x="1217" fg:w="1"/><text x="98.6332%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3832%" y="325" width="0.0808%" height="15" fill="rgb(210,54,27)" fg:x="1217" fg:w="1"/><text x="98.6332%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3832%" y="309" width="0.0808%" height="15" fill="rgb(249,189,52)" fg:x="1217" fg:w="1"/><text x="98.6332%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="98.3832%" y="293" width="0.0808%" height="15" fill="rgb(225,134,40)" fg:x="1217" fg:w="1"/><text x="98.6332%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3832%" y="277" width="0.0808%" height="15" fill="rgb(206,13,37)" fg:x="1217" fg:w="1"/><text x="98.6332%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.4640%" y="373" width="0.0808%" height="15" fill="rgb(232,114,28)" fg:x="1218" fg:w="1"/><text x="98.7140%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="98.3023%" y="501" width="0.4042%" height="15" fill="rgb(253,215,8)" fg:x="1216" fg:w="5"/><text x="98.5523%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="98.3023%" y="485" width="0.4042%" height="15" fill="rgb(254,64,19)" fg:x="1216" fg:w="5"/><text x="98.5523%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.3023%" y="469" width="0.4042%" height="15" fill="rgb(242,18,46)" fg:x="1216" fg:w="5"/><text x="98.5523%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="98.3023%" y="453" width="0.4042%" height="15" fill="rgb(239,192,30)" fg:x="1216" fg:w="5"/><text x="98.5523%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.3023%" y="437" width="0.4042%" height="15" fill="rgb(232,73,14)" fg:x="1216" fg:w="5"/><text x="98.5523%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.3023%" y="421" width="0.4042%" height="15" fill="rgb(225,51,9)" fg:x="1216" fg:w="5"/><text x="98.5523%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.4640%" y="405" width="0.2425%" height="15" fill="rgb(242,217,54)" fg:x="1218" fg:w="3"/><text x="98.7140%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4640%" y="389" width="0.2425%" height="15" fill="rgb(216,93,3)" fg:x="1218" fg:w="3"/><text x="98.7140%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.5449%" y="373" width="0.1617%" height="15" fill="rgb(230,119,33)" fg:x="1219" fg:w="2"/><text x="98.7949%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5449%" y="357" width="0.1617%" height="15" fill="rgb(238,170,27)" fg:x="1219" fg:w="2"/><text x="98.7949%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5449%" y="341" width="0.1617%" height="15" fill="rgb(229,8,2)" fg:x="1219" fg:w="2"/><text x="98.7949%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.6257%" y="325" width="0.0808%" height="15" fill="rgb(205,214,42)" fg:x="1220" fg:w="1"/><text x="98.8757%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6257%" y="309" width="0.0808%" height="15" fill="rgb(245,113,1)" fg:x="1220" fg:w="1"/><text x="98.8757%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6257%" y="293" width="0.0808%" height="15" fill="rgb(252,50,2)" fg:x="1220" fg:w="1"/><text x="98.8757%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6257%" y="277" width="0.0808%" height="15" fill="rgb(225,122,24)" fg:x="1220" fg:w="1"/><text x="98.8757%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7065%" y="405" width="0.0808%" height="15" fill="rgb(234,129,31)" fg:x="1221" fg:w="1"/><text x="98.9565%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7065%" y="389" width="0.0808%" height="15" fill="rgb(219,177,4)" fg:x="1221" fg:w="1"/><text x="98.9565%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (26 samples, 2.10%)</title><rect x="96.7664%" y="533" width="2.1019%" height="15" fill="rgb(225,142,27)" fg:x="1197" fg:w="26"/><text x="97.0164%" y="543.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.89%)</title><rect x="97.9790%" y="517" width="0.8892%" height="15" fill="rgb(205,107,51)" fg:x="1212" fg:w="11"/><text x="98.2290%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="98.7065%" y="501" width="0.1617%" height="15" fill="rgb(236,223,15)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="511.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.7065%" y="485" width="0.1617%" height="15" fill="rgb(235,133,11)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.7065%" y="469" width="0.1617%" height="15" fill="rgb(247,172,13)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7065%" y="453" width="0.1617%" height="15" fill="rgb(233,191,41)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.7065%" y="437" width="0.1617%" height="15" fill="rgb(250,65,16)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7065%" y="421" width="0.1617%" height="15" fill="rgb(206,10,27)" fg:x="1221" fg:w="2"/><text x="98.9565%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7874%" y="405" width="0.0808%" height="15" fill="rgb(212,96,22)" fg:x="1222" fg:w="1"/><text x="99.0374%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7874%" y="389" width="0.0808%" height="15" fill="rgb(206,50,0)" fg:x="1222" fg:w="1"/><text x="99.0374%" y="399.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="98.9491%" y="469" width="0.0808%" height="15" fill="rgb(249,105,52)" fg:x="1224" fg:w="1"/><text x="99.1991%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.0299%" y="405" width="0.0808%" height="15" fill="rgb(216,93,51)" fg:x="1225" fg:w="1"/><text x="99.2799%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="98.9491%" y="485" width="0.2425%" height="15" fill="rgb(217,172,13)" fg:x="1224" fg:w="3"/><text x="99.1991%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.0299%" y="469" width="0.1617%" height="15" fill="rgb(235,199,38)" fg:x="1225" fg:w="2"/><text x="99.2799%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.0299%" y="453" width="0.1617%" height="15" fill="rgb(221,97,33)" fg:x="1225" fg:w="2"/><text x="99.2799%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.0299%" y="437" width="0.1617%" height="15" fill="rgb(205,156,50)" fg:x="1225" fg:w="2"/><text x="99.2799%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.0299%" y="421" width="0.1617%" height="15" fill="rgb(215,142,19)" fg:x="1225" fg:w="2"/><text x="99.2799%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1108%" y="405" width="0.0808%" height="15" fill="rgb(232,170,7)" fg:x="1226" fg:w="1"/><text x="99.3608%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1108%" y="389" width="0.0808%" height="15" fill="rgb(223,50,17)" fg:x="1226" fg:w="1"/><text x="99.3608%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1108%" y="373" width="0.0808%" height="15" fill="rgb(230,103,46)" fg:x="1226" fg:w="1"/><text x="99.3608%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="99.1916%" y="485" width="0.1617%" height="15" fill="rgb(254,30,34)" fg:x="1227" fg:w="2"/><text x="99.4416%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.1916%" y="469" width="0.1617%" height="15" fill="rgb(235,198,1)" fg:x="1227" fg:w="2"/><text x="99.4416%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="99.1916%" y="453" width="0.1617%" height="15" fill="rgb(217,105,47)" fg:x="1227" fg:w="2"/><text x="99.4416%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="99.2724%" y="437" width="0.0808%" height="15" fill="rgb(231,18,12)" fg:x="1228" fg:w="1"/><text x="99.5224%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="99.4341%" y="437" width="0.0808%" height="15" fill="rgb(218,196,1)" fg:x="1230" fg:w="1"/><text x="99.6841%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="99.5150%" y="437" width="0.1617%" height="15" fill="rgb(210,32,3)" fg:x="1231" fg:w="2"/><text x="99.7650%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="99.3533%" y="485" width="0.4042%" height="15" fill="rgb(227,178,30)" fg:x="1229" fg:w="5"/><text x="99.6033%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="99.3533%" y="469" width="0.4042%" height="15" fill="rgb(231,140,27)" fg:x="1229" fg:w="5"/><text x="99.6033%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="99.3533%" y="453" width="0.4042%" height="15" fill="rgb(206,66,35)" fg:x="1229" fg:w="5"/><text x="99.6033%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.6766%" y="437" width="0.0808%" height="15" fill="rgb(212,34,2)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6766%" y="421" width="0.0808%" height="15" fill="rgb(207,201,33)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.6766%" y="405" width="0.0808%" height="15" fill="rgb(221,135,32)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6766%" y="389" width="0.0808%" height="15" fill="rgb(206,77,31)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6766%" y="373" width="0.0808%" height="15" fill="rgb(252,198,50)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6766%" y="357" width="0.0808%" height="15" fill="rgb(206,79,27)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6766%" y="341" width="0.0808%" height="15" fill="rgb(228,108,9)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6766%" y="325" width="0.0808%" height="15" fill="rgb(213,9,39)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6766%" y="309" width="0.0808%" height="15" fill="rgb(252,51,13)" fg:x="1233" fg:w="1"/><text x="99.9266%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.7575%" y="421" width="0.0808%" height="15" fill="rgb(218,202,39)" fg:x="1234" fg:w="1"/><text x="100.0075%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.7575%" y="405" width="0.0808%" height="15" fill="rgb(214,122,21)" fg:x="1234" fg:w="1"/><text x="100.0075%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.7575%" y="389" width="0.0808%" height="15" fill="rgb(217,205,48)" fg:x="1234" fg:w="1"/><text x="100.0075%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.7575%" y="373" width="0.0808%" height="15" fill="rgb(230,216,13)" fg:x="1234" fg:w="1"/><text x="100.0075%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.7575%" y="357" width="0.0808%" height="15" fill="rgb(249,118,4)" fg:x="1234" fg:w="1"/><text x="100.0075%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7575%" y="341" width="0.0808%" height="15" fill="rgb(212,207,40)" fg:x="1234" fg:w="1"/><text x="100.0075%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.8383%" y="421" width="0.0808%" height="15" fill="rgb(217,156,26)" fg:x="1235" fg:w="1"/><text x="100.0883%" y="431.50"></text></g><g><title>all (1,237 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(226,86,34)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="927.50"></text></g><g><title>simple-2ed4cb03 (1,237 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(217,111,30)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="911.50">simple-2ed4cb03</text></g><g><title>_start (1,237 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(228,64,18)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="895.50">_start</text></g><g><title>__libc_start_main (1,237 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(254,217,48)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="879.50">__libc_start_main</text></g><g><title>main (1,237 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(226,156,48)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (1,237 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(236,168,20)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,237 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(239,210,33)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,237 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(242,85,17)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,237 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(221,196,15)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="799.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,237 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(249,76,21)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="783.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,237 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(243,67,29)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,237 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(240,159,2)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,237 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(244,64,3)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,237 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(220,86,40)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="719.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,237 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(222,194,51)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="703.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,237 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(207,154,19)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,237 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(206,178,36)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="671.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,237 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(218,8,24)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="655.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,237 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(226,83,41)" fg:x="0" fg:w="1237"/><text x="0.2500%" y="639.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (416 samples, 33.63%)</title><rect x="66.3703%" y="613" width="33.6297%" height="15" fill="rgb(224,23,22)" fg:x="821" fg:w="416"/><text x="66.6203%" y="623.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::rou..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (416 samples, 33.63%)</title><rect x="66.3703%" y="597" width="33.6297%" height="15" fill="rgb(218,198,45)" fg:x="821" fg:w="416"/><text x="66.6203%" y="607.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (416 samples, 33.63%)</title><rect x="66.3703%" y="581" width="33.6297%" height="15" fill="rgb(249,147,41)" fg:x="821" fg:w="416"/><text x="66.6203%" y="591.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (94 samples, 7.60%)</title><rect x="92.4010%" y="565" width="7.5990%" height="15" fill="rgb(244,224,13)" fg:x="1143" fg:w="94"/><text x="92.6510%" y="575.50">engine::se..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (94 samples, 7.60%)</title><rect x="92.4010%" y="549" width="7.5990%" height="15" fill="rgb(225,97,27)" fg:x="1143" fg:w="94"/><text x="92.6510%" y="559.50">engine::se..</text></g><g><title>kernel::model::EntityPtrResolver::world (14 samples, 1.13%)</title><rect x="98.8682%" y="533" width="1.1318%" height="15" fill="rgb(254,64,0)" fg:x="1223" fg:w="14"/><text x="99.1182%" y="543.50"></text></g><g><title>engine::session::Session::load_entity (14 samples, 1.13%)</title><rect x="98.8682%" y="517" width="1.1318%" height="15" fill="rgb(208,130,43)" fg:x="1223" fg:w="14"/><text x="99.1182%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.13%)</title><rect x="98.8682%" y="501" width="1.1318%" height="15" fill="rgb(247,91,25)" fg:x="1223" fg:w="14"/><text x="99.1182%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="99.7575%" y="485" width="0.2425%" height="15" fill="rgb(215,218,42)" fg:x="1234" fg:w="3"/><text x="100.0075%" y="495.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="99.7575%" y="469" width="0.2425%" height="15" fill="rgb(233,9,24)" fg:x="1234" fg:w="3"/><text x="100.0075%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.7575%" y="453" width="0.2425%" height="15" fill="rgb(252,105,38)" fg:x="1234" fg:w="3"/><text x="100.0075%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.7575%" y="437" width="0.2425%" height="15" fill="rgb(225,40,49)" fg:x="1234" fg:w="3"/><text x="100.0075%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.9192%" y="421" width="0.0808%" height="15" fill="rgb(232,196,19)" fg:x="1236" fg:w="1"/><text x="100.1692%" y="431.50"></text></g></svg></svg>